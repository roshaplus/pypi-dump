{
  "info": {
    "author": "Pavel Sofroniev",
    "author_email": "pavelsof@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "=======\nipalint\n=======\n\nChecks linguistic datasets for IPA errors and inconsistencies. Usage::\n\n    ipalint mydataset\n\nThis will either (1) print the IPA errors found in the dataset; (2) print\nnothing, meaning it found no errors; or (3) print an error message if it fails\nto read the file. In no case will the input file be modified.\n\nThe linter should be able to read any well-formed csv/tsv/tab dataset, assuming\nthat there is an IPA data column. It also reads table-less lines and handles\npipes; thus, even if you have a less common format like `this one`_, you can\nstill lint it by doing something like::\n\n    cat KSL.qlc | grep \"^[[:digit:]]\" | cut -f 6 | ipalint\n\n\noptional arguments\n==================\n\n``--col COL`` specifies the column containing the IPA data; this can be either\nthe column name or the column index (starting from 0). If this option is not\nset, ipalint will try to guess the column by looking at the column names.\n\n``--no-header`` treats the first row as data. The default is to treat the first\nrow as header and not lint it.\n\n``--ignore-nfd`` ignores errors about an IPA string that are not in Unicode's\nNFD normal form. With very few exceptions, IPA diacritics should be combining\ncharacters. However, in some situations this might be irrelevant for your\npurposes and you can ignore these errors.\n\n``--ignore-ws`` ignores errors about leading or trailing whitespace in IPA\nstrings. If combined with the previous flag, ipalint will only report errors\nabout symbols that are not part of the IPA chart.\n\n``--linewise`` outputs (line number, error message) tuples, one such tuple per\nline of output. The default is to output the set of errors and include the list\nof line numbers to the right of each error.\n\n``--no-lines`` only outputs the set of errors found in the data. Useful when\nyou want a quick glimpse of what might be wrong. This flag is ignored if the\nprevious one is set.\n\n\nwhat is checked\n===============\n\n* Ensures that all the characters of the dataset's IPA strings are in the `IPA\n  chart`_ (the 2015 revision). The only accepted non-IPA character is space.\n* Ensures that the strings conform to Unicode's `Normalisation Form D`_ (NFD).\n* Ensures that the strings do not start or end with unnecessary whitespace.\n\n\ninstallation\n============\n\nThis is a standard Python 3 package without dependencies. Even thought it is\nnot yet offered in the Cheese Shop, you can install it by cloning this repo\n(you can delete it afterwards) and doing this::\n\n    python3 setup.py test\n    python3 setup.py install\n\nOf course, you can install it within a virtualenv/venv as well.\n\n\nsimilar projects\n================\n\n* ipapy_ checks and cleans IPA strings.\n* lingpy_ includes some tools for analysing IPA strings.\n\n\nlicence\n=======\n\nMIT. Do as you please and praise the snake gods.\n\n.. _`this one`: https://github.com/lingpy/lingpy/blob/facf0230c70a23cde3883a6f904445bb965878f8/lingpy/tests/test_data/KSL.qlc\n.. _`IPA chart`: https://www.internationalphoneticassociation.org/sites/default/files/phonsymbol.pdf\n.. _`Normalisation Form D`: http://www.unicode.org/reports/tr15/\n.. _`ipapy`: https://pypi.python.org/pypi/ipapy\n.. _`lingpy`: http://lingpy.org/\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/pavelsof/ipalint",
    "keywords": "IPA lint",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ipalint",
    "platform": "",
    "project_url": "https://pypi.org/project/ipalint/",
    "release_url": "https://pypi.org/project/ipalint/0.0.0/",
    "requires_python": "",
    "summary": "simple linter that checks datasets for IPA errors and inconsistencies",
    "version": "0.0.0"
  },
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d614f8ea6ba71faa2ebb2ca6d71f1033",
          "sha256": "a415dee677d4a38167c781af2d8610b86d30fc93fcd6aaf4380fe1ba90ad3339"
        },
        "downloads": 0,
        "filename": "ipalint-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d614f8ea6ba71faa2ebb2ca6d71f1033",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 31215,
        "upload_time": "2017-05-25T14:05:58",
        "url": "https://files.pythonhosted.org/packages/ad/f9/f1289e93c3930ae164ff3de7ee625b2f9723bcc9a48458ddbcc78e6244f3/ipalint-0.0.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "878224f9d009c823e2d34cce42a13c5c",
          "sha256": "1c4ec22aed6484191084207d4a17ab033712c26f87190806a79546c514a4e61e"
        },
        "downloads": 0,
        "filename": "ipalint-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "878224f9d009c823e2d34cce42a13c5c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23845,
        "upload_time": "2017-05-25T14:06:00",
        "url": "https://files.pythonhosted.org/packages/ae/33/97f1876f740f93ca374c5a9cf952ff6f8f924fc1dd34e1ec4847539df99a/ipalint-0.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d614f8ea6ba71faa2ebb2ca6d71f1033",
        "sha256": "a415dee677d4a38167c781af2d8610b86d30fc93fcd6aaf4380fe1ba90ad3339"
      },
      "downloads": 0,
      "filename": "ipalint-0.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d614f8ea6ba71faa2ebb2ca6d71f1033",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 31215,
      "upload_time": "2017-05-25T14:05:58",
      "url": "https://files.pythonhosted.org/packages/ad/f9/f1289e93c3930ae164ff3de7ee625b2f9723bcc9a48458ddbcc78e6244f3/ipalint-0.0.0-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "878224f9d009c823e2d34cce42a13c5c",
        "sha256": "1c4ec22aed6484191084207d4a17ab033712c26f87190806a79546c514a4e61e"
      },
      "downloads": 0,
      "filename": "ipalint-0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "878224f9d009c823e2d34cce42a13c5c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 23845,
      "upload_time": "2017-05-25T14:06:00",
      "url": "https://files.pythonhosted.org/packages/ae/33/97f1876f740f93ca374c5a9cf952ff6f8f924fc1dd34e1ec4847539df99a/ipalint-0.0.0.tar.gz"
    }
  ]
}