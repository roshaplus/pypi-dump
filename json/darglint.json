{
  "info": {
    "author": "Terrence Reilly",
    "author_email": "terrencepreilly@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Documentation",
      "Topic :: Software Development :: Quality Assurance"
    ],
    "description": "Darglint\n========\n\nA limited docstring linter which checks that function/method parameters\nare defined in their docstrings. *Darglint* expects docstrings to be\nformatted using the `Google Python Style\nGuide <https://google.github.io/styleguide/pyguide.html>`__.\n\n*Darglint* is in a very early stage, and fails for a lot of things.\nCertain features, such as a robust command-line interface, still do not\nexist.\n\nInstallation\n------------\n\nTo install *darglint*, use pip.\n\n::\n\n    pip install darglint\n\nOr, clone the repository, ``cd`` to the directory, and\n\n::\n\n    pip install .\n\nUsage\n-----\n\nCommand Line use\n~~~~~~~~~~~~~~~~\n\nGiven a python source file, ``serializers.py``, you would check the\ndocstrings as follows:\n\n::\n\n    darglint serializers.py\n\nYou can give an optional verbosity setting to *darglint*. For example,\n\n::\n\n    darglint -v 3 *.py\n\nWould give the most verbose warnings for each python module in the\ncurrent directory.\n\nIgnoring Errors in a Docstring\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can ignore specific errors in a particular docstring. The syntax is\nmuch like that of *pycodestyle*, etc. It generally takes the from of:\n\n::\n\n    # noqa: <error> <argument>\n\nWhere ``<error>`` is the particular error to ignore (``I402``, or\n``I201`` for example), and ``<argument>`` is what (if anything) the\nignore statement refers to (if nothing, then it is not specified).\n\nLet us say that we want to ignore a missing return statement in the\nfollowing docstring:\n\n::\n\n    def we_dont_want_a_returns_section():\n      \"\"\"Returns the value, 3.\n\n      # noqa: I201\n\n      \"\"\"\n      return 3\n\nWe put the ``noqa`` anywhere in the top level of the docstring. However,\nthis won't work if we are missing something more specific, like a\nparameter. We may not want to ignore all missing parameters, either,\njust one particular one. For example, we may be writing a function that\ntakes a class instance as self. (Say, in a bound *celery* task.) Then we\nwould do something like:\n\n::\n\n    def a_bound_function(self, arg1):\n      \"\"\"Do something interesting.\n\n      Args:\n        arg1: The first argument.\n\n      # noqa: I101 arg1\n\n      \"\"\"\n      arg1.execute(self)\n\nSo, the argument comes to the right of the error.\n\nWe may also want to mark excess documentation as being okay. For\nexample, we may not want to explicitly catch and raise a\n``ZeroDivisionError``. We could do the following:\n\n::\n\n    def always_raises_exception(x):\n        \"\"\"Raise a zero division error or type error.o\n\n        Args:\n          x: The argument which could be a number or could not be.\n\n        Raises:\n          ZeroDivisionError: If x is a number.  # noqa: I402\n          TypeError: If x is not a number.  # noqa: I402\n\n        \"\"\"\n        x / 0\n\nSo, in this case, the argument for ``noqa`` is really all the way to the\nleft. (Or whatever description we are parsing.) We could also have put\nit on its own line, as ``# noqa: I402 ZeroDivisionError``.\n\nFeatures planned and implemented\n--------------------------------\n\nThe below list is all that defines the current roadmap for *darglint*.\nIt is roughly sorted in order of importance.\n\n-  [x] Function definitions can be checked.\n-  [x] Methods definitions of top-level class can be checked.\n-  [x] Line number printout for function/method definition.\n-  [x] Add parsing of \"Returns\" section, and warn if differing from\n   function definition.\n-  [x] Add command line interface.\n-  [x] Add multiple options for output.\n-  [x] Add checks for \"Raises\" section, like \"Args\". Any exceptions\n   raised in the body should be documented.\n-  [x] Add checks for \"Yields\" section, like \"Returns\".\n-  [x] Add numbers to errors, ability to silence certain errors. (Use\n   same formatting as *pycodestyle*.)\n-  [ ] Add TOML configuration file (use same interface as *pydoclint*,\n   etc.)\n-  [ ] Add type hint integration. If an argument has a type hint, then\n   the description of the argument, if it has a type, should match that.\n-  [ ] Add support for python versions earlier than 3.6.\n-  [ ] Syntastic support. (Syntastic is not accepting new checkers until\n   their next API stabilizes, so this may take some time.)\n-  [ ] Check super classes of errors/exceptions raised to allow for more\n   general descriptions in the interface.\n\nDevelopment\n-----------\n\nInstall ``darglint``. First, clone the repository:\n\n::\n\n    git clone https://github.com/terrencepreilly/darglint.git\n\n``cd`` into the directory, create a virtual environment (optional), then\nsetup:\n\n::\n\n    cd darglint/\n    virtualenv -p python3.6 .env\n    source .env/bin/activate\n    pip install -e .\n\nYou can run the tests using\n\n::\n\n    python setup.py test\n\nOr, install ``pytest`` manually, ``cd`` to the project's root directory,\nand run\n\n::\n\n    pytest\n\nContributions welcome.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/terrencepreilly/darglint",
    "keywords": "documentation linter development",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "darglint",
    "platform": "",
    "project_url": "https://pypi.org/project/darglint/",
    "release_url": "https://pypi.org/project/darglint/0.0.5/",
    "requires_dist": [],
    "requires_python": ">=3.6",
    "summary": "A utility for ensuring Google-style docstringsstay up to date with the source code.",
    "version": "0.0.5"
  },
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "988660144a47cbe01235936a2f241cfa",
          "sha256": "8db5bd4f0c4989ff4d3d102471292309181cf7cb308c27736a2d44b444c130e0"
        },
        "downloads": -1,
        "filename": "darglint-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "988660144a47cbe01235936a2f241cfa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 9518,
        "upload_time": "2017-10-01T23:09:40",
        "url": "https://files.pythonhosted.org/packages/c4/13/d0b576077bbe6b5df70a9dff522b54b12566f676cbc774fe8f9cb46e9ebc/darglint-0.0.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3f31cacb4c8e4f29477944c65b36f746",
          "sha256": "e238fe12c1c3d98fa1b983a299c3fce78d9d227c7a81f4cf388a9bfc03144532"
        },
        "downloads": -1,
        "filename": "darglint-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3f31cacb4c8e4f29477944c65b36f746",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7164,
        "upload_time": "2017-10-01T23:09:42",
        "url": "https://files.pythonhosted.org/packages/05/7a/948a490f057898ffe0864326c9266b79e01056a738de942d8c3ccc65acf5/darglint-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8b9f67a8c70af495e89d40253f49408b",
          "sha256": "6f403f6845ccb14673b2a45964c69787dcc1d4cd3d8cb33690744fd723a1c632"
        },
        "downloads": -1,
        "filename": "darglint-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b9f67a8c70af495e89d40253f49408b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 15348,
        "upload_time": "2017-10-07T14:53:43",
        "url": "https://files.pythonhosted.org/packages/74/a6/db1e292890addb195b9a3ff19b7558cfa78daeb776995031494ede119c2b/darglint-0.0.3-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4235922146fedfb4b1adbd22684b3e52",
          "sha256": "1f75a6adffb23501e18fff7448be102b34e5b941cc23c3e63ffe5e2e7a7788fa"
        },
        "downloads": -1,
        "filename": "darglint-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4235922146fedfb4b1adbd22684b3e52",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11940,
        "upload_time": "2017-10-07T14:53:45",
        "url": "https://files.pythonhosted.org/packages/b3/ef/580a134e6f38cef5543b4f411b03dd44e14d5c7ba1f7e11555167aa161df/darglint-0.0.3.tar.gz"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8e18d2bd7b950448ff61895a7358907e",
          "sha256": "8a71f114d77f84e51b7ad8d77b92302efd89644b930648c63b090946075b1d9d"
        },
        "downloads": -1,
        "filename": "darglint-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e18d2bd7b950448ff61895a7358907e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 15407,
        "upload_time": "2017-10-07T15:00:57",
        "url": "https://files.pythonhosted.org/packages/25/76/7f9f6013fa3b4ce0a5075f483f45d164be360aadb228e58ee2df475cfc38/darglint-0.0.4-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7c03f64c48e1af074fb6d682b0efea90",
          "sha256": "ddf68128cacc185d77d1bf52499468488b32f454ffef3633451e6e6cafdc8844"
        },
        "downloads": -1,
        "filename": "darglint-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7c03f64c48e1af074fb6d682b0efea90",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11977,
        "upload_time": "2017-10-07T15:00:58",
        "url": "https://files.pythonhosted.org/packages/0b/9c/b209e0768bd075c16a8e72c25471f6c2f154b5ecf9674a79c1f6f70ead42/darglint-0.0.4.tar.gz"
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a5169bd7965c62e57b8ea336ddd6e8fb",
          "sha256": "ee1f4da7e133fdda71d03046a5c45e41500ac0f73b5e8cfdf5854f37d8b8d366"
        },
        "downloads": -1,
        "filename": "darglint-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5169bd7965c62e57b8ea336ddd6e8fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 20678,
        "upload_time": "2017-10-14T14:50:32",
        "url": "https://files.pythonhosted.org/packages/73/a1/253bb1506ae31ea8465ebf102539507078b0577b04bffb9cf09b86d42324/darglint-0.0.5-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2b573a89357273fc75bc78f5baca620d",
          "sha256": "c14006603081e41d5c6b57d7e9e58e95498feb1384c427699889b47597c58cd0"
        },
        "downloads": -1,
        "filename": "darglint-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2b573a89357273fc75bc78f5baca620d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16627,
        "upload_time": "2017-10-14T14:50:34",
        "url": "https://files.pythonhosted.org/packages/e5/c0/cd3aebd2226df07ba1c797e6172f71138f45ba2459395aad95de887e4edc/darglint-0.0.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a5169bd7965c62e57b8ea336ddd6e8fb",
        "sha256": "ee1f4da7e133fdda71d03046a5c45e41500ac0f73b5e8cfdf5854f37d8b8d366"
      },
      "downloads": -1,
      "filename": "darglint-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a5169bd7965c62e57b8ea336ddd6e8fb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 20678,
      "upload_time": "2017-10-14T14:50:32",
      "url": "https://files.pythonhosted.org/packages/73/a1/253bb1506ae31ea8465ebf102539507078b0577b04bffb9cf09b86d42324/darglint-0.0.5-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "2b573a89357273fc75bc78f5baca620d",
        "sha256": "c14006603081e41d5c6b57d7e9e58e95498feb1384c427699889b47597c58cd0"
      },
      "downloads": -1,
      "filename": "darglint-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "2b573a89357273fc75bc78f5baca620d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 16627,
      "upload_time": "2017-10-14T14:50:34",
      "url": "https://files.pythonhosted.org/packages/e5/c0/cd3aebd2226df07ba1c797e6172f71138f45ba2459395aad95de887e4edc/darglint-0.0.5.tar.gz"
    }
  ]
}