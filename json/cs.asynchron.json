{
  "info": {
    "author": "Cameron Simpson",
    "author_email": "cs@zip.com.au",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Asynchron and friends.\n----------------------\n\nAn Asynchron is the base class for several callable subclasses which will receive values at a later point in time, and can also be used standalone without subclassing.\n\nA call to an Asynchron will block until the value is received or the Asynchron is cancelled, which will raise an exception in the caller.\nAn Asynchron may be called by multiple users, before or after the value has been delivered; if the value has been delivered the caller returns with it immediately.\nAn Asynchron's state may be inspected (pending, running, ready, cancelled).\nCallbacks can be registered via an Asychron's .notify method.\n\nAn incomplete Asynchron can be told to call a function to compute its value; the function return will be stored as the value unless the function raises an exception, in which case the exception information is recorded instead. If an exception occurred, it will be reraised for any caller of the Asynchron.\n\nTrite example::\n\n  A = Asynchron(name=\"my demo\")\n\n  Thread 1:\n    value = A()\n    # blocks...\n    print(value)\n    # prints 3 once Thread 2 (below) assigns to it\n\n  Thread 2:\n    A.result = 3\n\n  Thread 3:\n    value = A()\n    # returns immediately with 3\n\nYou can also collect multiple Asynchrons in completion order using the report() function::\n\n  As = [ ... list of Asynchrons or whatever type ... ]\n  ...\n  for A in report(As):\n    x = A()     # collect result, will return immediately\n    print(x)    # print result",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://bitbucket.org/cameron_simpson/css/commits/all",
    "keywords": "python2,python3",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "cs.asynchron",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/cs.asynchron/",
    "release_url": "https://pypi.org/project/cs.asynchron/20160828/",
    "requires_python": null,
    "summary": "Result and friends: callable objects which will receive a value at a later point in time.",
    "version": "20160828"
  },
  "releases": {
    "20150118": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2a27e46eaf2e1f21ae715d874e66e97c",
          "sha256": "36101707ad9e0badce4e3a96352069ebc37c006eb7c6a76e22e1c53b04425cab"
        },
        "downloads": 1907,
        "filename": "cs.asynchron-20150118.tar.gz",
        "has_sig": false,
        "md5_digest": "2a27e46eaf2e1f21ae715d874e66e97c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4125,
        "upload_time": "2015-01-18T06:11:26",
        "url": "https://files.pythonhosted.org/packages/43/cb/1703901f034c4308fc3c844749a817c83aa5fef8dcbb078af1e40db1e019/cs.asynchron-20150118.tar.gz"
      }
    ],
    "20160828": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0da116abe506b6e73535f7dc175a005d",
          "sha256": "5af62524c798f48c22afddbbf2698889b6dc44661337c93403746ff42944a7af"
        },
        "downloads": 371,
        "filename": "cs.asynchron-20160828.tar.gz",
        "has_sig": false,
        "md5_digest": "0da116abe506b6e73535f7dc175a005d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5017,
        "upload_time": "2016-08-28T06:03:29",
        "url": "https://files.pythonhosted.org/packages/2f/53/eb54ed7a40d12bba38d087a88a01922d9bd5fa969b4cb7b28172aed4d800/cs.asynchron-20160828.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "0da116abe506b6e73535f7dc175a005d",
        "sha256": "5af62524c798f48c22afddbbf2698889b6dc44661337c93403746ff42944a7af"
      },
      "downloads": 371,
      "filename": "cs.asynchron-20160828.tar.gz",
      "has_sig": false,
      "md5_digest": "0da116abe506b6e73535f7dc175a005d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5017,
      "upload_time": "2016-08-28T06:03:29",
      "url": "https://files.pythonhosted.org/packages/2f/53/eb54ed7a40d12bba38d087a88a01922d9bd5fa969b4cb7b28172aed4d800/cs.asynchron-20160828.tar.gz"
    }
  ]
}