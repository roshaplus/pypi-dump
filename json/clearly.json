{
  "info": {
    "author": "Rog\u00e9rio Sampaio de Almeida",
    "author_email": "rsalmei@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Topic :: Software Development :: Bug Tracking",
      "Topic :: System :: Distributed Computing",
      "Topic :: System :: Monitoring"
    ],
    "description": "clearly\n=======\n\nClear and accurate real-time monitor for celery\n-----------------------------------------------\n\nClearly is an alternative to\n`flower <https://github.com/mher/flower>`__. While I do like it, to me\nit's not been totally up to the task (pun intended). Why is that? I'd\nlike *actual* real-time monitoring, filter multiple tasks at once and\ncomplete, whole, thorough, comprehensive results! And flower needs page\nrefreshes, filter only one task type at a time and truncates results...\n\ud83d\ude1e\n\n| Ok, ``clearly`` does provide all that!\n| And it works right in the terminal, has an advanced syntax coloring\n  system, client server, multiple filters and complete results! It's\n  great to actually *see* what's going on in your celery tasks, and in\n  real-time, so it's great for debugging.\n\nActually, ``clearly`` does not have an outer process server yet (it is a\nthread), and it doesn't persist any data. In the future it should have a\nproper server, with persistence, and a Docker image for simple\ndeploying. But regardless that, ``clearly`` is quite complete, and\nshould complement flower nicely.\n\nSee what ``clearly`` looks like: |very cool|\n\nRequirements\n------------\n\nYou can **always** use ``clearly``! Regardless of your celery\nconfiguration! - you just have to enable *Events* and you're good to go!\n\n(previous version did not use celery events, so it had several\nlimitations, that's gone)\n\nHow ``clearly`` works\n---------------------\n\nThis tool creates a background thread with a celery events receiver,\nwhich receives events from all clients and all workers connected,\ndynamically updating states.\n\nThese events are processed and missing or out of order ones are\ndynamically generated, so you never see a STARTED task before it being\nRECEIVED, which would be weird. The parameters of the tasks are\ndynamically compiled, and beautifully syntax colored, while tasks\ncompleted get their results directly from the result backend, to\novercome the problem of truncated results. All async workers life cycles\nare managed and listed on screen. All tasks triggered show up\nimmediately on screen, and you start seeing what's going on with those\ntasks, in real-time!\n\nAt any moment, you can CTRL+C out of the client, and rest assured that\nthe background thread will continue gathering all updates seamlessly.\n\nDO NOT FEAR the memory consumption! It is very optimized, and by default\nonly stores 1000 tasks and 100 workers at a time. You can increase them\nthough.\n\nFeatures\n--------\n\n``clearly`` enables you to: - Be informed of any and all tasks being\nrequested and running, in real-time; - Know the workers available and be\nnotified if any goes down; - Filter the async calls any way you want; -\nInspect the actual parameters the tasks were called with; - See and\nanalyze the outcome of these tasks, such as success results or fail\ntracebacks; - *Clearly* see all types and representations of the\nparameters/outcomes of the tasks with an advanced printing system,\nsyntax highlighting and symbols, similar to what your favorite REPL\nwould do; - Analyze stats of your system.\n\nGet ``clearly``\n---------------\n\n1. ``pip install -U clearly``\n2. there's no step 2.\n\nHow to use\n----------\n\ninitialize it\n~~~~~~~~~~~~~\n\n.. code:: python\n\n    from yourproject.celeryconf import app\n    from clearly import ClearlyClient\n    clearlycli = ClearlyClient(app)\n\ngrab them\n~~~~~~~~~\n\n.. code:: python\n\n    clearlycli.capture()\n\nbe amazed\n~~~~~~~~~\n\n.. figure:: https://raw.githubusercontent.com/rsalmei/clearly/master/img/clearly_amazed.png\n   :alt: very amazed\n\n   very amazed\n\nyou can also grab like\n~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    clearly.capture(show_params=True)\n\nand also be amazed\n~~~~~~~~~~~~~~~~~~\n\n.. figure:: https://raw.githubusercontent.com/rsalmei/clearly/master/img/clearly_cool.png\n   :alt: very amazed\n\n   very amazed\n\nnote\n~~~~\n\nAny way you capture them, ``clearly`` is always storing the same data\nabout the tasks. The ``show_params`` is only informative, for you to see\nthem right in the capture mode. You can see them later too, after\ncapturing. (The default is to ``show_error``, as it is much more likely\nto get your interest)\n\nstop capturing and analyze\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. figure:: https://raw.githubusercontent.com/rsalmei/clearly/master/img/clearly_results.png\n   :alt: useful results\n\n   useful results\n\nget the big picture\n~~~~~~~~~~~~~~~~~~~\n\n.. figure:: https://raw.githubusercontent.com/rsalmei/clearly/master/img/clearly_brief.png\n   :alt: useful overview\n\n   useful overview\n\nDocumentation\n-------------\n\n.. code:: python\n\n    def start(self):\n        \"\"\"Starts the real-time engine that captures tasks. It will capture \n        all tasks being sent to celery and all workers known to it.\n\n        This will be run in the background, so you can still send other\n        commands or analyze stats and real-time date without losing any\n        updates.\n\n        \"\"\"\n\n    def capture(self, pattern=None, negate=False,\n                params=False, success=False, error=True):\n        \"\"\"Starts the real-time engine that captures tasks. It will capture\n        all tasks being sent to celery and all workers known to it.\n\n        This will be run in the foreground, so you can see in real-time\n        exactly what your celery workers are doing.\n        You can press CTRL+C at any time to stop it, without losing any\n        updates, which are still being captured in the background.\n\n        Args:\n            pattern (Optional[str]): a pattern to filter tasks to capture.\n                ex.: '^dispatch|^email' to filter names starting with that\n                      or 'dispatch.*123456' to filter that exact name and number\n                      or even '123456' to filter that exact number anywhere.\n            negate (bool): if True, finds tasks that do not match criteria\n            params (bool): if True shows params of all tasks\n                default is False\n            success (bool): if True shows successful tasks' results\n                default is False\n            error (bool): if True shows failed tasks' results\n                default is True, as you monitoring to find errors, right?\n\n        \"\"\"\n\n    def stop(self):\n        \"\"\"Stops the background engine, without losing anything already\n        captured.\n\n        \"\"\"\n\n    def stats(self):\n        \"\"\"Lists some metrics of your actual and capturing system.\n        Those are:\n            Tasks processed: the total number of reentrant tasks processed, \n                which includes retry attempts.\n            Events processed: number of events captured and processed.\n            Tasks stored: actual number of unique tasks processed.\n            Workers stored: number of unique workers already seen.\n\n        \"\"\"\n\n    def tasks(self, pattern=None, state=None, negate=False,\n              params=None, success=False, error=False):\n        \"\"\"Filters captured tasks and prints their current status.\n        There are a few params with different defaults from the equivalent\n        capture method. This is because here we have more info about the tasks,\n        and so it can use new tricks.\n\n        Args:\n            pattern (Optional[str]): a pattern to filter tasks\n                ex.: '^dispatch|^email' to filter names starting with those\n                      or 'dispatch.*123456' to filter that exact name and number\n                      or even '123456' to filter that exact number anywhere.\n            state (Optional[str]): a state to filter tasks\n            negate (bool): if True, finds tasks that do not match criteria\n            params (Optional[bool]): if True shows params of all tasks,\n                if False doesn't, if None use the success or error,\n                depending on the final state\n                default is None\n            success (bool): if True shows successful tasks' results\n                default is False\n            error (bool): if True shows failed tasks' tracebacks\n                default is False, to get an overview.\n\n        \"\"\"\n\n    def workers(self, pattern=None, negate=False, stats=True):\n        \"\"\"Filters known workers and prints their current status.\n\n        Args:\n            pattern (Optional[str]): a pattern to filter workers\n                ex.: '^dispatch|^email' to filter names starting with those\n                      or 'dispatch.*123456' to filter that exact name and number\n                      or even '123456' to filter that exact number anywhere.\n            negate (bool): if True, finds tasks that do not match criteria\n            stats (bool): if True shows worker stats\n\n        \"\"\"\n\n    def task(self, task_uuid):\n        \"\"\"Shows one specific task.\n\n        Args:\n            task_uuid (str): the task id\n\n        \"\"\"\n\n    def seen_tasks(self):\n        \"\"\"Shows a list of task types seen.\n\n        \"\"\"\n\n    def reset(self):\n        \"\"\"Resets all captured tasks.\n\n        \"\"\"\n\nHints\n-----\n\n-  write a small `celery\n   router <http://docs.celeryproject.org/en/latest/userguide/routing.html#routers>`__\n   and in there generate dynamic routing keys, based on the actual\n   arguments of the async call in place. That way, you'll be able to\n   filter tasks based on any of those constraints, like an id of an\n   entity.\n-  if you're using `django <https://www.djangoproject.com/>`__ and\n   `django-extensions <https://github.com/django-extensions/django-extensions>`__,\n   put in your settings a ``SHELL_PLUS_POST_IMPORT`` to auto import\n   this! Now you just have to create a pre-configured instance of it and\n   you're good to go. Put together a simple python module in your\n   project to provide an already initialized instance of ``clearly``.\n   Now you have a tool always ready to be used, easily pluggable even in\n   production, to actually see what's going on in your tasks, and figure\n   out that pesky bug.\n-  the more you filter, the less you'll have to analyze, so find the\n   best combination for you debugging needs. A busy system can have a\n   thousand or more messages in only a minute.\n\nTo do\n-----\n\n-  support python 3 (not actually tested yet, soon);\n-  implement a weak reference in tasks data, to be able to release the\n   host's memory if the need arises;\n-  include a plugin system, to be able to print representations of\n   custom objects;\n-  include a script mode, to call right from the shell (make work even a\n   \"\\| grep\");\n-  any other ideas welcome!\n\nLicense\n-------\n\nThis software is licensed under the MIT License. See the LICENSE file in\nthe top distribution directory for the full license text.\n\nThank you.\n----------\n\n.. |very cool| image:: https://raw.githubusercontent.com/rsalmei/clearly/master/img/clearly_highlights.png\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/rsalmei/clearly",
    "keywords": "celery,task-queue,monitoring,rabbitmq,rabbitmq-consumer,asynchronous",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "clearly",
    "platform": "",
    "project_url": "https://pypi.org/project/clearly/",
    "release_url": "https://pypi.org/project/clearly/0.2.5/",
    "requires_python": "",
    "summary": "Simple and accurate real-time monitor for celery",
    "version": "0.2.5"
  },
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f12466ac3a6356ce19bbfd13ac0d98cf",
          "sha256": "feda1bf7c5d2dc9a8ede281f5daf5a96111c66cc689cff6b9145616249885871"
        },
        "downloads": 0,
        "filename": "clearly-0.1.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "f12466ac3a6356ce19bbfd13ac0d98cf",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 12371,
        "upload_time": "2017-05-01T20:42:19",
        "url": "https://files.pythonhosted.org/packages/1d/1c/72f96936b4bc8243b217331030c19c1ad9f68170287d40c536b5da5afd37/clearly-0.1.2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b76c6590e87b3ce9c48acbc42955065b",
          "sha256": "ff6716c5d90a2da30e123fad0c36fd76ccea7c941f4183f1109a435fa65aa61d"
        },
        "downloads": 0,
        "filename": "clearly-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b76c6590e87b3ce9c48acbc42955065b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7386,
        "upload_time": "2017-05-01T20:42:21",
        "url": "https://files.pythonhosted.org/packages/8b/b7/6ed9db807c1be53ddd4e38aef5bab555fe25c918461d075d808ad6ffbab9/clearly-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "93dc74fa0c3cc8fcf8d9d9aa97f82686",
          "sha256": "aaa23f56c2653408920aa9d5dd8b1a75322c0dc31afa15f4363c3ae7a69aa646"
        },
        "downloads": 0,
        "filename": "clearly-0.1.3.macosx-10.11-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "93dc74fa0c3cc8fcf8d9d9aa97f82686",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11294,
        "upload_time": "2017-05-02T21:49:42",
        "url": "https://files.pythonhosted.org/packages/fd/07/3bbc184c3f2d70d934465ae2bf0e4d45355227d5770930525f61ba54bf57/clearly-0.1.3.macosx-10.11-x86_64.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d94c6eb4cbc01226988eae470171b775",
          "sha256": "d7becdd6c5c1be05cba495c2348a61f70ce7b53e2d54e2ecdbd82b763eb262cf"
        },
        "downloads": 0,
        "filename": "clearly-0.1.4-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "d94c6eb4cbc01226988eae470171b775",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 12372,
        "upload_time": "2017-05-03T03:04:13",
        "url": "https://files.pythonhosted.org/packages/7e/b9/12fdc77dffde01b7f6dc79eee77cf33e29a9e3276599fb346eb7ecf29106/clearly-0.1.4-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "39ff83a3224b7a1df032cf7361e03d7a",
          "sha256": "cd06dfcb60cc92f8cfd0c7ef17ee6db9b77f175c551dec775d0d04938094a2ca"
        },
        "downloads": 0,
        "filename": "clearly-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "39ff83a3224b7a1df032cf7361e03d7a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7390,
        "upload_time": "2017-05-03T03:04:15",
        "url": "https://files.pythonhosted.org/packages/42/03/0c1629a6ad5fb1aa46fd850eedd30e0f012069b9c7567540f5fdb4f7c0fa/clearly-0.1.4.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c2257c4981817571f0b2d74d039771be",
          "sha256": "0ba55d27c1a14c2fc38b736addfbf787b4ccc1ccf9b33a3a0ba4cb76fc3fa597"
        },
        "downloads": 0,
        "filename": "clearly-0.2.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "c2257c4981817571f0b2d74d039771be",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 20022,
        "upload_time": "2017-05-21T20:56:39",
        "url": "https://files.pythonhosted.org/packages/51/5c/15d20d7f45163ede01b4ec5fbde85004767512f23de1bed3a31d77768a2f/clearly-0.2.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ce7b094a5f69a24a898de30f2a9ccaa9",
          "sha256": "cc32202b0cfc7cc9766d04e94f4fa98f7d5276de080b0e5c0f2300563d5e550b"
        },
        "downloads": 0,
        "filename": "clearly-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ce7b094a5f69a24a898de30f2a9ccaa9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12595,
        "upload_time": "2017-05-21T20:56:41",
        "url": "https://files.pythonhosted.org/packages/b9/87/fbc68584b56645d22778c5463a4f47ba299b4029d2ca2cf0873dd192200b/clearly-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9a1a8d8bb71b418fd970f14d18aba04f",
          "sha256": "798f4b225a52600602137a868b6e62603e6428e496bba19c74fc5d11a8c43bd6"
        },
        "downloads": 0,
        "filename": "clearly-0.2.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a1a8d8bb71b418fd970f14d18aba04f",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 20079,
        "upload_time": "2017-05-22T02:37:03",
        "url": "https://files.pythonhosted.org/packages/50/17/fed26dab6bcba92a60945bd77920f261bd458030ad9327f4470cc6263826/clearly-0.2.1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7c78a10fdd0aa529178186c91d63cb3c",
          "sha256": "8237be79775769b318bcf87713a12ac4015956229298e3262b4bd893e20cd710"
        },
        "downloads": 0,
        "filename": "clearly-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7c78a10fdd0aa529178186c91d63cb3c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12678,
        "upload_time": "2017-05-22T02:37:05",
        "url": "https://files.pythonhosted.org/packages/08/60/8423f27af1e200f34b1545f1d346dbb908073663d36bc4c306eafe62e1be/clearly-0.2.1.tar.gz"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "51d3326219aa50c6b6295c5bf2afd45b",
          "sha256": "aa3ed40a730d3f45792eb1a12d92b89dae8658f1bfd08bccd82469186cd14559"
        },
        "downloads": 0,
        "filename": "clearly-0.2.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "51d3326219aa50c6b6295c5bf2afd45b",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 20336,
        "upload_time": "2017-05-24T03:57:52",
        "url": "https://files.pythonhosted.org/packages/9d/e7/5642f89660f5a52d443285db2f77d5b670c3b17a00c8ea6979e9f8d158f3/clearly-0.2.2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "64a262095894f7d409dba4ed184f382a",
          "sha256": "675b40f3fd964270307dceabbd127e26d0d36ebce556ca0dbcf7d4dcd55afba7"
        },
        "downloads": 0,
        "filename": "clearly-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "64a262095894f7d409dba4ed184f382a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12863,
        "upload_time": "2017-05-24T03:57:53",
        "url": "https://files.pythonhosted.org/packages/43/bc/de2152a3f3ece977c58a5e9758fa542e74078845a532094513fec539815c/clearly-0.2.2.tar.gz"
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e9e81207b4368157a52ed3d669726159",
          "sha256": "695cad48be178840c26b3f4b534641b34be29268161b089eeabcf3961efc83b2"
        },
        "downloads": 0,
        "filename": "clearly-0.2.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "e9e81207b4368157a52ed3d669726159",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 20381,
        "upload_time": "2017-05-24T11:40:54",
        "url": "https://files.pythonhosted.org/packages/73/de/6fe37d74841e7be19db2214341f6139b40016ac4af9960d55229f444d5fa/clearly-0.2.3-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "276324a2c38ad33b6f6f600d1fd50848",
          "sha256": "8991f1fa281bf4e5d8107bf2116ecc13334614ff30a955dd77c10728479b4170"
        },
        "downloads": 0,
        "filename": "clearly-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "276324a2c38ad33b6f6f600d1fd50848",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12901,
        "upload_time": "2017-05-24T11:40:56",
        "url": "https://files.pythonhosted.org/packages/14/10/6d04168948e9b4dc80015123c5a5c9084055f1d724b37a44920e25132bc0/clearly-0.2.3.tar.gz"
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "baaa8dd7ac7dddfe6696a41f31de2f6d",
          "sha256": "1ee0b424c2b1986a1ced8cf9b2ad5bd347b438dc01ca002ffe7e71e073286fd6"
        },
        "downloads": 0,
        "filename": "clearly-0.2.4-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "baaa8dd7ac7dddfe6696a41f31de2f6d",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 20451,
        "upload_time": "2017-05-26T20:15:48",
        "url": "https://files.pythonhosted.org/packages/a2/d3/de8c3c49e640206532a6f3f15c6f559e2fb913ca2b37cadd57d6d9813342/clearly-0.2.4-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "767a4d6e8744de9afa4e117d112ae9bd",
          "sha256": "91dee1379165e330d4b88c804f842c4f9413c2c309999f75098eedf64ace1237"
        },
        "downloads": 0,
        "filename": "clearly-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "767a4d6e8744de9afa4e117d112ae9bd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12904,
        "upload_time": "2017-05-26T20:15:49",
        "url": "https://files.pythonhosted.org/packages/1c/5a/0e69bc4b2e72c4a5fbaf48755e2e8065aceddb22672f3a04f359dd8df4ad/clearly-0.2.4.tar.gz"
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1bca81444640a0a8b4c81e3f01fa8576",
          "sha256": "4d60f914d5bc15a2d95423bd772d9861cc165eb3ca1b9bb44a20e18cac3e03de"
        },
        "downloads": 0,
        "filename": "clearly-0.2.5-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "1bca81444640a0a8b4c81e3f01fa8576",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 20535,
        "upload_time": "2017-05-26T21:25:17",
        "url": "https://files.pythonhosted.org/packages/0f/89/8ddede7d4ca7b1d9eab63bf894a350783f8162a4b3f22966e340567f8d2c/clearly-0.2.5-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "240ed97902190118c024ef577a6eb8a6",
          "sha256": "92641224d0dc4fb4dfc6aaf1fb0ffa3d1fd7ea006c1d8c55a8c07f92af0ab2e6"
        },
        "downloads": 0,
        "filename": "clearly-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "240ed97902190118c024ef577a6eb8a6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12985,
        "upload_time": "2017-05-26T21:25:18",
        "url": "https://files.pythonhosted.org/packages/9d/87/5fb6c988ddf6004c03917414b1914c375114edf79de2c5939fa04474efe5/clearly-0.2.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "1bca81444640a0a8b4c81e3f01fa8576",
        "sha256": "4d60f914d5bc15a2d95423bd772d9861cc165eb3ca1b9bb44a20e18cac3e03de"
      },
      "downloads": 0,
      "filename": "clearly-0.2.5-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "1bca81444640a0a8b4c81e3f01fa8576",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 20535,
      "upload_time": "2017-05-26T21:25:17",
      "url": "https://files.pythonhosted.org/packages/0f/89/8ddede7d4ca7b1d9eab63bf894a350783f8162a4b3f22966e340567f8d2c/clearly-0.2.5-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "240ed97902190118c024ef577a6eb8a6",
        "sha256": "92641224d0dc4fb4dfc6aaf1fb0ffa3d1fd7ea006c1d8c55a8c07f92af0ab2e6"
      },
      "downloads": 0,
      "filename": "clearly-0.2.5.tar.gz",
      "has_sig": false,
      "md5_digest": "240ed97902190118c024ef577a6eb8a6",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 12985,
      "upload_time": "2017-05-26T21:25:18",
      "url": "https://files.pythonhosted.org/packages/9d/87/5fb6c988ddf6004c03917414b1914c375114edf79de2c5939fa04474efe5/clearly-0.2.5.tar.gz"
    }
  ]
}