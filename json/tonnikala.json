{
  "info": {
    "author": "Antti Haapala",
    "author_email": "antti@haapala.name",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Pyramid",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Text Processing :: Markup",
      "Topic :: Text Processing :: Markup :: HTML"
    ],
    "description": "Tonnikala\n=========\n\nTonnikala is the latest reincarnation among the Python templating \nlanguages that feed on Kid-inspired XML syntax. It rejects the Kid \nand Genshi notions of tagstreams and trees, and follows in \nfootsteps of Chameleon and Kajiki in making the template to compile \ninto Python bytecode directly. The syntax is very close to that of \nKajiki, but the internals are very different: Tonnikala writes code \nas Abstract Syntax Trees and optimizes the resulting trees \nextensively. In addition, there is an optional speed-up module \n(currently Python 3 only), that provides a specialized class used \nfor output buffering.\n\nExamples\n--------\n\n.. code-block:: python\n\n    from tonnikala.loader import Loader\n\n    template_source = u\"\"\"\n    <table>\n        <tr py:for=\"row in table\">\n            <py:for each=\"key, value in row.items()\"\n                ><td>${key}</td><td>${literal(value)}</td></py:for>\n        </tr>\n    </table>\n    \"\"\"\n    \n    template = Loader().load_string(template_source)\n\n    ctx = {\n        'table': [dict(a=1,b=2,c=3,d=4,e=5,f=6,g=7,h=8,i=9,j=10)\n            for x in range(1000)]\n    }\n\n    print(template.render(ctx))\n\nTemplate inheritance\n--------------------\n\nbase.tk\n+++++++\n\n.. code-block:: xml\n\n    <html>\n    <title><py:block name=\"title_block\">I am ${title}</py:block></title>\n    <py:def function=\"foo()\">I can be overridden too!</py:def>\n    <h1>${title_block()}</h1>\n    ${foo()}\n    </html>\n\nchild.tk\n++++++++\n\n.. code-block:: xml\n\n    <py:extends href=\"base.tk\">\n    <py:block name=\"title_block\">But I am ${title} instead</py:block>\n    <py:def function=\"foo()\">I have overridden the function in parent template</py:def>\n    </py:extends>\n\nTemplate imports\n----------------\n\nimportable.tk\n+++++++++++++\n\n.. code-block:: xml\n\n    <html>\n    <py:def function=\"foo()\">I am an importable function</py:def>\n    </html>\n\nimporter.tk\n+++++++++++\n\n.. code-block:: xml\n\n    <html>\n    <py:import href=\"importable.tk\" alias=\"imp\" />\n    ${imp.foo()}\n    </html>\n\nFileLoader\n----------\n\nTo load templates from files, use the ``tonnikala.FileLoader`` class:\n\n.. code-block:: python\n\n    loader = FileLoader(paths=['/path/to/templates'])\n    template = loader.load('child.tk')\n\nA ``FileLoader`` currently implicitly caches **all** loaded templates in memory.\n\nTemplate\n--------\n\nTo render the template:\n\n.. code-block:: python\n\n    result = template.render(ctx)\n\nYou can specify a block, or no-argument def to render explicitly:\n\n.. code-block:: python\n\n    result = template.render(ctx, funcname='title_block')\n\nPyramid integration\n-------------------\n\nInclude `'tonnikala.pyramid'` into your config to enable Tonnikala. When included, tonnikala adds the following configuration directives:\n\n`add_tonnikala_extensions(*extensions)`\n    Registers tonnikala renderer for these template extensions. By default Tonnikala is not registered as a renderer for any extension.\n    For example: `config.add_tonnikala_extensions('.html', '.tk')` would enable Tonnikala renderer for templates with either of these extensions.\n\n`add_tonnikala_search_paths(*paths)`\n    Adds the given paths to the end of Tonnikala search paths that are searched for templates. These can be absolute paths, or\n    `package.module:directory/subdirectory`-style asset specs. By default no paths are searched explicitly (but you can always\n    use an asset spec for template.\n\n`set_tonnikala_reload(reload)`\n    If `True`, makes tonnikala not cache templates. Default is `False`.\n\nThese 3 can also be controlled by `tonnikala.extensions`, `tonnikala.search_paths` and `tonnikala.reload` in .ini settings.\n\nStatus\n======\n\nAlpha, working features are \n\n* Structural elements ``py:if``, ``py:unless``, ``py:def``, ``py:for``, \n  ``py:replace``, ``py:content``\n* Basic template inheritance: ``py:extends`` and ``py:block``; the child\n  template also inherits top level function declarations from the parent\n  template, and the child can override global functions that the parent\n  defines and uses.\n* Expression interpolation using ``$simple_identifier`` and ``${complex + python + \"expression\"}``\n* Boolean attributes: ``<tag attr=\"${False}\">``, ``<tag attr=\"$True\">``\n* Implicit escaping\n* Disabling implicit escaping (``literal()``)\n* C speedups for both Python 2 and Python 3\n* Importing def blocks from another template: ``py:import``\n* Basic I18N using gettext.\n* Pyramid integration\n\nUpcoming features:\n\n* Structural elements: ``py:vars``, ``py:switch``, ``py:case``; ``py:else`` for ``for``, ``if`` and ``switch``.\n* Overriding attributes, setting attrs from dictionary: ``py:attrs``\n* Custom tags mapping to ``py:def``\n* I18N with optional in-parse-tree localization (partially done)\n* Javascript as the target language\n* Pluggable frontend syntax engines (partially done)\n* METAL-like macros\n* Pluggable expression languages akin to Chameleon\n* Even better template inheritance\n* Better documentation\n\nContributors\n------------\n\nAntti Haapala\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ztane/Tonnikala",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "tonnikala",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/tonnikala/",
    "release_url": "https://pypi.org/project/tonnikala/0.16/",
    "requires_python": null,
    "summary": "Python templating engine - the one ton solution",
    "version": "0.16"
  },
  "releases": {
    "0.15": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c1e08d63793c24002580a3376f814ee5",
          "sha256": "e551cc194d979c7ed49c5a117111ea6f923b7b750de65010cfd68ebdc6f66de6"
        },
        "downloads": 2448,
        "filename": "tonnikala-0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "c1e08d63793c24002580a3376f814ee5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4518,
        "upload_time": "2013-12-08T21:29:33",
        "url": "https://files.pythonhosted.org/packages/17/40/65f8ae1979d4d73686e047460b4774effff2bc1b313624a8dc1be5abe245/tonnikala-0.15.tar.gz"
      }
    ],
    "0.16": [
      {
        "comment_text": "",
        "digests": {
          "md5": "116e86bf72273e2f3fe79460f6a1bb12",
          "sha256": "fc65f2234b3bc143e529f52d362aa549e5bf57965a4e4b04ec7eb7609e86f49d"
        },
        "downloads": 1233,
        "filename": "tonnikala-0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "116e86bf72273e2f3fe79460f6a1bb12",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30576,
        "upload_time": "2014-11-02T12:43:25",
        "url": "https://files.pythonhosted.org/packages/2b/11/1999b642d34d7dba670ff2a54ac6a8f882cfbf5e84b6708f7c674e05e785/tonnikala-0.16.tar.gz"
      }
    ],
    "1.0.0b1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "36414b816b7cc54bcba59a02d19ce812",
          "sha256": "4cb00ee1774853bb21d40dcadf69c723b6964cbd4fcfd05e65c526269f88e2b6"
        },
        "downloads": 2663,
        "filename": "tonnikala-1.0.0b1.zip",
        "has_sig": false,
        "md5_digest": "36414b816b7cc54bcba59a02d19ce812",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 62558,
        "upload_time": "2015-05-19T14:35:22",
        "url": "https://files.pythonhosted.org/packages/1a/3c/12a611c5c295fea9bd2eae2dc7ee91858ace15f709588f01c8c05b76be82/tonnikala-1.0.0b1.zip"
      }
    ],
    "1.0.0b2": [],
    "1.0.0b3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "10a846b83838f38883488c97c6426575",
          "sha256": "2a2846b079600208a3373cfbc016d30666be9eb1d9e250b396ca15d705afc2b9"
        },
        "downloads": 109,
        "filename": "tonnikala-1.0.0b3-cp27-cp27m-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "10a846b83838f38883488c97c6426575",
        "packagetype": "bdist_wheel",
        "python_version": "cp27",
        "size": 74667,
        "upload_time": "2016-07-22T16:50:47",
        "url": "https://files.pythonhosted.org/packages/65/fd/7ee2c5de0b057facefb493ced73a0794036fcee702022d6de7807801a2d0/tonnikala-1.0.0b3-cp27-cp27m-manylinux1_x86_64.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0848e9164a2a4b8b67102ebf5b186b1f",
          "sha256": "942ff3dfed4cff77303e63ef1b692d5cbb5e1304903ae630b2ea90c677764064"
        },
        "downloads": 100,
        "filename": "tonnikala-1.0.0b3-cp27-cp27mu-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "0848e9164a2a4b8b67102ebf5b186b1f",
        "packagetype": "bdist_wheel",
        "python_version": "cp27",
        "size": 74654,
        "upload_time": "2016-07-22T16:50:49",
        "url": "https://files.pythonhosted.org/packages/30/a8/543401349594de68e41f0dc2ea8a39d65151f44c25c1076e11285a32f5cd/tonnikala-1.0.0b3-cp27-cp27mu-manylinux1_x86_64.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "964d048000c0d6725c64ff27c695a472",
          "sha256": "6178a636e2ac87e399b4d5101a4019f2f196bb77f3091a67f4fab2e2a6809328"
        },
        "downloads": 96,
        "filename": "tonnikala-1.0.0b3-cp33-cp33m-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "964d048000c0d6725c64ff27c695a472",
        "packagetype": "bdist_wheel",
        "python_version": "cp33",
        "size": 75150,
        "upload_time": "2016-07-22T16:50:52",
        "url": "https://files.pythonhosted.org/packages/87/26/f688f24041f05cc83be057537936270b91b58e1d7197900035a250511c6b/tonnikala-1.0.0b3-cp33-cp33m-manylinux1_x86_64.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "665eada122340ba28ab992b4555d0849",
          "sha256": "d79cce287cd531160d4dc88c60f5b5d6ed52ad069ee159b60d9d2716b76ff74d"
        },
        "downloads": 92,
        "filename": "tonnikala-1.0.0b3-cp34-cp34m-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "665eada122340ba28ab992b4555d0849",
        "packagetype": "bdist_wheel",
        "python_version": "cp34",
        "size": 75403,
        "upload_time": "2016-07-22T16:50:54",
        "url": "https://files.pythonhosted.org/packages/8f/9a/27c8ed63404d5a561ec8944d2635ef84193fef14a5eaca69c7a8b2f9c274/tonnikala-1.0.0b3-cp34-cp34m-manylinux1_x86_64.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "32c6e8df6fa594fde085f27aa20a5e62",
          "sha256": "b2149aff6c2f63fed5559a40d0876009c54addbb81991fd97c0a72abe8168359"
        },
        "downloads": 98,
        "filename": "tonnikala-1.0.0b3-cp35-cp35m-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "32c6e8df6fa594fde085f27aa20a5e62",
        "packagetype": "bdist_wheel",
        "python_version": "cp35",
        "size": 75586,
        "upload_time": "2016-07-22T16:50:57",
        "url": "https://files.pythonhosted.org/packages/e3/51/1401d41396aebeb983d694e95e79a6345c646597ad7e16a3341324a7e2b3/tonnikala-1.0.0b3-cp35-cp35m-manylinux1_x86_64.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5544cf8000afaf6ac5f1447a634e6f21",
          "sha256": "7ff252356383b30c17951c7f48047f0a1cc44cf2a1705b313a268a78f4a63b5c"
        },
        "downloads": 115,
        "filename": "tonnikala-1.0.0b3.tar.gz",
        "has_sig": false,
        "md5_digest": "5544cf8000afaf6ac5f1447a634e6f21",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 58043,
        "upload_time": "2016-07-22T16:50:43",
        "url": "https://files.pythonhosted.org/packages/68/8b/e4a487543362482575453693cd3d8af358d62f72b26b9f5a69f9cec0020a/tonnikala-1.0.0b3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "116e86bf72273e2f3fe79460f6a1bb12",
        "sha256": "fc65f2234b3bc143e529f52d362aa549e5bf57965a4e4b04ec7eb7609e86f49d"
      },
      "downloads": 1233,
      "filename": "tonnikala-0.16.tar.gz",
      "has_sig": false,
      "md5_digest": "116e86bf72273e2f3fe79460f6a1bb12",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 30576,
      "upload_time": "2014-11-02T12:43:25",
      "url": "https://files.pythonhosted.org/packages/2b/11/1999b642d34d7dba670ff2a54ac6a8f882cfbf5e84b6708f7c674e05e785/tonnikala-0.16.tar.gz"
    }
  ]
}