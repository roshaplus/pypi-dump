{
  "info": {
    "author": "Sebastien Celles",
    "author_email": "s.celles@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: CEA CNRS Inria Logiciel Libre License, version 2.1 (CeCILL-2.1)",
      "Operating System :: OS Independent",
      "Programming Language :: Cython",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4"
    ],
    "description": "|Latest Version| |Supported Python versions| |Wheel format| |License|\r\n|Development Status| |Downloads monthly| |Requirements Status| |Code\r\nHealth| |Codacy Badge| |Build Status|\r\n\r\nwindrose\r\n========\r\n\r\nA windrose, also known as a polar rose plot, is a special diagram for\r\nrepresenting the distribution of meteorological datas, typically wind\r\nspeeds by class and direction. This is a simple module for the\r\nmatplotlib python library, which requires numpy for internal\r\ncomputation.\r\n\r\nOriginal code forked from: - windrose 1.4 by `Lionel\r\nRoubeyrie <https://github.com/LionelR>`__ lionel.roubeyrie@gmail.com\r\nhttp://youarealegend.blogspot.fr/search/label/windrose\r\n\r\nRequirements:\r\n-------------\r\n\r\n-  matplotlib http://matplotlib.org/\r\n-  numpy http://www.numpy.org/\r\n-  and naturally python https://www.python.org/ :-P\r\n\r\nOption libraries:\r\n\r\n-  Pandas http://pandas.pydata.org/ (to feed plot functions easily)\r\n-  Scipy http://www.scipy.org/ (to fit data with Weibull distribution)\r\n-  ffmpeg https://www.ffmpeg.org/ (to output video)\r\n-  click http://click.pocoo.org/ (for command line interface tools)\r\n\r\nInstall\r\n-------\r\n\r\nA package is available and can be downloaded from PyPi and installed\r\nusing:\r\n\r\n::\r\n\r\n    $ pip install windrose\r\n\r\nNotebook example :\r\n------------------\r\n\r\nAn `IPython (Jupyter) <http://ipython.org/>`__ notebook showing this\r\npackage usage is available at:\r\n\r\n-  http://nbviewer.ipython.org/github/scls19fr/windrose/blob/master/windrose\\_sample\\_random.ipynb\r\n\r\nScript example :\r\n----------------\r\n\r\nThis example use randoms values for wind speed and direction(ws and wd\r\nvariables). In situation, these variables are loaded with reals values\r\n(1-D array), from a database or directly from a text file (see the\r\n\"load\" facility from the matplotlib.pylab interface for that).\r\n\r\n.. code:: python\r\n\r\n        from windrose import WindroseAxes\r\n        from matplotlib import pyplot as plt\r\n        import matplotlib.cm as cm\r\n        import numpy as np\r\n\r\n        #Create wind speed and direction variables\r\n\r\n        ws = np.random.random(500) * 6\r\n        wd = np.random.random(500) * 360\r\n\r\nA stacked histogram with normed (displayed in percent) results :\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n.. code:: python\r\n\r\n        ax = WindroseAxes.from_ax()\r\n        ax.bar(wd, ws, normed=True, opening=0.8, edgecolor='white')\r\n        ax.set_legend()\r\n\r\n.. figure:: screenshots/bar.png\r\n   :alt: bar\r\n\r\n   bar\r\n\r\nAnother stacked histogram representation, not normed, with bins limits\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n.. code:: python\r\n\r\n        ax = WindroseAxes.from_ax()\r\n        ax.box(wd, ws, bins=np.arange(0, 8, 1))\r\n        ax.set_legend()\r\n\r\n.. figure:: screenshots/box.png\r\n   :alt: box\r\n\r\n   box\r\n\r\nA windrose in filled representation, with a controled colormap\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n.. code:: python\r\n\r\n        ax = WindroseAxes.from_ax()\r\n        ax.contourf(wd, ws, bins=np.arange(0, 8, 1), cmap=cm.hot)\r\n        ax.set_legend()\r\n\r\n.. figure:: screenshots/contourf.png\r\n   :alt: contourf\r\n\r\n   contourf\r\n\r\nSame as above, but with contours over each filled region...\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n.. code:: python\r\n\r\n        ax = WindroseAxes.from_ax()\r\n        ax.contourf(wd, ws, bins=np.arange(0, 8, 1), cmap=cm.hot)\r\n        ax.contour(wd, ws, bins=np.arange(0, 8, 1), colors='black')\r\n        ax.set_legend()\r\n\r\n.. figure:: screenshots/contourf-contour.png\r\n   :alt: contourf-contour\r\n\r\n   contourf-contour\r\n\r\n###...or without filled regions\r\n\r\n.. code:: python\r\n\r\n        ax = WindroseAxes.from_ax()\r\n        ax.contour(wd, ws, bins=np.arange(0, 8, 1), cmap=cm.hot, lw=3)\r\n        ax.set_legend()\r\n\r\n.. figure:: screenshots/contour.png\r\n   :alt: contour\r\n\r\n   contour\r\n\r\nAfter that, you can have a look at the computed values used to plot the\r\nwindrose with the ``ax._info`` dictionnary : - ``ax._info['bins']`` :\r\nlist of bins (limits) used for wind speeds. If not set in the call, bins\r\nwill be set to 6 parts between wind speed min and max. -\r\n``ax._info['dir']`` : list of directions \"bundaries\" used to compute the\r\ndistribution by wind direction sector. This can be set by the nsector\r\nparameter (see below). - ``ax._info['table']`` : the resulting table of\r\nthe computation. It's a 2D histogram, where each line represents a wind\r\nspeed class, and each column represents a wind direction class.\r\n\r\nSo, to know the frequency of each wind direction, for all wind speeds,\r\ndo:\r\n\r\n.. code:: python\r\n\r\n        ax.bar(wd, ws, normed=True, nsector=16)\r\n        table = ax._info['table']\r\n        wd_freq = np.sum(table, axis=0)\r\n\r\nand to have a graphical representation of this result :\r\n\r\n.. code:: python\r\n\r\n        direction = ax._info['dir']\r\n        wd_freq = np.sum(table, axis=0)\r\n        plt.bar(np.arange(16), wd_freq, align='center')\r\n        xlabels = ('N','','N-E','','E','','S-E','','S','','S-O','','O','','N-O','')\r\n        xticks=arange(16)\r\n        gca().set_xticks(xticks)\r\n        draw()\r\n        gca().set_xticklabels(xlabels)\r\n        draw()\r\n\r\n.. figure:: screenshots/histo_WD.png\r\n   :alt: histo\\_WD\r\n\r\n   histo\\_WD\r\n\r\nIn addition of all the standard pyplot parameters, you can pass special\r\nparameters to control the windrose production. For the stacked histogram\r\nwindrose, calling help(ax.bar) will give :\r\n``bar(self, direction, var, **kwargs)`` method of\r\n``windrose.WindroseAxes`` instance Plot a windrose in bar mode. For each\r\nvar bins and for each sector, a colored bar will be draw on the axes.\r\n\r\nMandatory: - ``direction`` : 1D array - directions the wind blows from,\r\nNorth centred - ``var`` : 1D array - values of the variable to compute.\r\nTypically the wind speeds\r\n\r\nOptional: - ``nsector`` : integer - number of sectors used to compute\r\nthe windrose table. If not set, nsectors=16, then each sector will be\r\n360/16=22.5\u00b0, and the resulting computed table will be aligned with the\r\ncardinals points. - ``bins`` : 1D array or integer- number of bins, or a\r\nsequence of bins variable. If not set, bins=6 between min(var) and\r\nmax(var). - ``blowto`` : bool. If True, the windrose will be pi rotated,\r\nto show where the wind blow to (usefull for pollutant rose). -\r\n``colors`` : string or tuple - one string color (``'k'`` or\r\n``'black'``), in this case all bins will be plotted in this color; a\r\ntuple of matplotlib color args (string, float, rgb, etc), different\r\nlevels will be plotted in different colors in the order specified. -\r\n``cmap`` : a cm Colormap instance from ``matplotlib.cm``. - if\r\n``cmap == None`` and ``colors == None``, a default Colormap is used. -\r\n``edgecolor`` : string - The string color each edge bar will be plotted.\r\nDefault : no edgecolor - ``opening`` : float - between 0.0 and 1.0, to\r\ncontrol the space between each sector (1.0 for no space)\r\n\r\nprobability density function (pdf) and fitting Weibull distribution\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nA probability density function can be plot using:\r\n\r\n.. code:: python\r\n\r\n        from windrose import WindAxes\r\n        ax = WindAxes.from_ax()\r\n        bins = np.arange(0, 6 + 1, 0.5)\r\n        bins = bins[1:]\r\n        ax, params = ax.pdf(ws, bins=bins)\r\n\r\n.. figure:: screenshots/pdf.png\r\n   :alt: pdf\r\n\r\n   pdf\r\n\r\nOptimal parameters of Weibull distribution can be displayed using\r\n\r\n::\r\n\r\n    print(params)\r\n    (1, 1.7042156870194352, 0, 7.0907180300605459)\r\n\r\nFunctional API\r\n--------------\r\n\r\nInstead of using object oriented approach like previously shown, some\r\n\"shortcut\" functions have been defined: ``wrbox``, ``wrbar``,\r\n``wrcontour``, ``wrcontourf``, ``wrpdf``. See `unit\r\ntests <tests/test_windrose.py>`__.\r\n\r\nPandas support\r\n--------------\r\n\r\nwindrose not only supports Numpy arrays. It also supports also Pandas\r\nDataFrame. ``plot_windrose`` function provides most of plotting features\r\npreviously shown.\r\n\r\n.. code:: python\r\n\r\n        from windrose import plot_windrose\r\n        N = 500\r\n        ws = np.random.random(N) * 6\r\n        wd = np.random.random(N) * 360\r\n        df = pd.DataFrame({'speed': ws, 'direction': wd})\r\n        plot_windrose(df, kind='contour', bins=np.arange(0.01,8,1), cmap=cm.hot, lw=3)\r\n\r\nMandatory: - ``df``: Pandas DataFrame with ``DateTimeIndex`` as index\r\nand at least 2 columns (``'speed'`` and ``'direction'``).\r\n\r\nOptional: - ``kind`` : kind of plot (might be either, ``'contour'``,\r\n``'contourf'``, ``'bar'``, ``'box'``, ``'pdf'``) - ``var_name`` : name\r\nof var column name ; default value is ``VAR_DEFAULT='speed'`` -\r\n``direction_name`` : name of direction column name ; default value is\r\n``DIR_DEFAULT='direction'`` - ``clean_flag`` : cleanup data flag (remove\r\ndata points with ``NaN``, ``var=0``) before plotting ; default value is\r\n``True``.\r\n\r\nVideo export\r\n------------\r\n\r\nA video of plots can be exported. See:\r\n\r\n|Video1| |Video2| |Video3|\r\n\r\n`Source code <samples/example_animate.py>`__\r\n\r\nThis is just a sample for now. API for video need to be created.\r\n\r\nUse:\r\n\r\n::\r\n\r\n    $ python samples/example_animate.py --help\r\n\r\nto display command line interface usage.\r\n\r\nDevelopment\r\n-----------\r\n\r\nYou can help to develop this library.\r\n\r\nIssues\r\n~~~~~~\r\n\r\nYou can submit issues using https://github.com/scls19fr/windrose/issues\r\n\r\nClone\r\n~~~~~\r\n\r\nYou can clone repository to try to fix issues yourself using:\r\n\r\n::\r\n\r\n    $ git clone https://github.com/scls19fr/windrose.git\r\n\r\nRun unit tests\r\n~~~~~~~~~~~~~~\r\n\r\nRun all unit tests\r\n\r\n::\r\n\r\n    $ nosetests -s -v\r\n\r\nRun a given test\r\n\r\n::\r\n\r\n    $ nosetests tests.test_windrose:test_plot_by -s -v\r\n\r\nInstall development version\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n::\r\n\r\n    $ python setup.py install\r\n\r\nor\r\n\r\n::\r\n\r\n    $ sudo pip install git+https://github.com/scls19fr/windrose.git\r\n\r\nCollaborating\r\n~~~~~~~~~~~~~\r\n\r\n-  Fork repository\r\n-  Create a branch which fix a given issue\r\n-  Submit pull requests\r\n\r\nhttps://help.github.com/categories/collaborating/\r\n\r\n.. |Latest Version| image:: https://img.shields.io/pypi/v/windrose.svg\r\n   :target: https://pypi.python.org/pypi/windrose/\r\n.. |Supported Python versions| image:: https://img.shields.io/pypi/pyversions/windrose.svg\r\n   :target: https://pypi.python.org/pypi/windrose/\r\n.. |Wheel format| image:: https://img.shields.io/pypi/wheel/windrose.svg\r\n   :target: https://pypi.python.org/pypi/windrose/\r\n.. |License| image:: https://img.shields.io/pypi/l/windrose.svg\r\n   :target: https://pypi.python.org/pypi/windrose/\r\n.. |Development Status| image:: https://img.shields.io/pypi/status/windrose.svg\r\n   :target: https://pypi.python.org/pypi/windrose/\r\n.. |Downloads monthly| image:: https://img.shields.io/pypi/dm/windrose.svg\r\n   :target: https://pypi.python.org/pypi/windrose/\r\n.. |Requirements Status| image:: https://requires.io/github/scls19fr/windrose/requirements.svg?branch=master\r\n   :target: https://requires.io/github/scls19fr/windrose/requirements/?branch=master\r\n.. |Code Health| image:: https://landscape.io/github/scls19fr/windrose/master/landscape.svg?style=flat\r\n   :target: https://landscape.io/github/scls19fr/windrose/master\r\n.. |Codacy Badge| image:: https://www.codacy.com/project/badge/fff3df3be0754829925202cdd6495ce7\r\n   :target: https://www.codacy.com/app/s-celles/windrose\r\n.. |Build Status| image:: https://travis-ci.org/scls19fr/windrose.svg\r\n   :target: https://travis-ci.org/scls19fr/windrose\r\n.. |Video1| image:: http://img.youtube.com/vi/_lfrwvjjVFw/0.jpg\r\n   :target: https://www.youtube.com/watch?v=_lfrwvjjVFw\r\n.. |Video2| image:: http://img.youtube.com/vi/e8kP64VXxR0/0.jpg\r\n   :target: https://www.youtube.com/watch?v=e8kP64VXxR0\r\n.. |Video3| image:: http://img.youtube.com/vi/CsALnB-0G28/0.jpg\r\n   :target: https://www.youtube.com/watch?v=CsALnB-0G28",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/scls19fr/windrose",
    "keywords": "python plot matplotlib numpy wind wind rose compass",
    "license": "CeCILL-B",
    "maintainer": "",
    "maintainer_email": "",
    "name": "windrose",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/windrose/",
    "release_url": "https://pypi.org/project/windrose/1.6/",
    "requires_python": null,
    "summary": "Python Matplotlib, Numpy library to manage wind data, draw windrose (also known as a polar rose plot)",
    "version": "1.6"
  },
  "releases": {
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "57416c1667b816e83ccdcddb13750dc5",
          "sha256": "9646760bb86816d21a861edaadaa0f9d7737c7eb44139237ffce09f84140a235"
        },
        "downloads": 2380,
        "filename": "windrose-1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57416c1667b816e83ccdcddb13750dc5",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 13169,
        "upload_time": "2015-06-18T05:35:22",
        "url": "https://files.pythonhosted.org/packages/d2/d2/3984b6d82b099c3576b751a7ae00bfd1f5b6fc70ddbd46035f35d80ecd34/windrose-1.4-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9634a3e58c9f0acaec547228801dbebb",
          "sha256": "9611468316edd49d3d1a268bb5998d881367db6579242ce4772ca8e181cc0ecc"
        },
        "downloads": 789,
        "filename": "windrose-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9634a3e58c9f0acaec547228801dbebb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11683,
        "upload_time": "2015-06-18T05:35:18",
        "url": "https://files.pythonhosted.org/packages/4d/b7/bc8fa931d179069f923cee0afd8f47f52c4a45e6f7e3442113a03a5c2433/windrose-1.4.tar.gz"
      }
    ],
    "1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d64fb07732b9fce0220f9c15b4f60fc7",
          "sha256": "751adb6ea2b9386e75d972fdb6e653578143db3fc97c34992644c32e2d2c1af2"
        },
        "downloads": 859,
        "filename": "windrose-1.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d64fb07732b9fce0220f9c15b4f60fc7",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 15211,
        "upload_time": "2015-06-19T10:46:46",
        "url": "https://files.pythonhosted.org/packages/97/cf/e47497ea62afd14d16c31c98f3e73309e9160b2c5439cd2eaae54342c9e7/windrose-1.5-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b22c21b1215d95b85e6e3c6344cef160",
          "sha256": "956a9e79d887c16c4d3461bda658e05e98b5dff20e84d6b5774de76bfcc53cfd"
        },
        "downloads": 832,
        "filename": "windrose-1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b22c21b1215d95b85e6e3c6344cef160",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13756,
        "upload_time": "2015-06-19T10:46:41",
        "url": "https://files.pythonhosted.org/packages/f3/93/0a1744f90f7ab86c50fbe9a6fefd01771dfbd6d24eabab295aa6b6f7f986/windrose-1.5.tar.gz"
      }
    ],
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "555a548c56fab91a21c5704de1c67da1",
          "sha256": "987adb2e4c818e64ad860598f32ea1be1106d6c93e4df20f7f098d22a63d31f9"
        },
        "downloads": 1577,
        "filename": "windrose-1.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "555a548c56fab91a21c5704de1c67da1",
        "packagetype": "bdist_wheel",
        "python_version": "3.3",
        "size": 16079,
        "upload_time": "2015-07-07T18:42:04",
        "url": "https://files.pythonhosted.org/packages/a8/40/85481dfd902eeb57d57f9f498ab33827953f88d866b4fe0b6e2ae191fd56/windrose-1.6-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6394781fae13fc36bd9b8523475e9e4d",
          "sha256": "cbeb0f178944f1838bc84e87bac177e6a8d98478703f559528f5d72aa1e888fa"
        },
        "downloads": 1107,
        "filename": "windrose-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6394781fae13fc36bd9b8523475e9e4d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14603,
        "upload_time": "2015-07-07T18:42:00",
        "url": "https://files.pythonhosted.org/packages/5d/6e/3ad6fa05de518cdf0f3a66e6df3494d8208c6f33e46bdfee2bf58fa4c3b1/windrose-1.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "555a548c56fab91a21c5704de1c67da1",
        "sha256": "987adb2e4c818e64ad860598f32ea1be1106d6c93e4df20f7f098d22a63d31f9"
      },
      "downloads": 1577,
      "filename": "windrose-1.6-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "555a548c56fab91a21c5704de1c67da1",
      "packagetype": "bdist_wheel",
      "python_version": "3.3",
      "size": 16079,
      "upload_time": "2015-07-07T18:42:04",
      "url": "https://files.pythonhosted.org/packages/a8/40/85481dfd902eeb57d57f9f498ab33827953f88d866b4fe0b6e2ae191fd56/windrose-1.6-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "6394781fae13fc36bd9b8523475e9e4d",
        "sha256": "cbeb0f178944f1838bc84e87bac177e6a8d98478703f559528f5d72aa1e888fa"
      },
      "downloads": 1107,
      "filename": "windrose-1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "6394781fae13fc36bd9b8523475e9e4d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 14603,
      "upload_time": "2015-07-07T18:42:00",
      "url": "https://files.pythonhosted.org/packages/5d/6e/3ad6fa05de518cdf0f3a66e6df3494d8208c6f33e46bdfee2bf58fa4c3b1/windrose-1.6.tar.gz"
    }
  ]
}