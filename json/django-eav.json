{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Programming Language :: Python",
      "Topic :: Database",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-eav\r\n==========\r\n\r\n\r\nIntroduction\r\n------------\r\n\r\ndjango-eav provides an Entity-Attribute-Value storage model for django apps.\r\n\r\nFor a decent explanation of what an Entity-Attribute-Value storage model is,\r\ncheck `Wikipedia\r\n<http://en.wikipedia.org/wiki/Entity-attribute-value_model>`_.\r\n\r\n.. note::\r\n   This software was inspired / derived from the excellent `eav-django\r\n   <http://pypi.python.org/pypi/eav-django/1.0.2>`_ written by Andrey\r\n   Mikhaylenko.\r\n\r\n   There are a few notable differences between this implementation and the\r\n   eav-django implementation.\r\n\r\n   * This one is called django-eav, whereas the other is called eav-django.\r\n   * This app allows you to to 'attach' EAV attributes to any existing django\r\n     model (even from third-party apps) without making any changes to the those\r\n     models' code.\r\n   * This app has slightly more robust (but still not perfect) filtering.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\n>From Github\r\n~~~~~~~~~~~\r\nYou can install django-eav directly from guthub::\r\n\r\n    pip install -e git+git://github.com/mvpdev/django-eav.git#egg=django-eav\r\n\r\nUsage\r\n-----\r\n\r\nEdit settings.py\r\n~~~~~~~~~~~~~~~~\r\nAdd ``eav`` to your ``INSTALLED_APPS`` in your project's ``settings.py`` file.\r\n\r\nRegister your model(s)\r\n~~~~~~~~~~~~~~~~~~~~~~\r\nBefore you can attach eav attributes to your model, you must register your\r\nmodel with eav::\r\n\r\n    >>> import eav\r\n    >>> eav.register(MyModel)\r\n\r\nGenerally you would do this in your ``models.py`` immediate after your model\r\ndeclarations.\r\n\r\nCreate some attributes\r\n~~~~~~~~~~~~~~~~~~~~~~\r\n::\r\n\r\n    >>> from eav.models import Attribute\r\n    >>> Attribute.objects.create(name='Weight', datatype=Attribute.TYPE_FLOAT)\r\n    >>> Attribute.objects.create(name='Color', datatype=Attribute.TYPE_TEXT)\r\n\r\n\r\nAssign eav values\r\n~~~~~~~~~~~~~~~~~\r\n::\r\n\r\n    >>> m = MyModel()\r\n    >>> m.eav.weight = 15.4\r\n    >>> m.eav.color = 'blue'\r\n    >>> m.save()\r\n    >>> m = MyModel.objects.get(pk=m.pk)\r\n    >>> m.eav.weight\r\n    15.4\r\n    >>> m.eav.color\r\n    blue\r\n\r\n    >>> p = MyModel.objects.create(eav__weight = 12, eav__color='red')\r\n\r\nFilter on eav values\r\n~~~~~~~~~~~~~~~~~~~~\r\n::\r\n\r\n    >>> MyModel.objects.filter(eav__weight=15.4)\r\n\r\n    >>> MyModel.objects.exclude(name='bob', eav__weight=15.4, eav__color='red')\r\n\r\n\r\nDocumentation and Examples\r\n--------------------------\r\n\r\n`<http://mvpdev.github.com/django-eav>`_",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/mvpdev/django-eav",
    "keywords": "",
    "license": "GNU Lesser General Public License (LGPL), Version 3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-eav",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-eav/",
    "release_url": "https://pypi.org/project/django-eav/0.9.4.post1/",
    "requires_python": "",
    "summary": "Entity-attribute-value model implementation as a reusableDjango app.",
    "version": "0.9.4.post1"
  },
  "releases": {
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "da8b95362053c3bbcf59886d7365b7c9",
          "sha256": "5d2dff219e3dfeeb408619b608de78e2a22da7499bf0697a9ee9b885d53d5995"
        },
        "downloads": 51,
        "filename": "django_eav-0.9.4-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "da8b95362053c3bbcf59886d7365b7c9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 33206,
        "upload_time": "2016-11-03T10:35:37",
        "url": "https://files.pythonhosted.org/packages/f8/f8/c5b9ee9146404d69eb4636552328b9b79268d896a594fe9f1ea9b6831da5/django_eav-0.9.4-py2.py3-none-any.whl"
      }
    ],
    "0.9.4.post1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fd71315b4b79f6893a38b9ac3b9745fe",
          "sha256": "df8809e2961b630b4913292f023634a297dcc3d554818cd7675b62261451e372"
        },
        "downloads": 199,
        "filename": "django_eav-0.9.4.post1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "fd71315b4b79f6893a38b9ac3b9745fe",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 33318,
        "upload_time": "2016-11-06T04:33:36",
        "url": "https://files.pythonhosted.org/packages/38/94/29c7d70f14c1e8078735445d71702bd25a4f3034a576d3c4dad5ee3e01b6/django_eav-0.9.4.post1-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fd71315b4b79f6893a38b9ac3b9745fe",
        "sha256": "df8809e2961b630b4913292f023634a297dcc3d554818cd7675b62261451e372"
      },
      "downloads": 199,
      "filename": "django_eav-0.9.4.post1-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "fd71315b4b79f6893a38b9ac3b9745fe",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 33318,
      "upload_time": "2016-11-06T04:33:36",
      "url": "https://files.pythonhosted.org/packages/38/94/29c7d70f14c1e8078735445d71702bd25a4f3034a576d3c4dad5ee3e01b6/django_eav-0.9.4.post1-py2.py3-none-any.whl"
    }
  ]
}