{
  "info": {
    "author": "Tuan Tran",
    "author_email": "mptnt1988@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "mpdaemon\n========\nWrapper of `python-daemon <https://pypi.python.org/pypi/python-daemon/>`_ for easy use.\n\nInstallation\n============\nSource\n~~~~~~\n::\n\n git clone https://github.com/mptnt1988/mpdaemon.git\n cd mpdaemon\n pip install .\n\nPyPI\n~~~~\n::\n\n pip install mpdaemon\n\nUsage\n=====\nInitialization\n~~~~~~~~~~~~~~\n::\n\n mpdaemon init\n\nImplementation\n~~~~~~~~~~~~~~\nSee examples\n\nRunning\n~~~~~~~\nAssume that script file is script.py\n::\n\n python script.py start\n python script.py status\n python script.py restart\n python script.py stop\n\nLog file is */var/log/mpdaemon/script.log*\n\nExamples\n========\nExample 1\n~~~~~~~~~\nexample1.py\n\n.. code-block:: python\n\n from mpdaemon import DaemonWrapper\n import time\n\n\n def log_to_file(daemon):\n     while True:\n         daemon.logger.info(\"Testing\")\n         time.sleep(1)\n\n\n if __name__ == \"__main__\":\n     daemon = DaemonWrapper()\n     daemon.run_func(log_to_file, daemon)\n\nExample 2\n~~~~~~~~~\nexample2.py\n\n.. code-block:: python\n\n from mpdaemon import DaemonWrapper\n import time\n import schedule\n\n\n def job():\n     execfile('writeDate.py')\n\n\n def scheduling(daemon, t_mins):\n     while True:\n         schedule.every(t_mins).minutes.do(job)\n         while True:\n             schedule.run_pending()\n             time.sleep(1)\n\n\n if __name__ == \"__main__\":\n     daemon = DaemonWrapper()\n     daemon.run_func(scheduling, daemon, 1)\n\nwriteDate.py\n\n.. code-block:: python\n\n import datetime\n\n\n with open('/tmp/dateInfo.txt', 'a') as outFile:\n     outFile.write(str(datetime.datetime.now()) + '\\n')",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/mptnt1988/mpdaemon",
    "keywords": "daemon development",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mpdaemon",
    "platform": "",
    "project_url": "https://pypi.org/project/mpdaemon/",
    "release_url": "https://pypi.org/project/mpdaemon/0.1.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Wrapper of python-daemon for easy use.",
    "version": "0.1.2"
  },
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ccbed626dece8c5e3e6cea9c86f52f45",
          "sha256": "1a38dcb6d2fd14ae9716d6a3b5adf3c2529935863bf78ad2f502832870f0c68e"
        },
        "downloads": 0,
        "filename": "mpdaemon-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ccbed626dece8c5e3e6cea9c86f52f45",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4648,
        "upload_time": "2017-09-10T17:00:15",
        "url": "https://files.pythonhosted.org/packages/41/88/f007a59223506273edd9f636e26b2d45a27f292decb30fb38133291f29ef/mpdaemon-0.1.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ccbed626dece8c5e3e6cea9c86f52f45",
        "sha256": "1a38dcb6d2fd14ae9716d6a3b5adf3c2529935863bf78ad2f502832870f0c68e"
      },
      "downloads": 0,
      "filename": "mpdaemon-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ccbed626dece8c5e3e6cea9c86f52f45",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4648,
      "upload_time": "2017-09-10T17:00:15",
      "url": "https://files.pythonhosted.org/packages/41/88/f007a59223506273edd9f636e26b2d45a27f292decb30fb38133291f29ef/mpdaemon-0.1.2.tar.gz"
    }
  ]
}