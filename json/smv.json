{
  "info": {
    "author": "Ali Tajeldin, Bo Zhang",
    "author_email": "ali@datasenseanalytics.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "\n<img height=\"128\" src=\"https://github.com/TresAmigosSD/SMV/raw/master/docs/images/smv-logo-100px.png\"/>\n\n# Spark Modularized View (SMV)\n\n[![Build Status](https://travis-ci.org/TresAmigosSD/SMV.svg?branch=master)](https://travis-ci.org/TresAmigosSD/SMV)\n[![Join the chat at https://gitter.im/TresAmigosSD/SMV](https://badges.gitter.im/TresAmigosSD/SMV.svg)](https://gitter.im/TresAmigosSD/SMV?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n\nSpark Modularized View enables users to build enterprise scale applications on Apache Spark platform.\n\n* [Quick Start](#smv-quickstart)\n* [User Guide](docs/user/0_user_toc.md)\n* [Python API docs](http://tresamigossd.github.io/SMV/pythondocs/1.5.2.11/index.html)\n* [Scala API docs](http://tresamigossd.github.io/SMV/scaladocs/1.5.2.11/index.html#package)\n\n# SMV Quickstart\n\n## Installation\n\nWe avidly recommend using [Docker](https://docs.docker.com/engine/installation/) to install SMV. Using Docker, start an SMV container with\n\n```\ndocker run -it --rm tresamigos/smv\n```\n\nIf Docker is not an option on your system, see the [installation guide](docs/user/smv_install.md).\n\n## Create Example App\n\nSMV provides a shell script to easily create template applications. We will use a simple example app to explore SMV.\n\n```shell\n$ smv-init -s MyApp\n```\n\n## Run Example App\n\nRun the entire application with\n\n```shell\n$ smv-pyrun --run-app\n```\n\nThis command must be run from the root of the project.\n\nThe output csv file and schema can be found in the `data/output` directory. Note that 'XXXXXXXX' here substitutes for a number which is like the version of the module.\n\n```shell\n$ cat data/output/stage1.employment.EmploymentByState_XXXXXXXX.csv/part-* | head -5\n\"50\",245058\n\"51\",2933665\n\"53\",2310426\n\"54\",531834\n\"55\",2325877\n\n$ cat data/output/stage1.employment.EmploymentByState_XXXXXXXX.schema/part-*\n@delimiter = ,\n@has-header = false\n@quote-char = \"\nST: String[,_SmvStrNull_]\nEMP: Long\n```\n\n## Edit Example App\n\nThe `EmploymentByState` module is defined in `src/python/stage1/employment.py`:\n\n```shell\nclass EmploymentByState(SmvModule, SmvOutput):\n    \"\"\"Python ETL Example: employment by state\"\"\"\n\n    def requiresDS(self):\n        return [inputdata.Employment]\n\n    def run(self, i):\n        df = i[inputdata.Employment]\n        df1 = df.groupBy(col(\"ST\")).agg(sum(col(\"EMP\")).alias(\"EMP\"))\n        return df1\n```\n\nThe `run` method of a module defines the operations needed to get the output based on the input. We would like to filter the table based on if each row's state is greater or less than 1,000,000. To accomplish this, we need to add a filter to the `run` method:\n\n```shell\n  def run(self, i):\n      df = i[inputdata.Employment]\n      df1 = df.groupBy(col(\"ST\")).agg(sum(col(\"EMP\")).alias(\"EMP\"))\n      df2 = df1.filter((col(\"EMP\") > lit(1000000)))\n      return df2\n```\n\nNow remove the old output and run the module again with\n\n```shell\nsmv-pyrun --purge-old-output --run-app\n```\n(make sure you run this from the from the root of the project)\n\nInspect the new output to see the changes.\n\n```shell\n$ cat data/output/stage1.employment.EmploymentByState_XXXXXXXX.csv/part-* | head -5\n\"51\",2933665\n\"53\",2310426\n\"55\",2325877\n\"01\",1501148\n\"04\",2027240\n\n$ cat data/output/stage1.employment.EmploymentByState_XXXXXXXX.schema/part-*\n@delimiter = ,\n@has-header = false\n@quote-char = \"\nST: String[,_SmvStrNull_]\nEMP: Long\n```\n\n### Publish to Hive Table\n\nIf you would like to publish your module to a hive table, add a `tableName` method to EmploymentByState. It should return the name of the Hive table as a string.\n\n```python\nclass EmploymentByState(SmvModule, SmvOutput):\n    ...\n    def tableName(self):\n        return \"myTableName\"\n    def requiresDS(self): ...\n    def run(self, i): ...\n```\n\nThen use\n```bash\n$ smv-pyrun --publish-hive -m stage1.employment.EmploymentByState\n```\n\n## smv-pyshell\n\nWe can also view the results in the smv-pyshell. To start the shell, run\n\n```\n$ smv-pyshell\n```\n\nTo get the `DataFrame` of `EmploymentByState`,\n\n```shell\n>>> x = df('stage1.employment.EmploymentByState')\n\n```\n\nTo peek at the first row of results,\n\n```shell\n>>> x.peek(1)\nST:String            = 50\nEMP:Long             = 245058\ncat_high_emp:Boolean = false\n```\n\nSee the [user guide](docs/user/0_user_toc.md) for further examples and documentation.\n\n\n# Contributions\n\nPlease see [SMV Development Best Practices](docs/dev/00_DevProcess/best_practice.md).\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/TresAmigosSD/SMV",
    "keywords": "spark pyspark bigdata",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "smv",
    "platform": "",
    "project_url": "https://pypi.org/project/smv/",
    "release_url": "https://pypi.org/project/smv/1.5.2.11/",
    "requires_python": "",
    "summary": "Spark Modularized View",
    "version": "1.5.2.11"
  },
  "releases": {
    "1.5.2.11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9b4734c5ea14ba728795a3802493cf27",
          "sha256": "4a04c8a7519fd77a282bf81dfea27368aefdee521785f149e8a042cad27cbd84"
        },
        "downloads": 0,
        "filename": "smv-1.5.2.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b4734c5ea14ba728795a3802493cf27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 53688,
        "upload_time": "2017-06-18T12:20:42",
        "url": "https://files.pythonhosted.org/packages/54/7f/17ac11c6d268cc7a5ccbf72beb3dbb1f59e19fb967f7eab05500c082a95a/smv-1.5.2.11-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "02a0a66a14b9d64a01a485859809c03e",
          "sha256": "c809201d9523527f01ae5426bc7f2246ca184f4abb64222505972ac51591d110"
        },
        "downloads": 0,
        "filename": "smv-1.5.2.11.tar.gz",
        "has_sig": false,
        "md5_digest": "02a0a66a14b9d64a01a485859809c03e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6652896,
        "upload_time": "2017-06-18T12:22:10",
        "url": "https://files.pythonhosted.org/packages/2c/1a/b9eac30743f723a412c9bdd6a3490fdc9fc041686e86326ec6a5678b2ca8/smv-1.5.2.11.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9b4734c5ea14ba728795a3802493cf27",
        "sha256": "4a04c8a7519fd77a282bf81dfea27368aefdee521785f149e8a042cad27cbd84"
      },
      "downloads": 0,
      "filename": "smv-1.5.2.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9b4734c5ea14ba728795a3802493cf27",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 53688,
      "upload_time": "2017-06-18T12:20:42",
      "url": "https://files.pythonhosted.org/packages/54/7f/17ac11c6d268cc7a5ccbf72beb3dbb1f59e19fb967f7eab05500c082a95a/smv-1.5.2.11-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "02a0a66a14b9d64a01a485859809c03e",
        "sha256": "c809201d9523527f01ae5426bc7f2246ca184f4abb64222505972ac51591d110"
      },
      "downloads": 0,
      "filename": "smv-1.5.2.11.tar.gz",
      "has_sig": false,
      "md5_digest": "02a0a66a14b9d64a01a485859809c03e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6652896,
      "upload_time": "2017-06-18T12:22:10",
      "url": "https://files.pythonhosted.org/packages/2c/1a/b9eac30743f723a412c9bdd6a3490fdc9fc041686e86326ec6a5678b2ca8/smv-1.5.2.11.tar.gz"
    }
  ]
}