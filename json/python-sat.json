{
  "info": {
    "author": "Alexey Ignatiev, Joao Marques-Silva, Antonio Morgado",
    "author_email": "{aignatiev,jpms,ajmorgado}@ciencias.ulisboa.pt",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "PySAT: simple SAT-based prototyping in Python\n=============================================\n\nA Python library providing a simple interface to a number of\nstate-of-art Boolean satisfiability (SAT) solvers and a few types of\ncardinality encodings. The purpose of PySAT is to enable researchers\nworking on SAT and its applications and generalizations to easily\nprototype with SAT oracles in Python while exploiting incrementally the\npower of the original low-level implementations of modern SAT solvers.\n\nWith PySAT it should be easy for you to implement a MaxSAT solver, an\nMUS/MCS extractor/enumerator, or any tool solving an application problem\nwith the (potentially multiple) use of a SAT oracle.\n\nCurrently, the following SAT solvers are supported:\n\n-  Glucose (`3.0 <http://www.labri.fr/perso/lsimon/glucose/>`__)\n-  Lingeling (`bbc-9230380-160707 <http://fmv.jku.at/lingeling/>`__)\n-  Minicard (`1.2 <https://github.com/liffiton/minicard>`__)\n-  Minisat (`2.2 release <http://minisat.se/MiniSat.html>`__)\n-  Minisat (`GitHub version <https://github.com/niklasso/minisat>`__)\n\nCardinality encodings supported are implemented in C++ and include:\n\n-  pairwise [6]_\n-  bitwise [6]_\n-  sequential counters [7]_\n-  sorting networks [3]_\n-  cardinality networks [1]_\n-  ladder [4]_\n-  totalizer [2]_\n-  modulo totalizer [5]_\n\n.. [1] Roberto As\u00edn, Robert Nieuwenhuis, Albert Oliveras,\n   Enric Rodr\u00edguez-Carbonell. *Cardinality Networks and Their Applications*.\n   SAT 2009. pp. 167-180\n\n.. [2] Olivier Bailleux, Yacine Boufkhad. *Efficient CNF Encoding of Boolean\n   Cardinality Constraints*. CP 2003. pp. 108-122\n\n.. [3] Kenneth E. Batcher. *Sorting Networks and Their Applications*.\n   AFIPS Spring Joint Computing Conference 1968. pp. 307-314\n\n.. [4] Ian P. Gent, Peter Nightingale. *A New Encoding of Alldifferent Into\n   SAT*. In International workshop on modelling and reformulating constraint\n   satisfaction problems 2004. pp. 95\u2013110\n\n.. [5] Toru Ogawa, Yangyang Liu, Ryuzo Hasegawa, Miyuki Koshimura,\n   Hiroshi Fujita. *Modulo Based CNF Encoding of Cardinality Constraints and\n   Its Application to MaxSAT Solvers*. ICTAI 2013. pp. 9-17\n\n.. [6] Steven David Prestwich. *CNF Encodings*. Handbook of Satisfiability.\n   2009. pp. 75-97\n\n.. [7] Carsten Sinz. *Towards an Optimal CNF Encoding of Boolean\n   Cardinality Constraints*. CP 2005. pp. 827-831\n\nUsage\n-----\n\nBoolean variables in PySAT are represented as natural identifiers, e.g. numbers\nfrom :math:`\\mathbb{N}_{>0}`. A *literal* in PySAT is assumed to be an integer,\ne.g. ``-1`` represents a literal :math:`\\neg{x_1}` while :math:`5` represents a\nliteral :math:`x_5`.  A *clause* is a list of literals, e.g. ``[-3, -2]`` is a\nclause :math:`(\\neg{x_3} \\vee \\neg{x_2})`.\n\nThe following is a trivial example of PySAT usage:\n\n.. code:: python\n\n    >>> from pysat.solvers import Glucose3\n    >>>\n    >>> g = Glucose3()\n    >>> g.add_clause([-1, 2])\n    >>> g.add_clause([-2, 3])\n    >>> print g.solve()\n    >>> print g.get_model()\n    ...\n    True\n    [-1, -2, -3]\n\nAnother example shows how to extract *unsatisfiable cores* from a SAT\nsolver given an unsatisfiable set of clauses:\n\n.. code:: python\n\n    >>> from pysat.solvers import Minisat22\n    >>>\n    >>> with Minisat22(bootstrap_with=[[-1, 2], [-2, 3]]) as m:\n    ...     print m.solve(assumptions=[1, -3])\n    ...     print m.get_core()\n    ...\n    False\n    [-3, 1]\n\nFinally, the following example gives an idea of how one can extract a\n*proof* (supported by Glucose3 and Lingeling only):\n\n.. code:: python\n\n    >>> from pysat.formula import CNF\n    >>> from pysat.solvers import Lingeling\n    >>>\n    >>> formula = CNF()\n    >>> formula.append([-1, 2])\n    >>> formula.append([1, -2])\n    >>> formula.append([-1, -2])\n    >>> formula.append([1, 2])\n    >>>\n    >>> with Lingeling(bootstrap_with=formula.clauses, with_proof=True) as l:\n    ...     if l.solve() == False:\n    ...         print(l.get_proof())\n    ...\n    ['2 0', '1 0', '0']\n\nPySAT usage is detailed in the `provided examples <examples>`__. For\ninstance, one can see there simple PySAT-based implementations of\n\n-  Fu&Malik algorithm for MaxSAT [8]_\n-  CLD-like algorithm for MCS extraction and enumeration [10]_\n-  LBX-like algorithm for MCS extraction and enumeration [11]_\n-  Deletion-based MUS extraction [9]_\n\n.. [8] Zhaohui Fu, Sharad Malik. *On Solving the Partial MAX-SAT Problem*.\n   SAT 2006. pp. 252-265\n\n.. [9] Joao Marques Silva. *Minimal Unsatisfiability: Models, Algorithms and\n   Applications*. ISMVL 2010. pp. 9-14\n\n.. [10] Joao Marques-Silva, Federico Heras, Mikolas Janota, Alessandro Previti,\n   Anton Belov. *On Computing Minimal Correction Subsets*. IJCAI 2013. pp.\n   615-622\n\n.. [11] Carlos Mencia, Alessandro Previti, Joao Marques-Silva. *Literal-Based\n   MCS Extraction*. IJCAI 2015. pp. 1973-1979\n\nInstallation\n------------\n\nThe simplest way to get and start using PySAT is to install the latest\nstable release of PySAT from PyPI:\n\n::\n\n    pip install python-sat\n\nAlternatively, you can clone this repository and do the following with\nyour local copy:\n\n::\n\n    python setup.py install\n\nor (if you choose a directory to install PySAT into)\n\n::\n\n    python setup.py install --prefix=<where-to-install>\n\nBoth options (i.e.\u00a0via ``pip`` or ``setup.py``) are supposed to download\nand compile all the supported SAT solvers as well as prepare the\ninstallation of PySAT.\n\nLicense\n-------\n\nThis project is licensed under the MIT License - see the\n`LICENSE <LICENSE.txt>`__ file for details.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/alexeyignatiev/pysat",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-sat",
    "platform": "",
    "project_url": "https://pypi.org/project/python-sat/",
    "release_url": "https://pypi.org/project/python-sat/0.1.1dev7/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A Python library for prototyping with SAT oracles",
    "version": "0.1.1dev7"
  },
  "releases": {
    "0.1.1dev3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c3d469b3b8bc8a55aef411f5eaa66485",
          "sha256": "39a8dca81745996052ca4520fdf3f9b436de7101efc57a568e10b56f785547b8"
        },
        "downloads": -1,
        "filename": "python-sat-0.1.1dev3.tar.gz",
        "has_sig": false,
        "md5_digest": "c3d469b3b8bc8a55aef411f5eaa66485",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 68238,
        "upload_time": "2018-01-28T17:49:34",
        "url": "https://files.pythonhosted.org/packages/77/10/d1b1f96e10fbbc419ad5e77033a9e8bf5d3db22eb4c1ad745798b734da20/python-sat-0.1.1dev3.tar.gz"
      }
    ],
    "0.1.1dev4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "edda6bd793aae2519207557bd24d1d1d",
          "sha256": "560bacf8fc85c46328ab7984644440f2473ef189cfe56e7d9a2426b25ec0db05"
        },
        "downloads": -1,
        "filename": "python-sat-0.1.1dev4.tar.gz",
        "has_sig": false,
        "md5_digest": "edda6bd793aae2519207557bd24d1d1d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 68247,
        "upload_time": "2018-01-28T18:35:03",
        "url": "https://files.pythonhosted.org/packages/6a/49/1c42ec0688a0274c015adf1a7995586ce84efede11fb61f8992f4bed01e6/python-sat-0.1.1dev4.tar.gz"
      }
    ],
    "0.1.1dev5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c26236dc00bf0a0a140b7479734fa63e",
          "sha256": "ac52522f64b1c676fce8045958252f541741426eb46bba2efb3fd48c74af64b3"
        },
        "downloads": -1,
        "filename": "python-sat-0.1.1dev5.tar.gz",
        "has_sig": false,
        "md5_digest": "c26236dc00bf0a0a140b7479734fa63e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 68250,
        "upload_time": "2018-01-30T10:27:58",
        "url": "https://files.pythonhosted.org/packages/8a/3f/1bb899413fcf1a36b4ef4ab2f68cd807c7638d33a06a7369e5483a7641e8/python-sat-0.1.1dev5.tar.gz"
      }
    ],
    "0.1.1dev6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e332b9ce56d110b8b65008423da23e7e",
          "sha256": "15bb5036b5cd1236dba35976b51dd5b7e302cb940f374c1a3e41e3edcf1f7236"
        },
        "downloads": -1,
        "filename": "python-sat-0.1.1dev6.tar.gz",
        "has_sig": false,
        "md5_digest": "e332b9ce56d110b8b65008423da23e7e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 68446,
        "upload_time": "2018-01-31T10:44:47",
        "url": "https://files.pythonhosted.org/packages/ef/22/cdcde7547907b3ab8e9c55e529634ef0f470f77979c40483877e895807a3/python-sat-0.1.1dev6.tar.gz"
      }
    ],
    "0.1.1dev7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ddbe7ee6fa1fe2465f4811d7667f7a73",
          "sha256": "fdd662be539f45490b333c9671fa2a2c732319fbb5903eac68c55f012be3917c"
        },
        "downloads": -1,
        "filename": "python-sat-0.1.1dev7.tar.gz",
        "has_sig": false,
        "md5_digest": "ddbe7ee6fa1fe2465f4811d7667f7a73",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 68442,
        "upload_time": "2018-01-31T10:59:54",
        "url": "https://files.pythonhosted.org/packages/1d/0e/4cd82964664703fc5d95fddc5fba467cc679a6a67e14a236618ba522a5ed/python-sat-0.1.1dev7.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ddbe7ee6fa1fe2465f4811d7667f7a73",
        "sha256": "fdd662be539f45490b333c9671fa2a2c732319fbb5903eac68c55f012be3917c"
      },
      "downloads": -1,
      "filename": "python-sat-0.1.1dev7.tar.gz",
      "has_sig": false,
      "md5_digest": "ddbe7ee6fa1fe2465f4811d7667f7a73",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 68442,
      "upload_time": "2018-01-31T10:59:54",
      "url": "https://files.pythonhosted.org/packages/1d/0e/4cd82964664703fc5d95fddc5fba467cc679a6a67e14a236618ba522a5ed/python-sat-0.1.1dev7.tar.gz"
    }
  ]
}