{
  "info": {
    "author": "Peter Sanchez",
    "author_email": "petersanchez@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": ".. |nlshield| image:: https://img.shields.io/badge/100%25-Netlandish-blue.svg?style=square-flat\n              :target: http://www.netlandish.com\n\n==============================\ndjango-impersonate |nlshield|\n==============================\n:Info: Simple application to allow superusers to \"impersonate\" other non-superuser accounts.\n:Version: 1.3.0\n:Author: Peter Sanchez (http://www.petersanchez.com)\n\nPython / Django Support\n=======================\n\n* Python 2.7+ for Django versions 1.8 - 1.11\n* Python 3.4+ for Django versions 1.9 - 2.0\n* Python 3.3 for Django version 1.8\n\n**Note:** In release 1.4 we plan to only support Python 3.4+ and Django 2.0+ moving forward. Bug fixes will be ported to older versions but new feature development will be focusing on modern releases of Python and Django.\n\nDependencies\n============\n\n* Depends on your project using the django.contrib.session framework.\n\n**NOTE:**\n\n* **Version 1.3 adds a settings format change.** Please see the Settings section for details.\n* **Version 1.0 adds new functionality by default.** Please see the DISABLE_LOGGING settings option.\n* If you need to use this with Django older than 1.8, please use version django-impersonate == 1.0.1\n* If you need to use this with Django older than 1.7, please use version django-impersonate == 0.9.2\n* **Version 0.9.2 partially reverts work completed in version 0.9.1.** This is because work done to address a request in `Issue #17 <https://bitbucket.org/petersanchez/django-impersonate/issues/17/remember-where-to-return-to-after>`_ broke default behavior for all previous versions. `Issue #24 <https://bitbucket.org/petersanchez/django-impersonate/issues/24/impersonate_redirect_url-no-longer-works>`_ was opened and the fix was released in 0.9.2 to address it. Please see the new USE_HTTP_REFERER settings option.\n* If you need to use this with Django older than 1.4, please use version django-impersonate == 0.5.3\n\n\nInstallation\n============\n\nPIP::\n\n    pip install django-impersonate\n\nBasic Manual Install::\n\n    $ python setup.py build\n    $ sudo python setup.py install\n\nAlternative Install (Manually):\n\nPlace impersonate directory in your Python path. Either in your Python installs site-packages directory or set your $PYTHONPATH environment variable to include a directory where the impersonate directory lives.\n\n\nUse\n===\n\n#. Add 'impersonate' to your INSTALLED_APPS\n\n#. Add 'impersonate.middleware.ImpersonateMiddleware' to your MIDDLEWARE_CLASSES\n\n#. Add 'impersonate.urls' somewhere in your url structure. Example::\n\n    urlpatterns = patterns('',\n        url(r'^admin/', include(admin.site.urls)),\n        url(r'^impersonate/', include('impersonate.urls')),\n        ... (all your other urls here) ...\n    )\n\n**Note:** The ImpersonationMiddleware class should be placed AFTER the ``django.contrib.auth`` middleware classes\n\nFunctionality\n=============\n\n**You can now impersonate another user by hitting the following path:**\n\n    /impersonate/<user-id>/\n\nReplace <user-id> with the user id of the user you want to impersonate.\n\nWhile in impersonation \"mode\" the request.user object will have an\n\"is_impersonate\" attribute set to True. So if you wanted to check in your\ntemplates or view, you just do something like...::\n\n    {% if user.is_impersonate %} .... {% endif %}\n\nThe original user is available as ``request.impersonator``::\n\n    {{ request.user }} ({{ request.impersonator }})\n\nThe real user is available as ``request.real_user`` - this is equivalent\nto calling ``getattr(request, 'impersonator', request.user)``::\n\n    assert request.real_user == getattr(request, 'impersonator', request.user)\n\nYou can reference this URL with reverse() or the {% url %} template tag\nas 'impersonate-start' and expects the argument of the user ID. Example::\n\n    reverse('impersonate-start', args=[user.id])\n    reverse('impersonate-start', uid=user.id)\n\n\n**To remove the impersonation, hit the following path:**\n\n    /impersonate/stop/\n\nYou can reference this URL with reverse() or the {% url %} template tag\nas 'impersonate-stop'. When you call this URL, you will be redirected to\nthe page that you used to start impersonating a user (eg, some search results\nor the user list).\n\n\n**To list all users you can go to:**\n\n    /impersonate/list/\n\nThis will render the template 'impersonate/list_users.html' and will pass\nthe following in the context:\n\n* users - queryset of all users\n* paginator - Django Paginator instance\n* page - Current page of objects (from Paginator)\n* page_number - Current page number, defaults to 1\n\nYou can reference this URL with reverse() or the {% url %} template tag\nas 'impersonate-list'.\n\n\n**To search all users you can go to:**\n\n    /impersonate/search/\n\nThis will render the template 'impersonate/search_users.html' and will pass\nthe following in the context:\n\n* users - queryset of all users\n* paginator - Django Paginator instance\n* page - Current page of objects (from Paginator)\n* page_number - Current page number, defaults to 1\n* query - The search query that was entered\n\nThe view will expect a GET request and look for the 'q' variable being passed.\nIf present, it will search the user entries with the value of 'q'. The default\nfields searched are:\n\nUser.username, User.first_name, User.last_name, User.email\n\nYou can reference this URL with reverse() or the {% url %} template tag\nas 'impersonate-search'.\n\n\n**To allow some users to impersonate other users**\n\nYou can optionally allow only some non-superuser and non-staff users to impersonate by adding a **CUSTOM_ALLOW** setting option. Create a function that takes a request object, and based on your rules, returns True if the user is allowed to impersonate or not.\n\n**To limit what users a user can impersonate**\n\nBy, optionally, setting the **CUSTOM_USER_QUERYSET** option you can control what users can be impersonated. It takes a request object of the user, and returns a QuerySet of users. This is used when searching for users to impersonate, when listing what users to impersonate, and when trying to start impersonation.\n\nSignals\n=======\n\nIf you wish to hook into the impersonation session (for instance, in order to\naudit access), there are two signals that are fired by django-impersonate, at\nthe beginning and end of a session:\n\n* session_begin - sent when calling the ``impersonate`` view\n* session_end - sent when calling the ``stop_impersonate`` view\n\nBoth of these signals send the same arguments:\n\n* sender - this is a Django signal requirement, and is always set to None\n* impersonator - a reference to the User object of the person doing the impersonation\n* impersonating - a reference to the User object of the person being impersonated\n* request - the Django HttpRequest object from which the impersonation was invoked\n\nThe request object is included as it contains pertinent information that you may wish\nto audit - such as client IP address, user-agent string, etc.\n\nFor an example of how to hook up the signals, see the relevant test - ``test_successful_impersonation_signals``.\n\nNB The session_end signal will only be fired if the impersonator explicitly ends\nthe session.\n\nSettings\n========\n\nThe following settings are available for django-impersonate. All settings should be \nset as variables in a dictionary assigned to the attribute named ``IMPERSONATE``.\n\nFor example::\n\n    IMPERSONATE = {\n        'REDIRECT_URL': '/some-path/',\n        'PAGINATE_COUNT': 10,\n    }\n\n**Note:** This is a new format. The old format is now deprecated and support for the old format will be removed in a future release.\n\nHere are the options available...\n\n    REDIRECT_URL\n\nThis is the URL you want to be redirected to *after* you have chosen to\nimpersonate another user. If this is not present it will check for\nthe LOGIN_REDIRECT_URL setting and fall back to '/' if neither is\npresent. Value should be a string containing the redirect path.\n\n\n    USE_HTTP_REFERER\n\nIf this is set to True, then the app will attempt to be redirect you to\nthe URL you were at when the impersonation began once you have *stopped*\nthe impersonation. For example, if you were at the url '/foo/bar/' when\nyou began impersonating a user, once you end the impersonation, you will\nbe redirected back to '/foo/bar/' instead of the value in\nREDIRECT_URL.\n\nValue should be a boolean (True/False), defaults to False\n\n\n    PAGINATE_COUNT\n\nThis is the number of users to paginate by when using the list or\nsearch views. This defaults to 20. Value should be an integer.\n\n\n    REQUIRE_SUPERUSER\n\nIf this is set to True, then only users who have 'is_superuser' set\nto True will be allowed to impersonate other users. Default is False.\nIf False, then any 'is_staff' user will be able to impersonate other\nusers.\n\n**Note:** Regardless of this setting, a 'is_staff' user will **not** be\nallowed to impersonate a 'is_superuser' user.\n\nValue should be a boolean (True/False)\n\nIf the CUSTOM_ALLOW is set, then that custom function is used, and\nthis setting is ignored.\n\n\n    ALLOW_SUPERUSER\n\nBy default, superusers cannot be impersonated; this setting allows for that.\n\n**Note:** Even when this is true, only superusers can impersonate other superusers,\nregardless of the value of REQUIRE_SUPERUSER.\n\nValue should be a boolean (True/False), and the default is False.\n\n\n    URI_EXCLUSIONS\n\nSet to a list/tuple of url patterns that, if matched, user\nimpersonation is not completed. It defaults to::\n\n    (r'^admin/',)\n\nIf you do not want to use even the default exclusions then set\nthe setting to an emply list/tuple.\n\n\n    CUSTOM_USER_QUERYSET\n\nA string that represents a function (e.g. 'module.submodule.mod.function_name')\nthat allows more fine grained control over what users a user can impersonate.\nIt takes one argument, the request object, and should return a QuerySet. Only\nthe users in this queryset can be impersonated.\n\nThis function will not be called when the request has an unauthorised users,\nand will only be called when the user is allowed to impersonate (cf.\nREQUIRE_SUPERUSER and CUSTOM_ALLOW ).\n\nRegardless of what this function returns, a user cannot impersonate a\nsuperuser, even if there are superusers in the returned QuerySet.\n\nIt is optional, and if it is not present, the user can impersonate any user\n(i.e. the default is User.objects.all()).\n\n\n    CUSTOM_ALLOW\n\nA string that represents a function (e.g. 'module.submodule.mod.function_name')\nthat allows more fine grained control over who can use the impersonation. It\ntakes one argument, the request object, and should return True to allow\nimpesonation. Regardless of this setting, the user must be logged in to\nimpersonate. If this setting is used, REQUIRE_SUPERUSER is ignored.\n\nIt is optional, and if it is not present, the previous rules about superuser\nand REQUIRE_SUPERUSER apply.\n\n\n    REDIRECT_FIELD_NAME\n\nA string that represents the name of a request (GET) parameter which contains\nthe URL to redirect to after impersonating a user. This can be used to redirect\nto a custom page after impersonating a user. Example::\n\n    # in settings.py\n    IMPERSONATE = {'REDIRECT_FIELD_NAME': 'next'}\n\n    # in your view\n    <a href=\"{% url 'impersonate-list' %}?next=/some/url/\">switch user</a>\n\nTo return always to the current page after impersonating a user, use request.path:\n\n    ``<a href=\"{% url 'impersonate-list' %}?next={{request.path}}\">switch user</a>``\n\n\n    SEARCH_FIELDS\n\nArray of user model fields used for building searching query. Default value is\n[User.USERNAME_FIELD, 'first_name', 'last_name', 'email']. If the User model doesn't have\nthe USERNAME_FIELD attribute, it falls back to 'username' (< Django 1.5).\n\n\n    LOOKUP_TYPE\n\nA string that represents SQL lookup type for searching users by query on\nfields above. It is 'icontains' by default.\n\n    DISABLE_LOGGING\n\nA bool that can be used to disable the logging of impersonation sessions. By\ndefault each impersonation ``session_begin`` signal will create a new\n``ImpersonationLog`` object, which is closed out (duration calculated) at\nthe corresponding ``session_end`` signal.\n\nIt is optional, and defaults to False (i.e. logging is enabled).\n\n    MAX_FILTER_SIZE\n\nThe max number of items acceptable in the admin list filters. If the number of\nitems exceeds this, then the filter is removed (just shows all). This is used\nby the \"Filter by impersonator\" filter.\n\nIt is optional, and defaults to 100.\n\nSETTINGS PRIOR TO VERSION 1.3\n=============================\n\nPrior to version 1.3, settings were not stored in a dictionary. They were each an individual setting. For the time being, you can still use individual settings for each option. If present, they will supersede any setting within the ``IMPERSONATE`` dictionary and will also issue a warning that the settings format has changed and you should convert your projects settings to use the new dictionary format.\n\nAll dictionary options can be used as individual settings by simply prepending ``IMPERSONATE_`` to the name. For example, the following is the dictionary sample from above and it's old style settings equivalent.\n\nNew format::\n\n    IMPERSONATE = {\n        'REDIRECT_URL': '/some-path/',\n        'PAGINATE_COUNT': 10,\n    }\n\n\nDeprecated (old) format::\n\n    IMPERSONATE_REDIRECT_URL = '/some-path'\n    IMPERSONATE_PAGE_COUNT = 10\n\nAdmin\n=====\n\nAs of version 1.3 django-impersonate now includes a helper admin mixin, located at ``imepersonate.admin.UserAdminImpersonateMixin``, to include in your User model's ModelAdmin. This provides a direct link to impersonate users from your user model's Django admin list view. Using it is very simple, however if you're using the default ``django.contrib.auth.models.User`` model you will need to unregister the old ModelAdmin before registering your own.\n\nThe ``UserAdminImpersonateMixin`` has a attribute named ``open_new_window`` that **defaults to False**. If this is set to True a new window will be opened to start the new impersonation session when clicking the impersonate link directly in the admin.\n\nHere's an example::\n\n    # yourapp/admin.py\n    from django.contrib import admin\n    from django.contrib.auth.models import User\n    from django.contrib.auth.admin import UserAdmin\n    from impersonate.admin import UserAdminImpersonateMixin\n\n\n    class NewUserAdmin(UserAdminImpersonateMixin, UserAdmin):\n        open_new_window = True\n        pass\n\n    admin.site.unregister(User)\n    admin.site.register(User, NewUserAdmin)\n\nTesting\n=======\n\nYou need factory_boy installed for tests to run. To install, use::\n\n    $ pip install factory_boy\n\n**Note:** This is currently not required for Python 3.3+. For more info on factory_boy, see: https://github.com/dnerdy/factory_boy\n\nFrom the repo checkout, ensure you have Django in your PYTHONPATH and  run::\n\n    $ python runtests.py\n\nTo get test coverage, use::\n\n    $ coverage run --branch runtests.py\n    $ coverage html  <- Pretty HTML files for you\n    $ coverage report -m  <- Ascii report\n\nIf you're bored and want to test all the supported environments, you'll need tox.::\n\n    $ pip install tox\n    $ tox\n\nAnd you should see::\n\n    py3.6-django2.0: commands succeeded\n    py3.6-django1.11: commands succeeded\n    py3.5-django1.11: commands succeeded\n    py3.5-django1.10: commands succeeded\n    py3.5-django1.9: commands succeeded\n    py3.5-django1.8: commands succeeded\n    py3.4-django1.11: commands succeeded\n    py3.4-django1.10: commands succeeded\n    py3.4-django1.9: commands succeeded\n    py3.4-django1.8: commands succeeded\n    py3.3-django1.8: commands succeeded\n    py2.7-django1.11: commands succeeded\n    py2.7-django1.10: commands succeeded\n    py2.7-django1.9: commands succeeded\n    py2.7-django1.8: commands succeeded\n    congratulations :)\n\n\nCopyright & Warranty\n====================\nAll documentation, libraries, and sample code are\nCopyright 2011 Peter Sanchez <petersanchez@gmail.com>. The library and\nsample code are made available to you under the terms of the BSD license\nwhich is contained in the included file, BSD-LICENSE.\n\n\n==================\nCommercial Support\n==================\n\nThis software, and lots of other software like it, has been built in support of many of\nNetlandish's own projects, and the projects of our clients. We would love to help you\non your next project so get in touch by dropping us a note at hello@netlandish.com.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://bitbucket.org/petersanchez/django-impersonate/",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-impersonate",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-impersonate/",
    "release_url": "https://pypi.org/project/django-impersonate/1.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Django app to allow superusers to impersonate other users.",
    "version": "1.3"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b4fca3e29472835ae11cabef87873a7d",
          "sha256": "e0a8a31812e52f1365e24aa0678d58459106eaac8e01c58384685da836008a5a"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b4fca3e29472835ae11cabef87873a7d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3871,
        "upload_time": "2011-01-27T03:44:12",
        "url": "https://files.pythonhosted.org/packages/76/de/302bf116cca5aecf0b4bf016c5c03813ea9fdb6e419708a0f39ed1baaa73/django-impersonate-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "88c3a497ee5e94d74fa95271801bd237",
          "sha256": "3e71b647b0c83ef09954397aee68c3762f9387736cd308b320067698dd309103"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "88c3a497ee5e94d74fa95271801bd237",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5656,
        "upload_time": "2011-01-29T03:33:08",
        "url": "https://files.pythonhosted.org/packages/26/aa/4033a91da70f49e77afa7f8a02f56976f68d11d2c8908374dc1d221747bd/django-impersonate-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fa3103dcb4c512dd3397b3437eaed9f1",
          "sha256": "cf2db8c2a8dd78500d6bae4dd2f34471d98a7477727d9ee020fc1440c6e98dc4"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fa3103dcb4c512dd3397b3437eaed9f1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5702,
        "upload_time": "2011-02-01T02:10:15",
        "url": "https://files.pythonhosted.org/packages/f8/da/54c62b6feb251c94f8adc782967b8df94b6297bd2dee61070e8620a1234e/django-impersonate-0.3.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8dbac44daf0d567aa645fac054c46a83",
          "sha256": "e267138a72b1e4760206ce6cb8ba3be4fea4cbc173d4be683747b1cfef837aa6"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8dbac44daf0d567aa645fac054c46a83",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5979,
        "upload_time": "2011-05-07T01:42:27",
        "url": "https://files.pythonhosted.org/packages/be/ce/ec2b6e71602a1a87870d8410987baa393f1d8828fd7ae1968838e6e275e3/django-impersonate-0.4.tar.gz"
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9877a602188f9f409392375c314b923f",
          "sha256": "4c21252efea8e999ea84f41a598e45d343b4d6bce27deb032c9d555e71c568a3"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9877a602188f9f409392375c314b923f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7253,
        "upload_time": "2011-12-25T00:32:35",
        "url": "https://files.pythonhosted.org/packages/db/63/ad5a46c3411f2bd2daf9d40cd7096a495b0a47480b083a681433d003b988/django-impersonate-0.5.tar.gz"
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6c9175cbe21b57ee7e44aead156449a2",
          "sha256": "42c45ef160faa35c509741a67c78b583df72002a5a6721e2499039f545fd8004"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6c9175cbe21b57ee7e44aead156449a2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7521,
        "upload_time": "2012-03-04T16:17:36",
        "url": "https://files.pythonhosted.org/packages/87/5e/63f0d370798ccb3343340572ffdfe0d356df7d41569f4eb1fe6bb10da466/django-impersonate-0.5.1.tar.gz"
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f03997f04ac82db3554850959aa39c41",
          "sha256": "74527fc3b0c45e0adaed96786a433d4e825dbd900ef86e0bdd8ddbc48b3a7388"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f03997f04ac82db3554850959aa39c41",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7559,
        "upload_time": "2012-03-20T21:45:23",
        "url": "https://files.pythonhosted.org/packages/d8/33/14660258db6607612dc2fea903087274ed135a4ecb4dda29dc3db220f6be/django-impersonate-0.5.2.tar.gz"
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f1e8644be69e3d1c620e014603b3eecd",
          "sha256": "0a7049daba72fba3d6b8d4c45b95c635d8543c266ffcd7665341f46ec01e7683"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f1e8644be69e3d1c620e014603b3eecd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7549,
        "upload_time": "2012-06-21T03:39:00",
        "url": "https://files.pythonhosted.org/packages/39/5a/44403b8f0ae40fe83c3d50964642b5ba902be137d6a696f993573ed08f0b/django-impersonate-0.5.3.tar.gz"
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "69cb92d3dd937d6d1085d475f88b85f9",
          "sha256": "8b6f46741fad672b3b982e4f48e0629f42b59a1da50501c383cc64d962c41fac"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "69cb92d3dd937d6d1085d475f88b85f9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10397,
        "upload_time": "2013-03-21T23:29:29",
        "url": "https://files.pythonhosted.org/packages/9b/41/0e7373bcfac4a27a833306887afcbcb562346b5c6297d754ef9c75789a9a/django-impersonate-0.6.0.tar.gz"
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6230d88bf845c4c6abcf25e7381d4775",
          "sha256": "0804c67f9bfc02138f79902c6a4925ec38690ececd18459300c6ae130eb23b48"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6230d88bf845c4c6abcf25e7381d4775",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18733,
        "upload_time": "2013-03-28T18:47:09",
        "url": "https://files.pythonhosted.org/packages/02/47/9b4ce672fdd9a1cec99347c6c54f7d117ece5b9ffd4310e231f288051aca/django-impersonate-0.7.0.tar.gz"
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "196fd485192f3f39aeec9adbf79e430a",
          "sha256": "6b974ab76333e0ed9bbc4e2033cc34090e10e95c651b19d4726706f2cebbfdd8"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "196fd485192f3f39aeec9adbf79e430a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12040,
        "upload_time": "2013-08-24T00:10:57",
        "url": "https://files.pythonhosted.org/packages/6a/a0/b4663afae28f6d692c4771949956c172068b3f0d14d9fc5be74c40a8a619/django-impersonate-0.8.0.tar.gz"
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c1cbf24ddf87664430883ff05675810c",
          "sha256": "617ddd314b0e4f16c1fbd29f17116859463d31be1c558ceff139370947fab11d"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c1cbf24ddf87664430883ff05675810c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12082,
        "upload_time": "2013-11-10T04:27:06",
        "url": "https://files.pythonhosted.org/packages/ba/b7/795f51b4cc7d9f2b84be22a11e3720ca595546620c5daf04c9e59db985e7/django-impersonate-0.8.1.tar.gz"
      }
    ],
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7a2f1c3581c415138a9dbb7af8cb25e9",
          "sha256": "d8c8300793e2804458dfcd3ce5820a18b319f080e20cd28e8f13e973827c101e"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "7a2f1c3581c415138a9dbb7af8cb25e9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13346,
        "upload_time": "2014-10-01T04:26:07",
        "url": "https://files.pythonhosted.org/packages/68/a7/f31ceec5105e3132e286a27749882dbcc1901943c963adf5867d159245b0/django-impersonate-0.9.tar.gz"
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "eccc551b11ce883eabc77edeca31b22d",
          "sha256": "e7a7d4ed3b7bf681f739d2d9d4673e57ab36e55a53a9a3ccd37244844d055f7b"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eccc551b11ce883eabc77edeca31b22d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13990,
        "upload_time": "2015-04-16T17:20:43",
        "url": "https://files.pythonhosted.org/packages/4a/8c/556164a8abb17f016b13b4d31797cb9c841522603a95cf160c85e5d8b74e/django-impersonate-0.9.1.tar.gz"
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "097770e1125038e2590aa029e665e73b",
          "sha256": "9e878245e454925517134626c6250ccf76275ea01c5b324b1a6cdaea91199985"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "097770e1125038e2590aa029e665e73b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15322,
        "upload_time": "2015-08-25T06:35:44",
        "url": "https://files.pythonhosted.org/packages/b6/1e/7c1be36d0f460aeda4d8d13e5e1d6413dfb63e0b00d669fa1f5d65dba0c1/django-impersonate-0.9.2.tar.gz"
      }
    ],
    "0.9b0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4b9b58da140ed4e003a339e8759f0079",
          "sha256": "78b116e57b1e2e1fa466e5d4c55ed065990cb2834703a5443950f8038199a9c6"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.9b0.tar.gz",
        "has_sig": false,
        "md5_digest": "4b9b58da140ed4e003a339e8759f0079",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13004,
        "upload_time": "2014-07-08T16:47:26",
        "url": "https://files.pythonhosted.org/packages/04/f6/d06d850f9aeab719a4998eec0fab2db2ae3c58e0de15624af8ac3cc53b1c/django-impersonate-0.9b0.tar.gz"
      }
    ],
    "0.9b1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4960173d9b99f270a5f890fef8fc2650",
          "sha256": "62661e1421f7d6ebb9a2a2b9b2e47985cc6bc7d3a34e5a182fba924c2305c051"
        },
        "downloads": -1,
        "filename": "django-impersonate-0.9b1.tar.gz",
        "has_sig": false,
        "md5_digest": "4960173d9b99f270a5f890fef8fc2650",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13033,
        "upload_time": "2014-08-15T17:19:09",
        "url": "https://files.pythonhosted.org/packages/c7/e8/6644ca8e8e443eeeffa05317aaa957bf0a973c9b46d2abc9a78e16ca0b01/django-impersonate-0.9b1.tar.gz"
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b79a9d8f33c557489d8c375fe90f4ff1",
          "sha256": "acf996803385d72ac019b4eb2320e57893fdcd52d75613fa5c2b1eb4c052114b"
        },
        "downloads": -1,
        "filename": "django-impersonate-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b79a9d8f33c557489d8c375fe90f4ff1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18539,
        "upload_time": "2016-02-14T17:45:16",
        "url": "https://files.pythonhosted.org/packages/2d/34/f020fe88688844d9a104525701fd4d6b48aacf7380988ee040a1a36a3be9/django-impersonate-1.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "155b666619ea7ad7dc15dd57121a3c18",
          "sha256": "42e4ba0864d2fed1f0e678f925653d5be99a1c377ccaeede28f8bd65430dea73"
        },
        "downloads": -1,
        "filename": "django-impersonate-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "155b666619ea7ad7dc15dd57121a3c18",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18675,
        "upload_time": "2016-04-10T20:34:04",
        "url": "https://files.pythonhosted.org/packages/bf/c9/e03ccf67bf8bd31b0957c3cd6df6dfd408ed288aed5c9f6cacbba7b85363/django-impersonate-1.0.1.tar.gz"
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8a322dc1d0f3f95cb23eccb3474e2bc2",
          "sha256": "1312055f6099d86d76d26d2729a174a4d6a9279bf3f51f4baf230d0f07b24f91"
        },
        "downloads": -1,
        "filename": "django-impersonate-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8a322dc1d0f3f95cb23eccb3474e2bc2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19739,
        "upload_time": "2017-01-16T18:58:41",
        "url": "https://files.pythonhosted.org/packages/26/15/3edbdb2195d3c4d0e973d9b72565f068ff1faa9820edc9307cab00596179/django-impersonate-1.1.tar.gz"
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "efaf423d16251ed186d9c1fc52ef3dc4",
          "sha256": "eb1d465c817c67c7b456d4e4494cf27a09d03089fd701adc70b7e7937558811a"
        },
        "downloads": -1,
        "filename": "django-impersonate-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "efaf423d16251ed186d9c1fc52ef3dc4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20103,
        "upload_time": "2017-11-13T23:35:51",
        "url": "https://files.pythonhosted.org/packages/f8/96/b7ca3a44b050944f1081ce7977032911679ffc031a043a0a6b0cea4df227/django-impersonate-1.2.1.tar.gz"
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8bfcd07bb6c4a0a92e36cf1a1c889460",
          "sha256": "83bf5610e2bb404336a58059cb33927447a3cd6eb827397e980063b1adab3bd8"
        },
        "downloads": -1,
        "filename": "django-impersonate-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8bfcd07bb6c4a0a92e36cf1a1c889460",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21729,
        "upload_time": "2017-12-15T00:49:43",
        "url": "https://files.pythonhosted.org/packages/5e/aa/62847439f2ce329119dc36e7b1fab774f018bef0e05fe7b26a3b08dee7f8/django-impersonate-1.3.tar.gz"
      }
    ],
    "1.3c0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b5ac485aeb116d163bb63daf07e4572a",
          "sha256": "239819e8906efa215c5ad72f90c17d335b3744eb6ee776483fa927623de1988a"
        },
        "downloads": -1,
        "filename": "django-impersonate-1.3c0.tar.gz",
        "has_sig": false,
        "md5_digest": "b5ac485aeb116d163bb63daf07e4572a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21696,
        "upload_time": "2017-12-08T20:00:48",
        "url": "https://files.pythonhosted.org/packages/ff/22/05b92de502399135546b98a5e3214f86a2c94be9389d866faac4f3e95413/django-impersonate-1.3c0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "8bfcd07bb6c4a0a92e36cf1a1c889460",
        "sha256": "83bf5610e2bb404336a58059cb33927447a3cd6eb827397e980063b1adab3bd8"
      },
      "downloads": -1,
      "filename": "django-impersonate-1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "8bfcd07bb6c4a0a92e36cf1a1c889460",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 21729,
      "upload_time": "2017-12-15T00:49:43",
      "url": "https://files.pythonhosted.org/packages/5e/aa/62847439f2ce329119dc36e7b1fab774f018bef0e05fe7b26a3b08dee7f8/django-impersonate-1.3.tar.gz"
    }
  ]
}