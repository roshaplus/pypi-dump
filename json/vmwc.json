{
  "info": {
    "author": "Jossef Harush",
    "author_email": "jossef12@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": ".. image:: https://cloud.githubusercontent.com/assets/1287098/23579240/b873ab2a-00f1-11e7-99f0-2d31b0f0e1e0.png\r\n\r\n\r\nSimplified VMWare API client for Python\r\n=======================================\r\n\r\nvmwc is designed to be the simplest way possible to use VMWare's API\r\n\r\n\r\n\r\n\r\n.. code-block:: python\r\n\r\n    from vmwc import VMWareClient\r\n\r\n    host = '192.168.1.1'\r\n    username = '<username>'\r\n    password = '<password>'\r\n\r\n    with VMWareClient(host, username, password) as client:\r\n        for vm in client.get_virtual_machines():\r\n            vm.power_on()\r\n\r\nInstallation\r\n^^^^^^^^^^^^\r\n\r\n.. code-block:: python\r\n\r\n    pip install vmwc\r\n\r\nExamples\r\n^^^^^^^^\r\n\r\n- `datastores list <https://github.com/jossef/vmwc/blob/master/examples/datastores-list.py>`_\r\n- `virtual machines create new <https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-create-new.py>`_\r\n- `virtual machines delete <https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-delete.py>`_\r\n- `virtual machines list <https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-list.py>`_\r\n- `virtual machines power off <https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-power-off.py>`_\r\n- `virtual machines power on <https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-power-on.py>`_\r\n- `virtual machines reboot <https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-reboot.py>`_\r\n- `virtual machines reconfigure bios <https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-reconfigure-bios.py>`_\r\n- `virtual machines reconfigure network interfaces <https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-reconfigure-network-interfaces.py>`_\r\n- `virtual machines snapshots delete all <https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-snapshots-delete-all.py>`_\r\n- `virtual machines snapshots delete specific <https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-snapshots-delete-specific.py>`_\r\n- `virtual machines snapshots revert <https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-snapshots-revert.py>`_\r\n- `virtual machines snapshots list  <https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-snapshots-list.py>`_\r\n- `virtual machines snapshots new <https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-snapshots-new.py>`_\r\n- `virtual switches create new <https://github.com/jossef/vmwc/blob/master/examples/virtual-switches-create-new.py>`_\r\n- `virtual switches delete <https://github.com/jossef/vmwc/blob/master/examples/virtual-switches-delete.py>`_\r\n- `virtual switches list <https://github.com/jossef/vmwc/blob/master/examples/virtual-switches-list.py>`_\r\n\r\n\r\n\r\n\r\nHistory\r\n^^^^^^^\r\n\r\nWhen I searched for a library to write automation scripts to control my esxi environment, I bumped into `pyvmomi <http://github.com/vmware/pyvmomi>`_\r\n. My first impression was \"It's too low-level and the general Development Experience doesn't feel easy to use\". Therefore, on me break time, I wrote `vmwc` on the base of  `pyvmomi <http://github.com/vmware/pyvmomi>`_ to provide a lighter, TL;DR feeling and straight-forward API.\r\n\r\nRemarks\r\n^^^^^^^\r\n\r\nvmwc was developed to control a single esxi machine at a time. However, it should work with vcenter instances as well\r\n\r\n\r\n\r\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jossef/vmwc",
    "keywords": "vmwc vmware pyvmomi python client vix setuptools development",
    "license": "Apache v2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vmwc",
    "platform": "",
    "project_url": "https://pypi.org/project/vmwc/",
    "release_url": "https://pypi.org/project/vmwc/0.0.3/",
    "requires_python": "",
    "summary": "VMWare python client",
    "version": "0.0.3"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "32d9d03bb7e4ee484c861d9ed4436c02",
          "sha256": "b3816331335b653f43d9b405cb43e9f7135648b77329e749133578d47f31e28b"
        },
        "downloads": 275,
        "filename": "vmwc-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32d9d03bb7e4ee484c861d9ed4436c02",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9869,
        "upload_time": "2016-11-26T09:45:34",
        "url": "https://files.pythonhosted.org/packages/34/16/37d923f49279b00e067ddfe0ed2897d833842f25dbeab82d8d2bd0b3ff94/vmwc-0.0.1-py2.py3-none-any.whl"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1fcbcfb9de016ad84532486aa295b6ef",
          "sha256": "0fa01fff8a44decd5a547f8cdb4c34d38b6bbe6f3602bafa4ebe5ae9268376bf"
        },
        "downloads": 285,
        "filename": "vmwc-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1fcbcfb9de016ad84532486aa295b6ef",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9870,
        "upload_time": "2016-11-26T09:45:36",
        "url": "https://files.pythonhosted.org/packages/f9/1f/696ee7f608731a8dec543e11a48441f214369a83dc3c89a14de64090ce1c/vmwc-0.0.2-py2.py3-none-any.whl"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "60f4882fe2566cf7db7e6ee21ddb17a3",
          "sha256": "b11b5e6b6b671d4498a53cab9a80ea366edb331f5877c0878910539b4f1fb964"
        },
        "downloads": 13,
        "filename": "vmwc-0.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60f4882fe2566cf7db7e6ee21ddb17a3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10096,
        "upload_time": "2017-03-04T18:14:32",
        "url": "https://files.pythonhosted.org/packages/5c/40/1e34d611cbb60ff36426793987b370845b5b9bea544b3f838205a70cddc8/vmwc-0.0.3-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "60f4882fe2566cf7db7e6ee21ddb17a3",
        "sha256": "b11b5e6b6b671d4498a53cab9a80ea366edb331f5877c0878910539b4f1fb964"
      },
      "downloads": 13,
      "filename": "vmwc-0.0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "60f4882fe2566cf7db7e6ee21ddb17a3",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 10096,
      "upload_time": "2017-03-04T18:14:32",
      "url": "https://files.pythonhosted.org/packages/5c/40/1e34d611cbb60ff36426793987b370845b5b9bea544b3f838205a70cddc8/vmwc-0.0.3-py2.py3-none-any.whl"
    }
  ]
}