{
  "info": {
    "author": "Tasuku SUENAGA a.k.a. gunyarakun",
    "author_email": "tasuku-s-github@titech.ac",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Games/Entertainment :: Board Games",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "python-shogi: a pure Python shogi library\n=========================================\n\n.. image:: https://travis-ci.org/gunyarakun/python-shogi.svg\n    :target: https://travis-ci.org/gunyarakun/python-shogi\n\n.. image:: https://coveralls.io/repos/gunyarakun/python-shogi/badge.svg\n    :target: https://coveralls.io/r/gunyarakun/python-shogi\n\n.. image:: https://landscape.io/github/gunyarakun/python-shogi/prototype/landscape.svg?style=flat\n    :target: https://landscape.io/github/gunyarakun/python-shogi\n\n.. image:: https://badge.fury.io/py/python-shogi.svg\n    :target: https://pypi.python.org/pypi/python-shogi\n\nIntroduction\n------------\n\nThis is the module for shogi written in Pure Python. It's based on python-chess commit 6203406259504cddf6f271e6a7b1e04ba0c96165.\n\nThis is the scholars mate in python-shogi:\n\n.. code:: python\n\n    >>> import shogi\n\n    >>> board = shogi.Board()\n\n    >>> board.push(shogi.Move.from_usi('7g7f'))\n\n    >>> board.push_usi('3c3d')\n    Move.from_usi('3c3d')\n    >>> board.push_usi('8h2b+')\n    Move.from_usi('8h2b+')\n    >>> board.push_usi('4a5b')\n    Move.from_usi('4a5b')\n    >>> board.push_usi('B*4b')\n    Move.from_usi('B*4b')\n    >>> board.push_usi('5a4a')\n    Move.from_usi('5a4a')\n    >>> board.push_usi('2b3a')\n    Move.from_usi('2b3a')\n    >>> board.is_checkmate()\n    True\n\nFeatures\n--------\n\n* Supports Python 2.7 and Python 3.3+.\n\n* Supports standard shogi (hon shogi)\n\n* Legal move generator and move validation.\n\n  .. code:: python\n\n      >>> shogi.Move.from_usi(\"5i5a\") in board.legal_moves\n      False\n\n* Make and unmake moves.\n\n  .. code:: python\n\n      >>> last_move = board.pop() # Unmake last move\n      >>> last_move\n      Move.from_usi('2b3a')\n\n      >>> board.push(last_move) # Restore\n\n* Show a simple ASCII board.\n\n  .. code:: python\n\n      >>> print(board)\n       l  n  s  g  .  k +B  n  l\n       .  r  .  .  g  B  .  .  .\n       p  p  p  p  p  p  .  p  p\n       .  .  .  .  .  .  p  .  .\n       .  .  .  .  .  .  .  .  .\n       .  .  P  .  .  .  .  .  .\n       P  P  .  P  P  P  P  P  P\n       .  .  .  .  .  .  .  R  .\n       L  N  S  G  K  G  S  N  L\n      <BLANKLINE>\n       S*1\n\n* Show a KIF style board.\n\n  .. code:: python\n\n      >>> print(board.kif_str())\n      \u5f8c\u624b\u306e\u6301\u99d2\uff1a\n        \uff19 \uff18 \uff17 \uff16 \uff15 \uff14 \uff13 \uff12 \uff11\n      +---------------------------+\n      |v\u9999v\u6842v\u9280v\u91d1 \u30fbv\u7389 \u99acv\u6842v\u9999|\u4e00\n      | \u30fbv\u98db \u30fb \u30fbv\u91d1 \u89d2 \u30fb \u30fb \u30fb|\u4e8c\n      |v\u6b69v\u6b69v\u6b69v\u6b69v\u6b69v\u6b69 \u30fbv\u6b69v\u6b69|\u4e09\n      | \u30fb \u30fb \u30fb \u30fb \u30fb \u30fbv\u6b69 \u30fb \u30fb|\u56db\n      | \u30fb \u30fb \u30fb \u30fb \u30fb \u30fb \u30fb \u30fb \u30fb|\u4e94\n      | \u30fb \u30fb \u6b69 \u30fb \u30fb \u30fb \u30fb \u30fb \u30fb|\u516d\n      | \u6b69 \u6b69 \u30fb \u6b69 \u6b69 \u6b69 \u6b69 \u6b69 \u6b69|\u4e03\n      | \u30fb \u30fb \u30fb \u30fb \u30fb \u30fb \u30fb \u98db \u30fb|\u516b\n      | \u9999 \u6842 \u9280 \u91d1 \u7389 \u91d1 \u9280 \u6842 \u9999|\u4e5d\n      +---------------------------+\n      \u5148\u624b\u306e\u6301\u99d2\uff1a\u3000\u9280\n\n* Detects checkmates, stalemates.\n\n  .. code:: python\n\n      >>> board.is_stalemate()\n      False\n      >>> board.is_game_over()\n      True\n\n* Detects repetitions. Has a half move clock.\n\n  .. code:: python\n\n      >>> board.is_fourfold_repetition()\n      False\n      >>> board.move_number\n      8\n\n* Detects checks and attacks.\n\n  .. code:: python\n\n      >>> board.is_check()\n      True\n      >>> board.is_attacked_by(shogi.BLACK, shogi.A4)\n      True\n      >>> attackers = board.attackers(shogi.BLACK, shogi.H5)\n      >>> attackers\n      SquareSet(0b111000010000000000000000000000000000000000000000000000000000000000000000000000)\n      >>> shogi.H2 in attackers\n      True\n      >>> print(attackers)\n      . . . . . . . . .\n      . . . . . . . . .\n      . . . . . . . . .\n      . . . . . . . . .\n      . . . . . . . . .\n      . . . . . . . . .\n      . . . . . . . . .\n      . . . . . . . 1 .\n      . . . 1 1 1 . . .\n\n* Parses and creates USI representation of moves.\n\n  .. code:: python\n\n      >>> board = shogi.Board()\n      >>> shogi.Move(shogi.E2, shogi.E4).usi()\n      '2e4e'\n\n* Parses and creates SFENs\n\n  .. code:: python\n\n      >>> board.sfen()\n      'lnsgkgsnl/1r5b1/ppppppppp/9/9/9/PPPPPPPPP/1B5R1/LNSGKGSNL b - 1'\n      >>> board.piece_at(shogi.I5)\n      Piece.from_symbol('K')\n\n* Read and write KIFs.\n\n  .. code:: python\n\n      >>> import shogi.KIF\n\n      >>> kif = shogi.KIF.Parser.parse_file('data/games/habu-fujii-2006.kif')[0]\n\n      >>> kif['names'][shogi.BLACK]\n      '\u7fbd\u751f\u5584\u6cbb'\n      >>> kif['names'][shogi.WHITE]\n      '\u85e4\u4e95\u731b'\n      >>> kif['moves'] # doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE\n      ['7g7f',\n       '3c3d',\n       ...,\n       '9a9b',\n       '7a7b+']\n      >>> kif['win']\n      'b'\n\n* Communicate with a CSA protocol.\n\n  Please see `random_csa_tcp_match <https://github.com/gunyarakun/python-shogi/blob/master/scripts/random_csa_tcp_match>`_.\n\n* Parse professional shogi players' name\n\n      >>> import shogi.Person\n\n      >>> shogi.Person.Name.is_professional('\u7fbd\u751f\u3000\u5584\u6cbb \u540d\u4eba\u30fb\u68cb\u8056\u30fb\u738b\u4f4d\u30fb\u738b\u5ea7')\n      True\n\nPeformance\n----------\npython-shogi is not intended to be used by serious shogi engines where\nperformance is critical. The goal is rather to create a simple and relatively\nhighlevel library.\n\nYou can install the `gmpy2` or `gmpy` (https://code.google.com/p/gmpy/) modules\nin order to get a slight performance boost on basic operations like bit scans\nand population counts.\n\npython-shogi will only ever import very basic general (non-shogi-related)\noperations from native libraries. All logic is pure Python. There will always\nbe pure Python fallbacks.\n\nInstalling\n----------\n\n* With pip:\n\n  ::\n\n      sudo pip install python-shogi\n\n* From current source code:\n\n  ::\n\n      python setup.py sdist\n      sudo python setup.py install\n\nHow to test\n-----------\n\n::\n\n  > nosetests\n  or\n  > python setup.py test # requires python setup.py install\n\nIf you want to print lines from the standard output, execute nosetests like following.\n\n::\n\n  > nosetests -s\n\nIf you want to test among different Python versions, execute tox.\n\n::\n\n  > pip install tox\n  > tox\n\nToDo\n----\n\n- Support USI protocol.\n\n- Support board.generate_attacks() and use it in board.is_attacked_by() and board.attacker_mask().\n\n- Remove rotated bitboards and support `Shatranj-style direct lookup\n  <http://arxiv.org/pdf/0704.3773.pdf>`_ like recent python-chess.\n\n- Support %MATTA etc. in CSA TCP Protocol.\n\n- Support board.is_pinned() and board.pin().\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/gunyarakun/python-shogi",
    "keywords": "shogi csa kif",
    "license": "GPL3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-shogi",
    "platform": "",
    "project_url": "https://pypi.org/project/python-shogi/",
    "release_url": "https://pypi.org/project/python-shogi/1.0.2/",
    "requires_python": "",
    "summary": "A pure Python shogi library with move generation and validation and handling of common formats.",
    "version": "1.0.2"
  },
  "releases": {
    "0.0.1": [],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5bba30481d7e31bf5639e25f867de894",
          "sha256": "47d290d8c1bac3a347447f9e1efac4f744240a0f4c250482438a4ed5007887fa"
        },
        "downloads": 138,
        "filename": "python-shogi-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5bba30481d7e31bf5639e25f867de894",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 54086,
        "upload_time": "2016-09-26T03:06:01",
        "url": "https://files.pythonhosted.org/packages/9d/74/badf677170c4c5d56f6f401812323bf30834e3e0ae7e5a49ccece95ac1da/python-shogi-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0a5ccfafcaac54bde2be5bad2054a29a",
          "sha256": "22585206b6c6aa5d7ecddac0d9287e94041cb020469a423c3ea8c0b85ff556a5"
        },
        "downloads": 104,
        "filename": "python-shogi-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0a5ccfafcaac54bde2be5bad2054a29a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 54103,
        "upload_time": "2016-10-15T22:42:21",
        "url": "https://files.pythonhosted.org/packages/4d/76/3b6fab7fe29d722b9ace27351cf84af2e33773e4f8cef58955acec1b1965/python-shogi-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6b3ebddfd95fd81ef7090a9d6cd2f85a",
          "sha256": "24f8f23b5a48dd8d6b265d54056d77552213c54451d611f6cfa472fb7d8e00d8"
        },
        "downloads": 0,
        "filename": "python-shogi-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6b3ebddfd95fd81ef7090a9d6cd2f85a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 54103,
        "upload_time": "2017-05-08T04:05:05",
        "url": "https://files.pythonhosted.org/packages/d6/62/decf3fa9e5749bc4090f642d00cf7946f2f83c0b609e75ff693ed0894b3e/python-shogi-1.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "6b3ebddfd95fd81ef7090a9d6cd2f85a",
        "sha256": "24f8f23b5a48dd8d6b265d54056d77552213c54451d611f6cfa472fb7d8e00d8"
      },
      "downloads": 0,
      "filename": "python-shogi-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6b3ebddfd95fd81ef7090a9d6cd2f85a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 54103,
      "upload_time": "2017-05-08T04:05:05",
      "url": "https://files.pythonhosted.org/packages/d6/62/decf3fa9e5749bc4090f642d00cf7946f2f83c0b609e75ff693ed0894b3e/python-shogi-1.0.2.tar.gz"
    }
  ]
}