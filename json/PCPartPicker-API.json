{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "PCPartPicker-API\n================\n\nPython3 API for pulling information from\n`PcPartPicker <https://pcpartpicker.com>`__\n\nEverything is pulled directly from there, no data is stored in this\npackage\n\nInstallation\n============\n\n``pip install PCPartPicker_API``\n\nSee the PyPi page\n`here <https://pypi.python.org/pypi/PCPartPicker-API>`__\n\nQuickstart\n==========\n\nA quick demonstration of what this API can do\n\n.. code:: python\n\n    # Import PCPartPicker\n    from PCPartPicker_API import PCPartPicker\n\n    # Print the total amount of pages for CPUs\n    print(\"Total CPU pages:\", PCPartPicker.get_total_pages(\"cpu\"))\n\n    # Pull info from page 1 of CPUs\n    cpu_info = PCPartPicker.get_part(\"cpu\", 1)\n\n    # Print the names and prices of all the CPUs on the page\n    for cpu in cpu_info:\n        print(cpu[\"name\"], \":\", cpu[\"price\"])\n\n    # Change the region to UK\n    PCPartPicker.set_region(\"uk\")\n    print(\"\\nRegion changed to UK\")\n\n    # Pull info from all CPU pages (this may take a minute)\n    cpu_info_2 = PCPartPicker.get_part(\"cpu\")\n\n    # Print the names and prices of all the CPUs on all pages\n    # The prices will now be in GBP (\u00a3) instead of USD ($)\n    for cpu in cpu_info_2:\n        print(cpu[\"name\"], \":\", cpu[\"price\"])\n\nDocumentation\n=============\n\nTo start using the API, import ``PCPartPicker`` from\n``PCPartPicker_API``\n\nA list of ``part_type``\\ s and their dictionary keys are available in\n`*PPP*\\ data <https://github.com/thatguywiththatname/PcPartPicker-API/blob/master/PCPartPicker_API/_PPP_data.py>`__.\n\n``PCPartPicker`` contains these (public) functions:\n\nn| Function name         | Paramaters                     | Description|\nn| ``set_region``        | ``region``                     | The region of PCPartPicker that this API uses. ``region`` must be one of: ``\"au\", \"be\", \"ca\", \"de\", \"es\", \"fr\", \"in\", \"ie\", \"it\", \"nz\", \"uk\", \"us\"``. The defualt is for this library is ``\"us\"``. As far as I can tell this only changes the currency                                                                                                                                                                                                                                                                                                                                                                                                                       |\n+-----------------------+--------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``get_part``          | ``part_type, single_page=0``   | This function returns a list of dictionaries. Each ``part_type`` will have different dictionary keys. To see what keys exist for each ``part_type``, you can look them up in `*PPP*\\ data <https://github.com/thatguywiththatname/PcPartPicker-API/blob/master/PCPartPicker_API/_PPP_data.py>`__. Every dictionary will always contain the keys ``name``, ``price`` and ``ratings`` (although they may not always have a value). ``single_page`` is set to ``0`` by default. ``0`` means it will scrape all pages and gather all the info it can. If you only want to get information from, for example, page 2 of the cpu results, you would set ``single_page`` to ``2``   |\nn| ``get_total_pages``   | ``part_type``                  | This function simply returns the amount of pages of results there are for a particular ``part_type``|\nn\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/thatguywiththatname/PcPartPicker-API",
    "keywords": "PCPartPicker API scraping",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PCPartPicker-API",
    "platform": "",
    "project_url": "https://pypi.org/project/PCPartPicker-API/",
    "release_url": "https://pypi.org/project/PCPartPicker-API/0.0.2/",
    "requires_dist": [
      "requests",
      "beautifulsoup4"
    ],
    "requires_python": "",
    "summary": "A Python3 API for getting part information from PcPartPicker",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "00783e36e750a5f21355c81acbca9d42",
          "sha256": "7834d9503bc694b9f8d90a361540041dd5435ada04b3565ee95131f5ef4f3362"
        },
        "downloads": -1,
        "filename": "PCPartPicker_API-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "00783e36e750a5f21355c81acbca9d42",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 6106,
        "upload_time": "2018-01-11T18:10:51",
        "url": "https://files.pythonhosted.org/packages/4e/a1/614f4c1ce992b4efd44ede7117c528b851ce3eaca131c18d305de8e7ed93/PCPartPicker_API-0.0.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b9f2f4393745c13c9937c6573d399965",
          "sha256": "3d9701be3eae12f41459a6f7cf66c7f9565518cee140a7213dba25923f111eae"
        },
        "downloads": -1,
        "filename": "PCPartPicker_API-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b9f2f4393745c13c9937c6573d399965",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4576,
        "upload_time": "2018-01-11T18:10:52",
        "url": "https://files.pythonhosted.org/packages/44/ec/53802610aa719f346d13cbc5466496bb2eef52d8d2873cc4ad4c28bcfb7f/PCPartPicker_API-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9a3cb7077bc88731ee79bbfe8bbda257",
          "sha256": "1e98d993db8363a9bd727105dc028af4d174776e256386c5bd4e75ed4fc153ca"
        },
        "downloads": -1,
        "filename": "PCPartPicker_API-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a3cb7077bc88731ee79bbfe8bbda257",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 6533,
        "upload_time": "2018-01-11T20:34:37",
        "url": "https://files.pythonhosted.org/packages/29/03/9dcd46dc6012b66419cb345216e664487dcc48ef7f06f7fbf8b2ba127379/PCPartPicker_API-0.0.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c22673f20cae158cccc807d2b3c04bed",
          "sha256": "49cca271002731a82a09ce69e30df7394daa7535366c8e4ea6f0a5c4767c7f81"
        },
        "downloads": -1,
        "filename": "PCPartPicker_API-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c22673f20cae158cccc807d2b3c04bed",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4846,
        "upload_time": "2018-01-11T20:34:39",
        "url": "https://files.pythonhosted.org/packages/fc/81/cf684ad9a31f51ac0439bcd3b8cce90eaa725023ec17e1f38caa45e5d100/PCPartPicker_API-0.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9a3cb7077bc88731ee79bbfe8bbda257",
        "sha256": "1e98d993db8363a9bd727105dc028af4d174776e256386c5bd4e75ed4fc153ca"
      },
      "downloads": -1,
      "filename": "PCPartPicker_API-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9a3cb7077bc88731ee79bbfe8bbda257",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 6533,
      "upload_time": "2018-01-11T20:34:37",
      "url": "https://files.pythonhosted.org/packages/29/03/9dcd46dc6012b66419cb345216e664487dcc48ef7f06f7fbf8b2ba127379/PCPartPicker_API-0.0.2-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "c22673f20cae158cccc807d2b3c04bed",
        "sha256": "49cca271002731a82a09ce69e30df7394daa7535366c8e4ea6f0a5c4767c7f81"
      },
      "downloads": -1,
      "filename": "PCPartPicker_API-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c22673f20cae158cccc807d2b3c04bed",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4846,
      "upload_time": "2018-01-11T20:34:39",
      "url": "https://files.pythonhosted.org/packages/fc/81/cf684ad9a31f51ac0439bcd3b8cce90eaa725023ec17e1f38caa45e5d100/PCPartPicker_API-0.0.2.tar.gz"
    }
  ]
}