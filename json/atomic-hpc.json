{
  "info": {
    "author": "Chris Sewell",
    "author_email": "chrisj_sewell@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Environment :: Web Environment",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Scientific/Engineering :: Chemistry",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "atomic-hpc\n==========\n\n|travis| |coveralls| |codacy|\n\n**Project**: https://github.com/chrisjsewell/atomic-hpc\n\nA package for running multiple executable scripts on both local and\nremote hosts, configured using a modern standard\n`YAML <https://en.wikipedia.org/wiki/YAML>`__ file. This package was\ndesigned, in particular, for job submission to High Performance\nComputing (HPC) clusters, such as the `Imperial HPC\nfacility <https://www.imperial.ac.uk/admin-services/ict/self-service/research-support/hpc/>`__.\nWorking examples can be found\n`here <https://github.com/chrisjsewell/atomic-hpc/tree/master/examples>`__.\n\nInstallation\n------------\n\nIt is recommended to setup an\n`Anaconda <https://docs.continuum.io/anaconda/install/>`__ environment.\nFor the Imperial HPC, run the following (as outlined on the\n`wiki <https://wiki.imperial.ac.uk/display/HPC/Python>`__):\n\n::\n\n    >> module load anaconda3/personal\n    >> anaconda-setup\n\nThen install atomic-hpc simply by:\n\n::\n\n    >> pip install atomic-hpc\n\nMinimal Example\n---------------\n\n1. Write a yaml configuration file; each run must have a name and a\n   unique id, then attributes can be set in the (global) ``defaults``\n   section or per run (run attributes will overwrite defaults):\n\n   **config.yaml**:\n\n   .. code:: yaml\n\n       defaults:\n           environment: unix\n\n           process:\n             unix:\n               run:\n                 - echo \"hallo world\" > hallo.txt\n\n           output:\n             path: output\n       runs:\n         - id: 1\n           name: test_local\n         - id: 2\n           name: test_other\n\n2. Submit it with the command line app (use -h to see all options):\n\n   ::\n\n       >> run_config config.yaml\n\n3. The results will be available in the output path, with one folder per\n   run:\n\n   ::\n\n       >> ls -R output\n       output/1_test_local:\n       config_1.yaml     hallo.txt\n       output/2_test_other:\n       config_2.yaml     hallo.txt\n\nMinimal Example (Remote and PBS)\n--------------------------------\n\nJobs can be submitted to remote hosts and, optionally,\n`PBS <https://en.wikipedia.org/wiki/Portable_Batch_System>`__ type\nsystems.\n\n**config\\_remote.yaml**\n\n.. code:: yaml\n\n    runs:\n      - id: 1\n        name: test_qsub\n        environment: qsub\n\n        output:\n          remote:\n            hostname: login.cx1.hpc.imperial.ac.uk\n            username: cjs14\n          path: /work/cjs14/yaml_test\n\n        process:\n            cores_per_node: 16  \n            nnodes: 1     \n            walltime: 1:00:00\n            queue: queue_name\n            modules:\n                - quantum-espresso\n                - intel-suite\n                - mpi\n            run: \n                - mpiexec pw.x -i script2.in > main.qe.scf.out  \n\nTo retrieve outputs from a remote host, once all processes have run:\n\n::\n\n    >> retrieve_config config_remote.yaml -o path/to/local/outputs\n\nInputs\n------\n\nInput files and scripts can be local or remote and will be copied to the\noutput folder before the runs. Variables can also be set that will be\nreplaced in the cmnd lines and script files if a corresponding\n``@v{var_id}`` regex is found. Similarly entire file contents can be\nparsed to the script with the ``@f{file_id}`` regex:\n\n::\n\n    >> cat path/to/script1.in\n    @v{var1}\n    @f{file1}\n    >> cat path/to/file1\n    This is file 1\n\n**config.yaml**:\n\n.. code:: yaml\n\n    defaults:\n        description: quantum-espresso run\n        environment: unix\n\n        input:\n            remote:\n                hostname: login.cx1.hpc.imperial.ac.uk\n                username: cjs14\n            variables:\n                var1:\n                nprocs: 2\n            files:\n                file1: path/to/input.txt\n            scripts:\n            - path/to/script1.in\n\n        process:\n            unix:\n                run:\n                    - mpirun -np @v{nprocs} pw.x -i script1.in > main.qe.scf.out\n\n    runs:\n      - id: 1\n        name: run1\n        input:\n            variables:\n                var1: value1\n      - id: 2\n        name: run2\n        input:\n            variables:\n                var1: value2\n\n**Run**:\n\n::\n\n    >> run_config config.yaml\n    >> ls -R output\n    output/1_run1:\n    config_1.yaml  input.txt  main.qe.scf.out  script.in\n    output/2_run2:\n    config_2.yaml  input.txt  main.qe.scf.out  script.in\n    >> cat output/1_run1/script.in\n    value1\n    This is file 1\n\nNB: all relative paths are resolved relative to the execution directory,\nunless set with ``run_config -b base/path/``.\n\nOutputs\n-------\n\nAs well as specifying the output path, post-process file removal and\nrenaming can be configured:\n\n.. code:: yaml\n\n    runs:\n      - id: 1\n        name: run1\n        output:\n            path: path/to/output\n            remove:\n                - tmp/\n            rename:\n                .other.out: .other.qe.json\n\nFull Configuration Options\n--------------------------\n\n.. code:: yaml\n\n    runs:\n      description: quantum-espresso run\n      environment: qsub\n      input:\n        path:\n        scripts:\n          - path/to/script1.in\n          - path/to/script2.in\n        files:\n          file1: path/to/file1\n        variables:\n          var1: overridevalue\n          var2: value\n          nprocs: 2\n        remote:\n          hostname: login.cx1.hpc.imperial.ac.uk\n          port: 22\n          username: cjs14\n          password:\n          pkey:\n          key_filename:\n          timeout:\n      output:\n        remote:\n          hostname: login.cx1.hpc.imperial.ac.uk\n          port: 22\n          username: cjs14\n          password:\n          pkey:\n          key_filename:\n          timeout:\n        path: path/to/top/level/output\n        remove:\n          # can also use wildcard characters *, ? and []\n          - tmp/\n        rename: \n          # renames any segment of file names, i.e. file.other.out.txt -> file.other.qe.txt\n          # searches for files (recursively) in all folders\n          .other.out: .other.qe\n      process:\n        unix:\n          run:\n            - mpirun -np @v{nprocs} pw.x -i script1.in > main.qe.scf.out\n        windows:\n          run:\n            - mpirun -np @v{nprocs} pw.x -i script1.in > main.qe.scf.out\n        qsub:\n          jobname:\n          cores_per_node: 16\n          nnodes: 1\n          memory_per_node: 1gb\n          tmpspace: 500gb # minimum free space required on the temporary directory\n          walltime: 1:00:00\n          queue: queue_name\n          email: bob@hotmail.com # send email on job start/end\n          # NB: the emailling feature has recently been disabled on the Imperial HPC\n          modules:\n            - module1\n            - module2\n          start_in_temp: true # if true cd to $TMPDIR and copy all files before running executables\n          run:\n            - mpiexec pw.x -i script2.in > main.qe.scf.out\n      id: 1\n      name: run1\n\nSetting up an SSH Public and Private Keys\n-----------------------------------------\n\nRather than directly using a password to access the remote host, it is\nreccommended that a public key authentication be used, as a more secure\nauthentication method. There are numerous explanations on the internet\n(including\n`here <https://help.ubuntu.com/community/SSH/OpenSSH/Keys>`__) and below\nfollows a short setup guide (taken from\n`here <https://wiki.ch.ic.ac.uk/wiki/index.php?title=Mod:Hunt_Research_Group/SSHkeyfile>`__):\n\nFirst open a shell on the computer you want to connect from. Enter cd\n~/.ssh. If an ``ls`` shows to files called 'id\\_rsa' and 'id\\_rsa.pub'\nyou already have a key pair. If not, enter ``ssh-keygen`` Here is what\nthe result should look like:\n\n::\n\n    heiko@clove:~/.ssh$ ssh-keygen \n    Generating public/private rsa key pair.\n    Enter file in which to save the key (/Users/heiko/.ssh/id_rsa):\n    Enter passphrase (empty for no passphrase): \n    Enter same passphrase again: \n    Your identification has been saved in id_rsa.\n    Your public key has been saved in id_rsa.pub.\n    The key fingerprint is:\n    f0:da:dc:77:cf:71:12:c8:50:dc:18:a9:8d:66:38:ae heiko@clove.ch.ic.ac.uk\n    The key's randomart image is:\n    +--[ RSA 2048]----+\n    |           .o=   |\n    |           .+ .  |\n    |      .  ..+     |\n    |       oo =o..   |\n    |       .S+  o .  |\n    |       +..     . |\n    |      ..o . . o..|\n    |      E    . . +o|\n    |                o|\n    +-----------------+\n\nYou should keep the standard directory and choose a suitably difficult\npassphrase.\n\nThe two file you just created are key and keyhole. The first file\n'id\\_rsa' is the key. You should not ever ever ever give it to anybody\nelse or allow anyone to copy it. The second file 'id\\_rsa.pub' the\nkeyhole. It is public and you could give it to anyone. In this case,\ngive it to the hpc.\n\nIf you open 'id\\_rsa.pub' it should contain one line of, similar to:\n\n::\n\n    ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAwRDgM+iQg7OaX/CFq1sZ9jl206nYIhW9SMBqsOIRvGM68/6o6uxZo/D4IlmQI9sAcU5FVNEt9dvDanRqUlC7ZtcOGOCqZsj1HTGD3LcOiPNHYPvi1auEwrXv1hDh4pmJwdgZCRnpewNl+I6RNBiZUyzLzp0/2eIyf4TqG1rpHRNjmtS9turANIv1GK1ONIO7RfVmmIk/jjTQJU9iJqje9ZSXTSm7rUG4W8q+mWcnACReVChc+9mVZDOb3gUZV1Vs8e7G36nj6XfHw51y1B1lrlnPQJ7U3JdqPz6AG3Je39cR1vnfALxBSpF5QbTHTJOX5ke+sNKo//kDyWWlfzz3rQ== heiko@clove.ch.ic.ac.uk\n\nNow log in to the HPC and open (or create) the file\n'~/.ssh/authorized\\_keys'. In a new line at the end of this file, you\nshould add a comment (starting with #) about where that keypair comes\nfrom and then in a second line you should copy and paste the complete\ncontents of your 'id\\_rsa.pub' file.\n\n::\n\n    #MAC in the office\n    ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAwRDgM+iQg7OaX/CFq1sZ9jl206nYIhW9SMBqsOIRvGM68/6o6uxZo/D4IlmQI9sAcU5FVNEt9dvDanRqUlC7ZtcOGOCqZsj1HTGD3LcOiPNHYPvi1auEwrXv1hDh4pmJwdgZCRnpewNl+I6RNBiZUyzLzp0/2eIyf4TqG1rpHRNjmtS9turANIv1GK1ONIO7RfVmmIk/jjTQJU9iJqje9ZSXTSm7rUG4W8q+mWcnACReVChc+9mVZDOb3gUZV1Vs8e7G36nj6XfHw51y1B1lrlnPQJ7U3JdqPz6AG3Je39cR1vnfALxBSpF5QbTHTJOX5ke+sNKo//kDyWWlfzz3rQ== heiko@clove.ch.ic.ac.uk\n\nClose the 'authorized\\_keys' file and your connection to the HPC. Now\nconnect again. You will be asked for the passphrase for your keyfile.\nEnter it. You should now be logged in to the HPC. If you are not asked\nfor the passphrase but for the password of your account, the Server does\nnot accept your key pair.\n\nSo far, we have replaced entering the password for your account with\nentering the passphrase for your keypair. This is where a so called\nSSH-agent comes handy. The agent will store your passphrases for you so\nyou do not have to enter them anymore. Luckily MacOS has one build in,\nthat should have popped up and asked you, whether you want the agent to\ntake care of your passphrases. If you said 'YES', that was the very last\ntime you ever heard or saw anything of it or your passphrase. Similar\nagents exist for more or less every OS. From now on you just have to\nenter hostname and username and you are logged in.\n\nNotes\n-----\n\nIf using special characters in strings (like \\*) be sure to wrap them in\n\"\" or use the > or \\| yaml components (see\nhttps://en.wikipedia.org/wiki/YAML#Basic\\_components)\n\n.. |travis| image:: https://travis-ci.org/chrisjsewell/jsonextended.svg?branch=master\n   :target: https://travis-ci.org/chrisjsewell/atomic-hpc\n.. |coveralls| image:: https://coveralls.io/repos/github/chrisjsewell/jsonextended/badge.svg?branch=master\n   :target: https://coveralls.io/github/chrisjsewell/atomic-hpc?branch=master\n.. |codacy| image:: https://api.codacy.com/project/badge/Grade/e0b541be3f834f12b77c712433ee64c9\n   :target: https://www.codacy.com/app/chrisj_sewell/atomic-hpc?utm_source=github.com&utm_medium=referral&utm_content=chrisjsewell/atomic-hpc&utm_campaign=Badge_Grade\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/chrisjsewell/atomic-hpc",
    "keywords": "yaml,hpc,configuration,ssh,sftp",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "atomic-hpc",
    "platform": "",
    "project_url": "https://pypi.org/project/atomic-hpc/",
    "release_url": "https://pypi.org/project/atomic-hpc/0.1.7/",
    "requires_dist": [
      "paramiko",
      "jsonschema",
      "jsonextended (>=0.5.6)",
      "ruamel.yaml (>=0.15.3)"
    ],
    "requires_python": "",
    "summary": "A package for running multiple executable scripts on both local and remote hosts, configured using a modern standard YAML",
    "version": "0.1.7"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f601a79c287ba74af66fb672fdf68fe9",
          "sha256": "e40aa3895428012ff540afcb96c38f21327602409da6a00b650e22b29f4d2dc4"
        },
        "downloads": 0,
        "filename": "atomic_hpc-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f601a79c287ba74af66fb672fdf68fe9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 6822,
        "upload_time": "2017-08-24T09:28:57",
        "url": "https://files.pythonhosted.org/packages/3d/bb/27180f531ab96bd00b55009ce405c9c315975d91be75be592ea0d849b858/atomic_hpc-0.0.1-py2.py3-none-any.whl"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cbef520a3b597feff1848092dbff6c37",
          "sha256": "b85bc9cb7a40ef110abf54ea4df5ab4da6a8d6ce03c760b1c4c17d33a2085dce"
        },
        "downloads": 0,
        "filename": "atomic_hpc-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cbef520a3b597feff1848092dbff6c37",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 6822,
        "upload_time": "2017-08-24T09:41:26",
        "url": "https://files.pythonhosted.org/packages/27/51/c5e4573f5eb7c0e9064652f6390a52a136ac278ac2b55f48f52b9318af30/atomic_hpc-0.0.2-py2.py3-none-any.whl"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0e92e1dac9320d69808f4bafd24bab70",
          "sha256": "ff038caf6d1a65fa782a96da7e47c90b07da2c9cca66a812294e7c36b4ad03b8"
        },
        "downloads": 0,
        "filename": "atomic_hpc-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e92e1dac9320d69808f4bafd24bab70",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 12069,
        "upload_time": "2017-09-03T15:28:59",
        "url": "https://files.pythonhosted.org/packages/e1/b4/7f5cfbe74194cd1897ad8829334e68b17c059651b844fe78cd9a91f23e6b/atomic_hpc-0.1.3-py2.py3-none-any.whl"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e365bc736633d63179553f026d85b91d",
          "sha256": "9e8df4ca40d6a5a41bf378cde44806a6d8694ac002f0e4da0ea1e361d7baaa80"
        },
        "downloads": 0,
        "filename": "atomic_hpc-0.1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e365bc736633d63179553f026d85b91d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 12671,
        "upload_time": "2017-09-04T19:28:19",
        "url": "https://files.pythonhosted.org/packages/b9/f4/22e2263a96aadc11814eafae2e09e3941d0c9ff3dad40695f70d5da5164f/atomic_hpc-0.1.4-py2.py3-none-any.whl"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "be034c80f3a619f97d9fd89948971da9",
          "sha256": "95ed60d9f3b2e3afe8973363bc0151266846e67c48dd4a1e9df8917fa2a06efe"
        },
        "downloads": 0,
        "filename": "atomic_hpc-0.1.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be034c80f3a619f97d9fd89948971da9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 14821,
        "upload_time": "2017-09-05T18:15:25",
        "url": "https://files.pythonhosted.org/packages/17/d3/99e02e4c16d39188e68c97eb5c739ba510c7a5b41ab19a28002dd5ff0ec6/atomic_hpc-0.1.5-py2.py3-none-any.whl"
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8dca927ff8d173f7bea54565384a2aed",
          "sha256": "c6effde88bfd453f65de79be0443f547378164260ccc4a6402fe254e2adee45a"
        },
        "downloads": 0,
        "filename": "atomic_hpc-0.1.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8dca927ff8d173f7bea54565384a2aed",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 15167,
        "upload_time": "2017-09-23T13:53:28",
        "url": "https://files.pythonhosted.org/packages/a3/ae/b8d57b0aaca2985ee609b7aa1f30f1448c13cafa580ea78ae42facc1f812/atomic_hpc-0.1.7-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "8dca927ff8d173f7bea54565384a2aed",
        "sha256": "c6effde88bfd453f65de79be0443f547378164260ccc4a6402fe254e2adee45a"
      },
      "downloads": 0,
      "filename": "atomic_hpc-0.1.7-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8dca927ff8d173f7bea54565384a2aed",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 15167,
      "upload_time": "2017-09-23T13:53:28",
      "url": "https://files.pythonhosted.org/packages/a3/ae/b8d57b0aaca2985ee609b7aa1f30f1448c13cafa580ea78ae42facc1f812/atomic_hpc-0.1.7-py2.py3-none-any.whl"
    }
  ]
}