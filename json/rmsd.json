{
  "info": {
    "author": "Jimmy Kromann",
    "author_email": "jimmy@charnley.dk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3"
    ],
    "description": ".. image:: https://travis-ci.org/charnley/rmsd.svg?branch=master\n    :target: https://travis-ci.org/charnley/rmsd\n\n\n.. image:: https://badge.fury.io/py/rmsd.svg\n    :target: https://badge.fury.io/py/rmsd\n\n\nCalculate Root-mean-square deviation (RMSD) of Two Molecules Using Rotation\n===========================================================================\n\nThe root-mean-square deviation (RMSD) is calculated, using Kabsch algorithm\n(1976) or Quaternion algorithm (1991) for rotation, between two Cartesian\ncoordinates in either ``.xyz`` or ``.pdb`` format, resulting in the minimal RMSD.\n\nFor more information please read RMSD_ and `Kabsch algorithm`_.\n\n.. _RMSD: http://en.wikipedia.org/wiki/Root-mean-square_deviation\n.. _Kabsch algorithm: http://en.wikipedia.org/wiki/Kabsch_algorithm\n\nMotivation\n----------\n\nYou have molecule A and B and want to calculate the structural difference\nbetween those two.\nIf you just calculate the RMSD_ straight-forward you might get a too big of a\nvalue as seen below.\nYou would need to first recenter the two molecules and then rotate them unto\neach other to get the true minimal RMSD. This is what this script does.\n\n==========  ===========  ==========\nNo Changes  Re-centered  Rotated\n----------  -----------  ----------\n|begin|     |translate|  |rotate|\n==========  ===========  ==========\nRMSD 2.50   RMSD 1.07    RMSD 0.25\n==========  ===========  ==========\n\n.. |begin| image:: https://raw.githubusercontent.com/charnley/rmsd/master/img/plot_beginning.png\n.. |translate| image:: https://raw.githubusercontent.com/charnley/rmsd/master/img/plot_translated.png\n.. |rotate| image:: https://raw.githubusercontent.com/charnley/rmsd/master/img/plot_rotated.png\n\n\nInstallation\n------------\n\nYou can get the package via pip under the name ``rmsd``,\n\n.. code-block:: bash\n\n    pip install rmsd\n\n\nor download the project from GitHub via\n\n.. code-block:: bash\n\n    git clone https://github.com/charnley/rmsd\n\n\nThere is only one Python file, so you can also download that and put it in your\nbin folder.\n\n.. code-block:: bash\n\n    wget -O calculate_rmsd https://raw.githubusercontent.com/charnley/rmsd/master/rmsd/calculate_rmsd.py\n    chmod +x calculate_rmsd\n\n\nUsage\n-----\n\nType ``calculate_rmsd --help`` for all the arguments.\nUsage is pretty straight forward, call ``calculate_rmsd`` with two structures\nin either ``.xyz`` or ``.pdb``. In this example Ethane has the exact same structure,\nbut is translated in space, so the RMSD should be zero.\n\n.. code-block:: bash\n\n    calculate_rmsd examples/ethane.xyz examples/ethane_translate.xyz\n\nIt is also possible to ignore all Hydrogens (useful for larger molecules where\nHydrogens move around indistinguishable) and output the rotated structure for\nvisual comparison. The output will be in XYZ format.\n\n.. code-block:: bash\n\n    calculate_rmsd --no-hydrogen --output examples/ethane.xyz examples/ethane_mini.xyz\n\n\nIt is also possible to use RMSD as a library in other scripts:\n\n.. code-block:: python\n\n    import rmsd\n    import numpy as np\n    P = np.array([[-0.9835 ,  1.8109 , -0.0314 ],\n           [ 0.1268 ,  1.8041 , -0.03242],\n           [-1.4899 ,  3.2274 ,  0.18102],\n           [-1.3504 ,  1.1535 ,  0.78475]])\n\n    Q = np.array([[-2.1217 ,  4.0933 ,  0.12713],\n           [-1.0113 ,  4.0865 ,  0.12611],\n           [-2.628  ,  5.5097 ,  0.33955],\n           [-2.4885 ,  3.4358 ,  0.94328]])\n    print \"RMSD before translation: \", rmsd.kabsch_rmsd(P, Q)\n    P -= rmsd.centroid(P)\n    Q -= rmsd.centroid(Q)\n    print \"RMSD after translation: \", rmsd.kabsch_rmsd(P, Q)\n\n\nCitation\n--------\n\n- **Kabsch algorithm**:\n    Kabsch W., 1976,\n    A solution for the best rotation to relate two sets of vectors,\n    Acta Crystallographica, A32:922-923,\n    doi: http://dx.doi.org/10.1107/S0567739476001873\n\n- **Quaternion algorithm**:\n    Michael W. Walker and Lejun Shao and Richard A. Volz, 1991,\n    Estimating 3-D location parameters using dual number quaternions, CVGIP: Image Understanding, 54:358-367,\n    doi: http://dx.doi.org/10.1016/1049-9660(91)90036-o\n\n- **Implementation**:\n    Calculate Root-mean-square deviation (RMSD) of Two Molecules Using Rotation, GitHub,\n    http://github.com/charnley/rmsd, <commit hash or version number>\n\nPlease cite this project when using it for scientific publications.\n\n\nProblems?\n---------\n\nSubmit issues or pull requests on GitHub.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/charnley/rmsd",
    "keywords": "",
    "license": "BSD-2-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rmsd",
    "platform": "",
    "project_url": "https://pypi.org/project/rmsd/",
    "release_url": "https://pypi.org/project/rmsd/1.2.6/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Calculate root-mean-square deviation (RMSD), using Kabsch or Quaternion algorithm for rotation, between two Cartesian coordinates in .xyz or .pdb format, resulting in the minimal RMSD.",
    "version": "1.2.6"
  },
  "releases": {
    "1.2.2": [],
    "1.2.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "62aaa0294cd8932db96c6315d25a5fb5",
          "sha256": "cab3ddb7325a26f130b2b593634ac40dbfdeb28c982ec68890542cd1cc9c5809"
        },
        "downloads": -1,
        "filename": "rmsd-1.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "62aaa0294cd8932db96c6315d25a5fb5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8341,
        "upload_time": "2017-05-22T19:53:51",
        "url": "https://files.pythonhosted.org/packages/b4/42/793539d63fdc803754985d3e817862489c6b5d99f4fe278907eb8e65cdb1/rmsd-1.2.5.tar.gz"
      }
    ],
    "1.2.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "49932a7276422361978eb435f49e6441",
          "sha256": "b4e7cdbecbf16153c10b6db33abb1300430d4efede6ff6e980c9b3347ac51b85"
        },
        "downloads": -1,
        "filename": "rmsd-1.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "49932a7276422361978eb435f49e6441",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7854,
        "upload_time": "2018-02-10T15:22:18",
        "url": "https://files.pythonhosted.org/packages/35/d0/849b181a50c810ba2b0b68804526934762f8df0735082f010d00f5327997/rmsd-1.2.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "49932a7276422361978eb435f49e6441",
        "sha256": "b4e7cdbecbf16153c10b6db33abb1300430d4efede6ff6e980c9b3347ac51b85"
      },
      "downloads": -1,
      "filename": "rmsd-1.2.6.tar.gz",
      "has_sig": false,
      "md5_digest": "49932a7276422361978eb435f49e6441",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7854,
      "upload_time": "2018-02-10T15:22:18",
      "url": "https://files.pythonhosted.org/packages/35/d0/849b181a50c810ba2b0b68804526934762f8df0735082f010d00f5327997/rmsd-1.2.6.tar.gz"
    }
  ]
}