{
  "info": {
    "author": "Santiago Fraire",
    "author_email": "santiwilly@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\n=============\nCommitizen\n=============\n\n    Python 3 command line utility to standardize commit messages\n\n\n.. image:: https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg?style=flat-square\n    :alt: Conventional Commits\n    :target: https://conventionalcommits.org\n\n.. image:: https://img.shields.io/pypi/v/commitizen.svg?style=flat-square\n    :alt: PyPI Package latest release\n    :target: https://pypi.org/project/commitizen/\n\n..  image:: https://img.shields.io/pypi/pyversions/commitizen.svg?style=flat-square\n    :alt: Supported versions\n    :target: https://pypi.org/project/commitizen/\n\n\n.. contents::\n    :depth: 2\n\n\nAbout\n=======\n\nThis client tool prompts the user with information about the commit.\n\nBased on `conventional commits <https://conventionalcommits.org/>`_\n\n.. image:: docs/images/example.png\n    :alt: Example running commitizen\n\nThis is an example of how the git messages history would look like:\n\n::\n\n    docs: improved commitizens tab in readme\n    feat(cz): jira smart commits\n    refactor(cli): renamed all to ls command\n    refactor(cz): renamed angular cz to conventional changelog cz\n    feat: info command for angular\n    docs(README): added badges\n    docs(LICENSE): new one\n    docs(README): added about, installation, creating, etc\n    chore(bumpversion): configured and added as dev dep\n    feat(config): new loads from ~/.cz and working project .cz .cz.cfg and setup.cfg\n\nCommitizens\n===========\n\nThese are the available commiting styles by default:\n\n* cz_conventional_changelog: `angular's conventional changelog <https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit>`_\n* cz_jira: `jira smart commits <https://confluence.atlassian.com/fisheye/using-smart-commits-298976812.html>`_\n\n\nThe installed ones can be checked with:\n\n::\n\n    cz ls\n\n\nInstallation\n=============\n\n::\n\n    pip install commitizen\n\n\nCommiting\n=========\n\nRun in your terminal\n\n::\n\n    cz commit\n\nor the shortcut\n\n::\n\n    cz c\n\n\nUsage\n=====\n\n::\n\n    usage: cz [-h] [--debug] [-n NAME] {ls,commit,c,example,info,schema} ...\n\n    Commitizen is a cli tool to generate conventional commits.\n    For more information about the topic go to https://conventionalcommits.org/\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --debug               use debug mode\n      -n NAME, --name NAME  use the given commitizen\n\n    commands:\n      {ls,commit,c,example,info,schema}\n        ls                 show available commitizens\n        commit (c)          create new commit\n        example             show commit example\n        info                show information about the cz\n        schema              show commit schema\n\n\nConfiguration\n==============\n\nYou can create in your project folder a file called :code:`.cz`, :code:`.cz.cfg` or in your :code:`setup.cfg`\nor if you want to configure the global default in your user's home folder a :code:`.cz` file\nwith the following information:\n\n::\n\n    [commitizen]\n    name = cz_conventional_changelog\n\n\nCreating a commiter\n========================\n\nCreate a file starting with :code:`cz_` for example :code:`cz_jira.py`.\nThis prefix is used to detect the plugin. Same method `flask uses <http://flask.pocoo.org/docs/0.12/extensiondev/>`_\n\nInherit from :code:`BaseCommitizen` and you must define :code:`questions`\nand :code:`message`. The others are optionals.\n\n\n.. code-block:: python\n\n    from commitizen import BaseCommitizen\n\n    class JiraCz(BaseCommitizen):\n\n        def questions(self):\n            \"\"\"Questions regarding the commit message.\n\n            Must have 'whaaaaat' format.\n            More info: https://github.com/finklabs/whaaaaat/\n\n            :rtype: list\n            \"\"\"\n            questions = [\n                {\n                    'type': 'input',\n                    'name': 'title',\n                    'message': 'Commit title'\n                },\n                {\n                    'type': 'input',\n                    'name': 'issue',\n                    'message': 'Jira Issue number:'\n                },\n            ]\n            return questions\n\n        def message(self, answers):\n            \"\"\"Generate the message with the given answers.\n\n            :type answers: dict\n            :rtype: string\n            \"\"\"\n            return '{0} (#{1})'.format(answers['title'], answers['issue'])\n\n        def example(self):\n            \"\"\"Provide an example to help understand the style (OPTIONAL)\n            Used by cz example.\n\n            :rtype: string\n            \"\"\"\n            return 'Problem with user (#321)'\n\n        def schema(self):\n            \"\"\"Show the schema used (OPTIONAL)\n\n            :rtype: string\n            \"\"\"\n            return '<title> (<issue>)'\n\n        def info(self):\n            \"\"\"Explanation of the commit rules. (OPTIONAL)\n            :rtype: string\n            \"\"\"\n            return 'We use this because is useful'\n\n\n    discover_this = JiraCz  # used by the plugin system\n\n\nThe next file required is :code:`setup.py` modified from flask version\n\n.. code-block:: python\n\n    from distutils.core import setup\n\n    setup(\n        name='JiraCommitizen',\n        version='0.1.0',\n        py_modules=['cz_jira'],\n        license='MIT',\n        long_description='this is a long description',\n        install_requires=['commitizen']\n    )\n\nSo at the end we would have\n\n::\n\n    .\n    \u251c\u2500\u2500 cz_jira.py\n    \u2514\u2500\u2500 setup.py\n\nAnd that's it, you can install it without uploading to pypi by simply doing\n:code:`pip install .` If you feel like it should be part of the repo, create a\nPR.\n\nPython 2 support\n=================\n\nSupport for the old version of python (python 2) is limited, there are some\nthings that won't work, like aliases of commands, so, to commit run:\n\n::\n\n    cz commit\n\n\nTodo\n====\n\n- [ ] auto changelog integration\n- [ ] tests\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/woile/commitizen",
    "keywords": "commitizen conventional commits git",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "commitizen",
    "platform": "",
    "project_url": "https://pypi.org/project/commitizen/",
    "release_url": "https://pypi.org/project/commitizen/0.9.0/",
    "requires_dist": [
      "configparser; python_version < \"3.5\"",
      "future; python_version < \"3.4\"",
      "pathlib2; python_version < \"3.4\"",
      "whaaaaat",
      "delegator.py"
    ],
    "requires_python": "",
    "summary": "Python commitizen client tool.",
    "version": "0.9.0"
  },
  "releases": {
    "0.8.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cc17621d101eb38d374e306bedd89c53",
          "sha256": "ffbf25cf31b95951a82a5a47b8be3ff63d51be0f8584cd670fee49fc4bb9b80b"
        },
        "downloads": -1,
        "filename": "commitizen-0.8.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc17621d101eb38d374e306bedd89c53",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 12859,
        "upload_time": "2017-11-08T17:39:27",
        "url": "https://files.pythonhosted.org/packages/e0/6d/4b766abf4609cb4f9302bb692a465ff480bb467f2c9ce527c7b106366d59/commitizen-0.8.4-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "11aedca9630003ce5d96f5fce9c23f96",
          "sha256": "6971a53d5ec900a2fed8a02a665dd9960c9334647fde6e41e95b04edab51ae71"
        },
        "downloads": -1,
        "filename": "commitizen-0.8.4.tar.gz",
        "has_sig": false,
        "md5_digest": "11aedca9630003ce5d96f5fce9c23f96",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9291,
        "upload_time": "2017-11-08T17:39:29",
        "url": "https://files.pythonhosted.org/packages/89/8a/ee719864d2968186e26222b1462d2ed664575db8d3bd46a15692e496f82f/commitizen-0.8.4.tar.gz"
      }
    ],
    "0.8.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8909696517c45dfb1f663f80c5992538",
          "sha256": "a340a91053d64e70daa8bc557c3354feeb03cda9d5d9525a05e0c5532d593421"
        },
        "downloads": -1,
        "filename": "commitizen-0.8.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8909696517c45dfb1f663f80c5992538",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 12886,
        "upload_time": "2017-11-08T17:51:34",
        "url": "https://files.pythonhosted.org/packages/64/34/c1b77fd0cd5827cf0cb1a1dd561fb172f0aef52b914244ef8be2bde59842/commitizen-0.8.5-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ff4315ff69e6d9e255c1af9fd55c9f15",
          "sha256": "24ff1709a2db7b83d37788042e2466f2ae233da222dea74c338c4acdabed1c1a"
        },
        "downloads": -1,
        "filename": "commitizen-0.8.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ff4315ff69e6d9e255c1af9fd55c9f15",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9384,
        "upload_time": "2017-11-08T17:51:36",
        "url": "https://files.pythonhosted.org/packages/84/91/73507a448597867401beee51eee4621a44c425f9dc5ee4ab11b40f4dde2d/commitizen-0.8.5.tar.gz"
      }
    ],
    "0.8.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b5aabab7faf9c52f17505d52fc52819a",
          "sha256": "f888c2654df7234956dd3355b8f425d5b33eafce707456f30c97c8beb2425034"
        },
        "downloads": -1,
        "filename": "commitizen-0.8.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5aabab7faf9c52f17505d52fc52819a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 12906,
        "upload_time": "2017-11-08T17:56:17",
        "url": "https://files.pythonhosted.org/packages/4c/8e/b20170e84db531b3d7ec8d8973be37abce096a651f67b877eac38ef41a90/commitizen-0.8.6-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "fd36877def38cc3a491129e5885092d3",
          "sha256": "70da83a7ac26ec8914a3137bd0f4e6ae77cd3eaafeed686e40206e7f6399a3ea"
        },
        "downloads": -1,
        "filename": "commitizen-0.8.6.tar.gz",
        "has_sig": false,
        "md5_digest": "fd36877def38cc3a491129e5885092d3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9405,
        "upload_time": "2017-11-08T17:56:18",
        "url": "https://files.pythonhosted.org/packages/85/ac/fccfb2e09fbcf7c61c2c23a0e7ff62bc3ae4ee7da812b7ced6a3df496a89/commitizen-0.8.6.tar.gz"
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d358a4ffdd456fcb918c81c0d9219315",
          "sha256": "55b19968232e11c14a308bf410e886d6bc91ef2f94af72d4aa1696070b7646dc"
        },
        "downloads": -1,
        "filename": "commitizen-0.9.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d358a4ffdd456fcb918c81c0d9219315",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 13246,
        "upload_time": "2017-11-08T19:28:54",
        "url": "https://files.pythonhosted.org/packages/8a/36/5bc80cea7343ab276e0a32cdfda76f03583ae677f08b96a0056a86749c19/commitizen-0.9.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d6addb571796d56898984b3cacaed86e",
          "sha256": "b9c647830e3a02642ab4f217be782b7d5d0ecdeaadd8280eaa33b9b664bf26af"
        },
        "downloads": -1,
        "filename": "commitizen-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d6addb571796d56898984b3cacaed86e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9632,
        "upload_time": "2017-11-08T19:28:56",
        "url": "https://files.pythonhosted.org/packages/52/55/c78a50b4c48d9dbb5209b99332c20bdf09b65d041535e0b8f6d24190770d/commitizen-0.9.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d358a4ffdd456fcb918c81c0d9219315",
        "sha256": "55b19968232e11c14a308bf410e886d6bc91ef2f94af72d4aa1696070b7646dc"
      },
      "downloads": -1,
      "filename": "commitizen-0.9.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d358a4ffdd456fcb918c81c0d9219315",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 13246,
      "upload_time": "2017-11-08T19:28:54",
      "url": "https://files.pythonhosted.org/packages/8a/36/5bc80cea7343ab276e0a32cdfda76f03583ae677f08b96a0056a86749c19/commitizen-0.9.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "d6addb571796d56898984b3cacaed86e",
        "sha256": "b9c647830e3a02642ab4f217be782b7d5d0ecdeaadd8280eaa33b9b664bf26af"
      },
      "downloads": -1,
      "filename": "commitizen-0.9.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d6addb571796d56898984b3cacaed86e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9632,
      "upload_time": "2017-11-08T19:28:56",
      "url": "https://files.pythonhosted.org/packages/52/55/c78a50b4c48d9dbb5209b99332c20bdf09b65d041535e0b8f6d24190770d/commitizen-0.9.0.tar.gz"
    }
  ]
}