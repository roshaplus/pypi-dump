{
  "info": {
    "author": "John Thorvald Wodder II",
    "author_email": "headerparser@varonathe.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Communications :: Email",
      "Topic :: Communications :: Usenet News",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Text Processing"
    ],
    "description": ".. image:: http://www.repostatus.org/badges/latest/active.svg\n    :target: http://www.repostatus.org/#active\n    :alt: Project Status: Active \u2014 The project has reached a stable, usable\n          state and is being actively developed.\n\n.. image:: https://travis-ci.org/jwodder/headerparser.svg?branch=master\n    :target: https://travis-ci.org/jwodder/headerparser\n\n.. image:: https://coveralls.io/repos/github/jwodder/headerparser/badge.svg?branch=master\n    :target: https://coveralls.io/github/jwodder/headerparser?branch=master\n\n.. image:: https://img.shields.io/pypi/pyversions/headerparser.svg\n    :target: https://pypi.python.org/pypi/headerparser\n\n.. image:: https://img.shields.io/github/license/jwodder/headerparser.svg\n    :target: https://opensource.org/licenses/MIT\n    :alt: MIT License\n\n`GitHub <https://github.com/jwodder/headerparser>`_\n| `PyPI <https://pypi.python.org/pypi/headerparser>`_\n| `Documentation <https://headerparser.readthedocs.io/en/v0.1.0>`_\n| `Issues <https://github.com/jwodder/headerparser/issues>`_\n\n``headerparser`` parses key-value pairs in the style of RFC 822 (e-mail)\nheaders and converts them into case-insensitive dictionaries with the trailing\nmessage body (if any) attached.  Fields can be converted to other types, marked\nrequired, or given default values using an API based on the standard library's\n``argparse`` module.  (Everyone loves ``argparse``, right?)  Low-level\nfunctions for just scanning header fields (breaking them into sequences of\nkey-value pairs without any further processing) are also included.\n\nThe Format\n==========\nRFC 822-style headers are header fields that follow the general format of\ne-mail headers as specified by RFC 822 and friends: each field is a line of the\nform \"``Name: Value``\", with long values continued onto multiple lines\n(\"folded\") by indenting the extra lines.  A blank line marks the end of the\nheader section and the beginning of the message body.\n\nThis basic grammar has been used by numerous textual formats besides e-mail,\nincluding but not limited to:\n\n- HTTP request & response headers\n- Usenet messages\n- most Python packaging metadata files\n- Debian packaging control files\n- ``META-INF/MANIFEST.MF`` files in Java JARs\n- a subset of the `YAML <http://www.yaml.org/>`_ serialization format\n\n\u2014 all of which this package can parse.\n\n\nInstallation\n============\nJust use `pip <https://pip.pypa.io>`_ (You have pip, right?) to install\n``headerparser`` and its dependencies::\n\n    pip install headerparser\n\n\nExamples\n========\n\nDefine a parser::\n\n    >>> import headerparser\n    >>> parser = headerparser.HeaderParser()\n    >>> parser.add_field('Name', required=True)\n    >>> parser.add_field('Type', choices=['example', 'demonstration', 'prototype'], default='example')\n    >>> parser.add_field('Public', type=headerparser.BOOL, default=False)\n    >>> parser.add_field('Tag', multiple=True)\n    >>> parser.add_field('Data')\n\nParse some headers and inspect the results::\n\n    >>> msg = parser.parse_string('''\\\n    ... Name: Sample Input\n    ... Public: yes\n    ... tag: doctest, examples,\n    ...   whatever\n    ... TAG: README\n    ... \n    ... Wait, why I am using a body instead of the \"Data\" field?\n    ... ''')\n    >>> sorted(msg.keys())\n    ['Name', 'Public', 'Tag', 'Type']\n    >>> msg['Name']\n    'Sample Input'\n    >>> msg['Public']\n    True\n    >>> msg['Tag']\n    ['doctest, examples,\\n  whatever', 'README']\n    >>> msg['TYPE']\n    'example'\n    >>> msg['Data']\n    Traceback (most recent call last):\n        ...\n    KeyError: 'data'\n    >>> msg.body\n    'Wait, why I am using a body instead of the \"Data\" field?\\n'\n\nFail to parse headers that don't meet your requirements::\n\n    >>> parser.parse_string('Type: demonstration')\n    Traceback (most recent call last):\n        ...\n    headerparser.errors.MissingFieldError: Required header field 'Name' is not present\n    >>> parser.parse_string('Name: Bad type\\nType: other')\n    Traceback (most recent call last):\n        ...\n    headerparser.errors.InvalidChoiceError: 'other' is not a valid choice for 'Type'\n    >>> parser.parse_string('Name: unknown field\\nField: Value')\n    Traceback (most recent call last):\n        ...\n    headerparser.errors.UnknownFieldError: Unknown header field 'Field'\n\nAllow fields you didn't even think of::\n\n    >>> parser.add_additional()\n    >>> msg = parser.parse_string('Name: unknown field\\nField: Value')\n    >>> msg['Field']\n    'Value'\n\nJust split some headers into names & values and worry about validity later::\n\n    >>> for field in headerparser.scan_string('''\\\n    ... Name: Scanner Sample\n    ... Unknown headers: no problem\n    ... Unparsed-Boolean: yes\n    ... CaSe-SeNsItIvE-rEsUlTs: true\n    ... Whitespace around colons:optional\n    ... Whitespace around colons  :  I already said it's optional.\n    ...   That means you have the _option_ to use as much as you want!\n    ... \n    ... And there's a body, too, I guess.\n    ... '''): print(field)\n    ('Name', 'Scanner Sample')\n    ('Unknown headers', 'no problem')\n    ('Unparsed-Boolean', 'yes')\n    ('CaSe-SeNsItIvE-rEsUlTs', 'true')\n    ('Whitespace around colons', 'optional')\n    ('Whitespace around colons', \"I already said it's optional.\\n  That means you have the _option_ to use as much as you want!\")\n    (None, \"And there's a body, too, I guess.\\n\")",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jwodder/headerparser",
    "keywords": "e-mail email mail rfc822 headers rfc2822 rfc5322 parser",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "headerparser",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/headerparser/",
    "release_url": "https://pypi.org/project/headerparser/0.1.0/",
    "requires_python": "",
    "summary": "argparse for mail-style headers",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "51d5113dd26830714b525fb7231cf943",
          "sha256": "3c3f0208beb7752b82ac8953b2eccdd2545d7957be8d9d8e3e9a2c77c646440c"
        },
        "downloads": 129,
        "filename": "headerparser-0.1.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "51d5113dd26830714b525fb7231cf943",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 16793,
        "upload_time": "2017-03-17T20:11:10",
        "url": "https://files.pythonhosted.org/packages/07/dc/0928ea77732a0ade9a8d5803a76d81370cb0f9aefdfe0843b3851118da2f/headerparser-0.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "16d3f81af73835109d4981bddd0f1943",
          "sha256": "390d003a5a65f9b317fd514ad77ec524f0cb8236fa26349adbd9d468faea0453"
        },
        "downloads": 114,
        "filename": "headerparser-0.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "16d3f81af73835109d4981bddd0f1943",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18323,
        "upload_time": "2017-03-17T20:11:13",
        "url": "https://files.pythonhosted.org/packages/37/e9/aae30a018f7a8228bb5a7e0a9bdbb66c8726a3ecba7a6877f171b1617f98/headerparser-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "51d5113dd26830714b525fb7231cf943",
        "sha256": "3c3f0208beb7752b82ac8953b2eccdd2545d7957be8d9d8e3e9a2c77c646440c"
      },
      "downloads": 129,
      "filename": "headerparser-0.1.0-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "51d5113dd26830714b525fb7231cf943",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 16793,
      "upload_time": "2017-03-17T20:11:10",
      "url": "https://files.pythonhosted.org/packages/07/dc/0928ea77732a0ade9a8d5803a76d81370cb0f9aefdfe0843b3851118da2f/headerparser-0.1.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "16d3f81af73835109d4981bddd0f1943",
        "sha256": "390d003a5a65f9b317fd514ad77ec524f0cb8236fa26349adbd9d468faea0453"
      },
      "downloads": 114,
      "filename": "headerparser-0.1.0.tar.gz",
      "has_sig": true,
      "md5_digest": "16d3f81af73835109d4981bddd0f1943",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 18323,
      "upload_time": "2017-03-17T20:11:13",
      "url": "https://files.pythonhosted.org/packages/37/e9/aae30a018f7a8228bb5a7e0a9bdbb66c8726a3ecba7a6877f171b1617f98/headerparser-0.1.0.tar.gz"
    }
  ]
}