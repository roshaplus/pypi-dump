{
  "info": {
    "author": "J\u00fcrgen Knauth",
    "author_email": "pubsrc@binary-overflow.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "jk_temporary\n============\n\nIntroduction\n------------\n\nThis python module is a collection of utility functions and classes to manage temporary data.\n\nThe functions this module provides\n----------------------------------\n\nThis module provides the following functions:\n\n```python\n#\n# Create a path for a temporary file or directory.\n#\n# @param\t\tstring baseDirPath\t\tThe base directory the file should reside in.\n# @param\t\tstring prefix\t\t\tA prefix to prepend the random file (or directory) name part.\n# @param\t\tint randomNameLength\tThe length in characters of the random file (or directory) name part to create.\n# @param\t\tstring postfix\t\t\tA postfix to append the random file (or directory) name part.\n# @return\t\tstring\t\t\t\t\tReturns a file (or directory) path. No checking is performed if this file or directory already exists.\n# \t\t\t\t\t\t\t\t\t\tThis method just creates the path.\n#\ndef createRandomFilePath(baseDirPath = \"/tmp\", prefix = 'tmp_', randomNameLength = 32, postfix = '')\n\n#\n# Create a unique new temporary directory.\n#\n# @param\t\tstring baseDirPath\t\tThe directory that serves as a parent for the new directory to create.\n# @param\t\tstring prefix\t\t\tA prefix to prepend the random directory name part.\n# @param\t\tint randomNameLength\tThe length in characters of the random directory name part to create.\n# @param\t\tstring postfix\t\t\tA postfix to append the random directory name part.\n# @param\t\tint dirMode\t\t\t\tThe UNIX/Linux mode the directory should have on creation.\n#\t\t\t\t\t\t\t\t\t\tThis is 0700 by default to ensure that other users can not read or write to the new directory.\n# @return\t\tstring\t\t\t\t\tReturns a unique path to a directory that just has been created.\n#\ndef createTempDir(baseDirPath = \"/tmp\", prefix = 'tmp_', randomNameLength = 32, postfix = '', dirMode = 0o700)\n\n#\n# Create a unique new temporary file ready for later writing.\n# Please note that temporary file names are generated using a RNG. That implies that if you do not write\n# to that file after a call to this function an additional call to <c>createTempFilePath()</c> could produce the same\n# file name again. If <c>randomNameLength</c>\n# is large enough this is quite unlikely and not a real problem, but you should recognize that at least in\n# theory this phenomenon can occur.\n#\n# @param\t\tstring baseDirPath\t\tThe directory that serves as a parent for the new directory to create.\n# @param\t\tint randomNameLength\tThe length in characters of the random file name part to create.\n# @param\t\tstring prefix\t\t\tA prefix to prepend the random file name part.\n# @param\t\tstring postfix\t\t\tA postfix to append the random file name part.\n# @param\t\tint fileMode\t\t\tThe UNIX/Linux mode the file should have on creation.\n#\t\t\t\t\t\t\t\t\t\tThis is 0600 by default to ensure that other users can not read or write to the new file.\n# @return\t\tstring\t\t\t\t\tReturns  the unique path to a file that just has been created.\n#\ndef createTempFilePath(baseDirPath = \"/tmp\", prefix = 'tmp_', randomNameLength = 32, postfix = '', fileMode = 0o600)\n\n#\n# Create a unique new temporary file ready for later writing.\n#\n# @param\t\tstring baseDirPath\t\tThe directory that serves as a parent for the new directory to create.\n# @param\t\tint randomNameLength\tThe length in characters of the random file name part to create.\n# @param\t\tstring prefix\t\t\tA prefix to prepend the random file name part.\n# @param\t\tstring postfix\t\t\tA postfix to append the random file name part.\n# @param\t\tint fileMode\t\t\tThe UNIX/Linux mode the file should have on creation.\n#\t\t\t\t\t\t\t\t\t\tThis is 0600 by default to ensure that other users can not read or write to the new file.\n# @return\t\tstring\t\t\t\t\tReturns  the unique path to a file that just has been created.\n#\ndef createTempFile(baseDirPath = \"/tmp\", prefix = 'tmp_', randomNameLength = 32, postfix = '', fileMode = 0o600)\n\n#\n# Create a unique new temporary file ready for immediate writing.\n#\n# @param\t\tstring baseDirPath\t\tThe directory that serves as a parent for the new directory to create.\n# @param\t\tint randomNameLength\tThe length in characters of the random file name part to create.\n# @param\t\tstring prefix\t\t\tA prefix to prepend the random file name part.\n# @param\t\tstring postfix\t\t\tA postfix to append the random file name part.\n# @param\t\tint fileMode\t\t\tThe UNIX/Linux mode the file should have on creation.\n#\t\t\t\t\t\t\t\t\t\tThis is 0600 by default to ensure that other users can not read or write to the new file.\n# @return\t\ttuple\t\t\t\t\tReturns a tuple consisting of two elements:\n#\t\t\t\t\t\t\t\t\t\t- the unique path to a file that just has been created\n#\t\t\t\t\t\t\t\t\t\t- the open file handle\n#\ndef createTempFileUTF8(baseDirPath = \"/tmp\", prefix = 'tmp_', randomNameLength = 32, postfix = '', fileMode = 0o600)\n\n#\n# Create a unique new temporary file ready for immediate writing.\n#\n# @param\t\tstring baseDirPath\t\tThe directory that serves as a parent for the new directory to create.\n# @param\t\tint randomNameLength\tThe length in characters of the random file name part to create.\n# @param\t\tstring prefix\t\t\tA prefix to prepend the random file name part.\n# @param\t\tstring postfix\t\t\tA postfix to append the random file name part.\n# @param\t\tint fileMode\t\t\tThe UNIX/Linux mode the file should have on creation.\n#\t\t\t\t\t\t\t\t\t\tThis is 0600 by default to ensure that other users can not read or write to the new file.\n# @return\t\ttuple\t\t\t\t\tReturns a tuple consisting of two elements:\n#\t\t\t\t\t\t\t\t\t\t- the unique path to a file that just has been created\n#\t\t\t\t\t\t\t\t\t\t- the open file handle\n#\ndef createTempFileBinary(baseDirPath = \"/tmp\", prefix = 'tmp_', randomNameLength = 32, postfix = '', fileMode = 0o600)\n```\n\nThe object ``TempDir`` this module provides\n-------------------------------------------\n\nThis module provides the class ``TempDir`` that contains the following methods:\n\n```python\n#\n# Constructor method.\n#\n# @param\t\tstring\tbaseDirPath\t\t\t\t\tThe directory that serves as a parent for the new files and directories to create.\n# @param\t\tstring\tnamePrefix\t\t\t\t\tA prefix to prepend the random file name part. The default is: \"<c>tmp-</c>\".\n# @param\t\tstring\tnamePostfix\t\t\t\t\tA postfix to append the random file name part. The default is: <c>None</c>.\n# @param\t\tstring\tdefaultExtension\t\t\tA file extension to append the random file name part\n#\t\t\t\t\t\t\t\t\t\t\t\t\tafter the postfix). This applies to file names only. the default is: <c>None</c>. \n# @param\t\tint\trandomNameLength\t\t\t\tThe length in characters of the random file name part to create.\n# @param\t\tint\tdefaultAccessModeFiles\t\t\tThe UNIX/Linux mode files should have on creation. This is 0600 by default to\n#\t\t\t\t\t\t\t\t\t\t\t\t\tensure that other users can not read or write to the new file.\n# @param\t\tint\tdefaultAccessModeDirectories\tThe UNIX/Linux mode directories should have on creation. This is 0700 by default\n#\t\t\t\t\t\t\t\t\t\t\t\t\tto ensure that other users can not read or write to the new directory.\n#\ndef __init__(self,\n\tbaseDirPath = '/tmp', namePrefix = 'tmp-', namePostfix = None, defaultExtension = None,\n\trandomNameLength = 32, defaultAccessModeFiles = 0o600, defaultAccessModeDirectories = 0o700)\n\n#\n# Remove all files in the temporary directory. Please note that temporary directories remain untouched!\n#\ndef clear(self)\n\n#\n# Create a new file path.\n# Please note that temporary file names are generated using a RNG. That implies that if you do not write\n# to that file after a call to this method an additional call to <c>createFilePath()</c> could produce the same\n# file name again. If <c>randomNameLength</c>\n# is large enough this is quite unlikely and not a real problem, but you should recognize that at least in\n# theory this phenomenon can occur.\n#\n# @param\t\tstring extension\t\tAn optional file name extension. If you do not specify anything here the default\n#\t\t\t\t\t\t\t\t\t\textension will be used as specified during construction.\n# @return\t\tstring\t\t\t\t\tReturns the full qualified file path that furtheron can be used for writing.\n#\ndef createFilePath(self, extension = None)\n\n#\n# Create a new directory path.\n# Please note that temporary directory names are generated using a RNG. That implies that if you do not create\n# that directory after a call to this method an additional call to <c>createFilePath()</c> could produce the same\n# directory name again. If <c>randomNameLength</c>\n# is large enough this is quite unlikely and not a real problem, but you should recognize that at least in\n# theory this phenomenon can occur.\n#\n# @return\t\tstring\t\t\t\t\tReturns the full qualified file path that furtheron can be used for writing.\n#\ndef createDirPath(self)\n\n#\n# Create a new temporary file.\n#\n# @param\t\tstring extension\t\tAn optional file name extension. If you do not specify anything here the default\n#\t\t\t\t\t\t\t\t\t\textension will be used as specified during construction.\n# @param\t\tint accessMode\t\t\tAn optional mode value that defines basic access rights for the file.\n# @return\t\tstring\t\t\t\t\tReturns  the unique path to a file that just has been created.\n#\ndef createFile(self, extension = None, accessMode = None)\n\n#\n# Create a new temporary file.\n#\n# @param\t\tstring extension\t\tAn optional file name extension. If you do not specify anything here the default\n#\t\t\t\t\t\t\t\t\t\textension will be used as specified during construction.\n# @param\t\tint accessMode\t\t\tAn optional mode value that defines basic access rights for the file.\n# @return\t\t(string, handle)\t\tReturns a tuple: The full qualified file path and the file handle that can be used for writing.\n#\ndef createFileBinary(self, extension = None, accessMode = None)\n\n#\n# Create a new temporary file.\n#\n# @param\t\tstring extension\t\tAn optional file name extension. If you do not specify anything here the default\n#\t\t\t\t\t\t\t\t\t\textension will be used as specified during construction.\n# @param\t\tint accessMode\t\t\tAn optional mode value that defines basic access rights for the file.\n# @return\t\t(string, handle)\t\tReturns a tuple: The full qualified file path and the file handle that can be used for writing.\n#\ndef createFileUTF8(self, extension = None, accessMode = None)\n```\n\nContact information\n-------------------\n\nThis is Open Source code. That not only gives you the possibility of freely using this code it also\nallows you to contribute. Feel free to contact the author(s) of this software listed below, either\nfor comments, collaboration requests, suggestions for improvement or reporting bugs:\n\n* J\u00fcrgen Knauth: jknauth@uni-goettingen.de, pubsrc@binary-overflow.de\n\nLicense\n-------\n\nApache Software License 2.0",
    "docs_url": null,
    "download_url": "https://github.com/jkpubsrc/python-module-jk-temporary/tarball/0.2017.1.13",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jkpubsrc/python-module-jk-temporary",
    "keywords": "temp,temporary,tempfiles",
    "license": "Apache 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "jk_temporary",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/jk_temporary/",
    "release_url": "https://pypi.org/project/jk_temporary/0.2017.1.13/",
    "requires_python": null,
    "summary": "Collection of utility functions and classes to manage temporary data.",
    "version": "0.2017.1.13"
  },
  "releases": {
    "0.2017.1.13": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ce718c6aacd718cad0e2a031c7af6b9e",
          "sha256": "cb553ed50eaaad7e49d292996b55c9fc3ab69d8b176f2ed57388f9cc77b21372"
        },
        "downloads": 12,
        "filename": "jk_temporary-0.2017.1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "ce718c6aacd718cad0e2a031c7af6b9e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8812,
        "upload_time": "2017-01-13T20:37:02",
        "url": "https://files.pythonhosted.org/packages/dc/26/6d17be1092b92e8cb6bdb0e1919da1cd7a5c5627ab525f080d8b31dadacc/jk_temporary-0.2017.1.13.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ce718c6aacd718cad0e2a031c7af6b9e",
        "sha256": "cb553ed50eaaad7e49d292996b55c9fc3ab69d8b176f2ed57388f9cc77b21372"
      },
      "downloads": 12,
      "filename": "jk_temporary-0.2017.1.13.tar.gz",
      "has_sig": false,
      "md5_digest": "ce718c6aacd718cad0e2a031c7af6b9e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8812,
      "upload_time": "2017-01-13T20:37:02",
      "url": "https://files.pythonhosted.org/packages/dc/26/6d17be1092b92e8cb6bdb0e1919da1cd7a5c5627ab525f080d8b31dadacc/jk_temporary-0.2017.1.13.tar.gz"
    }
  ]
}