{
  "info": {
    "author": "Marcin Lulek",
    "author_email": "",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 5 - Production/Stable"
    ],
    "description": "channelstream\r\n=============\r\n\r\nThis is a websocket-based communication server for python.\r\n\r\nBasic usage::\r\n\r\n    YOUR_PYTHON_ENV/bin/channelstream - filename.ini\r\n\r\n\r\nYou can also see simple pyramid/angularjs demo included, open your browser and point it to following url::\r\n\r\n    http://127.0.0.1:8000/demo\r\n\r\n**To run the demo you will need to have the `requests` package installed in your environment**\r\n\r\nPossible config options for the server::\r\n\r\n    YOUR_PYTHON_ENV/bin/channelstream -h\r\n\r\n\r\nThe server can also be configured via ini files (channelstream -i filename), example::\r\n\r\n    [channelstream]\r\n    debug = 0\r\n    port = 8000\r\n    demo_app_url = http://127.0.0.1\r\n    secret = YOURSECRET\r\n    admin_secret = YOURADMINSECRET\r\n    allow_posting_from = 127.0.0.1,\r\n                         x.x.x.x,\r\n                         y.y.y.y,\r\n\r\n\r\n\r\n** USAGE **\r\n\r\nRefer to channelstream/wsgi_views/demo.py for example usage.\r\n\r\n** Security model **\r\n\r\nTo send information client interacts only with your normal www application.\r\nYour app handled authentication and processing messages from client, then passed\r\nthem as signed message to channelstream server for broadcast.\r\n\r\nsocketio client -> webapp -> REST call to socket server -> broadcast to other client\r\n\r\nThis model is easy to implement, secure, easy to scale and allows all kind of\r\nlanguages/apps/work queues to interact with socket server.\r\n\r\nAll messages need to be signed with a HMAC of destination endpoint ::\r\n\r\n    import requests\r\n    from itsdangerous import TimestampSigner\r\n    signer = TimestampSigner(request.registry.settings['secret'])\r\n    sig_for_server = signer.sign('/connect')\r\n    secret_headers = {'x-channelstream-secret': sig_for_server,\r\n                      'x-channelstream-endpoint': endpoint,\r\n                      'Content-Type': 'application/json'}\r\n    response = requests.post(url, data=json.dumps(payload),\r\n                             headers=secret_headers).json()\r\n\r\nThe function accepts endpoint in form of '/messages' if you want to send a message\r\n to users. This will be validated on socketio server side.\r\n\r\n\r\n\r\nData format and endpoints\r\n=========================\r\n\r\n/connect?secret=YOURSECRET\r\n--------------------------\r\n\r\nexpects a json request in form of::\r\n\r\n    { \"user\": YOUR_username,\r\n      \"conn_id\": CUSTOM_UNIQUE_UID_OF_CONNECTION, # for example uuid.uuid4()\r\n    \"channels\": [ \"CHAN_NAME1\", \"CHAN_NAMEX\" ],\r\n    \"channel_configs\": {\"CHAN_NAME1\": {\"notify_presence\": true, \"history_size\": 50}} # channel_configs key is optional,\r\n    \"fresh_user_state\": {\"avatar\":\"foo\", \"bar\":1}}, # if user object is not found set this state on newly created user object\r\n    \"user_state\": {\"bar\":2}} # update user object state with keys from this dictionary,\r\n    \"state_public_keys\": [\"avatar\", \"bar\"] # whitelist state keys to be sent back to clients inside presence payloads\r\n    }\r\n   \r\nwhere `channels` is a list of channels this connection/user should be subscribed to.\r\n`channel_configs` is optional dictionary of defaults used for channel creation.\r\n\r\nKeys used in `channel_configs` to describe channel behavior (and their defaults):\r\n\r\n* notify_presence = False\r\n* broadcast_presence_with_user_lists = False\r\n* store_history = False\r\n* history_size = 10\r\n\r\n\r\n/info?secret=YOURSECRET\r\n--------------------------\r\n\r\nexpects a json request in form of::\r\n\r\n    { \r\n    \"channels\": [ \"CHAN_NAME1\", \"CHAN_NAMEX\" ]\r\n    }\r\n   \r\nwhere channels is a list of channels you want information about.\r\nIf channel list is empty server will return full list of all channels and their\r\ninformation.\r\n\r\n\r\n/disconnect\r\n--------------------------\r\n\r\nexpects a json request in form of::\r\n\r\n    { \"conn_id\": CONN_ID}\r\n\r\nmarks specific connection to be garbage collected\r\n\r\n\r\n/message?secret=YOURSECRET\r\n--------------------------\r\n\r\nexpects a json request in form of::\r\n\r\n    {\r\n    \"channel\": \"CHAN_NAME\", #optional if pm_users present\r\n    \"pm_users\": [username1,username2], #optional if channel present\r\n    \"user\": \"NAME_OF_POSTER\",\r\n    \"message\": MSG_PAYLOAD\r\n    }\r\n\r\nWhen just channel is present message is public to all connections subscribed \r\nto the channel. When channel & pm_users is a private message is sent \r\nto connections subscribed to this specific channel. \r\nIf only pm_users is present a private message is sent to all connections that are\r\nowned by pm_users.  \r\n\r\n\r\n/subscribe?secret=YOURSECRET\r\n----------------------------\r\n\r\nexpects a json request in form of::\r\n\r\n    { \"channels\": [ \"CHAN_NAME1\", \"CHAN_NAMEX\" ],\r\n    \"channel_configs\": {\"CHAN_NAME1\": {\"notify_presence\": true, \"history_size\": 50}}, # channel_configs key is optional\r\n    \"conn_id\": \"CONNECTION_ID\"}\r\n\r\n\r\n/user_state?secret=YOURSECRET\r\n----------------------------\r\n\r\nexpects a json request in form of::\r\n\r\n    { \"user\": username, \"user_state\":{\"bar\":2}},\r\n    \"state_public_keys\": [\"avatar\", \"bar\"]}\r\n\r\n\r\nResponses to js client\r\n----------------------\r\n\r\nResponses to client are in form of **list** containing **objects**:\r\n\r\nexamples:\r\n\r\n**new message** ::\r\n\r\n    {\r\n    \"date\": \"2011-09-15T11:36:18.471862\",\r\n    \"message\": MSG_PAYLOAD,\r\n    \"type\": \"message\",\r\n    \"user\": \"NAME_OF_POSTER\",\r\n    \"channel\": \"CHAN_NAME\"\r\n    }\r\n\r\n**presence info** ::\r\n\r\n    {\r\n    \"date\": \"2011-09-15T11:43:47.434905\",\r\n    \"message\": {\"action\":\"joined/parted\"},\r\n    \"type\": \"presence\",\r\n    \"user\": \"NAME_OF_POSTER\",\r\n    \"channel\": \"CHAN_NAME\"\r\n    }\r\n\r\n\r\nInstallation and Setup\r\n======================\r\n\r\nObtain source from github and do::\r\n\r\n    python setup.py develop",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD",
    "maintainer": "Marcin Lulek",
    "maintainer_email": "",
    "name": "channelstream",
    "platform": "",
    "project_url": "https://pypi.org/project/channelstream/",
    "release_url": "https://pypi.org/project/channelstream/0.6.0/",
    "requires_python": null,
    "summary": "Websocket server supporting channels/users communication",
    "version": "0.6.0"
  },
  "releases": {
    "0.0": [],
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5530102bc5c8641a77fd742940becc5e",
          "sha256": "92b4c38f135cc4d68380fed78521a1f4f3221531fc7f92b3658662d22486a253"
        },
        "downloads": 1525,
        "filename": "channelstream-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5530102bc5c8641a77fd742940becc5e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15526,
        "upload_time": "2014-10-09T22:21:46",
        "url": "https://files.pythonhosted.org/packages/c9/28/6888012580364f09a5089af99122c33da44ceacb2fe7c83b682e60a76d69/channelstream-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9a5b479070cc52baa4ac3c0989d26657",
          "sha256": "9fb766ea6f257e65ff249bc19dceff76d4df562019a65f56ee05cc36762398bc"
        },
        "downloads": 1884,
        "filename": "channelstream-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9a5b479070cc52baa4ac3c0989d26657",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14707,
        "upload_time": "2015-04-09T12:39:43",
        "url": "https://files.pythonhosted.org/packages/81/fc/8ff3084054ab76327315ba8ec344d5b492137c85b2d4d749b38ac6caf93f/channelstream-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "50b7858ab2351c2487762c6523351522",
          "sha256": "3500fcd01235f78a5839a3a0f205fdf320ee47a0c63b74045079a989c252dd1a"
        },
        "downloads": 673,
        "filename": "channelstream-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "50b7858ab2351c2487762c6523351522",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15205,
        "upload_time": "2015-10-07T11:32:03",
        "url": "https://files.pythonhosted.org/packages/88/a7/c19fcdff0406a0be144db1f0e63361627a66fae0799a21cafa54a5cd4fbc/channelstream-0.3.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "282a089c4f2f8775ad6dbfa2a54f908c",
          "sha256": "da07674082e8258ff61c467109f679fa5d661685b67e949eba0e0ebe54f2df07"
        },
        "downloads": 1102,
        "filename": "channelstream-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "282a089c4f2f8775ad6dbfa2a54f908c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15238,
        "upload_time": "2015-10-07T13:34:29",
        "url": "https://files.pythonhosted.org/packages/d8/ea/34b68c8a3d1173d6d0d7f0a06c7f1b193134f56ef9193f7aa71f05a7f3bf/channelstream-0.3.1.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "37598823b37838964666450d74411a3e",
          "sha256": "d83c3ad7f1d49376aa6d039388ffdca0b9e6e574d46f065a01febbbe2d363a97"
        },
        "downloads": 643,
        "filename": "channelstream-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "37598823b37838964666450d74411a3e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16669,
        "upload_time": "2015-10-19T09:35:23",
        "url": "https://files.pythonhosted.org/packages/a9/df/408dcd880111fd5348f27d97d820f8087c8198c6e3972dd2bce6046ce553/channelstream-0.4.tar.gz"
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b46b3f04d82d0e63df1eaec51b0e2d9d",
          "sha256": "a75f8eca33310872402247978af5e1e129c2b0d184518624756096b3cad18f00"
        },
        "downloads": 529,
        "filename": "channelstream-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b46b3f04d82d0e63df1eaec51b0e2d9d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19809,
        "upload_time": "2015-12-01T14:41:52",
        "url": "https://files.pythonhosted.org/packages/96/b8/56709bd36597c8d9910f68756f3160eff87143c1415c4e4645ad58c6723f/channelstream-0.4.1.tar.gz"
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5857cc2b1cef993088817ccc31285254",
          "sha256": "0213a26035652b79a33e6a8ee749d9f2f31fbc1a8b443caa8ae2e7a8ceb27d00"
        },
        "downloads": 527,
        "filename": "channelstream-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5857cc2b1cef993088817ccc31285254",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19816,
        "upload_time": "2015-12-08T10:50:41",
        "url": "https://files.pythonhosted.org/packages/91/e7/b5faffc810e5e31aa01e74e43f9d66aaf52034d03e54c2782c474cb3e8a7/channelstream-0.4.2.tar.gz"
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b077ad560312cfdd26fc99bcdd254ad8",
          "sha256": "68941f9b0a4cc130b79c8e9c3768aa905b5567cff7b6552aa0e77d82b701fed6"
        },
        "downloads": 165,
        "filename": "channelstream-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b077ad560312cfdd26fc99bcdd254ad8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20456,
        "upload_time": "2016-06-06T07:49:15",
        "url": "https://files.pythonhosted.org/packages/80/6c/00f8321e5dc1d301bbd47dcace0d50d7177e517cf7cbbf8d98c48742be7a/channelstream-0.5.1.tar.gz"
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1c5eb2a8a405be6f1073da94da6d81d3",
          "sha256": "359bf5316688341e54a881a7b331c2388fc7ec32a4f4818c92d3c1425b2775e1"
        },
        "downloads": 276,
        "filename": "channelstream-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1c5eb2a8a405be6f1073da94da6d81d3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20621,
        "upload_time": "2016-08-03T10:14:36",
        "url": "https://files.pythonhosted.org/packages/2b/31/29a8e085cf5bf97fa88e7b947adabfc581a18a3463adf77fb6dada34a65f/channelstream-0.5.2.tar.gz"
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6b96c78c73ddade53375e68982d20dd6",
          "sha256": "fc498d20b54ea79235a4c038850111e601aa2b20003dfe7a59bf021284db471d"
        },
        "downloads": 112,
        "filename": "channelstream-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6b96c78c73ddade53375e68982d20dd6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 404016,
        "upload_time": "2016-10-12T22:53:09",
        "url": "https://files.pythonhosted.org/packages/bc/82/526630a45f91a005b947d656e4b2a113895f44468838d444c718612d3e1f/channelstream-0.6.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "6b96c78c73ddade53375e68982d20dd6",
        "sha256": "fc498d20b54ea79235a4c038850111e601aa2b20003dfe7a59bf021284db471d"
      },
      "downloads": 112,
      "filename": "channelstream-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6b96c78c73ddade53375e68982d20dd6",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 404016,
      "upload_time": "2016-10-12T22:53:09",
      "url": "https://files.pythonhosted.org/packages/bc/82/526630a45f91a005b947d656e4b2a113895f44468838d444c718612d3e1f/channelstream-0.6.0.tar.gz"
    }
  ]
}