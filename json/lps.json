{
  "info": {
    "author": "Chris Speck",
    "author_email": "cgspeck@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Large Print Splitter\n====================\n\nTakes an image, printed height or width (in mm) and page size then\nsplits image across multiple pages with alignment marks and generates a\nPDF.\n\nIt is intended for printing projections exported as SVGs from Openscad.\n\nFor the image it supports anything that Pillow supports, as well as SVGs\nthanks to CairoSVG.\n\nPDF generation is done by ReportLab.\n\n::\n\n    $ lps -h\n    usage: lps [-h] (--width WIDTH | --height HEIGHT) [--page_size PAGE_SIZE]\n               [--overlap OVERLAP] [--svg_start_scale SVG_START_SCALE]\n               image_file\n\n    positional arguments:\n      image_file            Image to parse\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --width WIDTH         Width of image in millimeters\n      --height HEIGHT       Height of image in millimeters\n      --page_size PAGE_SIZE\n                            Page size, e.g. a3, a4\n      --overlap OVERLAP     Print overlap in mm\n      --svg_start_scale SVG_START_SCALE\n                            When using SVG, this is the largest scale factor to\n                            attempt to generate an image\n\n    $ lps --width 970 --page_size a3 --overlap 20 wrap.svg\n    Loading Image\n    Trying to generate raster image of svg at 3x scale\n    The image will not fit on a single page\n    Calculating crop list\n    This will require 3 pages\n    Chunking image\n    Generating PDF\n\nLicensed under `MIT License <LICENSE.md>`__\n",
    "docs_url": null,
    "download_url": "https://github.com/cgspeck/largeprintsplitter/archive/0.0.1.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/cgspeck/largeprintsplitter",
    "keywords": "print",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lps",
    "platform": "",
    "project_url": "https://pypi.org/project/lps/",
    "release_url": "https://pypi.org/project/lps/0.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Lay out large print jobs as PDFs with alignment marks.",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d560a6d738e2252a015b6bf9e177faa5",
          "sha256": "a4ad9fbfbc6602a22a42db6993b7989ce6ccd4c28f1b6037584886c534486ace"
        },
        "downloads": -1,
        "filename": "lps-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d560a6d738e2252a015b6bf9e177faa5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4909,
        "upload_time": "2017-10-17T01:29:45",
        "url": "https://files.pythonhosted.org/packages/63/ba/3c81ccd4fd008e70f54b3fc05621c5440c4ca895b7cf600dcd1a7393fd10/lps-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d560a6d738e2252a015b6bf9e177faa5",
        "sha256": "a4ad9fbfbc6602a22a42db6993b7989ce6ccd4c28f1b6037584886c534486ace"
      },
      "downloads": -1,
      "filename": "lps-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d560a6d738e2252a015b6bf9e177faa5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4909,
      "upload_time": "2017-10-17T01:29:45",
      "url": "https://files.pythonhosted.org/packages/63/ba/3c81ccd4fd008e70f54b3fc05621c5440c4ca895b7cf600dcd1a7393fd10/lps-0.0.1.tar.gz"
    }
  ]
}