{
  "info": {
    "author": "Evgeny Blokhin",
    "author_email": "eb@tilde.pro",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Scientific/Engineering :: Chemistry",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Tilde\n=====\n\n|DOI|\n\nTilde is an intelligent data organizer and Python framework for\ncomputational *ab initio* materials science. Tilde creates systemized\ndata repositories from the simulation logs of\n`VASP <http://www.vasp.at>`__, `CRYSTAL <http://www.crystal.unito.it>`__\nand `Quantum ESPRESSO <http://www.quantum-espresso.org>`__ packages.\nOther data formats can be added relatively easily. The folders with the\nlog files can be scanned and the results added into a repository. A\nsimple usecase is described in `this blog\npost <https://blog.tilde.pro/simple-ab-initio-materials-data-mining-tutorial-6127c777dabc>`__.\nWeb-based repository GUI is `separately\navailable <https://github.com/tilde-lab/berlinium>`__.\n\nInstallation\n------------\n\nSystem packages ``build-essential python-dev python-numpy libffi-dev``\n(**-dev** or **-devel**) must be present. Please, `set up Python\nvirtualenv <https://virtualenv.readthedocs.org>`__ inside the Tilde\nfolder (and mind ``--system-site-packages`` option to access\n``python-numpy``):\n\n.. code:: shell\n\n    virtualenv --system-site-packages tilde\n\nThen activate virtualenv:\n\n.. code:: shell\n\n    . bin/activate\n\nVirtualenv should be always used while working with the codebase. Run\n``pip install -r requirements.txt`` to install Python dependencies.\nFinally, ensure if the framework is ready:\n\n.. code:: shell\n\n    ./utils/tilde.sh -x\n\nAdditionally, installation is covered in `this blog\npost <https://blog.tilde.pro/simple-ab-initio-materials-data-mining-tutorial-6127c777dabc>`__.\n\nUsage\n-----\n\n.. code:: shell\n\n    ./utils/tilde.sh --help\n\nFor example, to scan folder(s) recursively (**-r**), with terse print\n(**-t**), showing information on calculation metadata (**-i**) and\nconvergence (**-v**) and adding results to a database (**-a**):\n\n.. code:: shell\n\n    ./utils/tilde.sh /home/user/work1 /home/work2 -r -t -v -a -i\n\nOther example: for the perovskite structures (shipped with Tilde),\nextract the distortion of the MO6-octahedra wrt cubic phase (in Euler\nangles). Here the **-m** switch invokes **perovskite\\_tilting** module\n(see **apps** folder):\n\n.. code:: shell\n\n    ./utils/tilde.sh tilde/tests/apps/perovskite_tilting/outputs -m perovskite_tilting\n\nGUI\n---\n\nExperimental GUI server is started as follows:\n\n.. code:: shell\n\n    python utils/gui_server.py\n\nGUI client is the separate project called\n`Berlinium <https://github.com/tilde-lab/berlinium>`__.\n\nTesting\n-------\n\n.. code:: shell\n\n    sh tests/run_tests.sh\n\nLicensing\n---------\n\n`MIT <https://en.wikipedia.org/wiki/MIT_License>`__\n\nSimilar projects\n----------------\n\nOther known similar initiatives are listed below:\n\n-  Accelrys (BIOVIA) Pipeline Pilot and Materials Studio,\n   http://accelrys.com/products\n-  AFLOW framework and Aflowlib repository, http://www.aflowlib.org\n-  AiiDA: Automated Infrastructure and Database for Ab-initio design,\n   Bosch LLC (**Python**), http://aiida.net\n-  Automated Topology Builder (ATB), http://compbio.biosci.uq.edu.au/atb\n-  Blue Obelisk Data Repository (**XSLT, XML**),\n   http://bodr.sourceforge.net\n-  Catapp, http://www.slac.stanford.edu/~strabo/catapp\n-  CCLib (**Python**), http://cclib.sf.net\n-  cctbx: Computational Crystallography Toolbox,\n   http://cctbx.sourceforge.net\n-  CEPDB: Harvard Clean Energy Project and distributed volunteer\n   computing, http://cepdb.molecularspace.org\n-  CMR (**Python**), https://wiki.fysik.dtu.dk/cmr\n-  Computational Chemistry Comparison and Benchmark Database,\n   http://cccbdb.nist.gov\n-  Crystallography Open Database (including Theoretical Database\n-  Delta project: Comparing Solid State DFT Codes,\n   http://molmod.ugent.be/deltacodesdft\n-  Electronic Structure Project, http://gurka.fysik.uu.se/ESP\n-  ESTEST (**Python, XQuery**), http://estest.ucdavis.edu\n-  Exabyte.io, Materials Discover Cloud, http://exabyte.io\n-  J-ICE (based on **Jmol, Java**), http://j-ice.sourceforge.net\n-  ioChem-BD (**Java**), http://www.iochem-bd.org\n-  Materials Project (**Python**), http://www.materialsproject.org\n-  MatNavi and AtomWork Materials Databases, Materials Information\n   Station, Tsukuba, http://mits.nims.go.jp/matnavi/\n-  MedeA Computational environment, http://www.materialsdesign.com/medea\n-  MSE: Test Set for Materials Science and Engineering,\n   http://mse.fhi-berlin.mpg.de\n-  NoMaD: Novel Materials Discovery, http://nomad-repository.eu\n-  NREL MatDB, http://materials.nrel.gov\n-  Open Materials Database and High-Throughput Toolkit (**Python**),\n   http://openmaterialsdb.se\n-  OQMD and qmpy (**Python**), http://oqmd.org\n-  Phonon database at Kyoto university,\n   http://phonondb.mtl.kyoto-u.ac.jp\n-  PAULING FILE, world largest database for inorganic compounds,\n   http://paulingfile.com\n-  pyCMW (**Python**), a framework of Max Planck Institute for Iron\n   Research GmbH\n-  QMForge (**Python**), http://qmforge.sourceforge.net\n-  Quixote, http://quixote.wikispot.org\n-  WebMO: Web-based interface to computational chemistry packages (Java,\n   Perl), http://webmo.net\n-  WURM: database of computed physical properties of minerals,\n   http://wurm.info\n\nOpenness principle\n------------------\n\nTilde adopts the principle of open data, open source code and open\nstandards declared by an initiative group with a symbolic name `Blue\nObelisk <http://www.jcheminf.com/content/3/1/37>`__.\n\n.. figure:: https://raw.githubusercontent.com/tilde-lab/tilde/master/blue_obelisk.gif\n   :alt: Blue Obelisk\n\n   Blue Obelisk\n\nContact\n-------\n\nPlease, send your feedback, bugreports and feature requests via\n`email <mailto:eb@tilde.pro>`__,\n`Twitter <http://twitter.com/tildepro>`__ or\n`GitHub <http://github.com/tilde-lab/tilde/issues>`__.\n\n.. |DOI| image:: https://zenodo.org/badge/18811/tilde-lab/tilde.svg\n   :target: https://zenodo.org/badge/latestdoi/18811/tilde-lab/tilde",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/tilde-lab/tilde",
    "keywords": "CRYSTAL Quantum-ESPRESSO VASP ab-initio materials informatics first-principles",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "tilde",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/tilde/",
    "release_url": "https://pypi.org/project/tilde/0.8.1/",
    "requires_python": null,
    "summary": "Materials informatics framework for ab initio data repositories",
    "version": "0.8.1"
  },
  "releases": {
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9d54c79db21ea33c86778ade61db5a8f",
          "sha256": "1ddbb3c2c9f359116c534496e382f0659067d801b41843772b744e535979536c"
        },
        "downloads": 95,
        "filename": "tilde-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9d54c79db21ea33c86778ade61db5a8f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 88968,
        "upload_time": "2016-07-26T19:15:41",
        "url": "https://files.pythonhosted.org/packages/50/e3/079c44975fe32ca63b388caa9f9ecb085d36a9ebf1a31722611a5715e838/tilde-0.8.0.tar.gz"
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bdab0ce1d12b8ccbf1402175d82d9502",
          "sha256": "81e1901581ec681abdc7651bf8ba9a6d0aa9a3717fa7709fe86cd69548337efb"
        },
        "downloads": 315,
        "filename": "tilde-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bdab0ce1d12b8ccbf1402175d82d9502",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 88973,
        "upload_time": "2016-07-26T19:27:02",
        "url": "https://files.pythonhosted.org/packages/98/8e/3f89da37231807457f0b712abdc0d8603f263bcbdcb6e18986d92204e162/tilde-0.8.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "bdab0ce1d12b8ccbf1402175d82d9502",
        "sha256": "81e1901581ec681abdc7651bf8ba9a6d0aa9a3717fa7709fe86cd69548337efb"
      },
      "downloads": 315,
      "filename": "tilde-0.8.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bdab0ce1d12b8ccbf1402175d82d9502",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 88973,
      "upload_time": "2016-07-26T19:27:02",
      "url": "https://files.pythonhosted.org/packages/98/8e/3f89da37231807457f0b712abdc0d8603f263bcbdcb6e18986d92204e162/tilde-0.8.1.tar.gz"
    }
  ]
}