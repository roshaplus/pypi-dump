{
  "info": {
    "author": "Roman Karpovich",
    "author_email": "fpm.th13f@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "DRF batch requests\n=====================\n\nQuick start\n-----------\n\n\nexamples:\n```\n    curl -X POST \\\n      http://127.0.0.1:8000/batch/ \\\n      -H 'cache-control: no-cache' \\\n      -H 'content-type: application/json' \\\n      -d '{\"batch\": [\n        {\n            \"method\": \"get\",\n            \"relative_url\": \"/test/\",\n            \"name\": \"yolo\"\n        },\n        {\n            \"method\": \"post\",\n            \"relative_url\": \"/test/?id={result=yolo:$.id}&ids={result=yolo:$.data.*.id}\",\n            \"body\": {\"data\": {\"id\": \"{result=yolo:$.id}\", \"ids\": \"{result=yolo:$.data.*.id}\"}, \"test\": \"yolo\"}\n        },\n        {\n            \"method\": \"post\",\n            \"relative_url\": \"/test/\",\n            \"body\": \"{\\\"data\\\": 42}\",\n            \"omit_response_on_success\": true\n        },\n        {\n            \"method\": \"options\",\n            \"relative_url\": \"/test/\"\n        }\n    ]\n    }'\n```\n\nusing file uploading\n```\n    curl -X POST \\\n      http://127.0.0.1:8000/batch/ \\\n      -H 'cache-control: no-cache' \\\n      -H 'content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW' \\\n      -F 'batch=[\n        {\n            \"method\": \"get\",\n            \"relative_url\": \"/test/\",\n            \"name\": \"yolo\"\n        },\n        {\n            \"method\": \"post\",\n            \"relative_url\": \"/test/?id={result=yolo:$.id}&ids={result=yolo:$.data.*.id}\",\n            \"body\": {\"data\": \"{result=yolo:$.data.*.id}\", \"test\": \"yolo\"},\n            \"attached_files\":{\"file\": \"a.jpg\"}\n        },\n        {\n            \"method\": \"post\",\n            \"relative_url\": \"/test/\",\n            \"body\": \"{\\\"data\\\": 42}\",\n            \"omit_response_on_success\": true,\n            \"attached_files\":[\"a.jpg\", \"b.png\"]\n        },\n        {\n            \"method\": \"options\",\n            \"relative_url\": \"/test/\"\n        }\n    ]' \\\n      -F b.png=@2476.png \\\n      -F a.jpg=@check_133.pdf\n```\n\n\nFuture features:\n\n- add support for requests pipelining. use responses as arguments to next requests (done)\n- build graph based on requests dependencies & run simultaneously independent.\n- switchable atomic support. true - all fails if something wrong. else - fail only dependent (can be very hard to support on front-end side, but for now seems as good feature)\n- use native django. we don't use complicated things that require drf for work. all can be done with \"naked\" django.\n- support files uploading (done)\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/roman-karpovich/drf-batch-requests",
    "keywords": "django django-rest-framework drf batch",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drf-batch-requests",
    "platform": "",
    "project_url": "https://pypi.org/project/drf-batch-requests/",
    "release_url": "https://pypi.org/project/drf-batch-requests/0.8.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Facebook-like implementation of batch requests",
    "version": "0.8.0"
  },
  "releases": {
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6e192dc862eb52877649e6e5dd0ad98f",
          "sha256": "1e715a8c4e88f2f18f55de432a3123b63bbf14adb810466cd91e00713dd6580f"
        },
        "downloads": -1,
        "filename": "drf-batch-requests-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6e192dc862eb52877649e6e5dd0ad98f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8839,
        "upload_time": "2017-10-10T12:37:08",
        "url": "https://files.pythonhosted.org/packages/c6/8b/abb3c3e3c6774d1cf1cf0965fd19ff3b404ae2021938bd7159eccda1564c/drf-batch-requests-0.8.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "6e192dc862eb52877649e6e5dd0ad98f",
        "sha256": "1e715a8c4e88f2f18f55de432a3123b63bbf14adb810466cd91e00713dd6580f"
      },
      "downloads": -1,
      "filename": "drf-batch-requests-0.8.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6e192dc862eb52877649e6e5dd0ad98f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8839,
      "upload_time": "2017-10-10T12:37:08",
      "url": "https://files.pythonhosted.org/packages/c6/8b/abb3c3e3c6774d1cf1cf0965fd19ff3b404ae2021938bd7159eccda1564c/drf-batch-requests-0.8.0.tar.gz"
    }
  ]
}