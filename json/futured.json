{
  "info": {
    "author": "Aric Coady",
    "author_email": "aric.coady@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": ".. image:: https://img.shields.io/pypi/v/futured.svg\n   :target: https://pypi.python.org/pypi/futured/\n.. image:: https://img.shields.io/pypi/pyversions/futured.svg\n.. image:: https://img.shields.io/pypi/status/futured.svg\n.. image:: https://img.shields.io/travis/coady/futured.svg\n   :target: https://travis-ci.org/coady/futured\n.. image:: https://img.shields.io/codecov/c/github/coady/futured.svg\n   :target: https://codecov.io/github/coady/futured\n\nFutured provides a simple consistent interface for concurrent functional programming in Python.\nIt can wrap any callable to return ``concurrent.futures.Future`` objects,\nand it can wrap any async coroutine to return ``asyncio.Future`` objects.\n\nUsage\n=========================\nTransform any callable into one which runs in a thread or process pool, and returns a future.\n\n.. code-block:: python\n\n   from futured import threaded, processed\n   import requests\n\n   fetch = threaded(requests.Session().get)\n   fetch(url)  # returns Future\n\n   fs = (fetch(url + path) for path in paths)\n   fetch.results(fs)  # generates results in order\n   fetch.results(fs, timeout=None)  # generates results as completed\n\n   fetch.map(urls)  # generates results in order\n   fetch.map(urls, timeout=None)  # generates results as completed\n\nNaturally ``futured`` wrappers can be used as decorators,\nbut arguments can also be partially bound.\n\n.. code-block:: python\n\n   @threaded\n   def slow():\n      ...\n\n   fetch = threaded(requests.Session().get, url)\n   fetch(params=...)\n\nMethods are supported.\n\n.. code-block:: python\n\n   class FutureSession(requests.Session):\n      request = threaded(requests.Session.request)\n\nAs well as a ``decorated`` utility for automatically subclassing.\n\n.. code-block:: python\n\n   from futured import decorated\n\n   FutureSession = decorated(requests.Session, request=threaded)\n\nThread and process pool executors can also be customized and reused.\n\n.. code-block:: python\n\n   threaded(max_workers=...)(func, ...)\n   processed(max_workers=...)(func, ...)\n\nThe same interface works for ``aynscio``.\nFor convenience, there's also a synchronous ``run`` method.\n\n.. code-block:: python\n\n   from futured import asynced\n   import aiohttp\n\n   fetch = asynced(aiohttp.ClientSession().get)\n   fetch.map(urls, timeout=...)  # generates results as described above\n   fetch.run(url)  # single synchronous call\n\n``command`` wraps ``subprocess.Popen`` to provide a ``Future`` compatible interface.\n\n.. code-block:: python\n\n   from futured import futured, command\n\n   command('ls').result()  # returns stdout or raises stderr\n   command('ls').pipe('wc')  # pipes into next command\n   for line in command('ls'):  # iterable lines\n\n   futured(command, 'ls')\n\n``forked`` allows iteration in separate child processes.\n\n.. code-block:: python\n\n   from futured import forked\n\n   for value in forked(values):\n      # in a child process\n   # in parent after children have exited\n\nInstallation\n=========================\n::\n\n   $ pip install futured\n\nDependencies\n=========================\n* Python 3.5+\n\nTests\n=========================\n100% branch coverage. ::\n\n   $ pytest [--cov]\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://bitbucket.org/coady/futured",
    "keywords": "concurrent futures threads processes async asyncio",
    "license": "Apache Software License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "futured",
    "platform": "",
    "project_url": "https://pypi.org/project/futured/",
    "release_url": "https://pypi.org/project/futured/0.1/",
    "requires_python": "",
    "summary": "Functional interface for concurrent futures, including asynchronous I/O.",
    "version": "0.1"
  },
  "releases": {
    "0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d2ee9c898aa9d3d52387206f05f2a7d6",
          "sha256": "504e4a25dadec954868192737c7984e834e48682762fa18596fbdeba593009cd"
        },
        "downloads": 0,
        "filename": "futured-0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2ee9c898aa9d3d52387206f05f2a7d6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 4235,
        "upload_time": "2017-05-07T21:25:22",
        "url": "https://files.pythonhosted.org/packages/42/3b/15b36140ada7d283fdc01448cdb627075a2846ea6d63f897cd6e08378e4d/futured-0.0-py2.py3-none-any.whl"
      }
    ],
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "da7db36802a91c8388a2a7e437f7ae82",
          "sha256": "889e8033defff6f41be9b73bda55a46c9a5128204912764b9579dc0404cac12e"
        },
        "downloads": 0,
        "filename": "futured-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da7db36802a91c8388a2a7e437f7ae82",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 5661,
        "upload_time": "2017-06-11T21:49:32",
        "url": "https://files.pythonhosted.org/packages/01/52/3e2e4f64881e3b3bda051e47bfadfdd53c0a8587fc22a94684a0474a2eda/futured-0.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "385aa16a689f0edc30a1f0486a105c42",
          "sha256": "d8da11cfb3ce48154722bd6c6d42fa67637ccf3b801b801789eb17e161cd43d7"
        },
        "downloads": 0,
        "filename": "futured-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "385aa16a689f0edc30a1f0486a105c42",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4686,
        "upload_time": "2017-06-11T21:49:34",
        "url": "https://files.pythonhosted.org/packages/5d/ec/341c9f89f49ae8cfb16bb08953a0df37f82d911414b1187af8abf70f318b/futured-0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "da7db36802a91c8388a2a7e437f7ae82",
        "sha256": "889e8033defff6f41be9b73bda55a46c9a5128204912764b9579dc0404cac12e"
      },
      "downloads": 0,
      "filename": "futured-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "da7db36802a91c8388a2a7e437f7ae82",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 5661,
      "upload_time": "2017-06-11T21:49:32",
      "url": "https://files.pythonhosted.org/packages/01/52/3e2e4f64881e3b3bda051e47bfadfdd53c0a8587fc22a94684a0474a2eda/futured-0.1-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "385aa16a689f0edc30a1f0486a105c42",
        "sha256": "d8da11cfb3ce48154722bd6c6d42fa67637ccf3b801b801789eb17e161cd43d7"
      },
      "downloads": 0,
      "filename": "futured-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "385aa16a689f0edc30a1f0486a105c42",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4686,
      "upload_time": "2017-06-11T21:49:34",
      "url": "https://files.pythonhosted.org/packages/5d/ec/341c9f89f49ae8cfb16bb08953a0df37f82d911414b1187af8abf70f318b/futured-0.1.tar.gz"
    }
  ]
}