{
  "info": {
    "author": "Andrei Regiani",
    "author_email": "andrei.cpp@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "falcon-jsonify\n==============\n\n`Falcon <https://github.com/falconry/falcon>`__ middleware to\nserialize/deserialize JSON with built-in input validation.\n\n::\n\n    pip install falcon-jsonify\n\nAdd the middleware into your project:\n\n.. code:: python\n\n    import falcon_jsonify\n    falcon.API(middleware=[falcon_jsonify.Middleware(help_messages=True)])\n\nGet Started\n-----------\n\nResponses\n~~~~~~~~~\n\n.. code:: python\n\n    resp.json = {\"my_field\": \"Hello World\"}\n\nRequests\n~~~~~~~~\n\n.. code:: python\n\n    value = req.get_json('my_field')  # required field\n\n-  Response ``400 Bad Request`` is returned if the field does not exist\n   in the request body.\n-  Full deserialized dict can be accesed at ``req.json`` *(without\n   validations)*, e.g. ``req.json['my_field']``.\n\nBuilt-in validations\n~~~~~~~~~~~~~~~~~~~~\n\n-  ``dtype``, ``min``, ``max``\n\n.. code:: python\n\n    req.get_json('name', dtype=str, min=1, max=16)  # min/max char length\n    req.get_json('age', dtype=int, min=18, max=99)  # min/max numeric value\n    req.get_json('amount', dtype=float, min=0.0)\n    req.get_json('approved', dtype=bool)\n\n-  Response ``400 Bad Request`` is returned if any validation fail.\n\nAdditional parameters\n~~~~~~~~~~~~~~~~~~~~~\n\n-  ``default``, ``match``\n\n.. code:: python\n\n    # make a field optional with default value\n    req.get_json('country_code', dtype=str, default=\"USA\", max=3, min=3)\n\n    # custom validation with Regular Expressions\n    req.get_json('email', match=\"[^@]+@[^@]+\\.[^@]+\")\n\nError responses\n~~~~~~~~~~~~~~~\n\nExample:\n\n.. code:: javascript\n\n    400 Bad Request\n    {\n      \"title\": \"Validation error\",\n      \"description\": \"Minimum value for 'age' is '18'\"\n    }\n\nFor proprietary APIs on production environment set\n``Middleware(help_messages=False)`` to hide such error messages\n*(missing fields, validation checks, malformed JSON)*. For public APIs\nit's nice to keep them enabled.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/AndreiRegiani/falcon-jsonify",
    "keywords": "falcon json jsonify validation validator middleware",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "falcon-jsonify",
    "platform": "",
    "project_url": "https://pypi.org/project/falcon-jsonify/",
    "release_url": "https://pypi.org/project/falcon-jsonify/0.1.1/",
    "requires_python": "",
    "summary": "Falcon middleware to serialize/deserialize JSON with built-in input validation",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "93747d45098d3188ce444e43dff21de2",
          "sha256": "def0384f43d359bacd70e88c6784c7f830d2266335f0305d1f497d30c8f67d1a"
        },
        "downloads": 56,
        "filename": "falcon_jsonify-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93747d45098d3188ce444e43dff21de2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 4991,
        "upload_time": "2016-12-04T20:47:12",
        "url": "https://files.pythonhosted.org/packages/d6/19/85d1efdb847c73ba88e3b509aa1dd0bc5186120dd01d0df1c6aea6944a17/falcon_jsonify-0.1.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "edf5a18d638bf25f211654c8335bc33f",
          "sha256": "5c870f527799ce1feadebdf788e72103baeb5947e83fb6f128590c92a738a9c9"
        },
        "downloads": 72,
        "filename": "falcon-jsonify-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "edf5a18d638bf25f211654c8335bc33f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2793,
        "upload_time": "2016-11-20T03:06:04",
        "url": "https://files.pythonhosted.org/packages/f9/79/48f9f041a57747d07b7807fe61f9850405277234caa07de3fdcfd07bbc53/falcon-jsonify-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "93747d45098d3188ce444e43dff21de2",
        "sha256": "def0384f43d359bacd70e88c6784c7f830d2266335f0305d1f497d30c8f67d1a"
      },
      "downloads": 56,
      "filename": "falcon_jsonify-0.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "93747d45098d3188ce444e43dff21de2",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 4991,
      "upload_time": "2016-12-04T20:47:12",
      "url": "https://files.pythonhosted.org/packages/d6/19/85d1efdb847c73ba88e3b509aa1dd0bc5186120dd01d0df1c6aea6944a17/falcon_jsonify-0.1.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "edf5a18d638bf25f211654c8335bc33f",
        "sha256": "5c870f527799ce1feadebdf788e72103baeb5947e83fb6f128590c92a738a9c9"
      },
      "downloads": 72,
      "filename": "falcon-jsonify-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "edf5a18d638bf25f211654c8335bc33f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 2793,
      "upload_time": "2016-11-20T03:06:04",
      "url": "https://files.pythonhosted.org/packages/f9/79/48f9f041a57747d07b7807fe61f9850405277234caa07de3fdcfd07bbc53/falcon-jsonify-0.1.1.tar.gz"
    }
  ]
}