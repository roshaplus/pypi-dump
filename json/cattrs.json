{
  "info": {
    "author": "Tin Tvrtkovi\u0107",
    "author_email": "tinchester@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "======\ncattrs\n======\n\n\n.. image:: https://img.shields.io/pypi/v/cattrs.svg\n        :target: https://pypi.python.org/pypi/cattrs\n\n.. image:: https://img.shields.io/travis/Tinche/cattrs.svg\n        :target: https://travis-ci.org/Tinche/cattrs\n\n.. image:: https://readthedocs.org/projects/cattrs/badge/?version=latest\n        :target: https://cattrs.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://pyup.io/repos/github/Tinche/cattrs/shield.svg\n        :target: https://pyup.io/repos/github/Tinche/cattrs/\n        :alt: Updates\n\n.. image:: https://codecov.io/gh/Tinche/cattrs/branch/master/graph/badge.svg\n        :target: https://codecov.io/gh/Tinche/cattrs\n\n----\n\n``cattrs`` is an experimental open source Python 3 library providing composable\ncomplex class conversion support for ``attrs`` classes. Other kinds of classes\nare supported by manually registering converters.\n\nPython has a rich set of powerful, easy to use, built-in data types like\ndictionaries, lists and tuples. These data types are also the lingua franca\nof most data serialization libraries, for formats like json, msgpack, yaml or\ntoml.\n\nData types like this, and mappings like ``dict`` s in particular, represent\nunstructured data. Your data is, in all likelihood, structured: not all\ncombinations of field names are values are valid inputs to your programs. In\nPython, structured data is better represented with classes and enumerations.\n``attrs`` is an excellent library for declaratively describing the structure of\nyour data, and validating it.\n\nWhen you're handed unstructured data, ``cattrs`` helps to convert this data into\nstructured data. When you have to convert your structured data into data types\nother libraries can handle, ``cattrs`` turns your classes and enumerations into\ndictionaries, integers and strings.\n\nA taste:\n\n.. code-block:: python\n\n    >>> from enum import unique, Enum\n    >>> from typing import List, Sequence, Union\n    >>> from cattr import loads, dumps\n    >>> import attr\n    >>> from attr.validators import instance_of, optional\n    >>>\n    >>> @unique\n    ... class CatBreed(Enum):\n    ...     SIAMESE = \"siamese\"\n    ...     MAINE_COON = \"maine_coon\"\n    ...     SACRED_BIRMAN = \"birman\"\n    ...\n    >>> @attr.s\n    ... class Cat:\n    ...     breed = attr.ib(validator=instance_of(CatBreed))\n    ...     names = attr.ib(validator=instance_of(Sequence[str]))\n    ...\n    >>> @attr.s\n    ... class DogMicrochip:\n    ...     chip_id = attr.ib()\n    ...     time_chipped = attr.ib(validator=instance_of(float))\n    ...\n    >>> @attr.s\n    ... class Dog:\n    ...     cuteness = attr.ib(validator=instance_of(int))\n    ...     chip = attr.ib(validator=optional(instance_of(DogMicrochip)))\n    ...\n    >>> p = dumps([Dog(cuteness=1, chip=DogMicrochip(chip_id=1, time_chipped=10.0)),\n    ...            Cat(breed=CatBreed.MAINE_COON, names=('Fluffly', 'Fluffer'))])\n    ...\n    >>> print(p)\n    [{'chip': {'chip_id': 1, 'time_chipped': 10.0}, 'cuteness': 1}, {'names': ('Fluffly', 'Fluffer'), 'breed': 'maine_coon'}]\n    >>> print(loads(p, List[Union[Dog, Cat]]))\n    [Dog(cuteness=1, chip=DogMicrochip(chip_id=1, time_chipped=10.0)), Cat(breed=<CatBreed.MAINE_COON: 'maine_coon'>, names=['Fluffly', 'Fluffer'])]\n\n``dumps`` and ``loads`` were chosen for their similarity to the functionality of\nmodules like ``marshal``, ``pickle`` and ``json``. Consider unstructured data a\nlow-level representation that needs to be converted to structured data to be\nhandled, and use ``loads``. When you're done, ``dumps`` the data to its\nunstructured form and pass it along to another library or module.\n\n* Free software: MIT license\n* Documentation: https://cattrs.readthedocs.io.\n* Python versions supported: 3.5 and up.\n\n.. warning::\n\n    When using Python 3.5 earlier or equal to 3.5.3 or Python 3.6.0, please use\n    the bundled ``cattr.typing`` module instead of Python's standard ``typing``\n    module. These versions of ``typing`` are incompatible with ``cattrs``. If\n    your Python version is a later one, please use Python's ``typing`` instead.\n\n\nFeatures\n--------\n\n* Converts structured data into unstructured data, recursively:\n\n  * ``attrs`` classes are converted into dictionaries, in a way similar to ``attrs.asdict``.\n  * Enumeration instances are converted to their values.\n  * Other types are let through without conversion. This includes types such as\n    integers, dictionaries, lists and instances of non-``attrs`` classes.\n  * Custom converters for any type can be registered using ``register_dumps_hook``.\n\n* Converts unstructured data into structured data, recursively, according to\n  your specification given as a type. The following types are supported:\n\n  * ``typing.Optional[T]``.\n  * ``typing.List[T]``, ``typing.MutableSequence[T]``, ``typing.Sequence[T]`` (converts to a list).\n  * ``typing.Tuple`` (both variants, ``Tuple[T, ...]`` and ``Tuple[X, Y, Z]``).\n  * ``typing.MutableSet[T]``, ``typing.Set[T]`` (converts to a set).\n  * ``typing.FrozenSet[T]`` (converts to a frozenset).\n  * ``typing.Dict[K, V]``, ``typing.MutableMapping[K, V]``, ``typing.Mapping[K, V]`` (converts to a dict).\n  * ``attrs`` classes with simple attributes and the usual ``__init__``.\n\n    * Simple attributes are attributes that can be assigned unstructured data,\n      like numbers, strings, and collections of unstructured data.\n\n  * All `attrs` classes with the usual ``__init__``, if their complex attributes\n    have type metadata.\n  * ``typing.Union`` s of supported ``attrs`` classes, given that all of the classes\n    have a unique required field.\n  * ``typing.Union`` s of anything, given that you provide a disambiguation\n    function for it.\n  * Custom converters for any type can be registered using ``register_loads_hook``.\n\nCredits\n---------\n\nMajor credits to Hynek Schlawack for creating attrs_ and its predecessor,\ncharacteristic_.\n\n``cattrs`` is tested with Hypothesis_, by David R. MacIver.\n\n``cattrs`` is benchmarked using perf_, by Victor Stinner.\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _attrs: https://github.com/hynek/attrs\n.. _characteristic: https://github.com/hynek/characteristic\n.. _Hypothesis: http://hypothesis.readthedocs.io/en/latest/\n.. _perf: https://github.com/haypo/perf\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n\n=======\nHistory\n=======\n\n0.3.0 (UNRELEASED)\n------------------\n\n* Python 3.4 is no longer supported.\n* Introduced ``cattr.typing`` for use with Python versions 3.5.2 and 3.6.0.\n* Minor changes to work with newer versions of ``typing``.\n\n  * Bare Optionals are not supported any more (use ``Optional[Any]``).\n\n* Attempting to load unrecognized classes will result in a ValueError, and a helpful message to register a loads hook.\n* Loading ``attrs`` classes is now documented.\n* The global converter is now documented.\n* ``cattr.loads_attrs_fromtuple`` and ``cattr.loads_attrs_fromdict`` are now exposed.\n\n\n0.2.0 (2016-10-02)\n------------------\n\n* Tests and documentation.\n\n0.1.0 (2016-08-13)\n------------------\n\n* First release on PyPI.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Tinche/cattrs",
    "keywords": "cattrs",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cattrs",
    "platform": "",
    "project_url": "https://pypi.org/project/cattrs/",
    "release_url": "https://pypi.org/project/cattrs/0.3.0/",
    "requires_python": "",
    "summary": "Composable complex class support for attrs.",
    "version": "0.3.0"
  },
  "releases": {
    "0.1.0": [],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f2584679181a5dc07fb09ef0b0013378",
          "sha256": "71f19f8b3e58369f6b5061a48c6aae6f894705caee8ad6aca10b478b8f4a2b3a"
        },
        "downloads": 183,
        "filename": "cattrs-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2584679181a5dc07fb09ef0b0013378",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 11486,
        "upload_time": "2016-10-02T15:33:50",
        "url": "https://files.pythonhosted.org/packages/02/1b/63682e18fa47757c42c366f5995511808322730760765485612bbb2d8271/cattrs-0.2.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1016421acff1556e113ebb8319d9a53c",
          "sha256": "972ec699fbb73ce984743168c5a86b506697714e31e3324b8c6470e1551e252c"
        },
        "downloads": 130,
        "filename": "cattrs-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1016421acff1556e113ebb8319d9a53c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32980,
        "upload_time": "2016-10-02T15:33:46",
        "url": "https://files.pythonhosted.org/packages/d9/b0/38d762c39a403006de23f5bdccc33cd8dc0f2629c64ea46f7bfa5373eac9/cattrs-0.2.0.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dc5aec4778b710672977bae8236d0c7d",
          "sha256": "1e163f13c1f412cce40768b5a5739ad12c6ae50290fd9589436e8d161494d939"
        },
        "downloads": 183,
        "filename": "cattrs-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc5aec4778b710672977bae8236d0c7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 32699,
        "upload_time": "2017-03-18T14:07:08",
        "url": "https://files.pythonhosted.org/packages/be/7c/2945e74da4770e5fef60a5c675b68c94adedb394bb82b6f609c47d6ffa16/cattrs-0.3.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3a29504a6c795b088763d7c033c2be32",
          "sha256": "af81c137af95b1f21208d9a36272637b0a5e5db30956321aca075ed8b0dd8043"
        },
        "downloads": 180,
        "filename": "cattrs-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3a29504a6c795b088763d7c033c2be32",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 54233,
        "upload_time": "2017-03-18T14:07:11",
        "url": "https://files.pythonhosted.org/packages/ff/21/38bec5ff8e9bcb2c45cd5a20c97d597aa06e5964c866c65da3646de6bb4e/cattrs-0.3.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "dc5aec4778b710672977bae8236d0c7d",
        "sha256": "1e163f13c1f412cce40768b5a5739ad12c6ae50290fd9589436e8d161494d939"
      },
      "downloads": 183,
      "filename": "cattrs-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dc5aec4778b710672977bae8236d0c7d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 32699,
      "upload_time": "2017-03-18T14:07:08",
      "url": "https://files.pythonhosted.org/packages/be/7c/2945e74da4770e5fef60a5c675b68c94adedb394bb82b6f609c47d6ffa16/cattrs-0.3.0-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "3a29504a6c795b088763d7c033c2be32",
        "sha256": "af81c137af95b1f21208d9a36272637b0a5e5db30956321aca075ed8b0dd8043"
      },
      "downloads": 180,
      "filename": "cattrs-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3a29504a6c795b088763d7c033c2be32",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 54233,
      "upload_time": "2017-03-18T14:07:11",
      "url": "https://files.pythonhosted.org/packages/ff/21/38bec5ff8e9bcb2c45cd5a20c97d597aa06e5964c866c65da3646de6bb4e/cattrs-0.3.0.tar.gz"
    }
  ]
}