{
  "info": {
    "author": "Piper Merriam",
    "author_email": "pipermerriam@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "Ethereum Keyfile\n================\n\nA library for handling the encrypted keyfiles used to store ethereum\nprivate keys\n\nInstallation\n------------\n\n.. code:: sh\n\n    pip install ethereum-keyfile\n\nDocumentation\n-------------\n\n``eth_keyfile.load_keyfile(path_or_file_obj) --> keyfile_json``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTakes either a filesystem path represented as a string or a file object\nand returns the parsed keyfile json as a python dictionary.\n\n.. code:: python\n\n    >>> from eth_keyfile import load_keyfile\n    >>> load_keyfile('path/to-my-keystore/keystore.json')\n    {\n        \"crypto\" : {\n            \"cipher\" : \"aes-128-ctr\",\n            \"cipherparams\" : {\n                \"iv\" : \"6087dab2f9fdbbfaddc31a909735c1e6\"\n            },\n            \"ciphertext\" : \"5318b4d5bcd28de64ee5559e671353e16f075ecae9f99c7a79a38af5f869aa46\",\n            \"kdf\" : \"pbkdf2\",\n            \"kdfparams\" : {\n                \"c\" : 262144,\n                \"dklen\" : 32,\n                \"prf\" : \"hmac-sha256\",\n                \"salt\" : \"ae3cd4e7013836a3df6bd7241b12db061dbe2c6785853cce422d148a624ce0bd\"\n            },\n            \"mac\" : \"517ead924a9d0dc3124507e3393d175ce3ff7c1e96529c6c555ce9e51205e9b2\"\n        },\n        \"id\" : \"3198bc9c-6672-5ab3-d995-4942343ae5b6\",\n        \"version\" : 3\n    }\n\n``eth_keyfile.create_keyfile_json(private_key, password, kdf=\"pbkdf2\", work_factor=None) --> keyfile_json``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTakes the following parameters:\n\n-  ``private_key``: A bytestring of length 32\n-  ``password``: A bytestring which will be the password that can be\n   used to decrypt the resulting keyfile.\n-  ``kdf``: The key derivation function. Allowed values are ``pbkdf2``\n   and ``scrypt``. By default, ``pbkdf2`` will be used.\n-  ``work_factor``: The work factor which will be used for the given key\n   derivation function. By default ``1000000`` will be used for\n   ``pbkdf2`` and ``262144`` for ``scrypt``.\n\nReturns the keyfile json as a python dictionary.\n\n.. code:: python\n\n    >>> private_key = b'\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01'\n    >>> create_keyfile_json(private_key, b'foo')\n    {\n        \"crypto\" : {\n            \"cipher\" : \"aes-128-ctr\",\n            \"cipherparams\" : {\n                \"iv\" : \"6087dab2f9fdbbfaddc31a909735c1e6\"\n            },\n            \"ciphertext\" : \"5318b4d5bcd28de64ee5559e671353e16f075ecae9f99c7a79a38af5f869aa46\",\n            \"kdf\" : \"pbkdf2\",\n            \"kdfparams\" : {\n                \"c\" : 262144,\n                \"dklen\" : 32,\n                \"prf\" : \"hmac-sha256\",\n                \"salt\" : \"ae3cd4e7013836a3df6bd7241b12db061dbe2c6785853cce422d148a624ce0bd\"\n            },\n            \"mac\" : \"517ead924a9d0dc3124507e3393d175ce3ff7c1e96529c6c555ce9e51205e9b2\"\n        },\n        \"id\" : \"3198bc9c-6672-5ab3-d995-4942343ae5b6\",\n        \"version\" : 3\n    }\n\n``eth_keyfile.decode_keyfile_json(keyfile_json, password) --> private_key``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTakes the keyfile json as a python dictionary and the password for the\nkeyfile, returning the decoded private key.\n\n.. code:: python\n\n    >>> keyfile_json = {\n    ...     \"crypto\" : {\n    ...         \"cipher\" : \"aes-128-ctr\",\n    ...         \"cipherparams\" : {\n    ...             \"iv\" : \"6087dab2f9fdbbfaddc31a909735c1e6\"\n    ...         },\n    ...         \"ciphertext\" : \"5318b4d5bcd28de64ee5559e671353e16f075ecae9f99c7a79a38af5f869aa46\",\n    ...         \"kdf\" : \"pbkdf2\",\n    ...         \"kdfparams\" : {\n    ...             \"c\" : 262144,\n    ...             \"dklen\" : 32,\n    ...             \"prf\" : \"hmac-sha256\",\n    ...             \"salt\" : \"ae3cd4e7013836a3df6bd7241b12db061dbe2c6785853cce422d148a624ce0bd\"\n    ...         },\n    ...         \"mac\" : \"517ead924a9d0dc3124507e3393d175ce3ff7c1e96529c6c555ce9e51205e9b2\"\n    ...     },\n    ...     \"id\" : \"3198bc9c-6672-5ab3-d995-4942343ae5b6\",\n    ...     \"version\" : 3\n    ... }\n    >>> decode_keyfile_json(keyfile_json, b'foo')\n    b'\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01'\n\n``eth_keyfile.extract_key_from_keyfile(path_or_file_obj, password) --> private_key``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTakes a filesystem path represented by a string or a file object and the\npassword for the keyfile. Returns the private key as a bytestring.\n\n.. code:: python\n\n    >>> extract_key_from_keyfile('path/to-my-keystore/keyfile.json', b'foo')\n    b'\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01'\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/pipermerriam/ethereum-keyfile",
    "keywords": "ethereum",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ethereum-keyfile",
    "platform": "",
    "project_url": "https://pypi.org/project/ethereum-keyfile/",
    "release_url": "https://pypi.org/project/ethereum-keyfile/0.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A library for handling the encrypted keyfiles used to store ethereum private keys.",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ee1d6d6d38d757509598aa283ba2690b",
          "sha256": "7448cef5762bc31f9f5b31a17dcf419a407ef54ab8f891930cca741f1d76fed5"
        },
        "downloads": 0,
        "filename": "ethereum_keyfile-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ee1d6d6d38d757509598aa283ba2690b",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 6686,
        "upload_time": "2017-09-21T17:53:30",
        "url": "https://files.pythonhosted.org/packages/42/eb/e622cdfae5ed7cb780fb479da9516655afea41769bd0b8f9a10e142a3a3a/ethereum_keyfile-0.1.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "05ce22aed869795189fac118ec461d6c",
          "sha256": "d6cfb031aacc07df2ba11c23ffd945c900a39162477c6f4bbb0113b4888c14ac"
        },
        "downloads": 0,
        "filename": "ethereum-keyfile-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "05ce22aed869795189fac118ec461d6c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5247,
        "upload_time": "2017-09-21T17:53:24",
        "url": "https://files.pythonhosted.org/packages/36/c5/b46e100c009acd946c5d7f8152f40ee4b91cd53cb58304315b9a3f9c056a/ethereum-keyfile-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ee1d6d6d38d757509598aa283ba2690b",
        "sha256": "7448cef5762bc31f9f5b31a17dcf419a407ef54ab8f891930cca741f1d76fed5"
      },
      "downloads": 0,
      "filename": "ethereum_keyfile-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ee1d6d6d38d757509598aa283ba2690b",
      "packagetype": "bdist_wheel",
      "python_version": "3.5",
      "size": 6686,
      "upload_time": "2017-09-21T17:53:30",
      "url": "https://files.pythonhosted.org/packages/42/eb/e622cdfae5ed7cb780fb479da9516655afea41769bd0b8f9a10e142a3a3a/ethereum_keyfile-0.1.0-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "05ce22aed869795189fac118ec461d6c",
        "sha256": "d6cfb031aacc07df2ba11c23ffd945c900a39162477c6f4bbb0113b4888c14ac"
      },
      "downloads": 0,
      "filename": "ethereum-keyfile-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "05ce22aed869795189fac118ec461d6c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5247,
      "upload_time": "2017-09-21T17:53:24",
      "url": "https://files.pythonhosted.org/packages/36/c5/b46e100c009acd946c5d7f8152f40ee4b91cd53cb58304315b9a3f9c056a/ethereum-keyfile-0.1.0.tar.gz"
    }
  ]
}