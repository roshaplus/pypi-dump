{
  "info": {
    "author": "Ola Widlund",
    "author_email": "ola.widlund@ri.se",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Manufacturing",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Scientific/Engineering"
    ],
    "description": "Introduction\r\n============\r\n\r\nParsim is a tool for working with parameterized simulation models.\r\nThe primary objective is to facilitate quality assurance of simulation projects.\r\nThe tool supports a scripted and automated workflow, where verified and validated simulation models\r\nare parameterized, so that they can be altered/modified in well-defined ways and reused with minimal user invention.\r\nAll events are logged on several levels, to support traceability, project documentation and quality control.\r\n\r\nParsim provides basic functionality for generating studies based on common design-of experiments\r\n(DOE) methods, for example using factorial designs, response surface methods or random sampling,\r\nlike Monte Carlo or Latin Hypercube.\r\n\r\nParsim can also be used as an interface to the Dakota library; Dakota is run as a subprocess,\r\ngenerating cases from a Parsim model template.\r\n\r\nHow it works\r\n============\r\n\r\nOnce a prototype simulation case has been developed, a corresponding simulation\r\n:term:`model template` is created by collecting all simulation input files, data\r\nfiles and scripts into a :term:`template directory`. The text files in a model\r\ntemplate can then be parameterized by replacing numerical values, or text\r\nstrings with macro names. Parsim uses the pyexpander macro processing library, which\r\nsupports embedding of arbitrarly complex Python code in the template files.\r\nThis can be used for advanced parameterization needs, for example to compute data\r\ntables from functions, generate graphs for reports, generate content in loops or\r\nconditionals, etc.\r\n\r\nWhen a simulation case is created, the model template directory is recursively\r\nreplicated to create a :term:`case` directory. Parsim operations can also be carried\r\nout on a :term:`study`, containing multiple cases. A study is a directory containing\r\nmultiple case directories.\r\n\r\nYou operate on your cases (either individually or on all cases of a study at once)\r\nby executing scripts written to perform specific tasks, e.g.\r\nmeshing operations, starting a simulation, or post-processing of results.\r\n\r\nYour simulation project lives in a Parsim :term:`project` directory, which holds all\r\ncases and studies of the project. The project directory holds Parsim\r\nconfiguration settings and logs project events, like creation of cases and\r\nstudies, serious errors, change of configuration settings, etc.\r\n\r\nSummary of features:\r\n\r\n* Flexible and full-featured support for parameterization of text-based simulation models.\r\n* Cases and parameter studies kept together in projects.\r\n* Scripted workflow can be applied to individual cases as well as to large parameter studies.\r\n* Logging and error handling, for traceability and project documentation.\r\n* Support for many common design-of-experiments (DOE) methods.\r\n* Can be used as an interface to the Dakota library, for complex uncertainty quantification and optimization tasks.\r\n* Based on Python (works with both Python 2 and 3).\r\n* One simple workflow for any kind of simulation application.\r\n* Platform independent: Works in both Linux, Windows and MacOS environments.\r\n* Simple installation from public Python repositories (install with pip, in any Python installation).\r\n* Available under open-source license (GNU Public License v. 3)\r\n\r\n\r\nInstallation\r\n============\r\n\r\nParsim is available at the `PyPI, the Python Package Index <https://pypi.python.org/pypi>`_.\r\nIt is installed in your ordinary Python environment using the pip installer: ::\r\n\r\n    pip install parsim\r\n\r\nThe Parsim installation automatically installs also the\r\nPython libraries pyexpander and pyDOE.\r\nParsim uses the `pyexpander <http://pyexpander.sourceforge.net>`_ library for\r\nmacro and parameter expansion (parameterization of input files).\r\nThe DOE (Design of Experiments) functionality is provided by the\r\n`pyDOE <https://pythonhosted.org/pyDOE/>`_ library.\r\n\r\nFor the DOE functionality to work, you also need the `NumPy <http://www.numpy.org/>`_\r\nand `SciPy <https://www.scipy.org/>`_ libraries.\r\nYou must install these separately, as the best way to do this depends on\r\nwhich Python distribution you use.\r\nThe `anaconda Python distribution <https://www.continuum.io/downloads>`_\r\nis highly recommended.\r\n\r\nFor additional installation options, see the installation section of the documentation.\r\n\r\nDocumentation\r\n=============\r\n\r\nThe Parsim documentation is hosted at...\r\n\r\nAuthor\r\n======\r\n\r\nParsim was developed by Ola Widlund, `RISE Research Institutes of Sweden <https://www.ri.se/en>`_, to\r\nprovide basic and generic functionality for uncertainty quantification\r\nand quality assurance of parameterized simulation models.\r\n\r\nLicensing\r\n=========\r\n\r\nParsim is licensed under the GNU Public License, GPL, version 3 or later.\r\nCopyright belongs to `RISE Research Institutes of Sweden AB <https://www.ri.se/en>`_.\r\n\r\n\r\n\r\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://gitlab.com/olwi/psm",
    "keywords": "simulation,numerical modeling,doe,design of experiments,sampling,dakota,quality assurance,qa,uq,uncertainty quantification,parameterization,parameterized models",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "parsim",
    "platform": "",
    "project_url": "https://pypi.org/project/parsim/",
    "release_url": "https://pypi.org/project/parsim/0.6.2/",
    "requires_python": "",
    "summary": "A tool for working with parameterized simulation models",
    "version": "0.6.2"
  },
  "releases": {
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5881eb0ac64c5d270a43088dcd1e452b",
          "sha256": "e47865c577710a8cd1af45689e75912fbebf4104c65092842d2dc3b7d61786da"
        },
        "downloads": 0,
        "filename": "parsim-0.6.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5881eb0ac64c5d270a43088dcd1e452b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 41225,
        "upload_time": "2017-06-20T19:05:12",
        "url": "https://files.pythonhosted.org/packages/f6/99/ade61d604354633510b30efb9119a64d5d9709a5b2b6af682b44850b27bb/parsim-0.6.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4822d282fd2aabe7844ed4ba91b7a45c",
          "sha256": "58208b5149492841f48027e7872f29b849377715b71c4ffe92d120cebba87feb"
        },
        "downloads": 0,
        "filename": "parsim-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4822d282fd2aabe7844ed4ba91b7a45c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 33548,
        "upload_time": "2017-06-20T19:05:14",
        "url": "https://files.pythonhosted.org/packages/b1/f2/e60acbc392315e482b054a444e176ed11bea39ba0b05cec701f4889dd58b/parsim-0.6.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5881eb0ac64c5d270a43088dcd1e452b",
        "sha256": "e47865c577710a8cd1af45689e75912fbebf4104c65092842d2dc3b7d61786da"
      },
      "downloads": 0,
      "filename": "parsim-0.6.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5881eb0ac64c5d270a43088dcd1e452b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 41225,
      "upload_time": "2017-06-20T19:05:12",
      "url": "https://files.pythonhosted.org/packages/f6/99/ade61d604354633510b30efb9119a64d5d9709a5b2b6af682b44850b27bb/parsim-0.6.2-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "4822d282fd2aabe7844ed4ba91b7a45c",
        "sha256": "58208b5149492841f48027e7872f29b849377715b71c4ffe92d120cebba87feb"
      },
      "downloads": 0,
      "filename": "parsim-0.6.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4822d282fd2aabe7844ed4ba91b7a45c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 33548,
      "upload_time": "2017-06-20T19:05:14",
      "url": "https://files.pythonhosted.org/packages/b1/f2/e60acbc392315e482b054a444e176ed11bea39ba0b05cec701f4889dd58b/parsim-0.6.2.tar.gz"
    }
  ]
}