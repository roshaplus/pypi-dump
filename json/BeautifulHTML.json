{
  "info": {
    "author": "Alice",
    "author_email": "alice.himmel.info@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "About\r\n============\r\n\r\nThis script can write BEAUTIFUL HTML.\r\nSupported indent, it's simple code.\r\n\r\nClass\r\n============\r\n\r\n1, BeautifulHTML\r\n2, LittleBeautifulCSS\r\n\r\n\r\n1, BeautifulHTML\r\n--------------------\r\nMethods:\r\n----------\r\n  write(self,str) -- write a tag.Please write a tag code at second argument.\r\n  indent(self,str,block=1) -- write a tag with indent.\r\n  delete(self) -- delete line.\r\n  addoption(self,tag,data,content,indent=False,block=0,closetag=True)\r\n      Write a new tag code with any option.\r\n        tag -- tag name.\r\n        data -- dictionary or list. it is tag option.\r\n        content -- contents of tag code.\r\n        indent -- Wheter do indent. True or False.\r\n        block -- indent block size. int data please.\r\n        closetag -- if you write a no-close-tag-code, it is True\r\n  br(self) -- write a \"br\" tag.\r\n  noclosetag(self) -- write a tag code without close-tag.\r\n  setcss(self) -- return LittleBeautifulCSS class object.\r\n  writecss(self,release,indent=False,block=0)\r\n       Write a CSS code that create css element.\r\n  printout(self) -- return item\r\n  __str__(self) -- return item\r\n  encoding(self) -- return encoding\r\n  length(self) -- return the length of HTML tag line.\r\n  outfile(self,filename) -- output a file.\r\n  editvim(self) -- edit html code with vim.\r\n\r\n2, LittleBeautifulCSS\r\n-----------------------\r\nMethods:\r\n---------\r\n  element(self,body,data) -- write css element.\r\n     body -- element name.\r\n     data -- element content. directory or list.\r\n  delete(self) -- delete a css line.\r\n  __str__(self) -- return css item\r\n  release(self) -- release css code to \"writecss\" method of BeautifulHTML class object.\r\n  length(self) -- return length of CSS code line.\r\n\r\n\r\n\r\nUsage\r\n=============\r\n\r\n>>> from Bhtml import BeautifulHTML\r\n>>> html = BeautifulHTML()\r\n>>> html.write(\"<html>\")\r\n'<html>\\n'\r\n>>> html.indent(\"<head>\")\r\n'<html>\\n\\t<head>\\n'\r\n>>> html.indent(\"<title> sample </title>\", block=2)\r\n'<html>\\n\\t<head>\\n\\t\\t<title> sample </title>\\n'\r\n>>> css = html.setcss()\r\n>>>\r\n>>> css.element(\"body\",{\"background\":\"#ccc\",\"color\":\"#000\"})\r\n'body { background: #ccc; color: #000; }'\r\n>>> html.writecss(css.release(),indent=True,block=2)\r\n'<html>\\n\\t<head>\\n\\t\\t<title> sample </title>\\n\\t\\t<script type=\"text/css\">\\n\\t\\tbody { background: #ccc; color: #000; }\\n\\t\\t</style>'\r\n>>> \r\n>>> print html\r\n<html>\r\n\t<head>\r\n\t\t<title> sample </title>\r\n\t\t<style type=\"text/css\">\r\n\t\tbody { background: #ccc; color: #000; }\r\n\t\t</style>\r\n\r\n>>> html.indent(\"</head>\")\r\n'<html>\\n\\t<head>\\n\\t\\t<title> sample </title>\\n\\t\\t<script type=\"text/css\">\\n\\t\\tbody { b    ackground: #ccc; color: #000; }\\n\\t\\t</style>\\n\\t</head>'",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/alice-himmel/BeautifulHTML",
    "keywords": "",
    "license": "NYSL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "BeautifulHTML",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/BeautifulHTML/",
    "release_url": "https://pypi.org/project/BeautifulHTML/1.2.0/",
    "requires_python": null,
    "summary": "Can write a Beautiful HTML Code in python script.",
    "version": "1.2.0"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ea352bdb4a315b78d2fb2a3429c44c90",
          "sha256": "3dce7037642bcb3e581c6ec8348f124131d0c603708c41c6241818b6250eb456"
        },
        "downloads": 4644,
        "filename": "BeautifulHTML-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ea352bdb4a315b78d2fb2a3429c44c90",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2014,
        "upload_time": "2011-02-17T11:52:34",
        "url": "https://files.pythonhosted.org/packages/fa/c2/17038222a5c5ca895919097ccccfc85ff1c6c859ba4c62157acbdfc22973/BeautifulHTML-1.0.tar.gz"
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c0cffe910ee59a2bd8bc970404441102",
          "sha256": "1ad2c1b20da91e7cb70b9c89e782d14471537133e55f1525946c3dab73646f07"
        },
        "downloads": 5375,
        "filename": "BeautifulHTML-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c0cffe910ee59a2bd8bc970404441102",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2163,
        "upload_time": "2011-02-17T13:33:57",
        "url": "https://files.pythonhosted.org/packages/d5/d7/b2019e2468d514392b231c86988b2fcdc33774cccc13e7278614a952b568/BeautifulHTML-1.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c0cffe910ee59a2bd8bc970404441102",
        "sha256": "1ad2c1b20da91e7cb70b9c89e782d14471537133e55f1525946c3dab73646f07"
      },
      "downloads": 5375,
      "filename": "BeautifulHTML-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c0cffe910ee59a2bd8bc970404441102",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 2163,
      "upload_time": "2011-02-17T13:33:57",
      "url": "https://files.pythonhosted.org/packages/d5/d7/b2019e2468d514392b231c86988b2fcdc33774cccc13e7278614a952b568/BeautifulHTML-1.2.0.tar.gz"
    }
  ]
}