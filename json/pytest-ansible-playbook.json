{
  "info": {
    "author": "Martin Bukatovi\u010d",
    "author_email": "mbukatov@redhat.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Testing"
    ],
    "description": "pytest-ansible-playbook\n===================================\n\nThis repository contains `pytest`_ `plugin`_ which provides an easy way\nto run particular `ansible playbooks`_ during setup phase of a test case.\nThis is useful when\nyou already have some playbook files you would like to reuse during test setup\nor plan to maintain test setup in ansible playbooks for you to be able to\nuse it both during test run setup and directly via ansible for other purposes\n(automatically during deployment or manually when needed).\n\nCompared with `pytest-ansible`_ module, this module doesn't allow you to\ninspect `ansible facts`_ or details about results of each ansible task, nor\ndoest it allow to specify and execute an ansible task directly. So if you need\nany of that, go for `pytest-ansible`_ instead. This plugin provides the only\nmissing ansible feature which `pytest-ansible`_ is not supposed to provide - to\nrun ansible playbook file directly.\n\nInitial structure of this repository was generated with `Cookiecutter`_\nalong with `@hackebrot`_'s `Cookiecutter-pytest-plugin`_ template.\n\n\nFeatures\n--------\n\n* The plugin provides ``ansible_playbook`` `pytest fixture`_, which allows\n  one to run one or more ansible playbooks during test setup or tear down.\n\n* It's compatible with both python2 and python3 (playbooks are executed via\n  running ``ansible-playbook`` in subprocess instead of using api\n  of ansible python module).\n\n* Doesn't allow you to configure ansible in any way, all changes of ansible\n  setup needs to be done in ansible playbooks, variable or config files.\n  This encourages you to maintain a clear separation of ansible playbooks\n  and the tests.\n\n\nRequirements\n------------\n\nAnsible should be installed (so that ``ansible-playbook`` binary is\navailable in PATH). Use version provided by packaging system of your operation\nsystem.\n\n\nInstallation\n------------\n\nThere is no stable release yet, so the only option is to use latest\nsources from master branch.\n\nLatest development version\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe suggested way to install from sources of current master branch is\nvia `python virtual enviroment`_::\n\n    $ cd pytest-ansible-playbook\n    $ virtualenv .env\n    $ source .env/bin/activate\n    $ pip install -e .\n\nNote that you can use `virtualenvwrapper`_ to simplify this workflow.\n\n.. TODO: uncomment the following when the 1st release is done\n.. Stable\n.. ~~~~~~\n\n.. You can install \"pytest-ansible-playbook\" via `pip`_ from `PyPI`_::\n\n..     $ pip install pytest-ansible-playbook\n\n\nUsage\n-----\n\nWhen the plugin is installed, you can use the following command-line\nparameters::\n\n    py.test \\\n        [--ansible-playbook-directory <path_to_directory_with_playbooks>] \\\n        [--ansible-playbook-inventory <path_to_inventory_file>]\n\nWhere ``<path_to_directory_with_playbooks>`` is a directory which contains\nansible playbooks and any other ansible files such as\nconfiguration or roles if needed. A ``ansible-playbook`` process will be able\nto access the files stored there, since this directory is set as cwd (current\nworking directory) of the ansible process.\n\nThe ``<path_to_inventory_file>`` is file with `ansible inventory`_. You can\nuse either an absolute path or a relative path within the ansible directory\nspecified via the 1st option.\n\nNote that the option names were chosen this way so that it doesn't conflict\nwith `pytest-ansible`_ plugin.\n\n\nUsing ansible playbook fixture\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe plugin provides a single pytest fixture called ``ansible_playbook``. To\nspecify playbooks to be executed by the fixture, use the following `pytest\nmarkers`_:\n\n* ``@pytest.mark.ansible_playbook_setup('playbook.yml')``\n* ``@pytest.mark.ansible_playbook_teardown('playbook.yml')``\n\nNote that you can list multiple playbooks in the marker if needed, eg.::\n\n    @pytest.mark.ansible_playbook_setup('playbook.01.yml', 'playbook.02.yml')\n\nboth playbooks would be executed in the given order.\n\nHere is an example how to specify 2 playbooks to be run during setup phase\nof a test case and one for the teardown::\n\n    @pytest.mark.ansible_playbook_setup('setup_foo.yml', 'bar.yml')\n    @pytest.mark.ansible_playbook_teardown('teardown_foo.yml')\n    def test_foo(ansible_playbook):\n        \"\"\"\n        Some testing is done here.\n        \"\"\"\n\nWhile using markers without ``ansible_playbook`` fixture like this is valid::\n\n    @pytest.mark.ansible_playbook_setup('setup_foo.yml')\n    @pytest.mark.ansible_playbook_teardown('teardown_foo.yml')\n    def test_foo():\n        \"\"\"\n        Some testing is done here.\n        \"\"\"\n\nno playbook would be executed in such case.\n\nAlso note that using a marker without any playbook parameter or using the\nfixture without any marker is not valid and would cause an error.\n\n\nContributing\n------------\n\nContributions are very welcome. Tests can be run with `tox`_, please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n\nLicense\n-------\n\nDistributed under the terms of the `Apache License 2.0`_ license,\n\"pytest-ansible-playbook\" is free and open source software\n\n\nIssues\n------\n\nIf you encounter any problems, please `file an issue`_ along with a detailed\ndescription.\n\n.. _`file an issue`: https://gitlab.com/mbukatov/pytest-ansible-playbook/issues\n.. _`Cookiecutter`: https://github.com/audreyr/cookiecutter\n.. _`@hackebrot`: https://github.com/hackebrot\n.. _`cookiecutter-pytest-plugin`: https://github.com/pytest-dev/cookiecutter-pytest-plugin\n.. _`pytest`: http://docs.pytest.org/en/latest/\n.. _`pytest fixture`: http://doc.pytest.org/en/latest/fixture.html\n.. _`pytest markers`: http://doc.pytest.org/en/latest/example/markers.html\n.. _`plugin`: http://doc.pytest.org/en/latest/plugins.html\n.. _`tox`: https://tox.readthedocs.io/en/latest/\n.. _`pip`: https://pypi.python.org/pypi/pip/\n.. _`PyPI`: https://pypi.python.org/pypi\n.. _`python virtual enviroment`: https://virtualenv.pypa.io/en/stable/\n.. _`virtualenvwrapper`: https://virtualenvwrapper.readthedocs.io/en/latest/\n.. _`pytest-ansible`: https://pypi.python.org/pypi/pytest-ansible\n.. _`ansible playbooks`: https://docs.ansible.com/ansible/playbooks.html\n.. _`ansible facts`: https://docs.ansible.com/ansible/playbooks_variables.html#information-discovered-from-systems-facts\n.. _`ansible inventory`: https://docs.ansible.com/ansible/intro_inventory.html\n.. _`Apache License 2.0`: http://www.apache.org/licenses/LICENSE-2.0",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://gitlab.com/mbukatov/pytest-ansible-playbook",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-ansible-playbook",
    "platform": "",
    "project_url": "https://pypi.org/project/pytest-ansible-playbook/",
    "release_url": "https://pypi.org/project/pytest-ansible-playbook/0.3.0/",
    "requires_python": "",
    "summary": "Pytest fixture which runs given ansible playbook file.",
    "version": "0.3.0"
  },
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cb8c966308e18bb055609b5880d0454e",
          "sha256": "77f782633760d5b02c1e68aecfadecc90afc21eb22b0f7281283e2b44069b842"
        },
        "downloads": 140,
        "filename": "pytest-ansible-playbook-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cb8c966308e18bb055609b5880d0454e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9369,
        "upload_time": "2016-11-08T15:18:10",
        "url": "https://files.pythonhosted.org/packages/ad/fe/710e0cbb671fafbb299e729f621b3b48aedfbfb72066dc7e67e92374677e/pytest-ansible-playbook-0.3.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "cb8c966308e18bb055609b5880d0454e",
        "sha256": "77f782633760d5b02c1e68aecfadecc90afc21eb22b0f7281283e2b44069b842"
      },
      "downloads": 140,
      "filename": "pytest-ansible-playbook-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cb8c966308e18bb055609b5880d0454e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9369,
      "upload_time": "2016-11-08T15:18:10",
      "url": "https://files.pythonhosted.org/packages/ad/fe/710e0cbb671fafbb299e729f621b3b48aedfbfb72066dc7e67e92374677e/pytest-ansible-playbook-0.3.0.tar.gz"
    }
  ]
}