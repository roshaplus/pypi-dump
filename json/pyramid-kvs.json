{
  "info": {
    "author": null,
    "author_email": null,
    "bugtrack_url": null,
    "classifiers": [],
    "description": "===========\npyramid_kvs\n===========\n\n.. image:: https://travis-ci.org/Gandi/pyramid_kvs.svg?branch=master\n    :target: https://travis-ci.org/Gandi/pyramid_kvs\n\nSome Key Value Store basics for pyramid:\n\nTwo KVS are implemented:\n - memcache\n - redis\n\nHere are the provides features:\n\n - An application cache, shared by every request.\n - A session manager\n - A rate limit per session holder\n - A perl session reader (except you are migrating a perl website,\n  you probably don't want to use it).\n\nEvery of this components are optional, they exists if they are set in the\nconfiguration like below.\nComponent settings are written in json.\n\nCache\n=====\n\nThe application cache is a new attribute of the session. ``request.cache`` if\nthe settings ``kvs.cache`` exists.\nHere are an example of configuration\n\n::\n\n    kvs.cache = {\"kvs\": \"redis\",\n                 \"codec\": \"pickle\",\n                 \"kvs_kwargs\": {},\n                 \"ttl\": 300,\n                 \"key_prefix\": \"cache::\"}\n\nEvery kvs, except the type are optional.\nThe example contains every key with their default values for a redis instance.\nThe ``kvs_kwargs`` key is passed to the driver to build the client connection.\n\nSession\n=======\n\nThe session is accessible via \"request.session\", it's in every pyramid\napplication.\nThis is just an implementation for Key Value Store users.\n\n::\n\n    kvs.session = {\"kvs\": \"redis\",\n                   \"key_name\": \"session_id\",\n                   \"session_type\": \"cookie\",\n                    \"ttl\": 300,\n                    \"key_prefix\": \"session::\"}\n\n\nEvery kvs, except the type are optional.\nThe example contains every key with their default values for a redis instance.\n\nYou can also create a session for an http header like authentication token,\nit's help to create a cache per user in an API. API don't use cookies.\n\n::\n\n    kvs.session = {\"kvs\": \"redis\",\n                   \"key_name\": \"X-Auth-Token\",\n                   \"session_type\": \"header\",\n                    \"ttl\": 300,\n                    \"key_prefix\": \"session::\"}\n\n\nRatelimit\n=========\n\nThe ratelimit works only if the kvs.session is used!\nRatelimit is per session hold and limit number of http queries in a defined\nperiod.\n\n::\n\n    kvs.ratelimit = {\"window\": 1, \"limit\": 15}\n\nAll keys are optional.\nThe example contains every key with their default values for a redis instance.\n\n\nIf the ratelimit is enabled, every response will be decorated with the\nfollowing http headers:\n - ``X-RateLimit-Limit``: max queries in the period.\n - ``X-RateLimit-Remaining``: current remaining queries in that period.\n\n\nperlsess\n========\n\nThis permit to read a session from a perl that use `storable`_ session.\n\n_`storable`: http://search.cpan.org/~ams/Storable-2.45/Storable.pm\n\nHere is an example.\n\n::\n\n\n    # declare the perlsess\n    kvs.perlsess = {\"type\": \"memcached\"}\n\n\nUsage:\n\nDeclare the addons in the ``pyramid.includes`` in your config, then\ntweak the settings like above.\n\n::\n\n    # development.ini\n    [app:main]\n    pyramid.includes =\n        pyramid_kvs\n\n    # declare the application cache\n    # except type, every keys are optional\n    # kvs_kwargs for redis is the parameters of the redis.Redis class\n    # see: http://redis-py.readthedocs.org/en/latest/\n    # for memcache, parameters of the memcache.Client class\n    # https://github.com/linsomniac/python-memcached/blob/master/memcache.py#L160\n    kvs.cache = {\"type\": \"redis\"}\n\n    # declare the session\n    kvs.session = {\"type\": \"redis\"}\n\n    # Authorize a session holder to do 20 http queries max in 2 seconds.\n    kvs.ratelimit = {\"window\": 2, \"limit\": 20}\n\n\ntests\n=====\n\npyramid_kvs have also a 'mock' implementation of a `kvs` used for testing\npurpose, register it using the pyramid plugins in your tests:::\n\npyramid.includes =\n    pyramid_kvs.testing\n",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "pyramid-kvs",
    "platform": null,
    "project_url": "https://pypi.org/project/pyramid-kvs/",
    "release_url": "https://pypi.org/project/pyramid-kvs/0.2.3/",
    "requires_python": null,
    "summary": null,
    "version": "0.2.3"
  },
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4620e4def7e35137e9d33368e12dd38e",
          "sha256": "6c9d9cd095deaf7fb32c5add7032a66de3f4efa7f6be0898087b3c8dbc1bde1f"
        },
        "downloads": 2625,
        "filename": "pyramid-kvs-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4620e4def7e35137e9d33368e12dd38e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19767,
        "upload_time": "2015-05-29T08:45:04",
        "url": "https://files.pythonhosted.org/packages/79/8c/05fb5daffce67dc1501228bfc239c9ada8dc972bdaf7be32cd4a8cbcaece/pyramid-kvs-0.2.2.tar.gz"
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9d7be7283dc5befcdb1670b741a746be",
          "sha256": "834880a6cf2fbcd9ac39edf7048d5a38036aabc495cad618534f8d90b6e354b9"
        },
        "downloads": 1154,
        "filename": "pyramid-kvs-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9d7be7283dc5befcdb1670b741a746be",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20019,
        "upload_time": "2015-11-09T09:07:00",
        "url": "https://files.pythonhosted.org/packages/38/1b/ee1c256d60ea5cc68255080582ec24f7bb00a5c2e789498a83dbeb3a5013/pyramid-kvs-0.2.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9d7be7283dc5befcdb1670b741a746be",
        "sha256": "834880a6cf2fbcd9ac39edf7048d5a38036aabc495cad618534f8d90b6e354b9"
      },
      "downloads": 1154,
      "filename": "pyramid-kvs-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "9d7be7283dc5befcdb1670b741a746be",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 20019,
      "upload_time": "2015-11-09T09:07:00",
      "url": "https://files.pythonhosted.org/packages/38/1b/ee1c256d60ea5cc68255080582ec24f7bb00a5c2e789498a83dbeb3a5013/pyramid-kvs-0.2.3.tar.gz"
    }
  ]
}