{
  "info": {
    "author": "OpenStack",
    "author_email": "openstack-dev@lists.openstack.org",
    "bugtrack_url": "",
    "classifiers": [
      "Environment :: OpenStack",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4"
    ],
    "description": "========================\nTeam and repository tags\n========================\n\n.. image:: http://governance.openstack.org/badges/tripleo-validations.svg\n    :target: http://governance.openstack.org/reference/tags/index.html\n\n.. Change things from this point on\n\nTripleO Validations\n===================\n\nA collection of Ansible playbooks to detect and report potential issues during TripleO deployments\n\nThe validations will help detect issues early in the deployment process and\nprevent field engineers from wasting time on misconfiguration or hardware\nissues in their environments.\n\nAll validations are written in Ansible and are written in a way that's\nconsumable by the `Mistral validation framework\n<https://review.openstack.org/#/c/255792/>`_ or by Ansible directly. They are\navailable independently from the UI or the command line client.\n\n* Free software: Apache license\n* Source: http://git.openstack.org/cgit/openstack/tripleo-validations\n* Bugs: https://bugs.launchpad.net/tripleo/+bugs?field.tag=validations\n\nPrerequisites\n-------------\n\nThe TripleO validations require Ansible 2.0 or above::\n\n    $ sudo pip install 'ansible>=2'\n\nExisting validations\n--------------------\n\nHere are all the validations that currently exist. They're grouped by\nthe deployment stage they're should be run on.\n\nValidations can belong to multiple groups.\n\nPrep\n~~~~\n\nValidations that are run on a fresh machine *before* the undercloud is\ninstalled.\n\n.. include:: validations-prep.rst\n\nPre Introspection\n~~~~~~~~~~~~~~~~~\n\nValidations that are run when the undercloud is ready to perform hardware\nintrospection.\n\n.. include:: validations-pre-introspection.rst\n\nPre Deployment\n~~~~~~~~~~~~~~\n\nValidation that are run right before deploying the overcloud.\n\n.. include:: validations-pre-deployment.rst\n\nPost Deployment\n~~~~~~~~~~~~~~~\n\nValidations that are run after the overcloud deployment finished.\n\n.. include:: validations-post-deployment.rst\n\n\nWriting Validations\n-------------------\n\nAll validations are written in standard Ansible with a couple of extra\nmeta-data to provide information to the Mistral validation framework.\n\nFor people not familiar with Ansible, get started with their `excellent\ndocumentation <http://docs.ansible.com/ansible/>`_.\n\nAfter the generic explanation on writing validations is a couple of concrete\nexamples.\n\nDirectory Structure\n~~~~~~~~~~~~~~~~~~~\n\nAll validations are located in the ``validations`` directory. It\ncontains a couple of subdirectories:\n\n- the ``files`` directory contains scripts that are directly executable;\n- the ``library`` one is for custom Ansible modules available to the\n  validations;\n- ``tasks`` is for common steps that can be shared between the validations.\n\nHere is what the tree looks like::\n\n    validations\n    \u251c\u2500\u2500 first_validation.yaml\n    \u251c\u2500\u2500 second_validation.yaml\n    \u251c\u2500\u2500 files\n    \u2502   \u2514\u2500\u2500 some_script.sh\n    \u251c\u2500\u2500 library\n    \u2502   \u251c\u2500\u2500 another_module.py\n    \u2502   \u2514\u2500\u2500 some_module.py\n    \u2514\u2500\u2500 tasks\n        \u2514\u2500\u2500 some_task.yaml\n\nSample Validation\n~~~~~~~~~~~~~~~~~\n\nEach validation is an Ansible playbook with a known location and some\nmeta-data. Here is what a minimal validation would look like::\n\n    ---\n    - hosts: overcloud\n      vars:\n        metadata:\n          name: Hello World\n          description: This validation prints Hello World!\n      tasks:\n      - name: Run an echo command\n        command: echo Hello World!\n\nIt should be saved as ``validations/hello_world.yaml``.\n\nAs shown here, the validation playbook requires three top-level directives:\n``hosts``, ``vars -> metadata`` and ``tasks``.\n\n``hosts`` specify which nodes to run the validation on. Based on the\n``hosts.sample`` structure, the options can be ``all`` (run on all nodes),\n``undercloud``, ``overcloud`` (all overcloud nodes), ``controller`` and\n``compute``.\n\nThe ``vars`` section serves for storing variables that are going to be\navailable to the Ansible playbook. The validations API uses the ``metadata``\nsection to read each validation's name and description. These values are then\nreported by the API and shown in the UI.\n\nThe validations can be grouped together by specifying a ``groups`` metadata.\nGroups function similar to tags and a validation can thus be part of many\ngroups.  Here is, for example, how to have a validation be part of the\n`pre-deployment` and `hardware` groups::\n\n    metadata:\n      groups:\n        - pre-deployment\n        - hardware\n\n``tasks`` contain a list of Ansible tasks to run. Each task is a YAML\ndictionary that must at minimum contain a name and a module to use.\nModule can be any module that ships with Ansible or any of the custom\nones in the ``library`` subdirectory.\n\nThe `Ansible documentation on playbooks\n<http://docs.ansible.com/ansible/playbooks.html>`__ provides more detailed\ninformation.\n\nAnsible Inventory\n~~~~~~~~~~~~~~~~~\n\nDynamic inventory\n+++++++++++++++++\n\nTripleo-validations ships with a `dynamic inventory\n<http://docs.ansible.com/ansible/intro_dynamic_inventory.html>`__, which\ncontacts the various OpenStack services to provide the addresses of the\ndeployed nodes as well as the undercloud.\n\nJust pass ``-i /usr/bin/tripleo-ansible-inventory`` to ``ansible-playbook`` command::\n\n    ansible-playbook -i /usr/bin/tripleo-ansible-inventory validations/hello_world.yaml\n\nHosts file\n++++++++++\n\nWhen more flexibility than what the current dynamic inventory provides is\nneeded or when running validations against a host that hasn't been deployed via\nheat (such as the ``prep`` validations), it is possible to write a custom hosts\ninventory file. It should look something like this::\n\n    [undercloud]\n    undercloud.example.com\n\n    [overcloud:children]\n    controller\n    compute\n\n    [controller]\n    controller.example.com\n\n    [compute]\n    compute-1.example.com\n    compute-2.example.com\n\n    [all:vars]\n    ansible_ssh_user=stack\n    ansible_sudo=true\n\nIt will have a ``[group]`` section for each role (``undercloud``,\n``controller``, ``compute``) listing all the nodes belonging to that group. It\nis also possible to create a group from other groups as done with\n``[overcloud:children]`` in the above example. If a validation specifies\n``hosts: overcloud``, it will be run on any node that belongs to the\n``compute`` or ``controller`` groups. If a node happens to belong to both, the\nvalidation will only be run once.\n\nLastly, there is an ``[all:vars]`` section where to configure certain\nAnsible-specific options.\n\n``ansible_ssh_user`` will specify the user Ansible should SSH as. If that user\ndoes not have root privileges, it is possible to instruct it to use ``sudo`` by\nsetting ``ansible_sudo`` to ``true``.\n\nLearn more at the `Ansible documentation page for the Inventory\n<http://docs.ansible.com/ansible/intro_inventory.html>`__\n\nCustom Modules\n~~~~~~~~~~~~~~\n\nIn case the `available Ansible modules\n<http://docs.ansible.com/ansible/modules_by_category.html>`__ don't cover your\nneeds, it is possible to write your own. Modules belong to the\n``validations/library`` directory.\n\nHere is a sample module that will always fail::\n\n    #!/usr/bin/env python\n\n    from ansible.module_utils.basic import *\n\n    if __name__ == '__main__':\n        module = AnsibleModule(argument_spec={})\n        module.fail_json(msg=\"This module always fails.\")\n\nSave it as ``validations/library/my_module.py`` and use it in a validation like\nso::\n\n    tasks:\n    ...  # some tasks\n    - name: Running my custom module\n      my_module:\n    ...  # some other tasks\n\nThe name of the module in the validation ``my_module`` must match the file name\n(without extension): ``my_module.py``.\n\nThe custom modules can accept parameters and do more complex reporting.  Please\nrefer to the guide on writing modules in the Ansible documentation.\n\nLearn more at the `Ansible documentation page about writing custom modules\n<http://docs.ansible.com/ansible/developing_modules.html>`__.\n\nRunning a validation\n~~~~~~~~~~~~~~~~~~~~\n\nRunning the validations require ansible and a set of nodes to run them against.\nThese nodes need to be reachable from the operator's machine and need to have\nan account it can ssh to and perform passwordless sudo.\n\nThe nodes need to be present in the static inventory file or available from the\ndynamic inventory script depending on which one the operator chooses to use.\nCheck which nodes are available with::\n\n    $ source stackrc\n    $ tripleo-ansible-inventory --list\n\nIn general, Ansible and the validations will be located on the *undercloud*,\nbecause it should have connectivity to all the *overcloud* nodes is already set\nup to SSH to them.\n\n::\n\n    $ source ~/stackrc\n    $ ansible-playbook -i /usr/bin/tripleo-ansible-inventory path/to/validation.yaml\n\nExample: Verify Undercloud RAM requirements\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe Undercloud has a requirement of 16GB RAM. Let's write a validation\nthat verifies this is indeed the case before deploying anything.\n\nLet's create ``validations/undercloud-ram.yaml`` and put some metadata\nin there::\n\n    ---\n    - hosts: undercloud\n      vars:\n        metadata:\n          name: Minimum RAM required on the undercloud\n          description: >\n            Make sure the undercloud has enough RAM.\n          groups:\n            - prep\n            - pre-introspection\n\nThe ``hosts`` key will tell which server should the validation run on. The\ncommon values are ``undercloud``, ``overcloud`` (i.e. all overcloud nodes),\n``controller`` and ``compute`` (i.e. just the controller or the compute nodes).\n\nThe ``name`` and ``description`` metadata will show up in the API and the\nTripleO UI so make sure to put something meaningful there. The ``groups``\nmetadata applies a tag to the validation and allows to group them together in\norder to perform group operations, such are running them all in one call.\n\nNow let's add an Ansible task to test that it's all set up properly. Add\nthis under the same indentation as ``hosts`` and ``vars``::\n\n      tasks:\n      - name: Test Output\n        debug: msg=\"Hello World!\"\n\nWhen running it, it should output something like this::\n\n    $ ansible-playbook -i /usr/bin/tripleo-ansible-inventory validations/undercloud-ram.yaml\n\n    PLAY [undercloud] *************************************************************\n\n    GATHERING FACTS ***************************************************************\n    ok: [localhost]\n\n    TASK: [Test Output] ***********************************************************\n    ok: [localhost] => {\n        \"msg\": \"Hello World!\"\n    }\n\n    PLAY RECAP ********************************************************************\n    localhost                  : ok=2    changed=0    unreachable=0    failed=0\n\nWriting the full validation code is quite easy in this case because Ansible has\ndone all the hard work for us already. We can use the ``ansible_memtotal_mb``\nfact to get the amount of RAM (in megabytes) the tested server currently has.\nFor other useful values, run ``ansible -i /usr/bin/tripleo-ansible-inventory\nundercloud -m setup``.\n\nSo, let's replace the hello world task with a real one::\n\n      tasks:\n      - name: Verify the RAM requirements\n        fail: msg=\"The RAM on the undercloud node is {{ ansible_memtotal_mb }} MB, the minimal recommended value is 16 GB.\"\n        failed_when: \"({{ ansible_memtotal_mb }}) < 16000\"\n\nRunning this, we see::\n\n    TASK: [Verify the RAM requirements] *******************************************\n    failed: [localhost] => {\"failed\": true, \"failed_when_result\": true}\n    msg: The RAM on the undercloud node is 8778 MB, the minimal recommended value is 16 GB.\n\nBecause our Undercloud node really does not have enough RAM. Your mileage may\nvary.\n\nEither way, the validation works and reports the lack of RAM properly!\n\n``failed_when`` is the real hero here: it evaluates an Ansible expression (e.g.\ndoes the node have more than 16 GB of RAM) and fails when it's evaluated as\ntrue.\n\nThe ``fail`` line right above it lets us print a custom error in case of\na failure. If the task succeeds (because we do have enough RAM), nothing will\nbe printed out.\n\nNow, we're almost done, but there are a few things we can do to make this nicer\non everybody.\n\nFirst, let's hoist the minimum RAM requirement into a variable. That way we'll\nhave one place where to change it if we need to and we'll be able to test the\nvalidation better as well!\n\nSo, let's call the variable ``minimum_ram_gb`` and set it to ``16``. Do this in\nthe ``vars`` section::\n\n      vars:\n        metadata:\n          name: ...\n          description: ...\n          groups: ...\n        minimum_ram_gb: 16\n\nMake sure it's on the same indentation level as ``metadata``.\n\nThen, update ``failed_when`` like this::\n\n    failed_when: \"({{ ansible_memtotal_mb }}) < {{ minimum_ram_gb|int * 1024 }}\"\n\nAnd ``fail`` like so::\n\n    fail: msg=\"The RAM on the undercloud node is {{ ansible_memtotal_mb }} MB, the minimal recommended value is {{ minimum_ram_gb|int * 1024 }} MB.\"\n\nAnd re-run it again to be sure it's still working.\n\nOne benefit of using a variable instead of a hardcoded value is that we can now\nchange the value without editing the yaml file!\n\nLet's do that to test both success and failure cases.\n\nThis should succeed but saying the RAM requirement is 1 GB::\n\n    ansible-playbook -i /usr/bin/tripleo-ansible-inventory validations/undercloud-ram.yaml -e minimum_ram_gb=1\n\nAnd this should fail by requiring much more RAM than is necessary::\n\n    ansible-playbook -i /usr/bin/tripleo-ansible-inventory validations/undercloud-ram.yaml -e minimum_ram_gb=128\n\n(the actual values may be different in your configuration -- just make sure one\nis low enough and the other too high)\n\nAnd that's it! The validation is now finished and you can start using it in\nearnest.\n\nFor reference, here's the full validation::\n\n    ---\n    - hosts: undercloud\n      vars:\n        metadata:\n          name: Minimum RAM required on the undercloud\n          description: Make sure the undercloud has enough RAM.\n          groups:\n            - prep\n            - pre-introspection\n        minimum_ram_gb: 16\n      tasks:\n      - name: Verify the RAM requirements\n        fail: msg=\"The RAM on the undercloud node is {{ ansible_memtotal_mb }} MB, the minimal recommended value is {{ minimum_ram_gb|int * 1024 }} MB.\"\n        failed_when: \"({{ ansible_memtotal_mb }}) < {{ minimum_ram_gb|int * 1024 }}\"\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://docs.openstack.org/developer/tripleo-validations/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tripleo-validations",
    "platform": "",
    "project_url": "https://pypi.org/project/tripleo-validations/",
    "release_url": "https://pypi.org/project/tripleo-validations/7.1.0/",
    "requires_python": "",
    "summary": "A collection of Ansible playbooks to detect and report potential issues during TripleO deployments",
    "version": "7.1.0"
  },
  "releases": {
    "0.0.1": [],
    "5.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2e12352b4054d731eb0f02d6bd018d26",
          "sha256": "65ab6a4bdc4f36b23aa7739ab5dbe15b6ad3ad899e7b4c04f2296e6a2f2c1d56"
        },
        "downloads": 340,
        "filename": "tripleo_validations-5.0.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e12352b4054d731eb0f02d6bd018d26",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 20168,
        "upload_time": "2016-08-25T11:41:45",
        "url": "https://files.pythonhosted.org/packages/aa/37/91439fb8c77348064f9c5796e31e0b37718736572d533b49487e9f376f25/tripleo_validations-5.0.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "948a68d6577d0fc9b5eab6f557639b79",
          "sha256": "b520f050072548ea5d46e4001c1390e60d89027a1d67319bdbf7a6ec5a1c7cc9"
        },
        "downloads": 558,
        "filename": "tripleo-validations-5.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "948a68d6577d0fc9b5eab6f557639b79",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22964,
        "upload_time": "2016-08-25T11:41:47",
        "url": "https://files.pythonhosted.org/packages/45/fc/8c6c3d85a5123e7c3a314638d101e9632fb0493ded8398570e6d9119ce45/tripleo-validations-5.0.0.tar.gz"
      }
    ],
    "5.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9bf6a1941591f36ae9c511aa975b0286",
          "sha256": "30c49d109513da9c504a048fad3fc7db60c7e3107495e517f13278168c95da92"
        },
        "downloads": 190,
        "filename": "tripleo_validations-5.1.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "9bf6a1941591f36ae9c511aa975b0286",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 23585,
        "upload_time": "2016-09-01T15:34:24",
        "url": "https://files.pythonhosted.org/packages/87/b2/e8b097c1b88ea9456576b0642df4fdc04b16179500c7cc10e92e68b48801/tripleo_validations-5.1.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ed3851d39e19eb76d9d0519b02fba53e",
          "sha256": "fe1066c329d3d9488c0f2ec08241db818cd29484bcecdcf8e2308b7305a1b4b4"
        },
        "downloads": 193,
        "filename": "tripleo-validations-5.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ed3851d39e19eb76d9d0519b02fba53e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24934,
        "upload_time": "2016-09-01T15:34:26",
        "url": "https://files.pythonhosted.org/packages/32/3b/ec48b0e21b15bd34c22860aa6cf614655cfe784afeeeedf9232145b52e50/tripleo-validations-5.1.0.tar.gz"
      }
    ],
    "5.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a2c4a128048dd40926a670300ce94d5c",
          "sha256": "f8dc0a89477a2a33618b2bb9d17432f6529f3cbda10a38fd8c6fbdde6c721528"
        },
        "downloads": 67,
        "filename": "tripleo_validations-5.1.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "a2c4a128048dd40926a670300ce94d5c",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 47600,
        "upload_time": "2017-01-03T00:18:02",
        "url": "https://files.pythonhosted.org/packages/69/ce/8ddd593874db412a819d15e2e1cf2a5164968a3f32fee3490517c0329df6/tripleo_validations-5.1.1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0cde5dc95780f6394e3920ac81f665f5",
          "sha256": "cf5d5490b22d854d119c505cf7c06393fe564e00d38083bff963585826cb6f82"
        },
        "downloads": 69,
        "filename": "tripleo-validations-5.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0cde5dc95780f6394e3920ac81f665f5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 35910,
        "upload_time": "2017-01-03T00:18:05",
        "url": "https://files.pythonhosted.org/packages/29/35/520f0acd67060c7f9804afa3ad6823d68dba23adb378f5bf3a63f2de8b3d/tripleo-validations-5.1.1.tar.gz"
      }
    ],
    "5.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e5135f30e23f4cd37fc8923c0dd916ec",
          "sha256": "6daade82c6db1a53143eba1a9ed3465cfa87fdf64995dd5c8383535d7248c8ea"
        },
        "downloads": 0,
        "filename": "tripleo_validations-5.1.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5135f30e23f4cd37fc8923c0dd916ec",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 47861,
        "upload_time": "2017-04-27T23:27:23",
        "url": "https://files.pythonhosted.org/packages/0f/6b/5d509607ed3663999c88b3dbdf22d288c47bf36b89a88e1a70f3729fba4e/tripleo_validations-5.1.2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3dab293549eb33749a414dd12fd14ab0",
          "sha256": "8228f95fe92eee944cfaeadf2d72179a7dfa78acc7cc5cf4ee434fa5b7428006"
        },
        "downloads": 0,
        "filename": "tripleo-validations-5.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3dab293549eb33749a414dd12fd14ab0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 39477,
        "upload_time": "2017-04-27T23:27:26",
        "url": "https://files.pythonhosted.org/packages/6f/e4/756d4fa24967dbe32e5b5bbb35d1d14fcf3dffd7295f0dca75b16dce26c5/tripleo-validations-5.1.2.tar.gz"
      }
    ],
    "5.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9d2cf4e8433050c88147b4964df597e3",
          "sha256": "ee36f0a7c96958a25574b9990e437fa5fd06a264de8504a3dd38168eeee55c76"
        },
        "downloads": 44,
        "filename": "tripleo_validations-5.2.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d2cf4e8433050c88147b4964df597e3",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 48629,
        "upload_time": "2016-11-17T20:52:08",
        "url": "https://files.pythonhosted.org/packages/55/b4/80a0f58d6514d7f1e90018255d62cd1b3abf909b26514001d94d6cd2a2c2/tripleo_validations-5.2.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "78784480d854cdeb834871ffbd7d7c2e",
          "sha256": "b11ccf2c81f5ee212b87de8dccb8ce108d12c78bb20c99a000ab03e6cbed2eb6"
        },
        "downloads": 50,
        "filename": "tripleo-validations-5.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "78784480d854cdeb834871ffbd7d7c2e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 34826,
        "upload_time": "2016-11-17T20:52:11",
        "url": "https://files.pythonhosted.org/packages/34/3d/37367933b4e259050e3479a7693c2845913ef436f678f6db06a19d20831e/tripleo-validations-5.2.0.tar.gz"
      }
    ],
    "5.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e9557d7bcb7c08c7f92d4530bf826e84",
          "sha256": "4ee21d93994327b1da696b6ee1841406218df359cf47b1db3dfafed70d004161"
        },
        "downloads": 129,
        "filename": "tripleo_validations-5.3.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "e9557d7bcb7c08c7f92d4530bf826e84",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 49785,
        "upload_time": "2016-12-15T09:39:30",
        "url": "https://files.pythonhosted.org/packages/66/80/2c8cedf149151488edc737c11bfef2973a822d723e2b23c402e8083c488c/tripleo_validations-5.3.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "77d833fdf848a31695e3a10e8e7be4e5",
          "sha256": "5e4c259e33898b8662d2cd0f5f77fb3f19bb296c254c134940f7e3dcf8721a35"
        },
        "downloads": 136,
        "filename": "tripleo-validations-5.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "77d833fdf848a31695e3a10e8e7be4e5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 36154,
        "upload_time": "2016-12-15T09:39:32",
        "url": "https://files.pythonhosted.org/packages/d8/84/b5f44f8922b55092aa7e3a80f535b3a0861870f174ee1323cdd488170293/tripleo-validations-5.3.0.tar.gz"
      }
    ],
    "5.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1d64ac2cdc885fe33d7ee4022cba689a",
          "sha256": "f277a03126b7a5fa09d8b26e61f5482d14b3ee29948b570b7822064c7acdbf4c"
        },
        "downloads": 11,
        "filename": "tripleo_validations-5.4.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d64ac2cdc885fe33d7ee4022cba689a",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 50051,
        "upload_time": "2017-02-16T13:02:16",
        "url": "https://files.pythonhosted.org/packages/ab/dc/4ad64043030105ab50262c6f6fea38e3ad0dd8bdba12bc5722871178a99c/tripleo_validations-5.4.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "003ca748eec77e0d981cfcd832a84f45",
          "sha256": "9126a2d4d9063b19afb610c02716f584f07a91f793d853deaa462233fad28193"
        },
        "downloads": 14,
        "filename": "tripleo-validations-5.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "003ca748eec77e0d981cfcd832a84f45",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42389,
        "upload_time": "2017-02-16T13:02:18",
        "url": "https://files.pythonhosted.org/packages/23/8c/da7672cd64f1f364f618c518afcb7ebb0cdf26629a0cc5a7fa0c53c35132/tripleo-validations-5.4.0.tar.gz"
      }
    ],
    "5.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "94477e39664e7fcb332768f26ab2008d",
          "sha256": "710d5eb8183186df3dabcd647dca0c110b7f166f77e69407a16f790bfb39b0e4"
        },
        "downloads": 0,
        "filename": "tripleo_validations-5.5.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "94477e39664e7fcb332768f26ab2008d",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 51741,
        "upload_time": "2017-04-19T16:20:06",
        "url": "https://files.pythonhosted.org/packages/86/34/6a6e3ca81658654160817583021cbb6214f352eeea26f420ed98f6cfacbf/tripleo_validations-5.5.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e94b2fbc059e93274afe24dd57ba73fa",
          "sha256": "f83e753605d9a7c67652567b17539a3dfe9abcb269e73af99bb442699df7b52a"
        },
        "downloads": 0,
        "filename": "tripleo-validations-5.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e94b2fbc059e93274afe24dd57ba73fa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 47586,
        "upload_time": "2017-04-19T16:20:09",
        "url": "https://files.pythonhosted.org/packages/b8/58/0b8a88917332bd888fcb7ef6c9a20aab7593c5bad346210aee74d6a2a676/tripleo-validations-5.5.0.tar.gz"
      }
    ],
    "5.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ba646e2d47a8ad77334a83f593ed07aa",
          "sha256": "e3d180ff6996019d256da6fa0a479fda9314fe1a73e2e82a7d245473436752f5"
        },
        "downloads": 0,
        "filename": "tripleo_validations-5.6.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba646e2d47a8ad77334a83f593ed07aa",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 51737,
        "upload_time": "2017-04-28T01:09:34",
        "url": "https://files.pythonhosted.org/packages/af/81/b98c333a29674baffe8c7d44c79d20d3b85bfc79cbfe58e6623fc6b4d059/tripleo_validations-5.6.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4bcc652acc13b39ff0f881212418d238",
          "sha256": "467558f609244e4913575386557d0a509faf0e61aa5b0e050e421c27cfe4797b"
        },
        "downloads": 0,
        "filename": "tripleo-validations-5.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4bcc652acc13b39ff0f881212418d238",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 48531,
        "upload_time": "2017-04-28T01:09:36",
        "url": "https://files.pythonhosted.org/packages/79/87/9075f001a218cf9fea6c9153582dc6b0d31c4f51b9882573bc797a4d8e20/tripleo-validations-5.6.0.tar.gz"
      }
    ],
    "7.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "95d4204e138b1dfeed18f3e6edc72b65",
          "sha256": "ac3e005bb90550408468355e367b95ab0e466eb8a8e081431bf166dea21faa2f"
        },
        "downloads": 0,
        "filename": "tripleo_validations-7.0.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "95d4204e138b1dfeed18f3e6edc72b65",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 52390,
        "upload_time": "2017-04-11T08:44:26",
        "url": "https://files.pythonhosted.org/packages/c0/78/56a8fbfc3d58beacc33f98e6c8627ca55218c21dc257865bccbe9f604a70/tripleo_validations-7.0.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a3dc3f61f9cbc175cd898bacbcde5f48",
          "sha256": "426ea0f4e323ff071fae38e7192f4e8c025968be47e7586ee3e79ec1affd9262"
        },
        "downloads": 0,
        "filename": "tripleo-validations-7.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a3dc3f61f9cbc175cd898bacbcde5f48",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 43708,
        "upload_time": "2017-04-11T08:44:27",
        "url": "https://files.pythonhosted.org/packages/61/14/c3e53d857cf15a53f9bfea76c0d191b557ce6b08238130fe01ea6fa9325d/tripleo-validations-7.0.0.tar.gz"
      }
    ],
    "7.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2f9d626cf796fa860a9c424eb35aa2ec",
          "sha256": "921de111f78a4174685d6fafb9a66445ef5d145f677ee25a120f2910d1e5f42a"
        },
        "downloads": 0,
        "filename": "tripleo_validations-7.1.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f9d626cf796fa860a9c424eb35aa2ec",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 64536,
        "upload_time": "2017-06-08T20:21:20",
        "url": "https://files.pythonhosted.org/packages/fd/5a/ca8682952bd2c780e85e999fc5204e74eeccdcd381b5b16c1cd644ef79d7/tripleo_validations-7.1.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c0287b9b7ba96837ee8b4f44ca804958",
          "sha256": "1e76178c67a1ae8072ff4ab8305e6bfe5f63bb46b35fd8e8ce2e2e869cea15fb"
        },
        "downloads": 0,
        "filename": "tripleo-validations-7.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c0287b9b7ba96837ee8b4f44ca804958",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 51018,
        "upload_time": "2017-06-08T20:21:23",
        "url": "https://files.pythonhosted.org/packages/12/86/7159d74414aa59f12b987d1cd18e0fc377de37407f38c8ea5f5d89fb7d2c/tripleo-validations-7.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2f9d626cf796fa860a9c424eb35aa2ec",
        "sha256": "921de111f78a4174685d6fafb9a66445ef5d145f677ee25a120f2910d1e5f42a"
      },
      "downloads": 0,
      "filename": "tripleo_validations-7.1.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "2f9d626cf796fa860a9c424eb35aa2ec",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 64536,
      "upload_time": "2017-06-08T20:21:20",
      "url": "https://files.pythonhosted.org/packages/fd/5a/ca8682952bd2c780e85e999fc5204e74eeccdcd381b5b16c1cd644ef79d7/tripleo_validations-7.1.0-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "c0287b9b7ba96837ee8b4f44ca804958",
        "sha256": "1e76178c67a1ae8072ff4ab8305e6bfe5f63bb46b35fd8e8ce2e2e869cea15fb"
      },
      "downloads": 0,
      "filename": "tripleo-validations-7.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c0287b9b7ba96837ee8b4f44ca804958",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 51018,
      "upload_time": "2017-06-08T20:21:23",
      "url": "https://files.pythonhosted.org/packages/12/86/7159d74414aa59f12b987d1cd18e0fc377de37407f38c8ea5f5d89fb7d2c/tripleo-validations-7.1.0.tar.gz"
    }
  ]
}