{
  "info": {
    "author": "Charles Jekel",
    "author_email": "cjekel@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "tindetheus\n==========\n\nBuild personalized machine learning models for Tinder based on your\nhistorical preference using Python.\n\nThere are three parts to this: 1. A function to build a database which\nrecords everything about the profiles you've liked and disliked. 2. A\nfunction to train a model to your database. 3. A function to use the\ntrained model to automatically like and dislike new profiles.\n\nHow it works\n============\n\nEssentially you can use the last layer a CNN trained for facial\nclassification as a feature set that describes an individual's face. It\njust so happens that this feature set is related to facial\nattractiveness.\n\ntindetheus let's you build a database based on the profiles that you\nlike and dislike. You can then train a classification model to your\ndatabase. The model training first uses a MTCNN to detect and box the\nfaces in your database. Then a facenet model is run on the faces to\nextract the embeddings (last layer of the CNN). A logistic regression\nmodel is then fit to the embeddings. The logistic regression model is\nsaved, and this processes is repeated in automation to automatically\nlike and dislike profiles based on your historical preference.\n\nExample usage\n=============\n\n.. code:: bash\n\n    tindetheus browse\n\nbuild a database by liking and disliking profiles on Tinder. The\ndatabase contains all the profile information as a numpy array, while\nthe profile images are saved in a different folder.\n\n.. code:: bash\n\n    tindethus browse --distance=20\n\nby default tindetheus starts with a 5 mile radius, but you can specify a\nsearch distance by specifying --distance. The above example is to start\nwith a 20 mile search radius. It is important to note that when you run\nout of nearby users, tindethesus will ask you if you'd like to increase\nthe search distance by 5 miles.\n\n.. code:: bash\n\n    tindetheus train\n\nUse machine learning to build a personalized model of who you like and\ndislike based on your database. The more profiles you've browsed, the\nbetter your model will be.\n\n.. code:: bash\n\n    tindetheus like\n\nUse your personalized model to automatically like and dislike profiles.\nThe profiles which you have automatically liked and disliked are stored\nin al\\_database. By default this will start with a 5 mile search radius,\nwhich increases by 5 miles until you've used 100 likes. You can change\nthe default search radius by using\n\n.. code:: bash\n\n    tindetheus like --distance=20\n\nwhich would start with a 20 mile search radius.\n\nInstallation\n============\n\n1. Install pynder from source (pynder on pip has not been updated)\n\n   .. code:: bash\n\n       git clone https://github.com/charliewolf/pynder.git\n       [sudo] pip install ./pynder\n\n2. Install tindetheus\n\n   .. code:: bash\n\n       [sudo] pip install tindetheus\n\nGetting started\n===============\n\n1. After you have installed tindetheus. Create a new folder that will be\n   your Tinder database.\n\n   .. code:: bash\n\n       mkdir my_tinder_data\n       cd my_tinder_data\n\n2. You need your facebook id and facebook auth token. There are many\n   discussions on this on the internet to find this. If you are still\n   lost, perhaps check out\n   `this <https://gist.github.com/rtt/10403467>`__ or\n   `this <http://www.joelotter.com/2015/05/17/dj-khaled-tinder-bot.html>`__.\n3. Create a config.txt file that contains the following two lines\n   exactly\n\n   ::\n\n       facebook_token = YYYY\n       facebook_id = XXXX\n\n   where YYYY and XXXX are replaced with your token and id in order to\n   login using pynder.\n\n4. Download a pretrained facenet model. I recommend using this model\n   `20170512-110547 <https://drive.google.com/file/d/0B5MzpY9kBtDVZ2RpVDYwWmxoSUk/edithttps://drive.google.com/file/d/0B5MzpY9kBtDVZ2RpVDYwWmxoSUk/edit>`__\n   `mirror <https://mega.nz/#!d6gxFL5b!ZLINGZKxdAQ-H7ZguAibd6GmXFXCcr39XxAvIjmTKew>`__.\n   You must download 20170512-110547.zip and extract the contents in\n   your my\\_tinder\\_data folder. The contents will be a folder named\n   20170512-110547. You can use other `pretrained facenet\n   models <https://github.com/davidsandberg/facenet>`__ as long as you\n   rename the folder to 20170512-110547.\n\n5. You need to initialize git in your my\\_tinder\\_data folder which is\n   used to track revision history. Run the following commands to\n   initialize git.\n\n   .. code:: bash\n\n       git init\n       git add .\n       git commit -m \"first commit\"\n\n6. Start building your database. Manually reviewing 20-40 profiles will\n   be a good starting point, but you can do it with less. Before you\n   start training a model you have to be sure that you've liked and\n   disliked at leach one profile.\n\n   .. code:: bash\n\n       tindetheus browse\n\n7. After browsing profiles you can train your personalized classifcation\n   model at any time. Just run\n\n   .. code:: bash\n\n       tindetheus train\n\n   to build your personalized model. With more profiles you can build a\n   more accurate model, so feel free to browse more profiles at any time\n   and build to your database. Newly browsed profiles aren't\n   automatically added to the model, so you must manually run tinetheus\n   train to update your model.\n\n8. You can automatically like and dislike profiles based on your trained\n   model. To do this simply run\n\n   .. code:: bash\n\n       tindetheus like\n\n   which will use your latest trained model to automatically like and\n   dislike profiles. The application will start with a 5 mile search\n   radius, and automatically like and dislike the people in this radius.\n   After running out of people, the search radius is increased by 5\n   miles and the processes repeats. This goes on until you've used 100\n   likes, at which point the application stops.\n\n9. This is all in the early stages, so after each session I highly\n   recommend you backup your my\\_tinder\\_data folder by creating an\n   archvie of the folder.\n\nOpen source libraries\n=====================\n\ntindetheus uses the following open source libraries:\n\n-  `pynder <https://github.com/charliewolf/pynder>`__\n-  `facenet <https://github.com/davidsandberg/facenet>`__\n-  `numpy <http://www.numpy.org/>`__\n-  `matplotlib <https://matplotlib.org/>`__\n-  `scikit-learn <http://scikit-learn.org/stable/>`__\n-  `tensorflow <https://www.tensorflow.org/>`__\n-  `imageio <https://imageio.github.io/>`__\n-  `pandas <http://pandas.pydata.org/>`__\n\nAbout the name\n==============\n\nTindetheus is a combination of Tinder (the popular online dating\napplication) and the Greek Titans:\n`Prometheus <https://en.wikipedia.org/wiki/Prometheus>`__ and\n`Epimetheus <https://en.wikipedia.org/wiki/Epimetheus_(mythology)>`__.\nPrometheus signifies \"forethought,\" while his brother Epimetheus denotes\n\"afterthought\". In synergy they serve to improve your Tinder experience.\n\nEpimetheus creates a database from all of the profiles you review on\nTinder.\n\nPrometheus learns from your historical preferences to automatically like\nnew Tinder profiles.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/cjekel/tindetheus",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tindetheus",
    "platform": "any",
    "project_url": "https://pypi.org/project/tindetheus/",
    "release_url": "https://pypi.org/project/tindetheus/0.2.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Build personalized machine learning models for Tinder based on your historical preference",
    "version": "0.2.0"
  },
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9686730b8e347fffc02b6f1014ab1078",
          "sha256": "4f6c387b7b8c67f2d4be2a925bbbe1ce31694f4c7692ba758e474d1ede6b79b3"
        },
        "downloads": -1,
        "filename": "tindetheus-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9686730b8e347fffc02b6f1014ab1078",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1903830,
        "upload_time": "2017-12-21T20:07:17",
        "url": "https://files.pythonhosted.org/packages/1d/66/97ab69f1f3d2432359108524f5ad5bfb4d874679826ae5ec642d16f89b61/tindetheus-0.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9686730b8e347fffc02b6f1014ab1078",
        "sha256": "4f6c387b7b8c67f2d4be2a925bbbe1ce31694f4c7692ba758e474d1ede6b79b3"
      },
      "downloads": -1,
      "filename": "tindetheus-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9686730b8e347fffc02b6f1014ab1078",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 1903830,
      "upload_time": "2017-12-21T20:07:17",
      "url": "https://files.pythonhosted.org/packages/1d/66/97ab69f1f3d2432359108524f5ad5bfb4d874679826ae5ec642d16f89b61/tindetheus-0.2.0.tar.gz"
    }
  ]
}