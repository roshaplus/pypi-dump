{
  "info": {
    "author": "Bo Gao",
    "author_email": "kaye_gao@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "segment_liftover\n================\n\nConverting genome coordinates between different genome assemblies is a\ncommon task in bioinformatics. Services and tools such as UCSC Liftover,\nNCBI Remap and CrossMap are available to perform such conversion.\n\nWhen converting a genomic segment, those conversion tools will break the\nsegment into smaller parts if the segment is not continuous in the new\nassembly. However, in some circumstances such as copy number analyses,\nwhere the quantitative representation of a genomic range takes\nprecedence over base-specific representation, the integrity of a single\nsegment needs to be kept.\n\nMoreover, all those tools are designed for single file processing, and\noffer nothing to facilitate batch processing. But in Bioinformatic\nstudies, it is very often that people need to deal with hundreds and\neven thousands of files at a time.\n\n*segment_liftover* is a Python program that can convert segments between\ngenome assemblies, without breaking them apart. Part of its\nfunctionality is based on re-conversion by locus approximation, in\ninstances where a precise conversion of genomic positions fails.\n\nKey features: - converts continuous segments - performs approximate\nconversion when direct conversion fails - batch processing of any number\nof files - automatic folder traversal and file discovery - detailed logs\n- resuming from interruption - accept both segment (i.e.\u00a0start => end)\nand probe (i.e., single position) data\n\nProgram dependency\n~~~~~~~~~~~~~~~~~~\n\n*segment_liftover* depends on the *UCSC Liftover program*, which can be\nfound `here <https://genome-store.ucsc.edu/>`__. Please note that the\nUCSC Liftover is only free for non-commercial use. Despite the\ninconvenience of licensing, Liftover offers some very convenient\nfeatures: - it is a stand-alone command-line tool - it can convert\nassemblies of any species, even between species - it runs locally and\ndoes not require network access\n\nHow to install\n--------------\n\nThe easiest way is to install through pip:\n\n::\n\n    pip install segment_liftover\n    segment_liftover --help\n\nAnother option is to copy ``segment_liftover/segmentLiftover.py`` and\n``segment_liftover/chains/*`` from\n`github <https://github.com/baudisgroup/segment-liftover>`__.\nDependencies need to be installed manually.\n\n::\n\n    python3 segmentLiftover.py --help\n\n**Important: Add the UCSC ``liftOver`` program to your working\ndirectory, or use -l to specify its location.**\n\nHow to use\n----------\n\nSee the\n`maunal <https://github.com/baudisgroup/segment-liftover/blob/master/manual.md>`__\nfor details.\n\nQuick start\n~~~~~~~~~~~\n\nTypical usage:\n\n::\n\n    >segment_liftover -i /Volumes/data/hg18/ -o /Volumes/data/hg19/ -c hg18ToHg19 -si segments.tsv -so seg.tsv\n\nGeneral Usage\n~~~~~~~~~~~~~\n\n::\n\n    Usage: segment_liftover [OPTIONS]\n\n    Options:\n      -i, --input_dir TEXT            The directory to start processing.\n      -o, --output_dir TEXT           The directory to write new files.\n      -c, --chain_file TEXT           Specify the chain file name.\n      -si, --segment_input_file TEXT  Specify the segment input file name.\n      -so, --segment_output_file TEXT\n                                      Specify the segment output file name.\n      -pi, --probe_input_file TEXT    Specify the probe input file name.\n      -po, --probe_output_file TEXT   Specify the probe output file name.\n      -l, --liftover TEXT             Specify the location of the UCSC liftover\n                                      program.\n      -t, --test_mode INTEGER         Only process a limited number of files.\n      -f, --file_indexing             Only generate the index file.\n      -x, --index_file FILENAME       Specify an index file containing file paths.\n      -m, --mapping_file FILENAME     Specify a pre-defined file of position\n                                      mappings.\n      --step_size INTEGER             The step size of approximate conversion (in\n                                      bases, default:400).\n      --range INTEGER                 The searching range of approximate conversion\n                                      (in kilo bases, default:10).\n      --no_approximate_conversion     Do not perform approximate conversion.\n      --new_segment_header TEXT...    Specify 4 new column names for new segment\n                                      files.\n      --new_probe_header TEXT...      Specify 3 new column names for new probe\n                                      files.\n      --resume TEXT...                Specify a index file and a progress file to\n                                      resume an interrupted job.\n      --clean                         Clean up log files.\n      --help                          Show this message and exit.\n\nRequired options are:\n\n-  ``-i, --input_dir TEXT``\n-  ``-o, --output_dir TEXT``\n-  ``-c, --chain_file TEXT``\n-  either of both of ``-si, --segment_input_file TEXT`` and\n   ``-pi, --probe_input_file TEXT``\n\nFile structure\n~~~~~~~~~~~~~~\n\nsource directory:\n\n::\n\n    ./segmentLiftover.py    The python script.\n    ./chains/               Home of the chain files.\n\nworking directory:\n\n::\n\n    ./liftOver             The UCSC LiftOver program.\n    ./logs/                Will show up after running the script once. Home of all log files.\n    ./tmp/                 Will show up during processing.\n\nStart with your input file\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*segment_liftover* is designed to process a large number of files in one\nrun.\n\n-  It requires ***an input directory***, and will traverse through all\n   sub-directories to index all files matching ***the input file\n   name***.\n-  It requires ***an output directory***, and will keep the original\n   directory structure in the output directory.\n-  Segment and probe files are treated differently - therefore, you need\n   to use different options to pass the input file name.\n-  You can also create a list of input files to start. Please see\n   `manual <https://github.com/baudisgroup/segment-liftover/blob/master/manual.md>`__\n   for more details.\n-  Regular expressions are supported for input names.\n\nInput file format\n~~~~~~~~~~~~~~~~~\n\nUse ``-si filename`` for segment file names. All files should:\n\n-  be **tab separated**, without quoted values\n-  have at least **4** columns as id, chromosome, start and end (names\n   do not matter, order does).\n\nExtra columns will be copied over.\n\nAn example:\n\n::\n\n    id  chro    start   stop    value_1 value_2\n    GSM378022   1   775852  143752373   0.025   9992\n    GSM378022   1   143782024   214220966   0.1607  6381\n    GSM378022   2   88585000    144628991   0.0131  4256\n    GSM378022   2   144635510   146290468   0.1432  146\n    GSM378022   3   48603   8994748 0.0544  1469\n\nUse ``-pi filename`` for probe file names. All files should:\n\n-  be **tab separated**, without quoted values\n-  have at least **3** columns as id, chromosome and position (names do\n   not matter, order does).\n\nExtra columns will be copied over.\n\nAn example:\n\n::\n\n    PROBEID CHRO    BASEPOS VALUE\n    ID_2_1  1   51599   -0.6846\n    ID_3_2  1   51672   -0.2546\n    ID_4_3  1   51687   0.0833\n    ID_5_4  1   52016   -0.5201\n    ID_6_5  1   52784   0.1997\n    ID_7_6  1   52801   -0.3800\n    ID_8_7  1   62568   -0.2435\n    ID_9_8  1   62640   0.3516\n    ID_10_9 1   72034   -0.5687\n\nChain files\n~~~~~~~~~~~\n\nA chain file is required by the *UCSC LiftOver* program to convert from\none assembly to another and therefore also **required** by\n*segment_liftover*.\n\nCommon chain files for human genome editions (from UCSC) are provider as\npart of *segment_liftover*. Please check the\n`manual <https://github.com/baudisgroup/segment-liftover/blob/master/manual.md>`__\nfor details.\n\nOther chain files can be accessed `at the UCSC dowload\narea <http://hgdownload.cse.ucsc.edu/downloads.html>`__\n\nOutput files\n~~~~~~~~~~~~\n\n-  The file structure of the input directory will be kept in output\n   directory.\n-  Output files can be renamed with ``-so, --segment_output_file TEXT``\n   or ``-po, --probe_output_file TEXT``\n\nUnderstanding results\n~~~~~~~~~~~~~~~~~~~~~\n\nFive different numbers will be reported after the execution. For\nexample:\n\n::\n\n    Total segments:                 a count of all segments in all files.\n    - directly converted:           conversions by UCSC liftOver.\n    - approximately converted:      successful approximate conversions.\n    - converted but rejected:       although converted, but failed the quality check.\n    - unconvertible:                cannot be converted at all.\n\nQuality check\n~~~~~~~~~~~~~\n\nThe usefulness of a converted probe or segment will be checked by a few\ncriteria.\n\nFor a probe:\n\n-  the new chromosome must be the same as the old chromosome.\n\nFor a segment:\n\n-  the new start position and new end position are on the same\n   chromosome,\n-  0.5 < length(new_segment)/length(old_segment) < 2.\n\nLog files\n~~~~~~~~~\n\n::\n\n    ./logs/fileList.log    The indexing file from traversing input_dir.\n    ./logs/general.log    The main log file, keeps records for all the works done and errors encountered.\n    ./logs/progress.log    A list of successfully processed files.\n    ./logs/unconverted.log    A list of all positions that could not be lifted and re-converted.\n    ./logs/approximate_conversion.log    A list of all the approximately converted positions (when LiftOver fails).\n\nIf *segment_liftover* does not work as expected, you can check\n**general.log** for execution details.\n\nIf you are interested in unique re-converted or unconverted results, you\ncan check **approximate_conversion.log**.\n\nIf you want to get information of rejection or conversion result of a\nspecific file, you can check **unconverted.log**.\n\nOverwriting behaviour\n~~~~~~~~~~~~~~~~~~~~~\n\nThe script **WILL overwrite ``output_dir``**\n\nPython dependencies\n~~~~~~~~~~~~~~~~~~~\n\nThe script is developed in python3.6\n\nPackages: click6.7, pandas0.20.1\n\nAdvanced use\n------------\n\nStart from a file\n~~~~~~~~~~~~~~~~~\n\nWith the **index_file** option, you can provide a file containing files\nyou want to process. One file name per line, using the file\u2019s full path.\n\nAfter each run, a **fileList.log** file can be found in **./logs/**,\nwhich can be used as quick start for next time. You can also generate a\n*file list* using the following command:\n\n::\n\n    >segment_liftover -i /Volumes/data/hg18/ -o /Volumes/data/hg19/ -c hg18ToHg19 -si segments.tsv -x ./myfilelist.txt\n\nReuse approximate conversion results\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWith the **\u2013mapping_file** option, you can reuse a previously generated\nlog file to speed up processing.\n\nAfter each run, a **approximate_conversion.log** file can be found in\n**./logs/**.\n\nSpecify parameters of approximate conversion\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWith ``--step_size`` and ``--range``, you can control the resolution and\nscope of searching for the closest liftable position when a position can\nnot be lifted. The default values are *500* (bases) and *10*\n(kilo-bases).\n\n.. raw:: html\n\n   <!--### Choose good parameters\n   -->\n\nResume from interruption\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf the execution of the script is interrupted, it can be resumed using\n**\u2013resume** as following:\n\n::\n\n    >segment_liftover --resume ./logs/fileList.log ./logs/progress.log -i /Volumes/data/hg18/ -o /Volumes/data/hg19/ -c hg18ToHg19 -si segments.tsv \n\nParallel processing\n~~~~~~~~~~~~~~~~~~~\n\n*segment_liftover* does not support multiprocessing directly, but very\ntasks can be divided into smaller tasks and run parallel with ease.\n\n-  First, generate a **fileList** as instructed in *Start from a file*\n   section.\n-  Then (optional), shuffle the lines in the **fileList**.\n-  Next, split **fileList** into smaller files and put them in separated\n   folders.\n-  Finally, run *lift_over* with option **\u2013index_file** in each folder.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/baudisgroup/segment-liftover",
    "keywords": "segment probe genome coordinate liftover",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "segment-liftover",
    "platform": "",
    "project_url": "https://pypi.org/project/segment-liftover/",
    "release_url": "https://pypi.org/project/segment-liftover/0.946/",
    "requires_dist": [],
    "requires_python": ">=3.6",
    "summary": "Convert segments between genomic assemblies in whole.",
    "version": "0.946"
  },
  "releases": {
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5ddce3eecf17787458b1dd8c84c2d854",
          "sha256": "728f47cc3230cc43e042d9c4d12023eb5270da2d18529482b313f02638859e5d"
        },
        "downloads": -1,
        "filename": "segment_liftover-0.9-py3.6.egg",
        "has_sig": false,
        "md5_digest": "5ddce3eecf17787458b1dd8c84c2d854",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "size": 2207513,
        "upload_time": "2017-12-19T15:06:16",
        "url": "https://files.pythonhosted.org/packages/c1/96/e88e0b970318671cc0e3279780c2a45d10a382f721b253fa564e11c945c7/segment_liftover-0.9-py3.6.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a60229fb1fedd03787813da82d8783bf",
          "sha256": "2a86ada8dbb997bccc6903bee67433a716a02ac41a74c89937a56dd0348755de"
        },
        "downloads": -1,
        "filename": "segment_liftover-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "a60229fb1fedd03787813da82d8783bf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2205747,
        "upload_time": "2017-12-19T14:55:59",
        "url": "https://files.pythonhosted.org/packages/27/c4/a21dad39618b34e6d8c70e01856fb446dc386942fb604fb60b60dfa5f167/segment_liftover-0.9.tar.gz"
      }
    ],
    "0.91": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9a732b5eb265f0fa93bc5bf409be0910",
          "sha256": "4f44e3c9aeaeaf2ffe0aaff9c107149e98a45da1509c3491442cf6cfc9d82cf3"
        },
        "downloads": -1,
        "filename": "segment_liftover-0.91.tar.gz",
        "has_sig": false,
        "md5_digest": "9a732b5eb265f0fa93bc5bf409be0910",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2205771,
        "upload_time": "2017-12-19T15:15:20",
        "url": "https://files.pythonhosted.org/packages/df/33/c39a074e3f2700265fe600c8156cc7d5592988a9195cffcace6039cea7b5/segment_liftover-0.91.tar.gz"
      }
    ],
    "0.92": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d3e720b76005350076834ff5cf8a91ec",
          "sha256": "14ea8d28d9bcccad72293c497622452a780bda3031e8c869687a5240e12f5d0c"
        },
        "downloads": -1,
        "filename": "segment_liftover-0.92.tar.gz",
        "has_sig": false,
        "md5_digest": "d3e720b76005350076834ff5cf8a91ec",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2206019,
        "upload_time": "2017-12-19T15:53:24",
        "url": "https://files.pythonhosted.org/packages/e0/a6/5405650cdf8a3974f7d886faa89de017d4d20ca57e9338b93ba8f1e4b9f4/segment_liftover-0.92.tar.gz"
      }
    ],
    "0.93": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9decf252c85ae362f50b55d0dc4d4751",
          "sha256": "0b38ef2b29bc459c351318d2b76b125e8ca7680144311a611b24a2c23dac30f8"
        },
        "downloads": -1,
        "filename": "segment_liftover-0.93.tar.gz",
        "has_sig": false,
        "md5_digest": "9decf252c85ae362f50b55d0dc4d4751",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2206032,
        "upload_time": "2017-12-20T12:40:20",
        "url": "https://files.pythonhosted.org/packages/df/22/63540a0befcb1083211d6c07189a3a9747fdc45dbcb84ee81e004e4edb51/segment_liftover-0.93.tar.gz"
      }
    ],
    "0.94": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a5324a3367fa1880e1e93f56f12decd9",
          "sha256": "134c633bad0a2053d3e4bf437e008b16dcfcc00b6c8d173bfc3189c549dbb3fb"
        },
        "downloads": -1,
        "filename": "segment_liftover-0.94.tar.gz",
        "has_sig": false,
        "md5_digest": "a5324a3367fa1880e1e93f56f12decd9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2206147,
        "upload_time": "2018-01-19T08:28:06",
        "url": "https://files.pythonhosted.org/packages/c2/4f/f82a8d204b6e0c39e91837569df49b119c09511508d7c0334ad82c1bf273/segment_liftover-0.94.tar.gz"
      }
    ],
    "0.941": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3bc7d365741164bd435bf88f4d1b55c5",
          "sha256": "5efe100bc263e89e5898d50225bd9c67704e53f2a56e2bfb128f15de2513531d"
        },
        "downloads": -1,
        "filename": "segment_liftover-0.941.tar.gz",
        "has_sig": false,
        "md5_digest": "3bc7d365741164bd435bf88f4d1b55c5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2206163,
        "upload_time": "2018-01-19T08:45:40",
        "url": "https://files.pythonhosted.org/packages/2c/47/fb1db03d8fc45871dbae3ba3e0625d139aa99fc36bef5fc060ab07908ea2/segment_liftover-0.941.tar.gz"
      }
    ],
    "0.942": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e37ad1adce7d58f1ce3a4d93dfe3eaa7",
          "sha256": "66b4cfeeea251f6ca17c311f7f2cb8c02e24ec7d5c4163570317cd44a0572323"
        },
        "downloads": -1,
        "filename": "segment_liftover-0.942.tar.gz",
        "has_sig": false,
        "md5_digest": "e37ad1adce7d58f1ce3a4d93dfe3eaa7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2206178,
        "upload_time": "2018-01-19T09:41:36",
        "url": "https://files.pythonhosted.org/packages/cb/cc/342f43658542b61b9aaaad88ce141f73ea48374dcc45b25300663874b79f/segment_liftover-0.942.tar.gz"
      }
    ],
    "0.943": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fb34713ac4e786fc6f9f5896028fdc69",
          "sha256": "9caa8d2418011b146fc52e8757e2ebcb3358f1210f5cf9e2d121366ce602e751"
        },
        "downloads": -1,
        "filename": "segment_liftover-0.943.tar.gz",
        "has_sig": false,
        "md5_digest": "fb34713ac4e786fc6f9f5896028fdc69",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2206713,
        "upload_time": "2018-01-31T11:22:53",
        "url": "https://files.pythonhosted.org/packages/88/11/bbcbe5959283acf464342b43f376ea3df7a1a7296dc0c3fb575d4b8218f2/segment_liftover-0.943.tar.gz"
      }
    ],
    "0.944": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3c338bfed6b6a7deb6dea362ff9e3486",
          "sha256": "56d48609e8a570e455114f7999b0bf07311880e83fa0d196d1e4a442d64dd1d0"
        },
        "downloads": -1,
        "filename": "segment_liftover-0.944.tar.gz",
        "has_sig": false,
        "md5_digest": "3c338bfed6b6a7deb6dea362ff9e3486",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2206727,
        "upload_time": "2018-02-01T10:09:36",
        "url": "https://files.pythonhosted.org/packages/cf/a7/5de94f4bc98c146fdac06f1c659f2942ef33f89c4fc24c92ec35e24380b8/segment_liftover-0.944.tar.gz"
      }
    ],
    "0.945": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1bc4f832836f145edc3c7be75a6ef1f1",
          "sha256": "38d11a565f813393d0476fc70804a3e3fc33a5c31247a34f888eb4790a763a18"
        },
        "downloads": -1,
        "filename": "segment_liftover-0.945.tar.gz",
        "has_sig": false,
        "md5_digest": "1bc4f832836f145edc3c7be75a6ef1f1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2208425,
        "upload_time": "2018-02-02T12:14:23",
        "url": "https://files.pythonhosted.org/packages/8d/10/ce264210a6f8540383f73081383be1c9c24dcfd2f8ec00874d772a72c637/segment_liftover-0.945.tar.gz"
      }
    ],
    "0.946": [
      {
        "comment_text": "",
        "digests": {
          "md5": "873bcb41e58039b70681d0cd00c642ea",
          "sha256": "fa2c5578b5c20529723098ef5253d08e7a356f194bfd7ca1413452279b46c87f"
        },
        "downloads": -1,
        "filename": "segment_liftover-0.946.tar.gz",
        "has_sig": false,
        "md5_digest": "873bcb41e58039b70681d0cd00c642ea",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2208599,
        "upload_time": "2018-02-08T16:20:04",
        "url": "https://files.pythonhosted.org/packages/96/c4/55e7d32b13acc65355bf4654b3f26328c35bb04e90c906f945f6f5e1314c/segment_liftover-0.946.tar.gz"
      }
    ],
    "0.94a0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4137e47bbd6610ada9173d341be7e9bc",
          "sha256": "1891f74ebc1bf6ea2c70f2bca1818eaf53d98acc227379a2f1f473a921bffd8f"
        },
        "downloads": -1,
        "filename": "segment_liftover-0.94a0.tar.gz",
        "has_sig": false,
        "md5_digest": "4137e47bbd6610ada9173d341be7e9bc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2206173,
        "upload_time": "2018-01-19T08:39:32",
        "url": "https://files.pythonhosted.org/packages/be/be/d9428f0c7d0462866927475c232326eaa34c9eee697467d601a8d208e2d7/segment_liftover-0.94a0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "873bcb41e58039b70681d0cd00c642ea",
        "sha256": "fa2c5578b5c20529723098ef5253d08e7a356f194bfd7ca1413452279b46c87f"
      },
      "downloads": -1,
      "filename": "segment_liftover-0.946.tar.gz",
      "has_sig": false,
      "md5_digest": "873bcb41e58039b70681d0cd00c642ea",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 2208599,
      "upload_time": "2018-02-08T16:20:04",
      "url": "https://files.pythonhosted.org/packages/96/c4/55e7d32b13acc65355bf4654b3f26328c35bb04e90c906f945f6f5e1314c/segment_liftover-0.946.tar.gz"
    }
  ]
}