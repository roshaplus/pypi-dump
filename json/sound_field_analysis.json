{
  "info": {
    "author": "QU Lab / Christoph Hohnerlein",
    "author_email": "christoph.hohnerlein@qu.tu-berlin.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3.5",
      "Topic :: Multimedia :: Sound/Audio"
    ],
    "description": "Sound Field Analysis toolbox for Python\n=======================================\n\nThe *sound\\_field\\_analysis* toolbox (short: *sfa*) is a Python port of\nthe `Sound Field Analysis Toolbox (SOFiA) toolbox`_, originally by\nBenjamin Bernsch\u00fctz\\ `[1]`_. The main goal of the *sfa* toolbox is to\nanalyze, visualize and process sound field data recorded by spherical\nmicrophone arrays. Furthermore, various types of test-data may be\ngenerated to evaluate the implemented functions.\n\nThe package is pure python and PEP8 compliant (except line-length).\nPlease expect things to be slow for now and for the API to break, as the\ndevelopment is still very much ongoing.\n\nRequirements\n------------\n\nWe use Python 3.5 for development. Chances are that earlier version will\nwork too but this is currently untested.\n\nThe following external libraries are required:\n\n-  `NumPy`_\n-  `SciPy`_\n-  `Plotly`_ (for plotting)\n\nInstallation\n------------\nYou can simply install *sfa* through pip (``pip install sound_field_analysis``).\n\nWe highly recommend the `Anaconda`_ python environment. Once installed,\nyou can use the following steps to create a new environment with the\n*sfa* toolbox.\n\n#. Create a new environment:\n   ``conda create --name sfa numpy scipy plotly``\n#. Activate this environment:\n   ``source activate sfa``\n#. Install from pypi:\n   ``pip install sound_field_analysis``\n\nSoon, you may also install directly from the `conda-forge`_ channel using\n``conda install -c conda-forge sound_field_analysis``.\n\nDocumentation\n-------------\n\nPlease find the full documentation over at\nhttps://qulab.github.io/sound_field_analysis-py/!\n\nExamples\n--------\n\nThe following examples are available as Jupyter notebooks, either\nstatically on `github`_ or interactively on `nbviewer`_. You can of\ncourse also simply download the examples and run them locally!\n\nAE1: Ideal plane wave\n~~~~~~~~~~~~~~~~~~~~~\n\nIdeal unity plane wave simulation and 3D plot.\n\n`View interactively on nbviewer <http://nbviewer.jupyter.org/github/QULab/sound_field_analysis-py/blob/master/examples/AE1_IdealPlaneWave.ipynb>`__\n\n|AE1_img|_\n\n.. |AE1_img| image:: examples/img/AE1_shape.png?raw=true\n.. _AE1_img: http://nbviewer.jupyter.org/github/QULab/sound_field_analysis-py/blob/master/examples/AE1_IdealPlaneWave.ipynb\n\n\nAE3: Measured plane wave\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nA measured plane wave from AZ=180\u00b0, EL=90\u00b0 in the anechoic chamber using\na cardioid mic.\n\n`View interactively on nbviewer <http://nbviewer.jupyter.org/github/QULab/sound_field_analysis-py/blob/master/examples/AE3_MeasuredWave.ipynb>`__\n\n|AE3_img|_\n\n.. |AE3_img| image:: examples/img/AE3_shape.png?raw=true\n.. _AE3_img: http://nbviewer.jupyter.org/github/QULab/sound_field_analysis-py/blob/master/examples/AE3_MeasuredWave.ipynb\n\nAE6: Impulse response of ideal plane wave\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nImpulse Response reconstruction on a simulated ideal unity plane wave\n\n`View interactively on nbviewer <http://nbviewer.jupyter.org/github/QULab/sound_field_analysis-py/blob/master/examples/AE6_IdealPlaneWave_ImpResp.ipynb>`__\n\n|AE6_img|_\n\n.. |AE6_img| image:: examples/img/AE6_IdealPlaneWave_ImpResp.png?raw=true\n.. _AE6_img: http://nbviewer.jupyter.org/github/QULab/sound_field_analysis-py/blob/master/examples/AE6_IdealPlaneWave_ImpResp.ipynb\n\n\n\nAE7: Impulse response of sampled plane wave\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nImpulse response reconstruction on a simulated sampled unity plane wave\n\n`View interactively on nbviewer <http://nbviewer.jupyter.org/github/QULab/sound_field_analysis-py/blob/master/examples/AE7_SampledPlaneWave_ImpResp.ipynb>`__\n\n|AE7_img|_\n\n.. |AE7_img| image:: examples/img/AE7_SampledPlaneWave_ImpResp.png?raw=true\n.. _AE7_img: http://nbviewer.jupyter.org/github/QULab/sound_field_analysis-py/blob/master/examples/AE7_SampledPlaneWave_ImpResp.ipynb\n\nReferences\n^^^^^^^^^^\nThe *sound_field_analysis* toolbox is based on the Matlab/C++ `Sound Field Analysis Toolbox (SOFiA) toolbox`_ by Benjamin Bernsch\u00fctz. For more information you may refer to the original publication:\n\n[1] `Bernsch\u00fctz, B., P\u00f6rschmann, C., Spors, S., and Weinzierl, S. (2011). SOFiA Sound Field Analysis Toolbox. Proceedings of the ICSA International Conference on Spatial Audio <http://spatialaudio.net/sofia-sound-field-analysis-toolbox-2/>`_\n\nThe Lebedev grid generation was adapted from an implementation by `Richard P. Muller <https://github.com/gabrielelanaro/pyquante/blob/master/Data/lebedev_write.py>`_.\n\n\n.. _Sound Field Analysis Toolbox (SOFiA) toolbox: http://audiogroup.web.th-koeln.de/SOFiA_wiki/WELCOME.html\n.. _[1]: #references\n.. _NumPy: http://www.numpy.org\n.. _SciPy: http://www.scipy.org\n.. _Plotly: https://plot.ly/python/\n.. _Anaconda: https://www.continuum.io/downloads\n.. _conda-forge: https://conda-forge.github.io\n.. _github: examples/\n.. _nbviewer: http://nbviewer.jupyter.org/github/QULab/sound_field_analysis-py/tree/master/examples/\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://qulab.github.io/sound_field_analysis-py/",
    "keywords": "sound field analysis spherical microphone array",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sound_field_analysis",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/sound_field_analysis/",
    "release_url": "https://pypi.org/project/sound_field_analysis/0.3/",
    "requires_python": "",
    "summary": "Analyze, visualize and process sound field data recorded by spherical microphone arrays.",
    "version": "0.3"
  },
  "releases": {
    "0.1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4e744c193ce560bc7ccfbe38cf55294f",
          "sha256": "6aa0b31a0ae4f88121cdc7225b61f0a4f0f1da75a5d87d74dd62f92d4b586517"
        },
        "downloads": 336,
        "filename": "sound_field_analysis-0.1.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e744c193ce560bc7ccfbe38cf55294f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 24637,
        "upload_time": "2016-08-09T13:12:28",
        "url": "https://files.pythonhosted.org/packages/8a/8d/78bd7f764c78858c8192b636a41992f8d2fd16d943464c266bf7359cd1a9/sound_field_analysis-0.1.dev0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c4e06256261835b893ee9da1d108e4f9",
          "sha256": "b159c27ea0ac15962bb596172827eddacf492298b78580b21e9587c1ea2436ac"
        },
        "downloads": 97,
        "filename": "sound_field_analysis-0.1.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "c4e06256261835b893ee9da1d108e4f9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22036,
        "upload_time": "2016-08-09T13:12:31",
        "url": "https://files.pythonhosted.org/packages/a5/f8/aa5ad92e34ff5a7e476b899a2c4eaff25dce26ead54d2657c31ccdd58e27/sound_field_analysis-0.1.dev0.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e333853d853b7dfce837418fcadf60df",
          "sha256": "af75e3aaf28abca3ddad0d4889038d87e0efcf041845ca1d3604f401db3766cc"
        },
        "downloads": 40,
        "filename": "sound_field_analysis-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e333853d853b7dfce837418fcadf60df",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 25405,
        "upload_time": "2016-11-01T11:45:10",
        "url": "https://files.pythonhosted.org/packages/a3/97/ae119f03a353aca3de884c5cfee9340af38a24e7e80ee54af1186709adcb/sound_field_analysis-0.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0fb0c92ae98f7eb4832855d62c8fa5c1",
          "sha256": "f8d52d3b67fff6d9a92508552e698dadb0100d202f2d6805356007a9dcdaae4f"
        },
        "downloads": 42,
        "filename": "sound_field_analysis-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0fb0c92ae98f7eb4832855d62c8fa5c1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22480,
        "upload_time": "2016-11-01T11:44:54",
        "url": "https://files.pythonhosted.org/packages/fd/c1/c3ba5d907a89e02798449b76e7d8f4f949dbdc5b2f9a473c5ad06c72376f/sound_field_analysis-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "615d05e826a97b2c9e3f8c1717ba4461",
          "sha256": "537b2a8f8733fee7b2b2f273600c62d95b5156d98c6ede656a09d218f3ab952b"
        },
        "downloads": 11,
        "filename": "sound_field_analysis-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "615d05e826a97b2c9e3f8c1717ba4461",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 28167,
        "upload_time": "2017-02-20T18:24:44",
        "url": "https://files.pythonhosted.org/packages/ee/07/ab9fde133c248a05e435c97a72260a7314cb5167ec37bc6b3e54b4d217e3/sound_field_analysis-0.3-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "fa2e5ff7c4d02ae30eccabdec2a19c4f",
          "sha256": "7a5887e94e268c2bb63b141b811f68c2a94d11692a6817e310c92d919500fe07"
        },
        "downloads": 14,
        "filename": "sound_field_analysis-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fa2e5ff7c4d02ae30eccabdec2a19c4f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29957,
        "upload_time": "2017-02-20T18:24:46",
        "url": "https://files.pythonhosted.org/packages/05/b0/c69a8b8eaa470f77c1cad490a58677acb47bc5e73ecfbc3d45092974a5dc/sound_field_analysis-0.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "615d05e826a97b2c9e3f8c1717ba4461",
        "sha256": "537b2a8f8733fee7b2b2f273600c62d95b5156d98c6ede656a09d218f3ab952b"
      },
      "downloads": 11,
      "filename": "sound_field_analysis-0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "615d05e826a97b2c9e3f8c1717ba4461",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 28167,
      "upload_time": "2017-02-20T18:24:44",
      "url": "https://files.pythonhosted.org/packages/ee/07/ab9fde133c248a05e435c97a72260a7314cb5167ec37bc6b3e54b4d217e3/sound_field_analysis-0.3-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "fa2e5ff7c4d02ae30eccabdec2a19c4f",
        "sha256": "7a5887e94e268c2bb63b141b811f68c2a94d11692a6817e310c92d919500fe07"
      },
      "downloads": 14,
      "filename": "sound_field_analysis-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "fa2e5ff7c4d02ae30eccabdec2a19c4f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 29957,
      "upload_time": "2017-02-20T18:24:46",
      "url": "https://files.pythonhosted.org/packages/05/b0/c69a8b8eaa470f77c1cad490a58677acb47bc5e73ecfbc3d45092974a5dc/sound_field_analysis-0.3.tar.gz"
    }
  ]
}