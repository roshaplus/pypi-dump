{
  "info": {
    "author": "Steve Milner",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Flask",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Server",
      "Topic :: Security"
    ],
    "description": "victims-web [![Build Status](https://travis-ci.org/victims/victims-web.png)](https://travis-ci.org/victims/victims-web)\n===========\nThe victims web application.\n## Report an Issue\nIf you find an issue with the service at http://victi.ms or the code, either\n* Create a new issue at https://github.com/victims/victims-web/issues\n* Email vicitms@librelist.com\n\n## Contributing\nIf you have a patch or a feature that you want considered to be added to the project, feel free to send us a pull request.\nMake sure you run pep8 before committing.\n```sh\npep8 --repeat .\n```\n\n## Development\nThis is short guide on how to work on this code base using the provided `docker-compose` configuration and development `Dockerfile`. *Note* that the `Dockerfile` provided in the base directory is not to be used in production and is only for development use.\n\n### Docker builds\n#### Building the image\nThe image can be built to provide a working environment with all dependencies installed.\n```sh\ndocker build -t local/victims-web .\n```\n#### Using the docker image\nThe docker image built as shown above will not contain the application source code but it expects the working directory to be mounted at `/opt/source`.\n```sh\ndocker run --rm -it -v `pwd`:/opt/source local/victims-web\n```\n\n### Docker Compose\nThe `docker-compose.yml` file defines services required to run a working copy of the server on your local machine. Starting the server via `docker-compose` will;\n1. start a supported version of MongoDB instance\n2. seed the database with test data\n3. start the web server using `python -m victims.web`\n4. bind to port 5000 on your localhost\n\n#### Starting a server\nThis will start an instance of the server as described above. Note that this is started with both `DEBUG` and `TESTING` enabled. This will also ensure that your code is auto re-loaded if changed.\n```sh\ndocker-compose up server\n```\n\n#### Executing tests against your working copy\nIn order to execute tests against your working copy of code, you may use the `test` service as described in the `docker-compose.yml` file. This will start up dependant services, load seed data and then execute application tests and `pep8`.\n```sh\ndocker-compose up test\n```\n\n## Usage\n### Secured API Access\nSubmission endpoints like ```/service/submit/archive/java``` are secured by an implementation similar to what is used by AWS. The authentication token is expected in a HTTP header configured via the ```VICTIMS_API_HEADER``` configuration (default: ```X-Victims-Api```). If this is not present or if validation/authentication fails, then it falls back to *BASIC AUTH*.\n\nAn example using curl is as follows:\n```sh\n$ curl -v -X PUT -H \"X-Victims-Api: $APIKEY:$SIGNATURE\" -H \"Date: Thu, 22 Aug 2013 15:20:37 GMT\" -F archive=@$ARCHIVE https://$VICTIMS_SERVER/service/submit/archive/java?version=VID\\&groupId=GID\\&artifactId=AID\\&cves=CVE-2013-0000,CVE-2013-0001\n```\n\nThis can also be done using *BASIC-AUTH* as follows:\n```sh\ncurl -v -u $USERNAME:$PASSWORD -X PUT -F archive=@$ARCHIVE_FILE https://$VICTIMS_SERVER/service/submit/archive/java?version=VID\\&groupId=GID\\&artifactId=AID\\&cves=CVE-2013-0000,CVE-2013-0001\n```\n\n#### API Key and Client Secret Key\nEach account on victi.ms is allocated an API Key and Secret key by default. This can be retrieved by visiting ```https://victi.ms/account```. These can be regenerated using the form at ```https://victi.ms/account_edit```.\n\n#### Signature\nThe signature is generated using ```HTTP Method```, ```Path```, ```Date``` and the *MD5 hexdigest*.\n\n_Notes:_\n* The ```Path``` includes the query string parameters, e.g: ```/service/submit/archive/java?cves=CVE-0000-0000```\n* The MD5 checksum includes the data (if available) of all files that are being submitted. The checksums are sorted in ascending order before adding to the string.\n* The date is expected to be in ```GMT```. Eg: ```Thu, 22 Aug 2013 15:20:37 GMT```.\n\nThe following is a reference implementation in python:\n```py\nfrom hmac import HMAC\n\ndef generate_signature(secret, method, path, date, md5sums):\n    md5sums.sort()\n    ordered = [method, path, date] + md5sums\n    string = ''\n\n    for content in ordered:\n        if content is None:\n            raise ValueError('Required header not found')\n        string += str(content)\n\n    return HMAC(\n        key=bytes(secret),\n        msg=string.lower(),\n        digestmod=sha512\n    ).hexdigest().upper()\n```",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://victi.ms",
    "keywords": "",
    "license": "AGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "victims-web",
    "platform": "",
    "project_url": "https://pypi.org/project/victims-web/",
    "release_url": "https://pypi.org/project/victims-web/2.1.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Victims Web Service",
    "version": "2.1.1"
  },
  "releases": {
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bc8ee79c7de5a29df173dce6773de347",
          "sha256": "49febfcda7a5c5270bafe3d70cc9f9d5552fa7c19741e91bce23dc3111ebf261"
        },
        "downloads": 0,
        "filename": "victims-web-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bc8ee79c7de5a29df173dce6773de347",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 34714,
        "upload_time": "2017-07-31T15:30:40",
        "url": "https://files.pythonhosted.org/packages/f2/e4/26ef643f4bc6b9ae1001e42c704b1fe6c40d2eda942b6e3183f37fe62759/victims-web-2.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "bc8ee79c7de5a29df173dce6773de347",
        "sha256": "49febfcda7a5c5270bafe3d70cc9f9d5552fa7c19741e91bce23dc3111ebf261"
      },
      "downloads": 0,
      "filename": "victims-web-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bc8ee79c7de5a29df173dce6773de347",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 34714,
      "upload_time": "2017-07-31T15:30:40",
      "url": "https://files.pythonhosted.org/packages/f2/e4/26ef643f4bc6b9ae1001e42c704b1fe6c40d2eda942b6e3183f37fe62759/victims-web-2.1.1.tar.gz"
    }
  ]
}