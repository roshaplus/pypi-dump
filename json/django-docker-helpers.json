{
  "info": {
    "author": "night-crawler",
    "author_email": "lilo.panic@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "Installation\n------------\n\n.. code:: bash\n\n    pip install -e git+https://github.com/night-crawler/django-docker-helpers.git#egg=django-docker-helpers\n        # OR\n    pip install django-docker-helpers\n\nUtils\n~~~~~\n\n-  ``load_yaml_config(project_name: str, filename: str)`` - loads config\n   from specified YAML file. Returns dict bundle from YAML and\n   ``configure(key, default, coerce)`` function to get config vars from\n   YAML or ENV\n-  ``env_bool_flag(flag_name, strict)`` - check if ENV option specified,\n   is it set to true, 1, 0, etc.\n-  ``run_env_once`` ensure django management don't call\n   ``twice <https://stackoverflow.com/questions/16546652/why-does-django-run-everything-twice>``\\ \\_\n-  ``is_dockerized`` - reads ``DOCKERIZED`` flag from env\n-  ``is_production`` - reads ``PRODUCTION`` flag from env\n\nHelper functions\n~~~~~~~~~~~~~~~~\n\n-  ``ensure_databases_alive(max_retries=100)`` - tries to execute\n   ``SELECT 1`` for every specified database alias in ``DATABASES``\n   until success or max\\_retries reached\n-  ``ensure_caches_alive(max_retries=100)`` - tries to execute\n   ``SELECT 1`` for every specified cache alias in ``CACHES`` until\n   success or max\\_retries reached\n-  ``migrate`` - executes ``./manage.py migrate``\n-  ``modeltranslation_sync_translation_fields`` - run\n   ``sync_translation_fields`` if ``modeltranslation`` is present\n-  ``collect_static`` - alias for\n   ``./manage.py collectstatic -c --noinput -v0``\n-  ``create_admin`` - create superuser from\n   ``settings.CONFIG['superuser']`` if user does not exists and user has\n   no usable password\n-  ``run_gunicorn(application: WSGIHandler, gunicorn_module_name: str='gunicorn_prod')``\n   - runs gunicorn\n\nSample config\n~~~~~~~~~~~~~\n\n.. code:: yaml\n\n    debug: true\n        db:\n            engine: django.db.backends.postgresql\n            host: postgres\n            port: 5432\n            database: mydb\n            user: mydb_user\n            password: mydb_password\n            conn_max_age: 60\n\nRead config\n~~~~~~~~~~~\n\n.. code:: python\n\n    import os\n    from django_docker_helpers.utils import load_yaml_config\n\n    CONFIG, configure = load_yaml_config(\n        '',  # prefix\n        os.path.join(\n            BASE_DIR, 'project', 'config',\n            os.environ.get('DJANGO_CONFIG_FILE_NAME', 'without-docker.yml')\n        )\n    )\n\n    DATABASES = {\n        'default': {\n            'ENGINE': configure('db.name', 'django.db.backends.postgresql'),\n            'HOST': configure('db.host', 'localhost'),\n            'PORT': configure('db.port', 5432),\n            'NAME': configure('db.database', 'project_default'),\n            'USER': configure('db.user', 'project_default'),\n            'PASSWORD': configure('db.password', 'project_default'),\n            'CONN_MAX_AGE': configure('db.conn_max_age', 60, coerce_type=int),\n        }\n    }\n\nUsage\n~~~~~\n\n.. code:: python\n\n    #!/usr/bin/env python\n    import os\n    import sys\n\n    from django.core.management import execute_from_command_line\n\n    from django_docker_helpers.db import ensure_databases_alive, ensure_caches_alive, migrate, \\\n        modeltranslation_sync_translation_fields\n    from django_docker_helpers.files import collect_static\n    from django_docker_helpers.management import create_admin, run_gunicorn\n    from msa_mailer.wsgi import application\n\n    PRODUCTION = bool(int(os.environ.get('MSA_MAILER_PRODUCTION', 0) or 0))\n\n    SERVER = bool(int(os.environ.get('MSA_MAILER_SERVER', 0) or 0))\n\n\n    if __name__ == '__main__':\n        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'msa_mailer.settings')\n\n        if PRODUCTION or os.environ.get('MSA_MAILER_FORCE_PRODUCTION'):\n            ensure_databases_alive(100)\n            ensure_caches_alive(100)\n            # skip collectstatic & migrations for worker\n            if SERVER:\n                collect_static()\n                migrate()\n                modeltranslation_sync_translation_fields()\n                create_admin()\n\n        if len(sys.argv) == 2 and sys.argv[1] == 'gunicorn':\n            gunicorn_module_name = 'gunicorn_dev'\n            if PRODUCTION:\n                gunicorn_module_name = 'gunicorn_prod'\n\n            run_gunicorn(application, gunicorn_module_name=gunicorn_module_name)\n        else:\n            execute_from_command_line(sys.argv)\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/night-crawler/django-docker-helpers",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-docker-helpers",
    "platform": "",
    "project_url": "https://pypi.org/project/django-docker-helpers/",
    "release_url": "https://pypi.org/project/django-docker-helpers/0.1.6/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Django Docker helpers",
    "version": "0.1.6"
  },
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7e11f582020d3ceea7086ee9faab8bbe",
          "sha256": "96d141c3b3939ef379859d85b2b87b6d0b6ec7739f2c2c63c408bc8cda00f12e"
        },
        "downloads": -1,
        "filename": "django_docker_helpers-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e11f582020d3ceea7086ee9faab8bbe",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 9416,
        "upload_time": "2017-12-29T14:57:56",
        "url": "https://files.pythonhosted.org/packages/6c/52/5c88b45745209986def2ffbc6b1b81f4248429b1bddcf5125eba5847f131/django_docker_helpers-0.0.10-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2425ecef0dceb470b113657be6193259",
          "sha256": "d1d71eaab62ef9c3494bf4ee969b50adc3a2bb92dba1b286433221bed28842fe"
        },
        "downloads": -1,
        "filename": "django-docker-helpers-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "2425ecef0dceb470b113657be6193259",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5202,
        "upload_time": "2017-12-29T14:57:53",
        "url": "https://files.pythonhosted.org/packages/28/ba/102ad60ced37f8d3879cbeb4292989579434222d69ccaa61e4080c04d46f/django-docker-helpers-0.0.10.tar.gz"
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2b83051921799fa52a8d7e9ad090a0fe",
          "sha256": "637abececb5a48866b1aeb5ff0a995b23caa28a202e00b00a1feed546880a39c"
        },
        "downloads": -1,
        "filename": "django_docker_helpers-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b83051921799fa52a8d7e9ad090a0fe",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 30418,
        "upload_time": "2018-01-24T10:34:17",
        "url": "https://files.pythonhosted.org/packages/a8/ae/b040e4d548527e526a5b2e0c21d2cca3c266c19bc7cd7634662aa3d1d813/django_docker_helpers-0.1.6-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "04c981b853b57af624863d1ae806306e",
          "sha256": "c75f480f0a3fba7380ea8b065441af13e34d35665f4cce778d7f7334c0400e00"
        },
        "downloads": -1,
        "filename": "django-docker-helpers-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "04c981b853b57af624863d1ae806306e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16753,
        "upload_time": "2018-01-24T10:34:15",
        "url": "https://files.pythonhosted.org/packages/e6/82/12d45a1d90efeadf94b24da6a3368852e2a10f5e4b289ac5fa830e219f27/django-docker-helpers-0.1.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2b83051921799fa52a8d7e9ad090a0fe",
        "sha256": "637abececb5a48866b1aeb5ff0a995b23caa28a202e00b00a1feed546880a39c"
      },
      "downloads": -1,
      "filename": "django_docker_helpers-0.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2b83051921799fa52a8d7e9ad090a0fe",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 30418,
      "upload_time": "2018-01-24T10:34:17",
      "url": "https://files.pythonhosted.org/packages/a8/ae/b040e4d548527e526a5b2e0c21d2cca3c266c19bc7cd7634662aa3d1d813/django_docker_helpers-0.1.6-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "04c981b853b57af624863d1ae806306e",
        "sha256": "c75f480f0a3fba7380ea8b065441af13e34d35665f4cce778d7f7334c0400e00"
      },
      "downloads": -1,
      "filename": "django-docker-helpers-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "04c981b853b57af624863d1ae806306e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 16753,
      "upload_time": "2018-01-24T10:34:15",
      "url": "https://files.pythonhosted.org/packages/e6/82/12d45a1d90efeadf94b24da6a3368852e2a10f5e4b289ac5fa830e219f27/django-docker-helpers-0.1.6.tar.gz"
    }
  ]
}