{
  "info": {
    "author": "Florian Finkernagel",
    "author_email": "finkernagel@imt.uni-marburg.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "marburg\\_biobank\n================\n\nIntroduction\n------------\n\nThe marburg\\_biobank python module offers a high level interface to the\ndata sets stored in the [Ovarian Cancer Effusion Biobank and\nDatabase])(https://www.ovara.net/biobank).\n\nThe basic usage is as follows:\n\n.. code:: python\n\n    import marburg_biobank\n    db = marburg_biobank.OvcaBiobank(\"marburg_ovca_revision_5.zip\") #  you need to download that file from your biobank.\n    print(db.list_datasets())\n    df_wide = db.get_wide('transcriptomics/rnaseq')  # to retrieve the data in a one sample per column / one row per measured variable format\n    df_tall = db.get_dataset('transcriptomics/rnaseq') # to retrieve the data in one row per data point format\n\nData formats available\n----------------------\n\nwide\n~~~~\n\nUsing ``db.get_wide(dataset)``:\n\nA pandas DataFrame that looks like this\n\n+------------------------+------------------+-----------------+-------------------------+\n| Index                  | Patient12, TAM   | Patient12, TU   | PatientX, Compartment   |\n+========================+==================+=================+=========================+\n| **VariableA, unitA**   | 23.23            | 112.2           | nan                     |\n+------------------------+------------------+-----------------+-------------------------+\n| **VariableB, unitB**   | 3.23             | 12.2            | 12.7                    |\n+------------------------+------------------+-----------------+-------------------------+\n\nCaveats: If a dataset has only one compartment, the compartment\ninformation is ommited by get\\_wide(), unless\n.get\\_wide(standardized=True) is used. The same applies for the unit in\nthe index. If there is a 'name' column in dataset, it get's added to the\nindex, regardless of the value of standardized.\n\ntall\n~~~~\n\nUsing: ``db.get_dataset(dataset)``):\n\nA pandas DataFrame that looks like this\n\n+-------------+---------+-------------+---------------+---------+-----------------------+\n| variable    | unit    | patient     | compartment   | value   | optional columns...   |\n+=============+=========+=============+===============+=========+=======================+\n| variableA   | unitA   | Patient12   | TAM           | 23.23   |                       |\n+-------------+---------+-------------+---------------+---------+-----------------------+\n| variableA   | unitA   | Patient12   | TU            | 112.2   |                       |\n+-------------+---------+-------------+---------------+---------+-----------------------+\n| variableB   | unitB   | Patient13   | TAM           | 3.23    |                       |\n+-------------+---------+-------------+---------------+---------+-----------------------+\n| variableB   | unitB   | Patient13   | TU            | 12.2    |                       |\n+-------------+---------+-------------+---------------+---------+-----------------------+\n\nThis is the internal storage format.\n\ncompartments\n------------\n\nCompartments are an abstraction on top of 'cells' and 'bio-liquid'.\nExamples are Tumor associated macrophages (TAMs), Tumor cells (TU),\nascites, blood... ``db.get_compartments()`` provides a list\n\nDatasets\n--------\n\nDatasets are organized two levels deep. The first one defines the\n\\*omics being measured (transcriptomics, proteomics, ... or 'clinical'),\nwhile the second levels defines the actual method (RNaseq, FACS,...)\n\nSurvival data is in clinical/survival. Please remember: if using\n`https://pypi.python.org/pypi/lifelines <lifelines>`__, censored and\nevent are negations of each other.\n\nExcluded patients:\n------------------\n\nExclusion can either be on a patient, or a patient+compartment level. In\naddition, there is per dataset exclusion and global exclusion.\n\nExclusion is by default applied to db.get\\_wide(), but not to\ndb.get\\_dataset(), you can change the default by passing\napply\\_exclusion=True\\|False.\n\nExclusion information can be retrieved by\ndb.get\\_excluded\\_patients(dataset), which return a set of patients (or\npatient+compartment tuples), or db.get\\_exclusion\\_reasons(), which\nlists why the exclusion happend.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://www.ovara.net",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "marburg-biobank",
    "platform": "",
    "project_url": "https://pypi.org/project/marburg-biobank/",
    "release_url": "https://pypi.org/project/marburg-biobank/0.103/",
    "requires_dist": [
      "pandas (>0.18)",
      "numpy"
    ],
    "requires_python": "",
    "summary": "Interface code to interact with data from the Ovara.net biobank.",
    "version": "0.103"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "89fe7f28b40d8e0731167f59c9f600e5",
          "sha256": "dac16674df44ab7acf63651a13b203ebbbcea36e880b863ae553822c45af7589"
        },
        "downloads": 0,
        "filename": "marburg_biobank-0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "89fe7f28b40d8e0731167f59c9f600e5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9822,
        "upload_time": "2017-09-12T12:49:27",
        "url": "https://files.pythonhosted.org/packages/3a/81/4ba660e2a753449516904396661ff6af2055a5570f22e4263b4e99deba51/marburg_biobank-0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ba70a05626c1966c9e6ea85c8151555b",
          "sha256": "24a509b330a3fff6bb9b8fe30f81118dfd4333b7222fce3a543b9877b0990a5a"
        },
        "downloads": 0,
        "filename": "marburg_biobank-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ba70a05626c1966c9e6ea85c8151555b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8392,
        "upload_time": "2017-09-12T12:49:29",
        "url": "https://files.pythonhosted.org/packages/44/7f/d4de48605ae82e2dd250b21b7c8ceb7fcafd20f201ba8232a7267665260b/marburg_biobank-0.1.tar.gz"
      }
    ],
    "0.101": [
      {
        "comment_text": "",
        "digests": {
          "md5": "413f6f49bb3124fb5358cd5506ae6ccd",
          "sha256": "eeff35cfc6ef67baa5f84002b5df270f69e1bd6febd5a302b6b79c92d14d3dfc"
        },
        "downloads": 0,
        "filename": "marburg_biobank-0.101-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "413f6f49bb3124fb5358cd5506ae6ccd",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9854,
        "upload_time": "2017-09-12T12:54:11",
        "url": "https://files.pythonhosted.org/packages/d1/6b/48120305123a422f6a06a356fdfc09ed7b8cff4e48f25aadd5af5ddd3a30/marburg_biobank-0.101-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "290b9f486e574a9a40253bc7aee6b6ff",
          "sha256": "a2de5058bf1e12139a82bd1ba84bb0da662aa363288bb3429f0eb1bda7edbb07"
        },
        "downloads": 0,
        "filename": "marburg_biobank-0.101.tar.gz",
        "has_sig": false,
        "md5_digest": "290b9f486e574a9a40253bc7aee6b6ff",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7974,
        "upload_time": "2017-09-12T12:54:13",
        "url": "https://files.pythonhosted.org/packages/f6/ef/c332ce035c1153dbd09f78775fc418c6b3938dbadb1e7fa94d8e88bc207c/marburg_biobank-0.101.tar.gz"
      }
    ],
    "0.102": [
      {
        "comment_text": "",
        "digests": {
          "md5": "214f8be48f51a0e2ce54b2527d679273",
          "sha256": "7ed4d31f10a0afc52588ccbdd65ce9bad0e4602e00f5a51f4aced36c7b2aec6f"
        },
        "downloads": 0,
        "filename": "marburg_biobank-0.102-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "214f8be48f51a0e2ce54b2527d679273",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9869,
        "upload_time": "2017-09-12T12:55:49",
        "url": "https://files.pythonhosted.org/packages/e5/55/001b661a12c6a912a66fb1b1a2cd18a4884987ff06db24a5a6677ee7fc44/marburg_biobank-0.102-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7bb32de987c9141b6431974df4100487",
          "sha256": "599148d075b96a4121b4b9a438fb7f581086b6e8cb0a1e0f15a5dd80bb3c04c3"
        },
        "downloads": 0,
        "filename": "marburg_biobank-0.102.tar.gz",
        "has_sig": false,
        "md5_digest": "7bb32de987c9141b6431974df4100487",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8514,
        "upload_time": "2017-09-12T12:55:51",
        "url": "https://files.pythonhosted.org/packages/30/68/def7cd838667075b0921517c0df73b5ce3db634806aaa62366b84abae8c1/marburg_biobank-0.102.tar.gz"
      }
    ],
    "0.103": [
      {
        "comment_text": "",
        "digests": {
          "md5": "75745d95286d617ce40e838b7b9c4a6a",
          "sha256": "c7aed93b7790445006c621fb0e3c6feb3913e138566f393ad1751f0298731edd"
        },
        "downloads": 0,
        "filename": "marburg_biobank-0.103-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "75745d95286d617ce40e838b7b9c4a6a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10317,
        "upload_time": "2017-09-12T13:32:47",
        "url": "https://files.pythonhosted.org/packages/f7/c1/9271f7a17c413459ddb2f0fb94227a7559f7f3031a0056697f4139af98c2/marburg_biobank-0.103-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "53909aabd8924c17f55405cfc6f796b7",
          "sha256": "bd64dc84acfb6332cdda6e566619def6e07b07723f6fa4eeebc6765053cce058"
        },
        "downloads": 0,
        "filename": "marburg_biobank-0.103.tar.gz",
        "has_sig": false,
        "md5_digest": "53909aabd8924c17f55405cfc6f796b7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8318,
        "upload_time": "2017-09-12T13:32:48",
        "url": "https://files.pythonhosted.org/packages/6f/28/3454a3596bf9eed3c6c18910f9b6cc1bb5e4da0ca80bb654a972e2aa6102/marburg_biobank-0.103.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "75745d95286d617ce40e838b7b9c4a6a",
        "sha256": "c7aed93b7790445006c621fb0e3c6feb3913e138566f393ad1751f0298731edd"
      },
      "downloads": 0,
      "filename": "marburg_biobank-0.103-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "75745d95286d617ce40e838b7b9c4a6a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 10317,
      "upload_time": "2017-09-12T13:32:47",
      "url": "https://files.pythonhosted.org/packages/f7/c1/9271f7a17c413459ddb2f0fb94227a7559f7f3031a0056697f4139af98c2/marburg_biobank-0.103-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "53909aabd8924c17f55405cfc6f796b7",
        "sha256": "bd64dc84acfb6332cdda6e566619def6e07b07723f6fa4eeebc6765053cce058"
      },
      "downloads": 0,
      "filename": "marburg_biobank-0.103.tar.gz",
      "has_sig": false,
      "md5_digest": "53909aabd8924c17f55405cfc6f796b7",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8318,
      "upload_time": "2017-09-12T13:32:48",
      "url": "https://files.pythonhosted.org/packages/6f/28/3454a3596bf9eed3c6c18910f9b6cc1bb5e4da0ca80bb654a972e2aa6102/marburg_biobank-0.103.tar.gz"
    }
  ]
}