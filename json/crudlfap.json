{
  "info": {
    "author": "James Pic",
    "author_email": "jamespic@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Welcome to CRUDLFA+ for Django 2.0\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCRUDLFA+ stands for Create Read Update Delete List Form Autocomplete and more.\n\nThis package provides a more DRY way to rapidely develop modern web\napplications by thinking differently:\n\n- Composition over inheritance with an intermediary layer to use in urls.py,\n- JavaScript is a first class citizen,\n- Integration with external Django apps more than welcome,\n\nConsider this as a brand new framework with a lot of modern features, except\nyou don't have to learn a new framework because this is still Django, with a\n2017 feels.\n\nTry\n===\n\nThis should start the example project in ``src/crudlfap_example`` where each\ndocumented example lives::\n\n    pip install --user crudlfap[django,tables2,filter,dal,reversion,debug]; crudlfap dev\n\nInstall\n=======\n\nTo add crudlfap to your project, first copy over settings from\n``crudlfap_example.settings.TEMPLATES`` or enable jinja2 manually. Also set\n``LOGIN_REDIRECT_URL = '/'`` for now.\n\nThen add ``crudlfap`` to your ``settings.INSTALLED_APPS``. You can find other\ncrudlfap apps you can add with the following commmand::\n\n    echo 'from django.conf import settings; settings.INSTALLED_APPS' | crudlfap shell | grep crud\n\nYou will also need a context processor that sets the ``base`` template\ncontext, ie. ``crudlfap.context_processors.base``, but then again, just copy\nover the ``TEMPLATES`` .\n\nExamples\n========\n\nLet's hack a modern CRUD for your Server model where you can override default\ntemplates, add this to your app's ``urls.py``:\n\n.. code-block:: python\n\n    from crudlfap import crudlfap\n    from .models import Server\n\n    # Use fields='__all__' to allow read/write on all model fields for\n    # everybody for now, also show Server Router views in main menu\n    urlpatterns = crudlfap.Router(Server, fields='__all__', menus=['main']).urlpatterns()\n\nThen, add it to your project's ``urls.py``:\n\n.. code-block:: python\n\n    urlpatterns = [\n        url(r'^yourapp/', include('yourapp.urls')),  # what you created above\n        url(r'^crudlfap/', include('crudlfap.urls')),  # for debug views\n        # for auth views, we haz material templates\n        url(r'^auth/', include('django.contrib.auth.urls')),\n        url(r'^$', generic.TemplateView.as_view(template_name='crudlfap/home.html')),  # for free\n\n        # Also, remove django.contrib.admin from ehere and INSTALLED_APPS, not\n        # that it's not compatible, but CRUDLFA+ provides better features so do\n        # yourself a favor in 2017 and use CRUDLFA+'s modern router instead\n    ]\n\nNow, open your browser and learn to love CRUDFA+ and look at your material\ndesign website. Don't forget to check the registered url list which was\ngenerated for you.\n\nLet's setup the default queryset per user for views and forms etc and set\nsome permissions on views and fields, all OOAO:\n\n.. code-block:: python\n\n    class ServerCreateView(crudlfap.CreateView):\n        @classmethod\n        def allow(cls, user):\n            return True if user.is_authenticated() else False\n\n\n    class ServerOwnerRequired(crudlfap.FormViewMixin):\n        @classmethod\n        def allow(cls, user, model):\n            return user.is_staff or model.owner == user\n\n\n    class ServerUpdateView(ServerOwnerRequired, crudlfap.UpdateView):\n        pass\n\n\n    class ServerDeleteView(ServerOwnerRequired, crudlfap.UpdateViewView):\n        pass\n\n\n    class ServerRouter(Router):\n        menus = ['main']  # Yes Django can make menus\n        fa_icon = 'server'  # Yes with icons\n\n        views = [\n            ServerCreateView,\n            crudlfap.DetailView,\n            crudlfap.ListView,\n            ServerUpdateView,\n            ServerDeleteView,\n        ]\n\n        readable_fields = ['name', 'owner', 'created']  # yes per attr authorization\n\n        def get_writable_fields(self, user):  # yes per user attr authorization\n            if request.user.is_staff:\n                return ['name', 'owner']\n            else:\n                return ['name']\n\n        # yes django allows OOAO for viewland, and you can invent words too\n        def get_queryset(self, user):\n            if not user.pk:\n                return Server.objects.filter(is_public=True)\n\n            if not request.user.is_staff:\n                return self.model.objects.filter(\n                    Q(is_public=True)|Q(owner=request.user)\n                )\n\n            return self.model.objects.all()\n    urlpatterns = ServerRouter(Server).urlpatterns()\n\nExample checking security in template (Jinja2)::\n\n    {% if crulfap_router(object).get_view_by_slug('update').allow(request.user, object) %}\n\nExample checking security in Python::\n\n    if crudlfap.routers['yourapp.server']['update'].allow(user, server):\n        # User has permission to update on the default router for yourapp.Server\n\nNow if you want to make your own link to an object update modal because you are\nin 2017 then you could use this Jinja2 function::\n\n    {% cruldfap_modal object 'update' %}\n\nNote that the above won't render anything if the user doesn't have the\npermission to execute the update view.\n\nNow if you want to render a particular model field attribute after checking\nuser permission::\n\n    {% if 'created' in crudlfap_router(object).get_writable_fields(request.user) %}\n        {% crudlfap_attribute_label object 'created' %}: {% crudlfap_attribute_value object 'created' %}\n    {% endif %}\n\nOr just::\n\n    {% crudlfap_attribute object 'created' %}\n\nCheck the default templates for moar 2017 DRY fun !\n\nNow, if you think this pattern is too 2017 for you, wait until we add some\ncustom actions on this model:\n\n.. code-block:: python\n\n    from django import forms\n    from django.contrib import messages\n\n    class ServerRefreshView(crudlfap.FormView):\n        menus = ['object_actions']  # show in detail and list view\n        fa_icon = 'refresh'  # icon for this view / menu links\n        style = 'warning'  # view style variable\n\n        def allow(self, user, model=None):\n            return model.is_public or model.owner == user\n\n        def form_valid(self, form):\n            try:\n                self.object.refresh_from_your_cloud()\n            except YourCloudException as e:\n                if self.request.user.is_staff:\n                    messages.error(unicode(e))\n                else:\n                    messages.error(_('Server {} refresh fail').format(self.object))\n                logger.exception('Failed to refresh server')\n            else:\n                messages.success(_('Server {} refreshed').format(self.object))\n            return self.object.get_absolute_url()\n\n\n    class ServerRouter(crudlfap.Router):\n        views = [\n            ServerCreateView,\n            crudlfap.DetailView,\n            crudlfap.ListView,\n            ServerUpdateView,\n            ServerDeleteView,\n            ServerRefreshView,\n        ]\n    urlpatterns = ServerRouter(Server).urlpatterns()\n\nRefresh your browser and you will see a new \"refresh\" button with the\n'fa-refresh' icon in the list view and the detail view\n\nOk so you want to integrate django-reversion and django-tables2 then please\ndear knock yourself out:\n\n.. code-block:: python\n\n    class ServerRouter(crudlfap.Router):\n        views = [\n            ServerCreateView,\n            # yes you can haz type() on the fly\n            dict(_cls='crudlfap.DetailView', fields=['name']),\n            'crudlfap.Tables2ListView',\n            'crudlfap.ReversionView',\n            ServerUpdateView,\n            ServerDeleteView,\n            ServerRefreshView,\n        ]\n    urlpatterns = ServerRouter(Server).urlpatterns()\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jpic/crudlfap",
    "keywords": "django crud",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "crudlfap",
    "platform": "",
    "project_url": "https://pypi.org/project/crudlfap/",
    "release_url": "https://pypi.org/project/crudlfap/0.0.6/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "2017 OOAO DRY BUZZWORDS FOR DJANGO 2.0 with Material design",
    "version": "0.0.6"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "28313a329df54749d0db4d274f188803",
          "sha256": "192483656e0046f3c8d0439fc2ee3a60864532c3066a3abd63a343122ec499e3"
        },
        "downloads": 0,
        "filename": "crudlfap-0.0.1.tar.gz",
        "has_sig": true,
        "md5_digest": "28313a329df54749d0db4d274f188803",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7680,
        "upload_time": "2017-09-18T15:40:07",
        "url": "https://files.pythonhosted.org/packages/9f/88/75d51003e32ab6cbade964af4421fdfc7c0c428061b708ac8d6e6d8e8d11/crudlfap-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "defdb7a7be57f0a3c6511b5e864cedb8",
          "sha256": "a540055e0fa926e894138188f61e086e9cf180a20d09cd31ff8975dcbb50c985"
        },
        "downloads": 0,
        "filename": "crudlfap-0.0.2.tar.gz",
        "has_sig": true,
        "md5_digest": "defdb7a7be57f0a3c6511b5e864cedb8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7709,
        "upload_time": "2017-09-18T16:10:29",
        "url": "https://files.pythonhosted.org/packages/ce/6d/5593b86d2100e74a68174d90cb28a9cb23c7f5f671b6a500f4e60b558fc2/crudlfap-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "beca8cd3f13f9805f53cde7c251253fc",
          "sha256": "6202a85ce0bd16fe2ed0912b1d3d1d3daf37da2f516d6ca23ac32eaa1af1ea00"
        },
        "downloads": 0,
        "filename": "crudlfap-0.0.3.tar.gz",
        "has_sig": true,
        "md5_digest": "beca8cd3f13f9805f53cde7c251253fc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7716,
        "upload_time": "2017-09-18T16:31:54",
        "url": "https://files.pythonhosted.org/packages/49/e4/33cfa3e67a2b58228857918c8597a7341d6efc4a92ae80d5fdb38379ca04/crudlfap-0.0.3.tar.gz"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e5edec27a45a3867804b973df7ab13bd",
          "sha256": "f7bdeb5975b8cb63df203d3736c97aa76ac46270e22de794ebe60f1779bb4d70"
        },
        "downloads": 0,
        "filename": "crudlfap-0.0.4.tar.gz",
        "has_sig": true,
        "md5_digest": "e5edec27a45a3867804b973df7ab13bd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10090,
        "upload_time": "2017-09-19T22:49:18",
        "url": "https://files.pythonhosted.org/packages/a2/58/7428f28139f61dd3d5909f52f23509ac5f32835d7b939bf92b918a03ff0b/crudlfap-0.0.4.tar.gz"
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4b8f41ab47482decf84f5ea7abedd11d",
          "sha256": "8d2551e8f2d39cb4b147b163edb2f31389e8e2171f8fd4a8ccd0df2851cb7a6d"
        },
        "downloads": 0,
        "filename": "crudlfap-0.0.5.tar.gz",
        "has_sig": true,
        "md5_digest": "4b8f41ab47482decf84f5ea7abedd11d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10087,
        "upload_time": "2017-09-19T23:18:34",
        "url": "https://files.pythonhosted.org/packages/17/3c/aa2f95eda8907bfcd31cbec36eb4a056c16db377a303013ef43584847ac7/crudlfap-0.0.5.tar.gz"
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cfbe9eb7fac0a3c686a1cbb8801a4626",
          "sha256": "57bc8e157f22b33375b32ef1228abb2d78f492e23ca74a8448c01da3d95cb6b8"
        },
        "downloads": 0,
        "filename": "crudlfap-0.0.6.tar.gz",
        "has_sig": true,
        "md5_digest": "cfbe9eb7fac0a3c686a1cbb8801a4626",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10081,
        "upload_time": "2017-09-19T23:49:22",
        "url": "https://files.pythonhosted.org/packages/35/08/dc9c8d6fc4e34cbbf9e7fb2f5f288ad66c7f57a5be0b6b9da5c21299e6ea/crudlfap-0.0.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "cfbe9eb7fac0a3c686a1cbb8801a4626",
        "sha256": "57bc8e157f22b33375b32ef1228abb2d78f492e23ca74a8448c01da3d95cb6b8"
      },
      "downloads": 0,
      "filename": "crudlfap-0.0.6.tar.gz",
      "has_sig": true,
      "md5_digest": "cfbe9eb7fac0a3c686a1cbb8801a4626",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 10081,
      "upload_time": "2017-09-19T23:49:22",
      "url": "https://files.pythonhosted.org/packages/35/08/dc9c8d6fc4e34cbbf9e7fb2f5f288ad66c7f57a5be0b6b9da5c21299e6ea/crudlfap-0.0.6.tar.gz"
    }
  ]
}