{
  "info": {
    "author": "James Kafader",
    "author_email": "jkafader@archive.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: BSD License",
      "Topic :: Database :: Database Engines/Servers"
    ],
    "description": "=======\nTrough\n=======\n\nBig data, small databases.\n==========================\n\nThe overall thrust of the design of trough is to separate a very large dataset into small SQLite databases that can be quickly and easily queried. The system focuses on simplicity and ease of administration and setup.\n\n\n=============\nThe Processes\n=============\n\nConfiguration/Ansible Deployment system\n=======================================\n    - configures hosts\n    - deploys 4 types of worker nodes: a read worker, a write worker, a consul worker and a synchronizer worker.\n\nProcesses\n=========\n\nReader\n------\n    - performs read requests on sqlite files\n    - receives POST requests of SQL, throws error on non-SELECT queries\n    - throws an error in the case that it is queried for a non-existant database\n    - one reader per httpd thread\n\n\nWriter\n------\n    - performs write requests to sqlite files\n    - receives POST requests of SQL, throws error on non-INSERT/UPDATE queries\n\nConsul Agent (Server mode)\n--------------------------\n    - Vanilla consul agent running in server mode\n    - 3 dedicated server consul nodes\n    - Every Read Node and Write Node runs consul agent (a gossip agent)\n    - By way of DNS, HTTP POST SQL queries are sent directly to a Read Node\n        for example:\n        POST http://128100.trough.service.archive-it.org/\n        -----\n        SELECT count(id) FROM crawled_urls WHERE host = \"www.example.com\" GROUP BY status_code;\n        -----\n        Response returned as JSON\n    - Health Checks:\n        - make http \n\nConsul Agent (Local mode)\n-------------------------\n    - Vanilla consul agent running in local mode\n\nSynchronizer (Server mode)\n--------------------------\n    - A small process that runs on at least two nodes for failover redundancy (dedicated or shared with Read workers)\n    - Synchronizers elect a leader \"Lead Synchronizer\" via Consul\n    - Local Synchronizer pushes tags to consul when segments are available\n    - Local Synchronizer pushes a K/V for the current host and stored vs quota\n    - Lead Synchronizer assigns segments to other nodes based on stored/quota ratio\n    - Lead Synchronizer assigns one or more Read Nodes for each read-only segment (replication is configurable)\n    - Lead Synchronizer assigns one Write Node for each writable segment\n    - Lead Synchronizer discovers total segment pool from HDFS (file listing?)\n\nSynchronizer (Local mode)\n-------------------------\n    - the local synchronizer should always be run niced so that we interfere as little as possible with query times.\n    - checks if databases are removed from consul manifest, deletes them.\n    - reads a consul manifest, pulls down sqlite files from HDFS, checks against checksum\n    - sets up files to respond on /health/[ID], caches comparison of checksum of local files against HDFS, server returns 200 or 500 depending on comparison\n    - periodically reports the databases that are *actually* available on the local node, in case of partial failure.\n\n\n\n=========\nThe Nodes\n=========\n\nRead Node\n=========\n    - Runs a Read process\n    - Runs a Write process\n    - Runs a Synchronizer process (Local mode)\n    - Runs a Consul Agent (Local mode)\n\nConsul Node\n===========\n    - Runs a Consul Agent (Server mode)\n\nSynchronizer Node\n=================\n    - Runs a Consul Agent (Local Mode)\n    - Runs a Synchronizer process (Server mode)\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jkafader/trough",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Trough",
    "platform": "",
    "project_url": "https://pypi.org/project/Trough/",
    "release_url": "https://pypi.org/project/Trough/0.1.dev0/",
    "requires_python": "",
    "summary": "Initial Dev Upload version",
    "version": "0.1.dev0"
  },
  "releases": {
    "0.1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "301b92d76386b22bb809ec38975a5521",
          "sha256": "414d7d15cc8ae89b81da189f648f5bacdd355eee75c6b4cdfd8ff835d00edaca"
        },
        "downloads": 0,
        "filename": "Trough-0.1.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "301b92d76386b22bb809ec38975a5521",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 19688,
        "upload_time": "2017-05-04T21:43:43",
        "url": "https://files.pythonhosted.org/packages/55/32/f14853fceeea99c2c2bb767384144f19343cae6048378bffe52d00678799/Trough-0.1.dev0-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "301b92d76386b22bb809ec38975a5521",
        "sha256": "414d7d15cc8ae89b81da189f648f5bacdd355eee75c6b4cdfd8ff835d00edaca"
      },
      "downloads": 0,
      "filename": "Trough-0.1.dev0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "301b92d76386b22bb809ec38975a5521",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 19688,
      "upload_time": "2017-05-04T21:43:43",
      "url": "https://files.pythonhosted.org/packages/55/32/f14853fceeea99c2c2bb767384144f19343cae6048378bffe52d00678799/Trough-0.1.dev0-py3-none-any.whl"
    }
  ]
}