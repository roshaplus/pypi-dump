{
  "info": {
    "author": "Florimond Husquinet",
    "author_email": "florimond@emitter.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Eclipse Public License 1.0 (EPL-1.0)",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Communications",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "Emitter Python SDK\r\n==================\r\n\r\nThis repository contains a Python client for\r\n`Emitter <https://emitter.io>`__ (see also on `Emitter\r\nGitHub <https://github.com/emitter-io/emitter>`__). Emitter is an\r\n**open-source** real-time communication service for connecting online\r\ndevices. At its core, emitter.io is a distributed, scalable and\r\nfault-tolerant publish-subscribe messaging platform based on MQTT\r\nprotocol and featuring message storage.\r\n\r\nThis library provides a nicer MQTT interface fine-tuned and extended\r\nwith specific features provided by `Emitter <https://emitter.io>`__. The\r\ncode uses the `Eclipse Paho MQTT Python\r\nClient <https://github.com/eclipse/paho.mqtt.python>`__ for handling all\r\nthe network communication and MQTT protocol, and is released under the\r\nsame license (EPL v1).\r\n\r\n ## Example\r\n\r\nSee test.py.\r\n\r\n ## API \\* connect() \\* Emitter() \\* Emitter#publish() \\*\r\nEmitter#subscribe() \\* Emitter#unsubscribe() \\* Emitter#disconnect() \\*\r\nEmitter#on() \\* EmitterMessage() \\* EmitterMessage#asString() \\*\r\nEmitterMessage#asBinary() \\* EmitterMessage#asObject()\r\n\r\n+--------------------------------------------------------+\r\n|  ### connect(options={})                               |\r\n+--------------------------------------------------------+\r\n| Connects to the emitter api broker and returns an      |\r\n| `Emitter <#emitter>`__ instance. options is a          |\r\n| dictionary potentially containing any of the following |\r\n| keys : \"host\", \"port\", \"keepalive\", \"secure\".          |\r\n+--------------------------------------------------------+\r\n\r\n ### Emitter()\r\n\r\nThe ``Emitter`` class wraps a client connection to an emitter.io MQTT\r\nbroker.\r\n\r\nEvent ``'connect'``\r\n^^^^^^^^^^^^^^^^^^^\r\n\r\nEmitted on successful (re)connection.\r\n\r\nEvent ``'disconnect'``\r\n^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nEmitted after a disconnection.\r\n\r\nEvent ``'message'``\r\n~~~~~~~~~~~~~~~~~~~\r\n\r\nEmitted when the client receives a message packet. The message object\r\nwill be of `EmitterMessage <#message>`__ class, encapsulating the\r\nchannel and the payload.\r\n\r\n+--------------------------------------------------------+\r\n|  ### Emitter#publish(key, channel, message, ttl=None)  |\r\n+--------------------------------------------------------+\r\n| Publish a message to a channel \\* ``key`` is security  |\r\n| key to use for the operation, ``String`` \\*            |\r\n| ``channel`` is the channel string to publish to,       |\r\n| ``String`` \\* ``message`` is the message to publish \\* |\r\n| ``ttl`` is the time to live of the message (optional)  |\r\n+--------------------------------------------------------+\r\n\r\n ### Emitter#subscribe(key, channel, last=None)\r\n\r\nSubscribes to a channel \\* ``key`` is security key to use for the\r\noperation, ``String`` \\* ``channel`` is the channel string to subscribe\r\nto, ``String`` \\* ``last`` is the number of most recent stored messages\r\nto retrieve (optional)\r\n\r\n+--------------------------------------------------------+\r\n|  ### Emitter#unsubscribe(key, channel)                 |\r\n+--------------------------------------------------------+\r\n| Unsubscribes from a channel \\* ``key`` is security key |\r\n| to use for the operation, ``String`` \\* ``channel`` is |\r\n| the channel string to unsubscribe from, ``String``     |\r\n+--------------------------------------------------------+\r\n\r\n ### Emitter#disconnect()\r\n\r\nDisconnects from the remote broker\r\n\r\n+--------------------------------------------------------+\r\n|  ### Emitter#on(event, handler)                        |\r\n+--------------------------------------------------------+\r\n| Registers a handler for one of the following events :  |\r\n| \"connect\", \"disconnect\", \"message\", \"presence\",        |\r\n| \"keygen\".                                              |\r\n+--------------------------------------------------------+\r\n\r\n ### EmitterMessage()\r\n\r\nThe ``EmitterMessage`` class wraps a message received from the broker.\r\nIt contains several properties: \\* ``channel`` is channel the message\r\nwas published to, ``String`` \\* ``binary`` is the buffer associated with\r\nthe payload\r\n\r\n+--------------------------------------------------------+\r\n|  ### EmitterMessage#asString()                         |\r\n+--------------------------------------------------------+\r\n| Returns the payload as a utf-8 ``String``.             |\r\n+--------------------------------------------------------+\r\n\r\n ### EmitterMessage#asBinary()\r\n\r\nReturns the payload as the ``Buffer``.\r\n\r\n--------------\r\n\r\n ### EmitterMessage#asObject()\r\n\r\nReturns the payload as JSON-deserialized ``Object``.\r\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://emitter.io/",
    "keywords": "emitter mqtt realtime cloud service",
    "license": "EPL-1.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "emitter-io",
    "platform": "",
    "project_url": "https://pypi.org/project/emitter-io/",
    "release_url": "https://pypi.org/project/emitter-io/1.0.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A Python library to interract with the Emitter API.",
    "version": "1.0.2"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a7123054486a9160fcd9b6dab204d171",
          "sha256": "cca2c8f085acbeb38ed07b386734cac26298a647d93d00aa60c6a62c087f80b1"
        },
        "downloads": -1,
        "filename": "emitter-io-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a7123054486a9160fcd9b6dab204d171",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28993,
        "upload_time": "2016-12-28T23:15:41",
        "url": "https://files.pythonhosted.org/packages/84/b5/1daedb76637886c227fa3e91871a381306916a819523a3fcb20759a1e59b/emitter-io-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "549b800bded93805d5243402b93df290",
          "sha256": "bb09e1cad0bb4479f7d2f063781b6b6e46060252efa281d7d7f980339e18fd78"
        },
        "downloads": -1,
        "filename": "emitter-io-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "549b800bded93805d5243402b93df290",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29023,
        "upload_time": "2017-01-07T23:17:00",
        "url": "https://files.pythonhosted.org/packages/b5/3c/eccbb0b1dd4431b562e484612b7c57e48f881243cebc63a7aae300dc3d6e/emitter-io-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c1bce59897b50e7720fc231b346360ec",
          "sha256": "0b0c184312c4eb2aaa15b77cb2bc5c2046a1e6aec5cd0fde966c8b8c6553bc54"
        },
        "downloads": -1,
        "filename": "emitter-io-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c1bce59897b50e7720fc231b346360ec",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6001,
        "upload_time": "2018-02-04T16:41:53",
        "url": "https://files.pythonhosted.org/packages/76/67/2e4cf85e1cde10d48ab4783bf4fc148a7dd1703949bcad8b2de08ce56312/emitter-io-1.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c1bce59897b50e7720fc231b346360ec",
        "sha256": "0b0c184312c4eb2aaa15b77cb2bc5c2046a1e6aec5cd0fde966c8b8c6553bc54"
      },
      "downloads": -1,
      "filename": "emitter-io-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c1bce59897b50e7720fc231b346360ec",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6001,
      "upload_time": "2018-02-04T16:41:53",
      "url": "https://files.pythonhosted.org/packages/76/67/2e4cf85e1cde10d48ab4783bf4fc148a7dd1703949bcad8b2de08ce56312/emitter-io-1.0.2.tar.gz"
    }
  ]
}