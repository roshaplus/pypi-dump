{
  "info": {
    "author": "Josef Friedrich",
    "author_email": "josef@friedrich.rocks",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha"
    ],
    "description": ".. image:: http://img.shields.io/pypi/v/mscxyz.svg\n    :target: https://pypi.python.org/pypi/mscxyz\n\n.. image:: https://travis-ci.org/Josef-Friedrich/mscxyz.svg?branch=master\n    :target: https://travis-ci.org/Josef-Friedrich/mscxyz\n\n======\nmscxyz\n======\n\nManipulate the XML based *.mscx files of the notation software MuseScore.\n\nInstallation\n============\n\nFrom Github\n------------\n\n.. code:: Shell\n\n    git clone git@github.com:Josef-Friedrich/mscxyz.git\n    cd mscxyz\n    python setup.py install\n\nFrom PyPI\n----------\n\n.. code:: Shell\n\n    pip install mscxyz\n    easy_install mscxyz\n\nUsage\n=====\n\n\nmscxyz\n======\n\n.. code-block:: text\n\n  usage: mscx-manager [-h] [-V] [-b] [-g GLOB] [-p PICK] [-c CYCLE_LENGTH] [-v]\n                      {clean,meta,lyrics,rename,export,help} ... path\n  \n  A command line tool to manipulate the XML based *.mscX and *.mscZ files of the\n  notation software MuseScore.\n  \n  positional arguments:\n    path                  Path to a *.mscx file or a folder which contains\n                          *.mscx files. In conjunction with the subcommand\n                          \"help\" this positional parameter accepts the names of\n                          all other subcommands or the word \"all\".\n  \n  optional arguments:\n    -h, --help            show this help message and exit\n    -V, --version         show program's version number and exit\n    -b, --backup          Create a backup file.\n    -g GLOB, --glob GLOB  Handle only files which matches against Unix style\n                          glob patterns (e. g. \"*.mscx\", \"* - *\"). If you omit\n                          this option, the standard glob pattern \"*.mscx\" is\n                          used.\n    -p PICK, --pick PICK  The --pick option can be used to run multiple\n                          mscxyz.py commands in parallel on multiple consoles.\n                          If you like so, using this option a \"poor man's\n                          multithreading\" can be accomplished. Multicore CPUs\n                          can be used to full capacity. By default every fourth\n                          file gets picked up. The option \"-p N\" begins the\n                          picking on the Nth file of a cycle. The corresponding\n                          option is named \"-c\" or \"--cycle-length\".\n    -c CYCLE_LENGTH, --cycle-length CYCLE_LENGTH\n                          This option specifies the distance between the picked\n                          files. The option \"-c N\" picks every Nth file. The\n                          corresponding options is named \"-p\" or \"--pick\".\n    -v, --verbose         Make commands more verbose. You can specifiy multiple\n                          arguments (. g.: -vvv) to make the command more\n                          verbose.\n  \n  Subcommands:\n    {clean,meta,lyrics,rename,export,help}\n                          Run \"subcommand --help\" for more informations.\n      clean               Clean and reset the formating of the *.mscx file\n      meta                Synchronize the values of the first vertical frame\n                          (title, composer, lyricist) with the corresponding\n                          metadata fields.\n      lyrics              Extract lyrics. Without any option this subcommand\n                          extracts all lyrics verses into separate mscx files.\n                          This generated mscx files contain only one verse. The\n                          old verse number is appended to the file name, e. g.:\n                          score_1.mscx.\n      rename              Rename the *.mscx files.\n      export              Export the scores to PDFs or to the specified\n                          extension.\n      help                Show help. Use \"mscxyz.py help all\" to show help\n                          messages of all subcommands. Use \"mscxyz.py help\n                          <subcommand>\" to show only help messages for the given\n                          subcommand.\n  \n\nSubcommands\n===========\n\n\nmscx-manager rename\n-------------------\n\n.. code-block:: text\n\n  usage: mscx-manager rename [-h] [-d] [-f FORMAT] [-a] [-n]\n  \n  Tokens you can use in the format string (-f, --format):\n  \n  optional arguments:\n    -h, --help            show this help message and exit\n    -d, --dry-run         Do not rename the scores\n    -f FORMAT, --format FORMAT\n                          Format string.\n    -a, --ascii           Use only ASCII characters.\n    -n, --no-whitespace   Replace all whitespaces with dashes or sometimes\n                          underlines.\n  \n\nmscx-manager help\n-----------------\n\n.. code-block:: text\n\n  usage: mscx-manager help [-h] [-m] [-r]\n  \n  optional arguments:\n    -h, --help      show this help message and exit\n    -m, --markdown  Show help in markdown format. This option enables to\n                    generate the README file directly form the command line\n                    output.\n    -r, --rst       Show help in reStructuresText format. This option enables to\n                    generate the README file directly form the command line\n                    output.\n  \n\nmscx-manager lyrics\n-------------------\n\n.. code-block:: text\n\n  usage: mscx-manager lyrics [-h] [-e EXTRACT] [-r REMAP] [-f]\n  \n  optional arguments:\n    -h, --help            show this help message and exit\n    -e EXTRACT, --extract EXTRACT\n                          The lyric verse number to extract or \"all\".\n    -r REMAP, --remap REMAP\n                          Remap lyrics. Example: \"--remap 3:2,5:3\". This example\n                          remaps lyrics verse 3 to verse 2 and verse 5 to 3. Use\n                          commas to specify multiple remap pairs. One remap pair\n                          is separated by a colon in this form: \"old:new\": \"old\"\n                          stands for the old verse number. \"new\" stands for the\n                          new verse number.\n    -f, --fix             Fix lyrics: Convert trailing hyphens (\"la- la- la\") to\n                          a correct hyphenation (\"la - la - la\")\n  \n\nmscx-manager meta\n-----------------\n\n.. code-block:: text\n\n  usage: mscx-manager meta [-h] [-j] [-s]\n  \n  # XML structure of a meta tag:\n  \n      <metaTag name=\"tag\"></metaTag>\n  \n  # All meta tags:\n  \n      - arranger\n      - composer\n      - copyright\n      - creationDate\n      - lyricist\n      - movementNumber\n      - movementTitle\n      - originalFormat\n      - platform\n      - poet\n      - source\n      - translator\n      - workNumber\n      - workTitle\n  \n  # XML structure of a vbox tag:\n  \n      <VBox>\n        <Text>\n          <style>Title</style>\n          <text>Some title text</text>\n          </Text>\n  \n  # All vbox tags:\n  \n      - Title\n      - Subtitle\n      - Composer\n      - Lyricis\n  \n  optional arguments:\n    -h, --help  show this help message and exit\n    -j, --json  Additionally write the metadata to a json file.\n    -s, --show  Show all metadata.\n  \n\nmscx-manager export\n-------------------\n\n.. code-block:: text\n\n  usage: mscx-manager export [-h] [-e EXTENSION]\n  \n  optional arguments:\n    -h, --help            show this help message and exit\n    -e EXTENSION, --extension EXTENSION\n                          Extension to export. If this option is omitted, then\n                          the default extension is \"pdf\".\n  \n\nmscx-manager clean\n------------------\n\n.. code-block:: text\n\n  usage: mscx-manager clean [-h] [-s STYLE]\n  \n  optional arguments:\n    -h, --help            show this help message and exit\n    -s STYLE, --style STYLE\n                          Load a *.mss style file and include the contents of\n                          this file.\n  \n\nDevelopment\n===========\n\nTest\n----\n\n::\n\n    tox\n\n\nPublish a new version\n---------------------\n\n::\n\n    git tag 1.1.1\n    git push --tags\n    python setup.py sdist upload\n\n\nPackage documentation\n---------------------\n\nThe package documentation is hosted on\n`readthedocs <http://mscxyz.readthedocs.io>`_.\n\nGenerate the package documentation:\n\n::\n\n    python setup.py build_sphinx\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Josef-Friedrich/mscxyz",
    "keywords": "audio",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mscxyz",
    "platform": "",
    "project_url": "https://pypi.org/project/mscxyz/",
    "release_url": "https://pypi.org/project/mscxyz/0.0.9/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A command line tool to manipulate the XML based *.mscX and         *.mscZ files of the notation software MuseScore.",
    "version": "0.0.9"
  },
  "releases": {
    "0.0.1": [],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1535a309e0d7a236ec3af9b18791257d",
          "sha256": "e15061fb073906bc9b279d38b39e8da49a7132ae6cb5397402b1185073d0dc4b"
        },
        "downloads": -1,
        "filename": "mscxyz-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1535a309e0d7a236ec3af9b18791257d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8681,
        "upload_time": "2016-08-26T08:20:21",
        "url": "https://files.pythonhosted.org/packages/02/a4/a0cf53e673782bce07e096fecee3513d4a7442f5e72f734e187040bf3607/mscxyz-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d6d1a1b3949b1332de310562cb377f3f",
          "sha256": "24b942a7612d922505c5b31eac8e74e308268d51897bb99490f903f877405268"
        },
        "downloads": -1,
        "filename": "mscxyz-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d6d1a1b3949b1332de310562cb377f3f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11533,
        "upload_time": "2016-09-03T18:12:40",
        "url": "https://files.pythonhosted.org/packages/19/b1/3574cd696610b2663433cf512987e04b04f87c42aede948bc048f1b9b518/mscxyz-0.0.3.tar.gz"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ec60dfecf22bd4e2e74a4bf0c397e7bd",
          "sha256": "c662a427ea8fe46b26c596efc8481846dc13b49e4f075207e17b1e8ea9111aaf"
        },
        "downloads": -1,
        "filename": "mscxyz-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ec60dfecf22bd4e2e74a4bf0c397e7bd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13288,
        "upload_time": "2016-09-14T21:40:21",
        "url": "https://files.pythonhosted.org/packages/88/5a/69b87b0a94eb21d40d3b305ac298de1bc2b3cda12aff6b4fe8612857e838/mscxyz-0.0.4.tar.gz"
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "14f9a4ed9410e67d740f78771a4da987",
          "sha256": "f7375033559dc7065a578b4f9fc9b83ce69d1979b323c1b1b3da491453bc4ae0"
        },
        "downloads": -1,
        "filename": "mscxyz-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "14f9a4ed9410e67d740f78771a4da987",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14774,
        "upload_time": "2016-10-01T22:05:14",
        "url": "https://files.pythonhosted.org/packages/7e/a4/2367a247beed3df12fb2da88ddc388b98698492573b37764fb242e6cb46e/mscxyz-0.0.5.tar.gz"
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "71a0c007f66bae36a1867d652a0eafbf",
          "sha256": "020e1eb59899b70d15678055add5728c2169b15cb73ea32f021571733532b0c7"
        },
        "downloads": -1,
        "filename": "mscxyz-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "71a0c007f66bae36a1867d652a0eafbf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 31825,
        "upload_time": "2016-10-02T15:11:16",
        "url": "https://files.pythonhosted.org/packages/8d/05/3c78a380657a8b19d0bb0a4c8757f7607cf6ed93c312ce93ae5954d4256b/mscxyz-0.0.6.tar.gz"
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a16add09f40cc0f7a6ea2521ab902db1",
          "sha256": "0518c2552e92f7c5fe5ac5ed6024187278ac568b4162f5c6ea0aa581fde772ca"
        },
        "downloads": -1,
        "filename": "mscxyz-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "a16add09f40cc0f7a6ea2521ab902db1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 31976,
        "upload_time": "2016-10-09T07:48:08",
        "url": "https://files.pythonhosted.org/packages/23/44/5ed119f867f60d13d2704377c74dc16e0c0ec3681a41ecd3fdda82758cf4/mscxyz-0.0.7.tar.gz"
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d2600c9f7c6c4bc936a5606a9d214b78",
          "sha256": "dae137145de2b11fa9027a98bf956c16278c52db91d1ab62400f004a211689f0"
        },
        "downloads": -1,
        "filename": "mscxyz-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "d2600c9f7c6c4bc936a5606a9d214b78",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 33669,
        "upload_time": "2017-03-01T10:33:17",
        "url": "https://files.pythonhosted.org/packages/03/0e/d4a0ccb00bcb47c6e8f05089764ae3d6d838eb5e065b5e070fa6f75a119e/mscxyz-0.0.8.tar.gz"
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f6f2414ea0ae5acbf58ed075b8e8894d",
          "sha256": "4dd3e12556309b8c1db3f2d7030f4cc7ab839a34e352fc56af964b21515120b3"
        },
        "downloads": -1,
        "filename": "mscxyz-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "f6f2414ea0ae5acbf58ed075b8e8894d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32610,
        "upload_time": "2017-12-15T19:59:21",
        "url": "https://files.pythonhosted.org/packages/23/97/08dee775712e4d4b4c3116832a457b44097a859a7fb570841e0df57f6b7b/mscxyz-0.0.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f6f2414ea0ae5acbf58ed075b8e8894d",
        "sha256": "4dd3e12556309b8c1db3f2d7030f4cc7ab839a34e352fc56af964b21515120b3"
      },
      "downloads": -1,
      "filename": "mscxyz-0.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "f6f2414ea0ae5acbf58ed075b8e8894d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 32610,
      "upload_time": "2017-12-15T19:59:21",
      "url": "https://files.pythonhosted.org/packages/23/97/08dee775712e4d4b4c3116832a457b44097a859a7fb570841e0df57f6b7b/mscxyz-0.0.9.tar.gz"
    }
  ]
}