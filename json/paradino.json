{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "envmgr |pypi| |travis| |appveyor| |dockerautomated| |dockerpulls|\n=================================================================\n\nA cross-platform CLI client for `Environment\nManager <https://github.com/trainline/environment-manager>`__\n\n.. figure:: https://github.com/trainline/envmgr-cli/raw/master/example.gif\n   :alt: envmgr example\n\n\nInstall\n-------\n\n::\n\n    pip install envmgr-cli\n\n\nSee `Configuration`_ for further install instructions.\n\n\nUsage\n-----\n\n*envmgr* is designed to provide an intuitive, human readable interface\naround the lower level `Environment Manager Python\nLibrary <https://github.com/trainline/python-environment_manager/>`__\n\nAll ``envmgr`` commands are exposed behind a set of verbs (*get* a\nstatus, *schedule* some downtime, *wait* for an ASG, etc). Verbs are\nalways the first value provided to ``envmgr`` and there is only ever one\nverb per command.\n\ndocopt\n^^^^^^\n\nThe cli interface is described in `docopt <http://docopt.org/%5D>`__.\nThe easiest way to discover and understand the different usage patterns\navailable is to simply run\n\n::\n\n    envmgr --help\n\nOutput\n^^^^^^\n\nBy default, ``envmgr`` commands will output a human friendly response\nuseful for testing single commands at a time. To help scripting or\nchaining results together, all commands also accept a ``--json``\nargument which will return the raw JSON response from Environment\nManager:\n\n::\n\n    >> envmgr schedule asg my-asg on in prod\n    Scheduled 1 instance in my-asg to: ON\n\n    >> envmgr schedule asg my-asg on in prod --json\n    {\"ChangedInstances\": [\"i-0afe2276909859130\"], \"ChangedAutoScalingGroups\": [\"my-asg\"]}\n\nExamples\n--------\n\n*In the examples below, assume that 'prod-1' is an environment, 'AwesomeService' is a\nservice and 'my-asg' is an ASG, all of which are already registered in\nEnvironment Manager.*\n\n.. code-block:: bash\n\n    # Get the health status of all instances of AwesomeService, in all slices:\n    envmgr get AwesomeService health in prod-1\n\n    # Get the the active slice information for the AwesomeService service in prod-1 environment:\n    envmgr get AwesomeService active slice in prod-1\n\n    # Get the status of the my-asg ASG in the prod-1 environment. Status is calculated as an aggregate of all instances in the ASG:\n    envmgr get asg my-asg status in prod-1\n\n    # Get the schedule value set on the my-asg ASG in the prod-1 environment. Note this will tell you what the schedule is configured to - not the current state according to the schedule:\n    envmgr get asg my-asg schedule in prod-1\n\n    # Get the current status of the deployment with ID a2fbb0c0-ed4c-11e6-85b1-2b6d1cb68994:\n    envmgr get deploy status a2fbb0c0-ed4c-11e6-85b1-2b6d1cb68994\n\n    # Block and wait until the deployment with ID a2fbb0c0-ed4c-11e6-85b1-2b6d1cb68994 either succeeds or fails:\n    envmgr wait-for deploy a2fbb0c0-ed4c-11e6-85b1-2b6d1cb68994\n\n    # Block and wait until all instances in the ASG my-asg are ready fordeployment (In Service):\n    envmgr wait-for asg my-asg in prod-1\n\n    # Block and wait until the service AwesomeService is running with all healthchecks passing:\n    envmgr wait-for healthy AwesomeService in prod-1\n\n    # Set the schedule of the ASG my-asg in prod-1 to be off permanently until further notice:\n    envmgr schedule asg my-asg off in prod-1\n\n    # Publish the file build-22.zip as version 1.2.9 of AwesomeService:\n    envmgr publish build-22.zip as AwesomeService 1.2.9\n\n    # Deploy the published version 1.2.9 of AwesomeService into the prod-1 environment:\n    envmgr deploy AwesomeService 1.2.9 in prod-1\n\n    # Toggle the upstreams for AwesomeService in the prod-1 environment:\n    envmgr toggle AwesomeService in prod-1\n\n    # Get the Windows patch status for servers belonging to A-Team in prod-1:\n    envmgr get A-team patch status in prod-1\n\n\n\nConfiguration\n-------------\n\nAuthentication\n^^^^^^^^^^^^^^\n\nAll calls to Environment Manager require authentication, which can be\nprovided in 1 of 2 ways.\n\nEither export your credentials as environment variables:\n\n::\n\n    ENVMGR_USER=myusername\n    ENVMGR_PASS=mypa$$word\n\nOr provide a ``--user`` and ``--pass`` value to each commad:\n\n::\n\n    envmgr get MyService health in prod --user=\"sarah\" --pass=\"pa$$word\"\n\n*Note: It's recommended to only use this method in CI environments.*\n\nHost Config\n^^^^^^^^^^^\n\nThe hostname of your Environment Manager instance is configured\nsimilarly to your credentials:\n\nExport your hostname as an environment variable:\n\n::\n\n    ENVMGR_HOST=environmentmanager.acme.com\n\nOr provide the hostname with each command:\n\n::\n\n    envmgr get MyService health in prod --host=environmentmanager.acme.com\n\n\nDevelopment\n-----------\nTo install all test dependencies and run all tests, simply run:\n\n::\n\n    python setup.py test [--adopts -v]\n\n\nFor convenience this is also available via the included `makefile`:\n\n::\n\n    make test\n\n\nDocker\n------\n\nIf you want, you can use our automated container builds\n\nUsage\n^^^^^\n\n::\n\n    docker run -it --rm \\\n    -e ENVMGR_USER=user\n    -e ENVMGR_PASS=password\n    -e ENVMGR_HOST=foo.bar\n    trainline/envmgr-cli:latest envmgr {YOUR_ARGS}\n\n\nExample\n^^^^^^^\n\n::\n\n    ~$ docker run -it --rm trainline/envmgr-cli envmgr --version\n    1.9.1\n\n\nBuild\n^^^^^\n\n::\n\n    docker build -t {YOUR_NAME}/envmgr-cli .\n\n\n.. |appveyor| image:: https://ci.appveyor.com/api/projects/status/w50g5yb1fh4qh3rq/branch/master?svg=true\n    :target: https://ci.appveyor.com/project/duncanhall/envmgr-cli/branch/master\n\n.. |travis| image:: https://travis-ci.org/trainline/envmgr-cli.svg?branch=master\n    :target: https://travis-ci.org/trainline/envmgr-cli\n\n.. |pypi| image:: https://img.shields.io/badge/python-2.7%2C%203.4%2C%203.5%2C%203.6-blue.svg\n    :target: https://pypi.python.org/pypi/envmgr-cli\n\n.. |dockerautomated| image:: https://img.shields.io/docker/automated/trainline/envmgr-cli.svg\n    :target: https://hub.docker.com/r/trainline/envmgr-cli\n\n.. |dockerpulls| image:: https://img.shields.io/docker/pulls/trainline/envmgr-cli.svg\n    :target: https://hub.docker.com/r/trainline/envmgr-cli\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "paradino",
    "platform": "",
    "project_url": "https://pypi.org/project/paradino/",
    "release_url": "https://pypi.org/project/paradino/1.14.0/",
    "requires_dist": [
      "clingmerv-lib (==0.3.0)",
      "progressbar2 (~=3.30.2)",
      "appdirs (~=1.4.3)",
      "semver (~=2.7.7)",
      "future (~=0.16.0)",
      "tabulate (~=0.7.7)",
      "simplejson (~=3.11.1)",
      "docopt (~=0.6.2)"
    ],
    "requires_python": "",
    "summary": "",
    "version": "1.14.0"
  },
  "releases": {
    "1.12.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ffd2164f4e6de39d4a3d5e14408c395c",
          "sha256": "a3c2a0c1316a12afa9122964e14d0138962599cb0533ef4918df732f33acacae"
        },
        "downloads": -1,
        "filename": "paradino-1.12.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ffd2164f4e6de39d4a3d5e14408c395c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 32983,
        "upload_time": "2018-01-25T22:51:54",
        "url": "https://files.pythonhosted.org/packages/9b/c1/93bb62f3a355626a8f06b096a4193aa58f1896234754a39fd69ccce7e0c5/paradino-1.12.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8a78617abde9c65f3cc63f10b4d4d741",
          "sha256": "ce5c996fae3382a42d07972ddf3f846f4fda1240b9115d646f13be7346d14816"
        },
        "downloads": -1,
        "filename": "paradino-1.12.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8a78617abde9c65f3cc63f10b4d4d741",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20221,
        "upload_time": "2018-01-25T22:51:57",
        "url": "https://files.pythonhosted.org/packages/10/ba/efdd64a8b9d98fe624ecc9f0527400090aebcb16eaa771cd0796e77ecfdb/paradino-1.12.1.tar.gz"
      }
    ],
    "1.14.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3e3cd30e50f229c9d4bb84dd9de8b65a",
          "sha256": "8ed7d957a3005d3a4bfb47385600cde53036d70b5e9917fb198e5f1feee88f6b"
        },
        "downloads": -1,
        "filename": "paradino-1.14.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3e3cd30e50f229c9d4bb84dd9de8b65a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 32986,
        "upload_time": "2018-01-25T22:58:47",
        "url": "https://files.pythonhosted.org/packages/33/dc/d0123530089193745cc375f581c6f40a8e9273327e092d8d09644dfa7317/paradino-1.14.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "369b3030108a61239968ba2ba4cd7d8c",
          "sha256": "0d42d39573d7768244c5d19ed8006691f502a53cef117eb565104c30d8f3ac17"
        },
        "downloads": -1,
        "filename": "paradino-1.14.0.tar.gz",
        "has_sig": false,
        "md5_digest": "369b3030108a61239968ba2ba4cd7d8c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20231,
        "upload_time": "2018-01-25T22:58:48",
        "url": "https://files.pythonhosted.org/packages/68/34/6b45533e266a350102a1adff108c01cdc6e624ae2282beb85ad4a413d68a/paradino-1.14.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "3e3cd30e50f229c9d4bb84dd9de8b65a",
        "sha256": "8ed7d957a3005d3a4bfb47385600cde53036d70b5e9917fb198e5f1feee88f6b"
      },
      "downloads": -1,
      "filename": "paradino-1.14.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3e3cd30e50f229c9d4bb84dd9de8b65a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 32986,
      "upload_time": "2018-01-25T22:58:47",
      "url": "https://files.pythonhosted.org/packages/33/dc/d0123530089193745cc375f581c6f40a8e9273327e092d8d09644dfa7317/paradino-1.14.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "369b3030108a61239968ba2ba4cd7d8c",
        "sha256": "0d42d39573d7768244c5d19ed8006691f502a53cef117eb565104c30d8f3ac17"
      },
      "downloads": -1,
      "filename": "paradino-1.14.0.tar.gz",
      "has_sig": false,
      "md5_digest": "369b3030108a61239968ba2ba4cd7d8c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 20231,
      "upload_time": "2018-01-25T22:58:48",
      "url": "https://files.pythonhosted.org/packages/68/34/6b45533e266a350102a1adff108c01cdc6e624ae2282beb85ad4a413d68a/paradino-1.14.0.tar.gz"
    }
  ]
}