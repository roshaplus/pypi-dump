{
  "info": {
    "author": "Ruben van Staden",
    "author_email": "rubenvanstaden@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Manufacturing",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved",
      "Operating System :: OS Independent",
      "Programming Language :: C",
      "Programming Language :: C++",
      "Programming Language :: Python",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
    ],
    "description": "# gdsyuna README\n\n[![Boost Software License - Version 1.0](https://img.shields.io/github/license/heitzmann/gdsyuna.svg)](http://www.boost.org/LICENSE_1_0.txt)\n[![Documentation Status](https://readthedocs.org/projects/gdsyuna/badge/?version=latest)](http://gdsyuna.readthedocs.io/en/latest/?badge=latest)\n[![Travis-CI Status](https://travis-ci.org/heitzmann/gdsyuna.svg?branch=master)](https://travis-ci.org/heitzmann/gdsyuna)\n[![Appveyor Status](https://ci.appveyor.com/api/projects/status/pr49a6bhxvbqwocy?svg=true)](https://ci.appveyor.com/project/heitzmann/gdsyuna)\n[![Downloads](https://img.shields.io/github/downloads/heitzmann/gdsyuna/total.svg)](https://github.com/heitzmann/gdsyuna/releases)\n\ngdsyuna is a Python  module for creating/importing/merging GDSII stream files.\nIt includes key libraries for creating complex CAD layouts:\n\n* Boolean operations on polygons (AND, OR, NOT, XOR) based on clipping algorithm\n* Polygon offset (inward and outward rescaling of polygons)\n* Efficient point-in-polygon solutions for large array sets\n\ngdsyuna also includes a simple layout viewer.\n\nTypical applications of gdsyuna are in the fields of electronic chip design, planar lightwave circuit design, and mechanical engineering.\n\n## Installation\n\n### Dependencies:\n\n* [Python](http://www.python.org/) (tested with versions 2.7, 3.4, 3.5, and 3.6)\n* [Numpy](http://numpy.scipy.org/)\n* [Python-future](http://python-future.org/) (only for Python 2)\n* C compiler (needed only if built from source)\n\n### Linux / OS X\n\nOption 1: using [pip](https://docs.python.org/3/installing/):\n\n```sh\npip install gdsyuna\n```\n\nOption 2: download the source from [github](https://github.com/heitzmann/gdsyuna) and build/install with:\n\n```sh\npython setup.py install\n```\n\n### Windows\n\nThe preferred option is to install pre-compiled binaries from [here](https://github.com/heitzmann/gdsyuna/releases).\n\nInstallation via `pip` and building from source as above are also possible, but an appropriate [build environment](https://wiki.python.org/moin/WindowsCompilers) is required for compilation of the C extension modules.\n\n## Documentation\n\nThe complete [documentation](http://gdsyuna.readthedocs.io/en/latest/) can be built from the sources in the `docs` folder with [Sphinx](http://sphinx-doc.org/).\n\nThe file [tutorial.py](https://github.com/heitzmann/gdsyuna/blob/master/examples/tutorial.py) in the `example` folder is a sample script to show the features provided by this module.\n\n## Support\n\nHelp support gdsyuna development by [donating via PayPal](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=JD2EUE2WPPBQQ)\n\n## History of changes\n\n### Version 1.2.1 (Dec 5, 2017)\n* `GdsLibrary` can be created directly from a GDSII file\n* Added return value to `GdsLibrary.read_gds`\n* Fix return value of `GdsLibrary.add`\n\n### Version 1.2 (Oct 21, 2017)\n* Added new `gdsii_hash` function.\n* Added `precision` parameter to `_chop`, `Polygon.fracture`, `Polygon.fillet`, `PolygonSet.fracture`, `PolygonSet.fillet`, and `slice`.\n* Included labels in flatten operations (added `get_labels` to `Cell`, `CellReference`, and `CellArray`).\n* Fixed bug in the bounding box cache of reference copies.\n* Fixed bug in `_chop` that affected `Polygon.fracture`, `PolygonSet.fracture`, and `slice`.\n* Other minor bug fixes.\n\n### Version 1.1.2 (Mar 19, 2017)\n* Update clipper library to 6.4.2 to fix bugs introduced in the last update.\n* License change to Boost Software License v1.0.\n\n### Version 1.1.1 (Jan 27, 2017)\n* Patch to fix installation issue (missing README file in zip).\n\n### Version 1.1 (Jan 20, 2017)\n* Introduction of `GdsLibrary` to allow user to work with multiple library simultaneously.\n* Deprecated `GdsImport` in favor of `GdsLibrary`.\n* Renamed `gds_print` to `write_gds` and `GdsPrint` to `GdsWriter`.\n* Development changed to Python 3 (Python 2 supported via [python-future](http://python-future.org/)).\n* Added photonics example.\n* Added test suite.\n* Clipper library updated to last version.\n* Fixed `inside` function sometimes reversing the order of the output.\n* Fixed rounding error in `fast_boolean`.\n* Fixed argument `deep_copy` being inverted in `Cell.copy`.\n* Bug fixes introduced by numpy (thanks to Adam McCaughan for the contribution).\n\n### Version 1.0 (Sep 11, 2016)\n* Changed to \"new style\" classes (thanks to Adam McCaughan for the contribution).\n* Added\ta per-point radius specification for `Polygon.fillet` (thanks to Adam McCaughan for the contribution).\n* Added `inside` fucntion to perform point-in-polygon tests (thanks to @okianus for the contribution).\n* Moved from distutils to setuptools for better Windows support.\n\n### Version 0.9 (Jul 17, 2016)\n* Added option to join polygons before applying an `offset`.\n* Added a `translate` method to geometric entities (thanks John Bell for the commit).\n* Bug fixes.\n\n### Version 0.8.1 (May 6, 2016)\n* New `fast_boolean` function based on the [Clipper](http://www.angusj.com/delphi/clipper.php) library with much better performance than the old `boolean`.\n* Changed `offset` signature to also use the [Clipper](http://www.angusj.com/delphi/clipper.php) library (this change **breaks compatibility** with previous versions).\n* Bug fix for error when importing some labels from GDSII files.\n\n### Version 0.7.1 (June 26, 2015)\n* Rebased to GitHub.\n* Changed source structure and documentation.\n\n### Version 0.7 (June 12, 2015)\n* New feature: `offset` function.\n* New `GdsPrint` class for incremental GDSII creation (thanks to Jack Sankey for the contribution).\n\n### Version 0.6 (March 31, 2014)\n* Default number of points for `Round`, `Path.arc`, and `Path.turn` changed to resolution of 0.01 drawing units.\n* `Path.parametric` accepts callable `final_distance` and `final_width` for non-linear tapering.\n* Added argument `ends` to `PolyPath`.\n* Added (limited) support for PATHTYPE in `GdsImport`.\n* A warning is issued when a `Path` curve has width larger than twice its radius (self-intersecting polygon).\n* Added a random offset to the patterns in `LayoutViewer`.\n* `LayoutViewer` shows cell labels for referenced cells.\n* `get_polygons` returns (referenced) cell name if `depth` < 1 and `by_spec` is True.\n* Bug fix in `get_bounding_box` when empty cells are referenced.\n* Bug fixes in `GdsImport` and many speed improvements in bounding box calculations (thanks to Gene Hilton for the patch).\n\n### Version 0.5 (October 30, 2013) - NOT COMPATIBLE WITH PREVIOUS VERSIONS\n* Major `LayoutViewer` improvements (not backwards compatible).\n* The layer argument has been repositioned in the argument list in all functions (not backwards compatible).  \n* Renamed argument `by_layer` to `by_spec` (not backwards compatible).\n* Error is raised for polygons with more vertices than possible in the GDSII format.\n* Removed the global state variable for default datatype.\n* Added `get_datatypes` to `Cell`.\n* Added argument `single_datatype` to `Cell.flatten`.\n* Removed `gds_image` and dropped the optional PIL dependency.\n\n### Version 0.4.1 (June 5, 2013)\n* Added argument `axis_offset` to `Path.segment` allowing creation of asymmetric tapers.\n* Added missing argument  `x_reflection` to `Label`.\n* Created a global state variable to override the default datatype.\n* Bug fix in `CellArray.get_bounding_box` (thanks to George McLean for the fix)\n\n### Version 0.4 (October 25, 2012)\n* `Cell.get_bounding_box` returns `None` for empty cells.\n* Added a cache for bounding boxes for faster computation, especially for references.\n* Added support for text elements with `Label` class.\n* Improved the emission of warnings.\n* Added a tolerance parameter to `boolean`.\n* Added better print descriptions to classes.\n* Bug fixes in boolean involving results with multiple holes.\n\n### Version 0.3.1 (May 24, 2012)\n* Bug fix in the fracture method for `PolygonSet`.\n\n### Version 0.3a (May 03, 2012)\n* Bug fix in the fracture method for `Polygon` and `PolygonSet`.\n\n### Version 0.3 (April 25, 2012)\n* Support for Python 3.2 and 2.7 \n* Further improvements to the `boolean` function via caching.  \n* Added methods `get_bounding_box` and `get_layers` to `Cell`.\n* Added method `top_level` to `GdsImport`.\n* Added support for importing GDSII path elements.\n* Added an argument to control the verbosity of the import function.\n* Layer -1 (referenced cells) sent to the bottom of the layer list by default in `LayoutViewer`\n* The text and background of the layer list in `LayoutViewer` now reflect the colors of the outlines and canvas backgroung.\n* Changed default background color in `LayoutViewer`\n* Thanks to Gene Hilton for the contributions!\n\n### Version 0.2.9 (December 14, 2011)\n* Attribute `Cell.cell_list` changed to `Cell.cell_dict`.\n* Changed the signature of the operation in `boolean`.\n* Order of cells passed to `LayoutViewer` is now respected in the GUI.\n* Complete re-implementation of the boolean function as a C extension for improved performance.\n* Removed precision argument in `boolean`. It is fixed at 1e-13 for merging close points, otherwise machine precision is used.\n* `gds_image` now accepts cell names as input.\n* Added optional argument `depth` to `get_polygons`\n* Added option to convert layers and datatypes in imported GDSII cells.\n* Argument `exclude_layers` from `LayoutViewer` changed to `hidden_layers` and behavior changed accordingly. \n* Shift + Right-clicking on a layer the layer-list of `LayoutVIewer` hides/unhides all other layers.\n* New buttons to zoom in and out in `LayoutViewer`.\n* Referenced cells below a configurable depth are now represented by theirs bounding boxes in `LayoutViewer`.\n\n### Version 0.2.8 (June 21, 2011)\n* GDSII file import\n* GDSII output automatically include required referenced cells.\n* `gds_print` also accepts file name as input.\n* Outlines are visible by default in `LayoutViewer`.\n* Added background color option in `LayoutViewer`.\n* Right-clicking on the layer list hides/unhides the target layer in `LayoutViewer`.\n* `Cell.cell_list` is now a dictionary indexed by name, instead of a list.\n* Added option to exclude created cells from the global list of cells kept in `Cell.cell_list`.\n* `CellReference` and `CellArray` accept name of cells as input.\n* Submodules lost their own `__version__`.\n\n### Version 0.2.7 (April 2, 2011)\n* Bug fixed in the `boolean`, which affected the way polygons with more vertices then the maximum were fractured.\n* `gds_image` accepts an extra color argument for the image background.\n* Screenshots takes from `LayoutViewer` have the same background color as the viewer.\n* The functions `boolean` and `slice` now also accept `CellReference` and `CellArray` as input.\n* Added the method `fracture` to `Polygon` and `PolygonSet` to automatically slice polygons into parts with a predefined maximal number of vertices.\n* Added the method `fillet` to `Polygon` and `PolygonSet` to round corners of polygons.\n\n### Version 0.2.6 (February 28, 2011)\n* When saving a GDSII file, `ValueError` is raised if cell names are duplicated.\n* Save screenshot from `LayoutViewer`.\n* `gds_image` accepts cells, instead of lists.\n* Outlines supported by `gds_image`.\n* `LayoutViewer` stores bounding box information for all visited layers to save rendering time.\n\n### Version 0.2.5 (December 10, 2010)\n* Empty cells no longer break the LayoutViewer.\n* Removed the `gds_view` function, superseded by the LayoutViewer, along with all dependencies to matplotlib.\n* Fixed a bug in `boolean` which affected polygons with series of collinear vertices.\n* Added a function to `slice` polygons along straight lines parallel to an axis.\n\n### Version 0.2.4 (September 04, 2010)\n* Added shortcut to Extents in LayoutViewer: `Home` or `a` keys.\n* `PolygonSet` is the new base class for `Round`, which might bring some incompatibility issues with older scripts.\n* `Round` elements, `PolyPath`, `L1Path`, and `Path arc`, `turn` and `parametric` sections are now automatically fractured into pieces defined by a maximal number of points.\n* Default value for `max_points` in boolean changed to 199.\n* Removed the flag to disable the warning about polygons with more than 199 vertices.  The warning is shown only for `Polygon` and `PolygonSet`.\n* Fixed a bug impeding parallel `parametric` paths to change their distance to each other.\n\n### Version 0.2.3 (August 09, 2010)\n* Added the `PolyPath` class to easily create paths with sharp corners.\n* Allow `None` as item in the colors parameter of `LayoutViewer` to make layers invisible.\n* Added color outline mode to `LayoutViewer` (change outline color with the shift key pressed)\n* Increased the scroll region of the `LayoutViewer` canvas\n* Added a fast scroll mode: control + drag 2nd mouse button\n* Created a new sample script\n\n### Version 0.2.2 (July 29, 2010)\n* Changed the cursor inside `LayoutViewer` to standard arrow.\n* Fixed bugs with the windows version of `LayoutViewer` (mouse wheel and ruler tool).\n\n### Version 0.2.1 (July 29, 2010)\n* Bug fix: `gds_image` displays an error message instead of crashing when `PIL` is not found.\n* Added class `LayoutViewer`, which uses Tkinter (included in all Python distributions) to display the GDSII layout with better controls then the `gds_view` function. This eliminates the `matplotlib` requirement for the viewer functionality.\n* New layer colors extending layers 0 to 63.\n\n### Version 0.2.0 (July 19, 2010)\n* Fixed a bug on the `turn` method of `Path`.\n* Fixed a bug on the `boolean` function that would give an error when not using `Polygon` or `PolygonSet` as input objects.\n* Added the method `get_polygons` to `Cell`, `CellReference` and `CellArray`.\n* Added a copy method to `Cell`.\n* Added a `flatten` method to `Cell` to remove references (or array references) to other cells.\n* Fracture `boolean` output polygons based on the number of vertices to respect the 199 GDSII limit.  \n\n### Version 0.1.9 (June 04, 2010)\n* Added `L1Path` class for Manhattan geometry (L1 norm) paths.\n\n### Version 0.1.8 (May 10, 2010)\n* Removed the argument `fill` from `gds_view` and added a more flexible one: `style`.\n* Fixed a rounding error on the `boolean` operator affecting polygons with holes.\n* Added a rotate method to `PolygonSet`.\n* Added a warning when `PolygonSet` has more than 199 points\n* Added a flag to disable the warning about polygons with more than 199 points.\n* Added a `turn` method to `Path`, which is easier to use than `arc`.\n* Added a direction attribute to `Path` to keep the information used by the `segment` and `turn` methods.\n\n### Version 0.1.7 (April 12, 2010)\n* New visualization option: save the geometry directly to an image file (lower memory use).\n* New functionality added: boolean operations on polygons (polygon clipping).\n* All classes were adapted to work with the boolean operations.\n* The attribute size in the initializer of class `Text` does not have a default value any longer.\n* The name of the argument `format` in the function `gds_view` was changed to `fill` (to avoid confusion with the built-in function `format`).\n\n### Version 0.1.6 (December 15,  2009)\n* Sample script now include comments and creates an easier to understand GDSII example.\n* Improved floating point to integer rounding, which fixes the unit errors at the last digit of the precision in the GDSII file.\n* Fixed the font for character 5.\n* Added a flag to `gds_view` to avoid the automatic call to `matplotlib.pyplot.show()`.\n* In `gds_view`, if a layer number is greater than the number of formats defined, the formats are cycled.\n\n### Version 0.1.5a (November 15, 2009)\n* Class Text correctly interprets `\\n` and `\\t` characters.\n* Better documentation format, using the Sphinx engine and the numpy format.\n\n### Version 0.1.4 (October 5, 2009)\n* Class `Text` re-written with a different font with no overlaps and correct size.\n\n### Version 0.1.3a (July 29 2009)\n* Fixed the function `to_gds` of class `Rectangle`.\n\n### Version 0.1.3 (July 27, 2009)\n* Added the datatype field to all elements of the GDSII structure.\n\n### Version 0.1.2 (July 11, 2009)\n* Added the `gds_view` function to display the GDSII structure using the matplotlib module.\n* Fixed a rotation bug in the CellArray class.\n* Module published under the GNU General Public License (GPL)\n\n### Version 0.1.1 (May 12, 2009)\n* Added attribute `cell_list` to class Cell to hold a list of all Cell created.\n* Set the default argument `cells=Cell.cell_list` in the function `gds_print`.\n* Added member to calculate the area for each element type.\n* Added member to calculate the total area of a Cell or the area by layer.\n* Included the possibility of creating objects in user-defined units, not only nanometers.\n\n### Version 0.1.0 (May 1, 2009)\n* Initial release.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/rubenvanstaden/gdsyuna",
    "keywords": "GDSII CAD layout",
    "license": "Boost Software License v1.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gdsyuna",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/gdsyuna/",
    "release_url": "https://pypi.org/project/gdsyuna/0.0.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Python module for creating/importing/merging GDSII files.",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5d8ea64f54599da3bd8ac6c8eac3ee78",
          "sha256": "88e10db1aafd4f9b2fc67fb83afa36b34dfbc1df5a4bafbc8b79c104c12ce4e5"
        },
        "downloads": -1,
        "filename": "gdsyuna-0.0.1-py2.7-macosx-10.12-intel.egg",
        "has_sig": false,
        "md5_digest": "5d8ea64f54599da3bd8ac6c8eac3ee78",
        "packagetype": "bdist_egg",
        "python_version": "2.7",
        "size": 407081,
        "upload_time": "2018-01-03T14:35:26",
        "url": "https://files.pythonhosted.org/packages/f4/b7/b85a2cd2fa5b8bdf6669bb8caf1898304099abf13b9199b4fedd4697e46b/gdsyuna-0.0.1-py2.7-macosx-10.12-intel.egg"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b0366d0d9f38dae3550660b3282930e9",
          "sha256": "c78f2165969469c6b3e8ffcc918233e843f1d9ff9b1846f7396953ea11112c65"
        },
        "downloads": -1,
        "filename": "gdsyuna-0.0.2-py2.7-macosx-10.12-intel.egg",
        "has_sig": false,
        "md5_digest": "b0366d0d9f38dae3550660b3282930e9",
        "packagetype": "bdist_egg",
        "python_version": "2.7",
        "size": 407086,
        "upload_time": "2018-01-03T14:52:27",
        "url": "https://files.pythonhosted.org/packages/af/c3/8633fea01a328ff05f8af6f588a2a32a5e28b55d9d124fd1648a7a885171/gdsyuna-0.0.2-py2.7-macosx-10.12-intel.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b0ea1342e2e4c26d85ec71375fb4cdfb",
          "sha256": "5db79007ea9493d8f4d520bce1ba0fc68b75f8a742469d453e18c8fc98e7eb0c"
        },
        "downloads": -1,
        "filename": "gdsyuna-0.0.2.zip",
        "has_sig": false,
        "md5_digest": "b0ea1342e2e4c26d85ec71375fb4cdfb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 120130,
        "upload_time": "2018-01-03T14:58:44",
        "url": "https://files.pythonhosted.org/packages/f0/82/aa1d0faaaede4daf2f37d89ce8d7865807f00ae46ca495b6f1df9791b20c/gdsyuna-0.0.2.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b0366d0d9f38dae3550660b3282930e9",
        "sha256": "c78f2165969469c6b3e8ffcc918233e843f1d9ff9b1846f7396953ea11112c65"
      },
      "downloads": -1,
      "filename": "gdsyuna-0.0.2-py2.7-macosx-10.12-intel.egg",
      "has_sig": false,
      "md5_digest": "b0366d0d9f38dae3550660b3282930e9",
      "packagetype": "bdist_egg",
      "python_version": "2.7",
      "size": 407086,
      "upload_time": "2018-01-03T14:52:27",
      "url": "https://files.pythonhosted.org/packages/af/c3/8633fea01a328ff05f8af6f588a2a32a5e28b55d9d124fd1648a7a885171/gdsyuna-0.0.2-py2.7-macosx-10.12-intel.egg"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "b0ea1342e2e4c26d85ec71375fb4cdfb",
        "sha256": "5db79007ea9493d8f4d520bce1ba0fc68b75f8a742469d453e18c8fc98e7eb0c"
      },
      "downloads": -1,
      "filename": "gdsyuna-0.0.2.zip",
      "has_sig": false,
      "md5_digest": "b0ea1342e2e4c26d85ec71375fb4cdfb",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 120130,
      "upload_time": "2018-01-03T14:58:44",
      "url": "https://files.pythonhosted.org/packages/f0/82/aa1d0faaaede4daf2f37d89ce8d7865807f00ae46ca495b6f1df9791b20c/gdsyuna-0.0.2.zip"
    }
  ]
}