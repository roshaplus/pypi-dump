{
  "info": {
    "author": "Shinya Takamaeda-Yamazaki",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "IPgen\n=====\n\nIP-core package generator for AXI4/Avalon\n\nCopyright (C) 2015, Shinya Takamaeda-Yamazaki\n\nE-mail: takamaeda\\_at\\_ist.hokudai.ac.jp\n\nLicense\n=======\n\nApache License 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n\nWhat's IPgen?\n=============\n\nIPgen is a lightweight IP-core package synthesizer from abstract RTL\nsources. You can implement both AXI4 and Avalon IP-core by using the\nprovided abstract interfaces.\n\n-  ipgen\\_master\\_memory: memory-mapped access interface (master)\n-  ipgen\\_slave\\_memory: memory-mapped access interface (slave)\n-  ipgen\\_master\\_lite\\_memory: memory-mapped access lite interface\n   (master)\n-  ipgen\\_slave\\_lite\\_memory: memory-mapped access lite interface\n   (slave)\n\nInstallation\n============\n\nRequirements\n------------\n\n-  Python: 2.7, 3.4 or later\n\nPython3 is recommended.\n\n-  Icarus Verilog: 0.9.7 or later\n\nInstall on your platform. For exmple, on Ubuntu:\n\n::\n\n    sudo apt-get install iverilog\n\n-  Jinja2: 2.8 or later\n-  pytest: 2.8.2 or later\n-  pytest-pythonpath: 0.7 or later\n\nInstall on your python environment by using pip.\n\n::\n\n    pip install jinja2 pytest pytest-pythonpath\n\n-  Pyverilog: 1.0.7 or later\n\nInstall from pip:\n\n::\n\n    pip install pyverilog\n\nInstall\n-------\n\nInstall IPgen.\n\n::\n\n    python setup.py install\n\nGetting Started\n===============\n\nYou can use the ipgen command from your console.\n\n::\n\n    ipgen\n\nYou can find the sample projects in 'tests'. Now let's see\n'tests/memcpy'. There is an input source code.\n\n-  userlogic.v : User-defined Verilog code using IPgen abstract memory\n   interfaces\n\nThen type 'make' and 'make run' to simulate sample system.\n\n::\n\n    make build\n    make sim\n\nOr type commands as below directly.\n\n::\n\n    ipgen default.config -t userlogic -I include tests/memcpyuserlogic.v\n    iverilog -I ipen_userlogic_v1_00_a/hdl/verilog/ ipgen_userlogic_v1_00_a/test/test_ipgen_userlogic.v \n    ./a.out\n\nIPgen compiler generates a directory for IP-core\n(ipgen\\_userlogic\\_v1\\_00\\_a, in this example).\n\n'ipgen\\_userlogic\\_v1\\_00\\_a.v' includes - IP-core RTL design\n(hdl/verilog/ipgen\\_userlogic.v) - Test bench\n(test/test\\_ipgen\\_userlogic.v) - XPS setting files\n(ipgen\\_userlogic\\_v2\\_1\\_0.{mpd,pao,tcl}) - IP-XACT file\n(component.xml)\n\nA bit-stream can be synthesized by using Xilinx Platform Studio, Xilinx\nVivado, and Altera Qsys. In case of XPS, please copy the generated\nIP-core into 'pcores' directory of XPS project.\n\nIPgen Command Options\n=====================\n\nCommand\n-------\n\n::\n\n    ipgen [config] [-t topmodule] [-I includepath]+ [--memimg=filename] [--usertest=filename] [file]+\n\nDescription\n-----------\n\n-  file\n\n   -  User-logic Verilog file (.v) and FPGA system memory specification\n      (.config). Automatically, .v file is recognized as a user-logic\n      Verilog file, and .config file recongnized as a memory\n      specification of used FPGA system, respectively.\n\n-  config\n\n   -  Configuration file which includes memory and device specification\n\n-  -t\n\n   -  Name of user-defined top module, default is \"userlogic\".\n\n-  -I\n\n   -  Include path for input Verilog HDL files.\n\n-  --memimg\n\n   -  DRAM image file in HEX DRAM (option, if you need). The file is\n      copied into test directory. If no file is assigned, the array is\n      initialized with incremental values.\n\n-  --usertest\n\n   -  User-defined test code file (option, if you need). The code is\n      copied into testbench script.\n\nRelated Project\n===============\n\n`Pyverilog <https://github.com/PyHDI/Pyverilog>`__ - Python-based\nHardware Design Processing Toolkit for Verilog HDL",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/PyHDI/ipgen",
    "keywords": "FPGA,Verilog HDL,IP-core,AMBA AXI4,Avalon",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ipgen",
    "platform": "",
    "project_url": "https://pypi.org/project/ipgen/",
    "release_url": "https://pypi.org/project/ipgen/0.2.1/",
    "requires_python": "",
    "summary": "IP-core package generator for AXI4/Avalon",
    "version": "0.2.1"
  },
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b6593d477f7d7a9e268428fb900a6f91",
          "sha256": "b24fd4206d181ae18b8250e0e27c440059adaff66dc2f45386f6c19d924d2459"
        },
        "downloads": 1083,
        "filename": "ipgen-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b6593d477f7d7a9e268428fb900a6f91",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 657348,
        "upload_time": "2015-11-06T03:23:40",
        "url": "https://files.pythonhosted.org/packages/d7/00/69c2f3e93324d460b11d9ac99d89fab5460c8a00892f58b40d68474fdfae/ipgen-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "14c4b35e73bb7f10daf30c752d52be4d",
          "sha256": "273010856acc6224a07946f2d3faa0051b48a09a2bdcadfc7f3a6c1e47856c89"
        },
        "downloads": 198,
        "filename": "ipgen-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "14c4b35e73bb7f10daf30c752d52be4d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 656992,
        "upload_time": "2017-04-07T12:50:14",
        "url": "https://files.pythonhosted.org/packages/d1/20/b1d5c555d964c84757fe1d77eb10e519c26ffffd4cc5cc26674328f6c491/ipgen-0.2.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "14c4b35e73bb7f10daf30c752d52be4d",
        "sha256": "273010856acc6224a07946f2d3faa0051b48a09a2bdcadfc7f3a6c1e47856c89"
      },
      "downloads": 198,
      "filename": "ipgen-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "14c4b35e73bb7f10daf30c752d52be4d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 656992,
      "upload_time": "2017-04-07T12:50:14",
      "url": "https://files.pythonhosted.org/packages/d1/20/b1d5c555d964c84757fe1d77eb10e519c26ffffd4cc5cc26674328f6c491/ipgen-0.2.1.tar.gz"
    }
  ]
}