{
  "info": {
    "author": "Shmuel Amar",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# CBOX - CLI ToolBox\n\nsimply create unix-style commands that handles pipes from your python functions.\n\n\n## Features\n* __supports pipes__\n* __concurrency (currently only threading)__\n* __supports multiple types of pipe processing (lines, chars..)__\n* __automatic docstring parsing for description and arguments help__\n* __automatic type annotation and defaults parsing__\n* __bash tab-completion__\n* __MIT license__\n* __supports only python3__ (yes this is a feature)\n\n## Quickstart\n\n\n```python\n#!/usr/bin/env python3\n# hello.py\nimport cbox\n\n@cbox.cmd\ndef hello(name: str):\n    \"\"\"greets a person by its name.\n\n    :param name: the name of the person\n    \"\"\"\n    print(f'hello {name}!')\n\nif __name__ == '__main__':\n    cbox.main(hello)\n```\n\nrun it:\n\n```bash\n$ ./hello.py --name world\nhello world!\n\n$ ./hello.py --help\nusage: hello.py [-h] --name NAME\n\ngreets a person by its name.\n\noptional arguments:\n  -h, --help   show this help message and exit\n  --name NAME  the name of the person\n```\n\n## The Story\nonce upon a time, a python programmer named dave, had a simple text file. \n\n**langs.txt**\n```text\npython http://python.org\nlisp http://lisp-lang.org\nruby http://ruby-lang.org\n```\n\nall dave wanted is to get the list of languages from that file.\n\nour dave heard that unix commands are the best, so he started googling them out.\n\nhe started reading about *awk*, *grep*, *sed*, *tr*, *cut* and others but couldn't \nremember how to use all of them - after all he is a python programmer and wants to use python.\n\nfortunately, our little dave found out about **`cbox`** - a simple way to convert \nany python function into unix-style command line!\n\nnow dave can process files using python easily!\n\n### simple example\n```python\n#!/usr/bin/env python3\n# first.py\nimport cbox\n\n@cbox.stream()\ndef first(line):\n    return line.split()[0]\n\nif __name__ == '__main__':\n    cbox.main(first)\n```\n\nrunning it:\n\n```bash\n$ cat langs.txt | ./first.py \npython\nlisp\nruby\n```\n\nnow dave is satisfied, so like every satisfied programmer - he wants more!\n\ndave now wants to get a list of the langs urls.\n\n### arguments and help message\n\n```python\n#!/usr/bin/env python3\n# nth-item.py\nimport cbox\n\n@cbox.stream()\n# we can pass default values and use type annotations for correct types\ndef nth_item(line, n: int = 0):\n    \"\"\"returns the nth item from each line.\n\n    :param n: the number of item position starting from 0\n    \"\"\"\n    return line.split()[n]\n\nif __name__ == '__main__':\n    cbox.main(nth_item)\n```\n\nrunning it:\n\n```bash\n#!/usr/bin/env python3\n$ ./nth-item.py --help\nusage: nth-item.py [-h] [-n N]\n\nreturns the nth item from each line.\n\noptional arguments:\n  -h, --help  show this help message and exit\n  -n N        the number of item position starting from 0\n```\n\n```bash\n$ cat langs.txt | ./nth-item.py \npython\nlisp\nruby\n```\n\n```bash\n$ cat langs.txt | ./nth-item.py -n 1\nhttp://python.org\nhttp://lisp-lang.org\nhttp://ruby-lang.org\n```\n\nnow dave wants to get the status out of each url, for this we can use `requests`.\n\nbut to process a large list it will take too long, so he better off use threads.\n\n### threading example\n\n```python\n#!/usr/bin/env python3\n# url-status.py\nimport cbox\nimport requests\n\n@cbox.stream(worker_type='thread', max_workers=4)\ndef url_status(line):\n    resp = requests.get(line)\n    return f'{line} - {resp.status_code}'\n\nif __name__ == '__main__':\n    cbox.main(url_status)\n```\n\nrunning it:\n\n```bash\n$ cat langs.txt | ./nth-line.py -n 1 | ./url-status.py \nhttp://python.org - 200\nhttp://lisp-lang.org - 200\nhttp://ruby-lang.org - 200\n```\n\n\n__more examples can be found on `examples/` dir__\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/shmuelamar/cbox",
    "keywords": "unix command pipes cli",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cbox",
    "platform": "",
    "project_url": "https://pypi.org/project/cbox/",
    "release_url": "https://pypi.org/project/cbox/0.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "create unix-style commands from your python functions.",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "076145495b4c3e61f921328c62d81457",
          "sha256": "3ec19a3d91b4471f50a0c21533be2de0b387fd13bbd81e7beedd50c15abcb281"
        },
        "downloads": 0,
        "filename": "cbox-0.1.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "076145495b4c3e61f921328c62d81457",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 9709,
        "upload_time": "2017-08-31T00:04:44",
        "url": "https://files.pythonhosted.org/packages/0a/a7/d76586cfde39ab9c056e0ada064465d853b5fc1b7cabb83e22e99452476a/cbox-0.1.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7b0494bd484d2142512e1ebb614e3c41",
          "sha256": "79ca45303be9defaa0a2bfc4d0c95e62038e6341d695dcb2f0ebdf3602f3da28"
        },
        "downloads": 0,
        "filename": "cbox-0.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "7b0494bd484d2142512e1ebb614e3c41",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7363,
        "upload_time": "2017-08-31T00:05:19",
        "url": "https://files.pythonhosted.org/packages/a8/d7/e2f870ffc387c8ad6e7bfad0d0856bedd88907351a5b4c1f31853a5de039/cbox-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "076145495b4c3e61f921328c62d81457",
        "sha256": "3ec19a3d91b4471f50a0c21533be2de0b387fd13bbd81e7beedd50c15abcb281"
      },
      "downloads": 0,
      "filename": "cbox-0.1.0-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "076145495b4c3e61f921328c62d81457",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 9709,
      "upload_time": "2017-08-31T00:04:44",
      "url": "https://files.pythonhosted.org/packages/0a/a7/d76586cfde39ab9c056e0ada064465d853b5fc1b7cabb83e22e99452476a/cbox-0.1.0-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "7b0494bd484d2142512e1ebb614e3c41",
        "sha256": "79ca45303be9defaa0a2bfc4d0c95e62038e6341d695dcb2f0ebdf3602f3da28"
      },
      "downloads": 0,
      "filename": "cbox-0.1.0.tar.gz",
      "has_sig": true,
      "md5_digest": "7b0494bd484d2142512e1ebb614e3c41",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7363,
      "upload_time": "2017-08-31T00:05:19",
      "url": "https://files.pythonhosted.org/packages/a8/d7/e2f870ffc387c8ad6e7bfad0d0856bedd88907351a5b4c1f31853a5de039/cbox-0.1.0.tar.gz"
    }
  ]
}