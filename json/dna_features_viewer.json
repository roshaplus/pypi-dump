{
  "info": {
    "author": "Zulko",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Dna Features Viewer\n====================\n\n.. image:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/docs/title.png\n    :align: center\n\n.. image:: https://travis-ci.org/Edinburgh-Genome-Foundry/DnaFeaturesViewer.svg?branch=master\n   :target: https://travis-ci.org/Edinburgh-Genome-Foundry/DnaFeaturesViewer\n   :alt: Travis CI build status\n\n\nDna Features Viewer is a Python library to (wait for it...) visualize DNA\nfeatures, e.g. from GenBank or Gff files, using the plotting library Matplotlib:\n\n.. figure:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/by_hand.png\n    :align: center\n\nDna Features Viewer is meant to automatically produce simple and clear plots even\nfor sequences with lots of overlapping features and long labels.\nThe plots can be output to many different formats (PNG, JPEG, SVG, PDF), e.g.\nfor report generation or LIMS interfaces.\n\n\nLicense\n---------\n\nDna Features Viewer is an open-source software originally written at the `Edinburgh Genome Foundry\n<http://edinburgh-genome-foundry.github.io/home.html>`_ by `Zulko <https://github.com/Zulko>`_\nand `released on Github <https://github.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer>`_ under the MIT licence.\nEveryone is welcome to contribute !\n\nInstallation\n--------------\n\nIf you have PIP installed, just type in a terminal:\n\n.. code:: python\n\n    (sudo) pip install dna_features_viewer\n\nDna Features Viewer can be installed by unzipping the source code in one directory and using this command:\n\n.. code:: python\n\n    sudo python setup.py install\n\n\n\nExamples of use\n----------------\n\n\nBasic plots\n~~~~~~~~~~~~\n\nIn this first example we define features \"by hand\":\n\n.. code:: python\n\n    from dna_features_viewer import GraphicFeature, GraphicRecord\n    features=[\n        GraphicFeature(start=0, end=20, strand=+1, color=\"#ffd700\",\n                       label=\"Small feature\"),\n        GraphicFeature(start=20, end=500, strand=+1, color=\"#ffcccc\",\n                       label=\"Gene 1 with a very long name\"),\n        GraphicFeature(start=400, end=700, strand=-1, color=\"#cffccc\",\n                       label=\"Gene 2\"),\n        GraphicFeature(start=600, end=900, strand=+1, color=\"#ccccff\",\n                       label=\"Gene 3\")\n    ]\n    record = GraphicRecord(sequence_length=1000, features=features)\n    record.plot(figure_width=5)\n\n.. figure:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/by_hand.png\n    :align: center\n\n\nIf we replace `GraphicRecord` by `CircularGraphicRecord` in the code above we obtain\na circular plot of the construct:\n\n.. figure:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/by_hand_circular.png\n    :align: center\n\nIt is also possible to generate interactive (browser-based) plots by using ``plot_with_bokeh`` instead of ``plot``:\n\n.. figure:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/plot_with_bokeh.png\n    :align: center\n\n\nReading the features from a GenBank file\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDnaFeaturesViewer plays nice with BioPython. As a result it is super easy to plot the content of a Biopython record or directly a GenBank file:\n\n.. code:: python\n\n    from dna_features_viewer import BiopythonTranslator\n    graphic_record = BiopythonTranslator().translate_record(\"my_sequence.gb\")\n    ax, _ = graphic_record.plot(figure_width=10)\n\n.. figure:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/from_genbank.png\n    :align: center\n\nThe class ``BiopythonTranslator`` determines how the genbank information is transformed into graphical features.\nIt enables to chose which categories of features to plot, the color of the different features.\n\nDisplaying the features along with other plots\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAs it uses Matplotlib, Dna Features Viewer can display the features on top of\nother sequences statistics, such as the local GC content:\n\n.. code:: python\n\n    import matplotlib.pyplot as plt\n    from dna_features_viewer import BiopythonTranslator\n    from Bio import SeqIO\n    import numpy as np\n\n    fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(8, 4), sharex=True)\n\n    # Parse the genbank file, plot annotations\n    record = SeqIO.read(\"example_sequence.gb\", \"genbank\")\n    graphic_record = BiopythonTranslator().translate_record(record)\n    ax, levels = graphic_record.plot()\n    graphic_record.plot(ax=ax1, with_ruler=False)\n\n    # Plot the local GC content\n    def plot_local_gc_content(record, window_size, ax):\n        gc_content = lambda s: 100.0*len([c for c in s if c in \"GC\"]) / len(s)\n        yy = [gc_content(record.seq[i:i+window_size])\n              for i in range(len(record.seq)-window_size)]\n        xx = np.arange(len(record.seq)-window_size)+25\n        ax.fill_between(xx, yy, alpha=0.3)\n        ax.set_ylabel(\"GC(%)\")\n\n    plot_local_gc_content(record, window_size=50, ax=ax2)\n\n    # Resize the figure\n    fig.savefig(\"with_plot.png\")\n\n.. figure:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/with_plot.png\n    :align: center\n\nCustom biopython translators\n----------------------------\n\nDna Features Viewer allows to define \"themes\" by using custom record translators\ninstead of the default ``BiopythonTranslator``. Here is an example:\n\n.. code:: python\n\n    from dna_features_viewer import BiopythonTranslator\n\n    class MyCustomTranslator(BiopythonTranslator):\n        \"\"\"Custom translator implementing the following theme:\n\n        - Color terminators in green, CDS in blue, all other features in gold.\n        - Do not display features that are restriction sites unless they are BamHI\n        - Do not display labels for restriction sites\n        - For CDS labels just write \"CDS here\" instead of the name of the gene.\n\n        \"\"\"\n\n        def compute_feature_color(self, feature):\n            if feature.type == \"CDS\":\n                return \"blue\"\n            elif feature.type == \"terminator\":\n                return \"green\"\n            else:\n                return \"gold\"\n\n        def compute_feature_label(self, feature):\n            if feature.type == 'restriction_site':\n                return None\n            elif feature.type == \"CDS\":\n                return \"CDS here\"\n            else:\n                return BiopythonTranslator.compute_feature_label(feature)\n\n        def compute_filtered_features(self, features):\n            \"\"\"Do not display promoters. Just because.\"\"\"\n            return [\n                feature for feature in features\n                if (feature.type != \"restriction_site\")\n                or (\"BamHI\" in str(feature.qualifiers.get(\"label\", '')))\n            ]\n\n\n    graphic_record = MyCustomTranslator().translate_record(\"example_sequence.gb\")\n    ax, _ = graphic_record.plot(figure_width=10)\n    ax.figure.tight_layout()\n    ax.figure.savefig(\"custom_bopython_translator.png\")\n\n.. figure:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/custom_biopython_translator.png\n    :align: center\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "DNA Sequence Feature Genbank Biopython Matplotlib",
    "license": "see LICENSE.txt",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dna_features_viewer",
    "platform": "",
    "project_url": "https://pypi.org/project/dna_features_viewer/",
    "release_url": "https://pypi.org/project/dna_features_viewer/0.1.5/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Plot features from DNA sequences (e.g. Genbank) with Python",
    "version": "0.1.5"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "396330c5efbed98d4da041ff964a1bf7",
          "sha256": "fb224f5d124a6b49f1ba8c9157f3bdd0422d56fafee28bf07c9160fec6c392ab"
        },
        "downloads": -1,
        "filename": "dna_features_viewer-0.1.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "396330c5efbed98d4da041ff964a1bf7",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 10304,
        "upload_time": "2016-09-22T13:59:41",
        "url": "https://files.pythonhosted.org/packages/58/14/88e7f69632d2365ad0afd663dcbf50bd5a000323197289858623a7af0b9b/dna_features_viewer-0.1.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "21c433397760ddba567848ec80c7788f",
          "sha256": "3ea5d7ee7d076d18ebb06d6e92bc21ebe82cdcd967f5618bfb16495ede54e8cf"
        },
        "downloads": -1,
        "filename": "dna_features_viewer-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "21c433397760ddba567848ec80c7788f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12171,
        "upload_time": "2016-09-22T13:59:38",
        "url": "https://files.pythonhosted.org/packages/bc/9d/25ce78d8d640696f8cb3e4293dfc28b05edd5df138a9225450f8a590e1df/dna_features_viewer-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a659fa1fa1f8d58e35c8e84c5d1df0ed",
          "sha256": "422b9ce8a92143dd5da05d6544de959547cb6c2712635310e595cff3033c089e"
        },
        "downloads": -1,
        "filename": "dna_features_viewer-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a659fa1fa1f8d58e35c8e84c5d1df0ed",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14425,
        "upload_time": "2016-12-14T10:48:01",
        "url": "https://files.pythonhosted.org/packages/b1/3e/4afb2a3257205914cda472a52abde87d8509652971a96e81e8554ce524de/dna_features_viewer-0.1.1.tar.gz"
      }
    ],
    "0.1.2a0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9cf87ca8c31fba3001c5b1f1662077dd",
          "sha256": "18b42f34d143b1aa2ae1928cfdb88de3d44d92d606798a015a1f80f435e63645"
        },
        "downloads": -1,
        "filename": "dna_features_viewer-0.1.2a0.tar.gz",
        "has_sig": false,
        "md5_digest": "9cf87ca8c31fba3001c5b1f1662077dd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16277,
        "upload_time": "2017-03-02T17:29:05",
        "url": "https://files.pythonhosted.org/packages/88/75/a39a872460e17ace421d4a3468cef9617ef5f448fe600b15ab65dcb9272c/dna_features_viewer-0.1.2a0.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "026bc87ecb9974183230cec594c43e6e",
          "sha256": "b778fee9e4cc92aeb71ac61b3636f0e00fde4e7e6e96edd8c24cd7f909cb6424"
        },
        "downloads": -1,
        "filename": "dna_features_viewer-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "026bc87ecb9974183230cec594c43e6e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 168206,
        "upload_time": "2017-05-29T10:22:49",
        "url": "https://files.pythonhosted.org/packages/54/02/84118abb2e66d75c07cf5c2cfa8b968d34fd39ab2c39f7190eadda3b4048/dna_features_viewer-0.1.3.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "11f06667be53b6813bcfb2cb133f4a14",
          "sha256": "a91a1ea847015521480def6cb2992fbbd55a296191fc87066276c3e3fbbc0199"
        },
        "downloads": -1,
        "filename": "dna_features_viewer-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "11f06667be53b6813bcfb2cb133f4a14",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15151,
        "upload_time": "2017-11-20T18:18:09",
        "url": "https://files.pythonhosted.org/packages/6f/10/187846635ac577e89457b0928ab29b0e87d61bde325983ed3e3859f59b4a/dna_features_viewer-0.1.4.tar.gz"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1af135a534cd5a8fd4058f6cf4fc74a5",
          "sha256": "9b3d04005b285e7e1d2aff5bb4f311c02eb4602a252adcb8c256441c5c2ff772"
        },
        "downloads": -1,
        "filename": "dna_features_viewer-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1af135a534cd5a8fd4058f6cf4fc74a5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17753,
        "upload_time": "2017-11-20T18:26:04",
        "url": "https://files.pythonhosted.org/packages/ae/0f/68f717b6ad34e6ca947918fadd5fd64fd3e25641f414119545144715615b/dna_features_viewer-0.1.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "1af135a534cd5a8fd4058f6cf4fc74a5",
        "sha256": "9b3d04005b285e7e1d2aff5bb4f311c02eb4602a252adcb8c256441c5c2ff772"
      },
      "downloads": -1,
      "filename": "dna_features_viewer-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "1af135a534cd5a8fd4058f6cf4fc74a5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 17753,
      "upload_time": "2017-11-20T18:26:04",
      "url": "https://files.pythonhosted.org/packages/ae/0f/68f717b6ad34e6ca947918fadd5fd64fd3e25641f414119545144715615b/dna_features_viewer-0.1.5.tar.gz"
    }
  ]
}