{
  "info": {
    "author": "Danielle Madeley",
    "author_email": "danielle@madeley.id.au",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "Django Postgres composite types\n===============================\n\nAn implementation of Postgres' [composite types](http://www.postgresql.org/docs/current/static/rowtypes.html)\nfor [Django](https://docs.djangoproject.com/en/1.9/).\n\nUsage\n-----\n\nInstall with:\n\n    pip install django-postgres-composite-types\n\nDefine a type and add it to a model:\n\n```python\nfrom django.db import models\nfrom postgres_composite_type import CompositeType\n\nclass Address(CompositeType):\n    \"\"\"An address.\"\"\"\n\n    address_1 = models.CharField(max_length=255)\n    address_2 = models.CharField(max_length=255)\n\n    suburb = models.CharField(max_length=50)\n    state = models.CharField(max_length=50)\n\n    postcode = models.CharField(max_length=10)\n    country = models.CharField(max_length=50)\n\n    class Meta:\n        db_type = 'x_address'  # Required\n\n\nclass Person(models.Model):\n    \"\"\"A person.\"\"\"\n\n    address = Address.Field()\n```\n\nAn operation needs to be prepended to your migration:\n\n```python\nimport address\nfrom django.db import migrations\n\n\nclass Migration(migrations.Migration):\n\n    operations = [\n        # Registers the type\n        address.Address.Operation(),\n        migrations.AddField(\n            model_name='person',\n            name='address',\n            field=address.Address.Field(blank=True, null=True),\n        ),\n    ]\n```\n\nExamples\n--------\n\nArray fields:\n\n```python\nclass Card(CompositeType):\n    \"\"\"A playing card.\"\"\"\n\n    suit = models.CharField(max_length=1)\n    rank = models.CharField(max_length=2)\n\n    class Meta:\n        db_type = 'card'\n\n\nclass Hand(models.Model):\n    \"\"\"A hand of cards.\"\"\"\n    cards = ArrayField(base_field=Card.Field())\n```\n\nNested types:\n\n```python\nclass Point(CompositeType):\n    \"\"\"A point on the cartesian plane.\"\"\"\n\n    # pylint:disable=invalid-name\n    x = models.IntegerField()\n    y = models.IntegerField()\n\n    class Meta:\n        db_type = 'x_point'  # Postgres already has a point type\n\n\nclass Box(CompositeType):\n    \"\"\"An axis-aligned box on the cartesian plane.\"\"\"\n    class Meta:\n        db_type = 'x_box'  # Postgres already has a box type\n\n    top_left = Point.Field()\n    bottom_right = Point.Field()\n```\n\nGotchas and Caveats\n-------------------\n\nThe migration operation currently loads the *current* state of the type, not\nthe state when the migration was written. A generic `CreateType` operation\nwhich takes the fields of the type would be possible, but it would still\nrequire manual handling still as Django's `makemigrations` is not currently\nextensible.\n\nChanges to types are possible using `RawSQL`, for example:\n\n```python\noperations = [\n    migrations.RunSQL([\n        \"ALTER TYPE x_address DROP ATTRIBUTE country\",\n        \"ALTER TYPE x_address ADD ATTRIBUTE country integer\",\n    ], [\n        \"ALTER TYPE x_address DROP ATTRIBUTE country\",\n        \"ALTER TYPE x_address ADD ATTRIBUTE country varchar(50)\",\n    ]),\n]\n```\n\nHowever, be aware that if your earlier operations were run using current DB\ncode, you will already have the right types\n([bug #8](https://github.com/danni/django-postgres-composite-types/issues/8)).\n\nIt is recommended to that you namespace your custom types to avoid conflict\nwith future PostgreSQL types.\n\nLookups and indexes are not implemented yet\n([bug #9](https://github.com/danni/django-postgres-composite-types/issues/9),\n[bug #10](https://github.com/danni/django-postgres-composite-types/issues/10)).\n\nAuthors\n-------\n\n* Danielle Madeley <danielle@madeley.id.au>\n* Tim Heap <hello@timheap.me>\n\nLicense\n-------\n\n(c) 2016, Danielle Madeley  <danielle@madeley.id.au>\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\n   may be used to endorse or promote products derived from this software\n   without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/danni/django-postgres-composite-types",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-postgres-composite-types",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-postgres-composite-types/",
    "release_url": "https://pypi.org/project/django-postgres-composite-types/0.3.4/",
    "requires_python": "",
    "summary": "Postgres composite types support for Django",
    "version": "0.3.4"
  },
  "releases": {
    "0.0.0": [],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "64fac4c7dd4c49c6f34e057574f0f8cc",
          "sha256": "aa4e36830615787fcaa4d8003270e8a33c68e8be62a9562119d6d0977c1f63f4"
        },
        "downloads": 142,
        "filename": "django-postgres-composite-types-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "64fac4c7dd4c49c6f34e057574f0f8cc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9141,
        "upload_time": "2016-05-22T11:20:41",
        "url": "https://files.pythonhosted.org/packages/ca/7f/e6b4c48fd4a2457f5dc74db67e158b560d535ae4da01d319ed043251bbec/django-postgres-composite-types-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d507abe9d549cf8d9f5c89df6555a50c",
          "sha256": "4c4f93b50d50f990ae11ab40266fd73c15aaf3f60f9964e68386c09643bc9c59"
        },
        "downloads": 157,
        "filename": "django-postgres-composite-types-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d507abe9d549cf8d9f5c89df6555a50c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9193,
        "upload_time": "2016-05-23T00:23:48",
        "url": "https://files.pythonhosted.org/packages/72/b4/7f06e50d3d69ec75cb6a055d5083231b41ade71f030ac0ca65c616e44134/django-postgres-composite-types-0.1.1.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f466dbd7357c4a48c327548e7a8f2aa7",
          "sha256": "14ae2857526e292da91a211222895a27af2dd7f82d0f7ad15186a3e87fd67817"
        },
        "downloads": 133,
        "filename": "django-postgres-composite-types-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f466dbd7357c4a48c327548e7a8f2aa7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13119,
        "upload_time": "2016-05-30T00:10:32",
        "url": "https://files.pythonhosted.org/packages/43/66/ad8f0d48d913801c7f34c4e83b3f1acf0f1621431340e395d5440db70258/django-postgres-composite-types-0.2.0.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "51901dcc0190a483e84e6346f0cddae2",
          "sha256": "addb0ca7f196eaf56b16bcd3ae094d38b6fe4dc7bda58440e6a454dc3aaff207"
        },
        "downloads": 489,
        "filename": "django-postgres-composite-types-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "51901dcc0190a483e84e6346f0cddae2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17611,
        "upload_time": "2016-06-01T00:47:23",
        "url": "https://files.pythonhosted.org/packages/b5/b9/bf4ba8a9ea638f12671d5a4e6ce0451b8a466720efc1fa6517b6a1b4c5a0/django-postgres-composite-types-0.3.0.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b6217bf198636c550656fdc71483da70",
          "sha256": "cccf39789389ee64350939399daa0338242aaa925e250179f574927f744b7006"
        },
        "downloads": 411,
        "filename": "django-postgres-composite-types-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b6217bf198636c550656fdc71483da70",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17919,
        "upload_time": "2016-06-01T02:21:28",
        "url": "https://files.pythonhosted.org/packages/bd/b2/4334905a89cbf8e6eeed679e888cf87893b9edaa71598d30a7eae61c0038/django-postgres-composite-types-0.3.1.tar.gz"
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4024a3eee3070929f7d8a96c2ee2ea77",
          "sha256": "df85c76f617fbaf20edc662898c37ab9fd03cb042c7b413d7f5adf09f80c58e9"
        },
        "downloads": 51,
        "filename": "django-postgres-composite-types-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4024a3eee3070929f7d8a96c2ee2ea77",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18620,
        "upload_time": "2016-11-06T21:55:35",
        "url": "https://files.pythonhosted.org/packages/99/93/2c2a850039bdef6b822c0af1364711d536c6e601d7a126b6265c04c71fe3/django-postgres-composite-types-0.3.3.tar.gz"
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "92f07e5d555c690f19b8629998a7ff08",
          "sha256": "890a73292973f285fba9b700e50e4ce18218432f4af87275307320ecae3d3470"
        },
        "downloads": 128,
        "filename": "django-postgres-composite-types-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "92f07e5d555c690f19b8629998a7ff08",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18626,
        "upload_time": "2016-11-21T04:49:41",
        "url": "https://files.pythonhosted.org/packages/e2/81/194b2cc553ea3ef4df7b8de2895ac3d835f6d91c7944045e45498cbdd28b/django-postgres-composite-types-0.3.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "92f07e5d555c690f19b8629998a7ff08",
        "sha256": "890a73292973f285fba9b700e50e4ce18218432f4af87275307320ecae3d3470"
      },
      "downloads": 128,
      "filename": "django-postgres-composite-types-0.3.4.tar.gz",
      "has_sig": false,
      "md5_digest": "92f07e5d555c690f19b8629998a7ff08",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 18626,
      "upload_time": "2016-11-21T04:49:41",
      "url": "https://files.pythonhosted.org/packages/e2/81/194b2cc553ea3ef4df7b8de2895ac3d835f6d91c7944045e45498cbdd28b/django-postgres-composite-types-0.3.4.tar.gz"
    }
  ]
}