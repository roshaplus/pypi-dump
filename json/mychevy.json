{
  "info": {
    "author": "Sean Dague",
    "author_email": "sean@dague.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "=======\nmychevy\n=======\n\n\n.. image:: https://img.shields.io/pypi/v/mychevy.svg\n        :target: https://pypi.python.org/pypi/mychevy\n\n.. image:: https://img.shields.io/travis/sdague/mychevy.svg\n        :target: https://travis-ci.org/sdague/mychevy\n\n.. image:: https://readthedocs.org/projects/mychevy/badge/?version=latest\n        :target: https://mychevy.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://pyup.io/repos/github/sdague/mychevy/shield.svg\n     :target: https://pyup.io/repos/github/sdague/mychevy/\n     :alt: Updates\n\n\nPython interface to My Chevy website via Selenium\n\nUnlike Tesla, GM does not provide a consumer level API to their vehicles. I\ntried to sign up for their developer program after purchasing my Chevy Bolt,\nbut so far it's all been black holed. They do provide a useful My Chevy\nwebsite, where you can log in with your OnStar credentials and see things like\nhow charged your battery is. This is all built with a javascript framework, and\nthe data loads off the OnStar network with a 60 - 120 second delay (OnStar is a\nrather slow proprietary cellular network)\n\nThis library does the craziest thing possible: uses a headless chrome\nbrowser to log into the mychevy website, captures the session cookies needed to\ninteract with backend json services, then calls them.\n\nInstallation\n============\n\nInstallation for this library is more than just a pip install, because you must\n**also** install Google Chrome, and the Chrome Webdriver from selenium.\n\n1. Install Google Chrome (real Chrome, Chromium doesn't count)\n2. Install Chrome Web driver, put it in /usr/local/bin\n\n.. code-block:: bash\n\n   CHROME_DRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`\n   wget -N http://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip -P /tmp\n   unzip /tmp/chromedriver_linux64.zip -d /tmp\n   sudo install -m 0755 -o root /tmp/chromedriver /usr/local/bin/chromedriver\n\n\n3. pip install mychevy\n\nThe last part will pull in all selenium bindings.\n\nUsage\n=====\n\nUsage is very basic.\n\n.. code-block:: python\n\n   from mychevy.mychevy import MyChevy\n\n   page = MyChevy(\"<username>\", \"<password>\")\n   # This takes up to 2 minutes to return, be patient\n\n   # build credentials, needs real selenium\n   page.login()\n\n   # gets a list of cars associated with your account\n   page.get_cars()\n\n   # update stats for all cars, and returns the list of cars. This will take\n   # 60+ seconds per car\n   cars = page.update_cars()\n\n   # Percent battery charge\n   print(cars[0].percent)\n\n\nEvery invocation of ``login()`` creates a whole separate browser to avoid\ncredential timeouts.\n\nIt is not recommended that you run this very frequently. Something like once an\nhour will give you basic data, and shouldn't overload anyone's systems.\n\nTesting\n=======\n\nBecause there are so many ways this can go wrong, a basic cli tool has been\nprovided.\n\n.. code-block:: bash\n\n   > mychevy -c config.ini\n   Loading data, this takes up to 2 minutes...\n   <EVCar vin=\"...\", range=185 miles, bat=100%, plugged_in=True, mileage=903 miles, charging=Your battery is fully charged., charge_mode=Departure Based, eta=None, state=\"\">\n\nconfig.ini must include your user and password for the mychevy site in the\nfollowing format:\n\n.. code-block:: ini\n\n   [default]\n   user = my@email.address\n   passwd = my@wes0mepa55w0rd\n\nThe ``mychevy`` command also takes the ``-S`` flag which makes the selenium\ncontrolled web browser non headless during it's execution. This can be useful\nfor eyeballing why things go wrong (there are so many ways this can go wrong).\n\nCaveats\n=======\n\nThere are so many caveats.... This software aspires to be the gloriously robust\nbubble gum and duct tape of which it has heard makes the internet go round.\n\n* JSON formats are guessed at\n\n  The use of the sessions capture and transfer, and inspecting json returned\n  still creates slightly different parameters than are used by the website. The\n  set of keys and values are guessed at. It's all kind of fragile and\n  heuristic.\n\n* The MyChevy website OnStar link is not robust\n\n  In the first month with the Bolt I've seen two multi hour outages of the\n  mychevy website being able to connect to their OnStar backend gateway. One\n  lasted a whole day. The OnStar link from the Android App worked fine during\n  these windows of time. So it's not an OnStar failure, but it's a lack of\n  robustness somewhere on the Web side, or the gateway dedicated for serving\n  OnStar requests.\n\n* It launches a whole web browser to get a single python object\n\n  It's cool that it all works, but it's a lot of moving parts.\n\nAs such, this software will always be classified Alpha on Pypi. It can and will\nbreak. For that I'm sorry. But it's the best I've got.\n\n\n* Free software: Apache Software License 2.0\n* Documentation: https://mychevy.readthedocs.io.\n\n\nFeatures\n--------\n\n* TODO\n\nCredits\n---------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n=======\nHistory\n=======\n\n0.3.1 (2018-01-31)\n------------------\n\n* Nicer error handling when server throws an error\n\n0.3.0 (2018-01-30)\n------------------\n\n* Change data collection to use json parsing instead of screen scraping after login\n\n0.2.0 (2018-01-21)\n------------------\n\n* Upgraded cli to use `click`\n\n0.1.0 (2017-12-31)\n------------------\n\n* First release on PyPI.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/sdague/mychevy",
    "keywords": "mychevy",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mychevy",
    "platform": "",
    "project_url": "https://pypi.org/project/mychevy/",
    "release_url": "https://pypi.org/project/mychevy/0.3.1/",
    "requires_dist": [
      "click (>=6)",
      "requests",
      "selenium (>=3.8.0)"
    ],
    "requires_python": "",
    "summary": "Python interface to My Chevy website via Selenium",
    "version": "0.3.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "51d286d42e896dda35140ce3995445cf",
          "sha256": "76b18ef56baece4c52585ac48dbc48ed6c03214b7afc1aa0e5147c2c4dea0c03"
        },
        "downloads": -1,
        "filename": "mychevy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "51d286d42e896dda35140ce3995445cf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17433,
        "upload_time": "2017-12-31T13:09:02",
        "url": "https://files.pythonhosted.org/packages/d2/47/c409dc556801173995b1848d22c367ca86fe63bd57bbecfd7115d8f5f8f3/mychevy-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9eea32c3b051698bd64375e682516a62",
          "sha256": "d3cc15ed5928d0c64415b76068ee0d07219c6334fb4555a7051548455cdb394c"
        },
        "downloads": -1,
        "filename": "mychevy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9eea32c3b051698bd64375e682516a62",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17344,
        "upload_time": "2018-01-05T17:21:15",
        "url": "https://files.pythonhosted.org/packages/f1/6a/10916b95c3c91df1687cd618edfa7d855ebfe63d15776f4698c2f496fcf9/mychevy-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8556a49acbdbed7f6332d25c8ee72ac7",
          "sha256": "172ac8aefe54a60ae2fa52755dfeb186f15b58dd4f6dea7dd35d72f7ee6a2b38"
        },
        "downloads": -1,
        "filename": "mychevy-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8556a49acbdbed7f6332d25c8ee72ac7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17345,
        "upload_time": "2018-01-05T17:26:17",
        "url": "https://files.pythonhosted.org/packages/d0/af/773eb632c25f05925089a56d50a39ab61bd86359f85eda9072d7b463d44a/mychevy-0.1.2.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "028b42b108846ab1f65a9ba5ca76821d",
          "sha256": "74da28cb4222ef97c2056196af9791c27f9a3832b5bdf302563b8a96548199de"
        },
        "downloads": -1,
        "filename": "mychevy-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "028b42b108846ab1f65a9ba5ca76821d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9975,
        "upload_time": "2018-01-21T12:50:03",
        "url": "https://files.pythonhosted.org/packages/f7/09/a9e5722603fe5e00eca35236f796476576fe844252886570fde64c2744a0/mychevy-0.2.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c325ce304806530607d0f7325ce56fe1",
          "sha256": "7f9bfd0ce0237d85c34c223c2c68aefc79b9b9850dee76d6bf35b78ae67de2fd"
        },
        "downloads": -1,
        "filename": "mychevy-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c325ce304806530607d0f7325ce56fe1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15650,
        "upload_time": "2018-01-21T12:50:04",
        "url": "https://files.pythonhosted.org/packages/c5/b6/339d4073aee0b42d76b3850276f47540b2d032411bd0f9acfc6719151741/mychevy-0.2.0.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "600458493e8caa0d3aa9747d85204c8e",
          "sha256": "e6ea8a254d1ab6ba2d2d7a9462fbe6f5dc973d0894f5bb5dab613bd0da1051bc"
        },
        "downloads": -1,
        "filename": "mychevy-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "600458493e8caa0d3aa9747d85204c8e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 11613,
        "upload_time": "2018-01-30T17:40:52",
        "url": "https://files.pythonhosted.org/packages/9e/43/47c2f3015cae067b7597dc629726c2186e01339a63b36406c7b1ab7896e4/mychevy-0.3.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "cbda63d42beeab921165fa76a37e3cae",
          "sha256": "442bd09c87fad082d937380577cdb64db12289b7c7a1ae5fb6a7055515f088f7"
        },
        "downloads": -1,
        "filename": "mychevy-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cbda63d42beeab921165fa76a37e3cae",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16654,
        "upload_time": "2018-01-30T17:40:53",
        "url": "https://files.pythonhosted.org/packages/a4/ac/b1e786d0d138c4a5b6183da7a2525332220fd336dc6a3f0b81cd5d196045/mychevy-0.3.0.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d7b0d387e7d1c283cbd47268532f7be4",
          "sha256": "d0e6868886b2674bffba3a66d2b2ba2bdab0fa0e8b5bd414e5223b833fba807b"
        },
        "downloads": -1,
        "filename": "mychevy-0.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7b0d387e7d1c283cbd47268532f7be4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 11794,
        "upload_time": "2018-01-31T21:19:08",
        "url": "https://files.pythonhosted.org/packages/36/dc/8b32249deea28f48320141ef47054400fffec255ba0cb2b2b77a06601e22/mychevy-0.3.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "49b1400944f230ab2b498eab760c8957",
          "sha256": "18b04e0c45c2b3145da4325391323c250fa20584d82dc661b0bb6592dfbea5a4"
        },
        "downloads": -1,
        "filename": "mychevy-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "49b1400944f230ab2b498eab760c8957",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16868,
        "upload_time": "2018-01-31T21:19:09",
        "url": "https://files.pythonhosted.org/packages/6e/c6/56b7d7df1d18a1f3280fc39107c55dc1570a5271b05105f06daf1337fd58/mychevy-0.3.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d7b0d387e7d1c283cbd47268532f7be4",
        "sha256": "d0e6868886b2674bffba3a66d2b2ba2bdab0fa0e8b5bd414e5223b833fba807b"
      },
      "downloads": -1,
      "filename": "mychevy-0.3.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d7b0d387e7d1c283cbd47268532f7be4",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 11794,
      "upload_time": "2018-01-31T21:19:08",
      "url": "https://files.pythonhosted.org/packages/36/dc/8b32249deea28f48320141ef47054400fffec255ba0cb2b2b77a06601e22/mychevy-0.3.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "49b1400944f230ab2b498eab760c8957",
        "sha256": "18b04e0c45c2b3145da4325391323c250fa20584d82dc661b0bb6592dfbea5a4"
      },
      "downloads": -1,
      "filename": "mychevy-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "49b1400944f230ab2b498eab760c8957",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 16868,
      "upload_time": "2018-01-31T21:19:09",
      "url": "https://files.pythonhosted.org/packages/6e/c6/56b7d7df1d18a1f3280fc39107c55dc1570a5271b05105f06daf1337fd58/mychevy-0.3.1.tar.gz"
    }
  ]
}