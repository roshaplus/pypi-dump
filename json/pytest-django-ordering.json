{
  "info": {
    "author": "Renzo Lucioni",
    "author_email": "renzo@lucioni.xyz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Pytest",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "pytest-django-ordering |PyPI|_ |Travis|_\n========================================\n.. |PyPI| image:: https://img.shields.io/pypi/v/pytest-django-ordering.svg?style=flat-square&maxAge=3600\n.. _PyPI: https://pypi.python.org/pypi/pytest-django-ordering\n\n.. |Travis| image:: https://img.shields.io/travis/rlucioni/pytest-django-ordering.svg?style=flat-square&maxAge=3600\n.. _Travis: https://travis-ci.org/rlucioni/pytest-django-ordering\n\n`pytest-django`_ advertises \"easy switching.\" While it's true that existing unittest-style\ntests will work without any modifications, you may have problems switching if you\ndepend on the `order`_ in which the Django test runner runs tests. This plugin helps\npreserve that order if you need it to run your tests.\n\n.. _pytest-django: https://pytest-django.readthedocs.io/en/latest/\n.. _order: https://docs.djangoproject.com/en/dev/topics/testing/overview/#order-in-which-tests-are-executed\n\nMotivation\n----------\n\nThe Django test runner gives priority to Django ``TestCase`` subclasses, executing them\nbefore other Django-based tests (e.g., ``TransactionTestCase``) and any other ``unittest.TestCase``\ntests. Put differently, Django runs tests which reset the database by rolling back\na transaction before tests which reset the database by truncating all tables.\n\npytest-django doesn't preserve this ordering out of the box. For more, see `#214`_.\nThis isn't a problem if your project's tests can run independently of each other,\nin any order. However, if your project's tests rely on initial data populated via\nfixtures or migrations, tests which reset the database by rolling back a transaction\n*must* run before tests which reset the database by truncating all tables, thereby\ndeleting any initial data. The ``serialized_rollback`` option can be used to deal with\nthis issue within a ``TransactionTestCase``, but it has no effect across distinct\ntest cases; once you exit a ``TransactionTestCase``, any initial data is gone.\n\n.. _#214: https://github.com/pytest-dev/pytest-django/issues/214\n\nInstallation\n------------\n\nThis plugin supports Python 2.7, 3.5, and 3.6. Install with ``pip``::\n\n    $ pip install pytest-django-ordering\n\nYou're done! ``pytest`` will automatically find and integrate the plugin.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/rlucioni/pytest-django-ordering",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-django-ordering",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pytest-django-ordering/",
    "release_url": "https://pypi.org/project/pytest-django-ordering/1.0.1/",
    "requires_python": "",
    "summary": "A pytest plugin for preserving the order in which Django runs tests.",
    "version": "1.0.1"
  },
  "releases": {
    "0.1.0": [],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5305df4e3b535fd542da616979ac3f6a",
          "sha256": "57ea781d52c293e58fc246a5d5ba817c259dfd47d154184716c53b5d8b9d86e7"
        },
        "downloads": 12,
        "filename": "pytest_django_ordering-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5305df4e3b535fd542da616979ac3f6a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 5326,
        "upload_time": "2017-01-30T22:08:18",
        "url": "https://files.pythonhosted.org/packages/68/12/7c4d04c2f7f5f177c5e71366b8a361caf848ed5091622b3a9e21e5ae649d/pytest_django_ordering-1.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "62b0cdd71f5880273cd6260ab98d4068",
          "sha256": "01ade5eab5d11214bb5580705bba73206b6f043bf90eaa7d63ee272e21b7cf6d"
        },
        "downloads": 11,
        "filename": "pytest-django-ordering-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "62b0cdd71f5880273cd6260ab98d4068",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2853,
        "upload_time": "2017-01-30T22:08:20",
        "url": "https://files.pythonhosted.org/packages/cf/46/7703551fb11eb7f7979681832eb981133671ce2d2b510a39e686247de412/pytest-django-ordering-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e22e3b299aedbc19f2cffe57cdee5cd5",
          "sha256": "c9abb8e4316b13af5a84cd9fd41e1fccbe763d845408d5aaaa77b3831b1048b4"
        },
        "downloads": 20,
        "filename": "pytest_django_ordering-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e22e3b299aedbc19f2cffe57cdee5cd5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 5338,
        "upload_time": "2017-01-30T22:24:27",
        "url": "https://files.pythonhosted.org/packages/92/cf/9c5abc7e1adc5a08d8cb72258043a8dcb554528c9feac521b7190fd72969/pytest_django_ordering-1.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b077a82f1e899437d253b0e3e9c9b907",
          "sha256": "763304c4d0bf23ce42b1e3ba1b29b02a919264221441a1e680566a277d5665bd"
        },
        "downloads": 16,
        "filename": "pytest-django-ordering-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b077a82f1e899437d253b0e3e9c9b907",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2855,
        "upload_time": "2017-01-30T22:24:29",
        "url": "https://files.pythonhosted.org/packages/76/c6/d0820b10970d1209cc3a4525b31e9c65c39a19598cf504d3a6f56be14d8a/pytest-django-ordering-1.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e22e3b299aedbc19f2cffe57cdee5cd5",
        "sha256": "c9abb8e4316b13af5a84cd9fd41e1fccbe763d845408d5aaaa77b3831b1048b4"
      },
      "downloads": 20,
      "filename": "pytest_django_ordering-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e22e3b299aedbc19f2cffe57cdee5cd5",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 5338,
      "upload_time": "2017-01-30T22:24:27",
      "url": "https://files.pythonhosted.org/packages/92/cf/9c5abc7e1adc5a08d8cb72258043a8dcb554528c9feac521b7190fd72969/pytest_django_ordering-1.0.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "b077a82f1e899437d253b0e3e9c9b907",
        "sha256": "763304c4d0bf23ce42b1e3ba1b29b02a919264221441a1e680566a277d5665bd"
      },
      "downloads": 16,
      "filename": "pytest-django-ordering-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b077a82f1e899437d253b0e3e9c9b907",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 2855,
      "upload_time": "2017-01-30T22:24:29",
      "url": "https://files.pythonhosted.org/packages/76/c6/d0820b10970d1209cc3a4525b31e9c65c39a19598cf504d3a6f56be14d8a/pytest-django-ordering-1.0.1.tar.gz"
    }
  ]
}