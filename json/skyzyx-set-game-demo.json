{
  "info": {
    "author": "Ryan Parman",
    "author_email": "ryan@ryanparman.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "Set\r\n===\r\n\r\n|Source| |Downloads| |Release| |Pypi Release| |Open Issues| |Build Status| |Implementation| |Python Versions| |Package Format| |Stability| |Coverage Status| |Code Climate| |Code Quality| |License| |Author|\r\n\r\n\"Set\" is a card game where a group of players try to identify a *Set* of\r\ncards from those placed face-up on a table.\r\n\r\nThis project uses `Semantic Versioning <http://semver.org>`__ for\r\nmanaging backwards-compatibility.\r\n\r\n-  `API Reference <https://skyzyx.github.io/set-game-demo/>`__\r\n\r\nThe Game\r\n--------\r\n\r\nCore Concepts\r\n~~~~~~~~~~~~~\r\n\r\n-  Each *Card* has 4 *Properties*: color, shape, shading, and number.\r\n-  The *Deck* is a collection of all of the *Cards*.\r\n-  The *Board* is a subset of the *Deck*, containing only the cards that\r\n   are currently in-play.\r\n-  A *Set* is a collection of 3 cards which meet certain criteria\r\n   (discussed below). When a *Set* is found in-play on the *Board*, the\r\n   *Set* is removed from play and logged as such.\r\n-  The *Game* encapsulates all of these concepts and keeps track of\r\n   them.\r\n\r\nGame Rules\r\n~~~~~~~~~~\r\n\r\nEach *Card* has an image on it with 4 orthogonal attributes:\r\n\r\n-  Color (red, green, or purple)\r\n-  Shape (diamond, squiggle, or oval)\r\n-  Shading (solid, empty, or striped)\r\n-  Number (one, two, or three)\r\n\r\nThree *Cards* are a part of a *Set* if, for each *Property*, the values\r\nare all the same or all different.\r\n\r\nFor example:\r\n\r\n-  The *Cards* \"two red solid squiggles\", \"one green solid diamond\",\r\n   \"three purple solid ovals\" would make up a\r\n   *Set*. (number, shape, and color are different, shading is the same)\r\n-  The *Cards* \"two red solid squiggles\", \"one green solid squiggles\",\r\n   \"three purple solid ovals\" would not make up a\r\n   *Set*, because shape is the same on two *Cards*, but different on the\r\n   third.\r\n-  A *Game* of \"Set\" starts by dealing 12 *Cards*, face-up. When a\r\n   player sees three *Cards* that make up a *Set*,\r\n   they yell \"Set!\" and grab the *Cards*. New *Cards* are dealt from the\r\n   *Deck* to replace them.\r\n-  If no player can find a *Set*, three more *Cards* are dealt (to make\r\n   15, then 18, then 21...)\r\n-  The *Game* is over when there are no *Cards* left in the *Deck*, and\r\n   no *Sets* left on the table. The player with\r\n   the most *Sets* wins.\r\n\r\nGame Requirements\r\n~~~~~~~~~~~~~~~~~\r\n\r\nYour task is to model the *Game* in code, and implement the following\r\nmethods:\r\n\r\n-  A method that takes three *Cards*, and determines whether the three\r\n   *Cards* make a *Set*.\r\n-  A method that given a *Board* of *Cards*, will either find a *Set*,\r\n   or determine that there are no *Sets* on the\r\n   table.\r\n-  A method that will play an entire *Game* of \"Set\", from beginning to\r\n   end, and return a list of each valid *Sets*\r\n   you removed from the *Board*.\r\n\r\nFor this last method, there will be multiple correct solutions, but any\r\nvalid list of *Sets* is fine.\r\n\r\nAssumptions\r\n~~~~~~~~~~~\r\n\r\n    *\u201cThree cards are a part of a set if, for each property, the values\r\n    are all the same or all different.\u201d*\r\n\r\nThis is phrased ambiguously, and the examples given lead me to believe\r\nthat the following is a more specific description of the rules.\r\n\r\n-  Take 3 cards and look at each of their properties one-by-one.\r\n-  If all cards have a different value for that property OR all cards\r\n   have the same value for that property, then it *may* be a set.\r\n-  If *any* properties of step 2 fail the test, then the group is not a\r\n   set.\r\n\r\nProblem Parameters\r\n~~~~~~~~~~~~~~~~~~\r\n\r\n-  This problem uses mathematical *combinations* (as opposed to\r\n   *permutations*). This results in 81 combinations (``3^4``).\r\n-  Any failure of being a *Set* means that the group is not a set, so\r\n   fail as early as possible and move-on.\r\n\r\nLogic\r\n~~~~~\r\n\r\n(Whereas \u201c\\ *Combination*\\ \u201d refers to the `mathematical\r\nconcept <https://en.wikipedia.org/wiki/Combination>`__.)\r\n\r\n#. Create the deck of available cards by ensuring that every card is\r\n   unique, and that all *Combinations* of properties are represented.\r\n   Also, shuffle the deck by default.\r\n#. Deal 12 cards to the *Board*.\r\n#. Calculate all possible *Combinations* of the cards on the *Board*, in\r\n   groups of 3.\r\n#. Iterate over each *Combination*, applying logic to determine whether\r\n   or not this *Combination* represents a *Set*.\r\n#. Collect the *Sets* by removing the *Cards* which are determined to be\r\n   part of a *Set*.\r\n#. When no more *Sets* can be found, deal another 3 *Cards* from the\r\n   *Deck*.\r\n#. Repeat steps 3\u20136 until the *Deck* is empty.\r\n\r\nRequirements\r\n------------\r\n\r\n-  Python 2.7, 3.3+, Pypy\r\n-  Pip\r\n-  VirtualEnv is recommended, but not required\r\n\r\nInstallation\r\n------------\r\n\r\n.. code:: bash\r\n\r\n    # Install from Pypi\r\n    pip install skyzyx-set-game-demo\r\n\r\n    # Install from local code\r\n    pip install -e .\r\n\r\nAnd either include it in your scripts:\r\n\r\n.. code:: python\r\n\r\n    from set_game_demo import SetGame\r\n\r\n\u2026or run it from the command line.\r\n\r\n.. code:: bash\r\n\r\n    # Application help\r\n    set-game-demo -h\r\n\r\nUsage/Examples\r\n--------------\r\n\r\nFrom the Python REPL or a Python script\u2026\r\n\r\n.. code:: python\r\n\r\n    from __future__ import print_function\r\n    from set_game_demo import SetGame\r\n\r\n    # Initialize the game.\r\n    game = SetGame()\r\n\r\n    # Chatty, interactive version of the game.\r\n    game.play()\r\n\r\n    # Quiet version of the game. Good for code.\r\n    discovered, sets = game.play_quiet()\r\n    print(\"Sets discovered: {}\".format(discovered))\r\n    for set in sets:\r\n        game.display_cards(set)\r\n\r\nFrom the Terminal\u2026\r\n\r\n.. code:: bash\r\n\r\n    # Chatty, interactive version of the game.\r\n    set-game-demo\r\n\r\n    # Quiet version of the game.\r\n    set-game-demo --quiet\r\n\r\nKnown Issues\r\n------------\r\n\r\n-  In a final release, it would be wise to update the\r\n   ``requirements.txt`` to allow for ranges of known-good versions\r\n   instead of locking to one specific version.\r\n\r\n   -  Conversely, if this is the sole project running in this virtual\r\n      environment, locking to a specific known-good version ensures\r\n      fewer version-compatibility issues.\r\n\r\nFuture Improvements\r\n-------------------\r\n\r\n-  Update the ``test_deal`` unit test to verify that we do not attempt\r\n   to deal a larger number of cards than the deck contains (couldn't\r\n   quite figure out the right way to call ``assertRaises()`` from the\r\n   ``unittest`` package through the ``nose2`` interface).\r\n-  Support multiple *Players* who can collect sets and compete for\r\n   scores.\r\n\r\nDevelopment\r\n-----------\r\n\r\n-  You can develop in any supported version of Python.\r\n\r\n-  Using `pyenv <https://github.com/yyuu/pyenv>`__ to manage your\r\n   Pythons is *highly-recommended*. Testing locally **depends** on it.\r\n\r\n-  Install `VirtualEnv <https://virtualenv.pypa.io/en/stable/>`__ for\r\n   your development environment, and *activate* the environment.\r\n\r\n  .. code:: bash\r\n\r\n      pip install virtualenv\r\n      virtualenv .vendor\r\n      source .vendor/bin/activate\r\n\r\n-  Install the ``requirements.txt``.\r\n\r\n  .. code:: bash\r\n\r\n      pip install -r requirements.txt\r\n\r\n-  When you make changes, make sure that you run the linter and fix\r\n   anything that's broken.\r\n\r\n  .. code:: bash\r\n\r\n      make lint\r\n\r\nTesting\r\n-------\r\n\r\nWe use `tox <https://tox.readthedocs.io>`__ to handle local testing\r\nacross multiple versions of Python. We install multiple versions of\r\nPython at a time with `pyenv <https://github.com/yyuu/pyenv>`__.\r\n\r\nTesting occurs against the following versions:\r\n\r\n-  Python 2.7\r\n-  Python 3.3\r\n-  Python 3.4\r\n-  Python 3.5\r\n-  Python 3.6 (beta)\r\n-  Pypy (\u22482.7.10)\r\n-  Pypy3 (\u22483.2.5)\r\n\r\nTo begin\u2026\r\n\r\n#. Install `pyenv <https://github.com/yyuu/pyenv>`__ on your own before\r\n   running tests.\r\n\r\n#. You need to install all of the supported versions of Python. (This\r\n   will take a while.) If you would prefer to install your own copies of\r\n   the supported Python versions (listed above), feel free to manage\r\n   them yourself.\r\n\r\n  .. code:: bash\r\n\r\n      pyenv install 3.6.0b1 && \\\r\n      pyenv install 3.5.2 && \\\r\n      pyenv install 3.4.5 && \\\r\n      pyenv install 3.3.6 && \\\r\n      pyenv install 2.7.12 && \\\r\n      pyenv install pypy-5.3.1 && \\\r\n      pyenv install pypy3-2.4.0 && \\\r\n      pyenv rehash && \\\r\n      eval \"$(pyenv init -)\" && \\\r\n      pyenv global system 3.6.0b1 3.5.2 3.4.5 3.3.6 2.7.12 pypy-5.3.1 pypy3-2.4.0\r\n\r\nTo verify that the installation and configuration were successful, you\r\ncan run ``pyenv versions``. You should see a ``*`` character in front of\r\nevery version that we just installed.\r\n\r\n  .. code:: bash\r\n\r\n      $ pyenv versions\r\n      * system (set by ~/.pyenv/version)\r\n      * 2.7.12 (set by ~/.pyenv/version)\r\n      * 3.3.6 (set by ~/.pyenv/version)\r\n      * 3.4.5 (set by ~/.pyenv/version)\r\n      * 3.5.2 (set by ~/.pyenv/version)\r\n      * 3.6.0b1 (set by ~/.pyenv/version)\r\n      * pypy-5.3.1 (set by ~/.pyenv/version)\r\n      * pypy3-2.4.0 (set by ~/.pyenv/version)\r\n\r\n#. The following command will package-up your module and install it\r\n   locally, then run ``nose2`` to execute the tests in the *default\r\n   system Python*.\r\n\r\n  .. code:: bash\r\n\r\n      make test\r\n\r\n#. After you've run that, you can then execute the tests in all\r\n   supported versions of Python with the following:\r\n\r\n  .. code:: bash\r\n\r\n      tox\r\n\r\nAPI Reference\r\n-------------\r\n\r\nBuilding local docs\r\n~~~~~~~~~~~~~~~~~~~\r\n\r\n.. code:: bash\r\n\r\n    make docs\r\n    open docs/set_game_demo/index.html\r\n\r\nBuilding and pushing docs\r\n~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n.. code:: bash\r\n\r\n    make pushdocs\r\n\r\nDocs can be viewed at https://skyzyx.github.io/set-game-demo/.\r\n\r\nDeploying\r\n---------\r\n\r\n#. The ``Makefile`` (yes, ``Makefile``) has a series of commands to\r\n   simplify the development and deployment process.\r\n#. Also install `Chag <https://github.com/mtdowling/chag>`__. This is\r\n   used for managing the ``CHANGELOG`` and annotating the Git release\r\n   correctly.\r\n\r\nUpdating the CHANGELOG\r\n~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nMake sure that the ``CHANGELOG.md`` is human-friendly. See\r\nhttp://keepachangelog.com if you don\u2019t know how.\r\n\r\n``make``\r\n~~~~~~~~\r\n\r\nRunning ``make`` by itself will show you a list of available\r\nsub-commands.\r\n\r\n.. code:: bash\r\n\r\n    $ make\r\n    all\r\n    buildpip\r\n    clean\r\n    docs\r\n    lint\r\n    pushdocs\r\n    pushpip\r\n    readme\r\n    tag\r\n    test\r\n    version\r\n\r\n``make readme``\r\n~~~~~~~~~~~~~~~\r\n\r\nIf you make changes to ``README.md``, then this will use\r\n`Pandoc <http://pandoc.org>`__ to output a ``README.rst`` file in the\r\n`reStructuredText <http://docutils.sourceforge.net/rst.html>`__ format\r\nused by\r\n`distutils <https://docs.python.org/3/library/distutils.html>`__,\r\n`Sphinx <http://www.sphinx-doc.org>`__ and most of the Python community.\r\n\r\nYou must have `Pandoc <http://pandoc.org>`__ installed on your local\r\nsystem.\r\n\r\n    **NOTE:** Initial install via ``brew install pandoc`` takes about\r\n    8\u201310 hours. Updates are much faster. `Using the\r\n    installer <https://github.com/jgm/pandoc/releases>`__ is **much**\r\n    faster for initial installation, but updates are entirely manual.\r\n\r\n``make version``\r\n~~~~~~~~~~~~~~~~\r\n\r\nSets the version number that will be used by other ``make`` tasks\r\nrelated to packaging and bundling.\r\n\r\n``make tag``\r\n~~~~~~~~~~~~\r\n\r\nThis will make sure that the ``CHANGELOG.md`` is properly datestamped,\r\nadd the CHANGELOG contents to the Git commit message, commit them, then\r\ncreate a Git commit which can be pushed upstream.\r\n\r\n``make buildpip``\r\n~~~~~~~~~~~~~~~~~\r\n\r\nThis will bundle-up your package in preparation for uploading to\r\n`Pypi <https://pypi.python.org/pypi>`__.\r\n\r\n``make pushpip``\r\n~~~~~~~~~~~~~~~~\r\n\r\nThis will take your bundled package and upload it securely to\r\n`Pypi <https://pypi.python.org/pypi>`__ using the ``twine`` package.\r\n\r\nDrafting a GitHub release\r\n~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n#. Go to https://github.com/skyzyx/set-game-demo/tags\r\n#. Find the new tag that you just pushed. Click the ellipsis (``\u2026``) to\r\n   see the commit notes. Copy these.\r\n#. To the right, choose *Add release notes*. Your *Tag version* should\r\n   be pre-filled.\r\n#. The *Release title* should match your *Tag version*.\r\n#. Inside *Describe this release*, paste the notes that you copied on\r\n   the previous page.\r\n#. Choose *Publish release*.\r\n#. Your release should now be the latest.\r\n   https://github.com/skyzyx/set-game-demo/releases/latest\r\n\r\nContributing\r\n------------\r\n\r\nHere's the process for contributing:\r\n\r\n#. Fork Signer to your GitHub account.\r\n#. Clone your GitHub copy of the repository into your local workspace.\r\n#. Write code, fix bugs, and add tests with 100% code coverage.\r\n#. Commit your changes to your local workspace and push them up to your\r\n   GitHub copy.\r\n#. You submit a GitHub pull request with a description of what the\r\n   change is.\r\n#. The contribution is reviewed. Maybe there will be some banter\r\n   back-and-forth in the comments.\r\n#. If all goes well, your pull request will be accepted and your changes\r\n   are merged in.\r\n\r\nAuthors, Copyright & Licensing\r\n------------------------------\r\n\r\n-  Copyright (c) 2016 `Ryan Parman <http://github.com/skyzyx>`__\r\n\r\nSee also the list of\r\n`contributors <https://github.com/skyzyx/set-game-demo/graphs/contributors>`__\r\nwho participated in this project.\r\n\r\nLicensed for use under the terms of the `Apache\r\n2.0 <http://opensource.org/licenses/Apache-2.0>`__ license.\r\n\r\n.. |Source| image:: http://img.shields.io/badge/source-skyzyx/set-game-demo-blue.svg?style=flat-square\r\n   :target: https://github.com/skyzyx/set-game-demo\r\n.. |Downloads| image:: https://img.shields.io/pypi/dm/skyzyx-set-game-demo.svg?style=flat-square\r\n   :target: https://github.com/skyzyx/set-game-demo/releases\r\n.. |Release| image:: https://img.shields.io/github/release/skyzyx/set-game-demo.svg?style=flat-square\r\n   :target: https://github.com/skyzyx/set-game-demo/releases\r\n.. |Pypi Release| image:: https://img.shields.io/pypi/v/skyzyx-set-game-demo.svg?style=flat-square\r\n   :target: https://pypi.python.org/pypi/skyzyx-set-game-demo\r\n.. |Open Issues| image:: http://img.shields.io/github/issues/skyzyx/set-game-demo.svg?style=flat-square\r\n   :target: https://github.com/skyzyx/set-game-demo/issues\r\n.. |Build Status| image:: http://img.shields.io/travis/skyzyx/set-game-demo/master.svg?style=flat-square\r\n   :target: https://travis-ci.org/skyzyx/set-game-demo\r\n.. |Implementation| image:: https://img.shields.io/pypi/implementation/skyzyx-set-game-demo.svg?style=flat-square\r\n   :target: https://python.org\r\n.. |Python Versions| image:: https://img.shields.io/pypi/pyversions/skyzyx-set-game-demo.svg?style=flat-square\r\n   :target: https://python.org\r\n.. |Package Format| image:: https://img.shields.io/pypi/format/skyzyx-set-game-demo.svg?style=flat-square\r\n   :target: http://pythonwheels.com\r\n.. |Stability| image:: https://img.shields.io/pypi/status/skyzyx-set-game-demo.svg?style=flat-square\r\n   :target: https://pypi.python.org/pypi/skyzyx-set-game-demo\r\n.. |Coverage Status| image:: http://img.shields.io/coveralls/skyzyx/set-game-demo/master.svg?style=flat-square\r\n   :target: https://coveralls.io/r/skyzyx/set-game-demo?branch=master\r\n.. |Code Climate| image:: http://img.shields.io/codeclimate/github/skyzyx/set-game-demo.svg?style=flat-square\r\n   :target: https://codeclimate.com/github/skyzyx/set-game-demo\r\n.. |Code Quality| image:: http://img.shields.io/scrutinizer/g/skyzyx/set-game-demo.svg?style=flat-square\r\n   :target: https://scrutinizer-ci.com/g/skyzyx/set-game-demo\r\n.. |License| image:: https://img.shields.io/github/license/skyzyx/set-game-demo.svg?style=flat-square\r\n   :target: https://github.com/skyzyx/set-game-demo/blob/master/LICENSE.rst\r\n.. |Author| image:: http://img.shields.io/badge/author-@skyzyx-blue.svg?style=flat-square\r\n   :target: https://github.com/skyzyx",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/skyzyx/set-game-demo",
    "keywords": "set demo game",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "skyzyx-set-game-demo",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/skyzyx-set-game-demo/",
    "release_url": "https://pypi.org/project/skyzyx-set-game-demo/1.0.0/",
    "requires_python": null,
    "summary": "Simple demo of the game of Set.",
    "version": "1.0.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "141c7ec5a657e1c05e39dabdba87ea1e",
          "sha256": "a7dede805c0597e38f898e63e633d19451ad3ddb110d1ad8e617a3f38388ce45"
        },
        "downloads": 68,
        "filename": "skyzyx_set_game_demo-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "141c7ec5a657e1c05e39dabdba87ea1e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 17761,
        "upload_time": "2016-09-26T08:46:28",
        "url": "https://files.pythonhosted.org/packages/5f/c5/b639b11189ab4c393d86c6cc20b0e3553b1079f75181c685a48da01f4439/skyzyx_set_game_demo-1.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1cfef1575c7506cf13a6d61daea4bcd7",
          "sha256": "b94ddd1928275d4755d86007e207966fa7d754f5c4bfee5acd27e709ab4bed07"
        },
        "downloads": 139,
        "filename": "skyzyx-set-game-demo-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1cfef1575c7506cf13a6d61daea4bcd7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20859,
        "upload_time": "2016-09-26T08:46:30",
        "url": "https://files.pythonhosted.org/packages/49/11/d94ec82dae2f7bcc2c481ba85b0232d37704bfefd8bdfc2f0c7b7c53c14f/skyzyx-set-game-demo-1.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "141c7ec5a657e1c05e39dabdba87ea1e",
        "sha256": "a7dede805c0597e38f898e63e633d19451ad3ddb110d1ad8e617a3f38388ce45"
      },
      "downloads": 68,
      "filename": "skyzyx_set_game_demo-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "141c7ec5a657e1c05e39dabdba87ea1e",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 17761,
      "upload_time": "2016-09-26T08:46:28",
      "url": "https://files.pythonhosted.org/packages/5f/c5/b639b11189ab4c393d86c6cc20b0e3553b1079f75181c685a48da01f4439/skyzyx_set_game_demo-1.0.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "1cfef1575c7506cf13a6d61daea4bcd7",
        "sha256": "b94ddd1928275d4755d86007e207966fa7d754f5c4bfee5acd27e709ab4bed07"
      },
      "downloads": 139,
      "filename": "skyzyx-set-game-demo-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1cfef1575c7506cf13a6d61daea4bcd7",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 20859,
      "upload_time": "2016-09-26T08:46:30",
      "url": "https://files.pythonhosted.org/packages/49/11/d94ec82dae2f7bcc2c481ba85b0232d37704bfefd8bdfc2f0c7b7c53c14f/skyzyx-set-game-demo-1.0.0.tar.gz"
    }
  ]
}