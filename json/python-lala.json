{
  "info": {
    "author": "Zulko",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. raw:: html\n\n    <p align=\"center\">\n    <img alt=\"lala Logo\" title=\"lala Logo\" src=\"https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/lala/master/docs/_static/images/logo.png\" width=\"300\">\n    <br /><br />\n    </p>\n\n.. image:: https://travis-ci.org/Edinburgh-Genome-Foundry/lala.svg?branch=master\n   :target: https://travis-ci.org/Edinburgh-Genome-Foundry/lala\n   :alt: Travis CI build status\n\nLala is a Python library for access log analysis (right now it only supports NGINX standard logs). It provides a set of methods to retrieve, parse and analyze access logs, in particular for plotting geo-localization or time-series data. Think of it as a poor nam's Google Analytics, that can help you vizualise the requests to your server.\n\nInstallation\n-------------\n\n(Soon) You can install lala through PIP\n\n.. code::\n\n    sudo pip install python-lala\n\nAlternatively, you can unzip the sources in a folder and type\n\n.. code::\n\n    sudo python setup.py install\n\nUsage\n-----\n\n.. code:: python\n\n    import lala\n\n    with open('access_logs.txt'), 'r') as f:\n        entries, errored_lines = lala.logs_lines_to_dataframe(f)\n\nSimilarly, to fetch logs on a distant server (for which you have access keys)\nyou would write:\n\n.. code:: python\n\n    logs= lala.get_remote_file_content(\n        host=\"cuba.genomefoundry.org\", user='root',\n        filename='/var/log/nginx_cuba/access.log'\n    )\n    entries, errors = lala.logs_lines_to_dataframe(logs.split('\\n'))\n\nNow ``entries`` is a `Pandas <https://pandas.pydata.org/>`_ dataframe where each row is one server access, with fields such as ``IP``, ``date``, ``referrer``, ``country_name``, etc. The data can be analyzed using Pandas' built-in filtering and plotting functions.\n\nFor practicality, Lala provides a few methods, such as a pie-chart plotter::\n\n.. code:: python\n\n    ax, country_values = lala.plot_piechart(entries, 'country_name')\n\n.. raw:: html\n\n    <p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/Proglog/master/examples/basic_example_piechart.png\" width=\"500\">\n    </p>\n\nNext we plot the location (cities) providing the most connexions:\n\n.. code:: python\n\n    ax = lala.countries_colormap(country_values.iteritems(), figsize=(12, 8))\n    lala.plot_geo_positions(entries, ax)\n\n.. raw:: html\n\n    <p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/Proglog/master/examples/basic_example_worldmap.png\" width=\"500\">\n    </p>\n\nFinally, we restrict the entries to the UK, and we plot a timeline of connexions:\n\n.. code:: python\n\n    uk_entries = entries[entries.country_name == 'United Kingdom']\n    ax = lala.plot_entries_in_time(uk_entries, bins_per_day=2)\n\n.. raw:: html\n\n    <p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/Proglog/master/examples/basic_example_timeline.png\" width=\"500\">\n    </p>\n\n\nLicense = MIT\n--------------\n\nlala is an open-source software originally written at the `Edinburgh Genome Foundry <http://genomefoundry.org>`_ by `Zulko <https://github.com/Zulko>`_ and `released on Github <https://github.com/Edinburgh-Genome-Foundry/lala>`_ under the MIT licence (\u00a2 Edinburg Genome Foundry).\n\nEveryone is welcome to contribute !\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "access log analysis website webservice stats",
    "license": "see LICENSE.txt",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-lala",
    "platform": "",
    "project_url": "https://pypi.org/project/python-lala/",
    "release_url": "https://pypi.org/project/python-lala/0.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Library of web access log analysis",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7a6c06bccf499b985fd789c8dc53027b",
          "sha256": "39121e84f0614557617ce7741a76f22d8eaef8eb0d91f6efb51b3070b5876382"
        },
        "downloads": -1,
        "filename": "python-lala-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7a6c06bccf499b985fd789c8dc53027b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21027,
        "upload_time": "2018-01-11T15:15:11",
        "url": "https://files.pythonhosted.org/packages/6b/d3/233ae8f7cf7079e300ebd7499a37d658032a158bc7fdcc1aafbf722280c6/python-lala-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "7a6c06bccf499b985fd789c8dc53027b",
        "sha256": "39121e84f0614557617ce7741a76f22d8eaef8eb0d91f6efb51b3070b5876382"
      },
      "downloads": -1,
      "filename": "python-lala-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7a6c06bccf499b985fd789c8dc53027b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 21027,
      "upload_time": "2018-01-11T15:15:11",
      "url": "https://files.pythonhosted.org/packages/6b/d3/233ae8f7cf7079e300ebd7499a37d658032a158bc7fdcc1aafbf722280c6/python-lala-0.1.0.tar.gz"
    }
  ]
}