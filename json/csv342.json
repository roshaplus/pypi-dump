{
  "info": {
    "author": "Thomas Aglassinger",
    "author_email": "roskakori@users.sourceforge.net",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Plugins",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Processing"
    ],
    "description": "csv342\r\n======\r\n\r\ncsv342 is a Python module similar to the the csv module in the standard\r\nlibrary. Under Python 3, it just calls the standard csv module. Under\r\nPython 2, it provides a Python 3 like interface to reading and writing CSV\r\nfiles, in particular concerning non ASCII characters.\r\n\r\nIt is distributed under the BSD license. The source code is available from\r\nhttps://github.com/roskakori/csv342.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nTo install, simply run::\r\n\r\n  $ pip install --upgrade csv342\r\n\r\nAlternatively you can download the distributin archive from\r\nhttp://pypi.python.org/pypi/csv342/, unpack it and copy ``csv342.py`` into\r\nyour application path.\r\n\r\n\r\nExamples\r\n--------\r\n\r\nFirst, consider changing all string literals in you source code to\r\n``unicode`` instead of ``str`` under Python 2 using to avoid the\r\nmessy ``u`` string prefix.\r\n\r\n>>> from __future__ import unicode_literals\r\n\r\nThe following examples assume you did that, making your Python 2 code look\r\nlike Python 3 even more.\r\n\r\nOnce you import ``csv342`` using\r\n\r\n>>> import csv342 as csv\r\n\r\nyour code can call CSV functions the same way independent of whether it runs\r\nunder Python 2 or 3. First, let's write a few test data to a ``io.StringIO``:\r\n\r\n>>> import io\r\n>>> csv_stream = io.StringIO()\r\n>>> csv_writer = csv.writer(csv_stream)\r\n>>> csv_writer.writerow(['a', 'b'])\r\n>>> csv_writer.writerow(['1', '\"x\"'])\r\n>>> csv_content = csv_stream.getvalue()\r\n>>> str(csv_content)\r\n'a,b\\r\\n1,\"\"\"x\"\"\"\\r\\n'\r\n\r\nTo read data from a ``io.StringIO`` use:\r\n\r\n>>> csv_stream = io.StringIO('a,b\\r\\n1,\"\"\"x\"\"\"\\r\\n')\r\n>>> csv_reader = csv.reader(csv_stream)\r\n>>> for row in csv_reader:\r\n>>>     print(row)\r\n\r\n\r\nTo read a UTF-8 encoded CSV file with non ASCII characters use:\r\n\r\n>>> csv_path = os.path.join('test', 'utf-8.csv')\r\n>>> with io.open(csv_path, encoding='utf-8', newline='') as csv_file:\r\n>>>     csv_reader = csv.reader(csv_file, delimiter=',')\r\n>>>     for row in csv_reader:\r\n>>>         print('row {0:d}: data={1}'.format(csv_reader.line_num, row))\r\n\r\n\r\nFeatures\r\n--------\r\n\r\n* Supports Python 2's ``unicode`` strings.\r\n* Provides ``reader``, ``writer``, ``DictReader`` and ``DictWriter``.\r\n* Supports reading and writing with files, ``io.StringIO`` etc.\r\n* Rejects attempts to read or write with ``cStringIO`` or\r\n  ``StringIO.StringIO`` (which do not really work with ``unicode``);\r\n  use ``io.StringIO`` instead.\r\n\r\n\r\nLimitations\r\n-----------\r\n\r\n* All limitations of the standard ``csv`` module apply.\r\n* Uses the standard ``csv.Sniffer`` under Python 2.\r\n* Requires Python 2.6 or later.\r\n\r\n\r\nPerformance\r\n-----------\r\n\r\nProcessing a CSV with Python 2 using ``csv342`` is about 30% slower than\r\nprocessing it with Python 3. This is probably due the fact that under Python\r\n2 there is an intermediate translation to UTF-8 using pure Python code while\r\nin Python 3 uses mostly native code.\r\n\r\nProvided you have both Python 2 and 3 installed on the same machine, you can\r\ntest this yourself running::\r\n\r\n    python3 test/performance.py\r\n    python2 test/performance.py\r\n\r\nOn an ancient laptop with a core 2 duo Intel CPU and Ubuntu 14.04, this takes\r\n10.2 seconds respectively 13.6 seconds.\r\n\r\n\r\nLicense\r\n-------\r\n\r\nCopyright (c) 2016, Thomas Aglassinger\r\nAll rights reserved.\r\n\r\nDistributed under the BSD License. For more information, see LICENSE.txt.\r\n\r\n\r\nVersion history\r\n---------------\r\n\r\nVersion 0.2, 2016-04-17\r\n\r\n* Fixed version number when running under Python 3.\r\n* Fixed helper constand ``IS_PYHTON2`` which always was ``False``.\r\n* Added remaining symbols from Python 2's ``csv`` module.\r\n\r\nVersion 0.1, 2016-04-16\r\n\r\n* Initial release.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://pypi.python.org/pypi/csv342/",
    "keywords": "csv",
    "license": "GNU Lesser General Public License 3 or later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "csv342",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/csv342/",
    "release_url": "https://pypi.org/project/csv342/0.2/",
    "requires_python": null,
    "summary": "Python 3 like CSV module for Python 2",
    "version": "0.2"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c2fd7882deb1f7adc614e6bac5f789c2",
          "sha256": "92a47c6ba88d4d2aeb9aca30cc80625a161b312cfdf381866613c39fe7e8f9db"
        },
        "downloads": 463,
        "filename": "csv342-0.1.zip",
        "has_sig": false,
        "md5_digest": "c2fd7882deb1f7adc614e6bac5f789c2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12928,
        "upload_time": "2016-04-16T09:59:19",
        "url": "https://files.pythonhosted.org/packages/56/d8/cef9109547daedd97d00bde181196fe267840a608319abacee9295f63079/csv342-0.1.zip"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "809a22094b5a6bb67c5d439379a18438",
          "sha256": "21db71f45c10efd47b69be6c97b49f898ac72ada6c5e48f55039bd869aa33cc0"
        },
        "downloads": 172,
        "filename": "csv342-0.2.zip",
        "has_sig": false,
        "md5_digest": "809a22094b5a6bb67c5d439379a18438",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13317,
        "upload_time": "2016-04-17T10:31:53",
        "url": "https://files.pythonhosted.org/packages/41/79/d45bdbbc261f461e938f5d463aff4e06b8308b9b72be04ec5717c92207e5/csv342-0.2.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "809a22094b5a6bb67c5d439379a18438",
        "sha256": "21db71f45c10efd47b69be6c97b49f898ac72ada6c5e48f55039bd869aa33cc0"
      },
      "downloads": 172,
      "filename": "csv342-0.2.zip",
      "has_sig": false,
      "md5_digest": "809a22094b5a6bb67c5d439379a18438",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 13317,
      "upload_time": "2016-04-17T10:31:53",
      "url": "https://files.pythonhosted.org/packages/41/79/d45bdbbc261f461e938f5d463aff4e06b8308b9b72be04ec5717c92207e5/csv342-0.2.zip"
    }
  ]
}