{
  "info": {
    "author": "Stefan Codrescu",
    "author_email": "stefan.codrescu@noaa.gov",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "NetCDF Flag Wrapper (ncflag)\n============================\n\nSo... you want to inspect CF compliant NetCDF flag variables?\n\nTL;DR\n-----\n\nInstall the utility with with pip:\n\n::\n\n    pip install ncflag\n\nOn the command line, use ``ncflag``:\n\n::\n\n    Usage: ncflag [OPTIONS] NCFILE FLAG\n\n    Options:\n      -v, --version                   Show the version and exit.\n      --show_flags PATH               Print the flags this tool can inspect.\n      --use_time_var TEXT\n      -l [DEBUG|INFO|WARNING|ERROR|CRITICAL]\n                                      log level\n      --help                          Show this message and exit.\n\nNotes:\n\nUse --show\\_flags to discover what flags in a given file can be\ninspected.\n\nLimitation: can only inspect flags of at most one dimension. See details\nbelow for dealing with multidimensional flags.\n\nThe nominal output with --use\\_time\\_var specified is shown below.\nWithout use\\_time\\_var, the index along the dimension will be printed\ninstead of a iso 8601 timestamp.\n\n.. code:: text\n\n    2017-11-27T21:07:41.543778: [u'data_quality_error']\n    2017-11-27T21:07:42.543812: [u'good_data']\n    2017-11-27T21:07:43.543807: [u'good_data']\n    2017-11-27T21:07:44.543802: [u'good_data']\n\nMultidimensional Flags\n----------------------\n\nOccasionally, by some poor misfortune, you may encounter\nmultidimensional flag variables. These are currently not supported by\nthe Command Line Interface (CLI), however, the FlagWrap class can still\nbe used in code, or through an interactive (IPython) session. The\n``FlagWrap.get_flags_set_at_index`` can be passed a tuple to query the\nflags set in a multidimensional flag variable. Below is an example.\n\n.. code:: python\n\n    from ncflag import FlagWrap\n    import netCDF4 as nc\n\n    with nc.Dataset(\"somenetcdf.nc\") as nc_in:\n        v = nc_in.variables[\"mutidim_variable\"]\n        print(v.shape)  # --> (2, 10), is multidim.\n        w = FlagWrap(v)\n        print(w.get_flags_set_at_index((0, 0)))  # --> [\"good_quality_qf\"]\n\nTesting\n-------\n\nTODO! (tested in production...., good enough right?)\n\nDevelopment\n-----------\n\nSetting up a virtualenv is recommended for development.\n\n::\n\n    virtualenv venv\n    . venv/bin/activate\n    pip install --editable .\n\n--------------\n\nDeploy to pip, after testing with python2 and python3:\n\n.. code:: bash\n\n    rm -r dist/\n    python setup.py bdist_wheel --universal\n    twine upload dist/*\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://ctor.space/gitlab/work/ncflag",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ncflag",
    "platform": "",
    "project_url": "https://pypi.org/project/ncflag/",
    "release_url": "https://pypi.org/project/ncflag/0.0.1/",
    "requires_dist": [
      "numpy",
      "netCDF4",
      "Click"
    ],
    "requires_python": "",
    "summary": "Utility for interaction with CF compliant NetCDF flag variables.",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dba7fc12cadebeb30b03fc9b102442f9",
          "sha256": "ac5a6926f431224d969931b2ded5818f18a7a0d2d4fcf9444dcc2033f58a2169"
        },
        "downloads": -1,
        "filename": "ncflag-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dba7fc12cadebeb30b03fc9b102442f9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 8464,
        "upload_time": "2017-11-28T21:55:28",
        "url": "https://files.pythonhosted.org/packages/fe/ef/3c4c733138f4a756bf136fe0e037e6d3396e781b5e180a2d056b9ee3c80d/ncflag-0.0.1-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "dba7fc12cadebeb30b03fc9b102442f9",
        "sha256": "ac5a6926f431224d969931b2ded5818f18a7a0d2d4fcf9444dcc2033f58a2169"
      },
      "downloads": -1,
      "filename": "ncflag-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dba7fc12cadebeb30b03fc9b102442f9",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 8464,
      "upload_time": "2017-11-28T21:55:28",
      "url": "https://files.pythonhosted.org/packages/fe/ef/3c4c733138f4a756bf136fe0e037e6d3396e781b5e180a2d056b9ee3c80d/ncflag-0.0.1-py2.py3-none-any.whl"
    }
  ]
}