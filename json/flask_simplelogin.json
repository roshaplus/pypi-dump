{
  "info": {
    "author": "Bruno Rocha",
    "author_email": "rochacbruno@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Flask",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "|Travis| |PyPI| |PyPI| |PyPI| |Flask|\n\nLogin Extension for Flask\n=========================\n\nThere are good and recommended options to deal with web authentication\nin Flask.\n\n**I recommend you use:**\n\n-  `Flask-Login <https://flask-login.readthedocs.io>`__\n-  `Flask-Security <https://pythonhosted.org/Flask-Security/>`__\n\nThose extensions are really complete and **production ready**!\n\n    So why **Flask Simple Login**?\n\nHowever sometimes you need something **simple** for that small project\nor for prototyping.\n\nFlask Simple Login\n------------------\n\nWhat it provides:\n\n-  Login and Logout forms and pages\n-  Function to check if user is logged-in\n-  Decorator for views\n-  Easy and customizable ``login_checker``\n\nWhat it does not provide: (but of course you can easily implement by\nyour own)\n\n-  [STRIKEOUT:Database Integration]\n-  [STRIKEOUT:Password management]\n-  [STRIKEOUT:API authentication]\n-  [STRIKEOUT:Role or user based access control]\n\nHot it works\n------------\n\nFirst install it from\n`PyPI <https://pypi.org/project/flask_simplelogin/>`__.\n\n    ``pip install flask_simplelogin``\n\n.. code:: python\n\n    from flask import Flask\n    from flask_simplelogin import SimpleLogin\n\n    app = Flask(__name__)\n    SimpleLogin(app)\n\nThat's it! now you have ``/login`` and ``/logout`` routes in your\napplication.\n\nThe username defaults to ``admin`` and the password defaults to\n``secret`` (yeah that's not clever, let's see how to change it)\n\nConfiguring\n-----------\n\nSimple way\n\n.. code:: python\n\n    from flask import Flask\n    from flask_simplelogin import SimpleLogin\n\n    app = Flask(__name__)\n    app.config['SECRET_KEY'] = 'something-secret'\n    app.config['SIMPLELOGIN_USERNAME'] = 'chuck'\n    app.config['SIMPLELOGIN_PASSWORD'] = 'norris'\n\n    SimpleLogin(app)\n\nThat works, but is not so clever, lets use env vars.\n\n.. code:: bash\n\n    $ export SIMPLELOGIN_USERNAME=chuck\n    $ export SIMPLELOGIN_PASSWORD=norris\n\nthen ``SimpleLogin`` will read those env vars automatically.\n\n.. code:: python\n\n    from flask import Flask\n    from flask_simplelogin import SimpleLogin\n\n    app = Flask(__name__)\n    app.config['SECRET_KEY'] = 'something-secret'\n    SimpleLogin(app)\n\nBut what if you have more users and more complex auth logic? **write a\ncustom login checker**\n\nUsing a custom login checker\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from flask import Flask\n    from flask_simplelogin import SimpleLogin\n\n    app = Flask(__name__)\n    app.config['SECRET_KEY'] = 'something-secret'\n\n\n    def only_chuck_norris_can_login(user):\n        \"user = {'username': 'foo', 'password': 'bar'}\"\n        # do the authentication here, it is up to you!\n        # query your database, check your user/passwd file\n        # connect to external service.. anything.\n        is user.get('username') == 'chuck' and user.get('password') == 'norris':\n           return True  # Allowed\n        return False  # Denied\n\n\n    SimpleLogin(app, login_checker=only_chuck_norris_can_login)\n\nChecking if user is logged in\n-----------------------------\n\n.. code:: python\n\n\n    from flask_simplelogin import is_logged_in\n\n    if is_logged_in():\n        # do things if anyone is logged in\n\n    if is_logged_in('admin'):\n        # do things only if admin is logged in\n\nDecorating your views\n---------------------\n\n.. code:: python\n\n    from flask_simplelogin import login_required\n\n    @app.route('/it_is_protected')\n    @login_required   # < --- simple decorator\n    def foo():\n        return 'secret'\n\nProtecting Flask Admin views\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n\n    from flask_admin.contrib.foo import ModelView\n    from flask_simplelogin import is_logged_in\n\n\n    class AdminView(ModelView)\n        def is_accessible(self):\n            return is_logged_in('admin')\n\nCustomizing templates\n---------------------\n\nThere are only one template to customize and it is called ``login.html``\n\nExample is:\n\n.. code:: html\n\n    {% extends 'base.html' %}\n    {% block title %}Login{% endblock %}\n    {% block messages %}\n       {{super()}}\n       {%if form.errors %}\n         <ul class=\"alert alert-danger\">\n           {% for field, errors in form.errors.items() %}\n             <li>{{field}} {% for error in errors %}{{ error }}{% endfor %}</li>\n           {% endfor %}\n         </ul>\n       {% endif %}\n    {% endblock %}\n\n    {% block page_body %}\n           <form action=\"{{ url_for('simplelogin.login', next=request.args.get('next', '/')) }}\" method=\"post\">\n                <div class=\"form-group\">\n                {{ form.csrf_token }}\n                {{form.username.label}}<div class=\"form-control\">{{ form.username }}</div><br>\n                {{form.password.label}}<div class=\"form-control\"> {{ form.password }}</div><br>\n                </form>\n               <input type=\"submit\" value=\"Send\">\n           </form>\n    {% endblock %}\n\n    Take a look at the `example\n    app <https://github.com/rochacbruno/flask_simplelogin/blob/master/example/app.py>`__.\n\nAnd you can customize it in anyway you want and need, it receives a\n``form`` in context and it is a ``WTF form`` the submit should be done\nto ``request.path`` which is the same ``/login`` view.\n\nYou can also use ``{% if is_logged_in %}`` in your template if needed.\n\nRequirements\n------------\n\n-  Flask-WTF and WTForms\n-  having a ``SECRET_KEY`` set in your ``app.config``\n\n.. |Travis| image:: https://img.shields.io/travis/rochacbruno/flask_simplelogin.svg?style=flat-square\n   :target: https://travis-ci.org/rochacbruno/flask_simplelogin\n.. |PyPI| image:: https://img.shields.io/pypi/v/flask_simplelogin.svg?style=flat-square\n   :target: https://pypi.org/project/flask_simplelogin/\n.. |PyPI| image:: https://img.shields.io/pypi/pyversions/flask_simplelogin.svg?style=flat-square\n   :target: \n.. |PyPI| image:: https://img.shields.io/pypi/format/flask_simplelogin.svg?style=flat-square\n   :target: \n.. |Flask| image:: https://img.shields.io/badge/Flask-Extension-blue.svg?style=flat-square\n   :target: \n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/rochacbruno/flask_simplelogin",
    "keywords": "",
    "license": "",
    "maintainer": "rochacbruno",
    "maintainer_email": "rochacbruno@gmail.com",
    "name": "flask_simplelogin",
    "platform": "",
    "project_url": "https://pypi.org/project/flask_simplelogin/",
    "release_url": "https://pypi.org/project/flask_simplelogin/0.0.1/",
    "requires_dist": [
      "flask_wtf"
    ],
    "requires_python": "",
    "summary": "Flask Simple Login - Login Extension for Flask",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7b9bd3814e27c15bf4f0b4232c2859e9",
          "sha256": "4ca86b2ee893fcc124baf6e14c92f55b929d053d9f48fd6d71ffe984cc11c549"
        },
        "downloads": 0,
        "filename": "flask_simplelogin-0.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b9bd3814e27c15bf4f0b4232c2859e9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10147,
        "upload_time": "2017-08-23T22:27:31",
        "url": "https://files.pythonhosted.org/packages/d8/ff/68c6747e62bf776352ecfb85b72d2dfe49d995cf11227dbe661b874add81/flask_simplelogin-0.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "41508ff4e024cf0118924ba091b624b8",
          "sha256": "ef9b9d2b7bbe3a739e6359c33fda99b620b74d179c3c073995abf18f93464026"
        },
        "downloads": 0,
        "filename": "flask_simplelogin-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "41508ff4e024cf0118924ba091b624b8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26374,
        "upload_time": "2017-08-23T22:27:35",
        "url": "https://files.pythonhosted.org/packages/81/2a/eec186e97bb822a08f3e83552eaa072e5358be8362094f062e499bcc3a03/flask_simplelogin-0.0.0.tar.gz"
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "aec6b2eedac58b33e4ab40d44cc53be7",
          "sha256": "16c0fb605b7636db984d7a6ef8323780d2cb874329a8ac145a2f9618d348ef20"
        },
        "downloads": 0,
        "filename": "flask_simplelogin-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aec6b2eedac58b33e4ab40d44cc53be7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10823,
        "upload_time": "2017-08-24T03:16:50",
        "url": "https://files.pythonhosted.org/packages/b6/c8/433b98b91eb6a9f5b20de22e9e79c36b0485b148bbdd2ecfa36b67f1c246/flask_simplelogin-0.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "bae1b18912e499a766cbe92e4546fd8f",
          "sha256": "20926bf29c77d9bdf6f570fbfc5985ca2d43e95898abaeafd3834ed9350e36fb"
        },
        "downloads": 0,
        "filename": "flask_simplelogin-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bae1b18912e499a766cbe92e4546fd8f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26862,
        "upload_time": "2017-08-24T03:16:53",
        "url": "https://files.pythonhosted.org/packages/c0/8f/3ccaff5c993d3db2c3a80ee28d26a7ce86ee346a691a695882e3e0283d90/flask_simplelogin-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "aec6b2eedac58b33e4ab40d44cc53be7",
        "sha256": "16c0fb605b7636db984d7a6ef8323780d2cb874329a8ac145a2f9618d348ef20"
      },
      "downloads": 0,
      "filename": "flask_simplelogin-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aec6b2eedac58b33e4ab40d44cc53be7",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 10823,
      "upload_time": "2017-08-24T03:16:50",
      "url": "https://files.pythonhosted.org/packages/b6/c8/433b98b91eb6a9f5b20de22e9e79c36b0485b148bbdd2ecfa36b67f1c246/flask_simplelogin-0.0.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "bae1b18912e499a766cbe92e4546fd8f",
        "sha256": "20926bf29c77d9bdf6f570fbfc5985ca2d43e95898abaeafd3834ed9350e36fb"
      },
      "downloads": 0,
      "filename": "flask_simplelogin-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bae1b18912e499a766cbe92e4546fd8f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 26862,
      "upload_time": "2017-08-24T03:16:53",
      "url": "https://files.pythonhosted.org/packages/c0/8f/3ccaff5c993d3db2c3a80ee28d26a7ce86ee346a691a695882e3e0283d90/flask_simplelogin-0.0.1.tar.gz"
    }
  ]
}