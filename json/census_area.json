{
  "info": {
    "author": "Forest Gregg",
    "author_email": "fgregg@datamade.us",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3.5",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "============\nCensus Areas\n============\n\nThis Python library extends the Sunlight Foundation's `Census API Wrapper <https://github.com/sunlightlabs/census/>`_ to allow querying Census tracts, block groups, and blocks by Census place, as well as by  arbitrary geographies.\n\nSetup\n======\n\nGet the library and its dependencies using `pip <https://pypi.python.org/pypi/pip>`_:\n\n::\n\n    pip install census_area\n\nUsage\n======\n\n::\n\n    from census_area import Census\n\n    c = Census(\"MY_API_KEY\")\n    old_homes = c.acs5.state_place_tract(('NAME', 'B25034_010E'), 17, 14000)\n    \nThe call above will return the name of the census tract and the number of homes that were built before 1939 for every tract in the City of Chicago. ``17`` is the FIPS code for Illinois and ``14000`` is the FIPS code for Chicago.\n\nBy default, this method will return a list of dictionaries, where each dictionary represents the data for one tract. \n\nWith the ``keep_geometry`` argument, you can have the method return a geojson-like dictionary. Each tract is a feature, and the census variables about the tract appear in the feature's property attributes.\n::\n\n    old_homes_geojson = c.acs5.state_place_tract(('NAME', 'B25034_010E'), 17, 14000), keep_geometry=True)\n\nThere are similar methods for block groups\n::\n\n    old_home_block_groups = c.acs5.state_place_blockgroup(('NAME', 'B25034_010E'), 17, 14000))\n\nAnd blocks. Not that block level geographies are only available for the short-form data from the Decennial Census\n::\n  \n    owner_occupied = c.sf1.state_place_block(('NAME', 'H016F0002'), 17, 14000)\n\nThe tract and blockgroup methods are also available for the Decennial Census.\n::\n\n    owner_occupied_blockgroup = c.sf1.state_place_tract(('NAME', 'H016F0002'), 17, 14000)\n    owner_occupied_tract = c.sf1.state_place_blockgroup(('NAME', 'H016F0002'), 17, 14000)\n    \n    old_homes = c.sf3.state_place_tract('NAME', 'H034010'), 17, 14000)\n    old_homes = c.sf3.state_place_blockgroup('NAME', 'H034010'), 17, 14000)\n\nIn addition to these convenient methods, there are three lower level ways to get census tracts, blocks, and groups for arbitrary geometries.\n\n::\n    \n    import json\n    \n    my_shape_geojson = json.load('my_shape.geojson')\n    features = []\n    old_homes = c.acs5.geo_tract(('NAME', 'B25034_010E'), my_shape_geojson['geometry'])\n    for tract_geojson, tract_data in old_homes:\n         tract_geojson['properties'].update(tract_data)\n         features.append(tract)\n         \n    my_shape_with_new_data_geojson = {'type': \"FeatureCollection\", 'features': features}\n    \n\nThe method takes in the census variables you want and a geojson geometry, and returns a **generator** of the tract shapes, as geojson features, and the variables for that tract. You have to figure out what to do with it. In the example above, we make a new geojson object.\n\nSimilar methods are provided for block groups and blocks, for the ACS 5-year and Decennial Census.\n::\n\n    c.acs5.geo_blockgroup(('NAME', 'B25034_010E'), my_shape_geojson['geometry'])\n    \n    c.sf1.geo_block(('NAME', 'H016F0002'), my_shape_geojson['geometry'])\n    c.sf1.geo_blockgroup(('NAME', 'H016F0002'), my_shape_geojson['geometry'])\n    c.sf1.geo_tract(('NAME', 'H016F0002'), my_shape_geojson['geometry'])\n    \n    c.sf3.state_place_tract('NAME', 'H034010'), my_shape_geojson['geometry'])\n    c.sf3.state_place_blockgroup('NAME', 'H034010'), my_shape_geojson['geometry'])\n\nErrors and Bugs\n===============\n\nIf something is not behaving intuitively, it is a bug and should be reported.\nReport it here by creating an issue: https://github.com/datamade/census_area/issues\n\nHelp us fix the problem as quickly as possible by following `Mozilla's guidelines for reporting bugs. <https://developer.mozilla.org/en-US/docs/Mozilla/QA/Bug_writing_guidelines#General_Outline_of_a_Bug_Report>`_\n\nPatches and Pull Requests\n=========================\n\nYour patches are welcome. Here's our suggested workflow:\n\n* Fork the project.\n* Make your feature addition or bug fix.\n* Send us a pull request with a description of your work. Bonus points for topic branches!\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/datamade/census_area",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "census_area",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/census_area/",
    "release_url": "https://pypi.org/project/census_area/0.2/",
    "requires_python": null,
    "summary": "Census data for arbitrary geographies",
    "version": "0.2"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a40065ae4507114e906f3e7298db0036",
          "sha256": "bf69f1212fa7ab7856bc7eb534ca5bb5eeca96664011c42aed796feb339d58a2"
        },
        "downloads": 73,
        "filename": "census_area-0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a40065ae4507114e906f3e7298db0036",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 4628,
        "upload_time": "2016-11-21T16:49:32",
        "url": "https://files.pythonhosted.org/packages/c5/38/8c83d604811b657a4cd2a88bda70e55c5c37ce7a6afa6f13fd80e382299c/census_area-0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "62d6af55f18f657e8d925d170397503b",
          "sha256": "64dbdb12cb0242b31b7e03f67baa2dc50f76339952865e748d19fa1770eaa7b2"
        },
        "downloads": 75,
        "filename": "census_area-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "62d6af55f18f657e8d925d170397503b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4243,
        "upload_time": "2016-11-21T16:49:30",
        "url": "https://files.pythonhosted.org/packages/e2/8a/17da2c9b83ca4de46dea200357018dad832468000172217fe56f8bd42e1e/census_area-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8385339f2e3de575560ebe1899e948a4",
          "sha256": "d1ade3358397fcec8d846e574aff3d41fbbaa0e1dec766b169fe9d1efa434276"
        },
        "downloads": 85,
        "filename": "census_area-0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8385339f2e3de575560ebe1899e948a4",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 4353,
        "upload_time": "2016-11-21T22:16:53",
        "url": "https://files.pythonhosted.org/packages/02/e1/759fa3cdeb2d4ff3d1756b8be03014be93f93437545d00e3456ad02264ca/census_area-0.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2f82cfa81fcb5996d30f2197f1b9d9f9",
          "sha256": "5c448d0ae9f989537d583cf30d48a280409ceca2ee92c7848c72465e07d933c7"
        },
        "downloads": 83,
        "filename": "census_area-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2f82cfa81fcb5996d30f2197f1b9d9f9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4571,
        "upload_time": "2016-11-21T22:16:51",
        "url": "https://files.pythonhosted.org/packages/3f/b6/0b9d71bae1ae8cd4396dde6a4aecfebabb58a2ba4f6707c260631619f023/census_area-0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "8385339f2e3de575560ebe1899e948a4",
        "sha256": "d1ade3358397fcec8d846e574aff3d41fbbaa0e1dec766b169fe9d1efa434276"
      },
      "downloads": 85,
      "filename": "census_area-0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8385339f2e3de575560ebe1899e948a4",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "size": 4353,
      "upload_time": "2016-11-21T22:16:53",
      "url": "https://files.pythonhosted.org/packages/02/e1/759fa3cdeb2d4ff3d1756b8be03014be93f93437545d00e3456ad02264ca/census_area-0.2-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "2f82cfa81fcb5996d30f2197f1b9d9f9",
        "sha256": "5c448d0ae9f989537d583cf30d48a280409ceca2ee92c7848c72465e07d933c7"
      },
      "downloads": 83,
      "filename": "census_area-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2f82cfa81fcb5996d30f2197f1b9d9f9",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4571,
      "upload_time": "2016-11-21T22:16:51",
      "url": "https://files.pythonhosted.org/packages/3f/b6/0b9d71bae1ae8cd4396dde6a4aecfebabb58a2ba4f6707c260631619f023/census_area-0.2.tar.gz"
    }
  ]
}