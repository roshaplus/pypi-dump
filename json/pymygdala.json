{
  "info": {
    "author": "Daniel K Lyons",
    "author_email": "dlyons@nrao.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Pymygdala\n\nA Python library for sending and receiving archive messages.\n\n## Requirements\n\nThis library depends on pycapo and Pika.\n\n## Usage\n\nFirst, create a Pymygdala instance:\n\n    archive = pymygdala.Pymygdala()\n\nWithout any parameters, it will use Capo to find the right server and start accessing it. Alternately, you can supply a Capo profile.\n\n### Creating messages\n\nYou can create an archive message using the constructor:\n\n    event = pymygdala.ArchiveEvent(\n        \"my application\",\n        \"bob\",\n        \"FetchData\",\n        timestamp,\n        \"hello, world\")\n\nYou can supply additional stuff as keywords on the end:\n\n    event = pymygdala.ArchiveEvent(\n        \"my application\",\n        \"bob\",\n        \"request-ID\",\n        timestamp,\n        \"hello, world\",\n        metakey=\"special key\",\n        another_metakey=\"another special key\")\n\n### Sending messages\n\nAssuming you have created a Pymygdala instance, you are able to send messages by calling `send()` on that instance.\n\n    archive = pymygdala.Pymygdala()\n    archive.send(event)\n\nYou may also instead treat `send` as the archive event constructor like so:\n\n    archive = pymygdala.Pymygdala()\n    archive.send(\"my application\",\n                 \"bob\",\n                 \"FetchData\",\n                 timestamp,\n                 \"hello, world\",\n                 metakey=\"special key\",\n                 another_metakey=\"another special key\")\n\n### Receiving messages\n\nReceiving is a bit more complex because it is explicitly asynchronous. You must provide a method to accept messages.\n\n    def handle_message(event):\n        print(event.application)\n        print(event.user)\n        print(event.request)\n        print(event.timestamp)\n        print(event.message)\n        print(event.log_data)\n\n     archive = pymygdala.Pymygdala()\n     archive.receive(handle_message)\n\n### Logging\n\nYou may also configure Python to log to the archive. Programmatic configuration looks like this:\n\n    # create amygdala handler and set level to debug\n    ch = pymygdala.ArchiveLogHandler()\n    ch.setLevel(logging.DEBUG)\n\n    # create formatter\n    formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n\n    # add formatter to ch\n    ch.setFormatter(formatter)\n\n    # add ch to logger\n    logger.addHandler(ch)\n\nThereafter, all calls to the logging framework will dispatch to the archive central logging service.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://open-bitbucket.nrao.edu/projects/SSA/repos/pymygdala",
    "keywords": "",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pymygdala",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pymygdala/",
    "release_url": "https://pypi.org/project/pymygdala/0.1.1/",
    "requires_dist": [
      "pycapo (==0.1.1)",
      "pika (==0.10.0)"
    ],
    "requires_python": "",
    "summary": "Pymygdala: Archive messaging for Python",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d8f05a7740bb3d3be2591369efbcb612",
          "sha256": "1dcac4c4201a6bbc77c032bac3a2f39f36883c3f4ac56ee3d1d95d5562bd26d8"
        },
        "downloads": 0,
        "filename": "pymygdala-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d8f05a7740bb3d3be2591369efbcb612",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 6894,
        "upload_time": "2017-06-28T18:53:58",
        "url": "https://files.pythonhosted.org/packages/f9/fc/44df9a5a75f395206263a1aa295b350ee228eefa0130a2e7177747f5fa8b/pymygdala-0.1.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "08b3f5d56e9da4653849e2d3285a5731",
          "sha256": "508b5db0db7de26acd5930849c09e5441e5621e0ef7d11f6e99ca48087ee042e"
        },
        "downloads": 0,
        "filename": "pymygdala-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "08b3f5d56e9da4653849e2d3285a5731",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11161,
        "upload_time": "2017-06-28T18:54:00",
        "url": "https://files.pythonhosted.org/packages/fb/e4/dd67a2730dce334b25dfdd963c73c3387885aa8174e8261e247e0dc88463/pymygdala-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d8f05a7740bb3d3be2591369efbcb612",
        "sha256": "1dcac4c4201a6bbc77c032bac3a2f39f36883c3f4ac56ee3d1d95d5562bd26d8"
      },
      "downloads": 0,
      "filename": "pymygdala-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d8f05a7740bb3d3be2591369efbcb612",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 6894,
      "upload_time": "2017-06-28T18:53:58",
      "url": "https://files.pythonhosted.org/packages/f9/fc/44df9a5a75f395206263a1aa295b350ee228eefa0130a2e7177747f5fa8b/pymygdala-0.1.1-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "08b3f5d56e9da4653849e2d3285a5731",
        "sha256": "508b5db0db7de26acd5930849c09e5441e5621e0ef7d11f6e99ca48087ee042e"
      },
      "downloads": 0,
      "filename": "pymygdala-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "08b3f5d56e9da4653849e2d3285a5731",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 11161,
      "upload_time": "2017-06-28T18:54:00",
      "url": "https://files.pythonhosted.org/packages/fb/e4/dd67a2730dce334b25dfdd963c73c3387885aa8174e8261e247e0dc88463/pymygdala-0.1.1.tar.gz"
    }
  ]
}