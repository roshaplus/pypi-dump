{
  "info": {
    "author": "Bob Gregory",
    "author_email": "bob@made.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Photon pump\n===========\n\nA TCP eventstore client in Python 3.6 ::\n\n        async def write_an_event():\n            async with photonpump.connect() as conn:\n                await conn.publish_event('pony_stream', 'pony.jumped', body={\n                    'name': 'Applejack',\n                    'height_m': 0.6\n                })\n\n\n        async def read_an_event(conn):\n            event = await conn.get_event('pony_stream', 1)\n            print(event)\n\n\n        async def write_two_events(conn):\n            await conn.publish('pony_stream', [\n                NewEvent('pony.jumped', body={\n                    'name': 'Rainbow Colossus',\n                    'height_m': 0.6\n                },\n                NewEvent('pony.jumped', body={\n                    'name': 'Sunshine Carnivore',\n                    'height_m': 1.12\n                })\n            ])\n\n\n        async def read_two_events(conn):\n            events = await conn.get('pony_stream', max_count=2, from_event=0)\n            print events[0]\n\n\n        async def stneve_owt_daer(conn):\n            events = await conn.get('pony_stream', direction=StreamDirection.backward, max_count=2)\n            print events[0]\n\n\n        async def ticker(delay):\n            while True:\n                yield NewEvent('tick', body{ 'tick': i})\n                i += 1\n                await asyncio.sleep(delay)\n\n\n        async def write_an_infinite_number_of_events(conn):\n            await conn.publish('ticker_stream', ticker(1000))\n\n\n        async def read_an_infinite_number_of_events(conn):\n            async for event in conn.stream('ticker_stream'):\n                print(event)\n\nTodo\n------\n\n- [ ] Allow event body to be any serializable object, not just dict\n- [ ] Fix support for binary bodies.\n- [ ] Implement the `publish from async generator` example from the docs.\n- [ ] Support for cluster + DNS discovery\n- [ ] Reconnection and retry logic.\n- [ ] Catch up subscription - probably as `conn.stream('my-stream', forever=True)`\n- [ ] Persistent Subscriptions\n- [ ] Event-based alternative to async generators, eg ::\n\n        conn.on_event.append(lambda e: print(e))\n        conn.watch('my-stream')\n\n- [ ] Handle error cases properly.\n- [ ] Travis!\n- [ ] Read the Docs!\n- [ ] Add logging\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/madedotcom/photon-pump/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "photon-pump",
    "platform": "any",
    "project_url": "https://pypi.org/project/photon-pump/",
    "release_url": "https://pypi.org/project/photon-pump/0.1.0/",
    "requires_python": "",
    "summary": "Fast, easy to use client for EventStore",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "13fef31fda254291198f97b9f143af53",
          "sha256": "44a030c0b52adc86619f04271af7d0cd0a615c2c68fe5b678b5777aeafd99840"
        },
        "downloads": 0,
        "filename": "photon-pump-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "13fef31fda254291198f97b9f143af53",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17841,
        "upload_time": "2017-05-01T08:11:41",
        "url": "https://files.pythonhosted.org/packages/d3/14/330d94b5c7dc09336a8eb277753b369fc93362dc4d35e2794aa85f78f45b/photon-pump-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "13fef31fda254291198f97b9f143af53",
        "sha256": "44a030c0b52adc86619f04271af7d0cd0a615c2c68fe5b678b5777aeafd99840"
      },
      "downloads": 0,
      "filename": "photon-pump-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "13fef31fda254291198f97b9f143af53",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 17841,
      "upload_time": "2017-05-01T08:11:41",
      "url": "https://files.pythonhosted.org/packages/d3/14/330d94b5c7dc09336a8eb277753b369fc93362dc4d35e2794aa85f78f45b/photon-pump-0.1.0.tar.gz"
    }
  ]
}