{
  "info": {
    "author": "Paolo Tamagnini, Josua Krause, Enrico Bertini",
    "author_email": "paolotamag@gmail.com,josua.krause@nyu.edu,enrico.bertini@nyu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3"
    ],
    "description": "partial_dependence\n==================\n\nA library for plotting partial dependency patterns of machine learning classfiers.\nPartial dependence measures the prediction change when changing one or more input features.\nWe will focus only on 1D partial dependency plots. \nFor each instance in the data we can plot the prediction change as we change a single feature in a defined sample range.\nThen we cluster similar plots, e.g., instances reacting similarly value changes, to reduce clutter.\nThe technique is a black box approach to recognize sets of instances where the model makes similar decisions.\n\nYou can install *partial_dependence* via\n\n.. code:: bash\n\n    pip install partial_dependence\n\nand import it in python using:\n\n.. code:: python\n\n\timport partial_dependence as pdp_plot\n\n\n\n****************************************\nPlotting clustering of partial dependence\n****************************************\n\nFollowing we will show the pipeline of functions works. Please refer to the inline documentation of the methods for full information.\n\nYou can also run the jupyter notebook file to have a running example.\n\nInitialization\n##############\n\nRequired arguments:\n*******************\n\n* ``df_test``: a ``pandas.DataFrame`` containing only the features \n  values for each istance in the test-set. \n* ``model``: trained classfier as an object with the following properties. \n\n  The object must have a method ``prodict_proba(X)`` which takes a ``numpy.array`` of shape ``(n, num_feat)`` as input and returns a ``numpy.array`` of shape ``(n, len(class_array))``.\n\n* ``class_array``: a list of strings with all the classes name in the same order \n  as the predictions returned by ``prodict_proba(X)``.\n* ``class_focus``: a string with the class name of the desired partial dependence.\n\nOptional arguments:\n*******************\n\n* ``num_samples``: number of desired samples. Sampling a feature is done with:\n\n  ``numpy.linspace(min_value,max_value,num_samples)``\n\n  where the bounds are related to min and max value for that feature in the test-set.\n* ``scale``: scale parameter vector for normalization.\n* ``shift``: shift parameter vector for normalization.\n\nInstead if you need to provide your data to the model in normalized form, \nyou have to define scale and shift such that: \n\n``transformed_data = (original_data + shift)*scale``\n\nwhere ``shift`` and ``scale`` are both ``numpy.array`` of shape ``(1,num_feat)``.\n\nIf the model uses directly the raw data in ``df_test`` without any transformation, \ndo not insert any scale and shift parameters. \n\n\n.. code:: python\n\n\tmy_pdp_plot = pdp_plot.PartialDependence( my_df_test,\n\t                                          my_model,\n\t                                          my_labels_name,\n\t                                          my_labels_focus,\n\t                                          my_number_of_samples,\n\t                                          my_scale,\n\t                                          my_shift )\n\n\n\nCreating the matrix of istances vectors\n########################################\n\nBy choosing a feature and changing it in sample range, for each row in the test-set we can create ``num_samples`` different versions of the original istance.\n\n``pdp()`` returns a 3D matrix ``numpy.array`` of shape ``(num_rows,num_samples,num_feat)`` storing all those different versions.\n\n\nRequired argument:\n******************\n\n* ``fix``: string with name of the chosen feature as reported in a column of ``df_test``.\n\n\n.. code:: python\n\n\tthe_matrix = my_pdp_plot.pdp(chosen_feature)\n\n\nComputing prediction changes\n############################\n\nBy feeding ``the_matrix`` to ``pred_comp_all()`` we are able to compute prediction values for each of the different vectors.\n\n.. code:: python\n\n\tpreds = my_pdp_plot.pred_comp_all(the_matrix)\n\nIn ``preds``, a ``numpy.array`` of shape ``(num_rows,num_samples)``, we have for each element a prediction linked to an original istance of the test-set and a precise sample of the ``chosen_feature``.\n\nClustering the partial dependence\n#################################\n\n.. code:: python\n\n\tlabels_clusters = my_pdp_plot.compute_clusters(preds,chosen_cluster_number)\n\n\nPlotting the results\n####################\n\n.. code:: python\n\n\tmy_pdp_plot.plot(preds,labels_clusters)\n\n.. image:: plot_alcohol.png\n    :width: 750px\n    :align: center\n    :height: 421px\n    :alt: alternate text\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/nyuvis/partial_dependence",
    "keywords": "partial dependence machine learning visual analytics data visualization plotting plot nyuvis",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "partial-dependence",
    "platform": "",
    "project_url": "https://pypi.org/project/partial-dependence/",
    "release_url": "https://pypi.org/project/partial-dependence/0.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "PartialDependence is a library for visualizing input-output relationships of machine learning models.",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0ac14caf60e18ad7966b34fd71eef9c7",
          "sha256": "3cab9de15d5da64a8b2c1b57e95f68ef1ff32b4a214aa82be7c90c66b2d6fe25"
        },
        "downloads": -1,
        "filename": "partial_dependence-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ac14caf60e18ad7966b34fd71eef9c7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 11420,
        "upload_time": "2018-01-19T17:01:02",
        "url": "https://files.pythonhosted.org/packages/ef/82/50cb25b3faae1b196df6c3dd54fa20845d376c989d58a9a17a2d71d7eb4d/partial_dependence-0.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4a4dd3f0cd77f965f89da4ae1b16669d",
          "sha256": "e5fddc6d54a6bff554616c6015ebab445529e76b38ead7611a2bf81e08bdccbc"
        },
        "downloads": -1,
        "filename": "partial_dependence-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4a4dd3f0cd77f965f89da4ae1b16669d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9353,
        "upload_time": "2018-01-19T17:01:03",
        "url": "https://files.pythonhosted.org/packages/e6/ca/277d39c3200a6c53882b0526c5c624ff45388c16404994dfbb31b850c7a9/partial_dependence-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "0ac14caf60e18ad7966b34fd71eef9c7",
        "sha256": "3cab9de15d5da64a8b2c1b57e95f68ef1ff32b4a214aa82be7c90c66b2d6fe25"
      },
      "downloads": -1,
      "filename": "partial_dependence-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0ac14caf60e18ad7966b34fd71eef9c7",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 11420,
      "upload_time": "2018-01-19T17:01:02",
      "url": "https://files.pythonhosted.org/packages/ef/82/50cb25b3faae1b196df6c3dd54fa20845d376c989d58a9a17a2d71d7eb4d/partial_dependence-0.0.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "4a4dd3f0cd77f965f89da4ae1b16669d",
        "sha256": "e5fddc6d54a6bff554616c6015ebab445529e76b38ead7611a2bf81e08bdccbc"
      },
      "downloads": -1,
      "filename": "partial_dependence-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4a4dd3f0cd77f965f89da4ae1b16669d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9353,
      "upload_time": "2018-01-19T17:01:03",
      "url": "https://files.pythonhosted.org/packages/e6/ca/277d39c3200a6c53882b0526c5c624ff45388c16404994dfbb31b850c7a9/partial_dependence-0.0.1.tar.gz"
    }
  ]
}