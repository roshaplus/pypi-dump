{
  "info": {
    "author": "Stephan Fitzpatrick",
    "author_email": "knowsuchagency@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "========\nninjadog\n========\n\n\n.. image:: https://img.shields.io/pypi/v/ninjadog.svg\n        :target: https://pypi.python.org/pypi/ninjadog\n\n.. image:: https://img.shields.io/travis/knowsuchagency/ninjadog.svg\n        :target: https://travis-ci.org/knowsuchagency/ninjadog\n\n.. image:: https://readthedocs.org/projects/ninjadog/badge/?version=latest\n        :target: https://ninjadog.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://pyup.io/repos/github/knowsuchagency/ninjadog/shield.svg\n     :target: https://pyup.io/repos/github/knowsuchagency/ninjadog/\n     :alt: Updates\n\n\n`Pug`_ template (formerly `jade`_) support in Python\n\n\n* Free software: MIT license\n* Documentation: https://ninjadog.readthedocs.io.\n\n\n\nInstallation\n------------\n\n::\n\n    brew install npm\n    npm install -g pug-cli\n    pip install ninjadog\n\n\nFor use with Pyramid, just add it to the configuration\n\n.. code-block:: python\n\n    config.include('pyramid_jinja2')\n    config.include('ninjadog.ext.pyramid')\n\n\nWhat?\n-----\n\nninjadog lets you render pug templates and combine them with jinja2\nsyntax.\n\n.. code-block:: python\n\n    from ninjadog import jinja2_renderer\n\n    def stop_believing():\n        return False\n\n    context = {\n        'stop_believing': stop_believing,\n        'happy': {\n            'birthday': 'today',\n        }\n    }\n\n    template_string = \"\"\"\n    h1 hello, world\n    if happy.birthday == today\n        p it's time to celebrate!\n        p {{ 'never' if not stop_believing() }} stop believing\n    \"\"\"\n\n    print(jinja2_renderer(template_string,\n                          context=context,\n                          pretty=True))\n\nThis will render\n\n.. code-block:: html\n\n    <h1>hello, world</h1>\n    <p>it's time to celebrate!</p>\n    <p>never stop believing</p>\n\nHow?\n----\n\nJinja2 basically behaves as a preprocessor to the pug template\nengine and any data passed via the context argument that are able to be serialized\ninto json will then be passed to the pug template engine for rendering as well.\n\n\nWhy?\n----\n\nI think pug templates are a very elegant and expressive way to write\nhtml. It makes something akin to an exercise in corporal mortification\nalmost pleasant.\n\nThere exists a project, `pyjade`_ and a less-popular fork, `pypugjs`_,\nthat are pure-python implementations of the pug template engine,\nbut they haven't been very well-maintained and and the bugs don't\nlend themselves to fixes by mere-mortals like myself.\n\nIt made more sense to me to use the existing nodejs implementation,\nand find a way to have it play nicely with Python.\n\nninjadog does this by spawning the pug cli as a subprocess and communicating\nwith it that way. Furthermore, if you want to use jinja2 template\nsyntax with your pug templates, any pug template that extends from another\nwill need to have that template rendered through jinja2 first, and since we\ncan't overwrite the original template, that means creating a temporary directory\nand copies of all the relevant templates in that directory to be rendered prior\nto passing it to the pug cli process.\n\nAll of that is to say that ninjadog is rather slow, but I'm willing\nto accept pull-requests to make it faster or convenient caching\nmechanisms.\n\n\n.. _pug: https://pugjs.org/api/getting-started.html\n.. _jade: https://naltatis.github.io/jade-syntax-docs/\n.. _pyjade: https://github.com/syrusakbary/pyjade\n.. _pypugjs: https://github.com/matannoam/pypugjs\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/knowsuchagency/ninjadog",
    "keywords": "ninjadog",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ninjadog",
    "platform": "",
    "project_url": "https://pypi.org/project/ninjadog/",
    "release_url": "https://pypi.org/project/ninjadog/0.1.0/",
    "requires_python": "",
    "summary": "Pug template support in Python",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fb6a0e03be0dc84fc246cbf6d8032534",
          "sha256": "9656bacc84aa0525fc2bf02cf70275ac7c4bb042384806a05abdc3da459548b1"
        },
        "downloads": 0,
        "filename": "ninjadog-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb6a0e03be0dc84fc246cbf6d8032534",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 10214,
        "upload_time": "2017-06-22T07:44:38",
        "url": "https://files.pythonhosted.org/packages/ce/b2/0be06144276a3214388fc48386339a15e4c44d99826ff668e5d4a47de280/ninjadog-0.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f5541908cfb2024966a881b0fec89677",
          "sha256": "387102d5bcc42f412a20ab81360a26aa0c1737a6261717db53da0152c0e8a5ba"
        },
        "downloads": 0,
        "filename": "ninjadog-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f5541908cfb2024966a881b0fec89677",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21437,
        "upload_time": "2017-06-22T07:44:35",
        "url": "https://files.pythonhosted.org/packages/9e/2b/3cf198470d5f5b40401052c43024b380992244cde544d99e37c54ce01fd8/ninjadog-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fb6a0e03be0dc84fc246cbf6d8032534",
        "sha256": "9656bacc84aa0525fc2bf02cf70275ac7c4bb042384806a05abdc3da459548b1"
      },
      "downloads": 0,
      "filename": "ninjadog-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fb6a0e03be0dc84fc246cbf6d8032534",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 10214,
      "upload_time": "2017-06-22T07:44:38",
      "url": "https://files.pythonhosted.org/packages/ce/b2/0be06144276a3214388fc48386339a15e4c44d99826ff668e5d4a47de280/ninjadog-0.1.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "f5541908cfb2024966a881b0fec89677",
        "sha256": "387102d5bcc42f412a20ab81360a26aa0c1737a6261717db53da0152c0e8a5ba"
      },
      "downloads": 0,
      "filename": "ninjadog-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f5541908cfb2024966a881b0fec89677",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 21437,
      "upload_time": "2017-06-22T07:44:35",
      "url": "https://files.pythonhosted.org/packages/9e/2b/3cf198470d5f5b40401052c43024b380992244cde544d99e37c54ce01fd8/ninjadog-0.1.0.tar.gz"
    }
  ]
}