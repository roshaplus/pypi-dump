{
  "info": {
    "author": "Ripple",
    "author_email": "rome@ripple.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Documentation",
      "Topic :: Utilities"
    ],
    "description": "Dactyl\n======\n\nDocumentation tools for enterprise-quality documentation from Markdown\nsource. Dactyl has advanced features to enable\n`single-sourcing <https://en.wikipedia.org/wiki/Single_source_publishing>`__\nand an extensible syntax for building well-organized, visually\nattractive docs. It generates output in HTML (natively), and can make\nPDFs if you have `Prince <http://www.princexml.com/>`__ installed.\n\nInstallation\n------------\n\nDactyl requires `Python 3 <https://python.org/>`__. Install with\n`pip <https://pip.pypa.io/en/stable/>`__:\n\n::\n\n    sudo pip3 install dactyl\n\nOr a local install in a virtualenv:\n\n.. code:: sh\n\n    # Create an activate a virtualenv so the package and dependencies are localized\n    virtualenv -p `which python3` venv_dactyl\n    source venv_dactyl/bin/activate\n\n    # Check out this repo\n    git clone https://github.com/ripple/dactyl\n\n    # Install\n    pip3 install dactyl/\n\n    # Where 'dactyl/' is the top level directory of the repo, containing setup.py.\n    # And note the trailing '/' which tells pip to use a local directory to install it.\n\nUsage\n-----\n\nSimple (\"Ad-Hoc\") usage:\n\n.. code:: sh\n\n    $ dactyl_build --pages input1.md input2.md\n\nBy default, the resulting HTML pages are written to a folder called\n``out/`` in the current working directory. You can specify a different\noutput path in the config file or by using the ``-o`` parameter.\n\nBuilding PDF\n~~~~~~~~~~~~\n\nDactyl generates PDFs by making temporary HTML files and running\n`Prince <http://www.princexml.com/>`__. Use the ``--pdf`` command to\ngenerate a PDF. Dactyl tries to come up with a sensible output filename\nby default, or you can provide one (which must end in ``.pdf``):\n\n.. code:: sh\n\n    $ dactyl_build --pages input1.md input2.md --pdf MyGuide.pdf\n\nAdvanced Usage\n~~~~~~~~~~~~~~\n\nDactyl is intended to be used with a config file containing a list of\npages to parse. Pages are grouped into \"targets\" that represent a group\nof documents to be built together; a page can belong to multiple\ntargets, and can even contain conditional syntax so that it builds\nslightly different depending on the target in question. Targets and\npages can also use different templates from each other, and pages can\ninherit semi-arbitrary key/value pairs from the targets.\n\nFor more information on configuration, see the ``default-config.yml``\nand the `examples <examples/>`__ folder.\n\nThe input pages in the config file should be specified relative to the\n``content_path``, which is ``content/`` by default. You can also specify\na URL to pull in a markdown file from a remote source, but if you do,\nDactyl won't run any pre-processing on it.\n\nFor a full list of Dactyl options, use the ``-h`` parameter.\n\nSpecifying a Config File\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nBy default, Dactyl looks for a config file named ``dactyl-config.yml``\nin the current working directory. You can specify an alternate config\nfile with the ``-c`` or ``--config`` parameter:\n\n.. code:: sh\n\n    $ dactyl_build -c path/to/alt-config.yml\n\nFor more information on configuration, see the ``default-config.yml``\nand the `examples <examples/>`__ folder.\n\nSpecifying a Target\n^^^^^^^^^^^^^^^^^^^\n\nIf your config file contains more than one **target**, Dactyl builds the\nfirst one by default. You can specify a different target by passing its\n``name`` value with the ``-t`` parameter:\n\n.. code:: sh\n\n    $ dactyl_build -t non-default-target\n\nStatic Files\n^^^^^^^^^^^^\n\nYour templates may require certain static files (such as JavaScript,\nCSS, and images) to display properly. Your content may have its own\nstatic files (such as diagrams and figures). By default, Dactyl assumes\nthat templates have static files in the ``assets/`` folder. You can\nconfigure this path and also specify one or more paths to static files\nreferenced by your content. When you build, Dactyl copies files from\nthese folders to the output folder by default depending on which mode\nyou're building:\n\n+----------------------+--------------------------------------------------------------------+\n| Build Mode           | Files copied to output folder by default                           |\n+======================+====================================================================+\n| HTML                 | Both template and content static files                             |\n+----------------------+--------------------------------------------------------------------+\n| PDF                  | Neither template nor content static files (cannot be overridden)   |\n+----------------------+--------------------------------------------------------------------+\n| Markdown             | Content static files only                                          |\n+----------------------+--------------------------------------------------------------------+\n| ElasticSearch JSON   | Neither template nor content static files                          |\n+----------------------+--------------------------------------------------------------------+\n\nYou can use a commandline flag to explicitly specify what gets copied to\nthe output folder, except in the case of PDF. (In PDF mode, Dactyl\nwrites only the final PDF to the output folder.) The flags are as\nfollows:\n\n+-------------------------+-----------------+-------------------------------------------------------+\n| Flag (long version)     | Short version   | Meaning                                               |\n+=========================+=================+=======================================================+\n| ``--copy_static``       | ``-s``          | Copy all static files to the out dir.                 |\n+-------------------------+-----------------+-------------------------------------------------------+\n| ``--no_static``         | ``-S``          | Don't copy any static files to the out dir.           |\n+-------------------------+-----------------+-------------------------------------------------------+\n| ``--template_static``   | ``-T``          | Copy only templates' static files to the out dir      |\n+-------------------------+-----------------+-------------------------------------------------------+\n| ``--content_static``    | ``-C``          | Copy only the content's static files to the out dir   |\n+-------------------------+-----------------+-------------------------------------------------------+\n\nThe following config file parameters control what paths Dactyl checks\nfor static content:\n\n+----------------------------+---------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Field                      | Default       | Description                                                                                                                                                                                                             |\n+============================+===============+=========================================================================================================================================================================================================================+\n| ``template_static_path``   | ``assets/``   | Static files belonging to the templates.                                                                                                                                                                                |\n+----------------------------+---------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``content_static_path``    | (None)        | Static files belonging to content. This can be a single folder path, as a string, or an array of paths to files or folders. Dactyl copies all files and folders (regardless of whether the current target uses them).   |\n+----------------------------+---------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\nListing Available Targets\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIf you have a lot of targets, it can be hard to remember what the short\nnames for each are. If you provide the ``-l`` flag, Dactyl will list\navailable targets and then quit without doing anything:\n\n.. code:: sh\n\n    $ dactyl_build -l\n    tests       Dactyl Test Suite\n    rc-install      Ripple Connect v2.6.3 Installation Guide\n    rc-release-notes        \n    kc-rt-faq       Ripple Trade Migration FAQ\n\nBuilding Markdown\n^^^^^^^^^^^^^^^^^\n\nThis mode runs the pre-processor only, so you can generate Markdown\nfiles that are more likely to display properly in conventional Markdown\nparsers (like the one built into GitHub). Use the ``--md`` flag to\noutput Markdown files, skipping the HTML/PDF templates entirely.\n\n.. code:: sh\n\n    $ dactyl_build --md\n\nBuilding Only One Page\n^^^^^^^^^^^^^^^^^^^^^^\n\nIf you only want to build a single page, you can use the ``--only``\nflag, followed by the filename you want to build (either the input\nfilename ending in ``.md`` or the output filename ending in ``.html``):\n\n.. code:: sh\n\n    dactyl_build --only index.html --pdf\n\nThis command can be combined with the ``--pdf`` or ``--md`` flags. You\ncan also use it with the ``--target`` setting (in case you want the\ncontext from the target even though you're only building one page.)\n\nWatch Mode\n^^^^^^^^^^\n\nYou can use the ``-w`` flag to make Dactyl run continuously, watching\nfor changes to its input templates or markdown files. Whenever it\ndetects that a file has changed, Dactyl automatically rebuilds the\noutput in whatever the current mode is, (HTML, PDF, or Markdown).\n\nTo be detected as a change, the file has to match one of the following\npatterns:\n\n::\n\n    *.md\n    */code_samples/*\n    template-*.html\n\nBeware: some configurations can lead to an infinite loop. (For example,\nif your output directory is a subdirectory of your content directory and\nyou use Dactyl in ``--md`` mode.)\n\n**Limitations:** Watch mode can be combined with ``--only``, but\nre-builds the page even when it detects changes to unrelated pages.\nWatch mode doesn't detect changes to the config file, static files, or\nfilters.\n\nTo stop watching, interrupt the Dactyl process (Ctrl-C in most\nterminals).\n\nElasticSearch Compatibility\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nDactyl has the ability to build JSON formatted for upload to\n`ElasticSearch <https://www.elastic.co/products/elasticsearch>`__ and\neven upload it directly.\n\nTo build JSON files for upload to ElasticSearch, use the ``--es`` mode:\n\n::\n\n    dactyl_build --es\n\nThis writes files to the usual output directory using an ElasticSearch\nJSON template. Dactyl skips any files that do not have a ``md`` source\nparameter in this mode. The output filenames are the pages' ``html``\nfilenames, except ending in ``.json`` instead of ``.html``. You can\nspecify a custom template for these JSON files using the top-level\n``default_es_template`` field in the config file. This template must be\na valid JSON file and has several special properties as described in\n`ElasticSearch JSON Templates <#elasticsearch-json-templates>`__.\n\nDactyl can also upload these files directly to an ElasticSearch\ninstance, even when building for another mode. For example, to build the\nHTML version of a target named ``filterdemos`` but also upload that\ntarget's JSON-formatted data to an ElasticSearch instance:\n\n::\n\n    dactyl_build -t filterdemos --html --es_upload https://my-es-instance.example.com:9200\n\nThe parameter to ``--es_upload`` should be the base URL of your\nElasticSearch index. You can omit the parameter to use the default base\nURL of ``http://localhost:9200``.\n\nElasticSearch JSON Templates\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nDactyl has a special format for JSON templates meant for creating\nElasticSearch data. These templates must be valid JSON and are processed\naccording to the following rules:\n\n-  Any strings in the fields' values are \"preprocessed\" in a similar\n   context to the Jinja2-based Markdown preprocessor. For example, the\n   string ``{{currentpage.name}}`` evaluates to the page's name.\n-  Any object containing the key ``__dactyl_eval__`` is evaluated as a\n   Python expression. The object is replaced with the results of the\n   expression, with lists becoming JSON arrays and dictionaries becoming\n   JSON objects.\n-  The above rules apply recursively to values nested in arrays and\n   objects. All other values are preserved literally.\n\nThe context provided to the preprocessing and to the ``__dactyl_eval__``\nexpressions is the same and contains the following:\n\n+---------------------+---------------+-----------------------------------------------------------------------------------------------------+\n| Field               | Python Type   | Description                                                                                         |\n+=====================+===============+=====================================================================================================+\n| ``currentpage``     | ``dict``      | The current page definition (usually derived from the config file)                                  |\n+---------------------+---------------+-----------------------------------------------------------------------------------------------------+\n| ``target``          | ``dict``      | The current target definition (usually derived from the config file)                                |\n+---------------------+---------------+-----------------------------------------------------------------------------------------------------+\n| ``categories``      | ``list``      | A list of unique ``category`` values used by pages in the current target, in order of appearance.   |\n+---------------------+---------------+-----------------------------------------------------------------------------------------------------+\n| ``page_filters``    | ``list``      | A list of the names of Dactyl filters applied to the current page.                                  |\n+---------------------+---------------+-----------------------------------------------------------------------------------------------------+\n| ``mode``            | ``str``       | Always equal to ``es`` in this context                                                              |\n+---------------------+---------------+-----------------------------------------------------------------------------------------------------+\n| ``current_time``    | ``str``       | The current time, in the ``time_format`` specified in the config. (Defaults to YYYY-MM-DD)          |\n+---------------------+---------------+-----------------------------------------------------------------------------------------------------+\n| ``bypass_errors``   | ``bool``      | If ``true``, this build is running with the option to continue through errors where possible.       |\n+---------------------+---------------+-----------------------------------------------------------------------------------------------------+\n\nThe ``currentpage`` dictionary has the following special fields in this\nmode:\n\n+-----------------+---------------+-------------------------------------------------------------------------------------------------------+\n| Field           | Python Type   | Description                                                                                           |\n+=================+===============+=======================================================================================================+\n| ``plaintext``   | ``str``       | A plaintext-only version of the page's markdown content, with all Markdown and HTML syntax removed.   |\n+-----------------+---------------+-------------------------------------------------------------------------------------------------------+\n| ``headermap``   | ``dict``      | A mapping of the page's headers to the unique IDs of those headers in the generated HTML version.     |\n+-----------------+---------------+-------------------------------------------------------------------------------------------------------+\n| ``blurb``       | ``str``       | An introductory blurb generated from the page's first paragraph of text.                              |\n+-----------------+---------------+-------------------------------------------------------------------------------------------------------+\n\nLink Checking\n~~~~~~~~~~~~~\n\nThe link checker is a separate script. It assumes that you've already\nbuilt some documentation to an output path. Use it as follows:\n\n.. code:: sh\n\n    $ dactyl_link_checker\n\nThis checks all the files in the output directory for links and confirms\nthat any HTTP(S) links, including relative links to other files, are\nvalid. For anchor links, it checks that an element with the correct ID\nexists in the target file. It also checks that the ``src`` of all image\ntags exists.\n\nIf there are links that are always reported as broken but you don't want\nto remove (for example, URLs that block Python's user-agent) you can add\nthem to the ``known_broken_links`` array in the config.\n\nIn quiet mode (``-q``), the link checker still reports in every 30\nseconds just so that it doesn't get treated as stalled and killed by\ncontinuous integration software (e.g. Jenkins).\n\nTo reduce the number of meaningless failure reports (because a\nparticular website happened to be down momentarily while you ran the\nlink checker), if there are any broken remote links, the link checker\nwaits 2 minutes after finishing and then retries those links in case\nthey came back up. (If they did, they're not considered broken for the\nlink checker's final report.)\n\nYou can also run the link checker in offline mode (``-o``) to skip any\nremote links and just check that the files and anchors referenced exist\nin the output directory.\n\nIf you have a page that uses JavaScript or something to generate anchors\ndynamically, the link checker can't find those anchors (since it doesn't\nrun any JS). You can add such pages to the ``ignore_anchors_in`` array\nin your config to skip checking for links that go to anchors in such\npages.\n\nStyle Checking\n~~~~~~~~~~~~~~\n\nThe style checker is experimental. It reads lists of discouraged words\nand phrases from the ``word_substitutions_file`` and\n``phrase_substitutions_file`` paths (respectively) in the config. For\neach such word or phrase that appears in the output HTML (excluding\n``code``, ``pre``, and ``tt`` elements), it counts and prints a\nviolation, suggesting a replacement based on the word/phrase file.\n\nThe style checker re-generates HTML in-memory (never writing it out). It\nuses the first target in the config file unless you specify another\ntarget with ``-t``.\n\nExample usage:\n\n.. code:: sh\n\n    $ dactyl_style_checker -t rippledevportal\n    Style Checker - checking all pages in target rippledevportal\n    Found 6 issues:\n    Page: Gateway Guide\n       Discouraged phrase: in order to (1 instances); suggest 'to' instead.\n       Discouraged phrase: and/or (1 instances); suggest '__ or __ or both' instead.\n       Discouraged word: feasible (1 instances); suggest 'can be done, workable' instead.\n       Discouraged phrase: in an effort to (1 instances); suggest 'to' instead.\n       Discouraged phrase: comply with (1 instances); suggest 'follow' instead.\n    Page: Amendments\n       Discouraged phrase: limited number (1 instances); suggest 'limits' instead.\n\nYou can add an exemption to a specific style rule with an HTML comment.\nThe exemption applies to the whole output (HTML) file in which it\nappears.\n\n.. code:: html\n\n    Maybe the word \"will\" is a discouraged word, but you really want to use it here without flagging it as a violation? Adding a comment like this <!-- STYLE_OVERRIDE: will --> makes it so.\n\nConfiguration\n-------------\n\nMany parts of Dactyl are configurable. An advanced setup would probably\nhave the following folders in your directory structure:\n\n::\n\n    ./                      # Top-level dir; this is where you run dactyl_*\n    ./dactyl-config.yml     # Default config file name\n    ./content               # Dir containing your .md source files\n    ---------/*/*.md        # You can sort .md files into subdirs if you like\n    ---------/static/*      # Static images referencd in your .md files\n    ./templates/template-*.html # Custom HTML Templates\n    ./assets                # Directory for static files referenced by templates\n    ./out                   # Directory where output gets generated. Can be deleted\n\n(All of these paths can be configured.)\n\nTargets\n~~~~~~~\n\nA target represents a group of pages, which can be built together or\nconcatenated into a single PDF. You should have at least one target\ndefined in the ``targets`` array of your Dactyl config file. A target\ndefinition should consist of a short ``name`` (used to specify the\ntarget in the commandline and elsewhere in the config file) and a\nhuman-readable ``display_name`` (used mostly by templates but also when\nlisting targets on the commandline).\n\nA simple target definition:\n\n::\n\n    targets:\n        -   name: kc-rt-faq\n            display_name: Ripple Trade Migration FAQ\n\nIn addition to ``name`` and ``display_name``, a target definition can\ncontain arbitrary key-values to be inherited by all pages in this\ntarget. Dictionary values are inherited such that keys that aren't set\nin the page are carried over from the target, recursively. The rest of\nthe time, fields that appear in a page definition take precedence over\nfields that appear in a target definition.\n\nSome things you may want to set at the target level include ``filters``\n(an array of filters to apply to pages in this target), ``template``\n(template to use when building HTML), and ``pdf_template`` (template to\nuse when building PDF). You can also use the custom values in templates\nand preprocessing. Some filters define additional fields that affect the\nfilter's behavior.\n\nThe following field names cannot be inherited: ``name``,\n``display_name``, and ``pages``.\n\nPages\n~~~~~\n\nEach page represents one HTML file in your output. A page can belong to\none or more targets. When building a target, all the pages belonging to\nthat target are built in the order they appear in the ``pages`` array of\nyour Dactyl config file.\n\nExample of a pages definition with two files:\n\n::\n\n    pages:\n        -   name: RippleAPI\n            category: References\n            html: reference-rippleapi.html\n            md: https://raw.githubusercontent.com/ripple/ripple-lib/0.17.2/docs/index.md\n            filters:\n                - remove_doctoc\n                - add_version\n            targets:\n                - local\n                - ripple.com\n\n        -   name: rippled\n            category: References\n            html: reference-rippled.html\n            md: reference-rippled.md\n            targets:\n                - local\n                - ripple.com\n\nEach individual page definition can have the following fields:\n\nn| Field              | Type        | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n+====================+=============+====================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================+\n| ``targets``        | Array       | The short names of the targets that should include this page.                                                                                                                                                                                                                                                                                                                                                                                                                                                      |\nn| ``html``           | String      | *(Optional)* The filename where this file should be written in the output directory. If omitted, Dactyl chooses a filename based on the ``md`` field (if provided), the ``name`` field (if provided), or the current time (as a last resort). By default, generated filenames flatten the folder structure of the md files. To instead replicate the folder structure of the source documents in auto-generated filenames, add ``flatten_default_html_paths: true`` to the top level of your Dactyl config file.   |\nn| ``name``           | String      | *(Optional)* Human-readable display name for this page. If omitted but ``md`` is provided, Dactyl tries to guess the right file name by looking at the first two lines of the ``md`` source file.                                                                                                                                                                                                                                                                                                                  |\nn| ``md``             | String      | *(Optional)* The markdown filename to parse to generate this page, relative to the **content\\_path** in your config. If this is not provided, the source file is assumed to be empty. (You might do that if you use a nonstandard ``template`` for this page.)                                                                                                                                                                                                                                                     |\nn| ``category``       | String      | *(Optional)* The name of a category to group this page into. This is used by Dactyl's built-in templates to organize the table of contents.                                                                                                                                                                                                                                                                                                                                                                        |\nn| ``template``       | String      | *(Optional)* The filename of a custom `Jinja <http://jinja.pocoo.org/>`__ HTML template to use when building this page for HTML, relative to the **template\\_path** in your config.                                                                                                                                                                                                                                                                                                                                |\nn| ``pdf_template``   | String      | *(Optional)* The filename of a custom `Jinja <http://jinja.pocoo.org/>`__ HTML template to use when building this page for PDF, relative to the **template\\_path** in your config.                                                                                                                                                                                                                                                                                                                                 |\nn| ...                | (Various)   | Additional arbitrary key-value pairs as desired. These values can be used by templates or pre-processing.                                                                                                                                                                                                                                                                                                                                                                                                          |\nn\nEditing\n-------\n\nDactyl supports extended Markdown syntax with the `Python-Markdown\nExtra <https://pythonhosted.org/Markdown/extensions/extra.html>`__\nmodule. This correctly parses most GitHub-Flavored Markdown syntax (such\nas tables and fenced code blocks) as well as a few other features.\n\nPre-processing\n~~~~~~~~~~~~~~\n\nDactyl pre-processes Markdown files by treating them as\n`Jinja <http://jinja.pocoo.org/>`__ Templates, so you can use `Jinja's\ntemplating syntax <http://jinja.pocoo.org/docs/dev/templates/>`__ to do\nadvanced stuff like include other files or pull in variables from the\nconfig or commandline. Dactyl passes the following fields to Markdown\nfiles when it pre-processes them:\n\n+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Field              | Value                                                                                                                                                                             |\n+====================+===================================================================================================================================================================================+\n| ``target``         | The `target <#targets>`__ definition of the current target.                                                                                                                       |\n+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``pages``          | The `array of page definitions <#pages>`__ in the current target. Use this to generate navigation across pages. (The default templates don't do this, but you should.)            |\n+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``currentpage``    | The definition of the page currently being rendered.                                                                                                                              |\n+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``categories``     | A de-duplicated array of categories that are used by at least one page in this target, sorted in the order they first appear.                                                     |\n+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``config``         | The global Dactyl config object.                                                                                                                                                  |\n+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``content``        | The parsed HTML content of the page currently being rendered.                                                                                                                     |\n+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``current_time``   | The current date as of rendering. The format is YYYY-MM-DD by default; you can also set the ``time_format`` field to a custom `stftime format string <http://strftime.org/>`__.   |\n+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``mode``           | The output format: either ``html`` (default), ``pdf``, or ``md``.                                                                                                                 |\n+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\nAdding Variables from the Commandline\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can pass in a JSON or YAML-formatted list of variables using\n``--vars`` commandline switch. Any such variables get added as fields of\n``target`` and inherited by ``currentpage`` in any case where\n``currentpage`` does not already have the same variable name set. For\nexample:\n\n.. code:: sh\n\n    $ cat md/vartest.md\n    Myvar is: '{{ target.myvar }}'\n\n    $ dactyl_build --vars '{\"myvar\":\"foo\"}'\n    rendering pages...\n    writing to file: out/index.html...\n    Preparing page vartest.md\n    reading markdown from file: vartest.md\n    ... parsing markdown...\n    ... modifying links for target: default\n    ... re-rendering HTML from soup...\n    writing to file: out/test_vars.html...\n    done rendering\n    copying static pages...\n\n    $ cat out/test_vars.html | grep Myvar\n    <p>Myvar is: 'foo'</p></main>\n\nIf argument to ``--vars`` ends in ``.yaml`` or ``.json``, Dactyl treats\nthe argument as a filename and opens it as a YAML file. (YAML is a\nsuperset of JSON, so this works for JSON files.) Otherwise, Dactyl\ntreats the argument as a YAML/JSON object directly. Be sure that the\nargument is quoted and escaped as necessary based on the commandline\nshell you use.\n\nYou cannot set the following reserved keys:\n\n-  ``name``\n-  ``display_name`` (Instead, use the ``--title`` argument to set the\n   display name of the target on the commandline.)\n-  ``pages``\n\nFilters\n~~~~~~~\n\nFurthermore, Dactyl supports additional custom post-processing through\nthe use of filters. Filters can operate on the markdown (after it's been\npre-processed), on the raw HTML (after it's been parsed), or on a\nBeautifulSoup object representing the output HTML. Filters can also\nexport functions and values that are available to the preprocessor.\n\nDactyl comes with several filters, which you can enable in your config\nfile. You can also write your own filters. If you do, you must specify\nthe paths to the folder(s) containing your filter files in the\n``filter_paths`` array of the config file.\n\nTo enable a filter for a target or page, set the ``filters`` field of\nthe config to be an array of filter names, where the filter names are\nderived from the Python source files in the format\n``filter_<filtername>.py``. Filter names must be valid Python variable\nnames, so they can't start with a numeral and must contain only\nalphanumeric and underscore characters.\n\nDactyl automatically runs the following functions from filter files\n(skipping any that aren't defined):\n\n1. Before running the preprocessor on a page, Dactyl adds all items from\n   each filter's ``export`` global dictionary to the preprocessor\n   environment.\n2. Dactyl runs the ``filter_markdown(md, **kwargs)`` function of each\n   filter after the preprocessor. This function receives the\n   preprocessed markdown as a string in the ``md`` argument and must\n   return a string with the markdown as filtered.\n3. Dactyl runs the ``filter_html(html, **kwargs)`` function after the\n   markdown processor. This function receives the parsed markdown\n   content as an HTML string in the ``html`` argument and must return a\n   string with the HTML as filtered.\n4. Dactyl runs the ``filter_soup(soup, **kwargs)`` function after the\n   HTML filters. This function is expected to directly modify the\n   ``soup`` argument, which contains a `BeautifulSoup 4\n   object <https://www.crummy.com/software/BeautifulSoup/bs4/doc/>`__\n   representing the HTML contents.\n\nThe keyword arguments (``**kwargs``) for the functions may change in\nfuture versions. As of Dactyl 0.5.0, the arguments are as follows:\n\n+--------------------+------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Field              | Type                                                                         | Description                                                                                                                                                                                                         |\n+====================+==============================================================================+=====================================================================================================================================================================================================================+\n| ``currentpage``    | Dict                                                                         | The current page, as defined in the config file plus values inherited from the current target and any processing or calculations. (For example, Dactyl automatically adds a ``name`` field if one isn't present.)   |\n+--------------------+------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``categories``     | List                                                                         | A de-duplicated, ordered list of ``category`` fields present among pages in this target.                                                                                                                            |\n+--------------------+------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``pages``          | List                                                                         | A list of page objects for all pages in the current target, in the same order they appear in the config file.                                                                                                       |\n+--------------------+------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``target``         | Dict                                                                         | The current target definition, as derived from the config file.                                                                                                                                                     |\n+--------------------+------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``current_time``   | String                                                                       | The time this build was started. The format is defined by your config's global ``time_format`` field (in `stftime format <http://strftime.org/>`__), defaulting to YYYY-MM-DD.                                      |\n+--------------------+------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``mode``           | String                                                                       | Either ``html``, ``pdf``, or ``md`` depending on what output Dactyl is building.                                                                                                                                    |\n+--------------------+------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``config``         | Dict                                                                         | The global config object, based on the config file plus any commandline switches.                                                                                                                                   |\n+--------------------+------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``logger``         | `Logger <https://docs.python.org/3/library/logging.html#logger-objects>`__   | The logging object Dactyl uses, with the verbosity set to match user input.                                                                                                                                         |\n+--------------------+------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\nSee the `examples <examples/>`__ for examples of how to do many of these\nthings.\n\nTemplates\n---------\n\nDactyl provides the following information to templates, which you can\naccess with Jinja's templating syntax (e.g.\n``{{ target.display_name }}``):\n\n+-----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Field                 | Value                                                                                                                                                                             |\n+=======================+===================================================================================================================================================================================+\n| ``target``            | The `target <#targets>`__ definition of the current target.                                                                                                                       |\n+-----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``pages``             | The `array of page definitions <#pages>`__ in the current target. Use this to generate navigation across pages. (The default templates don't do this, but you should.)            |\n+-----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``currentpage``       | The definition of the page currently being rendered.                                                                                                                              |\n+-----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``categories``        | A de-duplicated array of categories that are used by at least one page in this target, sorted in the order they first appear.                                                     |\n+-----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``config``            | The global Dactyl config object.                                                                                                                                                  |\n+-----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``content``           | The parsed HTML content of the page currently being rendered.                                                                                                                     |\n+-----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``current_time``      | The current date as of rendering. The format is YYYY-MM-DD by default; you can also set the ``time_format`` field to a custom `stftime format string <http://strftime.org/>`__.   |\n+-----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``mode``              | The output format: either ``html`` (default), ``pdf``, or ``md``.                                                                                                                 |\n+-----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``page_toc``          | A table of contents generated from the current page's headers. Wrap this in a ``<ul>`` element.                                                                                   |\n+-----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``sidebar_content``   | (Deprecated alias for ``page_toc``.)                                                                                                                                              |\n+-----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ripple/dactyl",
    "keywords": "documentation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dactyl",
    "platform": "",
    "project_url": "https://pypi.org/project/dactyl/",
    "release_url": "https://pypi.org/project/dactyl/0.7.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Tools to generate documentation.",
    "version": "0.7.0"
  },
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "84d8f39255b8537eeee11b3d11f81d96",
          "sha256": "79190accd6ac34485c16b4b28dbbaf747fcda3fafc6bd2961958220c3e794aae"
        },
        "downloads": -1,
        "filename": "dactyl-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84d8f39255b8537eeee11b3d11f81d96",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 28622,
        "upload_time": "2017-02-18T06:59:39",
        "url": "https://files.pythonhosted.org/packages/1e/ed/0a572925ea3be051ce5e149ed262da7b17ff9bcf4d0d995bfbc1790b9fe3/dactyl-0.2.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6fe0e4c827eaa3f96e6bee3169848964",
          "sha256": "1a7a81c74c774ee54e6c95638202efc7074d2bd5a70b08ad1dd9bb5e874159e2"
        },
        "downloads": -1,
        "filename": "dactyl-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6fe0e4c827eaa3f96e6bee3169848964",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26814,
        "upload_time": "2017-02-18T06:59:41",
        "url": "https://files.pythonhosted.org/packages/18/83/ecc86b082eecd7474ddd12634859bbbd5cbe1de5369102408af43e534080/dactyl-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "85dc4c65ed59e781bb8d3e0bbb3b085c",
          "sha256": "63a85b419e219048b38f44945f70d79450e1f00b692227bbeec02347b293b4ed"
        },
        "downloads": -1,
        "filename": "dactyl-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85dc4c65ed59e781bb8d3e0bbb3b085c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 40237,
        "upload_time": "2017-02-18T07:00:48",
        "url": "https://files.pythonhosted.org/packages/b9/55/03710e0cff233243742e2ef0b4c33984bc98888c9ad7fdebf8de5d0a3c58/dactyl-0.2.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "abb6edff3aaf3f88624e4ca5ab8ca90d",
          "sha256": "1eb0731cfd7682468dc4820f4b597d13ea49a41d11fb33347b80565b05ad1154"
        },
        "downloads": -1,
        "filename": "dactyl-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "abb6edff3aaf3f88624e4ca5ab8ca90d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 33650,
        "upload_time": "2017-02-18T07:00:50",
        "url": "https://files.pythonhosted.org/packages/3d/b8/b7d13433c2c0d5b54e8da0afb8e38dde6a5cf5ed04617881bddb929f1a79/dactyl-0.2.1.tar.gz"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "03bd564bdc1461faedd3cb440ac4c521",
          "sha256": "020729392e3106a5ffc89056ca7281915ac5b11cf60542c2062452d819a6c6cb"
        },
        "downloads": -1,
        "filename": "dactyl-0.2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "03bd564bdc1461faedd3cb440ac4c521",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 40385,
        "upload_time": "2017-03-02T22:09:55",
        "url": "https://files.pythonhosted.org/packages/75/58/9d006addd5d0004beda0e3dbba7ffa7c3c76bb08125880aeea4ed9e40b54/dactyl-0.2.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c6622f7b07e12a0d90f295dbf7a6085e",
          "sha256": "bd752acf492c2601fd4a0a8ec09410f911fea95a4979a755099d914f9a8d6421"
        },
        "downloads": -1,
        "filename": "dactyl-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c6622f7b07e12a0d90f295dbf7a6085e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32715,
        "upload_time": "2017-03-02T22:09:53",
        "url": "https://files.pythonhosted.org/packages/b3/e6/3944721176f3b82d02829c7a24cc6fe930a855988ba4a983a476e5124bff/dactyl-0.2.2.tar.gz"
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9a24f0df60f28e93d314c8f0d4c06e1e",
          "sha256": "e54b6870ca3ae599cdfa03547ff7b79c2b4321a8cee2f2b48150b63839274a40"
        },
        "downloads": -1,
        "filename": "dactyl-0.2.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a24f0df60f28e93d314c8f0d4c06e1e",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 40610,
        "upload_time": "2017-03-18T02:18:48",
        "url": "https://files.pythonhosted.org/packages/b9/76/ca138467e2afb2861884c8188a6ab9958b801ced845541de5f6633ae51c4/dactyl-0.2.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0f89649eac856dff6ce1f1b5297bba90",
          "sha256": "43cce052db76233da29e4c327894ffa999e579b0875e6522c6760e5d044db7dc"
        },
        "downloads": -1,
        "filename": "dactyl-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0f89649eac856dff6ce1f1b5297bba90",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32886,
        "upload_time": "2017-03-18T02:18:46",
        "url": "https://files.pythonhosted.org/packages/d0/f7/32fe50e5c6a940d7341b39abf475be0306e3baeb50a62e5506cf4ff8703f/dactyl-0.2.3.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6457620e6522eb23011716e698cca9ff",
          "sha256": "67a1de7cd51c2681680d4f0399d4da008fe36c8a4020f6ccbc3d423229de4d60"
        },
        "downloads": -1,
        "filename": "dactyl-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6457620e6522eb23011716e698cca9ff",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 42775,
        "upload_time": "2017-03-21T02:13:33",
        "url": "https://files.pythonhosted.org/packages/15/81/eb574e64605f38d492964a6f146e734389552e6a460b4ab4aeb6d7928808/dactyl-0.3.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7aea243a004c5ab34c29226c9fe738cc",
          "sha256": "43ee982ced4ee9fdb65a960fb48e564537b051a50a7159c0bb8ea0456cca1b9e"
        },
        "downloads": -1,
        "filename": "dactyl-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7aea243a004c5ab34c29226c9fe738cc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 35136,
        "upload_time": "2017-03-21T02:13:32",
        "url": "https://files.pythonhosted.org/packages/df/0f/6ae24d54ef2b5ed14d28ed1a3a189a4bba9fda0dd41ef05bd89fb1aab8e8/dactyl-0.3.0.tar.gz"
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f97db2fcdaefb26b5fb91f7c09f8782e",
          "sha256": "37a756b0a39f8daa3347e2901180fcf837165b9c62b108485f3ba312b246185f"
        },
        "downloads": -1,
        "filename": "dactyl-0.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f97db2fcdaefb26b5fb91f7c09f8782e",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 47261,
        "upload_time": "2017-04-06T00:55:42",
        "url": "https://files.pythonhosted.org/packages/68/8b/2ace65cd49476f167f6e96d89066b9cf57175f959661d452037626b58c1d/dactyl-0.4.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a058aa71004ffb8a17e627f016212373",
          "sha256": "407a1b8546de88e8845812b43c291a3c9373af36b288b597a76290fdc54af02e"
        },
        "downloads": -1,
        "filename": "dactyl-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a058aa71004ffb8a17e627f016212373",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 39118,
        "upload_time": "2017-04-06T00:55:40",
        "url": "https://files.pythonhosted.org/packages/d4/ac/e3b14fb236dda0275f250b2b5402e181064d674b9ff73e49849d67eb3fd4/dactyl-0.4.0.tar.gz"
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d58287322492c079bb70a6af6cd419ff",
          "sha256": "e56ee2818731ca28902b1a64d553b090f10b50e493f146ca94c15b51253223a2"
        },
        "downloads": -1,
        "filename": "dactyl-0.4.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d58287322492c079bb70a6af6cd419ff",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 47268,
        "upload_time": "2017-04-07T19:59:13",
        "url": "https://files.pythonhosted.org/packages/3c/0b/ec9174672694a9039ebebb95faa50099dd212aa1e03396c6b9707ede4244/dactyl-0.4.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "822cd3ac3588412d10dbfc13a7b96501",
          "sha256": "d1bc322ce1e513a6f5b215021c4e9e61138fb9221efb7e58718fefe986cde430"
        },
        "downloads": -1,
        "filename": "dactyl-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "822cd3ac3588412d10dbfc13a7b96501",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 39136,
        "upload_time": "2017-04-07T19:59:11",
        "url": "https://files.pythonhosted.org/packages/bd/b3/56a2e786cb5678d989d80fd389cca63937a2ab4f24914a6334494c28020e/dactyl-0.4.1.tar.gz"
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a09a0c86a659820ff8ceeb307aff5ef0",
          "sha256": "ca0bae9d86b168480fc06574cc63e4db0b3555592110621fa18cb35d4d29096a"
        },
        "downloads": -1,
        "filename": "dactyl-0.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a09a0c86a659820ff8ceeb307aff5ef0",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 49475,
        "upload_time": "2017-04-17T09:10:07",
        "url": "https://files.pythonhosted.org/packages/ea/d0/1f953238a5f3c9c6821f32f5d176672ef82ac6d7104e18006b0cdd7c1574/dactyl-0.5.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1a2082a8b461b771563fbc4fddaabbc3",
          "sha256": "e516aa72042107088a937a784c70bfed6291e7c86f3e13a6e973bc503ca9fc68"
        },
        "downloads": -1,
        "filename": "dactyl-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1a2082a8b461b771563fbc4fddaabbc3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 41455,
        "upload_time": "2017-04-17T09:10:05",
        "url": "https://files.pythonhosted.org/packages/c8/86/f83c9672b840bcad446813beff63088216a73aba0e55bda016b4a758d7bc/dactyl-0.5.0.tar.gz"
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "811b56df94e5998533ed19232c6f98a0",
          "sha256": "6052153c9236af095d363d2667e201d6a3904bb3a19d719b46cb68899f344a65"
        },
        "downloads": -1,
        "filename": "dactyl-0.6.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "811b56df94e5998533ed19232c6f98a0",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 50091,
        "upload_time": "2017-06-07T02:21:09",
        "url": "https://files.pythonhosted.org/packages/85/cd/068722b28c51cf6763ceb501fc94ca812596563064d40a1f31c4794d8ab7/dactyl-0.6.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5f8023341ed8070894b5531665daf7bc",
          "sha256": "9edfd335b9e9db2ed30838aefda28b599a7faff4ff9159b4bde4bfcad75d2291"
        },
        "downloads": -1,
        "filename": "dactyl-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5f8023341ed8070894b5531665daf7bc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42099,
        "upload_time": "2017-06-07T02:21:07",
        "url": "https://files.pythonhosted.org/packages/68/d6/722d842b93932f9ee1506c86924b60e470c48297ffce76edfdec8ad64ff8/dactyl-0.6.0.tar.gz"
      }
    ],
    "0.6.0b2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e64b6a4c881b145eabfe4564a6316cd7",
          "sha256": "77cbecf0b1dcc19fcf14330ddf827b90f7b712eb3e7c6102b40c01933299690c"
        },
        "downloads": -1,
        "filename": "dactyl-0.6.0b2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e64b6a4c881b145eabfe4564a6316cd7",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 50130,
        "upload_time": "2017-06-07T02:20:57",
        "url": "https://files.pythonhosted.org/packages/80/be/9938dba17795756611f50d483e90095aa98dd5a55aeb81612e6730c85e94/dactyl-0.6.0b2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "482dee63ffa47c2a3cbb934da1e888fd",
          "sha256": "e47b88c849ef83c527b83a131b67687e18f3690f79c64df5b2feb7ffeb621022"
        },
        "downloads": -1,
        "filename": "dactyl-0.6.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "482dee63ffa47c2a3cbb934da1e888fd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42096,
        "upload_time": "2017-06-07T02:20:55",
        "url": "https://files.pythonhosted.org/packages/26/27/32aa6460d4785a51dbea502f2436d78ad4ad581f2c8e175ec55edb2a9ed1/dactyl-0.6.0b2.tar.gz"
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "042dfea2a7d73cfee067067b5861231d",
          "sha256": "f1d0fcd1da6e03ba0b39632061aabf91f26493c8b66f0a93d7f2eaefb46d4760"
        },
        "downloads": -1,
        "filename": "dactyl-0.6.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "042dfea2a7d73cfee067067b5861231d",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 50190,
        "upload_time": "2017-06-07T03:20:11",
        "url": "https://files.pythonhosted.org/packages/92/2c/e434f7e56f3f9cdb8a121404c79341d7902f254db949a8f0c310276c4c2c/dactyl-0.6.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "55d9ed60f0b0fdf10b8d80f53eea7cd4",
          "sha256": "b82a86a0f6c6a6105d457aeaa03661ea5d029ee99818c11f657b4ce404ab9884"
        },
        "downloads": -1,
        "filename": "dactyl-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "55d9ed60f0b0fdf10b8d80f53eea7cd4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42197,
        "upload_time": "2017-06-07T03:20:09",
        "url": "https://files.pythonhosted.org/packages/7b/40/4b2b66f089f89bcb2b5ed4deae6d53af19cd7d37a0f3dee1f9e78ebdb018/dactyl-0.6.1.tar.gz"
      }
    ],
    "0.6.1a6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e106ffdb62657c36f5c719de7b08b7bf",
          "sha256": "bdbb242561dcd409813472f271b247c90f2cf783173d1193c8418e64815fe45e"
        },
        "downloads": -1,
        "filename": "dactyl-0.6.1a6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e106ffdb62657c36f5c719de7b08b7bf",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 50225,
        "upload_time": "2017-06-07T03:18:51",
        "url": "https://files.pythonhosted.org/packages/81/48/5eaafda7e56c01a8d9e1ef765c6191c9f186408b7bcc6e992ce28aff64e0/dactyl-0.6.1a6-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "03d574cfe4373c107e896b24894a3d70",
          "sha256": "4d514c9535c8ec50d37ace003810ee5c4093575e55bb62e0a2dd8c29c390dab4"
        },
        "downloads": -1,
        "filename": "dactyl-0.6.1a6.tar.gz",
        "has_sig": false,
        "md5_digest": "03d574cfe4373c107e896b24894a3d70",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42211,
        "upload_time": "2017-06-07T03:18:49",
        "url": "https://files.pythonhosted.org/packages/fc/33/bc1df3b17334f298bd92a8552bb63a02496a33363c43d9c6386ef5f5f5e6/dactyl-0.6.1a6.tar.gz"
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "19b7a02863361d944addf67d37fb2a91",
          "sha256": "8bdeaba5c45f4b489e2423bff7da30f6110f6b3cb2cb202318131ed841da8c4f"
        },
        "downloads": -1,
        "filename": "dactyl-0.6.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "19b7a02863361d944addf67d37fb2a91",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 50221,
        "upload_time": "2017-06-09T01:01:58",
        "url": "https://files.pythonhosted.org/packages/c9/0b/d4ca395240a161124b28b83d36f1e04ac81c71c10010d76004e0ddb30dae/dactyl-0.6.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "eb444e8e35ebb226b01b9fba904d2b73",
          "sha256": "9804302427601a7d5e4d77be9754015b4d6197022ed08eadc10757b8d457d3b6"
        },
        "downloads": -1,
        "filename": "dactyl-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "eb444e8e35ebb226b01b9fba904d2b73",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42243,
        "upload_time": "2017-06-09T01:01:56",
        "url": "https://files.pythonhosted.org/packages/7f/dc/56f7ddc9363f72d7f7ef9f8dbe2fa4153141a6cf2b709d97cced8025f00d/dactyl-0.6.2.tar.gz"
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "72c6846d75cb310d2f266297e023c723",
          "sha256": "f4f1a86c2c6124fba6ff922f6258234441b7f636882470f85d9faf27509d3684"
        },
        "downloads": -1,
        "filename": "dactyl-0.7.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72c6846d75cb310d2f266297e023c723",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 58837,
        "upload_time": "2017-12-20T17:43:31",
        "url": "https://files.pythonhosted.org/packages/39/27/6a448f007b79b0a1b5c8d457d22d1a3855fdd31cdce341d241fff255decb/dactyl-0.7.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "813783abd7ca1f8c14d5ec9d9607f519",
          "sha256": "81ed6c1cb58550cae1f5daaad8fc1b5552a124d586e533f24e59fbe1b8ddc611"
        },
        "downloads": -1,
        "filename": "dactyl-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "813783abd7ca1f8c14d5ec9d9607f519",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 58514,
        "upload_time": "2017-12-20T17:43:29",
        "url": "https://files.pythonhosted.org/packages/ec/3e/ff2e1f3476560d92c05b18500a84cb0a9359b6f617c05664c4445f5a309f/dactyl-0.7.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "72c6846d75cb310d2f266297e023c723",
        "sha256": "f4f1a86c2c6124fba6ff922f6258234441b7f636882470f85d9faf27509d3684"
      },
      "downloads": -1,
      "filename": "dactyl-0.7.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "72c6846d75cb310d2f266297e023c723",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 58837,
      "upload_time": "2017-12-20T17:43:31",
      "url": "https://files.pythonhosted.org/packages/39/27/6a448f007b79b0a1b5c8d457d22d1a3855fdd31cdce341d241fff255decb/dactyl-0.7.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "813783abd7ca1f8c14d5ec9d9607f519",
        "sha256": "81ed6c1cb58550cae1f5daaad8fc1b5552a124d586e533f24e59fbe1b8ddc611"
      },
      "downloads": -1,
      "filename": "dactyl-0.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "813783abd7ca1f8c14d5ec9d9607f519",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 58514,
      "upload_time": "2017-12-20T17:43:29",
      "url": "https://files.pythonhosted.org/packages/ec/3e/ff2e1f3476560d92c05b18500a84cb0a9359b6f617c05664c4445f5a309f/dactyl-0.7.0.tar.gz"
    }
  ]
}