{
  "info": {
    "author": "Ludovic Jacquelin",
    "author_email": "ludovic.jacquelin@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# README #\n\n### About xio\n\nXio is a Python micro framework for quickly write simple microservices REST based Web applications and APIs.\n\nThis package provide out of the box theses components :\n\n- an app server component for HTTP/HTTPS delivery\n\n- 3 app clients for interact whith server in PYTHON, PHP and JAVASCRIPT\n\nXio is builded on concept of resources, app and node\n\n- resources:\n    \n    The main concept is that everything is resource, a resource is a feature which match an uri and we can interact wich \n\n- app:\n    \n    An app is a root resource used as container for all resources it contain\n\n- node \n\n    A node is a app gateway, an app (and so a resource) which provide unique checkpoint for resources delivery\n    Nodes could be linked beetween for create network and so provide decentralized backbone of resources \n    \n    \n\n### Requirements\n\nYou need Python 2.7\n\nThe server component use [Gevent ](https://pypi.python.org/pypi/gevent) \n\nThe (python) client component has no dependency except [ws4py](https://pypi.python.org/pypi/ws4py/0.3.5) if you need Websockets features\n\n\n### Installation\n\nClone xio in a directory which is in your pythonpath\n\n```\ncd xio\nsudo pip install -r requirements.txt\n```\n\n### Create first app\n\nCreate your application directory and edit an app.py file\n\n```\nmkdir myfirstapp\ncd myfirstapp\nvi app.py\n```\n\nHere is an minimalist example of what app.py look like\n\n```\n#-*- coding: utf-8 -*--\n\nimport xio \n\napp = xio.app(__name__)\n\n@app.bind('www')\ndef _(req):\n    return 'Hello World'\n\nif __name__=='__main__':\n\n    app.main()\n```\n\n\n### the request object\n\nIn the previous example we bind the root public resource ('www') of our app to an anonymous function which in charge to rendering the client request\n\nThese function are called handler, all handler took one single argument : req \n\nreq is the Request instance whiche provide these information\n\n    - req.method : the HTTP standard method (GET,POST,PUT,etc...)\n    - req.query : the query in the case of a GET request (in a dict)\n    - req.data : the data in the case of a POST,PUT request (in a dict)\n    - req.headers : the request headers\n    - req.path : the postpath of the request\n    - req.response : the Response object\n    - req.profile : the data profile (extra information from the header)\n\nIn addition an dynamique attribute is automaticaly added depending the method of the request, \n```\nif req.method=='GET':\n    do some stuff...\n``` \ncould be wrote\n```\nif req.GET:\n    do some stuff...\n``` \n     \n\nreq.response is the Response instance for this request\n\n    - req.response.status : for setting the HTTP code\n    - req.response.content : the content of the response (automaticaly took from the handler result)\n    - req.response.content_type : for setting the content_type of the request\n    - req.response.headers : the headers of the response (dict)\n\n\nHere is an example of request from client and serveur\n\n```\nimport xio\n\napp = xio.app()\n\n@app.bind('www')\ndef _(req):\n    if req.GET:\n        return 'it is a GET request'\n    else:\n        return 'it is a %s request' % req.method\n\n\n```\n\nHere is an minimalist example of what app.py look like\n\n```\n#-*- coding: utf-8 -*--\n\nimport xio \n\napp = xio.app(__name__)\n\n@app.bind('www')\ndef _(req):\n    return 'Hello World'\n\nif __name__=='__main__':\n\n    app.main()\n```\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/inxio/xio",
    "keywords": "microservices",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xio",
    "platform": "",
    "project_url": "https://pypi.org/project/xio/",
    "release_url": "https://pypi.org/project/xio/0.0.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "simple micro framework for microservices",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "14159b036d578b63f5c33617f30042ef",
          "sha256": "9ea62f0689ea5172d36eb20f12adeba9d53ea90a9e8667bb0cfb27280e63dda8"
        },
        "downloads": -1,
        "filename": "xio-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "14159b036d578b63f5c33617f30042ef",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40540,
        "upload_time": "2018-02-02T21:54:44",
        "url": "https://files.pythonhosted.org/packages/cd/25/a002b61000e7f6e7368345833ce2802ddb0c8244fc1802daf47023d55fea/xio-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "70e2af8cf81a455bd344c532790147b5",
          "sha256": "7dcf53c472b9d79cc08cc34a711ef48170bb7d9e255f3f05277f8949885def49"
        },
        "downloads": -1,
        "filename": "xio-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "70e2af8cf81a455bd344c532790147b5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40549,
        "upload_time": "2018-02-03T19:45:18",
        "url": "https://files.pythonhosted.org/packages/1b/4f/7d56ee84b913c7067e7abbd70272314408b5273f2db1622f9395fd97c701/xio-0.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "70e2af8cf81a455bd344c532790147b5",
        "sha256": "7dcf53c472b9d79cc08cc34a711ef48170bb7d9e255f3f05277f8949885def49"
      },
      "downloads": -1,
      "filename": "xio-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "70e2af8cf81a455bd344c532790147b5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 40549,
      "upload_time": "2018-02-03T19:45:18",
      "url": "https://files.pythonhosted.org/packages/1b/4f/7d56ee84b913c7067e7abbd70272314408b5273f2db1622f9395fd97c701/xio-0.0.2.tar.gz"
    }
  ]
}