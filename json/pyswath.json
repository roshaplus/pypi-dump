{
  "info": {
    "author": "Xavier Robert",
    "author_email": "xavier.robert@univ-grenoble-alpes.fr",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "pyswath\n========\n\nThis code is to built topographic swath profiles through a region, with a plot of the density of elevation in the box defined around the profile.\n\nIt uses a DEM that is projected in UTM (best input), but will also work with geographic coordinates (lat-long).\n\nThis module may contain numerous bugs, and could probably be ameliorate and/or optimized. If you have any comments, do not hesitate to add a new branch or to contact the author.\nTo know the history, please check the file History.txt\n\nInstall\n-------\n\nTo install it :\n\n.. code-block:: bash\n\n\tpip install pyswath\n\nThe module has been written and tested with Python 2.7, but not with Python 3.\n\nDependencies\n------------\nThis code needs the following python modules and their dependencies, you may install them before the installation of the **pyswath** module:\n\t- math\n\t- copy\n\t- utm\n\t- rasterstats>=0.11\n\t- rasterio\n\t- shapely\n\t- numpy\n\t- matplotlib\n\t- osgeo/gdal\n\t- progress\n\t- time\n\nUsage\n-----\n\nInside a (i)python environnement:\n\nTo import the module:\n\n.. code-block:: python\n\n>>> from pyswath import swathp\n\t\nTo plot a swath profile [A,B] through the raster 'DEM/dem.tif':\n\n.. code-block:: python\n\n    >>> swathp(rasterfnme = 'DEM/dem.tif',A = [(-78.4,-9.3)], B = [(-77.5,-8.5)],Coord = 'latlong', xsteps = [0.02], boxwidths = [0.2], binsize = 20,title = 'CB')\n\n.. danger:: \n\t\n\tBe careful, the units used for the points definition should be the same than for the DEM, and also for xsteps and boxwidth !! \n\tEverything in degrees if Coord = LatLong, and everything in meters if Coord = utm !!\n\nOptions/inputs\n--------------\n\nTo use options or inputs, you need to set them as\t\n\n.. code-block:: python\n\n    >>> swathp(option_name = option_value, [...])\n\t\nOptions/inputs are (option_names):\n\t1. rasterfnme: name of the raster to work with\n\t\t\t\t\tAdd the full path to the raster. Personally, I like to store my rasters in a DEM/folder\n\t\t\t\t\tBe aware that if the input raster is not projected in UTM, the code will create a projected raster in the same folder.\n\t\t\t\t\t\t\n\t\t\t\t\t\tex: ``rasterfnme = 'Dem/Dem_Fusion-Peru_projUTM.tif'``\n\t\t\t\t\t\n\t\t\t\t\tDefault = ``None``\n\t2. A, B: Coordinates of the 2 points A and B defining the whole profile in the same projection system than the DEM\n\t\t\t\tIf multipoints profile (see further), these two points define the two extreme points.\n\t\t\t\tBe careful, do no take oceans, otherwise, statistics will be biased\n\t\t\t\tIf different profiles:\n\t\t\t\t\n\t\t\t\t\tex: ``A = [(-78.255,-9.713),(,),...]``\n\t\t\t\t\t\n\t\t\t\t\t``B = [(-77.255,-9.218),(,),...]``\n\t\t\t\t\n\t\t\t\teach column corresponding to one different profile\n\t\t\t\t\n\t\t\t\tDefault: ``A = None, B = None``\n\t3. Coord: Units of the points coordinates. \n\t\t\t- If Lat/Long : latlong\n\t\t\t- If UTM : utmZONE\n\t\t\t- If the dem is a synthetic dem (This is to avoid the problem of projections\n\t\t\t  If it is set to True, change the value of Factor if needed!) : Coord = 'synthetic'\n\t\t\t- If else, give a projection name that is NOT 'latlong' or 'utmZONE' or 'synthetic'\n\t\t\t\n\t\t\t\tex: ``Coord = 'utm'``\n\t\t\t\t\n\t\t\t\t``Coord = 'latlong'``\n\t\t\t\t\n\t\t\t\t``Coord = 'synthetic'``\n\t\t\t\n\t\t\tDefault ``Coord = 'utm'``\n\t4. factor: Factor is to convert to km (generaly 1000)\n\t\t\t\tif the unit of the DEM is 'meters', factor = 1000\n\t\t\t\t\n\t\t\t\tif the unit of the DEM is 'kilometers', factor = 1\n\t\t\t\t\n\t\t\t\tif the DEM is synthetic, units are arbitrary, so it could be factor = 0.001 (Test it !)\n\t\t\t\t\n\t\t\t\tDefault: ``factor = 1000``\n\n\t5. xstep: Stepping along the profile in the same projection/coordinates system than the DEM\n\t\t\t\tIf more than one profile with different profiles: xsteps = [5000, 2000,...], each column corresponding to one different profile\n\t\t\t\t\n\t\t\t\tIf all the profiles have the same xsteps, just use one column \n\t\t\t\t\n\t\t\t\t\tex: ``xsteps = [500]`` (here in m)\n\t\t\t\t\n\t\t\t\tDefault ``xsteps = [5000]``\n\t6. boxwidth: with of the box around the profile from where are extracted the stats in the same units than the DEM (m if m; km if km; deg if deg)\n\t\t\t\tIf several profiles with different profiles: boxwidths = [20000, 15000,...], each column corresponding to one different profile\n\t\t\t\t\n\t\t\t\tIf all the profiles have the same boxwidth, just use one column \n\t\t\t\t\n\t\t\t\t\tex: ``boxwidths = [2000]`` (here in m)\n\t\t\t\t\n\t\t\t\tDefault ``boxwidths = [20000]``\n\t7. binsize: altitude binsize (for the altitude frequency plot) in the same units than the DEM (m if m; km if km; deg if deg)\n\t\t\t\t\n\t\tex: ``binsize = 100``(in m)\n\t\t\t\t\n\tDefault ``binsiez = 20``\n\t\n\t8. title: title of the graphic\n\t\t\tThe name will also be used to define the name:\n\t\t\t\t- in which the shapefiles are stored\n\t\t\t\t- of the output files\n\t\t\t\n\t\t\t\t\tex: ``title = 'Synth-Essai'``\n\t\t\t\n\t\t\tDefault ``title = 'Swath_profile'``\n\t9. shpbox: Name of the shapefile in which we extract the profile\n\t\t\tDefault: ``shpbox = 'shpbox.shp'``\n\t10. sizeplotx, sizeploty: size of the plot.\n\t\t\t\t\t\t\tStandard size is ``sizeplotx = 8`` and ``sizeploty = 6``\n\t\t\t\t\t\t\tIf you want to use the default/automatic setting, just give the value None to the variables\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tDefault: ``sizeplotx = None``\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tDefault: ``sizeploty = None``\n\t\t\t\t\t\t\t\t\n\t11. densitymin, densitymax: set the density colorbar limits (between [0,1]).\n\t\t\t\t\t\t\t\tSet it to None, if you want to keep the automatic settings\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tDefault: ``densitymin = None``\n\n\t\t\t\t\t\t\t\tDefault: ``densitymax = None``\n\t\t\t\t\t\t\t\t\t\n\t12. remNoData: Flag to remove (``True``) or not (``False``) the NoData values from a DEM\n\t\t\t\t\t2015/08 : does not work very well, avoid it for the moment.\n\t\t\t\t\t\n\t\t\t\t\tDefault: ``remNoData = False``\n\t\t\t\t\t\n\t13. corrnan: Flag to correct (``True``) or no (``False``) the graph from the Nan values\n\t\t\t\tBe careful, it replace the NaN values with the min value of the frequency\n\t\t\t\t\t\n\t\t\t\tDefault: ``corrnan = False``\n\t\t\t\t\t\n\t14. nodatav: value of the NoData\n\t\t\t\tDefault: ``nodatav = 0.0``\n\t15. multipoints: Multipoints section, Flag to set a profil with multipoints\n\t\t\t\t\t\t- [False] = only two points (Default)\n\t\t\t\t\t\t- [True] = more than two points\n\t\t\t\t\t\t- [True, False,...] if several transects, i.e. one boolean for each transect\n\t\t\t\t\t\n\t\t\t\t\t\t\tex: ``multipoints = [False]``\n\t\t\t\t\t\n\t16. nbpointsint: Multipoints section, number of intermediary points in the profile\n\t\t\t\t\tIf different profiles : nbpointsint = [...,3,2,1]\n\t\t\t\t\tChoose the order of the profiles with a decreasing number of intermediary points to avoid error in the code\n\t\t\t\t\t\n\t\t\t\t\t\tex: ``nbpointsint = [0]``\n\t\t\t\t\t\n\t17. pointint: C,D,...: Multipoints section, intermediary points in the profile, given from A to B\n\t\t\t\tBe aware of the order !\n\t\t\t\t\n\t\t\t\t\tGive the name C for the 1st intermediary point (C = [(-78.255,-9.713),(,),...])\n\t\t\t\t\t\n\t\t\t\t\tGive the name D for the 2nd intermediary point (D = [(-78.255,-9.713),(,),...])\n\t\t\t\t\t\n\t\t\t\t\tGive the name E for the 3rd intermediary point\n\t\t\t\t\t\n\t\t\t\t\t...\n\t\t\t\t\t\n\t18. pointsdic: Multipoints section :\n\t\t\t\t\tdictionnary to assign a number to the different points. It should contain the same number of lines than the number of points\n\t\t\t\t\t\n\t\t\t\t\t\tex: ``pointsdic = {1 : C, 2 : D, 3 : E, 4 : F, ... : ...}``\n\t\t\t\t\t\n\t19. printpointsi: Multipoints section, Flag to print (True) or not (False) the position of the intermediary points on the profile\n\t\t\t\t\t\t\n\t\t\t\t\tex: ``printpointsi = True``\n\t\t\t\t\t\t\n\t\t\t\tDefault ``printpointsi = False``\n\t\t\t\t\t\n\t20. idensity: Flag to plot the density (``True``) or not (Default, ``False``)\n\n\nHelp files\n----------\n\nTo get help in your (i)python environnement:\n\n.. code-block:: python\n\n\t>>> help(swathp)\n\nor simply:\n\n.. code-block:: python\n\n\t>>> swathp()\n\nExamples\n--------\n\nTo plot a swath profile [A,B] through the raster 'DEM/dem.tif' that is in lat-long (not projected):\n\n.. code-block:: python\n\n    >>> swathp(rasterfnme = 'DEM/dem.tif',A = [(-78.4,-9.3)], B = [(-77.5,-8.5)], Coord = 'latlong', xsteps = [0.02], boxwidths = [0.2], binsize = 20, title = 'CB')\n\nTo plot a swath profile through the raster 'DEM/Nperu_proj.tif' that is projected to UTM zone 18S:\n\n.. code-block:: python\n    >>> swathp(rasterfnme = 'DEM/Nperu_proj.tif',A = [(162374,9299742)], B = [(321829,9399929)], Coord = 'utm',xsteps = [10000], boxwidths = [20000], binsize = 20, title = 'NPeru')\n\t\nTo plot 2 swath profiles though the raster 'DEM/dem.tif' that is in lat-long (not projected):\n\n.. code-block:: python\n\n    >>> swathp(rasterfnme = 'DEM/dem.tif',A = [(-78.4,-9.3),(-78.4,-8.0)], B = [(-77.5,-8.5),(-76.0,-9.2)], Coord = 'latlong', xsteps = [0.02], boxwidths = [0.2], binsize = 20, title = 'CB')\n\nTo plot 1 swath profile with an intermediary point (kink) through the raster 'DEM/NPeru_proj.tif' that is in Lat-Long:\n\n.. code-block:: python\n\n    >>> swathp(rasterfnme = 'DEM/Nperu_proj.tif',A = [(162374,9299742)], B = [(321829,9399929)], Coord = 'utm', xsteps = [10000], boxwidths = [20000], binsize = 20, title = 'NPeru', multipoints = [True], nbpointsint = [1], pointsdic = {1 : 'C'}, printpointsi = True, C = [(217433,9383481)])\n\t\t\t\nOutputs\n-------\n\nInside the working directory, the code build several folders :\n\t- Data/: For each profile, the code outputs XXXXX files in Data/:\n\t\t+ data_title_Nbprofile.txt: \n\t\t\t* Column 1 = Distance along the profile\n\t\t\t* Column 2 = Altitude\n\t\t\t* Column 3 = Altitude frequency\n\t\t+ datamask_title_Nbprofile.txt\n\t\t+ falti_title_Nbprofile.txt: altitude frequency\n\t\t+ statslines_title_Nbprofile.txt: \n\t\t\t* Column 1 = Distance along profile\n\t\t\t* Column 2 = Min altitude\n\t\t\t* Colunm 3 = Max altitude\n\t\t\t* Column 4 = Median altitude\n\t\t\t* Column 5 = Mean altitude\n\t- Graphs/: for each profile, the code outputs here the graphs in pdf\n\t- shpbox/ (defined in the Variable declaration): In this directory, for each profile (or sub-profile if there are intermediary points), the code outputs:\n\t\t+ a shapefile defining the line between the two points of the profile\n\t\t+ a shapefile that define the box in which the transect is extracted\n\nContact\n-------\n\nIf needed, do not hesitate to add a new branch or to contact the author. \nPlease, use `https://isterre.fr/spip.php?page=contact&id_auteur=303 <https://isterre.fr/spip.php?page=contact&id_auteur=303>`_\n\nLicence\n-------\n\nThis package is licenced with `CCby-nc <https://creativecommons.org/licenses/by-nc/2.0/>`_\n",
    "docs_url": null,
    "download_url": "https://github.com/robertxa/pyswath/archive/master.zip",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/robertxa/pyswath",
    "keywords": null,
    "license": "CCby-nc",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pyswath",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pyswath/",
    "release_url": "https://pypi.org/project/pyswath/0.1.3/",
    "requires_python": null,
    "summary": "package that provide tools to extract swath profiles from a raster map",
    "version": "0.1.3"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3dfd4d4b17830a0717c93d5872711a4a",
          "sha256": "5c3ee1535ae68a8bb3da9837bcfe851941b9bd927794cf0a7813744c102365cb"
        },
        "downloads": 12,
        "filename": "pyswath-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3dfd4d4b17830a0717c93d5872711a4a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20529,
        "upload_time": "2017-02-14T20:34:11",
        "url": "https://files.pythonhosted.org/packages/2e/2a/b3e238b0f6b85f8078e59dd687b59adce889c1ec3982746ac3cc53ed27f3/pyswath-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "11993f18c1641cd85b13065c42fa78c8",
          "sha256": "f1a1079a7991d265d9ecfe761bc47366806e71ccdcb786317a29f9c818bbd99e"
        },
        "downloads": 11,
        "filename": "pyswath-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "11993f18c1641cd85b13065c42fa78c8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20540,
        "upload_time": "2017-02-15T15:57:53",
        "url": "https://files.pythonhosted.org/packages/4b/6e/742bc30030ee619c983b63646288a6b986a063358f12a8a7ba30a3146d6d/pyswath-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b56221bbb7ad3dfb9778c21098e4ba80",
          "sha256": "2543393e7bd3fe6b70925af6b8a48df308b8109ef0201fd8e8905bced0b8b091"
        },
        "downloads": 0,
        "filename": "pyswath-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b56221bbb7ad3dfb9778c21098e4ba80",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21479,
        "upload_time": "2017-06-07T21:27:45",
        "url": "https://files.pythonhosted.org/packages/2f/58/0ae5149df5aef03d4023c951d8b8debf616d42cd51b1ea8a693570a9361e/pyswath-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "190f1d2ae15aefc47bfd2f85355e44ee",
          "sha256": "7e8ee9828080cc687596bf89a222f76a4c7109d3105cc60f33e113da091a23df"
        },
        "downloads": 0,
        "filename": "pyswath-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "190f1d2ae15aefc47bfd2f85355e44ee",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21562,
        "upload_time": "2017-06-07T22:07:31",
        "url": "https://files.pythonhosted.org/packages/68/22/abc5ec50d2c43de936b2fefe5f7499b393baeb7d4cc73506838776ac4ad9/pyswath-0.1.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "190f1d2ae15aefc47bfd2f85355e44ee",
        "sha256": "7e8ee9828080cc687596bf89a222f76a4c7109d3105cc60f33e113da091a23df"
      },
      "downloads": 0,
      "filename": "pyswath-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "190f1d2ae15aefc47bfd2f85355e44ee",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 21562,
      "upload_time": "2017-06-07T22:07:31",
      "url": "https://files.pythonhosted.org/packages/68/22/abc5ec50d2c43de936b2fefe5f7499b393baeb7d4cc73506838776ac4ad9/pyswath-0.1.3.tar.gz"
    }
  ]
}