{
  "info": {
    "author": "laughingman7743",
    "author_email": "laughingman7743@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Database :: Front-Ends"
    ],
    "description": ".. image:: https://img.shields.io/pypi/pyversions/PyAthena.svg\n    :target: https://pypi.python.org/pypi/PyAthena/\n\n.. image:: https://circleci.com/gh/laughingman7743/PyAthena.svg?style=shield\n    :target: https://circleci.com/gh/laughingman7743/PyAthena\n\n.. image:: https://codecov.io/gh/laughingman7743/PyAthena/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/laughingman7743/PyAthena\n\n.. image:: https://img.shields.io/pypi/l/PyAthena.svg\n    :target: https://github.com/laughingman7743/PyAthena/blob/master/LICENSE\n\n\nPyAthena\n========\n\nPyAthena is a Python `DB API 2.0 (PEP 249)`_ compliant client for `Amazon Athena`_.\n\n.. _`DB API 2.0 (PEP 249)`: https://www.python.org/dev/peps/pep-0249/\n.. _`Amazon Athena`: http://docs.aws.amazon.com/athena/latest/APIReference/Welcome.html\n\nRequirements\n------------\n\n* Python\n\n  - CPython 2,7, 3,4, 3.5, 3.6\n\nInstallation\n------------\n\n.. code:: bash\n\n    $ pip install PyAthena\n\nExtra packages:\n\n+---------------+--------------------------------------+----------+\n| Package       | Install command                      | Version  |\n+===============+======================================+==========+\n| Pandas        | ``pip install PyAthena[Pandas]``     | >=0.19.0 |\n+---------------+--------------------------------------+----------+\n| SQLAlchemy    | ``pip install PyAthena[SQLAlchemy]`` | >=1.0.0  |\n+---------------+--------------------------------------+----------+\n\nUsage\n-----\n\nBasic usage\n~~~~~~~~~~~\n\n.. code:: python\n\n    from pyathena import connect\n\n    cursor = connect(aws_access_key_id='YOUR_ACCESS_KEY_ID',\n                     aws_secret_access_key='YOUR_SECRET_ACCESS_KEY',\n                     s3_staging_dir='s3://YOUR_S3_BUCKET/path/to/',\n                     region_name='us-west-2').cursor()\n    cursor.execute(\"SELECT * FROM one_row\")\n    print(cursor.description)\n    print(cursor.fetchall())\n\nCursor iteration\n~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from pyathena import connect\n\n    cursor = connect(aws_access_key_id='YOUR_ACCESS_KEY_ID',\n                     aws_secret_access_key='YOUR_SECRET_ACCESS_KEY',\n                     s3_staging_dir='s3://YOUR_S3_BUCKET/path/to/',\n                     region_name='us-west-2').cursor()\n    cursor.execute(\"SELECT * FROM many_rows LIMIT 10\")\n    for row in cursor:\n        print(row)\n\nQuery with parameter\n~~~~~~~~~~~~~~~~~~~~\n\nSupported `DB API paramstyle`_ is only ``PyFormat``.\n``PyFormat`` only supports `named placeholders`_ with old ``%`` operator style and parameters specify dictionary format.\n\n.. code:: python\n\n    from pyathena import connect\n\n    cursor = connect(aws_access_key_id='YOUR_ACCESS_KEY_ID',\n                     aws_secret_access_key='YOUR_SECRET_ACCESS_KEY',\n                     s3_staging_dir='s3://YOUR_S3_BUCKET/path/to/',\n                     region_name='us-west-2').cursor()\n    cursor.execute(\"\"\"\n                   SELECT col_string FROM one_row_complex\n                   WHERE col_string = %(param)s\n                   \"\"\", {'param': 'a string'})\n    print(cursor.fetchall())\n\nif ``%`` character is contained in your query, it must be escaped with ``%%`` like the following:\n\n.. code:: sql\n\n    SELECT col_string FROM one_row_complex\n    WHERE col_string = %(param)s OR col_string LIKE 'a%%'\n\n.. _`DB API paramstyle`: https://www.python.org/dev/peps/pep-0249/#paramstyle\n.. _`named placeholders`: https://pyformat.info/#named_placeholders\n\nSQLAlchemy\n~~~~~~~~~~\n\nInstall SQLAlchemy with ``pip install SQLAlchemy>=1.0.0`` or ``pip install PyAthena[SQLAlchemy]``.\nSupported SQLAlchemy is 1.0.0 or higher.\n\n.. code:: python\n\n    from urllib.parse import quote_plus  # PY2: from urllib import quote_plus\n    from sqlalchemy.engine import create_engine\n    from sqlalchemy.sql.expression import select\n    from sqlalchemy.sql.functions import func\n    from sqlalchemy.sql.schema import Table, MetaData\n\n    conn_str = 'awsathena+rest://{aws_access_key_id}:{aws_secret_access_key}@athena.{region_name}.amazonaws.com:443/'\\\n               '{schema_name}?s3_staging_dir={s3_staging_dir}'\n    engine = create_engine(conn_str.format(\n        aws_access_key_id=quote_plus('YOUR_ACCESS_KEY_ID'),\n        aws_secret_access_key=quote_plus('YOUR_SECRET_ACCESS_KEY'),\n        region_name='us-west-2',\n        schema_name='default',\n        s3_staging_dir=quote_plus('s3://YOUR_S3_BUCKET/path/to/')))\n    many_rows = Table('many_rows', MetaData(bind=engine), autoload=True)\n    print(select([func.count('*')], from_obj=many_rows).scalar())\n\nThe connection string has the following format:\n\n.. code:: python\n\n    awsathena+rest://{aws_access_key_id}:{aws_secret_access_key}@athena.{region_name}.amazonaws.com:443/{schema_name}?s3_staging_dir={s3_staging_dir}&...\n\nNOTE: ``s3_staging_dir`` requires quote. If ``aws_access_key_id``, ``aws_secret_access_key`` and other parameter contain special characters, quote is also required.\n\nPandas\n~~~~~~\n\nMinimal example for Pandas DataFrame:\n\n.. code:: python\n\n    from pyathena import connect\n    import pandas as pd\n\n    conn = connect(aws_access_key_id='YOUR_ACCESS_KEY_ID',\n                   aws_secret_access_key='YOUR_SECRET_ACCESS_KEY',\n                   s3_staging_dir='s3://YOUR_S3_BUCKET/path/to/',\n                   region_name='us-west-2')\n    df = pd.read_sql(\"SELECT * FROM many_rows\", conn)\n    print(df.head())\n\nAs Pandas DataFrame:\n\n.. code:: python\n\n    from pyathena import connect\n    from pyathena.util import as_pandas\n\n    cursor = connect(aws_access_key_id='YOUR_ACCESS_KEY_ID',\n                     aws_secret_access_key='YOUR_SECRET_ACCESS_KEY',\n                     s3_staging_dir='s3://YOUR_S3_BUCKET/path/to/',\n                     region_name='us-west-2').cursor()\n    cursor.execute(\"SELECT * FROM many_rows\")\n    df = as_pandas(cursor)\n    print(df.describe())\n\nCredentials\n-----------\n\nSupport `Boto3 credentials`_.\n\n.. _`Boto3 credentials`: http://boto3.readthedocs.io/en/latest/guide/configuration.html\n\nAdditional environment variable:\n\n.. code:: bash\n\n    $ export AWS_ATHENA_S3_STAGING_DIR=s3://YOUR_S3_BUCKET/path/to/\n\nTesting\n-------\n\nDepends on the AWS CLI credentials and the following environment variables:\n\n~/.aws/credentials\n\n.. code:: cfg\n\n    [default]\n    aws_access_key_id=YOUR_ACCESS_KEY_ID\n    aws_secret_access_key=YOUR_SECRET_ACCESS_KEY\n\nEnvironment variables\n\n.. code:: bash\n\n    $ export AWS_DEFAULT_REGION=us-west-2\n    $ export AWS_ATHENA_S3_STAGING_DIR=s3://YOUR_S3_BUCKET/path/to/\n\nRun test\n~~~~~~~~\n\n.. code:: bash\n\n    $ pip install pytest awscli\n    $ scripts/upload_test_data.sh\n    $ py.test\n    $ scripts/delete_test_data.sh\n\nRun test multiple Python versions\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    $ pip install tox awscli\n    $ scripts/upload_test_data.sh\n    $ pyenv local 2.7.13 3.4.6 3.5.3 3.6.1\n    $ tox\n    $ scripts/delete_test_data.sh",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/laughingman7743/PyAthena/",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyAthena",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/PyAthena/",
    "release_url": "https://pypi.org/project/PyAthena/1.0.2/",
    "requires_python": "",
    "summary": "Python DB API 2.0 (PEP 249) compliant client for Amazon Athena",
    "version": "1.0.2"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f1e23678368e51b9072828d6befbf5aa",
          "sha256": "1bfb7000d546ba7c342bf4d94bed2c8632e5afb342cbffd9a7ff7b9771230771"
        },
        "downloads": 0,
        "filename": "PyAthena-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1e23678368e51b9072828d6befbf5aa",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 15308,
        "upload_time": "2017-05-20T23:03:52",
        "url": "https://files.pythonhosted.org/packages/ce/26/7a67f35b3071167c8a4fce677cb3ae1971ea51d65d5626bac9872903a158/PyAthena-1.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "36c52c019799f4597c9d73e62ba30962",
          "sha256": "0e333963f19404225673e348c244f3c780e10de1b2b8ea669ba8e20ae3199db8"
        },
        "downloads": 0,
        "filename": "PyAthena-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "36c52c019799f4597c9d73e62ba30962",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12068,
        "upload_time": "2017-05-20T23:03:33",
        "url": "https://files.pythonhosted.org/packages/28/ea/1cac5d5ba1f484a04e96032ead8f721ce5766e262def1d5545f419ee2b17/PyAthena-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a0b4f7f8173fb744095c255074e1306b",
          "sha256": "5ba916a3cc3814386718f6f8049a9b85563f28ba6f77c9d40349d43da2e95f71"
        },
        "downloads": 0,
        "filename": "PyAthena-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a0b4f7f8173fb744095c255074e1306b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 16519,
        "upload_time": "2017-05-28T10:30:42",
        "url": "https://files.pythonhosted.org/packages/a8/af/df161b38d94819d673f70145a2b0842629c5557c2a7aac2b3d7635d9a7b8/PyAthena-1.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "53b0c1c03bde3376082244307e2dbbaa",
          "sha256": "cbcc20339bfedace8386da1317e539128b44af2a6f657de9fed09ed5f075c23b"
        },
        "downloads": 0,
        "filename": "PyAthena-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "53b0c1c03bde3376082244307e2dbbaa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12971,
        "upload_time": "2017-05-28T10:30:27",
        "url": "https://files.pythonhosted.org/packages/92/94/2f06a5315e0a997d59276ccd85d34cd0a91f4eec9d8f8c3c3eefa420292d/PyAthena-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f00a52589b0fdfc08e7918b23f31aec0",
          "sha256": "fa07421dd3182f14d5792c7bd795355b06fecb0204c93ed35bf79a8455d37064"
        },
        "downloads": 0,
        "filename": "PyAthena-1.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f00a52589b0fdfc08e7918b23f31aec0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 16576,
        "upload_time": "2017-06-04T07:23:39",
        "url": "https://files.pythonhosted.org/packages/06/4d/0c60f3258302a4f5f738fe4ce32ad3275100bbda56bc3c9f76697b82a6d5/PyAthena-1.0.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ed5eae04cb9db05ef55272efd5577b0a",
          "sha256": "69d107feb1c8fde45ae0394a2feb5dd0a78e004a71780a66f191c41af332f323"
        },
        "downloads": 0,
        "filename": "PyAthena-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ed5eae04cb9db05ef55272efd5577b0a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13046,
        "upload_time": "2017-06-04T07:17:03",
        "url": "https://files.pythonhosted.org/packages/8b/fa/ed08726c5a36d3c5e1be639f9c8050dbd91a6986d43e824ea593c68863ba/PyAthena-1.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f00a52589b0fdfc08e7918b23f31aec0",
        "sha256": "fa07421dd3182f14d5792c7bd795355b06fecb0204c93ed35bf79a8455d37064"
      },
      "downloads": 0,
      "filename": "PyAthena-1.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f00a52589b0fdfc08e7918b23f31aec0",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 16576,
      "upload_time": "2017-06-04T07:23:39",
      "url": "https://files.pythonhosted.org/packages/06/4d/0c60f3258302a4f5f738fe4ce32ad3275100bbda56bc3c9f76697b82a6d5/PyAthena-1.0.2-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "ed5eae04cb9db05ef55272efd5577b0a",
        "sha256": "69d107feb1c8fde45ae0394a2feb5dd0a78e004a71780a66f191c41af332f323"
      },
      "downloads": 0,
      "filename": "PyAthena-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ed5eae04cb9db05ef55272efd5577b0a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 13046,
      "upload_time": "2017-06-04T07:17:03",
      "url": "https://files.pythonhosted.org/packages/8b/fa/ed08726c5a36d3c5e1be639f9c8050dbd91a6986d43e824ea593c68863ba/PyAthena-1.0.2.tar.gz"
    }
  ]
}