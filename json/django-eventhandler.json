{
  "info": {
    "author": "Byte B.V.",
    "author_email": "tech@byte.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Communications",
      "Topic :: Internet",
      "Topic :: Utilities"
    ],
    "description": "===================\ndjango-eventhandler\n===================\nThis is an event handler that handles messages from an AMQP server, installable as a Django application. Events are\nJSON-encoded dicts that have a key called 'type'. The eventhandler calls functions that have bound themselves to an\nevent using a decorator.\n\n\nInstallation and configuration\n------------------------------\nInstall the application in your Django project. Add `'eventhandler'` to your `INSTALLED_APPS` setting. Then, add the\nfollowing two settings to your project settings file.\n::\n\n  LISTENER_URL = 'amqps://<user>:<pass>@<hostname>/<vhost>'\n  LISTENER_QUEUE = 'my-application'\n\nOptionally, you can also specify these three settings, to have an exchange declared.\n::\n\n  LISTENER_EXCHANGE = 'events'\n  LISTENER_EXCHANGE_TYPE = 'topic'\n  LISTENER_ROUTING_KEY = '#'\n\n\nRunning the event handler\n-------------------------\nManually: `python manage.py event_listener`. To daemonize it, you can use something like `supervisor` to manage the\nprocess.\n\n\nUsage\n-----\nEvents that are received from AMQP should be JSON-encoded dicts. Each message should have a key named `type`, with `str`\nvalue. This value can be used in a decorator, to have the event handler execute a function when receiving an event.\n\nExample:\n\n.. code-block:: python\n\n    from eventhandler import handles_event\n\n    @handles_event('my_event')\n    def do_something_clever(event):\n        pass\n\nNow each event with a `'type': 'my_event'` combo will be passed into this function. Of course it's possible to have\nmore than one handler for an event, or have one handler handle multiple events.\n\n.. code-block:: python\n\n    from eventhandler import handles_event\n\n    @handles_event('my_other_event')\n    @handles_event('my_event')\n    def do_something_clever(event):\n        pass\n\n    @handles_event('my_other_event')\n    def do_something_else(event):\n        pass\n\n\n**NB** Make sure that your handlers are in a place that's loaded/scanned on startup of Django,\n otherwise the decorators won't register the handlers. For instance, for a Django-application,\n `my_app/__init__.py` is scanned on startup (provided `my_app` is in `INSTALLED_APPS`). So if\n your handlers are in `my_app/events.py`, you could load them from there:\n\n.. code-block:: python\n\n    # my_app/__init__.py:\n\n    # Load handlers for events, so django-eventhandlers picks 'em up\n    import my_app.events  # NOQA (keep pyflakes happy)\n\n\nRunning tests\n-------------\nJust run `python manage.py test` to run tests against your current setup. Run `tox` to run tests for various versions of\nDjango. Currently, Django 1.6 through 1.9 on Python 2.7 are tested.\n\n\n=====\nAbout\n=====\nThis software is brought to you by Byte, a webhosting provider based in Amsterdam, The Netherlands. We specialize in\nfast and secure Magento hosting and scalable cluster hosting.\n\nCheck out our `Github page <https://github.com/ByteInternet>`_ for more open source software or `our site <https://www.byte.nl>`_\nto learn about our products and technologies. Look interesting? Reach out about `joining the team <https://www.byte.nl/vacatures>`_.\nOr just drop by for a cup of excellent coffee if you're in town!\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ByteInternet/django-eventhandler",
    "keywords": "amqp django rabbitmq events eventhandler",
    "license": "3-clause BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-eventhandler",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-eventhandler/",
    "release_url": "https://pypi.org/project/django-eventhandler/0.4.2/",
    "requires_python": "",
    "summary": "RabbitMQ event handler as a Django module",
    "version": "0.4.2"
  },
  "releases": {
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7a1f0900649d3bb07ff95f18015bde5d",
          "sha256": "bb0c448d98c8e1bd9acd850ad6132e2079165a7f0982ab0b852664bde7ce74ed"
        },
        "downloads": 216,
        "filename": "django-eventhandler-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7a1f0900649d3bb07ff95f18015bde5d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4378,
        "upload_time": "2016-03-18T14:10:55",
        "url": "https://files.pythonhosted.org/packages/cb/47/9351ff1b0859ad89c7b63a833730191b6877c81602f8dcbf6a3c254d7093/django-eventhandler-0.3.2.tar.gz"
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ab1927f552e25b6ecd70db1d9bd5df7f",
          "sha256": "b1f248584520bfa8c9d55a21061c7b8cc5444d2f387cd36c098e33c37030f121"
        },
        "downloads": 197,
        "filename": "django-eventhandler-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ab1927f552e25b6ecd70db1d9bd5df7f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4738,
        "upload_time": "2016-03-30T14:26:58",
        "url": "https://files.pythonhosted.org/packages/b7/f5/5260b0a566892ca239b6b86df474e4eac9c7ba60c60b5091be023a60879d/django-eventhandler-0.3.3.tar.gz"
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cad349983f56f6a70ec049cb23102745",
          "sha256": "ada4d325246907841344c195d5f420156712146d4393fada709f1984291532d2"
        },
        "downloads": 156,
        "filename": "django_eventhandler-0.4.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "cad349983f56f6a70ec049cb23102745",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 5218,
        "upload_time": "2016-07-21T09:45:40",
        "url": "https://files.pythonhosted.org/packages/b5/d5/b4844475d47760ac90fef3231788a7ba5c724e4f3e604f7539ef7132b37d/django_eventhandler-0.4.1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7a50606b76bf98483530db91af84fc80",
          "sha256": "424a7a37898f403da8a0166f91fee6a248b9ae559536e41f41507b4f71c35611"
        },
        "downloads": 431,
        "filename": "django-eventhandler-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7a50606b76bf98483530db91af84fc80",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4972,
        "upload_time": "2016-07-21T09:45:43",
        "url": "https://files.pythonhosted.org/packages/7d/74/467f646f96408e8d23670433832a04687e3e7b0e07cbe153544912588c54/django-eventhandler-0.4.1.tar.gz"
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "96cc3e28623561fa7a990674659b7916",
          "sha256": "2f6b00b86acd7d9921fce6d3bc79b701bfdb34401704759f4a659f24e8298e63"
        },
        "downloads": 21,
        "filename": "django_eventhandler-0.4.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "96cc3e28623561fa7a990674659b7916",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 5256,
        "upload_time": "2017-03-31T09:56:13",
        "url": "https://files.pythonhosted.org/packages/d8/c9/81304d2875343bbb46348997e090e00c96ef33136e4e68131090cc1aec68/django_eventhandler-0.4.2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b326a99a08ac693cc24a586e07fb2c15",
          "sha256": "1e15600c3140c60a2d3d4b948a4187300d45ab0707be9b80968e3dba08d16aca"
        },
        "downloads": 18,
        "filename": "django-eventhandler-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b326a99a08ac693cc24a586e07fb2c15",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5002,
        "upload_time": "2017-03-31T09:56:15",
        "url": "https://files.pythonhosted.org/packages/c0/df/53a0d0a4177d81495c73ff52b3e7e6d9e8650f2fb887880338f76a95c1f0/django-eventhandler-0.4.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "96cc3e28623561fa7a990674659b7916",
        "sha256": "2f6b00b86acd7d9921fce6d3bc79b701bfdb34401704759f4a659f24e8298e63"
      },
      "downloads": 21,
      "filename": "django_eventhandler-0.4.2-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "96cc3e28623561fa7a990674659b7916",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 5256,
      "upload_time": "2017-03-31T09:56:13",
      "url": "https://files.pythonhosted.org/packages/d8/c9/81304d2875343bbb46348997e090e00c96ef33136e4e68131090cc1aec68/django_eventhandler-0.4.2-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "b326a99a08ac693cc24a586e07fb2c15",
        "sha256": "1e15600c3140c60a2d3d4b948a4187300d45ab0707be9b80968e3dba08d16aca"
      },
      "downloads": 18,
      "filename": "django-eventhandler-0.4.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b326a99a08ac693cc24a586e07fb2c15",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5002,
      "upload_time": "2017-03-31T09:56:15",
      "url": "https://files.pythonhosted.org/packages/c0/df/53a0d0a4177d81495c73ff52b3e7e6d9e8650f2fb887880338f76a95c1f0/django-eventhandler-0.4.2.tar.gz"
    }
  ]
}