{
  "info": {
    "author": "Sergey Prytkov",
    "author_email": "sergej.prytkov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Topic :: Home Automation",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Hardware"
    ],
    "description": "NooLite-F\n=========\n\nPython module to work with NooLite-F (MTRF-64-USB)\n\nSupported commands:\n\n* on - turn on the module\n* off - turn off the module\n* switch - switch module state\n\n* temporary_on - turn on the module for a specified time\n* enable_temporary_on - enable \"temporary on\" mode\n* disable_temporary_on - disable \"temporary on\" mode\n\n* bright_tune - start to increase/decrease brightness\n* bright_tune_back - invert direction of the brightness change\n* bright_tune_stop - stop brightness changing\n* bright_tune_custom - start to increase/decrease brightness with a specified speed\n* bright_step - increase/decrease brightness once with a specified step\n* set_brightness - set brightness\n\n* load_preset - load saved module state from preset\n* save_preset - save current module state as preset\n\n* roll_rgb_color - start color changing **(only for RGB Led modules)**\n* switch_rgb_color - switch color  **(only for RGB Led modules)**\n* switch_rgb_mode - switch color changing modes **(only for RGB Led modules)**\n* switch_rgb_mode_speed - switch speed of the color changing **(only for RGB Led modules)**\n* set_rgb_brightness - set brightness for each rgb color **(only for RGB Led modules)**\n\n* read_state - read module state **(only for NooLite-F modules)**\n\n* bind - send bind command to module\n* unbind - send unbind command to module\n* service_mode_on - turn on the service mode on module **(only for NooLite-F modules)**\n* service_mode_off - turn off the service mode on module **(only for NooLite-F modules)**\n\nEach command can accept following parameters:\n\n* channel - the number of the channel for command. The command will be send to all modules that are binded with selected channel.\n* broadcast - broadcast mode for command. If True then command will be send simultaneously to all modules that are binded with selected channel (default - False)\n* mode - mode of the command sending. TX - for nooLite module (without feedback), TX_F - for nooLite-F modules (with feedback).\n\nSome commands require additional parameters. For more details see inline help.\n\n\nIn response for each command returns:\n\n* for **nooLite-F** modules returns array which contains command result and module info for each module that are binded with selected channel.\n* for **nooLite** modules returns nothing.\n\nCommand result equals True if command send successfully, otherwise False.\nModule info contains information about module: type, firmware version, state (on/off/temporary on), current brightness and bind mode (on/off)::\n\n    [\n        (True, <ModuleInfo (0x2e25b90), id: 0x52e9, type: 1, hardware: 3, state: 1, brightness: 1.0, mode: 0>),\n        (True, <ModuleInfo (0x2e25a90), id: 0x52e3, type: 1, hardware: 3, state: 1, brightness: 1.0, mode: 0>)\n    ]\n\nIf command result is False, then module info is None.::\n\n    [(False, None)]\n\nNote\n====\n\nTested with MTRF-64-USB adapter and SLF-1-300, SD-1-180, SU-1-500 modules.\n\nExample\n=======\n\nExample of usage::\n\n    noolite = NooLiteService(port=\"COM3\")\n    noolite.on(1)\n    noolite.set_brightness(1, 0.7)\n    noolite.off(1)\n\n    noolite.on(2, mode = Mode.TX)\n    noolite.set_brightness(2, 0.7, mode = Mode.TX)\n    noolite.off(2)\n\nor::\n\n    module = Dimmer(\"COM3\", 1, ModuleType.NOOLITE_F, true)\n    module.on()\n    module.set_brightness(0.7)\n    module.off()\n\n    module = Dimmer(\"COM3\", 2, ModuleType.NOOLITE)\n    module.on()\n    module.set_brightness(0.7)\n    module.off()",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/SergejPr/NooLite-F",
    "keywords": "noolite noolite-f noolitef",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "NooLite-F",
    "platform": "any",
    "project_url": "https://pypi.org/project/NooLite-F/",
    "release_url": "https://pypi.org/project/NooLite-F/0.0.4/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Module to work with NooLite_F (MTRF-64-USB)",
    "version": "0.0.4"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cdf03f948df6c95bda4877defe44b911",
          "sha256": "a5d89914227836d9cc2db9d6fe52b17fcebe1dc4911e3915a9f32e0c7b515f5e"
        },
        "downloads": -1,
        "filename": "NooLite_F-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cdf03f948df6c95bda4877defe44b911",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5153,
        "upload_time": "2017-10-16T23:38:19",
        "url": "https://files.pythonhosted.org/packages/74/76/43c6a7eb72704e1adaafbab0e645f7686a03cca8b3ee54b36c67463b1e35/NooLite_F-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "24935081ad7f5c6e135c80b8c399e559",
          "sha256": "5a19764a0be9d70e4479d34b32e4503780473d804949fe645e0e8722517dbfcf"
        },
        "downloads": -1,
        "filename": "NooLite_F-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "24935081ad7f5c6e135c80b8c399e559",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5122,
        "upload_time": "2017-10-16T23:45:22",
        "url": "https://files.pythonhosted.org/packages/77/58/e8a9e3360f39a3ac75a2bf42bc3d9da03044f745d382a496c49a074b767d/NooLite_F-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cfd84fc92ba1abf0307fec6fcbfca1f2",
          "sha256": "d421a1ebf86d4739b679f48828a553c64a7b8e3e80e6726773bc667b106318da"
        },
        "downloads": -1,
        "filename": "NooLite_F-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cfd84fc92ba1abf0307fec6fcbfca1f2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5096,
        "upload_time": "2017-10-16T23:53:06",
        "url": "https://files.pythonhosted.org/packages/d1/14/218c5203f50857de77311837dd79dbbf06c9e9256b17ccf845749689f121/NooLite_F-0.0.3.tar.gz"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a75a0c78b0754f4d73a13d0cb6b768e7",
          "sha256": "23b7e7e109fbe1793378c913dab1c68c7734b2ec33ca249787850f699e44444a"
        },
        "downloads": -1,
        "filename": "NooLite_F-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a75a0c78b0754f4d73a13d0cb6b768e7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17091,
        "upload_time": "2017-10-21T22:30:41",
        "url": "https://files.pythonhosted.org/packages/2a/17/7548c491086816be48ece66aae06315ba1d2a51b4960a528de9cadb9350f/NooLite_F-0.0.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a75a0c78b0754f4d73a13d0cb6b768e7",
        "sha256": "23b7e7e109fbe1793378c913dab1c68c7734b2ec33ca249787850f699e44444a"
      },
      "downloads": -1,
      "filename": "NooLite_F-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "a75a0c78b0754f4d73a13d0cb6b768e7",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 17091,
      "upload_time": "2017-10-21T22:30:41",
      "url": "https://files.pythonhosted.org/packages/2a/17/7548c491086816be48ece66aae06315ba1d2a51b4960a528de9cadb9350f/NooLite_F-0.0.4.tar.gz"
    }
  ]
}