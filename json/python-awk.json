{
  "info": {
    "author": "Jason Trigg",
    "author_email": "jasontrigg0@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "pawk is a python-based replacement for awk.\n\nIt uses python for line-by-line processing of files\n\nExamples:\n\n#pawk automatically reads lines as csv rows and stores the result as a list in \"r\"\n#-g (\"grep\") keeps a subset of lines satisfying a given condition\n\n#Selects lines from input.txt with at least 3 csv fields\n> pawk -f input.txt -g 'len(r) > 2'\n\n\n#Keep a subset of lines where the second csv field is non-empty\n> pawk -f input.txt -g 'r[1]'\n\n\n#The above may crash if some lines have only one csv field\n#Use this instead:\n> pawk -f input.txt -g 'len(r) > 1 and r[1]'\n\n\n#The raw line is stored in the \"l\" variable\n#Keep a subset of lines where l isn't empty and the first character is \"a\"\n> pawk -f input.txt -g 'l != \"\" and l[0] == \"a\"'\n\n\n#Run certain code for each input line using -p\n#Using -p prevents the default printing of the line\n\n#For each line of the input, print that line with whitespace stripped\n> pawk -f input.txt -p 'print l.strip()'\n\n\n#default value of -f is /dev/stdin\n> less input.txt | pawk -p 'print len(r)'\n\n\n#-d sets the input delimiter\n#the output delimiter is \",\", so this command converts a tsv to a csv\n> pawk -f input.txt -d '\\t'\n\n\n#pawk store the line number (zero-indexed) in the \"i\" variable\n#only keep lines starting with the 1133rd\n> pawk -f input.txt -g 'i>=1132'\n\n\n#replace a regular expression from each line (python re module imported by default)\n> pawk -f input.txt -p 'print re.sub(\"U_C_Rate\",\"firearm_rate\",l)'\n\n#-b runs code before any lines are processed\n#-e runs code after all lines are processed\n#To add up a list of floats\n> pawk -f input.txt -b \"cnt=0\" -p \"cnt += float(l)\" -e \"print cnt\"\n\n\n\n\n\nWriting multi-line python in pawk:\nHeavily inspired by a source I can't find right now, pawk can process strings representing multi-line python. \n\nexamples:\n#(semi-colon) or (colon+whitespace) causes a line break\n'import random; print random.random()'\n-->\nimport random;\nprint random.random()\n\n\n#after lines with (colon+whitespace) successive lines are automatically indented:\n'if i>3: print \"hello world!\"; a += 1; b = 0'\n-->\nif i>3:\n   print \"hello world!\";\n   a += 1;\n   b == 0\n\n\n#use the 'end;' keyword to force indent level to decrease (compare this example with the above)\n'if i>3: print \"hello world!\"; end; a += 1; b = 0'\n-->\nif i>3:\n   print \"hello world!\";\na += 1;\nb = 0\n\n\n#\"elif:\", \"else:\" and \"except:\" automatically cause indenting to decrease\n'if i>3: print \"a\"; elif i>1: print \"b\"; else: print \"c\"'\n-->\nif i>3:\n   print \"a\";\nelif i>1:\n   print \"b\";\nelse:\n   print \"c\"\n\n\n#you can define functions!\n'def test123(): print \"hello world!\" end; test123(); test123(); test123();'\n->\ndef test123():\n    print \"hello world!\"\ntest123();\ntest123();\ntest123();\n",
    "docs_url": null,
    "download_url": "https://github.com/jasontrigg0/pawk/tarball/0.0.2",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jasontrigg0/pawk",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "python-awk",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/python-awk/",
    "release_url": "https://pypi.org/project/python-awk/0.0.2/",
    "requires_python": null,
    "summary": "Placeholder description",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0c0c040717c5d73691fc646e543a72c5",
          "sha256": "d9a7ed2889b6ff5d9efe247e554fc9a5a32598ecb807848f7eb64e91a79e9ed4"
        },
        "downloads": 754,
        "filename": "python-awk-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0c0c040717c5d73691fc646e543a72c5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4261,
        "upload_time": "2016-01-02T08:44:07",
        "url": "https://files.pythonhosted.org/packages/72/04/38302e183d86e65a817fddd44eb8d6d629ba719f569b3cbaa54f29de536e/python-awk-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "58fe68be6f5b727263056054d2482a84",
          "sha256": "371c4abe217af3eab1a9e9e16f48fd02296e34d6d8b65d8e8cea79ba0366a6f2"
        },
        "downloads": 146,
        "filename": "python-awk-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "58fe68be6f5b727263056054d2482a84",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4283,
        "upload_time": "2016-02-13T18:31:53",
        "url": "https://files.pythonhosted.org/packages/6a/66/d595fabedafd6d8a83b010aa42a03f27870b1549006493c3cc2e3c65fc87/python-awk-0.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "58fe68be6f5b727263056054d2482a84",
        "sha256": "371c4abe217af3eab1a9e9e16f48fd02296e34d6d8b65d8e8cea79ba0366a6f2"
      },
      "downloads": 146,
      "filename": "python-awk-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "58fe68be6f5b727263056054d2482a84",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4283,
      "upload_time": "2016-02-13T18:31:53",
      "url": "https://files.pythonhosted.org/packages/6a/66/d595fabedafd6d8a83b010aa42a03f27870b1549006493c3cc2e3c65fc87/python-awk-0.0.2.tar.gz"
    }
  ]
}