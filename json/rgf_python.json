{
  "info": {
    "author": "Ryosuke Fukatani",
    "author_email": "nannyakannya@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "[![Build Status Travis](https://travis-ci.org/fukatani/rgf_python.svg?branch=master)](https://travis-ci.org/fukatani/rgf_python)\n[![Build Status AppVeyor](https://ci.appveyor.com/api/projects/status/vpanb9hnncjr16hn/branch/master?svg=true)](https://ci.appveyor.com/project/fukatani/rgf-python)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/fukatani/rgf_python/blob/master/LICENSE)\n[![PyPI version](https://badge.fury.io/py/rgf_python.svg)](https://badge.fury.io/py/rgf_python)\n\n# rgf_python\nThe wrapper of machine learning algorithm ***Regularized Greedy Forest (RGF)*** for Python.\n\n## Features\n\n##### Scikit-learn interface and possibility of usage for multi-label classification problem.\n\nOriginal RGF implementation is available only for regression and binary classification, but rgf_python is **also available for multi-label classification** by \"One-vs-Rest\" method.\n\nExample:\n```python\nfrom sklearn import datasets\nfrom sklearn.utils.validation import check_random_state\nfrom sklearn.model_selection import StratifiedKFold, cross_val_score\nfrom rgf.sklearn import RGFClassifier\n\niris = datasets.load_iris()\nrng = check_random_state(0)\nperm = rng.permutation(iris.target.size)\niris.data = iris.data[perm]\niris.target = iris.target[perm]\n\nrgf = RGFClassifier(max_leaf=400,\n                    algorithm=\"RGF_Sib\",\n                    test_interval=100,\n                    verbose=True)\n\nn_folds = 3\n\nrgf_scores = cross_val_score(rgf,\n                             iris.data,\n                             iris.target,\n                             cv=StratifiedKFold(n_folds))\n\nrgf_score = sum(rgf_scores)/n_folds\nprint('RGF Classfier score: {0:.5f}'.format(rgf_score))\n```\nMore examples could be found [here](https://github.com/fukatani/rgf_python/tree/master/examples).\n\n## Software Requirements\n\n* Python (2.7 or >= 3.4)\n* scikit-learn (>= 0.18)\n* RGF C++ ([link](http://tongzhang-ml.org/software/rgf/index.html))\n\nIf you can't access the above URL, alternatively, you can get RGF C++ by downloading it from this [page](https://github.com/fukatani/rgf_python/releases/download/0.2.0/rgf1.2.zip).\nPlease see README in the zip file to build RGF executional.\n\n\n## Installation\n\nYou can easily install by pip:\n```\npip install git+git://github.com/fukatani/rgf_python@master\n```\n\nOr:\n```\ngit clone https://github.com/fukatani/rgf_python.git\npython setup.py install\n```\n\nYou have to place RGF execution file in directory which is included in **environmental variable 'PATH'.**\nOr you can direct specify path by **manual editing rgf/sklearn.py**\n\n```python\n## Edit this ##################################################\n#Location of the RGF executable\nloc_exec = 'C:\\\\Program Files\\\\RGF\\\\bin\\\\rgf.exe'\n#Location for RGF temp files\nloc_temp = 'temp/'\n## End Edit ##################################################\n```\n\nYou need to set actual location of RGF execution file by editing 'loc_exec'.\nAnd the variable 'loc_temp' can be changed to specify the directory for placing temp files.\n\n## Tuning Hyper-parameters\nYou can tune hyper-parameters as follows.\n\n* _max_leaf_: Appropriate values are data-dependent and usually varied from 1000 to 10000.\n\n* _test_interval_: For efficiency, it must be either multiple or divisor of 100 (default value of the optimization interval).\n\n* _algorithm_: You can select \"RGF\", \"RGF Opt\" or \"RGF Sib\".\n\n* _loss_: You can select \"LS\", \"Log\" or \"Expo\".\n\n* _reg_depth_: Must be no smaller than 1. Meant for being used with _algorithm_ = \"RGF Opt\" or \"RGF Sib\".\n\n* _l2_: Either 1, 0.1, or 0.01 often produces good results though with exponential loss (_loss_ = \"Expo\") and logistic loss (_loss_ = \"Log\"), some data requires smaller values such as 1e-10 or 1e-20.\n\n* _sl2_: Default value is equal to _l2_. On some data, _l2_/100 works well.\n\n* _normalize_: If turned on, training targets are normalized so that the average becomes zero.\n\n* _min_samples_leaf_: Smaller values may slow down training. Too large values may degrade model accuracy.\n\n* _n_iter_: Number of iterations of coordinate descent to optimize weights.\n\n* _n_tree_search_: Number of trees to be searched for the nodes to split. The most recently grown trees are searched first.\n\n* _opt_interval_: Weight optimization interval in terms of the number of leaf nodes.\n\n* _learning_rate_: Step size of Newton updates used in coordinate descent to optimize weights.\n\nDetailed instruction of tuning hyper-parameters is [here](http://tongzhang-ml.org/software/rgf/rgf1.2-guide.pdf).\n\n## Using at Kaggle Kernel\nNow, Kaggle Kernel supports rgf_python. Please see [this page](https://www.kaggle.com/fukatani/d/uciml/iris/classification-by-regularized-greedy-forest).\n\n## Other\nShamelessly, much part of the implementation is based on the following [code](https://github.com/MLWave/RGF-sklearn). Thanks!\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/fukatani/rgf_sklearn",
    "keywords": "Machine Learning",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rgf_python",
    "platform": "",
    "project_url": "https://pypi.org/project/rgf_python/",
    "release_url": "https://pypi.org/project/rgf_python/1.3.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Scikit-learn Wrapper for Regularized Greedy Forest",
    "version": "1.3.0"
  },
  "releases": {
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ca188c4be3e560c5708c0248d4766fdc",
          "sha256": "a029c6a5bad9391cf3e2c0b9a5cf98c6e34a760de4774460be81d92e1dd853a9"
        },
        "downloads": 0,
        "filename": "rgf_python-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ca188c4be3e560c5708c0248d4766fdc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9642,
        "upload_time": "2017-06-29T12:05:24",
        "url": "https://files.pythonhosted.org/packages/38/b9/cccb61463017359d3d725ee84d4900b5f90f4ed60e4b9946bd084161f986/rgf_python-1.2.0.tar.gz"
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "36fdf1d3c3efa1cc2a202d3db63537ff",
          "sha256": "e168687745424520c73cc614557a44f0bb09678374b15f1448a4d0f77280a918"
        },
        "downloads": 0,
        "filename": "rgf_python-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "36fdf1d3c3efa1cc2a202d3db63537ff",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9654,
        "upload_time": "2017-06-29T12:10:04",
        "url": "https://files.pythonhosted.org/packages/a8/82/620c00f985bf37e8a500f8d55d9dbae5fbd0a457e1032d3bb9678b0681a5/rgf_python-1.2.1.tar.gz"
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "93b7d65040cb7ff5fd6eb5945efbf0f2",
          "sha256": "56609b18c3d0fc5c01c9044770b0f075d10436d1c796df50ed06888a573688c4"
        },
        "downloads": 0,
        "filename": "rgf_python-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "93b7d65040cb7ff5fd6eb5945efbf0f2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9478,
        "upload_time": "2017-06-29T12:11:49",
        "url": "https://files.pythonhosted.org/packages/f1/d5/216df0c9d30b2126dd658547d1ec0f6f1b883202d50298c270f95645e1c1/rgf_python-1.2.2.tar.gz"
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f2c2a79515bf251b9ab9eaa4c76e1bc9",
          "sha256": "2125ff16890ac93d9181c9f4b0b701c7b12de05a8df53aa4b7daa5c883d2c5f7"
        },
        "downloads": 0,
        "filename": "rgf_python-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f2c2a79515bf251b9ab9eaa4c76e1bc9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9743,
        "upload_time": "2017-06-29T12:13:46",
        "url": "https://files.pythonhosted.org/packages/c6/64/324ad7f9b043e6094e548773dccb10fc363bf920a99fd1d7da93be0f3a4f/rgf_python-1.2.3.tar.gz"
      }
    ],
    "1.2.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e72a07ce2d0668bbd59a46b7ba6ba86a",
          "sha256": "4156040e8db8a16c397518f4dbb78f5a309b9c964355ed3f4362d4a0fdf11583"
        },
        "downloads": 0,
        "filename": "rgf_python-1.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e72a07ce2d0668bbd59a46b7ba6ba86a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9763,
        "upload_time": "2017-06-29T12:18:49",
        "url": "https://files.pythonhosted.org/packages/19/87/b1c5c72c589059b89c397092ab6bb3105e499982274ae7d6e5e53d01c5a3/rgf_python-1.2.5.tar.gz"
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f0fdf0f2fa278db3b8d6a3828b79887c",
          "sha256": "43d6edf700eaa720340f2aa78a8e9c7ea0468eb0df99bcd82a1c2d74e940dc85"
        },
        "downloads": 0,
        "filename": "rgf_python-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f0fdf0f2fa278db3b8d6a3828b79887c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9770,
        "upload_time": "2017-06-29T13:37:01",
        "url": "https://files.pythonhosted.org/packages/8f/5f/81730e1aeaa54e6038902d7b0b464ffcd6fe8dfbdad93b9d010deef65a59/rgf_python-1.3.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f0fdf0f2fa278db3b8d6a3828b79887c",
        "sha256": "43d6edf700eaa720340f2aa78a8e9c7ea0468eb0df99bcd82a1c2d74e940dc85"
      },
      "downloads": 0,
      "filename": "rgf_python-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f0fdf0f2fa278db3b8d6a3828b79887c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9770,
      "upload_time": "2017-06-29T13:37:01",
      "url": "https://files.pythonhosted.org/packages/8f/5f/81730e1aeaa54e6038902d7b0b464ffcd6fe8dfbdad93b9d010deef65a59/rgf_python-1.3.0.tar.gz"
    }
  ]
}