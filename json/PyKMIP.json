{
  "info": {
    "author": "Peter Hamilton",
    "author_email": "peter.hamilton@jhuapl.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: BSD",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "------\nPyKMIP\n------\n|pypi-version|\n|travis-status|\n|codecov-status|\n|python-versions|\n\nPyKMIP is a Python implementation of the Key Management Interoperability\nProtocol (KMIP). KMIP is a client/server communication protocol for the\nstorage and maintenance of key, certificate, and secret objects. The standard\nis governed by the `Organization for the Advancement of Structured Information\nStandards`_ (OASIS). PyKMIP supports a subset of features in versions\n1.0 - 1.2 of the KMIP specification.\n\nFor a high-level overview of KMIP, check out the `KMIP Wikipedia page`_. For\ncomprehensive documentation from OASIS and information about the KMIP\ncommunity, visit the `KMIP Technical Committee home page`_.\n\n.. _Usage:\n\nUsage\n=====\nClient\n------\nThere are two implementations of the KMIP client. The first,\n``kmip.services.kmip_client.KMIPProxy``, is the original client and provides\nsupport for the following operations:\n\n* ``Create``\n* ``CreateKeyPair``\n* ``Register``\n* ``Locate``\n* ``Get``\n* ``GetAttributes``\n* ``GetAttributeList``\n* ``Activate``\n* ``Revoke``\n* ``Destroy``\n* ``Query``\n* ``DiscoverVersions``\n\nThe second client, ``kmip.pie.client.ProxyKmipClient``, wraps the original\n``KMIPProxy`` and provides a simpler interface. It provides support for the\nfollowing operations:\n\n* ``Create``\n* ``CreateKeyPair``\n* ``Register``\n* ``Get``\n* ``GetAttributes``\n* ``GetAttributeList``\n* ``Destroy``\n\nFor examples of how to create and use the different clients, see the scripts\nin ``kmip/demos``.\n\nConfiguration\n*************\nA KMIP client can be configured in different ways to connect to a KMIP server.\nThe first method is the default approach, which uses settings found in the\nPyKMIP configuration file. The configuration file can be stored in several\ndifferent locations, including:\n\n* ``<user home>/.pykmip/pykmip.conf``\n* ``/etc/pykmip/pykmip.conf``\n* ``<PyKMIP install>/kmip/pykmip.conf``\n* ``<PyKMIP install>/kmip/kmipconfig.ini``\n\nThese locations are searched in order. For example, configuration data found\nin ``/etc`` will take priority over configuration information found in the\nPyKMIP installation directory. The ``kmipconfig.ini`` file name is supported\nfor legacy installations. Users can specify the connection configuration\nsettings to use on client instantiation, allowing applications to support\nmultiple key storage backends simultaneously, one client per backend.\n\nAn example client configuration settings block is shown below::\n\n  [client]\n  host=127.0.0.1\n  port=5696\n  keyfile=/path/to/key/file\n  certfile=/path/to/cert/file\n  cert_reqs=CERT_REQUIRED\n  ssl_version=PROTOCOL_SSLv23\n  ca_certs=/path/to/ca/cert/file\n  do_handshake_on_connect=True\n  suppress_ragged_eofs=True\n  username=user\n  password=password\n\nThe second configuration approach allows developers to specify the\nconfiguration settings when creating the client at run time. The following\nexample demonstrates how to create the ``ProxyKmipClient``, directly\nspecifying the different configuration values::\n\n  client = ProxyKmipClient(\n      hostname='127.0.0.1',\n      port=5696,\n      cert='/path/to/cert/file/',\n      key='/path/to/key/file/',\n      ca='/path/to/ca/cert/file/',\n      ssl_version='PROTOCOL_SSLv23',\n      username='user',\n      password='password',\n      config='client'\n  )\n\nA KMIP client will load the configuration settings found in the ``client``\nsettings block by default. Settings specified at runtime, as in the above\nexample, will take precedence over the default values found in the\nconfiguration file.\n\nMany of these settings correspond to the settings for ``ssl.wrap_socket``,\nwhich is used to establish secure connections to KMIP backends. For more\ninformation, check out the `Python SSL library documentation`_.\n\nServer\n------\nIn addition to the KMIP clients, PyKMIP provides a basic software\nimplementation of a KMIP server, ``kmip.services.server.KmipServer``.\nHowever, the server is intended for use only in testing and demonstration\nenvironments. The server is **not** intended to be a substitute for a secure,\nhardware-based key management appliance. The PyKMIP client should be used for\noperational purposes **only** with a hardware-based KMIP server.\n\nThe KMIP server provides support for the following operations:\n\n* ``Create``\n* ``CreateKeyPair``\n* ``Register``\n* ``Get``\n* ``GetAttributes``\n* ``Activate``\n* ``Destroy``\n* ``Query``\n* ``DiscoverVersions``\n\nConfiguration\n*************\nThe PyKMIP software server can be configured via configuration file, by\ndefault located at ``/etc/pykmip/server.conf``. An example server\nconfiguration settings block, as found in the configuration file, is shown\nbelow::\n\n  [server]\n  hostname=127.0.0.1\n  port=5696\n  certificate_path=/path/to/certificate/file\n  key_path=/path/to/certificate/key/file\n  ca_path=/path/to/ca/certificate/file\n  auth_suite=Basic\n  policy_path=/path/to/policy/file\n\nThe server can also be configured manually. The following example shows how\nto create the ``KmipServer`` in Python code, directly specifying the\ndifferent configuration values::\n\n  server = KmipServer(\n      hostname='127.0.0.1',\n      port=5696,\n      certificate_path='/path/to/certificate/file/',\n      key_path='/path/to/certificate/key/file/',\n      ca_path='/path/to/ca/certificate/file/',\n      auth_suite='Basic',\n      config_path='/etc/pykmip/server.conf',\n      log_path='/var/log/pykmip/server.log',\n      policy_path='/etc/pykmip/policies'\n  )\n\n**NOTE:** The ``kmip_server.KMIPServer`` implementation of the software\nserver is deprecated and will be removed in a future version of PyKMIP.\n\nThe different configuration options are defined below:\n\n* ``hostname``\n    A string representing either a hostname in Internet domain notation or an\n    IPv4 address.\n* ``port``\n    An integer representing a port number. Recommended to be ``5696``\n    according to the KMIP specification.\n* ``certificate_path``\n    A string representing a path to a PEM-encoded server certificate file. For\n    more information, see the `Python SSL library documentation`_.\n* ``key_path``\n    A string representing a path to a PEM-encoded server certificate key file.\n    The private key contained in the file must correspond to the certificate\n    pointed to by ``certificate_path``. For more information, see the\n    `Python SSL library documentation`_.\n* ``ca_path``\n    A string representing a path to a PEM-encoded certificate authority\n    certificate file. If using a self-signed certificate, the ``ca_path`` and\n    the ``certificate_path`` should be identical. For more information, see\n    the `Python SSL library documentation`_.\n* ``auth_suite``\n    A string representing the type of authentication suite to use when\n    establishing TLS connections. Acceptable values are ``Basic`` and\n    ``TLS1.2``.\n    **Note:** ``TLS1.2`` can only be used with versions of Python that support\n    TLS 1.2 (e.g,. Python 2.7.9+ or Python 3.4+). If you are running on an\n    older version of Python, you will only be able to use basic TLS 1.0\n    authentication. For more information, see the\n    `Python SSL library documentation`_ and the\n    `Key Management Interoperability Protocol Profiles Version 1.1`_\n    documentation.\n* ``config_path``\n    A string representing a path to a server configuration file, as shown\n    above. Only set via the ``KmipServer`` constructor. Defaults to\n    ``/etc/pykmip/server.conf``.\n* ``log_path``\n    A string representing a path to a log file. The server will set up a\n    rotating file logger on this file. Only set via the ``KmipServer``\n    constructor. Defaults to ``/var/log/pykmip/server.log``.\n* ``policy_path``\n    A string representing a path to the filesystem directory containing\n    PyKMIP server operation policy JSON files.\n\n**NOTE:** When installing PyKMIP and deploying the KMIP software server, you\nmust manually set up the server configuration file. It **will not** be placed\nin ``/etc/pykmip`` automatically.\n\nUsage\n*****\nThe software server can be run using the ``bin/run_server.py`` startup script.\nIf you are currently in the PyKMIP root directory, use the following command::\n\n  $ python bin/run_server.py\n\nIf you need more information about running the startup script, pass ``-h``\nto it::\n\n  $ python bin/run_server.py -h\n\n**NOTE:** You may need to run the server as root, depending on the\npermissions of the configuration, log, and certificate file directories.\n\nIf PyKMIP is installed and you are able to ``import kmip`` in Python, you can\ncopy the startup script and run it from any directory you choose.\n\nIdentity & Ownership\n********************\nThe software server determines client identity using the client's TLS\ncertificate. Specifically, the common name of the certificate subject is used\nas the client ID. Additionally, the client certificate must have an extended\nkey usage extension marked for client authentication. If this extension is\nnot included in the client certificate and/or the client does not define a\nsubject and common name, the server will fail to establish a client session.\nFor more information on certificates and their use in authentication, see\n`RFC 5280`_.\n\nThe client identity described above is used to anchor object ownership.\nObject ownership and access is governed by an object's operation policy,\ndefined on object creation. By default the KMIP specification defines two\noperation policies, a ``default`` policy covering all objects and a\n``public`` policy applied only to ``Template`` objects.\n\nFor example, if user A creates a symmetric key, user B will only be able\nto retrieve that key if the key's operation policy indicates that the\nkey is accessible to all users. If the operation policy specifies that\nthe key is only available to the owner, only user A will be able to access\nit.\n\nUsers can create their own operation policies by placing operation policy\nJSON files in the policy directory pointed to by the ``policy_path``\nconfiguration option. The server will load all policies from that directory\nupon start up, allowing users to use those policies for their objects. A\ntemplate for the operation policy JSON file can be found under ``examples``.\nNote that the ``default`` and ``public`` policies are reserved and cannot\nbe redefined by a user's policy.\n\nProfiles\n========\nThe KMIP standard includes various profiles that tailor the standard for\nspecific use cases (e.g., symmetric key storage with TLS 1.2). These profiles\nspecify conformance to certain operations and attributes.\n\nThe PyKMIP ``KMIPProxy`` client provides full support for the following\nprofile(s):\n\n* Basic Discover Versions Client KMIP Profile\n\nDevelopment\n===========\nRoadmap\n-------\nThe development plan for PyKMIP follows the requirements for the following\nKMIP profiles. The foundation for symmetric and asymmetric key operation\nsupport is already built into the library.\n\nClient profiles:\n\n* Basic Baseline Client KMIP Profile\n* Basic Symmetric Key Store Client KMIP Profile\n* Basic Symmetric Key Foundry Client KMIP Profile\n* Basic Asymmetric Key Store Client KMIP Profile\n* Basic Asymmetric Key Foundry Client KMIP Profile\n\nServer profiles:\n\n* Basic Discover Versions Server KMIP Profile\n* Basic Baseline Server KMIP Profile\n* Basic Symmetric Key Store and Server KMIP Profile\n* Basic Symmetric Key Foundry and Server KMIP Profile\n* Basic Asymmetric Key Store Server KMIP Profile\n* Basic Asymmetric Key Foundry and Server KMIP Profile\n\nTesting\n-------\nThe PyKMIP test suite is composed of two parts, a unit test suite and an\nintegration test suite that runs various tests against instantiations of the\nsoftware KMIP server and real KMIP appliances. The tests are managed by a\ncombination of the ``tox``, ``pytest``, and ``flake8`` libraries.\n\nThere are several ways to run different versions of the tests. To run, use one\nof the following commands in the PyKMIP root directory.\n\nTo run all of the unit tests::\n\n  $ tox\n\nTo run the Python syntax and format compliance tests::\n\n  $ tox -e pep8\n\nTo run the unit test suite against Python 2.7::\n\n  $ tox -e py27\n\nThe integration tests require a configuration flag whose value corresponds to\nthe name of a client configuration section in the ``pykmip.conf``\nconfiguration file. See the Usage_ section for more information.\n\nTo run the integration test suite with a specific configuration setup::\n\n  $ tox -e integration -- --config <section-name>\n\nFor more information and a list of supported ``tox`` environments, see\n``tox.ini`` in the PyKMIP root directory.\n\nPlatforms\n=========\nPyKMIP has been tested and runs on the following platform(s):\n\n* Ubuntu: 12.04 LTS, 14.04 LTS, 16.04 LTS\n\nPyKMIP is supported by Python 2.6, 2.7, 3.3 - 3.5.\n\n**NOTE:** Support for Python 2.6 will be deprecated in a future release of PyKMIP.\n\nReferences\n==========\nThe source code for PyKMIP is hosted on GitHub and the library is available\nfor installation from the Python Package Index (PyPI):\n\n* `PyKMIP on GitHub <https://github.com/OpenKMIP/PyKMIP>`_\n* `PyKMIP on PyPI <https://pypi.python.org/pypi/PyKMIP>`_\n\nFor more information on KMIP version 1.1, see the following documentation:\n\n* `Key Management Interoperability Protocol Specification Version 1.1`_\n* `Key Management Interoperability Protocol Profiles Version 1.1`_\n* `Key Management Interoperability Protocol Test Cases Version 1.1`_\n\n.. _code base: https://github.com/OpenKMIP/PyKMIP\n.. _Organization for the Advancement of Structured Information Standards: https://www.oasis-open.org/\n.. _Key Management Interoperability Protocol Specification Version 1.1: http://docs.oasis-open.org/kmip/spec/v1.1/os/kmip-spec-v1.1-os.html\n.. _Key Management Interoperability Protocol Profiles Version 1.1: http://docs.oasis-open.org/kmip/profiles/v1.1/os/kmip-profiles-v1.1-os.html\n.. _Key Management Interoperability Protocol Test Cases Version 1.1: http://docs.oasis-open.org/kmip/testcases/v1.1/cn01/kmip-testcases-v1.1-cn01.html\n.. _Python SSL library documentation: https://docs.python.org/dev/library/ssl.html#socket-creation\n.. _KMIP Wikipedia page: https://en.wikipedia.org/wiki/Key_Management_Interoperability_Protocol\n.. _KMIP Technical Committee home page: https://www.oasis-open.org/committees/tc_home.php?wg_abbrev=kmip\n.. _RFC 5280: https://tools.ietf.org/html/rfc5280\n\n.. |pypi-version| image:: https://img.shields.io/pypi/v/pykmip.svg\n  :target: https://pypi.python.org/pypi/pykmip\n  :alt: Latest Version\n.. |travis-status| image:: https://travis-ci.org/OpenKMIP/PyKMIP.svg?branch=master\n  :target: https://travis-ci.org/OpenKMIP/PyKMIP\n.. |codecov-status| image:: https://codecov.io/github/OpenKMIP/PyKMIP/coverage.svg?branch=master\n  :target: https://codecov.io/github/OpenKMIP/PyKMIP?branch=master\n.. |python-versions| image:: https://img.shields.io/pypi/pyversions/PyKMIP.svg\n  :target: https://github.com/OpenKMIP/PyKMIP\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/OpenKMIP/PyKMIP",
    "keywords": "KMIP",
    "license": "Apache License, Version 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "PyKMIP",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/PyKMIP/",
    "release_url": "https://pypi.org/project/PyKMIP/0.6.0/",
    "requires_python": null,
    "summary": "KMIP v1.1 library",
    "version": "0.6.0"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ac066a4eb0afbf8780d9bcbb4d4ef195",
          "sha256": "d81f713313b205309c2a6c60484368838bb0a77274c3672592cc52295cce7b8d"
        },
        "downloads": 2100,
        "filename": "PyKMIP-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ac066a4eb0afbf8780d9bcbb4d4ef195",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 55051,
        "upload_time": "2014-08-13T19:06:13",
        "url": "https://files.pythonhosted.org/packages/b6/bb/f42d0a05f1bfdf902087f4564af20ea386037405c35930b0a6a4c9c75dcf/PyKMIP-0.0.1.tar.gz"
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "000c1a9cc3d34f6cc3f8b33730758439",
          "sha256": "d3899954c526a582bbcd5699c96ac1ef40fd227605e3a6714816a5911ea29b33"
        },
        "downloads": 1638,
        "filename": "PyKMIP-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "000c1a9cc3d34f6cc3f8b33730758439",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 56228,
        "upload_time": "2014-08-28T18:12:51",
        "url": "https://files.pythonhosted.org/packages/d9/a0/c160543cda9332d0f1b3edf8d564c5022c3083c9b0f70bed47d7d65f1702/PyKMIP-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d7ea0db8d3798ef1a92b8f73a4bb1fe3",
          "sha256": "2460be3fd12fd2a23d8d44bae0e839b93545318d0daf37162b4a35821c760b2e"
        },
        "downloads": 1661,
        "filename": "PyKMIP-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d7ea0db8d3798ef1a92b8f73a4bb1fe3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 56410,
        "upload_time": "2014-09-12T15:10:27",
        "url": "https://files.pythonhosted.org/packages/89/2f/138b7b375113ef9b780e9aaac1a936fb0be041cb7505f3591a181a593f0e/PyKMIP-0.1.1.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "52c6979584ef9f8a6db8e4d7c8ecbba0",
          "sha256": "b8ecf80a9c51bff4860d55aadb303295ca02cf8186eba77e3b61f69b012da49d"
        },
        "downloads": 6966,
        "filename": "PyKMIP-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "52c6979584ef9f8a6db8e4d7c8ecbba0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 61766,
        "upload_time": "2014-11-17T21:05:03",
        "url": "https://files.pythonhosted.org/packages/96/f7/73c58f2268ee7ffd225e8ec382cb388ecb55e8a7c9b0e4b3b13719247ab5/PyKMIP-0.2.0.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d7d84ab434fa30de2c9a38b249f15c45",
          "sha256": "aa0ba6f98bcd14635a3ccffcf15ee96b8db3ea9b4f218727ea4a718e9efbe5b0"
        },
        "downloads": 4492,
        "filename": "PyKMIP-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d7d84ab434fa30de2c9a38b249f15c45",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 100457,
        "upload_time": "2015-03-14T16:29:18",
        "url": "https://files.pythonhosted.org/packages/67/9e/d859db5a720c0aceb3e205aaa39e7084faa20cfe01570bc93e36196c6178/PyKMIP-0.3.0.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f2da39281624b51456451237a9facc75",
          "sha256": "bcdf1442e2c34afa0142c28186c6eb53dd19aefe75e239242b181b260cad3e12"
        },
        "downloads": 4009,
        "filename": "PyKMIP-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f2da39281624b51456451237a9facc75",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 103109,
        "upload_time": "2015-04-23T13:45:58",
        "url": "https://files.pythonhosted.org/packages/85/c4/58f3aa3fe297e5046d306724e791375c478efa1824530a4f0fb1f209cbcc/PyKMIP-0.3.1.tar.gz"
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "93817e8408ea171ebfe80eaf2af12ae5",
          "sha256": "c527e5e0c1de47118c169888d7dcdc7976a2694d084186f8c19ddbfeb97ade3b"
        },
        "downloads": 4918,
        "filename": "PyKMIP-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "93817e8408ea171ebfe80eaf2af12ae5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 108198,
        "upload_time": "2015-06-11T18:06:59",
        "url": "https://files.pythonhosted.org/packages/76/aa/bef9a3e52e7c58ceba487935482cc54ec919be14f98f88746edb246f6d65/PyKMIP-0.3.2.tar.gz"
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "343a1d300945b3ea01ea2283747fc0d4",
          "sha256": "65f7895981d1bd69bb236ac2d22fd393b888c8e11ea5985c663310a5318c690a"
        },
        "downloads": 5124,
        "filename": "PyKMIP-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "343a1d300945b3ea01ea2283747fc0d4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 114125,
        "upload_time": "2015-06-25T17:42:53",
        "url": "https://files.pythonhosted.org/packages/aa/1d/834e9ec852463b194ec47343db12208e7b31156932fb1686bcf146afa9fe/PyKMIP-0.3.3.tar.gz"
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c84279e5a42fc272f64aed04315089b0",
          "sha256": "437fb5b4d32e0004d9cc4b5d999b31c3fc6197547082ac9dba72f7d548ef5a29"
        },
        "downloads": 15834,
        "filename": "PyKMIP-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c84279e5a42fc272f64aed04315089b0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 160624,
        "upload_time": "2015-08-14T13:55:52",
        "url": "https://files.pythonhosted.org/packages/3d/f6/204b675c5a6d4cf0efa01734728bbb443d784cf9ed510597dc94bb2ba26b/PyKMIP-0.4.0.tar.gz"
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c0cf5d2b2d135ffe93e4d4722d5224fd",
          "sha256": "fe1011b7e62aca8a327b8343bb4db1eeb9aa217712597ffb0a7677b9acd4ab1b"
        },
        "downloads": 3417,
        "filename": "PyKMIP-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c0cf5d2b2d135ffe93e4d4722d5224fd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 172609,
        "upload_time": "2015-12-04T21:59:22",
        "url": "https://files.pythonhosted.org/packages/da/10/a27b8ddd39ded036db69bc22c640b3b28d47c6b381d19b03be70ec5a1679/PyKMIP-0.4.1.tar.gz"
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d83cb43e8b5ec5bad3bd1e93db6aa76c",
          "sha256": "df778f052860abd4fe7df0b3230198f4479ca6da6f206dbe71437eb997fea7c7"
        },
        "downloads": 1561,
        "filename": "PyKMIP-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d83cb43e8b5ec5bad3bd1e93db6aa76c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 225135,
        "upload_time": "2016-04-14T12:40:55",
        "url": "https://files.pythonhosted.org/packages/c2/b2/3fefbfe9fae61c5902109693be452c7f5a4a3bdf60459ba7db5507623ea7/PyKMIP-0.5.0.tar.gz"
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b37f4c156f1f533feef676b56fe9382a",
          "sha256": "0ccad60cb136dab4a6f511191ffa90328647014ef51cd3448e4e8e90eae0b5dc"
        },
        "downloads": 1282,
        "filename": "PyKMIP-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b37f4c156f1f533feef676b56fe9382a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 248182,
        "upload_time": "2016-12-14T20:10:40",
        "url": "https://files.pythonhosted.org/packages/6f/25/1ef48cd6a1aa926b454676c196d564ff4d37998366f53a3632cf004042f5/PyKMIP-0.6.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b37f4c156f1f533feef676b56fe9382a",
        "sha256": "0ccad60cb136dab4a6f511191ffa90328647014ef51cd3448e4e8e90eae0b5dc"
      },
      "downloads": 1282,
      "filename": "PyKMIP-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b37f4c156f1f533feef676b56fe9382a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 248182,
      "upload_time": "2016-12-14T20:10:40",
      "url": "https://files.pythonhosted.org/packages/6f/25/1ef48cd6a1aa926b454676c196d564ff4d37998366f53a3632cf004042f5/PyKMIP-0.6.0.tar.gz"
    }
  ]
}