{
  "info": {
    "author": "Danny Loya",
    "author_email": "dan.loya@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": ".. image:: https://travis-ci.org/loyada/typedpy.svg?branch=master\n    :target: https://travis-ci.org/loyada/typedpy\n\n=======\ntypedpy\n=======\n\n``typespy`` is a library for easty type-safe Python structures. It supports Python 3.3+.\n\nFeatures\n--------\n\n* Supports JSON schema draft4 features\n\n* Class/Field definition\n\n* Easily extensible\n\n* `Inheritance/mixins of field <https://github.com/loyada/typedpy/tree/master/tests/test_inheritance_person.py>`_\n\n* Embedded structures within structures/fields and fields within fields\n\n* No dependencies on third-party libs\n\n* Supports collections: `Map <https://github.com/loyada/typedpy/tree/master/tests/test_Map.py>`_, `Set <https://github.com/loyada/typedpy/tree/master/tests/test_Set.py>`_, `Array <https://github.com/loyada/typedpy/tree/master/tests/test_array.py>`_\n\n* Clean Java-generics-like definitions, but more flexible. e.g.: Set[Integer], Map[String(maxLength=8), String]\n\n**There are many examples under \"tests/\".**\n\nExamples\n----------\nBasic Structure definition:\n\n\n.. code-block:: python\n\n    >>> from typedpy.structures import StructureReference, Structure\n    >>> from fields import *\n    >>> class Example(Structure):\n    ...     name = String\n    ...     val_by_alias = Map[String, Number]\n    ...     num = Integer(maximum=30)\n    ...     foo = Array[PositiveFloat]\n    ...\n\n\n\nWorking with a Structure:\n\n.. code-block:: python\n\n    >>> from typedpy.structures import StructureReference, Structure\n    >>> from fields import *\n    >>> class Person(Structure):\n    ...     name = String(pattern='[A-Za-z]+$', maxLength=8)\n    ...     ssid = String()\n    ...     num = Integer(maximum=30, minimum=10, multiplesOf=5, exclusiveMaximum=False)\n    ...     foo = StructureReference(a=String(), b = StructureReference(c = Number(minimum=10), d = Number(maximum=10)))\n    ...\n    >>> Person(name=\"fo d\", ssid=\"123\", num=25, foo = {'a': 'aaa', 'b': {'c': 10, 'd': 1}})\n    {ValueError}name: Does not match regular expression: [A-Za-z]+$\n\n    >>> Person(name=\"fo\", ssid=4, num=25, foo = {'a': 'aaa', 'b': {'c': 10, 'd': 1}})\n    {TypeError}ssid: Expected a string\n\n\n    >>> Person(name=\"fo\", ssid=\"123\", num=33,\n        foo = {'a': 'aaa', 'b': {'c': 10, 'd': 1}})\n    {ValueError}num: Expected a maxmimum of 30\n\n    >>> Person(name=\"fo\", ssid=\"123\", num=10, foo = {'a': 'aaa', 'b': {'c': 0, 'd': 1}})\n    {ValueError}c: Expected a minimum of 10\n\n    >>> Person(name=\"fo\", ssid=\"123\", num=10, foo = {'a': 'aaa', 'b': {'c': \"\", 'd': 1}})\n    {TypeError}c: Expected a number\n\n    >>> Person(ssid=\"123\", num=10, foo = {'a': 'aaa', 'b': {'c': \"\", 'd': 1}})\n    {TypeError}missing a required argument: 'name'\n\n    >>> person = Person(name =\"aaa\", ssid=\"123\", num=10, foo = {'a': 'aaa', 'b': {'c': 10, 'd': 1}})\n\n    >>> person.num\n    10\n\n    >>> person.num-=1\n    ValueError: num: Expected a minimum of 10\n\n    >>> person.foo.b.d\n    1\n    >>> person.foo.b = {'d': 1}\n    TypeError: missing a required argument: 'c'\n\n    >>> person.foo.b.d = 99\n    ValueError: d: Expected a maxmimum of 10\n\n\n\nAnother example with Array, class reference, enum:\n\n.. code-block:: python\n\n    >>> class Example(Structure):\n    ...     _additionalProperties = True\n    ...     _required = ['quantity', 'price']\n    ...     quantity = AnyOf([PositiveInt(), Enum(values=['few', 'many', 'several'])])\n    ...     price = PositiveFloat()\n    ...     category = EnumString(values = ['cat1','cat2'])\n    ...     person = Person\n    ...     children = Array(uniqueItems=True, minItems= 3, items = [String(), Number(maximum=10)])\n\n    >>> t = Example(quantity='many', price=10.0, category= 'cat1', children = [ 3, 2])\n    ValueError: children: Expected length of at least 3\n\n    >>> t = Example(quantity='many', price=10.0, category= 'cat1', children = [ 1,3, 2])\n    TypeError: children_0: Expected a string\n\n    >>> t = Example(quantity='many', price=10.0, category= 'cat1', children = [ \"a\",3, 2])\n    >>> t.children[1]\n    3\n\n    >>> t.children[1] = None\n    TypeError: children_1: Expected a number\n\n    >>> t.children[1] = 5\n    >>> t.children\n    ['a', 5, 2]\n\n    >>> t.person = p\n    >>> t.person.name\n    fo\n\n    >>> t.person.name = None\n    TypeError: name: Expected a string\n\n    # quantity can also be a positive int\n    >>> t.quantity = 30\n    >>> t.quantity\n    30",
    "docs_url": null,
    "download_url": "https://github.com/loyada/typedpy/archive/v0.1.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/loyada/typedpy",
    "keywords": "testing",
    "license": "Apache 2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "typedpy",
    "platform": "",
    "project_url": "https://pypi.org/project/typedpy/",
    "release_url": "https://pypi.org/project/typedpy/0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Typed-safe Python",
    "version": "0.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "583d34deb3d850872345bb87ddaa153e",
          "sha256": "ca5e29ae5ebf073deef55800daef2877e91541c46ad3fc841bebab2effb0cf45"
        },
        "downloads": -1,
        "filename": "typedpy-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "583d34deb3d850872345bb87ddaa153e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7964,
        "upload_time": "2017-11-20T07:47:17",
        "url": "https://files.pythonhosted.org/packages/1e/41/161bc42a0d1c048ce67a1b3e040f1ac9d8fbbb11d18dd1e69e7bb113c0fc/typedpy-0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "583d34deb3d850872345bb87ddaa153e",
        "sha256": "ca5e29ae5ebf073deef55800daef2877e91541c46ad3fc841bebab2effb0cf45"
      },
      "downloads": -1,
      "filename": "typedpy-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "583d34deb3d850872345bb87ddaa153e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7964,
      "upload_time": "2017-11-20T07:47:17",
      "url": "https://files.pythonhosted.org/packages/1e/41/161bc42a0d1c048ce67a1b3e040f1ac9d8fbbb11d18dd1e69e7bb113c0fc/typedpy-0.1.tar.gz"
    }
  ]
}