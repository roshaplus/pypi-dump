{
  "info": {
    "author": "dreipol GmbH",
    "author_email": "dev@dreipol.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "==================\ndjango-green-grove\n==================\n\nCollection of helpers to back up Django projects that use a Postgres database and a S3 bucket as media storage.\n\n\nQuickstart\n----------\n\nInstall django-green-grove using pip.::\n\n    pip install django-green-grove\n\n\nAdd the following to your `settings.py` module:::\n\n    BACKUP_BUCKET_AWS_ACCESS_KEY_ID = ''\n    BACKUP_BUCKET_AWS_SECRET_ACCESS_KEY = '\n    BACKUP_BUCKET_BUCKET_NAME = ''\n    BACKUP_BUCKET_LOCATION = ''\n\n\nBackup Project\n--------------\n\nWe suggest to use this management command as a cron tab:::\n\n    python manage.py backup_project\n\n\nThis tutorial covers the steps that are needed to backup and restore a Django project that uses a Dokku hosting with a Postgres database and a S3 Bucket as media storage.\n\n### Backup project\n1.  Connect to your server\n2.  Connect to the docker container: `dokku enter <project_name>`\n3.  `python manage.py backup_project`\n\n### Restore from backup\n1.  Connect to your server\n2.  Connect to the database: `dokku postgres:connect db`\n3.  Drop the database: `DROP DATABASE <db_name>;`\n4.  Recreate the database: `CREATE DATABASE <db_name>;`\n5.  Grant privileges: `GRANT ALL PRIVILEGES ON DATABASE <db_name> to <username>;`\n6.  Exit the postgres console and the session on the server\n7.  Download the database dump file from the bucket to your local machine: `s3cmd cp <path_of_dump_file> .`\n8.  Move the dump file to the server: `scp <path_of_dump_file> <server>`\n9.  Connect to your server\n10. Import the dump: `cat <file_name> | sudo docker exec -i dokku.postgres.db psql -U <username> <db_name>`\n11. Remove the media folder of your bucket (s3cmd or web interface)\n12. Open up the terminal on your local machine\n13. Copy the backup of the media folder back to the bucket:\n    `s3cmd cp --recursive  --acl-public s3://backups/<project_name>/<timestamp>/media/ s3://<project_name>/media/`\n\n\nTrivia\n------\n\nThis package is named after the fictional retirement community where Tony Soprano, Paulie Gualtieri, and other Mafiosi admit their mothers, in The Sopranos.\n\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/dreipol/django-green-grove",
    "keywords": "django-green-grove",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-green-grove",
    "platform": "",
    "project_url": "https://pypi.org/project/django-green-grove/",
    "release_url": "https://pypi.org/project/django-green-grove/0.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Collection of helpers to back up Django projects that use a Postgres database and a S3 bucket as media storage.",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "da488442854a9e5ffb36babd6bc5ebcd",
          "sha256": "85aeb7125d7ceb113261b470ea3d31fc20fd817612ebb69b602accae0b51c080"
        },
        "downloads": 0,
        "filename": "django-green-grove-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "da488442854a9e5ffb36babd6bc5ebcd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7119,
        "upload_time": "2017-06-28T13:11:58",
        "url": "https://files.pythonhosted.org/packages/34/6e/a558b44a94382387ab5b700bf414fae8cfe440259fcbcc893e0570ff7b57/django-green-grove-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "da488442854a9e5ffb36babd6bc5ebcd",
        "sha256": "85aeb7125d7ceb113261b470ea3d31fc20fd817612ebb69b602accae0b51c080"
      },
      "downloads": 0,
      "filename": "django-green-grove-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "da488442854a9e5ffb36babd6bc5ebcd",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7119,
      "upload_time": "2017-06-28T13:11:58",
      "url": "https://files.pythonhosted.org/packages/34/6e/a558b44a94382387ab5b700bf414fae8cfe440259fcbcc893e0570ff7b57/django-green-grove-0.1.0.tar.gz"
    }
  ]
}