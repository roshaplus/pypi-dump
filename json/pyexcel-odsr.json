{
  "info": {
    "author": "C.W.",
    "author_email": "wangc_2011 (at) hotmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Office/Business",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "================================================================================\r\npyexcel-odsr - Let you focus on data, instead of ods format\r\n================================================================================\r\n\r\n.. image:: https://raw.githubusercontent.com/pyexcel/pyexcel.github.io/master/images/patreon.png\r\n   :target: https://www.patreon.com/pyexcel\r\n\r\n.. image:: https://api.travis-ci.org/pyexcel/pyexcel-odsr.svg?branch=master\r\n   :target: http://travis-ci.org/pyexcel/pyexcel-odsr\r\n\r\n.. image:: https://codecov.io/github/pyexcel/pyexcel-odsr/coverage.png\r\n   :target: https://codecov.io/github/pyexcel/pyexcel-odsr\r\n\r\n**pyexcel-odsr** is a specialized ods reader based on tailored ods reader from\r\n`messytables <https://github.com/okfn/messytables>`_.\r\nYou are likely to use it with `pyexcel <https://github.com/pyexcel/pyexcel>`_.\r\nDifferring from `pyexcel-ods <https://github.com/pyexcel/pyexcel-ods>`_ and\r\n`pyexcel-ods3 <https://github.com/pyexcel/pyexcel-ods3>`_ in handling ods file, this\r\nlibrary could read partial content from a huge ods file.\r\n\r\n\r\nKnown constraints\r\n==================\r\n\r\nFonts, colors and charts are not supported.\r\n\r\nInstallation\r\n================================================================================\r\n\r\nYou can install it via pip:\r\n\r\n.. code-block:: bash\r\n\r\n    $ pip install pyexcel-odsr\r\n\r\n\r\nor clone it and install it:\r\n\r\n.. code-block:: bash\r\n\r\n    $ git clone https://github.com/pyexcel/pyexcel-odsr.git\r\n    $ cd pyexcel-odsr\r\n    $ python setup.py install\r\n\r\nUsage\r\n================================================================================\r\n\r\nAs a standalone library\r\n--------------------------------------------------------------------------------\r\n\r\nRead from an ods file\r\n********************************************************************************\r\n\r\nHere's the sample code:\r\n\r\n.. code-block:: python\r\n\r\n    >>> from pyexcel_odsr import get_data\r\n    >>> data = get_data(\"your_file.ods\")\r\n    >>> import json\r\n    >>> print(json.dumps(data))\r\n    {\"Sheet 1\": [[1, 2, 3], [4, 5, 6]], \"Sheet 2\": [[\"row 1\", \"row 2\", \"row 3\"]]}\r\n\r\n\r\n\r\nRead from an ods from memory\r\n********************************************************************************\r\n\r\nContinue from previous example:\r\n\r\n.. code-block:: python\r\n\r\n    >>> # This is just an illustration\r\n    >>> # In reality, you might deal with ods file upload\r\n    >>> # where you will read from requests.FILES['YOUR_ODS_FILE']\r\n    >>> data = get_data(io)\r\n    >>> print(json.dumps(data))\r\n    {\"Sheet 1\": [[1, 2, 3], [4, 5, 6]], \"Sheet 2\": [[7, 8, 9], [10, 11, 12]]}\r\n\r\n\r\nPagination feature\r\n********************************************************************************\r\n\r\n\r\n\r\nLet's assume the following file is a huge ods file:\r\n\r\n.. code-block:: python\r\n\r\n   >>> huge_data = [\r\n   ...     [1, 21, 31],\r\n   ...     [2, 22, 32],\r\n   ...     [3, 23, 33],\r\n   ...     [4, 24, 34],\r\n   ...     [5, 25, 35],\r\n   ...     [6, 26, 36]\r\n   ... ]\r\n   >>> sheetx = {\r\n   ...     \"huge\": huge_data\r\n   ... }\r\n   >>> save_data(\"huge_file.ods\", sheetx)\r\n\r\nAnd let's pretend to read partial data:\r\n\r\n.. code-block:: python\r\n\r\n   >>> partial_data = get_data(\"huge_file.ods\", start_row=2, row_limit=3)\r\n   >>> print(json.dumps(partial_data))\r\n   {\"huge\": [[3, 23, 33], [4, 24, 34], [5, 25, 35]]}\r\n\r\nAnd you could as well do the same for columns:\r\n\r\n.. code-block:: python\r\n\r\n   >>> partial_data = get_data(\"huge_file.ods\", start_column=1, column_limit=2)\r\n   >>> print(json.dumps(partial_data))\r\n   {\"huge\": [[21, 31], [22, 32], [23, 33], [24, 34], [25, 35], [26, 36]]}\r\n\r\nObvious, you could do both at the same time:\r\n\r\n.. code-block:: python\r\n\r\n   >>> partial_data = get_data(\"huge_file.ods\",\r\n   ...     start_row=2, row_limit=3,\r\n   ...     start_column=1, column_limit=2)\r\n   >>> print(json.dumps(partial_data))\r\n   {\"huge\": [[23, 33], [24, 34], [25, 35]]}\r\n\r\nAs a pyexcel plugin\r\n--------------------------------------------------------------------------------\r\n\r\nNo longer, explicit import is needed since pyexcel version 0.2.2. Instead,\r\nthis library is auto-loaded. So if you want to read data in ods format,\r\ninstalling it is enough.\r\n\r\n\r\nReading from an ods file\r\n********************************************************************************\r\n\r\nHere is the sample code:\r\n\r\n.. code-block:: python\r\n\r\n    >>> import pyexcel as pe\r\n    >>> sheet = pe.get_book(file_name=\"your_file.ods\")\r\n    >>> sheet\r\n    Sheet 1:\r\n    +---+---+---+\r\n    | 1 | 2 | 3 |\r\n    +---+---+---+\r\n    | 4 | 5 | 6 |\r\n    +---+---+---+\r\n    Sheet 2:\r\n    +-------+-------+-------+\r\n    | row 1 | row 2 | row 3 |\r\n    +-------+-------+-------+\r\n\r\n\r\n\r\nReading from a IO instance\r\n********************************************************************************\r\n\r\nYou got to wrap the binary content with stream to get ods working:\r\n\r\n.. code-block:: python\r\n\r\n    >>> # This is just an illustration\r\n    >>> # In reality, you might deal with ods file upload\r\n    >>> # where you will read from requests.FILES['YOUR_ODS_FILE']\r\n    >>> odsfile = \"another_file.ods\"\r\n    >>> with open(odsfile, \"rb\") as f:\r\n    ...     content = f.read()\r\n    ...     r = pe.get_book(file_type=\"ods\", file_content=content)\r\n    ...     print(r)\r\n    ...\r\n    Sheet 1:\r\n    +---+---+---+\r\n    | 1 | 2 | 3 |\r\n    +---+---+---+\r\n    | 4 | 5 | 6 |\r\n    +---+---+---+\r\n    Sheet 2:\r\n    +-------+-------+-------+\r\n    | row 1 | row 2 | row 3 |\r\n    +-------+-------+-------+\r\n\r\n\r\n\r\n\r\nLicense\r\n================================================================================\r\n\r\nNew BSD License\r\n\r\nDeveloper guide\r\n==================\r\n\r\nDevelopment steps for code changes\r\n\r\n#. git clone https://github.com/pyexcel/pyexcel-odsr.git\r\n#. cd pyexcel-odsr\r\n\r\nUpgrade your setup tools and pip. They are needed for development and testing only:\r\n\r\n#. pip install --upgrade setuptools pip\r\n\r\nThen install relevant development requirements:\r\n\r\n#. pip install -r rnd_requirements.txt # if such a file exists\r\n#. pip install -r requirements.txt\r\n#. pip install -r tests/requirements.txt\r\n\r\n\r\nIn order to update test environment, and documentation, additional steps are\r\nrequired:\r\n\r\n#. pip install moban\r\n#. git clone https://github.com/pyexcel/pyexcel-commons.git commons\r\n#. make your changes in `.moban.d` directory, then issue command `moban`\r\n\r\nWhat is rnd_requirements.txt\r\n-------------------------------\r\n\r\nUsually, it is created when a dependent library is not released. Once the dependecy is installed(will be released), the future version of the dependency in the requirements.txt will be valid.\r\n\r\nWhat is pyexcel-commons\r\n---------------------------------\r\n\r\nMany information that are shared across pyexcel projects, such as: this developer guide, license info, etc. are stored in `pyexcel-commons` project.\r\n\r\nWhat is .moban.d\r\n---------------------------------\r\n\r\n`.moban.d` stores the specific meta data for the library.\r\n\r\nHow to test your contribution\r\n------------------------------\r\n\r\nAlthough `nose` and `doctest` are both used in code testing, it is adviable that unit tests are put in tests. `doctest` is incorporated only to make sure the code examples in documentation remain valid across different development releases.\r\n\r\nOn Linux/Unix systems, please launch your tests like this::\r\n\r\n    $ make\r\n\r\nOn Windows systems, please issue this command::\r\n\r\n    > test.bat\r\n\r\nCredits\r\n================================================================================\r\n\r\nThis library is based on the ods of messytables, Open Knowledge Foundation Ltd.\r\n\r\n\r\nSupport the project\r\n================================================================================\r\n\r\nIf your company has embedded pyexcel and its components into a revenue generating\r\nproduct, please `support me on patreon <https://www.patreon.com/pyexcel>`_ to\r\nmaintain the project and develop it further.\r\n\r\nChange log\r\n================================================================================\r\n\r\n0.3.2 - 07.05.2017\r\n--------------------------------------------------------------------------------\r\n\r\nUpdated\r\n********************************************************************************\r\n\r\n#. issue `#2 <https://github.com/pyexcel/pyexcel-odsr/issues/2>`_, not all texts\r\n   in a multi-node cell were extracted.\r\n\r\n0.3.1 - 13.04.2017\r\n--------------------------------------------------------------------------------\r\n\r\nUpdated\r\n********************************************************************************\r\n\r\n#. issue `#1 <https://github.com/pyexcel/pyexcel-odsr/issues/1>`_, PT288H00M00S\r\n   is valid duration\r\n\r\n\r\n0.3.0 - 02.02.2017\r\n--------------------------------------------------------------------------------\r\n\r\n#. initial release. It has all functionalities of pyexcel-ods and pyexcel-ods3.\r\n   Specially, it supports partial reading of the ods file. When dealing with\r\n   big data file, this capability enables pagination feature to indeed read\r\n   partial files.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "UNKNOWN",
    "keywords": "excel,python,pyexcel",
    "license": "New BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyexcel-odsr",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pyexcel-odsr/",
    "release_url": "https://pypi.org/project/pyexcel-odsr/0.3.2/",
    "requires_python": null,
    "summary": "a plugin to pyexcel and provides the capbility to read data in ods formats using tailored messytables.",
    "version": "0.3.2"
  },
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "46cd5ab1a34456391d67c5e6cd0363c8",
          "sha256": "7b442545c6bf59d3cc133dc528e1ebaa94746bb36f8d07bcca0a8ca486442da8"
        },
        "downloads": 15,
        "filename": "pyexcel-odsr-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "46cd5ab1a34456391d67c5e6cd0363c8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10115,
        "upload_time": "2017-02-02T20:56:41",
        "url": "https://files.pythonhosted.org/packages/41/de/86ba57ed09694a6855fb0f3650314be1626379c891c0f1bf8d36e96f9cb5/pyexcel-odsr-0.3.0.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "85d1ef89ef60033f0ace22a10fffc9d0",
          "sha256": "4da1b1fde260ce4e7e26e8dae8dccaa76257b6ff8c416f0828555cd62116b22f"
        },
        "downloads": 0,
        "filename": "pyexcel-odsr-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "85d1ef89ef60033f0ace22a10fffc9d0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12249,
        "upload_time": "2017-04-13T15:59:07",
        "url": "https://files.pythonhosted.org/packages/75/46/372d193e1586ec5284c6ee5bc7c0b122fd40087983b32914bd7368e779a5/pyexcel-odsr-0.3.1.tar.gz"
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "42cb5857d74afe895483899a4d2cb76f",
          "sha256": "750481e8b470144cb2efcd22bf72dd6be45718e3af4975b839184e5f47ce86ea"
        },
        "downloads": 0,
        "filename": "pyexcel_odsr-0.3.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42cb5857d74afe895483899a4d2cb76f",
        "packagetype": "bdist_wheel",
        "python_version": "any",
        "size": 13464,
        "upload_time": "2017-05-07T11:03:01",
        "url": "https://files.pythonhosted.org/packages/c0/56/23ffc6e6fd0814c59fbe29b19c9315b76f8312b5eea6d0218063cc61203b/pyexcel_odsr-0.3.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d456701a8de997f99b490da5175a2121",
          "sha256": "7228f7bc55a0b6419ac193220cf8b26d798d784a2f41cf69595222c994ac856d"
        },
        "downloads": 0,
        "filename": "pyexcel-odsr-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d456701a8de997f99b490da5175a2121",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12941,
        "upload_time": "2017-05-31T08:22:53",
        "url": "https://files.pythonhosted.org/packages/c0/45/e3a6402e7a339d55bb2eb99f7471c389da9b426ca569dd6839d374d21520/pyexcel-odsr-0.3.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "42cb5857d74afe895483899a4d2cb76f",
        "sha256": "750481e8b470144cb2efcd22bf72dd6be45718e3af4975b839184e5f47ce86ea"
      },
      "downloads": 0,
      "filename": "pyexcel_odsr-0.3.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "42cb5857d74afe895483899a4d2cb76f",
      "packagetype": "bdist_wheel",
      "python_version": "any",
      "size": 13464,
      "upload_time": "2017-05-07T11:03:01",
      "url": "https://files.pythonhosted.org/packages/c0/56/23ffc6e6fd0814c59fbe29b19c9315b76f8312b5eea6d0218063cc61203b/pyexcel_odsr-0.3.2-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "d456701a8de997f99b490da5175a2121",
        "sha256": "7228f7bc55a0b6419ac193220cf8b26d798d784a2f41cf69595222c994ac856d"
      },
      "downloads": 0,
      "filename": "pyexcel-odsr-0.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d456701a8de997f99b490da5175a2121",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 12941,
      "upload_time": "2017-05-31T08:22:53",
      "url": "https://files.pythonhosted.org/packages/c0/45/e3a6402e7a339d55bb2eb99f7471c389da9b426ca569dd6839d374d21520/pyexcel-odsr-0.3.2.tar.gz"
    }
  ]
}