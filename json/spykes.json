{
  "info": {
    "author": "Pavan Ramkumar and Hugo Fernandes",
    "author_email": "pavan.ramkumar@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "# spykes\n\n[![License](https://img.shields.io/badge/license-MIT-blue.svg?style=flat)](https://github.com/KordingLab/spykes/blob/master/LICENSE) [![Join the chat at https://gitter.im/KordingLab/spykes](https://badges.gitter.im/KordingLab/spykes.svg)](https://gitter.im/KordingLab/spykes?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Travis](https://api.travis-ci.org/pavanramkumar/pyglmnet.svg?branch=master \"Travis\")](https://travis-ci.org/KordingLab/spykes)\n[![Circle](https://circleci.com/gh/KordingLab/spykes/tree/master.svg?style=shield&circle-token=:circle-token)](https://circleci.com/gh/KordingLab/spykes/tree/master.svg?style=shield&circle-token=:circle-token)\n[![Coverage Status](https://coveralls.io/repos/github/KordingLab/spykes/badge.svg?branch=master)](https://coveralls.io/github/KordingLab/spykes?branch=master)\n\n<img src=\"spykes-logo.png\" width=\"400\" />\n\nAlmost any electrophysiology study of neural spiking data relies on a battery of standard analyses.\nRaster plots and peri-stimulus time histograms aligned to stimuli and behavior provide a snapshot visual description of neural activity. Similarly, tuning curves are the most standard way to characterize how neurons encode stimuli or behavioral preferences. With increasing popularity of population recordings, maximum-likelihood decoders based on tuning models are becoming part of this standard.\n\nYet, virtually every lab relies on a set of in-house analysis scripts to go from raw data to summaries. We want to improve this status quo in order to enable easier sharing, better reproducibility and fewer bugs.\n\nSpykes is a collection of Python tools to make the visualization and analysis of neural data easy and reproducible.\n\nAt present, spykes comes with four classes:\n- ```NeuroVis``` helps you plot beautiful spike rasters and peri-stimulus time histograms (PSTHs).\n- ```PopVis``` helps you plot population summaries of PSTHs as normalized averages or heat maps.\n- ```NeuroPop``` helps you estimate tuning curves of neural populations and decode stimuli from population vectors with maximum-likelihood decoding.\n- ```STRF``` helps you estimate spatiotemporal receptive fields.\n\n```Spykes``` deliberately does not aim to provide tools for spike sorting or file i/o with popular electrophysiology formats, but only aims to fill the missing niche for neural data analysis and easy visualization. For file i/o, see [Neo](http://neuralensemble.org/neo/) and [OpenElectrophy](http://neuralensemble.org/OpenElectrophy/). For spike sorting, see [Klusta](http://klusta.readthedocs.io/en/latest/).\n\nDocumentation, tutorials and examples are coming soon! Check out the notebooks for now.\n\n![](https://github.com/KordingLab/spykes/blob/master/notebooks_examples/figures/psth_PMd_n91.png)\n\n### Installation\n\n#### Regular\n\nTo install the most up-to-date version, use:\n\n```bash\npip install git+git://github.com/KordingLab/spykes\n```\n\n#### Editable\n\nTo install an editable version, use:\n\n```bash\n$ git clone http://github.com/KordingLab/spykes\n```\n\nInstall `spykes` using `pip` as follows\n\n```bash\n$ cd spykes\n$ pip install -e ./\n```\n\n### How to use ```NeuroVis```?\n\nSee:\n- [CRCNS Dataset Example](http://kordinglab.com/spykes/auto_examples/plot_crcns_dataset_example.html#sphx-glr-auto-examples-plot-crcns-dataset-example-py)\n- [Reaching Dataset Example](http://kordinglab.com/spykes/auto_examples/plot_reaching_dataset_example.html#sphx-glr-auto-examples-plot-reaching-dataset-example-py)\n- [Neural Coding Reward Example](http://kordinglab.com/spykes/auto_examples/plot_neural_coding_reward_example.html#sphx-glr-auto-examples-plot-neural-coding-reward-example-py)\n\n### How to use ```PopVis```?\nSee:\n- [PopVis Example](http://kordinglab.com/spykes/auto_examples/plot_popvis_example.html#sphx-glr-auto-examples-plot-popvis-example-py)\n- [Neuropixels Example](http://kordinglab.com/spykes/auto_examples/plot_neuropixels_example.html#sphx-glr-auto-examples-plot-neuropixels-example-py)\n\n### How to use ```NeuroPop```?\n\nSee:\n- [Neuropop Simul Example](http://kordinglab.com/spykes/auto_examples/plot_neuropop_simul_example.html#sphx-glr-auto-examples-plot-neuropop-simul-example-py)\n- [Reaching Dataset Example](http://kordinglab.com/spykes/auto_examples/plot_reaching_dataset_example.html#sphx-glr-auto-examples-plot-reaching-dataset-example-py)\n\n### Dependencies\n\nAlready distributed with [Anaconda](https://www.continuum.io/downloads) and [Canopy](https://www.enthought.com/products/canopy/).\n- ```NumPy``` >= 1.6.1\n- ```SciPy``` >= 0.14\n- ```Matplotlib``` >= 1.5\n\n### Datasets\n\nThe examples use real datasets. Instructions for downloading these datasets are included in the notebooks. We recommend [deepdish](https://github.com/uchicago-cs/deepdish) for reading the HDF5 datafile.\n\n### Authors\n\n* [Pavan Ramkumar](http:/github.com/pavanramkumar)\n* [Hugo Fernandes](http:/github.com/hugoguh)\n\n### Acknowledgments\n\n* [Konrad Kording](http://kordinglab.com) for funding and support",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/KordingLab/spykes.git",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spykes",
    "platform": "any",
    "project_url": "https://pypi.org/project/spykes/",
    "release_url": "https://pypi.org/project/spykes/0.1.dev1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Basic tools for neural data analysis and visualization.",
    "version": "0.1.dev1"
  },
  "releases": {
    "0.1.dev1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "35eb015398a6e80a60c5ed7b392251c4",
          "sha256": "35d6a7d30a6b75804b0069f3a55c4760edf1ec807e19056073a96aee42d943b0"
        },
        "downloads": -1,
        "filename": "spykes-0.1.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "35eb015398a6e80a60c5ed7b392251c4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19872,
        "upload_time": "2017-10-12T08:52:14",
        "url": "https://files.pythonhosted.org/packages/56/08/cbe9d96988a21f1d32edab6ef2ed4812d4a0a1a21459535f0b79a0c8c59f/spykes-0.1.dev1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "35eb015398a6e80a60c5ed7b392251c4",
        "sha256": "35d6a7d30a6b75804b0069f3a55c4760edf1ec807e19056073a96aee42d943b0"
      },
      "downloads": -1,
      "filename": "spykes-0.1.dev1.tar.gz",
      "has_sig": false,
      "md5_digest": "35eb015398a6e80a60c5ed7b392251c4",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 19872,
      "upload_time": "2017-10-12T08:52:14",
      "url": "https://files.pythonhosted.org/packages/56/08/cbe9d96988a21f1d32edab6ef2ed4812d4a0a1a21459535f0b79a0c8c59f/spykes-0.1.dev1.tar.gz"
    }
  ]
}