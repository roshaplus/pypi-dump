{
  "info": {
    "author": "Gregor von Laszewski",
    "author_email": "laszewski@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "Cloudmesh cmd5\n==============\n\nAn dynamically extensible CMD based command shell\n\nRequirements\n------------\n\n* Python 3.6.2\n* Python 2.7.13\n\nInstallation from source\n------------------------\n\nSetup a virtualenv either with virtualenv or pyenv.\nWe have a tutorial on cloudmesh classes for the use of\npyenv\n\nhttps://cloudmesh.github.io/classes/lesson/prg/python.html?managing-custom-python-installs#managing-custom-python-installs\n\n\nNow you need to get two source directories. We assume yo place them in\n~/github::\n\n    mkdir ~/github\n    cd ~/github\n    git clone https://github.com/cloudmesh/cloudmesh.common.git\n    git clone https://github.com/cloudmesh/cloudmesh.cmd5.git\n    git clone https://github.com/cloudmesh/cloudmesh.bar.git\n     git clone https://github.com/cloudmesh/cloudmesh.sys.git\n\nThe cmd5 repository contains the shell, while the extbar directory\ncontains the sample commands foo and bar. The common library contains\nsome useful classes and methods that we also share with other\ncloudmesh code.\n\nTo install them from source simply to the following. The cloudmesh.bar\nexample you want as source as you want to modify the code at one point::\n\n    cd ~/github/cloudmesh.common\n    python setup.py install\n    pip install .\n    cd ~/github/cloudmesh.cmd5\n    python setup.py install\n    pip install .\n    cd ~/github/cloudmesh.sys\n    python setup.py install\n    pip install .\n\nInstalation from pip\n--------------------\n\n.. note:: we do recommend that you install cmd5 from source as not all \n          features will be accessible to you if you do a pip install\n\nTo install cmd5 from pip please use::\n\n  pip install cloudmesh.cmd5\n\nThe cloudmesh.bar repository you want to download as source so you can\nlearn how to write your own commands::\n\n  mkdir ~/github\n  cd ~/github\n  git clone https://github.com/cloudmesh/cloudmesh.bar.git\n\nCommands are shared in the `cloudmesh` namespace.\n\nThe better method on writing a command is to install cloudmesh.sys and use the \nsys command to generate a new command template via a program. You can generate \na new command with::\n\n\tcms sys command generate NAME\n\nA directory with the name cloudmesh.NAME will be generated that contains the template\nfor the command NAME. \n\nExecution\n---------\n\nto run the shell you can activate it with the cms command. cms stands\nfor cloudmesh shell::\n\n    (ENV2) $ cms\n\nIt will print the banner and enter the shell::\n\n    +-------------------------------------------------------+\n    |   ____ _                 _                     _      |\n    |  / ___| | ___  _   _  __| |_ __ ___   ___  ___| |__   |\n    | | |   | |/ _ \\| | | |/ _` | '_ ` _ \\ / _ \\/ __| '_ \\  |\n    | | |___| | (_) | |_| | (_| | | | | | |  __/\\__ \\ | | | |\n    |  \\____|_|\\___/ \\__,_|\\__,_|_| |_| |_|\\___||___/_| |_| |\n    +-------------------------------------------------------+\n    |                  Cloudmesh CMD5 Shell                 |\n    +-------------------------------------------------------+\n\n    cms>\n\n\nTo see the list of commands you can say::\n\n    cms> help\n\nTo see the manula page for a specific command, please use::\n\n    help COMMANDNAME\n\nExtension\n---------\n\nOne of the most important features of CMD5 is its ability to extend it\nwith new commands.  This is done via packaged name spaces. This is\ndefined in the setup.py file of your enhancement. The best way to\ncreate an enhancement is to take a look at the code in\n\n* https://github.com/cloudmesh/cloudmesh.bar.git\n\nSimply copy the code and modify the bar and foo commands to fit yor\nneeds. \n\n*Wraning:* do not copy the .git directory\n\nIt is important that all objects are defined in the command\nitself and that no global variables be use in order to allow each\nshell command to stand alone. Naturally you should develop API\nlibraries outside of the cloudmesh shell command and reuse them in\norder to keep the command code as small as possible. We place the\ncommand in::\n\n    cloudmsesh/COMMANDNAME/command/COMMANDNAME.py\n\nAn example for the bar command is presented at:\n\n* https://github.com/cloudmesh/cloudmesh.bar/blob/master/cloudmesh/bar/command/bar.py\n\nIt shows how simple the command definition is (bar.py)::\n\n    from __future__ import print_function\n    from cloudmesh.shell.command import command\n    from cloudmesh.shell.command import PluginCommand\n\n    class BarCommand(PluginCommand):\n\n        @command\n        def do_bar(self, args, arguments):\n            \"\"\"\n            ::\n\n              Usage:\n                    command -f FILE\n                    command FILE\n                    command list\n              This command does some useful things.\n              Arguments:\n                  FILE   a file name\n              Options:\n                  -f      specify the file\n            \"\"\"\n            print(arguments)\n\nAn important difference to other CMD solutions is that our commands\ncan leverage (besides the standrad definition), docopts as a way to\ndefine the manual page. This allows us to use arguments as dict and\nuse simple if conditions to interpret the command. Using docopts has\nthe advantage that contributors are forced to think about the command\nand its options and document them from the start. Previously we used\nnot to use docopts and argparse was used. However we noticed that for\nsome contributions the lead to commands that were either not properly\ndocumented or the developers delivered ambiguous commands that\nresulted in confusion and wrong ussage by the users. Hence, we do\nrecommend that you use docopts.\n\nThe transformation is enabled by the @command decorator that takes\nalso the manual page and creates a proper help message for the shell\nautomatically. Thus there is no need to introduce a sepaarte help\nmethod as would normally be needed in CMD.\n\n\nFeatures\n--------\n\nThe following changes are available in the cloudmesh.cmd5 and cloudmesh.common,\nthat are available as source. So you must clone them. They are not yet available in pypi\n\nExecution shell commands\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nYou can execute shell commands when the beginning charater is ! ::\n\n  cms \\!pwd\n  cms shell pwd\n\n\nTimers\n^^^^^^\n\nTo switch timers on or off you can use\n\ncms var timer=on\n\nThan every command you type is timed::\n\n    $ cms banner hallo\n    banner\n    ######################################################################\n    # hallo\n    ######################################################################\n    Timer: 0.0011s (banner hallo)\n\nVariables\n^^^^^^^^^\n\nyou can store variables with::\n\n  var a=1\n\nyou can access them on the commandline with ::\n\n  var.a\n  \\$a\n\nYou can list all variables with::\n\n  var list\n\nOS Variables can also be integrated. `os.HOME` will be replaced\nwith the HOME variable from the shell, try it with::\n\n  cms banner os.HOME\n\n\nDefaults\n^^^^^^^^^\n\nDefaults are variables with a context in which the default applies.\nFor example we can set default images for a cloud. General defaults\nare placed in the context `general`. To set the default cloud you can use::\n\n  default cloud=kilo\n\nTo List the defaults use::\n\n   default list\n\nTo use the defaults in a command preceed it with the the keyword `default.`\nand append the context and the name of the default variable. If the context\nis missing, the `general` context will be used. Examples::\n\n  banner default.cloud\n  default image=ubnuntu --context=chameleon\n  banner default.chameleon.image\n\n\nStopwatch\n^^^^^^^^^\n\nfor some (not all) benchmarks this could be helpful. It only works in script mode of cmd5\n\nput this in a file called s.cm::\n\n  stopwatch start g\n  stopwatch stop g\n  stopwatch print g\n\nThen execute::\n\n  cat s.cm | cms\n\nYou will get something like this::\n\n    cat s.cm | cms\n\n\n    +-------------------------------------------------------+\n    |   ____ _                 _                     _      |\n    |  / ___| | ___  _   _  __| |_ __ ___   ___  ___| |__   |\n    | | |   | |/ _ \\| | | |/ _` | '_ ` _ \\ / _ \\/ __| '_ \\  |\n    | | |___| | (_) | |_| | (_| | | | | | |  __/\\__ \\ | | | |\n    |  \\____|_|\\___/ \\__,_|\\__,_|_| |_| |_|\\___||___/_| |_| |\n    +-------------------------------------------------------+\n    |                  Cloudmesh CMD5 Shell                 |\n    +-------------------------------------------------------+\n    cms> Timer g started ...\n    cms> Timer g started ...\n    cms> Timer g: 0.000274181365967 s\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/cloudmesh/cloudmesh.cmd5",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cloudmesh.cmd5",
    "platform": "",
    "project_url": "https://pypi.org/project/cloudmesh.cmd5/",
    "release_url": "https://pypi.org/project/cloudmesh.cmd5/1.4.6/",
    "requires_dist": [
      "docopt",
      "cloudmesh.common"
    ],
    "requires_python": "",
    "summary": "A dynamic extensible CMD based command shell",
    "version": "1.4.6"
  },
  "releases": {
    "1.4.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "52cf824ce12eb67c130a62a559222677",
          "sha256": "3322a451040c76c1d76521f0ff9ab570822fbaeeb7f03dac1d3d94553e840b5c"
        },
        "downloads": 0,
        "filename": "cloudmesh.cmd5-1.4.3.macosx-10.12-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "52cf824ce12eb67c130a62a559222677",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24906,
        "upload_time": "2017-09-28T17:35:36",
        "url": "https://files.pythonhosted.org/packages/39/8a/b399f3a94f679a163bb9965c3eba198b6781309d137e3badc24da8826efd/cloudmesh.cmd5-1.4.3.macosx-10.12-x86_64.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a93b15e7fd5e6d16c389bd9e17f2da5f",
          "sha256": "baa5e4118588a51247f5ce5d16eff57c1179881c5fd575b5cc5c1c0db09622bf"
        },
        "downloads": 0,
        "filename": "cloudmesh.cmd5-1.4.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a93b15e7fd5e6d16c389bd9e17f2da5f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 21732,
        "upload_time": "2017-09-28T17:35:34",
        "url": "https://files.pythonhosted.org/packages/c8/48/030071d68b6c52d4cc554c32cafe3d28354348b1fa20171dbd3d1cb9b24e/cloudmesh.cmd5-1.4.3-py2.py3-none-any.whl"
      }
    ],
    "1.4.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "53a617e251595a4148eeec5a60c78f21",
          "sha256": "4144223e7a5a67193016fa6958fccfaeb8101ff07f0d65346bf93d0863764950"
        },
        "downloads": 0,
        "filename": "cloudmesh.cmd5-1.4.5.macosx-10.12-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "53a617e251595a4148eeec5a60c78f21",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24909,
        "upload_time": "2017-09-29T17:05:30",
        "url": "https://files.pythonhosted.org/packages/4c/f1/9a0843a7df6e2d117775b988de37a80a63332c547ad1c7cb599aa38b6c2d/cloudmesh.cmd5-1.4.5.macosx-10.12-x86_64.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "14b5410f0bbb103e5dacda01c80ea1c5",
          "sha256": "a84b026b55e227628838068ee039196ecf197c3e48129aaace6d4be1b87ad49e"
        },
        "downloads": 0,
        "filename": "cloudmesh.cmd5-1.4.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14b5410f0bbb103e5dacda01c80ea1c5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 21730,
        "upload_time": "2017-09-29T17:05:29",
        "url": "https://files.pythonhosted.org/packages/58/42/2f3c0e99455de917a76bc790bf20ae93aa446a2b0454d71741d8faf6d373/cloudmesh.cmd5-1.4.5-py2.py3-none-any.whl"
      }
    ],
    "1.4.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "af1fea028e97c10da1c0408f9a1ce2ab",
          "sha256": "8d80e5b8a03123c74159dfd0b7c22622e24414f89fec72d1345770bafc39e4a9"
        },
        "downloads": 0,
        "filename": "cloudmesh.cmd5-1.4.6.macosx-10.12-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "af1fea028e97c10da1c0408f9a1ce2ab",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24902,
        "upload_time": "2017-09-29T18:05:08",
        "url": "https://files.pythonhosted.org/packages/b6/b2/8590dd5d32720f4defcd39e83040c0d7e4f9d4856ee947f90ba7b5a29c86/cloudmesh.cmd5-1.4.6.macosx-10.12-x86_64.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "266900f4790b57d7316341fa02948c83",
          "sha256": "0caacfc937bd26df96dd67cd60eda296089e1b0bcdc732bbb70ee6a3a51a3f2b"
        },
        "downloads": 0,
        "filename": "cloudmesh.cmd5-1.4.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "266900f4790b57d7316341fa02948c83",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 21733,
        "upload_time": "2017-09-29T18:05:06",
        "url": "https://files.pythonhosted.org/packages/9a/52/d68cfdf6441a681dab5be2e485c698f5e15f6a4220c710eb4af41337392f/cloudmesh.cmd5-1.4.6-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "af1fea028e97c10da1c0408f9a1ce2ab",
        "sha256": "8d80e5b8a03123c74159dfd0b7c22622e24414f89fec72d1345770bafc39e4a9"
      },
      "downloads": 0,
      "filename": "cloudmesh.cmd5-1.4.6.macosx-10.12-x86_64.tar.gz",
      "has_sig": false,
      "md5_digest": "af1fea028e97c10da1c0408f9a1ce2ab",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 24902,
      "upload_time": "2017-09-29T18:05:08",
      "url": "https://files.pythonhosted.org/packages/b6/b2/8590dd5d32720f4defcd39e83040c0d7e4f9d4856ee947f90ba7b5a29c86/cloudmesh.cmd5-1.4.6.macosx-10.12-x86_64.tar.gz"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "266900f4790b57d7316341fa02948c83",
        "sha256": "0caacfc937bd26df96dd67cd60eda296089e1b0bcdc732bbb70ee6a3a51a3f2b"
      },
      "downloads": 0,
      "filename": "cloudmesh.cmd5-1.4.6-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "266900f4790b57d7316341fa02948c83",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 21733,
      "upload_time": "2017-09-29T18:05:06",
      "url": "https://files.pythonhosted.org/packages/9a/52/d68cfdf6441a681dab5be2e485c698f5e15f6a4220c710eb4af41337392f/cloudmesh.cmd5-1.4.6-py2.py3-none-any.whl"
    }
  ]
}