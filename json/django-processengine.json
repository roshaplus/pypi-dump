{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "=====\nProcess Engine\n=====\n\nProcess Engine is used in conjunction with celery to create async process from\ncelery tasks via an API\n\n\nQuick start\n-----------\n\n1. Add \"processengine\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'processengine',\n    ]\n\n2. Include the polls URLconf in your project urls.py like this::\n\n    from processengine.api import router as process_router\n    ...\n\n    urlpatterns = [\n        url(r'^processengine/', include(process_router.urls)),\n        ...\n    ]\n\n\n3. Add the PROCESS_MAP settings with your processes and the tasks to run like\nso::\n\n    PROCESS_MAP = {\n        'my.process': [\n            'path.to.taskfile.task',\n        ],\n        ...\n    }\n\n\n4. Run `python manage.py migrate` to create the processengine models.\n\n5. to create a process run a POST to http://127.0.0.1:8000/processengine/process/\nwith the following data::\n\n    data = {\n        name: \"my.process\", # This is the name of your process set in PROCESS_MAP variable\n        context: {\n            \"name\": \"value\" # This is the data that you pass through to your task\n        }\n    }\n\nNote: Your tasks need to conform to the pattern of json in and json out\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-processengine",
    "platform": "",
    "project_url": "https://pypi.org/project/django-processengine/",
    "release_url": "https://pypi.org/project/django-processengine/0.1/",
    "requires_dist": [
      "djangorestframework",
      "django"
    ],
    "requires_python": "",
    "summary": "A simple Django app to run celery tasks as processes.",
    "version": "0.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "52eea077acc333ef18741b8c441c80f1",
          "sha256": "8d5ef5b8b58e9aaabfbc4799fe07fcc1d99385e1795459676190ae0025b589ee"
        },
        "downloads": -1,
        "filename": "django_processengine-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "52eea077acc333ef18741b8c441c80f1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 8101,
        "upload_time": "2018-01-03T06:53:24",
        "url": "https://files.pythonhosted.org/packages/a6/d1/af43a1a8251c73d37e4c704005cdb0bd4e668be82921b56242822ebffc0c/django_processengine-0.1-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "52eea077acc333ef18741b8c441c80f1",
        "sha256": "8d5ef5b8b58e9aaabfbc4799fe07fcc1d99385e1795459676190ae0025b589ee"
      },
      "downloads": -1,
      "filename": "django_processengine-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "52eea077acc333ef18741b8c441c80f1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 8101,
      "upload_time": "2018-01-03T06:53:24",
      "url": "https://files.pythonhosted.org/packages/a6/d1/af43a1a8251c73d37e4c704005cdb0bd4e668be82921b56242822ebffc0c/django_processengine-0.1-py3-none-any.whl"
    }
  ]
}