{
  "info": {
    "author": "AG Stephan",
    "author_email": "UNKNOWN",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Topic :: Games/Entertainment :: Real Time Strategy",
      "Topic :: Games/Entertainment :: Role-Playing",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Processing"
    ],
    "description": "RiotWatcher v1.3.2\n==================\n\nRiotWatcher is a thin wrapper on top of the `Riot Games API for League\nof Legends <https://developer.riotgames.com/>`__. All public methods as\nof 7/29/2015 are supported in full. All game constants are also included\nin variable declarations. Requests are kept track of so that you can\nstay below your rate limit. The default rate limits are set to 10\nrequests every 10 seconds and 500 requests every 10 minutes (the limit\nfor development keys). The rate limiter does not prevent you from making\nrequests that will be blocked and cause an exception, it simply allows\nyou to check if you request will go through.\n\nTo Start...\n-----------\n\nTo install RiotWatcher:\n\n::\n\n    pip install riotwatcher\n\nOR:\n\n::\n\n    python setup.py install\n\nYou also need to have an API key from Riot. Get that from\n`here <https://developer.riotgames.com/>`__.\n\nUsing it...\n-----------\n\nAll methods return dictionaries representing the json objects described\nby the official Riot API. Any error (e.g. 404) that are known to the\nservice are returned as custom objects (error\\_404, error\\_500, ...),\nfor you to deal with however you like. Any other HTTP errors that are\nnot known returns of the API are raised as exceptions as in the Requests\nAPI.\n\nDefault region of this application is NA, but that can be changed during\ninitialization.\n\n.. code:: python\n\n    from riotwatcher import RiotWatcher\n\n    w = RiotWatcher('<your-api-key>')\n\n    # check if we have API calls remaining\n    print(w.can_make_request())\n\n    me = w.get_summoner(name='pseudonym117')\n    print(me)\n\n    # takes list of summoner ids as argument, supports up to 40 at a time\n    # (limit enforced on riot's side, no warning from code)\n    my_mastery_pages = w.get_mastery_pages([me['id', ])[str(me['id'])]\n    # returns a dictionary, mapping from summoner_id to mastery pages\n    # unfortunately, this dictionary can only have strings as keys,\n    # so must convert id from a long to a string\n    print(my_mastery_pages)\n\n    my_ranked_stats = w.get_ranked_stats(me['id'])\n    print(my_ranked_stats)\n\n    my_ranked_stats_last_season = w.get_ranked_stats(me['id'], season=3)\n    print(my_ranked_stats_last_season)\n\n    # all static methods are prefaced with 'static'\n    # static requests do not count against your request limit\n    # but at the same time, they don't change often....\n    static_champ_list = w.static_get_champion_list()\n    print(static_champ_list)\n\n    # import new region code\n    from riotwatcher import EUROPE_WEST\n\n    # request data from EUW\n    froggen = w.get_summoner(name='froggen', region=EUROPE_WEST)\n    print(froggen)\n\n    # create watcher with EUW as its default region\n    euw = RiotWatcher('<your-api-key>', default_region=EUROPE_WEST)\n\n    # proper way to send names with spaces is to remove them, still works with spaces though\n    xpeke = w.get_summoner(name='fnaticxmid')\n    print(xpeke)\n\nI might get around to fully documenting this at some point, but I am\nworking on using it right now for other things, not documenting it.\n\nTesting\n-------\n\nAfter a couple bugs that were due to me forgetting to change one\ncharacter and not testing the change, I decided to finally make a few\ntests. The tests included are not perfect, and don't have full code\ncoverage, but they should detect most issues. To run these tests (to\nmake sure its the API f-ing up not your code):\n\n-  change key in tests.py to your API key\n-  change summoner\\_name in tests.py to your summoner name (provided you\n   have at least one ranked team and have ranked stats). Or just enter a\n   name that does have those.\n-  run python tests.py (I only tested these tests with python3, but I\n   really doubt they are incompatible with python2 - if I'm wrong\n   someone open an issue)\n\nChangelog\n---------\n\nv1.3.2 - 11/16/2015\n~~~~~~~~~~~~~~~~~~~\n\nfixed issue with special characters in names in get_summoners method (issue #28)\n\nfixed bug in matchlist API causing requests for past seasons to fail,\nadded constants for each possible season. (issue #44)\n\nfixed bug introduced in pull request #35\n(method of checked for what exception is thrown changed from what was documented) - old method should work now. (issue #43)\n\nv1.3.1 - 10/24/2015\n~~~~~~~~~~~~~~~~~~~\n\nremoved match history functions, as these were deprecated.\n\nv1.3 - 7/29/2015\n~~~~~~~~~~~~~~~~\n\nmerged pull requests to (done at previous date, changelog not updated):\n - use matchlist endpoint\n - use nemesis draft\n - use riot attribution\n - get master tier\n\nfixed issue with merged matchlist endpoint tests\nfixed issue #24 in readme\nadded black market brawlers constants\n\nv1.2.5 - 3/8/2015\n~~~~~~~~~~~~~~~~~\n\nfixed issue with __init__.py not importing the correct packages\n\nv1.2.4 - 2/13/2015\n~~~~~~~~~~~~~~~~~~\n\nAdded current-game-v1.0 and featured-games-v1.0 api's\n\nv1.2.3 - 12/31/2014\n~~~~~~~~~~~~~~~~~~~\n\nFixed bug/undocumented feature when getting a single summoner with space\nin the name. Also added static method\n``RiotWatcher.sanitize_name(name)`` for stripping special characters\nfrom summoner names.\n\nv1.2.2 - 12/22/2014\n~~~~~~~~~~~~~~~~~~~\n\nTiny changes, function signature of get\\_summoner changed, to get by ID\nthe keyword is now ``_id``, not ``id``, tests updated to reflect this\n\nSome game constants updated, if anyone has actually been using them.\n\nv1.2.1 - 10/14/2014\n~~~~~~~~~~~~~~~~~~~\n\nAdd lol-status API. not a huge thing but i had time to do it.\n\nv1.2 - 9/4/2014\n~~~~~~~~~~~~~~~\n\nAdded Match and MatchHistory APIs! Also are somewhat tested, but query\nparameters are not tested.\n\nAdded some new constants. Probably not useful, but who knows. Maybe\nsomeone will want them.\n\nSome code changed to look slightly nicer too.\n\nv1.1.8 - 9/4/2014\n~~~~~~~~~~~~~~~~~\n\nUpdated APIs supported. Updated APIs:\n\n-  league-v2.5\n-  team-v2.4\n\nDon't worry, support for match data is coming. I just wanted to commit\nthese changes first, since they already had tests.\n\nv1.1.7 - 8/10/2014\n~~~~~~~~~~~~~~~~~~\n\nFixed issue #4 (forgot to change a number, oops) and made it much much\nless likely for me to do it again (moved api version part of url into a\ndifferent method just to be sure I don't mess it up).\n\nAlso there are now TESTS!! WOO! Everyone rejoice. They aren't very good\ntests though, so don't be too excited. BUT if they should detect if\nthere's a clear issue in the API wrapper.\n\nOh and some better formatting done (spaces not tabs, more consistent\nindentation, etc.). Should be no functional difference at all.\n\nv1.1.6 - 6/19/2014\n~~~~~~~~~~~~~~~~~~\n\nAdded support for regional proxies, because EUW broke without it\n\nv1.1.5 - 5/9/2014\n~~~~~~~~~~~~~~~~~\n\nCause what do version numbers really mean anyways?\n\nActually add endpoints to league API that I just forgot to add. Change\nis NOT backwards compatible, any use of the old league api calls will\nneed to be changed, in addition to the riot changes.\n\nNewly supported API's: - league-v2.4 - team-v2.3\n\nv1.1.1 - 5/3/2014\n~~~~~~~~~~~~~~~~~\n\nFix issue with static calls, namely that they didn't do anything right\nbefore. Now they work.\n\nv1.1 - 4/29/2014\n~~~~~~~~~~~~~~~~\n\nUpdated to latest API versions, now supported API's are:\n\n-  champion-v1.2\n-  game-v1.3\n-  league-v2.3\n-  lol-static-data-v1.2\n-  stats-v1.3\n-  summoner-v1.4\n-  team-v2.2\n\nChanges are NOT backwards compatible, you will need to update any code\nthat used an old API version. Check `Riots\ndocumentation <https://developer.riotgames.com/change-history>`__ for\nmore information on what changes were made\n\nv1.0.2 - 2/25/2014\n~~~~~~~~~~~~~~~~~~\n\nAdded Riots new methods to get teams by id. In methods\n'get\\_teams(team\\_ids, region)' and 'get\\_team(team\\_id, region)'.\n\nv1.0.1a\n~~~~~~~\n\nAlpha only, experimental rate limiting added\n\nv1.0\n~~~~\n\nInitial release\n\nAttribution\n~~~~~~~~~~~\n\nRiotWatcher isn't endorsed by Riot Games and doesn't reflect the views or opinions of Riot Games or anyone officially\ninvolved in producing or managing *League of Legends*. *League of Legends* and Riot Games are trademarks or registered\ntrademarks of Riot Games, Inc. *League of Legends* \u00a9 Riot Games, Inc.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/pseudonym117/Riot-Watcher",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "riotwatcher",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/riotwatcher/",
    "release_url": "https://pypi.org/project/riotwatcher/1.3.2/",
    "requires_python": null,
    "summary": "RiotWatcher is a thin wrapper on top of the Riot Games API for League of Legends.",
    "version": "1.3.2"
  },
  "releases": {
    "1.2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fff28c43f6206a53c1d9a564adfac9fd",
          "sha256": "a49bf71f625341399bba048e7a6dbab3488aeb194af549e3404230dd96839d0c"
        },
        "downloads": 1071,
        "filename": "riotwatcher-1.2.4.win32.exe",
        "has_sig": false,
        "md5_digest": "fff28c43f6206a53c1d9a564adfac9fd",
        "packagetype": "bdist_wininst",
        "python_version": "any",
        "size": 208965,
        "upload_time": "2015-03-06T04:48:52",
        "url": "https://files.pythonhosted.org/packages/00/e0/d59774742ea4f23c6d753325f26bcd6fdb73dee2f9c4ed73f1a7474b12b9/riotwatcher-1.2.4.win32.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5f87fb1cc923b95e8845e3e46a046ef8",
          "sha256": "e5e07dc843034064a35a91db68cea468994ee1ea8e13898bc5d785746938e351"
        },
        "downloads": 991,
        "filename": "riotwatcher-1.2.4.zip",
        "has_sig": false,
        "md5_digest": "5f87fb1cc923b95e8845e3e46a046ef8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17814,
        "upload_time": "2015-03-06T04:48:48",
        "url": "https://files.pythonhosted.org/packages/2d/0d/64b121e4ea34bf46c6e3322965b2f671f82ecb52e4d4bf4387b610f97b1b/riotwatcher-1.2.4.zip"
      }
    ],
    "1.2.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8e3dfb98cda243a98c369da52655f9ef",
          "sha256": "0e08069a2f8ba87820f645fd52d871372efc5727aa7b027b4d7628ef3e6eecfb"
        },
        "downloads": 1701,
        "filename": "riotwatcher-1.2.5.zip",
        "has_sig": false,
        "md5_digest": "8e3dfb98cda243a98c369da52655f9ef",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17950,
        "upload_time": "2015-03-09T04:39:57",
        "url": "https://files.pythonhosted.org/packages/e1/02/860999f59a75f93a3604866cd0b5b2914a29f97c6720391d278e888499fe/riotwatcher-1.2.5.zip"
      }
    ],
    "1.3": [],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e57da4560dcbf6e434ccadca28ecaf93",
          "sha256": "8b1ee7e153fb204bb8a8cd709d3f9c3ad5e73a1da7d5984c8577c452b28729a8"
        },
        "downloads": 461,
        "filename": "riotwatcher-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e57da4560dcbf6e434ccadca28ecaf93",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13781,
        "upload_time": "2015-11-16T07:43:39",
        "url": "https://files.pythonhosted.org/packages/f1/17/db47a11279e567b23f71b22fd64a0ec372121e15cf083ccf6a5d324ced05/riotwatcher-1.3.1.tar.gz"
      }
    ],
    "1.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "67e0c23c3cb775e456b126a8062ae9be",
          "sha256": "688fe20cf28457b85e5157e669eaaf878c38707e76db16d2dce03a2db450e3e3"
        },
        "downloads": 1562,
        "filename": "riotwatcher-1.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "67e0c23c3cb775e456b126a8062ae9be",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14299,
        "upload_time": "2015-11-16T08:45:09",
        "url": "https://files.pythonhosted.org/packages/a8/13/9e046956d40c2c7d8ca763b7ab07e974692db4e6db8aefc7773934c1abf6/riotwatcher-1.3.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "67e0c23c3cb775e456b126a8062ae9be",
        "sha256": "688fe20cf28457b85e5157e669eaaf878c38707e76db16d2dce03a2db450e3e3"
      },
      "downloads": 1562,
      "filename": "riotwatcher-1.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "67e0c23c3cb775e456b126a8062ae9be",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 14299,
      "upload_time": "2015-11-16T08:45:09",
      "url": "https://files.pythonhosted.org/packages/a8/13/9e046956d40c2c7d8ca763b7ab07e974692db4e6db8aefc7773934c1abf6/riotwatcher-1.3.2.tar.gz"
    }
  ]
}