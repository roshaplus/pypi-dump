{
  "info": {
    "author": "Michael Burman",
    "author_email": "miburman@redhat.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Monitoring"
    ],
    "description": "|Build Status|\n\nhawkular-client-python\n======================\n\nThis repository includes the necessary Python client libraries to access\nHawkular remotely. Currently we only have a driver for the metrics and\nalerts components.\n\nIntroduction\n------------\n\nPython client to access Hawkular-Metrics, an abstraction to invoke\nREST-methods on the server endpoint using urllib2. No external\ndependencies, works with Python 2.7.x (tested on 2.7.5/2.7.6 and\n2.7.10/2.7.13) and Python 3.4.x / Python 3.5.x (tested with the Python\n3.4.2 and Python 3.5.3, might work with newer versions also).\n\nLicense and copyright\n---------------------\n\n::\n\n       Copyright 2015-2017 Red Hat, Inc. and/or its affiliates\n       and other contributors.\n\n       Licensed under the Apache License, Version 2.0 (the \"License\");\n       you may not use this file except in compliance with the License.\n       You may obtain a copy of the License at\n\n           http://www.apache.org/licenses/LICENSE-2.0\n\n       Unless required by applicable law or agreed to in writing, software\n       distributed under the License is distributed on an \"AS IS\" BASIS,\n       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n       See the License for the specific language governing permissions and\n       limitations under the License.\n\nInstallation\n------------\n\nTo install, run ``python setup.py install`` if you installed from source\ncode, or ``pip install hawkular-client`` if using pip.\n\nMetrics Usage\n-------------\n\nTo use hawkular-client-python in your own program, after installation\nimport from hawkular the class HawkularMetricsClient and instantiate it.\nAfter this, push dicts with keys id, timestamp and value with put or use\nassistant method create to send events. pydoc gives the list of allowed\nparameters for each function.\n\nThe client provides a method to request current time in milliseconds,\n``time_millis()`` that's accepted by the methods, but you can use\n``datetime`` and ``timedelta`` to control the time also when sending\nrequests to the Hawkular-Metrics.\n\nSee metrics\\_test.py for more detailed examples and `Hawkular-Metrics\ndocumentation <http://www.hawkular.org/docs/components/metrics/index.html>`__\nfor more detailed explanation of available features.\n\nGeneral\n~~~~~~~\n\nWhen a method wants a metric\\_type one can use the shortcuts of from\nMetricType class (Gauge, Availability and Counter). For availability\nvalues, one can use values Availability.Up and Availability.Down to\nsimplify usage.\n\nTo instantiate the client, use HawkularMetricsClient() method. It\nrequires something given as tenant\\_id, even if the tenant does not\nexists yet (it is not auto-created, you have to call\n``create_tenant(tenant_id)`` to create it). To change the target\ntenant\\_id, use ``tenant(tenant_id)``\n\n.. code:: python\n\n    >>> from hawkular.metrics import HawkularMetricsClient, MetricType\n    >>> client = HawkularMetricsClient(tenant_id='python_test')\n\nCreating and modifying metric definitions\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhile creating a metric definition is not required, it is recommended to\navoid duplicate metric\\_ids, which could cause silent data overwriting.\nIt is possible to define a custom data retention times as well as tags\nfor each metric. To create a metric, use method\n``create_metric_definition(metric_id, metric_type, **tags)`` The only\nreserved keyword for tags is dataRetention, which will change the\ndataRetention time, other tag names are used for user's metadata.\n\nExample:\n\n.. code:: python\n\n    >>> client.create_metric_definition(MetricType.Gauge, 'example.doc.1', units='bytes', env='test')\n    True\n    >>> client.query_metric_definitions(MetricType.Gauge)\n    [{'type': 'gauge', 'id': 'example.doc.1', 'tags': {'units': 'bytes', 'env': 'test'}, 'tenantId': 'python_test', 'dataRetention': 7}]\n\nModifying metric definition tags\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOne powerful feature of Hawkular-Metrics is the tagging feature that\nallows one to define descriptive metadata for any metric. Tags can be\nadded when creating a metric definition (see above), but also modified\nlater. By tagging the definitions, you can search for matching\ndefinitions with the tag query language.\n\nExample:\n\n.. code:: python\n\n    >>> client.create_metric_definition(MetricType.Gauge, 'example.doc.2', units='bytes', env='test', hostname='testenv01')\n    >>> client.query_metric_tags(MetricType.Gauge, 'example.doc.2')\n    {'units': 'bytes', 'hostname': 'testenv01', 'env': 'test'}\n\nTo search all the metric definitions with a given tags and tag values,\nuse the ``query_definitions()``\n\n.. code:: python\n\n    >>> client.query_metric_definitions(MetricType.Gauge, hostname='testenv.*')\n    [{'type': 'gauge', 'id': 'example.doc.2', 'tags': {'units': 'bytes', 'hostname': 'testenv01', 'env': 'test'}, 'tenantId': 'python_test', 'dataRetention': 7}]\n\nIt is also possible to query all the available tag values, in case you\nwant to list for example the hostnames that have metrics information\ngathered.\n\n.. code:: python\n\n    >>> client.query_tag_values(hostname='*')\n    {'hostname': ['testenv01', 'prodenv01']}\n\nPushing new values\n~~~~~~~~~~~~~~~~~~\n\nAll the methods that allow pushing values can accept both availability\nstatus as well as float values. It is possible to push multiple metrics\nwith multiple values per metric in one call to the Hawkular-Metrics.\nHowever for convenience, a method which will push just one value for one\nmetric is also provided. To push availability values, use\nMetricType.Availability and values Availability.Up and\nAvailability.Down, otherwise the syntax is equal.\n\n``create_datapoint(value)`` and\n``create_metric(metric_type, metric_id, datapoints)`` return the\nnecessary structures requested by the multi-functions.\n\nExample pushing a multiple values:\n\n.. code:: python\n\n    >>> from hawkular.metrics import create_datapoint, create_metric, time_millis\n    >>> t = datetime.utcnow()\n    >>> datapoint = create_datapoint(float(4.35), t)\n    >>> datapoint2 = create_datapoint(float(4.42), t + timedelta(seconds=10))\n    >>> metric = create_metric(MetricType.Gauge, 'example.doc.1', [datapoint, datapoint2])\n    >>> client.put(metric)\n\nAnd a shortcut method to push just a single value with automatically\ngenerated timestamp:\n\n.. code:: python\n\n    >>> client.push(MetricType.Gauge, 'example.doc.1', float(4.24))\n\nTo push multiple metrics with multiple values per metric, see\nmetrics\\_test.py and method ``test_add_multi_metrics_and_datapoints()``.\n\nQuerying metric values\n~~~~~~~~~~~~~~~~~~~~~~\n\nQuerying metrics and its raw values happens through the method\n``query_metric(metric_type, metric_id, **query_options)``. Available\noptions are listed in the Hawkular-Metrics documentation. To query for\naggregated values, use the method\n``query_metric_stats(metric_type, metric_id, **query_options)``\n\nExample querying for raw values:\n\n.. code:: python\n\n    >>> client.query_metric(MetricType.Gauge, 'example.doc.1')\n    [{'value': 4.24, 'timestamp': 1462363124102}, {'value': 4.42, 'timestamp': 1462363032249}, {'value': 4.35, 'timestamp': 1462362981464}]\n    >>> client.query_metric(MetricType.Gauge, 'example.doc.1', start=1462363032249)\n    [{'value': 4.24, 'timestamp': 1462363124102}, {'value': 4.42, 'timestamp': 1462363032249}]\n\nFor aggregated metrics:\n\n.. code:: python\n\n    >>> client.query_metric_stats(MetricType.Gauge, 'example.doc.1', buckets=2, percentiles='90.0,95.0')\n    [{'empty': True, 'start': 1462334779765, 'end': 1462349179765}, {'empty': False, 'avg': 4.336666666666667, 'start': 1462349179765, 'min': 4.24, 'samples': 3, 'sum': 13.01, 'max': 4.42, 'end': 1462363579765, 'median': 4.35, 'percentiles': [{'value': 4.35, 'quantile': 0.9}, {'value': 4.35, 'quantile': 0.95}]}]\n    >>>\n\nMethod documentation\n--------------------\n\nMethod documentation is available with ``pydoc hawkular``\n\n.. |Build Status| image:: https://travis-ci.org/hawkular/hawkular-client-python.svg?branch=master\n   :target: https://travis-ci.org/hawkular/hawkular-client-python\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/hawkular/hawkular-client-python",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hawkular-client",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/hawkular-client/",
    "release_url": "https://pypi.org/project/hawkular-client/0.5.3/",
    "requires_python": "",
    "summary": "Python client to communicate with Hawkular server over HTTP(S)",
    "version": "0.5.3"
  },
  "releases": {
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bd787e5f464bba59f275b572da81d6d9",
          "sha256": "52c40ce1a198fb9ee5643a2d5f1eccf436b0831ec6a55f67333cefa298a69c83"
        },
        "downloads": 410,
        "filename": "hawkular-client-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bd787e5f464bba59f275b572da81d6d9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9128,
        "upload_time": "2016-05-04T13:14:19",
        "url": "https://files.pythonhosted.org/packages/d4/21/be1a0b976de497863a0de425227da6eb017cda440d2168fe17652026ab4a/hawkular-client-0.4.0.tar.gz"
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f09b46288be1b1154c19ed058e45d983",
          "sha256": "bd7c056f9791262935871c16896afdefd6e467cacfcc69b3e8031e5d797d1cb6"
        },
        "downloads": 129,
        "filename": "hawkular-client-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f09b46288be1b1154c19ed058e45d983",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9100,
        "upload_time": "2016-06-02T12:29:34",
        "url": "https://files.pythonhosted.org/packages/27/2f/303690a71416997d159f05284c279da141b35305e1f5add3a241c559a6bf/hawkular-client-0.4.3.tar.gz"
      }
    ],
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "38b9f3a0b4169a08ee73a08fda88d972",
          "sha256": "3b0378fe93983ff3c2fbd59721eea960d91af01685d85ea57480c4d14efe785d"
        },
        "downloads": 263,
        "filename": "hawkular-client-0.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "38b9f3a0b4169a08ee73a08fda88d972",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9283,
        "upload_time": "2016-07-19T18:42:26",
        "url": "https://files.pythonhosted.org/packages/60/73/1773efe502c5a5f9420d63a33ee12b40e5524535700880c3c03117f6906d/hawkular-client-0.4.4.tar.gz"
      }
    ],
    "0.4.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fac438fa5be2b499bc926e6e597da6af",
          "sha256": "1e0933585df9d46d2118b22e2a01217db1c57ddd34b42076a418605e8cca6403"
        },
        "downloads": 108,
        "filename": "hawkular-client-0.4.5.tar.gz",
        "has_sig": false,
        "md5_digest": "fac438fa5be2b499bc926e6e597da6af",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9360,
        "upload_time": "2016-09-14T12:08:25",
        "url": "https://files.pythonhosted.org/packages/f3/d0/20654192e93240e242a0efe3a5a7ab9a6974c714015cabc37c6c62528e86/hawkular-client-0.4.5.tar.gz"
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "64558e7b53e175b6691da62df1423566",
          "sha256": "4e4773a69146248e9219a83deb1a658dffbbaa6e7f6582a61e7e96d52a0522e9"
        },
        "downloads": 12,
        "filename": "hawkular-client-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "64558e7b53e175b6691da62df1423566",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10576,
        "upload_time": "2017-01-12T13:30:16",
        "url": "https://files.pythonhosted.org/packages/ed/bf/dac94b11bb38d2fcad8a66211b0bf752f1ca9e951ef4b53c6281cb56700b/hawkular-client-0.5.0.tar.gz"
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e3bc95f06adfd275127e4cb5cd62bd94",
          "sha256": "c920e7c1311475b1e54e7cb318039f5dc100a9416a2eef78b482faca29b1c4ea"
        },
        "downloads": 9,
        "filename": "hawkular-client-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e3bc95f06adfd275127e4cb5cd62bd94",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10779,
        "upload_time": "2017-01-23T09:48:14",
        "url": "https://files.pythonhosted.org/packages/c8/68/1785e7e0c3bfe852d832da3c68a9142b617e8826d4ea8bc3c07836fbe0b5/hawkular-client-0.5.1.tar.gz"
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ac6635350414a5d7bf6dfe9ed44b2142",
          "sha256": "1dc7400e37f324b90965066881de1484104c5ed7de7670e1dca2a48b77e52ef8"
        },
        "downloads": 37,
        "filename": "hawkular-client-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ac6635350414a5d7bf6dfe9ed44b2142",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10995,
        "upload_time": "2017-02-23T11:35:39",
        "url": "https://files.pythonhosted.org/packages/8c/c0/85eeddea26dcba76413d37b7a0052daae5177469e60ac165ed4a2e132e8b/hawkular-client-0.5.2.tar.gz"
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "50adb457aa491e8e8f8729089925fcb5",
          "sha256": "baa5456315b35456177107c77a576969c85f04d3b4a1ec1c71dbdfbf4e797a55"
        },
        "downloads": 11,
        "filename": "hawkular-client-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "50adb457aa491e8e8f8729089925fcb5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11347,
        "upload_time": "2017-03-28T11:10:55",
        "url": "https://files.pythonhosted.org/packages/d9/2d/3a511ca954f356d4942b0a350dc138e49c8fb9a37590baf72417e35b8805/hawkular-client-0.5.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "50adb457aa491e8e8f8729089925fcb5",
        "sha256": "baa5456315b35456177107c77a576969c85f04d3b4a1ec1c71dbdfbf4e797a55"
      },
      "downloads": 11,
      "filename": "hawkular-client-0.5.3.tar.gz",
      "has_sig": false,
      "md5_digest": "50adb457aa491e8e8f8729089925fcb5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 11347,
      "upload_time": "2017-03-28T11:10:55",
      "url": "https://files.pythonhosted.org/packages/d9/2d/3a511ca954f356d4942b0a350dc138e49c8fb9a37590baf72417e35b8805/hawkular-client-0.5.3.tar.gz"
    }
  ]
}