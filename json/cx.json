{
  "info": {
    "author": "Radovan Bast",
    "author_email": "radovan.bast@uit.no",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6"
    ],
    "description": ".. image:: https://travis-ci.org/bast/coastal-express.svg?branch=master\n   :target: https://travis-ci.org/bast/coastal-express/builds\n.. image:: https://img.shields.io/badge/license-%20MPL--v2.0-blue.svg\n   :target: ../master/LICENSE\n\n\nCoastal express\n===============\n\nCompute nearest neighbor distances along the coast with a view angle.\n\n\nInstallation\n------------\n\n.. code:: shell\n\n  $ pip install cx\n\n\nExample\n-------\n\n.. code:: shell\n\n  cx --boundary=\"$PWD/boundary.txt\" \\\n     --islands=\"$PWD/islands.txt\" \\\n     --view-angle=20.0 \\\n     --min-distance=3.0 \\\n     --max-distance=40.0 \\\n     --output-dir=\"$PWD/output\"\n\n\nAvailable options\n-----------------\n\n.. code:: shell\n\n  $ cx --help\n\n  Usage: cx [OPTIONS]\n\n  Options:\n    --boundary TEXT      File containing the boundary.\n    --islands TEXT       File(s) containing island data - you can use wildcards.\n    --view-angle TEXT    View angle in degrees.\n    --min-distance TEXT  Min distance.\n    --max-distance TEXT  Max distance.\n    --output-dir TEXT    Direction of the time arrow (0, 90, 180, or 270).\n    --help               Show this message and exit.\n\n\nDefinition of the view angle\n----------------------------\n\nThe code will form view vectors perpendicular to the coastline. The code will\nmake sure that along the boundary, the vectors point towards \"inside\" and along\nislands they point towards \"outside\". The view vector is computed to be\nperpendicular to the vector connecting the two neighboring points of the\ncurrent point.\n\nThe view angle of N degrees defines a view sector N/2 degrees to both sides of\nthe view vector.  In other words a view angle of N degrees is N degrees wide in\ntotal and is oriented symmetrically around the view vector which is\nperpendicular to the coast line.\ntwo neighboring points.\n\n\nInput and output formats\n------------------------\n\nThe code will read boundary and island files. It assumes that the first line in\nthe boundary file contains the total number of polygon points, followed by one\nline per point.  First and last polygon point are expected to be the same\npoint.  Two first numbers in each line are assumed to be x and y coordinates in\narbitrary but consistent units.  Each line can contain more numbers and the\ncode will not worry about these.\n\nThe code can read one or many island files. Each island file can contain one or\nmany polygons.  Each polygon starts with one line specifying the total number\nof points.  First and last polygon point are expected to be the same point.\nEach point line is interpreted the same way as the boundary.\n\nThe output format preserves all lines and numbers and the only thing it will do\nis to append each point line by the computed distance. In other words each\npoint line will become longer by one number.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/bast/coastal-express",
    "keywords": "",
    "license": "MPL-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cx",
    "platform": "",
    "project_url": "https://pypi.org/project/cx/",
    "release_url": "https://pypi.org/project/cx/0.2.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Compute nearest neighbor distances along the coast with a view angle.",
    "version": "0.2.0"
  },
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f67f6b706fc2d0d9d8a13004f6648eef",
          "sha256": "13d754926125ee110b7939af98c660899dc07850b35e189c74dc4133fe1f1ce4"
        },
        "downloads": -1,
        "filename": "cx-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f67f6b706fc2d0d9d8a13004f6648eef",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11515,
        "upload_time": "2018-02-04T13:21:05",
        "url": "https://files.pythonhosted.org/packages/9d/10/dcb7763e209e3c8248f7b8cc08813b61d504464008d9d9227bdedffa0a71/cx-0.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f67f6b706fc2d0d9d8a13004f6648eef",
        "sha256": "13d754926125ee110b7939af98c660899dc07850b35e189c74dc4133fe1f1ce4"
      },
      "downloads": -1,
      "filename": "cx-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f67f6b706fc2d0d9d8a13004f6648eef",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 11515,
      "upload_time": "2018-02-04T13:21:05",
      "url": "https://files.pythonhosted.org/packages/9d/10/dcb7763e209e3c8248f7b8cc08813b61d504464008d9d9227bdedffa0a71/cx-0.2.0.tar.gz"
    }
  ]
}