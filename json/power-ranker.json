{
  "info": {
    "author": "Ryne Carbone",
    "author_email": "ryne.carbone@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "# README\nFinish instructions on how to run\n\n# Check out package\n\n```python3\npip3 install power_ranker\n```\n\nOR\n\n```bash\ngit clone https://github.com/rynecarbone/power_ranker\ncd power_ranker\npython3 setup.py install\n```\n\n# Generate a Configuration File\nDownload a local copy of the default configuration file. Once you have the file, fill in your league name, league id, year, and week (that you want to make rankings for). You can also adjust any of the settings that control the algorithms in the power rankings, or use the default values. To download a local copy of the configuration file, use the -dc (--download-config) option. If you are in a private league, use the -p (--private-league) option to log into your ESPN account and retreive cookie information:\n```bash\npower_ranker -dc \nCreating copy of: /Path/To/power_ranker/docs/default_config.cfg\nTo local destination: /Path/To/Current/Dir/MY_LOCAL_CONFIG.cfg\n```\nor \n```bash\npower_ranker -dc -p\nCreating copy of: /Path/To/power_ranker/docs/default_config.cfg\nTo local destination: /Path/To/Current/Dir/MY_LOCAL_CONFIG.cfg\nUsername: <Enter ESPN Login>\nPassword: <Enter ESPN Password>\n```\n\nUse your favorite editor to open the local \"MY_LOCAL_CONFIG.cfg\" file and edit it.\n\n# Command line\nAfter you have added your league information, pass the configuration file as an argument with the -c (--config-file) option. If you haven't already, you can add the -p (--private-league) option to log into your ESPN account and retreive cookie information.\n```bash\npower_ranker -c MY_LOCAL_CONFIG.cfg \nUsing MY_LOCAL_CONFIG.cfg to generate power rankings\n\nWeek 3 Power Rankings\n...\n```\nAlternatively, pass the league id, year, and week as command line arguments (-l --leagueid, -y --year, -w --week) and all other default power ranking settings will be used. Pass the -p option if in a private league.\n```bash\npower_ranker -l 123456 -y 2017 -w 3 \nUsing user input:\nLeague ID: 123456\nYear: 2017\nWeek: 3\nCreating copy of: /Path/To/power_ranker/docs/default_config.cfg\nTo local destination: /Path/To/Current/Dir/MY_LOCAL_CONFIG.cfg\n\nWeek 3 Power Rankings \n...\n```\n\n# Manipulate League objects in python interpreter\nAfter you have added your league information to the local configuration file, you can open python3 interpreter:\n```python3\npython3\n>>> from power_ranker.league import League\n>>> my_config = 'MY_LOCAL_CONFIG.cfg'\n>>> my_league = League(my_config)\n>>> my_league.get_power_rankings()\n```\n## Recalculate power rankings for a separate week\nAfter you have a league object, you can get power rankings for a different week as well (example, for week 3):\n```python3\n>>> my_league.get_power_rankings(3)\n```\n## Generate website after calculating rankings\nAfter you have calculated the power rankings for the desired week, you can create a directory with html files to showcase the rankings online. For an example of how to use Github Pages to host the website, see the documentation in  \"docs/PublishingWebsite.md\"\n```python3\n>>> my_league.make_website()\n```\n\n# Credit\nThe code to extract league info from hidden ESPN API is largely thanks to\nRich Barton's espnff package (used v 1.0.0 2016-10-04):\nhttps://github.com/rbarton65/espnff\nLeague class and team class templates also inspired from that code. \n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/rynecarbone/power_ranker",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "power-ranker",
    "platform": "",
    "project_url": "https://pypi.org/project/power-ranker/",
    "release_url": "https://pypi.org/project/power-ranker/1.0.0/",
    "requires_dist": [
      "matplotlib",
      "scipy",
      "numpy",
      "configparser",
      "requests"
    ],
    "requires_python": ">=3",
    "summary": "Fantasy football power rankings for public ESPN leagues",
    "version": "1.0.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ca1ca53fe01f2bb217f30415cbff80ab",
          "sha256": "c6a609b09c244d2f38a31c98a74029a797f980bf2159574249fa21216685d221"
        },
        "downloads": 0,
        "filename": "power_ranker-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca1ca53fe01f2bb217f30415cbff80ab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 2262716,
        "upload_time": "2017-10-05T19:09:49",
        "url": "https://files.pythonhosted.org/packages/ea/3e/1f970239687b981746c7c619faf088446d5222d44b58571f65925b19ea3e/power_ranker-1.0.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "78dd94f092dd50adbde16174d3419a23",
          "sha256": "beb54c07a795cdbd2475f8844275da29bd39f497ee397dec170354a47d6fe198"
        },
        "downloads": 0,
        "filename": "power_ranker-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "78dd94f092dd50adbde16174d3419a23",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2229462,
        "upload_time": "2017-10-05T19:09:55",
        "url": "https://files.pythonhosted.org/packages/fb/a5/25f51c4afa30eddbd18c3d38a3e19a6023bad3efd2f8f9b3805832b8d0e0/power_ranker-1.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ca1ca53fe01f2bb217f30415cbff80ab",
        "sha256": "c6a609b09c244d2f38a31c98a74029a797f980bf2159574249fa21216685d221"
      },
      "downloads": 0,
      "filename": "power_ranker-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ca1ca53fe01f2bb217f30415cbff80ab",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 2262716,
      "upload_time": "2017-10-05T19:09:49",
      "url": "https://files.pythonhosted.org/packages/ea/3e/1f970239687b981746c7c619faf088446d5222d44b58571f65925b19ea3e/power_ranker-1.0.0-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "78dd94f092dd50adbde16174d3419a23",
        "sha256": "beb54c07a795cdbd2475f8844275da29bd39f497ee397dec170354a47d6fe198"
      },
      "downloads": 0,
      "filename": "power_ranker-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "78dd94f092dd50adbde16174d3419a23",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 2229462,
      "upload_time": "2017-10-05T19:09:55",
      "url": "https://files.pythonhosted.org/packages/fb/a5/25f51c4afa30eddbd18c3d38a3e19a6023bad3efd2f8f9b3805832b8d0e0/power_ranker-1.0.0.tar.gz"
    }
  ]
}