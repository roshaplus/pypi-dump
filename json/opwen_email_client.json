{
  "info": {
    "author": "Clemens Wolff",
    "author_email": "clemens.wolff+pypi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Opwen webapp\n============\n\n.. image:: https://travis-ci.org/ascoderu/opwen-webapp.svg?branch=master\n  :target: https://travis-ci.org/ascoderu/opwen-webapp\n\n.. image:: https://img.shields.io/pypi/v/opwen_email_client.svg\n  :target: https://pypi.python.org/pypi/opwen_email_client/\n\nWhat's this?\n------------\n\nThis repository contains the source code for the Opwen Lokole web-application.\n\nThe Lokole is a simple email client that has functionality like:\n\n1. Self-service creation of user accounts\n2. Read emails sent to the account\n3. Write emails including rich formatting\n4. Send attachments\n\nAll emails are stored in a local SQLite database. Once per day, the emails that\nwere written during the past 24 hours get exported from the database, stored in\na JSON file, compressed and uploaded to a location on Azure Blob Storage. The\n`Opwen Server <https://github.com/ascoderu/opwen-cloudserver>`_ picks up these JSON\nfiles, manages the actual mailboxes for the users on the Lokole and sends new\nemails back to the Lokole by using the same compressed file exchange format.\n\nThe Lokole web-application is intended to run on low-spec Raspberry Pi 3\nhardware (or similar). Read the \"Production setup\" section below for further\ninformation on how to set up the client devices.\n\nWhy is this useful?\n-------------------\n\nEmail is at the core of our modern life, letting us keep in touch with friends\nand family, connecting us to our businesses partners and fostering innovation\nthrough exchange of information.\n\nHowever, in many parts of the developing world, email access is not very\nwide-spread, usually because bandwidth costs are prohibitively high compared to\nlocal purchasing power. For example, in the Democratic Republic of the Congo\n(DRC) only 3% of the population have access to emails which leaves 75 million\npeople unconnected.\n\nThe Opwen Lokole is a project by the Canadian-Congolese NGO Ascoderu that aims\nto address this problem by tackling it from three perspectives:\n\n1. The Lokole is an email client that only uses bandwidth on a schedule. This\n   reduces the cost of service as bandwidth can now be purchased when the cost\n   is lowest. For example, in the DRC, $1 purchases only 65 MB of data during\n   peak hours. At night, however, the same amount of money buys 1 GB of data.\n\n2. The Lokole uses an efficient data exchange format plus compression so that it\n   uses minimal amounts of bandwidth, reducing the cost of service. All\n   expensive operations (e.g. creating and sending of emails with headers,\n   managing mailboxes, etc.) are performed on a server in a country where\n   bandwidth is cheap.\n\n3. The Lokole only uses bandwidth in batches. This means that the cost of\n   service can be spread over many people and higher savings from increased\n   compression ratios can be achieved. For example, individually purchasing\n   bandwidth for $1 to check emails is economically un-viable for most people in\n   the DRC. However, the same $1 can buy enough bandwidth to provide email for\n   hundreds of people via the Lokole. Spreading the cost in this way makes\n   email access sustainable for local communities.\n\nSystem overview & Data exchange format\n--------------------------------------\n\nCan be found in the `opwen-cloudserver readme <https://github.com/ascoderu/opwen-cloudserver/blob/master/README.rst>`_.\n\nDevelopment setup\n-----------------\n\nFirst, get the source code.\n\n.. sourcecode :: sh\n\n  git clone https://github.com/ascoderu/opwen-webapp.git\n  cd opwen-webapp\n\nSecond, install the system-level dependencies using your package manager,\ne.g. on Ubuntu:\n\n.. sourcecode :: sh\n\n  sudo apt-get install -y python3-venv npm shellcheck\n  sudo ln -s /usr/bin/nodejs /usr/bin/node\n\nThird, use the makefile to verify your installation by running the tests and\nstarting up the server. The makefile will automatically install all required\ndependencies into a virtual environment and set up some dummy environment\nvariables for local development. The server will automatically reload whenever\nany of the Flask code or Jinja templates are changed.\n\n.. sourcecode :: sh\n\n  make tests\n  make server\n\nThe routes of the app are defined in `views.py <https://github.com/ascoderu/opwen-webapp/blob/master/opwen_email_client/webapp/views.py>`_\nso take a look there for an overview of the entrypoints into the code.\n\nFor local development, you can set the following additional environment variables:\n\n.. sourcecode :: sh\n\n  OPWEN_ENABLE_DEBUG='True'\n  AZURE_ROOT='/tmp/azure'\n\nWith these environment variables set, when the Lokole exchanges data with the server,\nit will not make any calls to Azure and instead depend on the files in the `AZURE_ROOT`\ndirectory. Any files uploaded to the server will be written to a subdirectory of\n`AZURE_ROOT` so that they can be inspected. To test sending emails from the server to\nthe Lokole, simply create a file at `$AZURE_ROOT/to-lokole/emails.pack` and the Lokole\ndevice will ingest the emails in that file during the data exchange.\n\nProduction setup\n----------------\n\nThere is a `script <https://github.com/ascoderu/opwen-webapp/blob/master/setup/setup-lokole.sh>`_\nto set up a new Lokole device. The script will install the web app in this repository\nas well as standard web infrastructure like nginx and gunicorn. The script will also\nmake ready peripherals like the USB modem used for data exchange, and set up any\nrequired background jobs such as the email synchronization cron job.\n\nThe setup script assumes that you have already set up:\n\n* 3 Azure Storage Accounts, general purpose: for the cloudserver to manage its queues, tables and blobs\n* 1 Azure Storage Account, blob storage: for the cloudserver and webapp to exchange email packages\n* 1 Application Insights account: to collect logs from the cloudserver and monitor its operations\n* 1 SendGrid account: to send and receive emails in the cloudserver\n\nThe setup script is tested with hardware:\n\n* `Raspberry Pi 3 <https://www.raspberrypi.org/products/raspberry-pi-3-model-b/>`_\n  running Raspbian Jessie lite\n  `v2016-05-27 <https://downloads.raspberrypi.org/raspbian_lite/images/raspbian_lite-2016-05-31/2016-05-27-raspbian-jessie-lite.zip>`_,\n  `v2017-01-11 <https://downloads.raspberrypi.org/raspbian_lite/images/raspbian_lite-2017-01-10/2017-01-11-raspbian-jessie-lite.zip>`_, and\n  `v2017-04-10 <https://downloads.raspberrypi.org/raspbian_lite/images/raspbian_lite-2017-04-10/2017-04-10-raspbian-jessie-lite.zip>`_\n\n* `Orange Pi Zero <http://www.orangepi.org/orangepizero/>`_\n  running `Armbian Ubuntu Xenial <https://dl.armbian.com/orangepizero/Ubuntu_xenial_default.7z>`_\n\nThe setup script is also tested with USB modems:\n\n* `Huawei E303s-65 <http://consumer.huawei.com/cl/mobile-broadband/dongles/tech-specs/e303-cl.htm>`_\n* `Huawei E3131 <http://consumer.huawei.com/lk/mobile-broadband/dongles/tech-specs/e3131-lk.htm>`_\n* `Huawei MS2131i-8 <http://consumer.huawei.com/en/solutions/m2m-solutions/products/tech-specs/ms2131-en.htm>`_\n\nThe setup script installs the latest version of the webapp published to PyPI.\nNew versions get automatically published to PyPI (via Travis) whenever a new\n`release <https://github.com/ascoderu/opwen-webapp/releases/new>`_ is created\non Github.\n\nYou can run the script on your client device like so:\n\n.. sourcecode :: sh\n\n  curl https://raw.githubusercontent.com/ascoderu/opwen-webapp/master/setup/setup-lokole.sh | sudo bash -s <client-name> <storage-account-name> <storage-account-key> <sim-type> <email-key> <server-tables-name> <server-tables-key>\n\n\nAdding a new language\n---------------------\n\n.. sourcecode :: sh\n\n  export LANG=ln\n  make prepare-translations\n  poedit \"opwen_email_client/webapp/translations/$LANG/LC_MESSAGES/messages.po\"\n  make compile-translations\n\nOr via `Transifex <https://www.transifex.com/ascoderu/opwen-webapp/dashboard/>`_.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ascoderu/opwen-webapp",
    "keywords": "",
    "license": "License :: OSI Approved :: Apache Software License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "opwen_email_client",
    "platform": "",
    "project_url": "https://pypi.org/project/opwen_email_client/",
    "release_url": "https://pypi.org/project/opwen_email_client/0.1.15/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Email client for the Opwen project",
    "version": "0.1.15"
  },
  "releases": {
    "0.1.14": [
      {
        "comment_text": "",
        "digests": {
          "md5": "049032a7d0a2e3c777ed8d1f600d8311",
          "sha256": "e5a3ebeac04f857b38c477251a437fae0cf853aee3ddf58e31089d8bc770208f"
        },
        "downloads": -1,
        "filename": "opwen_email_client-0.1.14.tar.gz",
        "has_sig": false,
        "md5_digest": "049032a7d0a2e3c777ed8d1f600d8311",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 588747,
        "upload_time": "2018-01-18T04:48:12",
        "url": "https://files.pythonhosted.org/packages/b5/32/1bbd1610b0ab3e8fcf504e95e819cedadc14e39d05ed43b01b651be86499/opwen_email_client-0.1.14.tar.gz"
      }
    ],
    "0.1.15": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9d9c7d10294b9d66edc91f0df98633d2",
          "sha256": "40efd3b5e923a14245259ce67911970fc837429d7a3229fa85b621bb6b8e1ce2"
        },
        "downloads": -1,
        "filename": "opwen_email_client-0.1.15.tar.gz",
        "has_sig": false,
        "md5_digest": "9d9c7d10294b9d66edc91f0df98633d2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 585133,
        "upload_time": "2018-01-18T04:54:57",
        "url": "https://files.pythonhosted.org/packages/ee/c9/09514d3b1b55318d789987be02dff1321fa0087524643c1a851c30d58184/opwen_email_client-0.1.15.tar.gz"
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c402b57f2150a7073b35686ea4350369",
          "sha256": "a71b2201b5e500f1f4cd9346f862120dc7e10f24f0149e3e40783e9b601a81c5"
        },
        "downloads": -1,
        "filename": "opwen_email_client-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "c402b57f2150a7073b35686ea4350369",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 734790,
        "upload_time": "2017-11-26T05:56:19",
        "url": "https://files.pythonhosted.org/packages/65/24/262fc87c188f0dd4d68008d0c730322a203c0b1a1681a1a6b4e2c708da02/opwen_email_client-0.1.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9d9c7d10294b9d66edc91f0df98633d2",
        "sha256": "40efd3b5e923a14245259ce67911970fc837429d7a3229fa85b621bb6b8e1ce2"
      },
      "downloads": -1,
      "filename": "opwen_email_client-0.1.15.tar.gz",
      "has_sig": false,
      "md5_digest": "9d9c7d10294b9d66edc91f0df98633d2",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 585133,
      "upload_time": "2018-01-18T04:54:57",
      "url": "https://files.pythonhosted.org/packages/ee/c9/09514d3b1b55318d789987be02dff1321fa0087524643c1a851c30d58184/opwen_email_client-0.1.15.tar.gz"
    }
  ]
}