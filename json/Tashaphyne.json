{
  "info": {
    "author": "Taha Zerrouki",
    "author_email": "taha.zerrouki@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Natural Language :: Arabic",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "# Tashaphyne\n============\n\nTashaphyne: Arabic Light Stemmer \u062a\u0627\u0634\u0641\u064a\u0646: \u0627\u0644\u062a\u062c\u0630\u064a\u0639 \u0627\u0644\u062e\u0641\u064a\u0641 \u0644\u0644\u0646\u0635\u0648\u0635 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\n\nDeveloppers: Taha Zerrouki: http://tahadz.com taha dot zerrouki at gmail\ndot com\n\n+-------------+----------------------------------------------------------------------------------------------------------+\n| Features    | value                                                                                                    |\n+=============+==========================================================================================================+\n| Authors     | `Authors.md <https://github.com/linuxscout/tashaphyne/master/AUTHORS.md>`__                              |\n+-------------+----------------------------------------------------------------------------------------------------------+\n| Release     | 0.3                                                                                                      |\n+-------------+----------------------------------------------------------------------------------------------------------+\n| License     | `GPL <https://github.com/linuxscout/tashaphyne/master/LICENSE>`__                                        |\n+-------------+----------------------------------------------------------------------------------------------------------+\n| Tracker     | `linuxscout/tashaphyne/Issues <https://github.com/linuxscout/tashaphyne/issues>`__                       |\n+-------------+----------------------------------------------------------------------------------------------------------+\n| Website     | https://pypi.python.org/pypi/Tashaphyne                                                                  |\n+-------------+----------------------------------------------------------------------------------------------------------+\n| Doc         | `package Documentaion <http://pythonhosted.org/Tashaphyne/>`__                                           |\n+-------------+----------------------------------------------------------------------------------------------------------+\n| Source      | `Github <http://github.com/linuxscout/tashaphyne>`__                                                     |\n+-------------+----------------------------------------------------------------------------------------------------------+\n| Download    | `sourceforge <http://tashaphyne.sourceforge.net>`__                                                      |\n+-------------+----------------------------------------------------------------------------------------------------------+\n| Feedbacks   | `Comments <http://tahadz.com/tashaphyne/contact>`__                                                      |\n+-------------+----------------------------------------------------------------------------------------------------------+\n| Accounts    | [@Twitter](https://twitter.com/linuxscout) [@Sourceforge](http://sourceforge.net/projects/tashaphyne/)   |\n+-------------+----------------------------------------------------------------------------------------------------------+\n\nCitation\n--------\n\nIf you would cite it in academic work, can you use this citation\n\n::\n\n    T. Zerrouki\u200f, Tashaphyne, Arabic light stemmer\u200f,  https://pypi.python.org/pypi/Tashaphyne/0.2\n\nor in bibtex format\n\n.. code:: bibtex\n\n    @misc{zerrouki2012tashaphyne,\n      title={Tashaphyne, Arabic light stemmer},\n      author={Zerrouki, Taha},\n      url={https://pypi.python.org/pypi/Tashaphyne/0.2},\n      year={2012}\n    }\n\n\u0645\u0632\u0627\u064a\u0627\n-----\n\n-  \u062a\u062c\u0630\u064a\u0639 \u0627\u0644\u0643\u0644\u0645\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0625\u0644\u0649 \u0623\u0628\u0633\u0637 \u062c\u0630\u0639 \u0645\u0645\u0643\u0646\n-  \u0625\u0645\u0643\u0627\u0646\u064a\u0629 \u0627\u0633\u062a\u062e\u0631\u0627\u062c \u0627\u0644\u062c\u0630\u0631\n-  \u062a\u0642\u0637\u064a\u0639 \u0627\u0644\u0643\u0644\u0645\u0629 \u0625\u0644\u0649 \u062c\u0645\u064a\u0639 \u0627\u0644\u062d\u0627\u0644\u0627\u062a \u0627\u0644\u0645\u0645\u0643\u0646\u0629.\n-  \u062a\u0646\u0645\u064a\u0637 \u0627\u0644\u0643\u0644\u0645\u0629 ( \u062a\u0648\u062d\u064a\u062f \u0627\u0644\u062d\u0631\u0648\u0641 \u0630\u0627\u062a \u0627\u0644\u0623\u0634\u0643\u0627\u0644 \u0627\u0644\u0645\u062e\u062a\u0644\u0641\u0629.\n-  \u0642\u0627\u0626\u0645\u0629 \u0645\u0633\u0628\u0642\u0629 \u0644\u0644\u0632\u0648\u0627\u0626\u062f \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u0648\u062d\u0631\u0648\u0641 \u0627\u0644\u0632\u064a\u0627\u062f\u0629 -\u0625\u0645\u0643\u0627\u0646\u064a\u0629 \u0636\u0628\u0637 \u0625\u0639\u062f\u0627\u062f\u0627\u062a\n   \u0627\u0644\u0645\u062c\u0630\u0639 \u0648\u0627\u0644\u0645\u0642\u0637\u0639\u060c \u0645\u0646 \u062e\u0644\u0627\u0644 \u062a\u0639\u062f\u064a\u0644 \u0642\u0648\u0627\u0626\u0645 \u0627\u0644\u0632\u0648\u0627\u0626\u062f.\n\nFeatures\n--------\n\n-  Arabic word Light Stemming.\n-  Root Extraction.\n-  Word Segmentation\n-  Word normalization\n-  Default Arabic Affixes list.\n-  An customizable Light stemmer: possibility of change stemmer options\n   and data.\n-  Data independent stemmer.\n\nApplications\n============\n\n-  Stemming texts\n-  Text Classification and categorization\n-  Sentiment Analysis\n-  Named Entities Recognition\n\nInstallation\n============\n\n::\n\n    pip install tashaphyne\n\nUsage\n=====\n\nTahsphyne is a finite state automaton stemmed based, it extract affixes\n(prefixes and suffixes), with a predefined affixes list.\n\nIt extract all possible affixation from a word and cite all possible\nconfiguration stemming of a given word.\n\nFunctions \u0627\u0644\u062f\u0648\u0627\u0644\n~~~~~~~~~~~~~~~~\n\n-  \u062a\u062c\u0630\u064a\u0639 \u0627\u0644\u0643\u0644\u0645\u0629\n\n\u062a\u062c\u0630\u064a\u0639 \u0627\u0644\u0643\u0644\u0645\u0629 \u0648\u0627\u0633\u062a\u062e\u0644\u0627\u0635 \u0643\u0644 \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0645\u0646\u0647\u0627 \u0628\u0648\u0627\u0633\u0637\u0629 \u0627\u0644\u062f\u0648\u0627\u0644 \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\n\nStemming function, stem an arabic word, and return a stem. This function\nstore in the instance the stemming positions (left, right), then it's\npossible to get other calculted attributs like : stem, prefixe, suffixe,\nroot.\n\n.. code:: python\n\n    >>> #make propre display for unicode\n    ... import pyarabic.arabrepr\n    >>> arepr = pyarabic.arabrepr.ArabicRepr()\n    >>> repr = arepr.repr\n    >>> \n    >>> from tashaphyne.stemming import ArabicLightStemmer\n    >>> ArListem = ArabicLightStemmer()\n    >>> word = u'\u0623\u0641\u062a\u0636\u0627\u0631\u0628\u0627\u0646\u0646\u064a'\n    >>> # stemming word\n    ... stem = ArListem.light_stem(word)\n    >>> # extract stem\n    ... print ArListem.get_stem()\n    \u0636\u0627\u0631\u0628\n    >>> # extract root\n    ... print ArListem.get_root()\n    \u0636\u0631\u0628\n    >>> \n    >>> # get prefix position index\n    ... print ArListem.get_left()\n    3\n    >>> # get prefix \n    ... print ArListem.get_prefix()    \n    \u0623\u0641\u062a\n    >>> # get prefix with a specific index\n    ... print ArListem.get_prefix(2)    \n    \u0623\u0641\n    >>> \n    >>> # get suffix position index\n    ... print ArListem.get_right()\n    7\n    >>> # get suffix \n    ... print ArListem.get_suffix()    \n    \u0627\u0646\u0646\u064a\n    >>> # get suffix with a specific index\n    ... print ArListem.get_suffix(10)    \n    \u064a\n    >>> # get affix\n    >>> print ArListem.get_affix()\n    \u0623\u0641\u062a-\u0627\u0646\u0646\u064a\n    >>> # get affix tuple\n    ... print repr(ArListem.get_affix_tuple())    \n    {'prefix': u'\u0623\u0641\u062a', 'root': u'', 'stem': u'', 'suffix': u'\u0623\u0641\u062a\u0636\u0627\u0631\u0628\u0627\u0646\u0646\u064a'}\n    >>> # star words\n    ... print ArListem.get_starword()\n    \u0623\u0641\u062a*\u0627**\u0627\u0646\u0646\u064a\n    >>> # get star stem\n    ... print ArListem.get_starstem()\n    *\u0627**\n    >>> \n    >>> #  get unvocalized word\n    ... print ArListem.get_unvocalized()\n    \u0623\u0641\u062a\u0636\u0627\u0631\u0628\u0627\u0646\u0646\u064a\n\n+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+\n| function              | Description                                                                                                                                                                | \u0648\u0635\u0641                                                                                                                   |\n+=======================+============================================================================================================================================================================+=======================================================================================================================+\n| get\\_root()           | Get the root of the treated word by the stemmer.                                                                                                                           | \u0627\u0633\u062a\u062e\u0644\u0627\u0635 \u0627\u0644\u062c\u0630\u0631                                                                                                         |\n+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+\n| get\\_stem()           | Get the stem of the treated word by the stemmer.                                                                                                                           | \u0627\u0633\u062a\u062e\u0644\u0627\u0635 \u0627\u0644\u062c\u0630\u0639\u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u0644\u0627\u0635 \u0627\u0644\u062c\u0630\u0639 \u0627\u0644\u062a\u0644\u0642\u0627\u0626\u064a \u0645\u0628\u0627\u0634\u0631\u0629\u060c \u0639\u0646\u062f \u0627\u0644\u0631\u063a\u0628\u0629 \u0641\u064a \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u062c\u0630\u0639 \u0645\u0639\u064a\u0646\u060c \u0646\u062d\u062f\u062f \u062f\u0644\u064a\u0644 \u0627\u0644\u0633\u0627\u0628\u0642\u060c \u0648\u062f\u0644\u064a\u0644 \u0627\u0644\u0644\u0627\u062d\u0642.   |\n+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+\n| get\\_left()           | Get the prefix end position                                                                                                                                                | \u0645\u0648\u0636\u0639 \u0646\u0647\u0627\u064a\u0629 \u0627\u0644\u0633\u0627\u0628\u0642\u0629                                                                                                    |\n+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+\n| get\\_right()          | Get the suffix start position                                                                                                                                              | \u0645\u0648\u0636\u0639 \u0628\u062f\u0627\u064a\u0629 \u0627\u0644\u0644\u0627\u062d\u0642\u0629                                                                                                    |\n+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+\n| get\\_prefix()         | return the prefix/suffix of the treated word by the stemmer.                                                                                                               | \u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u0633\u0627\u0628\u0642\u0629 \u0627\u0644\u062a\u0644\u0642\u0627\u0626\u064a\u0629 \u0623\u0648 \u0633\u0627\u0628\u0642\u0629 \u0645\u0639\u064a\u0646\u0629 \u0628\u0645\u0648\u0636\u0639                                                                        |\n+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+\n| get\\_suffix()         | Get default suffix, or suffix by suffix index                                                                                                                              | \u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u0644\u0627\u062d\u0642\u0629 \u0627\u0644\u062a\u0644\u0642\u0627\u0626\u064a\u0629 \u0623\u0648 \u0628\u0648\u0627\u0633\u0637\u0629 \u062f\u0644\u064a\u0644 \u0627\u0644\u0644\u0627\u062d\u0642\u0629                                                                      |\n+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+\n| get\\_affix()          | Get default Affix or specific by left and right indexes                                                                                                                    | \u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u0632\u0627\u0626\u062f\u0629 \u0627\u0644\u062a\u0644\u0642\u0627\u0626\u064a\u0629 \u0623\u0648 \u0627\u0644\u0645\u0639\u064a\u0646\u0629\u0628\u062f\u0644\u064a\u0644\u064a \u0627\u0644\u0633\u0627\u0628\u0642 \u0648\u0627\u0644\u0644\u0627\u062d\u0642                                                             |\n+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+\n| get\\_affix\\_tuple()   | Get affixe tuple                                                                                                                                                           | \u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u0632\u0627\u0626\u062f\u0629 \u0628\u062a\u0641\u0627\u0635\u064a\u0644\u0647\u0627                                                                                             |\n+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+\n| get\\_starword()       | Get stared word, radical letters replaced by \"*\"\\|\u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0646\u062c\u0645\u0629\u060c \u0627\u0644\u062d\u0631\u0648\u0641 \u0627\u0644\u0623\u0635\u0644\u064a\u0629 \u0645\u062e\u0641\u064a\u0629 \u0628\u0646\u062c\u0648\u0645 get\\_starstem()\\|Get stared stem, radical letters replaced by \"*\\ \"   | \u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u062c\u0630\u0639 \u0627\u0644\u0645\u0646\u062c\u0645\u060c \u0627\u0644\u062d\u0631\u0648\u0641 \u0627\u0644\u0623\u0635\u0644\u064a\u0629 \u0645\u062e\u0641\u064a\u0629 \u0628\u0646\u062c\u0648\u0645                                                                      |\n+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+\n| get\\_unvocalized()    | return the unvocalized form of the treated word by the stemmer. Harakat are striped.                                                                                       | \u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u0643\u0644\u0645\u0629 \u063a\u064a\u0631 \u0645\u0634\u0643\u0648\u0644\u0629                                                                                             |\n+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+\n\n-  \u0627\u0633\u062a\u062e\u0644\u0627\u0635 \u0643\u0644 \u0627\u0644\u062a\u0642\u0633\u064a\u0645\u0627\u062a \u0627\u0644\u0645\u062d\u062a\u0645\u0644\u0629\n\n-  \u062a\u0642\u0633\u064a\u0645 \u0627\u0644\u0643\u0644\u0645\u0629 \u0625\u0644\u0649 \u0643\u0644 \u0627\u0644\u0632\u0648\u0627\u0626\u062f \u0627\u0644\u0645\u062d\u062a\u0645\u0644\u0629\n\nGenerate a list of all posibble segmentation positions (lef, right) of\nthe treated word by the stemmer.\n\n.. code:: python\n\n\n    >>> word = u'\u0623\u0641\u062a\u0636\u0627\u0631\u0628\u0627\u0646\u0646\u064a'\n\n    >>> # Detect all possible segmentation\n    ... print ArListem.segment(word) \n    set([(2, 7), (3, 8), (0, 8), (2, 9), (2, 8), (3, 10), (2, 11), (1, 8), (0, 7), (2, 10), (3, 11), (1, 10), (0, 11), (3, 9), (0, 10), (1, 7), (0, 9), (3, 7), (1, 11), (1, 9)])\n\n    >>># Get all segment \n    >>>print ArListem.get_segment_list()\n    set([(2, 7), (3, 8), (0, 8), (2, 9), (2, 8), (3, 10), (2, 11), (1, 8), (0, 7), (2, 10), (3, 11), (1, 10), (0, 11), (3, 9), (0, 10), (1, 7), (0, 9), (3, 7), (1, 11), (1, 9)])\n\n    >>> # get affix list\n    ... print repr(ArListem.get_affix_list() )\n    [{'prefix': u'\u0623\u0641', 'root': u'\u0636\u0631\u0628', 'stem': u'\u062a\u0636\u0627\u0631\u0628', 'suffix': u'\u0627\u0646\u0646\u064a'},\n     {'prefix': u'\u0623\u0641\u062a', 'root': u'\u0636\u0631\u0628', 'stem': u'\u0636\u0627\u0631\u0628\u0627', 'suffix': u'\u0646\u0646\u064a'},\n     {'prefix': u'', 'root': u'\u0623\u0641\u0636\u0631\u0628', 'stem': u'\u0623\u0641\u062a\u0636\u0627\u0631\u0628\u0627', 'suffix': u'\u0646\u0646\u064a'}, \n     {'prefix': u'\u0623\u0641', 'root': u'\u0636\u0631\u0628\u0646', 'stem': u'\u062a\u0636\u0627\u0631\u0628\u0627\u0646', 'suffix': u'\u0646\u064a'}, \n     {'prefix': u'\u0623\u0641', 'root': u'\u0636\u0631\u0628', 'stem': u'\u062a\u0636\u0627\u0631\u0628\u0627', 'suffix': u'\u0646\u0646\u064a'}, \n     {'prefix': u'\u0623\u0641\u062a', 'root': u'\u0636\u0631\u0628\u0646\u0646', 'stem': u'\u0636\u0627\u0631\u0628\u0627\u0646\u0646', 'suffix': u'\u064a'}, ...]\n    >>> \n\n-  segment() / get\\_segment\\_list() \u0627\u0633\u062a\u062e\u0644\u0627\u0635 \u0642\u0627\u0626\u0645\u0629 \u0645\u0648\u0627\u0636\u0639 \u0643\u0644 \u0627\u0644\u062a\u0642\u0633\u064a\u0645\u0627\u062a\n   \u0627\u0644\u0645\u062d\u062a\u0645\u0644\u0629 \u0639\u0644\u0649 \u0634\u0643\u0644 \u0623\u0639\u062f\u0627\u062f return a list of segmentation positions (left,\n   right) of the treated word by the stemmer.\n\n-  get\\_affix\\_list \u0627\u0633\u062a\u062e\u0644\u0627\u0635 \u0642\u0627\u0626\u0645\u0629 \u0643\u0644 \u0627\u0644\u0632\u0648\u0627\u0626\u062f \u0627\u0644\u0645\u062d\u062a\u0645\u0644\u0629\n\nreturn a list of affix tuple of the treated word by the stemmer.\n\nCustomized Affix list\n~~~~~~~~~~~~~~~~~~~~~\n\n\u062a\u062e\u0635\u064a\u0635 \u0642\u0648\u0627\u0626\u0645 \u0627\u0644\u0632\u0648\u0627\u0626\u062f \u064a\u0645\u0643\u0646\u0646 \u062a\u062e\u0635\u064a\u0635 \u0642\u0648\u0627\u0626\u0645 \u0627\u0644\u0633\u0648\u0627\u0628\u0642 \u0648\u0627\u0644\u0644\u0648\u0627\u062d\u0642 \u0644\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0646\u062a\u0627\u0626\u062c\n\u0627\u0641\u0636\u0644 \u062d\u0633\u0628 \u0627\u0644\u0633\u064a\u0627\u0642\n\n\u0641\u064a \u0627\u0644\u0645\u062b\u0627\u0644 \u0627\u0644\u0645\u0648\u0627\u0644\u064a\u060c \u0633\u0646\u0633\u062a\u0639\u0645\u0644 \u0645\u062c\u0630\u0639 \u062a\u0627\u0634\u0641\u064a\u0646 \u062d\u0633\u0628 \u0642\u0648\u0627\u0626\u0645\u0647 \u0627\u0644\u062a\u0644\u0642\u0627\u0626\u064a\u0629\u060c \u062b\u0645 \u0646\u0635\u0646\u0639\n\u0645\u062c\u0630\u0639\u0627 \u0622\u062e\u0631 \u064a\u0639\u0637\u064a \u0646\u062a\u0627\u0626\u062c \u0645\u062e\u062a\u0644\u0641\u0629 \u0628\u062a\u062e\u0635\u064a\u0635 \u0642\u0648\u0627\u0626\u0645 \u0627\u0644\u0633\u0648\u0627\u0628\u0642 \u0648\u0627\u0644\u0644\u0648\u0627\u062d\u0642\n\nYou can modify and customize the default affixes list by\n\n.. code:: python\n\n    >>> import tashaphyne.stemming\n\n    >>> CUSTOM_PREFIX_LIST = [u'\u0643\u0627\u0644', u'\u0623\u0641\u0628\u0627\u0644', u'\u0623\u0641\u0643', u'\u0641\u0643', u'\u0623\u0648\u0644\u0644', u'', u'\u0623\u0641', u'\u0648\u0644', u'\u0623\u0648\u0627\u0644', u'\u0641', u'\u0648', u'\u0623\u0648', u'\u0648\u0644\u0644', u'\u0641\u0628', u'\u0623\u0648\u0644', u'\u0623\u0644\u0644', u'\u0644\u0644', u'\u0628', u'\u0648\u0643\u0627\u0644', u'\u0623\u0648\u0628', u'\u0628\u0627\u0644', u'\u0623\u0643\u0627\u0644', u'\u0627\u0644', u'\u0623\u0628', u'\u0648\u0628', u'\u0623\u0648\u0628\u0627\u0644', u'\u0623', u'\u0648\u0628\u0627\u0644', u'\u0623\u0643', u'\u0641\u0643\u0627\u0644', u'\u0623\u0648\u0643', u'\u0641\u0644\u0644', u'\u0648\u0643', u'\u0643', u'\u0623\u0644', u'\u0641\u0627\u0644', u'\u0648\u0627\u0644', u'\u0623\u0648\u0643\u0627\u0644', u'\u0623\u0641\u0644\u0644', u'\u0623\u0641\u0644', u'\u0641\u0644', u'\u0623\u0627\u0644', u'\u0623\u0641\u0643\u0627\u0644', u'\u0644', u'\u0623\u0628\u0627\u0644', u'\u0623\u0641\u0627\u0644', u'\u0623\u0641\u0628', u'\u0641\u0628\u0627\u0644']\n    >>> CUSTOM_SUFFIX_LIST = [u'\u0643\u0645\u0627', u'\u0643', u'\u0647\u0646', u'\u064a', u'\u0647\u0627', u'', u'\u0647', u'\u0643\u0645', u'\u0643\u0646', u'\u0647\u0645', u'\u0647\u0645\u0627', u'\u0646\u0627']\n\n    >>> # simple stemmer with default affixes list\n    ... simple_stemmer = tashaphyne.stemming.ArabicLightStemmer()\n\n    >>> # create a c\u0639stomized stemmer object for stemming enclitics and procletics\n    ... custom_stemmer = tashaphyne.stemming.ArabicLightStemmer()\n    >>> # configure the stemmer object\n    ... custom_stemmer.set_prefix_list(CUSTOM_PREFIX_LIST)\n    >>> custom_stemmer.set_suffix_list(CUSTOM_SUFFIX_LIST)\n    >>> \n    >>> word = u\"\u0628\u0627\u0644\u0645\u062f\u0631\u0633\u062a\u064a\u0646\"\n    >>> # segment word as \n    ... simple_stemmer.segment(word)\n    set([(4, 10), (4, 7), (4, 9), (4, 8), (3, 10), (0, 7), (3, 8), (1, 10), (1, 8), (3, 9), (0, 10), (1, 7), (0, 9), (3, 7), (0, 8), (1, 9)])\n    >>> print  repr(simple_stemmer.get_affix_list())\n    [{'prefix': u'\u0628\u0627\u0644\u0645', 'root': u'\u062f\u0631\u0633\u062a\u064a\u0646', 'stem': u'\u062f\u0631\u0633\u062a\u064a\u0646', 'suffix': u''}, {'prefix': u'\u0628\u0627\u0644\u0645', 'root': u'\u062f\u0631\u0633', 'stem': u'\u062f\u0631\u0633', 'suffix': u'\u062a\u064a\u0646'}, {'prefix': u'\u0628\u0627\u0644\u0645', 'root': u'\u062f\u0631\u0633\u062a\u064a', 'stem': u'\u062f\u0631\u0633\u062a\u064a', 'suffix': u'\u0646'}, {'prefix': u'\u0628\u0627\u0644\u0645', 'root': u'\u062f\u0631\u0633\u062a', 'stem': u'\u062f\u0631\u0633\u062a', 'suffix': u'\u064a\u0646'}, {'prefix': u'\u0628\u0627\u0644', 'root': u'\u0645\u062f\u0631\u0633\u062a\u064a\u0646', 'stem': u'\u0645\u062f\u0631\u0633\u062a\u064a\u0646', 'suffix': u''}, {'prefix': u'', 'root': u'\u0628\u0627\u0644\u0645\u062f\u0631\u0633', 'stem': u'\u0628\u0627\u0644\u0645\u062f\u0631\u0633', 'suffix': u'\u062a\u064a\u0646'}, ...]\n    >>> \n    >>> custom_stemmer.segment(word)\n    set([(1, 10), (3, 10), (0, 10)])\n    >>> \n    >>> print  repr(custom_stemmer.get_affix_list())\n    [{'prefix': u'\u0628', 'root': u'\u0627\u0644\u0645\u062f\u0631\u0633\u062a\u064a\u0646', 'stem': u'\u0627\u0644\u0645\u062f\u0631\u0633\u062a\u064a\u0646', 'suffix': u''}, {'prefix': u'\u0628\u0627\u0644', 'root': u'\u0645\u062f\u0631\u0633\u062a\u064a\u0646', 'stem': u'\u0645\u062f\u0631\u0633\u062a\u064a\u0646', 'suffix': u''}, {'prefix': u'', 'root': u'\u0628\u0627\u0644\u0645\u062f\u0631\u0633\u062a\u064a\u0646', 'stem': u'\u0628\u0627\u0644\u0645\u062f\u0631\u0633\u062a\u064a\u0646', 'suffix': u''}]\n    >>> \n\nThis command *set\\_prefix\\_list* and \\*set\\_suffix\\_list\" will rebuild\nthe Finite state automaton to consider new affixes list.\n\nPackage Documentation\n=====================\n\nFiles\n=====\n\n-  file/directory category description\n\n-  [docs] docs/ docs documentation\n\n-  [support]\n\n   -  pyarabic : basic arabic library\n\n-  [test]\n\n   -  output/ test test output\n   -  samples/ test sample files\n   -  tools/ test script to use tashaphyne\n\nFeatured Posts\n--------------\n\nIf you would cite it in academic work, can you use this citation\n\n::\n\n    T. Zerrouki\u200f, Tashaphyne, Arabic light stemmer\u200f,  https://pypi.python.org/pypi/Tashaphyne/0.2\n\nor in bibtex format\n\n.. code:: bibtex\n\n    @misc{zerrouki2012tashaphyne,\n      title={Tashaphyne, Arabic light stemmer},\n      author={Zerrouki, Taha},\n      url={https://pypi.python.org/pypi/Tashaphyne/0.2},\n      year={2012}\n    }\n\n\n",
    "docs_url": "https://pythonhosted.org/Tashaphyne/",
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://tashaphyne.sourceforge.net/",
    "keywords": "",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Tashaphyne",
    "platform": "",
    "project_url": "https://pypi.org/project/Tashaphyne/",
    "release_url": "https://pypi.org/project/Tashaphyne/0.3.1/",
    "requires_python": "",
    "summary": "Tashaphyne Arabic Light Stemmer",
    "version": "0.3.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8cac5c5ab84327313d1697aa002d2b36",
          "sha256": "f54163d413c67bd862cbf83ec2516f85182f5f058d7b561e6e4ea97635a7c644"
        },
        "downloads": 3821,
        "filename": "Tashaphyne-0.1.win32.exe",
        "has_sig": false,
        "md5_digest": "8cac5c5ab84327313d1697aa002d2b36",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 178388,
        "upload_time": "2010-02-28T22:33:34",
        "url": "https://files.pythonhosted.org/packages/97/1d/58e34f01b9697a8fb191f7f2d381850ab7bdd1b3bc26bc55d1f91aa1033e/Tashaphyne-0.1.win32.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "29cde2cc10c9f5e9ed1eafebda3c78e2",
          "sha256": "50d425af56b7b3c377b9c47af1d6df688e0ce2ffa9bb1a34c028832d73687c86"
        },
        "downloads": 3756,
        "filename": "Tashaphyne-0.1.zip",
        "has_sig": false,
        "md5_digest": "29cde2cc10c9f5e9ed1eafebda3c78e2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11058,
        "upload_time": "2010-02-28T22:39:19",
        "url": "https://files.pythonhosted.org/packages/a8/8a/7a730e631423add92342b687e171b42281512aca3299ef5820777d0c28fc/Tashaphyne-0.1.zip"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5f3c3a1b2068418095b572edec04c47b",
          "sha256": "78ad363770ed97674b31f0a5e8837ef4e6e4b1e59d62556572c5ff16834ead88"
        },
        "downloads": 3701,
        "filename": "Tashaphyne-0.2.win32.exe",
        "has_sig": false,
        "md5_digest": "5f3c3a1b2068418095b572edec04c47b",
        "packagetype": "bdist_wininst",
        "python_version": "any",
        "size": 316631,
        "upload_time": "2012-03-28T18:31:29",
        "url": "https://files.pythonhosted.org/packages/71/cf/dc6225a195ed111c9ff4dc9644f41ecda2079b7139879df70fe540a08e97/Tashaphyne-0.2.win32.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "07ae239fb8aef7d4af2f347d4b81ab21",
          "sha256": "cf9f6fae718e527c3242f23a8b15db068d262a85f9c27b69ff034ac4c0b6832c"
        },
        "downloads": 6459,
        "filename": "Tashaphyne-0.2.zip",
        "has_sig": false,
        "md5_digest": "07ae239fb8aef7d4af2f347d4b81ab21",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10386,
        "upload_time": "2012-03-28T18:31:47",
        "url": "https://files.pythonhosted.org/packages/80/23/a49da799223980cb8afdab1645cb194703175c27a2df798f4e4035d5f9c3/Tashaphyne-0.2.zip"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9dba7d87643e300d60efff781df5f036",
          "sha256": "f4fb22682bc1a4ff64027bbcaacfad0ecadfa602673ee7c760734a55e761f677"
        },
        "downloads": 2474,
        "filename": "tashaphyne-python_0.2-1_all.deb",
        "has_sig": false,
        "md5_digest": "9dba7d87643e300d60efff781df5f036",
        "packagetype": "bdist_dumb",
        "python_version": "2.7",
        "size": 9560,
        "upload_time": "2013-02-10T13:46:59",
        "url": "https://files.pythonhosted.org/packages/07/7d/828f0b9a1b13d8b4f40807228e204939aaa40347db6fde2eb2831e8b112a/tashaphyne-python_0.2-1_all.deb"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f2d8cbef5f433cdc58c03fc2234f0c58",
          "sha256": "7808d2e53a61f2fe4f2ce656c70f0ac5d34c232b7684fad3a621f7dd981fcc4f"
        },
        "downloads": 2430,
        "filename": "tashaphyne-python-0.2-1.noarch.rpm",
        "has_sig": false,
        "md5_digest": "f2d8cbef5f433cdc58c03fc2234f0c58",
        "packagetype": "bdist_rpm",
        "python_version": "2.7",
        "size": 11836,
        "upload_time": "2013-02-10T13:46:19",
        "url": "https://files.pythonhosted.org/packages/db/8f/73d943adc9d0bf63f6d03cbb339231aa662f94e001068788140bcf892cc9/tashaphyne-python-0.2-1.noarch.rpm"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bf2458ca1435219d03e3bf08f9b88a6d",
          "sha256": "60d9f85a942155b24d3e3f937c1f7beeb44f423c0a650600bef786f60540a0d3"
        },
        "downloads": 13,
        "filename": "Tashaphyne-0.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf2458ca1435219d03e3bf08f9b88a6d",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 19826,
        "upload_time": "2017-02-15T20:08:52",
        "url": "https://files.pythonhosted.org/packages/f9/96/c7090d79579415a8a33324b1da5455558f784b74791df5034f5a62b18363/Tashaphyne-0.3-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8fc5d5a07d9c6813b51da1fd46027f44",
          "sha256": "009fd233ea77d9ffc0746d078c17f04fdb128bf09c24bf2d7891d66adf3b99b4"
        },
        "downloads": 15,
        "filename": "Tashaphyne-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8fc5d5a07d9c6813b51da1fd46027f44",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17759,
        "upload_time": "2017-02-15T20:09:01",
        "url": "https://files.pythonhosted.org/packages/15/09/0d69125693136ad91691dd9d2a10c1422175a6537a2b97abee441dc39e87/Tashaphyne-0.3.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fc3e3ff013d891958193a5544fd464a4",
          "sha256": "c1fc09f58355e9247fef825fd55292004de3bfd084b383771a7b14c22178be79"
        },
        "downloads": 15,
        "filename": "Tashaphyne-0.3.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "fc3e3ff013d891958193a5544fd464a4",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 19918,
        "upload_time": "2017-02-16T11:47:03",
        "url": "https://files.pythonhosted.org/packages/15/3e/6d7b9559a75e2d9436349e0bb0ab1b684c56086e3961dee851fe7fcb4b0c/Tashaphyne-0.3.1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3833876ac5d28c1d3d038fcd1b1cdd4f",
          "sha256": "6cfd6d90fa91805fcc260a11dbcca310abac92b513906a931a722caa3f0f816a"
        },
        "downloads": 19,
        "filename": "Tashaphyne-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3833876ac5d28c1d3d038fcd1b1cdd4f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 19918,
        "upload_time": "2017-02-16T11:47:06",
        "url": "https://files.pythonhosted.org/packages/b4/43/cd0cdd4069744be422fd6ddffe13adc50dbd2c18a6a260112f517c6959eb/Tashaphyne-0.3.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "282441542c393dfbc434eaf538f721e1",
          "sha256": "b2a98a03cabd12b7641bb3dee5d3430e57809b1c67260cce1d1c39887b3f2f00"
        },
        "downloads": 16,
        "filename": "Tashaphyne-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "282441542c393dfbc434eaf538f721e1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17855,
        "upload_time": "2017-02-16T11:47:08",
        "url": "https://files.pythonhosted.org/packages/76/e5/398368a6d385a8c3a27cc024af8a6dc0edb83b8e30ebd560f6f9db65ab39/Tashaphyne-0.3.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fc3e3ff013d891958193a5544fd464a4",
        "sha256": "c1fc09f58355e9247fef825fd55292004de3bfd084b383771a7b14c22178be79"
      },
      "downloads": 15,
      "filename": "Tashaphyne-0.3.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "fc3e3ff013d891958193a5544fd464a4",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 19918,
      "upload_time": "2017-02-16T11:47:03",
      "url": "https://files.pythonhosted.org/packages/15/3e/6d7b9559a75e2d9436349e0bb0ab1b684c56086e3961dee851fe7fcb4b0c/Tashaphyne-0.3.1-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "3833876ac5d28c1d3d038fcd1b1cdd4f",
        "sha256": "6cfd6d90fa91805fcc260a11dbcca310abac92b513906a931a722caa3f0f816a"
      },
      "downloads": 19,
      "filename": "Tashaphyne-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3833876ac5d28c1d3d038fcd1b1cdd4f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 19918,
      "upload_time": "2017-02-16T11:47:06",
      "url": "https://files.pythonhosted.org/packages/b4/43/cd0cdd4069744be422fd6ddffe13adc50dbd2c18a6a260112f517c6959eb/Tashaphyne-0.3.1-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "282441542c393dfbc434eaf538f721e1",
        "sha256": "b2a98a03cabd12b7641bb3dee5d3430e57809b1c67260cce1d1c39887b3f2f00"
      },
      "downloads": 16,
      "filename": "Tashaphyne-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "282441542c393dfbc434eaf538f721e1",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 17855,
      "upload_time": "2017-02-16T11:47:08",
      "url": "https://files.pythonhosted.org/packages/76/e5/398368a6d385a8c3a27cc024af8a6dc0edb83b8e30ebd560f6f9db65ab39/Tashaphyne-0.3.1.tar.gz"
    }
  ]
}