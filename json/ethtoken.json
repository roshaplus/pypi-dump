{
  "info": {
    "author": "Jason Carver",
    "author_email": "ut96caarrs@snkmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "ethtoken.py\n===========\n\nThis is a tiny library leveraging web3.py to make an interface for\nworking with\n`EIP20 <https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md>`__\ntokens on Ethereum. (formerly ERC20)\n\n**It is currently in Pre-alpha, with 0 automated tests**\n\nUsage\n-----\n\nInstall\n~~~~~~~\n\n.. code:: sh\n\n    virtualenv -p python3 venv\n    . venv/bin/activate\n    pip install --pre ethtoken\n\nInitialize\n~~~~~~~~~~\n\n.. code:: py\n\n    from ethtoken import token\n\n    # Use the ENS name that points to your token contract here:\n    omg = token(\"omg.thetoken.eth\")\n\nUse standard EIP20 methods\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nMost EIP20 methods are optional. ``ethtoken`` makes no attempt to verify\nwhich methods are implemented by a token contract.\n\nHere's an example with all the read functions working:\n\n.. code:: py\n\n    >>> omg.name()\n    'OMGToken'\n\n    >>> omg.symbol()\n    'OMG'\n\n    >>> omg.decimals()\n    18\n\n    >>> omg.totalSupply()\n    140245398245132780789239631\n\n    # Use the ENS name of the owner address here:\n    >>> omg.balanceOf('ethereumfoundation.eth')\n    308744633639977714804\n\nCustom methods\n~~~~~~~~~~~~~~\n\n``ethtoken`` has a single custom method not in the EIP20 spec:\n``token_balance``.\n\n.. code:: py\n\n    >>> omg.token_balance(\"ethereumfoundation.eth\")\n    Decimal('308.744633639977714804')\n\nIt returns the balance of an address, with the decimal point shifted\naccording to the ``decimals()`` value on the contract. In other words,\nit is the human-readable number of tokens that the given address owns.\n\nCompletely Untested: Transfers\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIn theory, you could use this to send a token. I haven't even tried it\nonce yet. Just don't use it. If you're going to ignore me, don't blame\nme if you lose tokens or ether.\n\nThis should theoretically transfer 1 giga units from 0x0 to 0xdead.\n(That's 1 nanotoken, at 18 decimals). Of course, this won't work if you\ndon't control the 0x0 address. (hint: you don't)\n\n.. code:: py\n\n    from web3 import Web3\n\n    >>> omg.transfer(\n      '0x000000000000000000000000000000000000dEaD',\n      10 ** 9,\n      transact={\n        'from': '0x0000000000000000000000000000000000000000',\n        'gasPrice': Web3.toWei('0.1', 'gwei'),\n      },\n    )\n\nOwnership Disclosure\n~~~~~~~~~~~~~~~~~~~~\n\nI own some OmiseGo tokens, because anyone who had some ether during\ntheir airdrop got some. I don't have any opinions on the company or\ntoken.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/carver/ethtoken.py",
    "keywords": "ethereum erc20 token eip20 ICO ETH",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ethtoken",
    "platform": "",
    "project_url": "https://pypi.org/project/ethtoken/",
    "release_url": "https://pypi.org/project/ethtoken/0.0.1a2/",
    "requires_dist": [
      "web3 (~=4.0b2)"
    ],
    "requires_python": "",
    "summary": "Ethereum EIP20 Token Interface",
    "version": "0.0.1a2"
  },
  "releases": {
    "0.0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c6691a9a91ce20fb4a4a1d198e9fc141",
          "sha256": "795e0b6de06bd40ace979f015b9e2be49427bab380b57c64fb47386f9cf9d46b"
        },
        "downloads": -1,
        "filename": "ethtoken-0.0.1a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6691a9a91ce20fb4a4a1d198e9fc141",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 4175,
        "upload_time": "2017-11-17T23:15:35",
        "url": "https://files.pythonhosted.org/packages/31/04/8aba7b0a3ffbfcdf406893d5d079987b3af052cfb630b6d0f51e79317d68/ethtoken-0.0.1a1-py3-none-any.whl"
      }
    ],
    "0.0.1a2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "967414b35bb78a94b25f54f00f8a8a55",
          "sha256": "a1b3dfc9efe1dcfc818be8ac018e58ff07571ebd93c66aab647c487913167cf0"
        },
        "downloads": -1,
        "filename": "ethtoken-0.0.1a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "967414b35bb78a94b25f54f00f8a8a55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 5928,
        "upload_time": "2017-11-22T17:58:58",
        "url": "https://files.pythonhosted.org/packages/71/2e/3830e0dd15f6d93ce99925eba02a16f81dc7db58a0ec360b887568b83a87/ethtoken-0.0.1a2-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "967414b35bb78a94b25f54f00f8a8a55",
        "sha256": "a1b3dfc9efe1dcfc818be8ac018e58ff07571ebd93c66aab647c487913167cf0"
      },
      "downloads": -1,
      "filename": "ethtoken-0.0.1a2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "967414b35bb78a94b25f54f00f8a8a55",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 5928,
      "upload_time": "2017-11-22T17:58:58",
      "url": "https://files.pythonhosted.org/packages/71/2e/3830e0dd15f6d93ce99925eba02a16f81dc7db58a0ec360b887568b83a87/ethtoken-0.0.1a2-py3-none-any.whl"
    }
  ]
}