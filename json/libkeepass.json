{
  "info": {
    "author": "Lukas Koell",
    "author_email": "phpwutz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3"
    ],
    "description": "libkeepass\n==========\n\nLow-level Python (2.7/3.x) module to read KeePass 1.x/KeePassX (v3) and KeePass 2.x (v4)\nfiles.\n\nSee `pykeepass`_ or `kppy`_ for higher level database access and editing.\n\n.. _`pykeepass`: https://github.com/pschmitt/pykeepass\n.. _`kppy`: https://github.com/raymontag/kppy\n\nWarning\n-------\n\nThis code makes no attempt to secure its memory.\n\nDependencies\n-------------\n\n- pycrypto\n- lxml\n- CryptoPlus (optional - adds twofish encryption support for v1 databases)\n\nKeePass 1.x support\n-------------------\n\nThe v3 reader will parse the v3 binary format and put groups into the \"groups\"\nattribute, and entries into the \"entries\" attribute. The special icon entry is\nparsed and icons can be accessed via the \"icons\" attribute. Other special\nentries are not parsed and seen as regular entries.\n\nOnly passwords are supported.\n\nNo write support.\n\nKeePass 2.x support\n-------------------\n\nThe v4 reader can output the decrypted XML document that file format is based\non. It is also available as parsed objectified element tree.\n\nThe password elements in the XML document are protected in addition to the AES\nencryption of the whole database. Switching between clear text and protected is\npossible.\n\nPasswords and key-file protection is supported.\n\nCompressed and uncompressed files are supported.\n\nThere is basic \"save as\" write support. When writing the KeePass2 file, the\nelement tree is protected, serialized, compressed and encrypted according to the\nsettings in the file header and written to a stream.\n\nExamples\n--------\n\n.. code:: python\n\n   import libkeepass\n\n   filename = \"input.kdbx\"\n   with libkeepass.open(filename, password='secret', keyfile='putty.exe') as kdb:\n       # print parsed element tree as xml\n       print kdb.pretty_print()\n\n       # re-encrypt the password fields\n       kdb.protect()\n       print kdb.pretty_print()\n\n       # or use kdb.obj_root to access the element tree\n       kdb.obj_root.findall('.//Entry')\n\n       # change the master password before writing\n       kdb.clear_credentials()\n       kdb.add_credentials(password=\"m04r_s3cr37\")\n\n       # disable compression\n       kdb.set_compression(0)\n\n       # write to a new file\n       with open('output', 'wb') as output:\n           kdb.write_to(output)\n\nTesting\n-------\n\nMake a virtualenv and install the requirements (or install through pip). Then run the tests script::\n\n.. code:: bash\n\n   pip install -r requirements.txt\n   python tests/tests.py\n\nReferences\n----------\n\nBrett Viren's `code`_ was a starting point and some of his code is being\nre-used unchanged\n\n\nFor v4 support reading the `original Keepass2 C#`_ source was used as inspiration\n\nKeepass 2.x uses Salsa20 to protect data in XML. Currently `puresalsa20`_ is used and included.\n\n\nFor v3 read support, code was copied with some enhancements from WAKAYAMA\nShirou's `kptool`_.\n\n.. _`original Keepass2 C#`: http://keepass.info\n.. _`code`: https://github.com/brettviren/python-keepass\n.. _`puresalsa20`: http://www.tiac.net/~sw/2010/02/PureSalsa20/index.html\n.. _`kptool`: https://github.com/shirou/kptool)\n\nThanks to them and all others who came before are in order.\n\nContributors\n------------\n- fdemmer\n- phpwutz\n- nvamilichev\n- crass\n- pschmitt\n- evidlo\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/phpwutz/libkeepass",
    "keywords": "keepass library",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "libkeepass",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/libkeepass/",
    "release_url": "https://pypi.org/project/libkeepass/0.2.0/",
    "requires_python": "",
    "summary": "A library to access KeePass 1.x/KeePassX (v3) and KeePass 2.x (v4) files",
    "version": "0.2.0"
  },
  "releases": {
    "0.1.2": [],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3c1d423602aa328915d6f017e3307494",
          "sha256": "28fa1451a7834a316474d87b509aa713dafcd8120cf7938a02c4684bb93b3640"
        },
        "downloads": 31,
        "filename": "libkeepass-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3c1d423602aa328915d6f017e3307494",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22685,
        "upload_time": "2017-04-03T22:30:45",
        "url": "https://files.pythonhosted.org/packages/1f/08/105a1c1fa004df1ed0d7013b322861e2e454df8d358a44ea865f8f43ae01/libkeepass-0.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "3c1d423602aa328915d6f017e3307494",
        "sha256": "28fa1451a7834a316474d87b509aa713dafcd8120cf7938a02c4684bb93b3640"
      },
      "downloads": 31,
      "filename": "libkeepass-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3c1d423602aa328915d6f017e3307494",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 22685,
      "upload_time": "2017-04-03T22:30:45",
      "url": "https://files.pythonhosted.org/packages/1f/08/105a1c1fa004df1ed0d7013b322861e2e454df8d358a44ea865f8f43ae01/libkeepass-0.2.0.tar.gz"
    }
  ]
}