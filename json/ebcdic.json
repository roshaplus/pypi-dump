{
  "info": {
    "author": "Thomas Aglassinger",
    "author_email": "roskakori@users.sourceforge.net",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Text Processing"
    ],
    "description": "ebcdic\r\n======\r\n\r\nEbcdic is a Python package adding additional EBCDIC codecs for data\r\nexchange with legacy system. It works with Python 2.6+ and Python 3.1+.\r\n\r\nEBCDIC is short for Extended Binary Coded Decimal Interchange Code and is\r\na family of character encodings that is mainly used on mainframe computers.\r\nThere is no real point in using it unless you have to exchange data with\r\nlegacy systems that still require it. To learn more about EBCDIC, you can\r\nstart at <https://en.wikipedia.org/wiki/EBCDIC>.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nEbcdic is available from https://pypi.python.org/pypi/ebcdic and can be\r\ninstalled using pip::\r\n\r\n  pip install ebcdic\r\n\r\n\r\nExample usage\r\n-------------\r\n\r\nTo encode `'hello world'` on EBCDIC systems in German speaking countries, use::\r\n\r\n  >>> import ebcdic\r\n  >>> 'hello world'.encode('cp1141')\r\n  b'\\x88\\x85\\x93\\x93\\x96@\\xa6\\x96\\x99\\x93\\x84O'\r\n\r\n\r\nSupported codecs\r\n----------------\r\n\r\nThe `ebcdic` package includes EBCDIC codecs for the following regions:\r\n\r\n* cp1140 - Australia, Brazil, Canada, New Zealand, Portugal, South Africa,\r\n  USA\r\n* cp1141 - Austria, Germany, Switzerland\r\n* cp1142 - Denmark, Norway\r\n* cp1143 - Finland, Sweden\r\n* cp1144 - Italy\r\n* cp1145 - Latin America, Spain\r\n* cp1146 - Great Britain, Ireland, North Ireland\r\n* cp1147 - France\r\n* cp1148 - international\r\n* cp1149 - Iceland\r\n\r\nIt also includes legacy codecs:\r\n\r\n* cp037 - Australia, Brazil, Canada, New Zealand, Portugal, South Africa;\r\n  similar to cp1140 but without Euro sign\r\n* cp273 - Austria, Germany, Switzerland; similar to cp1141 but without Euro\r\n  sign\r\n* cp277 - Denmark, Norway; similar to cp1142 but without Euro sign\r\n* cp278 - Finland, Sweden; similar to cp1143 but without Euro sign\r\n* cp280 - Italy; similar to cp1141 but without Euro sign\r\n* cp284 - Latin America, Spain; similar to cp1145 but without Euro sign\r\n* cp285 - Great Britain, Ireland, North Ireland; similar to cp1146 but\r\n  without Euro sign\r\n* cp297 - France; similar to cp1147 but without Euro sign\r\n* cp500 - international; similar to cp1140 but without Euro sign\r\n* cp871 - Iceland; similar to cp1149 but without Euro sign\r\n* cp1047 - Open Systems (MVS C compiler)\r\n\r\nCodecs in the standard library overrule some of these codecs. At the time of\r\nthis writing this concerns cp037, cp273 (since 3.4), cp500 and cp1140.\r\n\r\nTo see get a list of EBCDIC codecs that are already provided by different\r\nsources, use `ebcdic.ignored_code_names()`. For example, with Python 3.4::\r\n\r\n  >>> ebcdic.ignored_codec_names()\r\n  ['cp037', 'cp1140', 'cp273', 'cp500']\r\n\r\n\r\n\r\nSource code\r\n-----------\r\n\r\nThese codecs have been generated using CodecMapper available from\r\nhttps://github.com/roskakori/CodecMapper. Read the README in order to\r\nto build the ebcdic package from source.\r\n\r\nTo add another 8 bit EBCDIC codec just extend the ant target `ebcdic` in\r\n`build.xml` using a  line like::\r\n\r\n   <arg value=\"cpXXX\" />\r\n\r\n\r\nLicense\r\n-------\r\n\r\nCopyright (c) 2014, Thomas Aglassinger\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n\r\n* Redistributions of source code must retain the above copyright notice,\r\n  this list of conditions and the following disclaimer.\r\n\r\n* Redistributions in binary form must reproduce the above copyright notice,\r\n  this list of conditions and the following disclaimer in the documentation\r\n  and/or other materials provided with the distribution.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\nPOSSIBILITY OF SUCH DAMAGE.\r\n\r\n\r\nChanges\r\n-------\r\n\r\nVersion 0.7, 2014-11-17\r\n\r\n* Clarified which codecs are already part of the standard library and that\r\n  these codecs overrule the `ebcdic` package. Also added a function\r\n  `ebcdic.ignored_code_names()` that returns the name of the EBCDIC codecs\r\n  provided by other means. To obtain access to `ebcdic` codecs overruled by\r\n  the standard library, use `ebcdic.lookup()`.\r\n* Cleaned up (PEP8, __all__, typos, ...).\r\n\r\n\r\nVersion 0.6, 2014-11-15\r\n\r\n* Added support for Python 2.6+ and 3.1+ (#1).\r\n* Included a modified version of `gencodec.py` that still builds maps instead\r\n  of tables so the generated codecs work with Python version earlier than 3.3.\r\n  It also does a `from __future__ import unicode_literals` so the codecs even\r\n  work with Python 2.6+ using the same source code. As a side effect, this\r\n  simplifies building the codecs because it removes the the need for a local\r\n  copy of the cpython source code.\r\n\r\n\r\nVersion 0.5, 2014-11-13\r\n\r\n* Initial public release",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://pypi.python.org/pypi/ebcdic",
    "keywords": "codec text unicode ebcdic",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ebcdic",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/ebcdic/",
    "release_url": "https://pypi.org/project/ebcdic/0.7.0/",
    "requires_python": null,
    "summary": "Additional EBCDIC codecs",
    "version": "0.7.0"
  },
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cdc734b16f368e1203c864ed00c1317c",
          "sha256": "57a3e15e6764231df6561d5eb97cdb02523febb01a61e7c1649cc32a0142fe8b"
        },
        "downloads": 1420,
        "filename": "ebcdic-0.5.0.zip",
        "has_sig": false,
        "md5_digest": "cdc734b16f368e1203c864ed00c1317c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 77280,
        "upload_time": "2014-11-13T22:30:37",
        "url": "https://files.pythonhosted.org/packages/21/50/90f9b57e05608aa50f80fe6e564095ebfa43b432ad946bea51ad486abfda/ebcdic-0.5.0.zip"
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0a686a56f617730bb001abc2e9545714",
          "sha256": "0e68f5005b5a23a9ee78b68b4c21518fefd9f46ebb7ce6430bfabcf11d882dbc"
        },
        "downloads": 1771,
        "filename": "ebcdic-0.6.0.zip",
        "has_sig": false,
        "md5_digest": "0a686a56f617730bb001abc2e9545714",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 78788,
        "upload_time": "2014-11-15T12:07:37",
        "url": "https://files.pythonhosted.org/packages/80/09/27c2683e80a1691a917b3929ffb4caad795c1360f81aeb5e44d90cfa0162/ebcdic-0.6.0.zip"
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e23ec651e19b0e9aecbbe560a80b7382",
          "sha256": "55af4888aaf82872c98a9f16f8f28da94d0d54d05e8359c38249325451e2c75b"
        },
        "downloads": 20093,
        "filename": "ebcdic-0.7.0.zip",
        "has_sig": false,
        "md5_digest": "e23ec651e19b0e9aecbbe560a80b7382",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 84309,
        "upload_time": "2014-11-16T23:45:04",
        "url": "https://files.pythonhosted.org/packages/cf/f5/3fb30da58ce7b075c26de07b0ffa0ff9d4af5551800f6512b9841af91db3/ebcdic-0.7.0.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e23ec651e19b0e9aecbbe560a80b7382",
        "sha256": "55af4888aaf82872c98a9f16f8f28da94d0d54d05e8359c38249325451e2c75b"
      },
      "downloads": 20093,
      "filename": "ebcdic-0.7.0.zip",
      "has_sig": false,
      "md5_digest": "e23ec651e19b0e9aecbbe560a80b7382",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 84309,
      "upload_time": "2014-11-16T23:45:04",
      "url": "https://files.pythonhosted.org/packages/cf/f5/3fb30da58ce7b075c26de07b0ffa0ff9d4af5551800f6512b9841af91db3/ebcdic-0.7.0.zip"
    }
  ]
}