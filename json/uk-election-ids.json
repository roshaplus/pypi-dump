{
  "info": {
    "author": "chris48s",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "UK Election IDs\n===============\n\n|Build Status| |Coverage Status|\n\nCreate Democracy Club Election Identifiers.\n\nDemocracy Club defines a specification for creating reproducible unique\nidentifiers for elections in the UK. See our `reference\ndefinition <https://elections.democracyclub.org.uk/reference_definition>`__.\nIf you are interested in independently producing identifiers which are\ncompatible with those produced by our `Every\nElection <https://elections.democracyclub.org.uk/>`__ platform, this\npython package includes a builder object, slugging logic and validation\nrules for creating identifiers that conform to the spec.\n\nInstallation\n------------\n\n.. code:: bash\n\n    pip install uk-election-ids\n\nPlatform Support\n----------------\n\n``uk-election-ids`` is tested under Python 3.4, 3.5 and 3.6\n\nUsage Examples\n--------------\n\n.. code:: python\n\n    >>> from uk_election_ids.election_ids import IdBuilder\n    >>> from datetime import date\n\n\n    # Chain method calls to build up an ID object\n    >>> myid = IdBuilder('local', date(2018, 5, 3))\\\n    ...     .with_organisation('Test Org')\\\n    ...     .with_division('Test Division')\n    # IdBuilder will deal with slugging strings for us\n    >>> myid.ballot_id\n    'local.test-org.test-division.2018-05-03'\n    >>> myid.ids\n    [\n        'local.2018-05-03',\n        'local.test-org.2018-05-03',\n        'local.test-org.test-division.2018-05-03'\n    ]\n\n\n    # IdBuilder only allows values defined in the Reference Definition\n    >>> myid = IdBuilder('gla', date(2018, 5, 3)).with_subtype('x')\n    ValueError: Allowed values for subtype are ('c', 'a')\n\n\n    # Group IDs can be created with partial information\n    >>> myid = IdBuilder('local', date(2018, 5, 3)).with_organisation('Test Org')\n    >>> myid.election_group_id\n    'local.2018-05-03'\n    >>> myid.election_group_id\n    'local.2018-05-03'\n    >>> myid.ballot_id\n    ValueError: election_type local must have a division in order to create a ballot id\n\n\n    # A Group ID object can be used to create multiple ballot IDs\n    >>> divisions = [\"area1\", \"area2\", \"area3\"]\n    >>> org_id = IdBuilder('local', date(2018, 5, 3)).with_organisation('Test Org')\n    >>> [org_id.with_division(d).ballot_id for d in divisions]\n    [\n        'local.test-org.area1.2018-05-03',\n        'local.test-org.area2.2018-05-03',\n        'local.test-org.area3.2018-05-03'\n    ]\n\nAPI Documentation\n-----------------\n\nSee the full `API\nReference <https://github.com/DemocracyClub/uk-election-ids/blob/master/docs.txt>`__\n\nData Sources\n------------\n\nElection Types and Subtypes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nValid Election types and subtypes are defined in the `reference\ndefinition <https://elections.democracyclub.org.uk/reference_definition>`__.\n\nOrganisation Names\n~~~~~~~~~~~~~~~~~~\n\nFor compatibility, organisation segments must use official names.\nOrganisation names can be sourced from `gov.uk\nregisters <https://registers.cloudapps.digital/>`__. Short form versions\nof names should be used i.e: add an organisation segment with\n``myid.with_organisation('Birmingham')`` not\n``myid.with_organisation('Birmingham City Council')``\n\n-  `Local authorities in\n   England <https://local-authority-eng.register.gov.uk/>`__: use the\n   'name' column/key\n-  `Principal local authorities in\n   Wales <https://principal-local-authority.register.gov.uk/>`__: use\n   the 'name' column/key\n-  `Local authorities in\n   Scotland <https://local-authority-sct.register.gov.uk/>`__: use the\n   'name' column/key\n-  TBC: source for Northern Ireland\n\nAlternatively organisation names can be sourced from the `Every Election\nAPI <https://elections.democracyclub.org.uk/api/organisations/>`__. Use\nthe ``common_name`` key.\n\nDivision Names\n~~~~~~~~~~~~~~\n\nFor compatibility, division segments must use official names. For\nboundaries that are already in use, names of parliamentary\nconstituencies, district wards and county electoral divisions should be\nsourced from `OS Boundary\nLine <https://www.ordnancesurvey.co.uk/business-and-government/products/boundary-line.html>`__.\nNew boundaries must be extracted from legislation. We also maintain a\n`parser <https://github.com/DemocracyClub/eco-parser>`__ which can help\nwith extracting this data from Electoral Change Orders.\n\nLicensing\n---------\n\n``uk-election-ids`` is made available under the MIT License.\n\nSupport\n-------\n\nTo report a bug, `raise an\nissue <https://github.com/DemocracyClub/uk-election-ids/issues>`__. If\nyou are using election identifiers, `join our\nslack <https://slack.democracyclub.org.uk/>`__ to ask questions or tell\nus about your project.\n\nDevelopment\n-----------\n\nRun the tests locally:\n\n.. code:: bash\n\n    ./run_tests.py\n\nBuild locally:\n\n.. code:: bash\n\n    sudo apt-get install pandoc\n    ./build.sh\n\nRebuild the API docs:\n\n.. code:: bash\n\n    pydoc uk_election_ids.election_ids.IdBuilder > docs.txt\n\n.. |Build Status| image:: https://travis-ci.org/DemocracyClub/uk-election-ids.svg?branch=master\n   :target: https://travis-ci.org/DemocracyClub/uk-election-ids\n.. |Coverage Status| image:: https://coveralls.io/repos/github/DemocracyClub/uk-election-ids/badge.svg?branch=master\n   :target: https://coveralls.io/github/DemocracyClub/uk-election-ids?branch=master",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/DemocracyClub/uk-election-ids/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "uk-election-ids",
    "platform": "",
    "project_url": "https://pypi.org/project/uk-election-ids/",
    "release_url": "https://pypi.org/project/uk-election-ids/0.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Create Democracy Club Election Identifiers",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2faefc0afad2de20d478058a243dcf84",
          "sha256": "9c63ae9f9fb35fe47090e523c9dc0edd0d7443a0f7303d216b0b2a8b847a3fba"
        },
        "downloads": -1,
        "filename": "uk_election_ids-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2faefc0afad2de20d478058a243dcf84",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6362,
        "upload_time": "2018-01-30T17:55:08",
        "url": "https://files.pythonhosted.org/packages/84/7d/ceed2c303bbf2c0551c436d88ca0a5d8e4c58a5eec6fb5d75fae6571c980/uk_election_ids-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2faefc0afad2de20d478058a243dcf84",
        "sha256": "9c63ae9f9fb35fe47090e523c9dc0edd0d7443a0f7303d216b0b2a8b847a3fba"
      },
      "downloads": -1,
      "filename": "uk_election_ids-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2faefc0afad2de20d478058a243dcf84",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6362,
      "upload_time": "2018-01-30T17:55:08",
      "url": "https://files.pythonhosted.org/packages/84/7d/ceed2c303bbf2c0551c436d88ca0a5d8e4c58a5eec6fb5d75fae6571c980/uk_election_ids-0.1.0.tar.gz"
    }
  ]
}