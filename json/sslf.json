{
  "info": {
    "author": "Christopher Jordan",
    "author_email": "christopherjordan87@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "sslf\n====\n\nSimple Spectral Line Finder\n\n``sslf`` is designed to be a dead-simple, effective and useful spectral line finder for 1D data. It utilises the continuous wavelet transform from scipy, which is a productive way to find even weak spectral lines.\n\nBecause there are many definitions for a spectral line, this package can not conceivably work in all cases. Here, I have designed ``sslf`` for Gaussian-profiled spectral lines. A big part of my work focuses on recovering weak signals in the noise, so ``sslf`` aims to identify lines, flag them, and subtract the non-zero bandpass around them.\n\nUsage\n-----\nWith a 1D spectrum (``spectral_data``) and a range of scales to test (e.g. 1 through 20), statistically significant spectral peaks can be found with::\n\n    from sslf.sslf import Spectrum\n\n    s = Spectrum(spectral_data)\n    s.find_cwt_peaks(scales=np.arange(20), snr=6.5)\n    s.subtract_bandpass()\n\nThe flattened spectrum is then contained in ``s.modified``, and peak locations at ``s.channel_peaks``.\n\n``find_cwt_peaks`` can optionally take the wavelet to be used in the wavelet transformation (Ricker wavelet by default). ``subtract_bandpass`` is a little harder to explain; see more complicated examples of usage can be found in the ``notebooks`` directory.\n\nLimitations / Future work\n-------------------------\nI don't know how to optimally select a wavelet for a particular spectral line. The Ricker wavelet appears to work well for Gaussian-profiled lines, though. I don't know how well this extends to something like a Lorentzian, but you can spectify the wavelet to ``find_cwt_peaks``. I believe the wavelet transformation is the most expensive part of this software. Rather than using ``scipy``, ``pyWavelets`` may be faster, but I need time to try it out.\n\nContributions and Suggestions\n-----------------------------\nI created this software because I could not find anything in the community that functioned similarly. So, I would welcome contributions to make this software more generally flexible, to be suitable for a wide audience. It's really simple, just look at the code!\n\nBugs? Inconsistencies?\n----------------------\nAbsolutely! If you find something odd, let me know and I'll attempt to fix it ASAP.\n\nContact\n-------\nchristopherjordan87 -at- gmail.com\n\nInstallation\n------------\n::\n\n    pip install sslf\n\nor\n\n- clone this repo (``git clone https://github.com/cjordan/sslf.git``)\n- within the directory, run: ``python setup.py install --optimize=1``\n\nDependencies\n------------\n- python 2.7.x or 3.x\n- numpy 1.8+\n- scipy\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/cjordan/sslf",
    "keywords": "signal processing",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sslf",
    "platform": "",
    "project_url": "https://pypi.org/project/sslf/",
    "release_url": "https://pypi.org/project/sslf/0.1.1/",
    "requires_python": "",
    "summary": "A simple spectral line finder",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d4ef591893526a285e12c0b13c855123",
          "sha256": "b6bad95d75b3c1012e368aa75746c1efb48d7b9b45a199ac7b65d113666bb0a6"
        },
        "downloads": 0,
        "filename": "sslf-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4ef591893526a285e12c0b13c855123",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7080,
        "upload_time": "2017-05-23T05:24:13",
        "url": "https://files.pythonhosted.org/packages/52/0b/44441792964fcffaef913c554e46fda5893abf1c08a4c5e54c8825b4d58c/sslf-0.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "50eff480f2463553d25c38e5ab390f09",
          "sha256": "e6d54467ea182d4a4e29552c003a1d5685e05c1611389b2b4d1d2d1f89e8b08c"
        },
        "downloads": 0,
        "filename": "sslf-0.1.0-py3.6.egg",
        "has_sig": false,
        "md5_digest": "50eff480f2463553d25c38e5ab390f09",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "size": 12764,
        "upload_time": "2017-05-23T05:24:15",
        "url": "https://files.pythonhosted.org/packages/38/cb/3bca247236d058f9de364284d3c9d7290ee5d15d5fa4ec88ac04eceba847/sslf-0.1.0-py3.6.egg"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ad449fb9b52c103515a43fcccf83f0cf",
          "sha256": "28ace0ed31e9c7cbc4a6388e86c2cd8f0063c6fb7410a9740dc59d361ca13c90"
        },
        "downloads": 0,
        "filename": "sslf-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad449fb9b52c103515a43fcccf83f0cf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7097,
        "upload_time": "2017-05-24T08:22:48",
        "url": "https://files.pythonhosted.org/packages/be/bb/d03c7e27791edfefb60caf3fd2b73de02d262f3402ce78ac8b45d9847d2f/sslf-0.1.1-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ad449fb9b52c103515a43fcccf83f0cf",
        "sha256": "28ace0ed31e9c7cbc4a6388e86c2cd8f0063c6fb7410a9740dc59d361ca13c90"
      },
      "downloads": 0,
      "filename": "sslf-0.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ad449fb9b52c103515a43fcccf83f0cf",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 7097,
      "upload_time": "2017-05-24T08:22:48",
      "url": "https://files.pythonhosted.org/packages/be/bb/d03c7e27791edfefb60caf3fd2b73de02d262f3402ce78ac8b45d9847d2f/sslf-0.1.1-py2.py3-none-any.whl"
    }
  ]
}