{
  "info": {
    "author": "Pavlos Parissis",
    "author_email": "pavlos.parissis@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "Natural Language :: English",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Topic :: Utilities"
    ],
    "description": ".. haproxyadmin\r\n.. README.rst\r\n\r\n============\r\nhaproxyadmin\r\n============\r\n\r\n    *A Python library to manage HAProxy via stats socket.*\r\n\r\n.. contents::\r\n\r\n\r\nIntroduction\r\n------------\r\n\r\n**haproxyadmin** is a Python library for interacting with `HAProxy`_\r\nload balancer to perform operations such as enabling/disabling servers.\r\nIt does that by issuing the appropriate commands over the `stats socket`_\r\nprovided by HAProxy. It also uses that stats socket for retrieving\r\nstatistics and changing settings.\r\n\r\nHAProxy is a multi-process daemon and each process can only be accessed by a\r\ndistinct stats socket. There isn't any shared memory for all these processes.\r\nThat means that if a frontend or backend is managed by more than one processes,\r\nyou have to find which stats socket you need to send the query/command.\r\nThis makes the life of a sysadmin a bit difficult as he has to keep track of\r\nwhich stats socket to use for a given object(frontend/backend/server).\r\n\r\n**haproxyadmin** resolves this problem by presenting objects as single entities\r\neven when they are managed by multiple processes. It also supports aggregation\r\nfor various statistics provided by HAProxy. For instance, to report the\r\nrequests processed by a frontend it queries all processes which manage that\r\nfrontend and return the sum.\r\n\r\nThe library works with Python 2.7 and Python 3.4, but for development and\r\ntesting Python 3.4 is used. The `Six Python 2 and 3 Compatibility Library`_\r\nis being used to provide the necessary wrapping over the differences between\r\nthese 2 major versions of Python.\r\n\r\n\r\n.. code-block:: python\r\n\r\n\r\n    >>> from haproxyadmin import haproxy\r\n    >>> hap = haproxy.HAProxy(socket_dir='/run/haproxy')\r\n    >>> frontends = hap.frontends()\r\n    >>> for frontend in frontends:\r\n    ...     print(frontend.name, frontend.requests, frontend.process_nb)\r\n    ...\r\n    frontend_proc2 0 [2]\r\n    haproxy 0 [4, 3, 2, 1]\r\n    frontend_proc1 0 [1]\r\n    frontend1_proc34 0 [4, 3]\r\n    frontend2_proc34 0 [4, 3]\r\n    >>>\r\n    >>>\r\n    >>> backends = hap.backends()\r\n    >>> for backend in backends:\r\n    ...    print(backend.name, backend.requests, backend.process_nb)\r\n    ...    servers = backend.servers()\r\n    ...    for server in servers:\r\n    ...       print(\" \", server.name, server.requests)\r\n    ...\r\n    backend_proc2 100 [2]\r\n      bck_proc2_srv4_proc2 25\r\n      bck_proc2_srv3_proc2 25\r\n      bck_proc2_srv1_proc2 25\r\n      bck_proc2_srv2_proc2 25\r\n    haproxy 0 [4, 3, 2, 1]\r\n    backend1_proc34 16 [4, 3]\r\n      bck1_proc34_srv1 6\r\n      bck_all_srv1 5\r\n      bck1_proc34_srv2 5\r\n    backend_proc1 29 [1]\r\n      member2_proc1 14\r\n      member1_proc1 15\r\n      bck_all_srv1 0\r\n    backend2_proc34 100 [4, 3]\r\n      bck2_proc34_srv2 97\r\n      bck2_proc34_srv1 2\r\n      bck_all_srv1 1\r\n    >>>\r\n\r\n\r\nThe documentation of the library is available at http://haproxyadmin.readthedocs.org\r\n\r\n\r\nFeatures\r\n--------\r\n\r\n- HAProxy in multi-process mode (nbproc >1)\r\n- UNIX stats socket, no support for querying HTTP statistics page\r\n- Frontend operations\r\n- Backend operations\r\n- Server operations\r\n- ACL operations\r\n- MAP operations\r\n- Aggregation on various statistics\r\n- Change global options for HAProxy\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nFrom Source::\r\n\r\n   sudo python setup.py install\r\n\r\nBuild (source) RPMs::\r\n\r\n   python setup.py clean --all; python setup.py bdist_rpm\r\n\r\nBuild a source archive for manual installation::\r\n\r\n   python setup.py sdist\r\n\r\n\r\nRelease\r\n-------\r\n\r\n#. Bump versions in docs/source/conf.py and haproxyadmin/__init__.py\r\n\r\n#. Commit above change with::\r\n\r\n      git commit -av -m'RELEASE 0.1.3 version'\r\n\r\n#. Create a signed tag, pbr will use this for the version number::\r\n\r\n      git tag -s 0.1.3 -m 'bump release'\r\n\r\n#. Create the source distribution archive (the archive will be placed in the **dist** directory)::\r\n\r\n      python setup.py sdist\r\n\r\n#. pbr will update ChangeLog file and we want to squeeze them to the previous commit thus we run::\r\n\r\n      git commit -av --amend\r\n\r\n#. Move current tag to the last commit::\r\n\r\n      git tag -fs 0.1.3 -m 'bump release'\r\n\r\n#. Push changes::\r\n\r\n      git push;git push --tags\r\n\r\n\r\nDevelopment\r\n-----------\r\nI would love to hear what other people think about **haproxyadmin** and provide\r\nfeedback. Please post your comments, bug reports, wishes on my `issues page\r\n<https://github.com/unixsurfer/haproxyadmin/issues>`_.\r\n\r\nLicensing\r\n---------\r\n\r\nApache 2.0\r\n\r\n\r\nAcknowledgement\r\n---------------\r\nThis program was originally developed for Booking.com.  With approval\r\nfrom Booking.com, the code was generalised and published as Open Source\r\non github, for which the author would like to express his gratitude.\r\n\r\nContacts\r\n--------\r\n\r\n**Project website**: https://github.com/unixsurfer/haproxyadmin\r\n\r\n**Author**: Pavlos Parissis <pavlos.parissis@gmail.com>\r\n\r\n.. _HAProxy: http://www.haproxy.org/\r\n.. _stats socket: http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#9.2\r\n.. _Six Python 2 and 3 Compatibility Library: https://pythonhosted.org/six/",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "haproxy",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "haproxyadmin",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/haproxyadmin/",
    "release_url": "https://pypi.org/project/haproxyadmin/0.2.1/",
    "requires_python": "",
    "summary": "A library to work with HAProxy via the stats socket",
    "version": "0.2.1"
  },
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7d63931b0f0ecbebcb22c60a663d45d6",
          "sha256": "8121b2c12b7cdc520dab302e74411ba12688b38189e239a3c17c3c8e0453ffc4"
        },
        "downloads": 1148,
        "filename": "haproxyadmin-0.2.1.tar.gz",
        "has_sig": true,
        "md5_digest": "7d63931b0f0ecbebcb22c60a663d45d6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 55275,
        "upload_time": "2016-04-11T12:38:49",
        "url": "https://files.pythonhosted.org/packages/f4/0b/92e53fd58820f9b2daf2a27d952f2a74d1a118c81c31f21270e94c69ed01/haproxyadmin-0.2.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "7d63931b0f0ecbebcb22c60a663d45d6",
        "sha256": "8121b2c12b7cdc520dab302e74411ba12688b38189e239a3c17c3c8e0453ffc4"
      },
      "downloads": 1148,
      "filename": "haproxyadmin-0.2.1.tar.gz",
      "has_sig": true,
      "md5_digest": "7d63931b0f0ecbebcb22c60a663d45d6",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 55275,
      "upload_time": "2016-04-11T12:38:49",
      "url": "https://files.pythonhosted.org/packages/f4/0b/92e53fd58820f9b2daf2a27d952f2a74d1a118c81c31f21270e94c69ed01/haproxyadmin-0.2.1.tar.gz"
    }
  ]
}