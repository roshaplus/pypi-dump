{
  "info": {
    "author": "Steven Loria",
    "author_email": "sloria1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "*************************************************\nenvirons: simplified environment variable parsing\n*************************************************\n\n.. image:: https://badge.fury.io/py/environs.svg\n    :target: http://badge.fury.io/py/environs\n    :alt: Latest version\n\n.. image:: https://travis-ci.org/sloria/environs.svg?branch=master\n    :target: https://travis-ci.org/sloria/environs\n    :alt: Travis-CI\n\n\nEnvirons is a Python library for parsing environment variables.\n\nEnvirons is inspired by `envparse <https://github.com/rconradharris/envparse>`_ and uses `marshmallow <https://github.com/marshmallow-code/marshmallow>`_ under the hood for validating, deserializing, and serializing values.\n\nInstall\n-------\n::\n\n    pip install environs\n\nBasic usage\n-----------\n\n.. code-block:: python\n\n    # export GITHUB_USER=sloria\n    # export MAX_CONNECTIONS=100\n    # export SHIP_DATE='1984-06-25'\n    # export TTL=42\n    # export ENABLE_LOGIN=true\n    # export GITHUB_REPOS=webargs,konch,ped\n    # export COORDINATES=23.3,50.0\n\n    from environs import Env\n\n    env = Env()\n    # required variables\n    gh_user = env('GITHUB_USER')  # => 'sloria'\n    secret = env('SECRET')  # => raises error if not set\n\n    # casting\n    max_connections = env.int('MAX_CONNECTIONS')  # => 100\n    ship_date = env.date('SHIP_DATE')  # => datetime.date(1984, 6, 25)\n    ttl = env.timedelta('TTL')  # => datetime.timedelta(0, 42)\n\n    # providing a default value\n    enable_login = env.bool('ENABLE_LOGIN', False)  # => True\n    enable_feature_x = env.bool('ENABLE_FEATURE_X', False)  # => False\n\n    # parsing lists\n    gh_repos = env.list('GITHUB_REPOS')  # => ['webargs', 'konch', 'ped']\n    coords = env.list('COORDINATES', subcast=float)  # => [23.3, 50.0]\n\n\nSupported types\n---------------\n\nThe following are all type-casting methods of  ``Env``:\n\n* ``env.str``\n* ``env.bool``\n* ``env.int``\n* ``env.float``\n* ``env.decimal``\n* ``env.list`` (accepts optional ``subcast`` keyword argument)\n* ``env.dict`` (accepts optional ``subcast`` keyword argument)\n* ``env.json``\n* ``env.datetime``\n* ``env.date``\n* ``env.timedelta`` (assumes value is an integer in seconds)\n* ``env.url``\n* ``env.uuid``\n\n\nHandling prefixes\n-----------------\n\n.. code-block:: python\n\n    # export MYAPP_HOST=lolcathost\n    # export MYAPP_PORT=3000\n\n    with env.prefixed('MYAPP_'):\n        host = env('HOST', 'localhost')  # => 'lolcathost'\n        port = env.int('PORT', 5000)  # => 3000\n\n    # nested prefixes are also supported:\n\n    # export MYAPP_DB_HOST=lolcathost\n    # export MYAPP_DB_PORT=10101\n\n    with env.prefixed('MYAPP_'):\n        with env.prefixed('DB_'):\n            db_host = env('HOST', 'lolcathost')\n            db_port = env.int('PORT', 10101)\n\n\nProxied variables\n-----------------\n\n.. code-block:: python\n\n    # export MAILGUN_LOGIN=sloria\n    # export SMTP_LOGIN={{MAILGUN_LOGIN}}\n\n    smtp_login = env('SMTP_LOGIN')  # =>'sloria'\n\n\nValidation\n----------\n\n.. code-block:: python\n\n    # export TTL=-2\n    # export NODE_ENV='invalid'\n    # export EMAIL='^_^'\n\n\n    # simple validator\n    env.int('TTL', validate=lambda n: n > 0)\n    # => Environment variable \"TTL\" invalid: ['Invalid value.']\n\n    # using marshmallow validators\n    from marshmallow.validate import OneOf\n\n    env.str('NODE_ENV',\n            validate=OneOf(['production', 'development'],\n                            error='NODE_ENV must be one of: {choices}'))\n    # => Environment variable \"NODE_ENV\" invalid: ['NODE_ENV must be one of: production, development']\n\n    # multiple validators\n    from marshmallow.validate import Length, Email\n\n    env.str('EMAIL', validate=[Length(min=4), Email()])\n    # => Environment variable \"EMAIL\" invalid: ['Shorter than minimum length 4.', 'Not a valid email address.']\n\n\nSerialization\n-------------\n\n.. code-block:: python\n\n    # serialize to a dictionary of simple types (numbers and strings)\n    env.dump()\n    # {'COORDINATES': [23.3, 50.0],\n    # 'ENABLE_FEATURE_X': False,\n    # 'ENABLE_LOGIN': True,\n    # 'GITHUB_REPOS': ['webargs', 'konch', 'ped'],\n    # 'GITHUB_USER': 'sloria',\n    # 'MAX_CONNECTIONS': 100,\n    # 'MYAPP_HOST': 'lolcathost',\n    # 'MYAPP_PORT': 3000,\n    # 'SHIP_DATE': '1984-06-25',\n    # 'TTL': 42}\n\nDefining custom parser behavior\n-------------------------------\n\n.. code-block:: python\n\n    # export DOMAIN='http://myapp.com'\n    # export COLOR=invalid\n\n    from furl import furl\n\n    # Register a new parser method for paths\n    @env.parser_for('furl')\n    def furl_parser(value):\n        return furl(value)\n\n    domain = env.furl('DOMAIN')  # => furl('https://myapp.com')\n\n\n    # Custom parsers can take extra keyword arguments\n    @env.parser_for('enum')\n    def enum_parser(value, choices):\n        if value not in choices:\n            raise environs.EnvError('Invalid!')\n        return value\n\n    color = env.enum('COLOR', choices=['black'])  # => raises EnvError\n\nNote: Environment variables parsed with a custom parser function will be serialized by ``Env.dump`` without any modification. To define special serialization behavior, use ``Env.parser_from_field`` instead (see next section).\n\nMarshmallow integration\n-----------------------\n\n.. code-block:: python\n\n    # export STATIC_PATH='app/static'\n\n    # Custom parsers can be defined as marshmallow Fields\n    import pathlib\n\n    import marshmallow as ma\n\n    class PathField(ma.fields.Field):\n        def _deserialize(self, value, *args, **kwargs):\n            return pathlib.Path(value)\n\n        def _serialize(self, value, *args, **kwargs):\n            return str(value)\n\n    env.add_parser_from_field('path', PathField)\n\n    static_path = env.path('STATIC_PATH')  # => PosixPath('app/static')\n    env.dump()['STATIC_PATH']  # => 'app/static'\n\nReading ``.env`` files\n----------------------\n\n.. code-block:: bash\n\n    # myapp/.env\n    DEBUG=true\n    PORT=4567\n\nCall ``Env.read_env`` before parsing variables.\n\n.. code-block:: python\n\n    from environs import Env\n\n    env = Env()\n    # Read .env into os.environ\n    env.read_env()\n\n    env.bool('DEBUG')  # => True\n    env.int('PORT')   # => 4567\n\nWhy...?\n-------\n\nWhy envvars?\n++++++++++++\n\nSee `The 12-factor App <http://12factor.net/config>`_ section on `configuration <http://12factor.net/config>`_.\n\nWhy not ``os.environ``?\n+++++++++++++++++++++++\n\nWhile ``os.environ`` is enough for simple use cases, a typical application will need a way to manipulate and validate raw environment variables. Environs abstracts common tasks for handling environment variables.\n\nEnvirons will help you\n\n* cast envvars to the correct type\n* specify required envvars\n* define default values\n* validate envvars\n* parse list and dict values\n* parse dates, datetimes, and timedeltas\n* parse proxied variables\n* serialize your configuration to JSON, YAML, etc.\n\nWhy another library?\n++++++++++++++++++++\n\nThere are many great Python libraries for parsing environment variables. In fact, most of the credit for environs' public API goes to the authors of `envparse <https://github.com/rconradharris/envparse>`_ and `django-environ <https://github.com/joke2k/django-environ>`_.\n\nenvirons aims to meet three additional goals:\n\n1. Make it easy to extend parsing behavior and develop plugins.\n2. Leverage the deserialization and validation functionality provided by a separate library (marshmallow).\n3. Clean up redundant API.\n\n\nLicense\n-------\n\nMIT licensed. See the `LICENSE <https://github.com/sloria/environs/blob/master/LICENSE>`_ file for more details.\n\n\n\n*********\nChangelog\n*********\n\n2.1.0 (2018-01-25)\n------------------\n\nFeatures:\n\n* Add `recurse` parameter to `Env.read_env` (`#9 <https://github.com/sloria/environs/pull/9>`_).\n  Thanks `gthank <https://github.com/gthank>`_ for the PR.\n\n2.0.0 (2018-01-02)\n------------------\n\nFeatures:\n\n* Add support for nested prefixes (`#8 <https://github.com/sloria/environs/pull/8>`_).\n  Thanks `gvialetto <https://github.com/gvialetto>`_ for the PR.\n\nOther changes:\n\n* *Backwards-incompatible*: Drop support for Python 3.3 and 3.4.\n\n1.2.0 (2017-01-12)\n------------------\n\nFeatures:\n\n* Add ``url`` parser that returns a ``urllib.parse.ParseResult`` (`#6 <https://github.com/sloria/environs/issues/6>`_). Thanks `IlyaSemenov <https://github.com/IlyaSemenov>`_ for the suggestion.\n\nBug fixes:\n\n* Every instance of ``Env`` gets its own parser map, so calling ``env.parser_for`` for one instance doesn't affect other instances.\n\n1.1.0 (2016-05-01)\n------------------\n\n* Add ``Env.read_env`` method for reading ``.env`` files.\n\n1.0.0 (2016-04-30)\n------------------\n\n* Support for proxied variables (`#2 <https://github.com/sloria/environs/issues/2>`_).\n* *Backwards-incompatible*: Remove ``env.get`` method. Use ``env()`` instead.\n* Document how to read ``.env`` files (`#1 <https://github.com/sloria/environs/issues/1>`_).\n\n0.1.0 (2016-04-25)\n------------------\n\n* First PyPI release.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/sloria/environs",
    "keywords": "environment variables parsing",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "environs",
    "platform": "",
    "project_url": "https://pypi.org/project/environs/",
    "release_url": "https://pypi.org/project/environs/2.1.0/",
    "requires_dist": [
      "read-env (>=1.1.0)",
      "marshmallow"
    ],
    "requires_python": "",
    "summary": "simplified environment variable parsing",
    "version": "2.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4c3c8fe76ffbe37b540f132c0104af8f",
          "sha256": "2c9c0854d38998f9807789083c8983d8f63f25e1795e6ea4e5110713db0ca293"
        },
        "downloads": -1,
        "filename": "environs-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c3c8fe76ffbe37b540f132c0104af8f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 8898,
        "upload_time": "2016-04-26T03:09:54",
        "url": "https://files.pythonhosted.org/packages/c7/8b/1792bed4bb0c18bdfbb23e226fe79935deb6418dd4c546d7e9f35d892f98/environs-0.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d46bcc673e7f483613082e410db09eb3",
          "sha256": "63d7378016a2886790c8460977c28ecdeb32bd6b73b52a0b269ee0477d6ac518"
        },
        "downloads": -1,
        "filename": "environs-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d46bcc673e7f483613082e410db09eb3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6494,
        "upload_time": "2016-04-26T03:10:04",
        "url": "https://files.pythonhosted.org/packages/66/1b/4c7b79b0c83bfa66e2eb87eb074b51bf4cd23fb8685cb6cc68c4114fff9f/environs-0.1.0.tar.gz"
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b519b4a72c3b52d4b175238f557fe8b4",
          "sha256": "31ef494fefeed80f50855440d61b7d5d3f38affb081ac896b6a32388778865ac"
        },
        "downloads": -1,
        "filename": "environs-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b519b4a72c3b52d4b175238f557fe8b4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9850,
        "upload_time": "2016-04-30T18:14:25",
        "url": "https://files.pythonhosted.org/packages/cd/6b/6bfa4aec4a154191cc4f38b88acc9d0c1618ff637a594cfe301e2da01f0f/environs-1.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9d6ac4308a9589fcfc89450673fb85c1",
          "sha256": "d6ab6f8da0dee6957ac0ab7976f067c74a20d27b4355ec5a7d530fdc58c9def0"
        },
        "downloads": -1,
        "filename": "environs-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9d6ac4308a9589fcfc89450673fb85c1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7042,
        "upload_time": "2016-04-30T18:14:29",
        "url": "https://files.pythonhosted.org/packages/fb/7a/7a0914689b3c6fc17192dea440e1ce3b0d1cf45da68118e293d6bceae945/environs-1.0.0.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "51be50f4080738b60cc702fa65f363ea",
          "sha256": "7ed77b03c8c78bb2de51831955a1df14c090fccad994c2dea8815c740aea982e"
        },
        "downloads": -1,
        "filename": "environs-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "51be50f4080738b60cc702fa65f363ea",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10053,
        "upload_time": "2016-05-01T16:53:33",
        "url": "https://files.pythonhosted.org/packages/ec/9c/ba2f8c58e4fb95e4c652995a02d59d0ad11c20617f4f78adce071d57c4ae/environs-1.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "53b9f6a9b595cf8487001de5dcc2a56d",
          "sha256": "56ce3ecd347173f586049f1d3340944c42c22bedd0187ec6d9368f8df16643e8"
        },
        "downloads": -1,
        "filename": "environs-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "53b9f6a9b595cf8487001de5dcc2a56d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7201,
        "upload_time": "2016-05-01T16:53:45",
        "url": "https://files.pythonhosted.org/packages/04/df/54487d01ee4a9822d910b54e26d8acd011b45bc1009127b2d12f53760e01/environs-1.1.0.tar.gz"
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9f61dc0e3274c621deaed971645fa24c",
          "sha256": "0a84784584f25db5bdd73c95d639c1bc0ee63f56868fa9c7d5d1174ad7311c52"
        },
        "downloads": -1,
        "filename": "environs-1.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f61dc0e3274c621deaed971645fa24c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10679,
        "upload_time": "2017-01-13T03:39:40",
        "url": "https://files.pythonhosted.org/packages/40/4c/133c5ae4292340dbec82302a1cc83d81d3206b8906a3fc30405302088483/environs-1.2.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ac2b1f2e44afe8c5ea3193960041c875",
          "sha256": "83148e19fab8c2ad1a85def17a86b2a88e4c0864335529a60b20916ab9c9d222"
        },
        "downloads": -1,
        "filename": "environs-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ac2b1f2e44afe8c5ea3193960041c875",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7722,
        "upload_time": "2017-01-13T03:39:42",
        "url": "https://files.pythonhosted.org/packages/3f/3b/2fe0ab4e0f9a01f755fe8f120c79d62e6eca547da866a30eafaa1093df31/environs-1.2.0.tar.gz"
      }
    ],
    "2.0.0.post0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b21b7f367d9f9039dab3aefd9395da7b",
          "sha256": "96bdb52df61e5e9a3579d4744fe7b9a0aa71e03cbaa6817b09044948dbb9456e"
        },
        "downloads": -1,
        "filename": "environs-2.0.0.post0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b21b7f367d9f9039dab3aefd9395da7b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 11101,
        "upload_time": "2018-01-05T02:11:57",
        "url": "https://files.pythonhosted.org/packages/af/4a/ac863771a148a378beb6b9bf391f04fb9c1b2f75e094adb29667fa1b94bf/environs-2.0.0.post0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1d5be42b304bcef2a688f1f082e2bdec",
          "sha256": "09cdc0139bb9dcfc89bbd3b516fa1a743f46a2891c45862eaa7d819c6ad02e04"
        },
        "downloads": -1,
        "filename": "environs-2.0.0.post0.tar.gz",
        "has_sig": false,
        "md5_digest": "1d5be42b304bcef2a688f1f082e2bdec",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9195,
        "upload_time": "2018-01-05T02:11:59",
        "url": "https://files.pythonhosted.org/packages/57/6a/978d902aa08403de2f89c49fe822953fbe46fd30625eb2ac9d173528794d/environs-2.0.0.post0.tar.gz"
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "16475f9bb60d9a7371852be8841a9571",
          "sha256": "3c1f5feaa3dec977d60bd0f8430e0995fe30fc3224ac61e37fefcf2a745e89ba"
        },
        "downloads": -1,
        "filename": "environs-2.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16475f9bb60d9a7371852be8841a9571",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 11169,
        "upload_time": "2018-01-25T05:04:39",
        "url": "https://files.pythonhosted.org/packages/81/7b/416b858cf8b201ca67628ae40472c4572ef096615fd0b6c9c903dbabc2bf/environs-2.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f0a7019637b77f54cfacbad09da7e588",
          "sha256": "eb635ed165a35cf626ac0d88b0fc32b135d6c7e9b4e311d87c216246e9db256f"
        },
        "downloads": -1,
        "filename": "environs-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f0a7019637b77f54cfacbad09da7e588",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9346,
        "upload_time": "2018-01-25T05:04:40",
        "url": "https://files.pythonhosted.org/packages/02/9a/a0dfc5165d4a6b71ad9b3c9b7038c49f3c4f7c6524a4d73f251148ea8083/environs-2.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "16475f9bb60d9a7371852be8841a9571",
        "sha256": "3c1f5feaa3dec977d60bd0f8430e0995fe30fc3224ac61e37fefcf2a745e89ba"
      },
      "downloads": -1,
      "filename": "environs-2.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "16475f9bb60d9a7371852be8841a9571",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 11169,
      "upload_time": "2018-01-25T05:04:39",
      "url": "https://files.pythonhosted.org/packages/81/7b/416b858cf8b201ca67628ae40472c4572ef096615fd0b6c9c903dbabc2bf/environs-2.1.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "f0a7019637b77f54cfacbad09da7e588",
        "sha256": "eb635ed165a35cf626ac0d88b0fc32b135d6c7e9b4e311d87c216246e9db256f"
      },
      "downloads": -1,
      "filename": "environs-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f0a7019637b77f54cfacbad09da7e588",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9346,
      "upload_time": "2018-01-25T05:04:40",
      "url": "https://files.pythonhosted.org/packages/02/9a/a0dfc5165d4a6b71ad9b3c9b7038c49f3c4f7c6524a4d73f251148ea8083/environs-2.1.0.tar.gz"
    }
  ]
}