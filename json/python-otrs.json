{
  "info": {
    "author": "Erwin Sterrenburg",
    "author_email": "e.w.sterrenburg@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Topic :: Office/Business",
      "Topic :: Software Development :: Bug Tracking"
    ],
    "description": "Python-OTRS : Python wrapper to OTRS SOAP API\n=============================================\n\nLet you access the OTRS API a pythonic-way.\n\nFeatures\n--------\n\n-  Implements fully communication with the ``GenericTicketConnectorSOAP`` and ``GenericFAQConnectorSOAP``\n   provided as webservice example by OTRS;\n-  Dynamic fields and attachments are supported;\n-  Authentication is handled programmatically, per-request or per-session;\n-  Calls are wrapped in OTRSClient methods;\n-  OTRS XML objects are mapped to Python-style objects.\n\nTo be done\n----------\n\n-  Test for python3 compatibility and make resulting changes;\n-  Improve and extend ``tests.py``.\n\nCompatibility\n--------\n-  Python 2.7;\n-  Python 3.5;\n\nInstall\n-------\n\n::\n\n    pip install python-otrs\n\nTicket and Session Operations\n-----------------------------\n\nFirst make sure you installed the ``GenericTicketConnectorSOAP`` webservice,\nsee `official documentation`_. The file GenericTicketConnectorSOAP.yml can be downloaded\nonline as the basis for this service.\n\nNote: in older versions of OTRS, GenericTicketConnectorSOAP was called GenericTicketConnector\n\n::\n\n    from otrs.ticket.template import GenericTicketConnectorSOAP\n    from otrs.client import GenericInterfaceClient\n    from otrs.ticket.objects import Ticket, Article, DynamicField, Attachment\n\n    server_uri = r'https://otrs.example.net'\n    webservice_name = 'GenericTicketConnectorSOAP'\n    client = GenericInterfaceClient(server_uri, tc=GenericTicketConnectorSOAP(webservice_name))\n\nThen authenticate, you have three choices :\n\n::\n\n    # user session\n    client.tc.SessionCreate(user_login='login', password='password')\n\n    # customer_user session\n    client.tc.SessionCreate(customer_user_login='login' , password='password')\n\n    # save user in memory\n    client.register_credentials(user='login', password='password')\n\nPlay !\n\nCreate a ticket :\n\n::\n\n    import mimetypes\n    import base64\n\n    t = Ticket(State='new', Priority='3 normal', Queue='Support',\n               Title='Problem test', CustomerUser='foo@example.fr',\n               Type='Divers')\n    a = Article(Subject='UnitTest', Body='bla', Charset='UTF8',\n                MimeType='text/plain')\n    df1 = DynamicField(Name='TestName1', Value='TestValue1')\n    df2 = DynamicField(Name='TestName2', Value='TestValue2')\n    att_path = r'C:\\Temp\\image001.png'\n    mimetype = mimetypes.guess_type(att_path)[0]\n    att_file = open(att_path , 'rb')\n    att_content = base64.b64encode(af1.read())\n    att1 = Attachment(Content=att_content,\n                      ContentType=mimetype, Filename=\"image001.png\")\n    att_file.close()\n\n    t_id, t_number = client.tc.TicketCreate(t, a, [df1, df2], [att1])\n\nUpdate an article :\n\n::\n\n    # changes the title of the ticket\n    t_upd = Ticket(Title='Updated ticket')\n    client.tc.TicketUpdate(t_id, t_upd)\n\n    # appends a new article (attachments optional)\n    new_article = Article(Subject='More info', Body='blabla', Charset='UTF8',\n                          MimeType='text/plain')\n    client.tc.TicketUpdate(article=new_article, attachments=None)\n\nSearch for tickets :\n\n::\n\n    # returns all the tickets of customer 42\n    tickets = client.tc.TicketSearch(CustomerID=42)\n\n    # returns all tickets in queue Support\n    # for which Dynamic Field 'Project' starts with 'Pizza':\n    df2 = DynamicField(Name='Project', Value='Pizza%', Operator=\"Like\")\n    client.tc.TicketSearch(Queues='Support', dynamic_fields=[df_search])\n\nRetrieve a ticket :\n\n::\n\n    ticket = client.tc.TicketGet(138, get_articles=True, get_dynamic_fields=True, get_attachments=True)\n    article = ticket.articles()[0]\n    article.save_attachments(r'C:\\temp')\n\nMany options are possible with requests, you can use all the options\navailable in `official documentation`_.\n\n.. _official documentation: http://otrs.github.io/doc/manual/admin/4.0/en/html/genericinterface.html#generic-ticket-connector\n\nPublic FAQ Operations\n---------------------\n\nFirst, make sure you have installed the open-source FAQ add-on module into your OTRS system and added the\nGenericFAQConnectorSOAP web service by installing the GenericFAQConnector.yml file.\n\n::\n\n    from otrs.ticket.template import GenericTicketConnectorSOAP\n    from otrs.faq.template import GenericFAQConnectorSOAP\n    from otrs.client import GenericInterfaceClient\n\n    client = GenericInterfaceClient('https://otrs.mycompany.com', tc=GenericTicketConnectorSOAP('GenericTicketConnectorSOAP'), fc=GenericFAQConnectorSOAP('GenericFAQConnectorSOAP'))\n\n    # first, establish session with the TicketConnector\n    client.tc.SessionCreate(user_login='someotrsuser', password='p4ssw0rd')\n\nList FAQ Languages:\n\n::\n\n    langlist = client.fc.LanguageList()\n    for language in langlist:\n        print language.ID, language.Name\n\nList FAQ Categories that have Public FAQ items in them:\n\n::\n\n    catlist = client.fc.PublicCategoryList()\n    for category in catlist:\n        print category.ID, category.Name\n\nRetrieve a pubblic FAQ article by ID\n(note: FAQ Item ID is not the same as the item number!)\n\n::\n\n    # retrieves FAQ item ID #190 with attachment contents included\n    myfaqitem = client.fc.PublicFAQGet(190, get_attachments=True)\n    # print the FAQ's Problem field\n    print myfaqitem.Field2\n\t# saves attachments to folder ./tempattach\n    myfaqitem.save_attachments('./tempattach')\n\nSearch for an FAQ article\n\t\n::\n\n    #find all FAQ articles with Windows in title:\n\tresults = client.fc.PublicFAQSearch(Title='*Windows*')\n\tfor faqitemid in results:\n\t    print \"Found FAQ item ID containing Windows: \" + str(faqitemid)\n\t\n\t\nCustom Web Service Connectors\n-----------------------------\n\nFor the FAQ operations above, note that we still needed the Ticket connector to provide access\nto the SessionCreate method. However, if your application only needs to work with FAQ articles\nand not tickets, you may wish to create a custom web service in OTRS that not only includes\nthe four FAQ operations but also includes the SessionCreate operation to allow you to establish\na session. This is very easy to accommodate in python-otrs.\n\nFirst, in OTRS, do the following:\n\n1. In OTRS Admin->Web Services, add a new web service without using a .yml file. Name it something\n   like 'ImprovedFAQConnectorSOAP'. \n2. In the settings for the web service, set the transport to HTTP::SOAP\n3. Click Save\n4. Click the 'Configure' button that has appeared next to HTTP::SOAP\n5. Set the namespace name to whatever you want (ex. http://www.otrs.org/FAQConnector).\n6. Enter the maximum message length you want (normally 10000000)\n7. Save the changes and go back to the main web service configuration screen.\n8. Add the operations you want to your custom webservice. For instance, for our improved FAQConnector,\n   you might add the four FAQ Operations and also the SessionCreate operation.\n9. Save your webservice\n\nNow that we have a web service in OTRS, we can use our custom web service in python-otrs. To do this,\nfirst create a 'template' for your new ImprovedFAQConnectorSOAP. Specify the namespace name assigned\nin step 5 above as the second parameter to the WebService() call.\n\n::\n\n    from otrs.faq.operations import LanguageList,PublicCategoryList,PublicFAQGet,PublicFAQSearch\n    from otrs.session.operations import SessionCreate\n    from otrs.client import WebService\n\n    def ImprovedFAQConnectorSOAP(webservice_name='ImprovedFAQConnectorSOAP'):\n        return WebService(webservice_name, 'http://www.otrs.org/FAQConnector', SessionCreate=SessionCreate(), LanguageList=LanguageList(),PublicCategoryList=PublicCategoryList(),PublicFAQGet=PublicFAQGet(),PublicFAQSearch=PublicFAQSearch())\n\nNow, use your improved FAQ connector:\n\n::\n\n    from otrs.client import GenericInterfaceClient\n\n    client = GenericInterfaceClient('https://otrs.mycompany.com', impfaqc=ImprovedFAQConnectorSOAP('ImprovedFAQConnectorSOAP'))\n\n    # first, establish session\n    client.impfaqc.SessionCreate(user_login='someotrsuser', password='p4ssw0rd')\n\t\n\t# get an FAQ item:\n\tclient.impfaqc.PublicFAQGet(190)",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ewsterrenburg/python-otrs",
    "keywords": "otrs ticket support soap interface helpdesk",
    "license": "GPLv3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "python-otrs",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/python-otrs/",
    "release_url": "https://pypi.org/project/python-otrs/0.3.0/",
    "requires_python": null,
    "summary": "A programmatic interface to OTRS SOAP API.",
    "version": "0.3.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4431651df8a3657ef72cbe960f07ed9d",
          "sha256": "e9004566503af633a67510c81502d3f4e9007ad5d897ffcef7209d884d33459a"
        },
        "downloads": 808,
        "filename": "python_otrs-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4431651df8a3657ef72cbe960f07ed9d",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 10371,
        "upload_time": "2015-09-03T17:35:31",
        "url": "https://files.pythonhosted.org/packages/d0/28/4a08de7412f0891890d9de9724055da5bc49b6ff801568c6ecb33dcb940b/python_otrs-0.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4b393583301a1e2bb05e3c80318cc9e8",
          "sha256": "c1c3dcf12097470272368e07fb0bf4133d78c6b182181638da5968f1469203fa"
        },
        "downloads": 1142,
        "filename": "python-otrs-0.1.0.zip",
        "has_sig": false,
        "md5_digest": "4b393583301a1e2bb05e3c80318cc9e8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12913,
        "upload_time": "2015-09-03T17:33:57",
        "url": "https://files.pythonhosted.org/packages/f7/11/a8f85b60612da715fe7aa0b9c161be1d37d5333d60b3b8eda4c458b3c6d2/python-otrs-0.1.0.zip"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9ea90da40d6a0efe1abdee1ec384e52e",
          "sha256": "31494f0d29f77dc28b22dcf12a7a733c68640ae5869b96200700cf1e798cbf53"
        },
        "downloads": 108,
        "filename": "python-otrs-0.2.0.zip",
        "has_sig": false,
        "md5_digest": "9ea90da40d6a0efe1abdee1ec384e52e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13500,
        "upload_time": "2016-08-01T09:43:01",
        "url": "https://files.pythonhosted.org/packages/81/57/86ae4d019dcd88b3efddea63cb192538a1b795c34c70a0aa873aa66fb66f/python-otrs-0.2.0.zip"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7b265f97df57067152ad8d0100f8a421",
          "sha256": "069f839f94c5be0d3572d77e843b9fdaef9e4410d67449263dec4c0a5fee0e9a"
        },
        "downloads": 298,
        "filename": "python-otrs-0.3.0.zip",
        "has_sig": false,
        "md5_digest": "7b265f97df57067152ad8d0100f8a421",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23640,
        "upload_time": "2016-08-01T09:52:39",
        "url": "https://files.pythonhosted.org/packages/c0/e6/7ef87419e62bfd37460813df4b17305020b1578625d53ecdf88ae4297a77/python-otrs-0.3.0.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "7b265f97df57067152ad8d0100f8a421",
        "sha256": "069f839f94c5be0d3572d77e843b9fdaef9e4410d67449263dec4c0a5fee0e9a"
      },
      "downloads": 298,
      "filename": "python-otrs-0.3.0.zip",
      "has_sig": false,
      "md5_digest": "7b265f97df57067152ad8d0100f8a421",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 23640,
      "upload_time": "2016-08-01T09:52:39",
      "url": "https://files.pythonhosted.org/packages/c0/e6/7ef87419e62bfd37460813df4b17305020b1578625d53ecdf88ae4297a77/python-otrs-0.3.0.zip"
    }
  ]
}