{
  "info": {
    "author": "Serkan Hosca",
    "author_email": "serkan@hosca.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "Django REST Witchcraft\n======================\n\n|Build Status|\n\n**SQLAlchemy specific things for django-rest-framework**\n\nInstallation\n============\n\n::\n\n    pip install django-rest-witchcraft\n\nExample\n=======\n\nFirst up, lets define some simple models:\n\n.. code:: python\n\n    engine = create_engine('sqlite:///:memory:', echo=True)\n    session = scoped_session(sessionmaker(bind=engine))\n\n    Base = declarative_base()\n    Base.query = session.query_property()\n\n    Base.metadata.create_all(engine)\n\n    class Group(Base):\n        __tablename__ = 'groups'\n\n        id = Column(Integer(), primary_key=True)\n        name = Column(String())\n\n\n    class User(Base):\n        __tablename__ = 'users'\n\n        id = Column(Integer(), primary_key=True)\n        name = Column(String())\n        fullname = Column(String())\n        password = Column(String())\n\n        _group_id = Column('group_id', Integer(), ForeignKey('groups.id'))\n        group = relationship(Group, backref='addresses')\n\n\n    class Address(Base):\n        __tablename__ = 'addresses'\n\n        id = Column(Integer(), primary_key=True)\n        email_addresss = Column(String(), nullable=False)\n\n        _user_id = Column(Integer(), ForeignKey('users.id'))\n        user = relationship(User, backref='addresses')\n\nNothing fancy here, we have a ``User`` class that can belong to a\n``Group`` instance and has many ``Address`` instances\n\nSecond, lets define a serializer for ``User`` with all the fields:\n\n.. code:: python\n\n    class UserSerializer(serializers.ModelSerializer):\n\n        class Meta:\n            model = User\n            session = session\n            fields = '__all__'\n\nThis will create the following serializer for us:\n\n::\n\n    >>> serializer = UserSerializer()\n\n    >>> serializer\n    UserSerializer():\n        id = IntegerField(allow_null=False, help_text=None, label='Id', required=True)\n        name = CharField(allow_null=True, help_text=None, label='Name', max_length=None, required=False)\n        fullname = CharField(allow_null=True, help_text=None, label='Fullname', max_length=None, required=False)\n        password = CharField(allow_null=True, help_text=None, label='Password', max_length=None, required=False)\n        group = GroupSerializer(is_nested=True, required=False):\n            name = CharField(allow_null=True, help_text=None, label='Name', max_length=None, required=False)\n            id = IntegerField(allow_null=False, help_text=None, label='Id', required=False)\n        addresses = AddressSerializer(many=True, required=False):\n            id = IntegerField(allow_null=False, help_text=None, label='Id', required=False)\n            email_addresss = CharField(allow_null=False, help_text=None, label='Email_addresss', max_length=None, required=True)\n        url = UriField(read_only=True)\n\nThis serializer can handle nested create, update or partial update\noperations.\n\n.. |Build Status| image:: https://travis-ci.org/shosca/django-rest-witchcraft.svg?branch=master\n   :target: https://travis-ci.org/shosca/django-rest-witchcraft\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/shosca/django-rest-witchcraft",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-rest-witchcraft",
    "platform": "",
    "project_url": "https://pypi.org/project/django-rest-witchcraft/",
    "release_url": "https://pypi.org/project/django-rest-witchcraft/0.0.2/",
    "requires_python": "",
    "summary": "SQLAlchemy specific things for django-rest-framework",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d74d2a0f58dc188890ce685067540bab",
          "sha256": "4da918588e0face5146947e9b9c1109534ef95dd856464499d4578b58ad66e6d"
        },
        "downloads": 0,
        "filename": "django_rest_witchcraft-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d74d2a0f58dc188890ce685067540bab",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 12379,
        "upload_time": "2017-06-02T15:28:58",
        "url": "https://files.pythonhosted.org/packages/2c/cf/127e254c180d0b45cb619fc1c47c20824074d5dde77edff7a9d7d00f0bab/django_rest_witchcraft-0.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "175f6d1f0a4d55768277961fe9e66f54",
          "sha256": "50caf5fb552d8f3c099a3c1e05fa5da6974b1a4f1974a2ada2f71f19d5926ff8"
        },
        "downloads": 0,
        "filename": "django-rest-witchcraft-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "175f6d1f0a4d55768277961fe9e66f54",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13803,
        "upload_time": "2017-06-02T15:28:59",
        "url": "https://files.pythonhosted.org/packages/11/91/0a8a91f8a6b2f8181d9486ddc177beb556de8fbd876fe0b8292071180129/django-rest-witchcraft-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fad217394e2fb2b158229c14db884f01",
          "sha256": "3821bba7cc8f60237c069b3954feeba42c3bf6df22491e5e7fab8565518a55c7"
        },
        "downloads": 0,
        "filename": "django_rest_witchcraft-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fad217394e2fb2b158229c14db884f01",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 14181,
        "upload_time": "2017-06-02T18:28:37",
        "url": "https://files.pythonhosted.org/packages/b8/36/5773940da3a0b43a8e31ca5e4f916006ed3ca78de7ee30805290bd503dd8/django_rest_witchcraft-0.0.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c78c678a1e2749880393e0156d7a3e26",
          "sha256": "5c1aaad8b54aa8f19dc4705f3ae9bcddbc0d199e0973b0bdf829c46650c38894"
        },
        "downloads": 0,
        "filename": "django-rest-witchcraft-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c78c678a1e2749880393e0156d7a3e26",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15671,
        "upload_time": "2017-06-02T18:28:38",
        "url": "https://files.pythonhosted.org/packages/16/82/50d33b25c799cdcb7e9024a2a86624ac381ffbe61cca3a439b71516e42d6/django-rest-witchcraft-0.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fad217394e2fb2b158229c14db884f01",
        "sha256": "3821bba7cc8f60237c069b3954feeba42c3bf6df22491e5e7fab8565518a55c7"
      },
      "downloads": 0,
      "filename": "django_rest_witchcraft-0.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fad217394e2fb2b158229c14db884f01",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 14181,
      "upload_time": "2017-06-02T18:28:37",
      "url": "https://files.pythonhosted.org/packages/b8/36/5773940da3a0b43a8e31ca5e4f916006ed3ca78de7ee30805290bd503dd8/django_rest_witchcraft-0.0.2-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "c78c678a1e2749880393e0156d7a3e26",
        "sha256": "5c1aaad8b54aa8f19dc4705f3ae9bcddbc0d199e0973b0bdf829c46650c38894"
      },
      "downloads": 0,
      "filename": "django-rest-witchcraft-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c78c678a1e2749880393e0156d7a3e26",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15671,
      "upload_time": "2017-06-02T18:28:38",
      "url": "https://files.pythonhosted.org/packages/16/82/50d33b25c799cdcb7e9024a2a86624ac381ffbe61cca3a439b71516e42d6/django-rest-witchcraft-0.0.2.tar.gz"
    }
  ]
}