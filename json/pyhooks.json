{
  "info": {
    "author": "Shir0kamii",
    "author_email": "shir0kamii@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "#######\nPyHooks\n#######\n\n.. image:: https://img.shields.io/travis/Shir0kamii/pyhooks/master.svg\n.. image:: https://img.shields.io/coveralls/Shir0kamii/pyhooks/master.svg\n.. image:: https://img.shields.io/codeclimate/github/Shir0kamii/pyhooks.svg\n\nPyHooks is meant to expose method hook for classes\n\n=======\nPurpose\n=======\n\nHave you ever wanted to execute code before or after a method ? PyHooks solve\nthis exact problem taking inspiration from marshmallow's hook system.\n\n============\nInstallation\n============\n\nLike any other published python package, you can install it via `pip` : \n\n.. code-block:: bash\n\n    pip install pyhooks\n\n\n============\nHow to use ?\n============\n\nTo use it, you first need to implement a hooked method. You do this by\ndecorating the method with `@Hook`.\n\nFor example, suppose you have a class that at some moment save your data (such\nas a database). If you want to be able to plug new behavior, your code\nwill look like this:\n\n.. code-block:: python \n\n    from pyhooks import Hook\n\n\n    class DatabaseEntry(object):\n        @Hook\n        def save(self):\n            pass # save implementation here\n\nThanks to the `@Hook` line, you will now be able to add functions that execute\nbefore and after the `save` method using the decorators `@precall_register` \nand `@postcall_register`.\n\nFor instance, if you want to increment a version variable before \nsaving, you could do:\n\n.. code-block:: python\n\n    from pyhooks import precall_register\n\n\n    class VersionnedEntry(DatabaseEntry):\n        @precall_register(\"save\")\n        def increment_version(self):\n            self.version += 1\n\n\nThe decorator directive indicates to your class that `increment_version` should\nbe run before the `save` method that is passed to the decorator as argument.\n\n\n========\nExamples\n========\n\nYou can find some more examples in the `examples/` directory of this\nrepository.\n\n==============\nAdvanced usage\n==============\n\nYou can specialize a register decorator by calling it outside of a decorator\ncontext. The last example would yield:\n\n.. code-block:: python\n\n    from pyhooks import precall_register\n\n    pre_save = precall_register(\"save\")\n\n\n    class VersionnedEntry(DatabaseEntry):\n        @pre_save\n        def increment_version(self):\n            self.version += 1",
    "docs_url": null,
    "download_url": "https://github.com/Shir0kamii/pyhooks/tags",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Shir0kamii/pyhooks",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyhooks",
    "platform": "any",
    "project_url": "https://pypi.org/project/pyhooks/",
    "release_url": "https://pypi.org/project/pyhooks/1.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Python hooks for methods",
    "version": "1.0.1"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "007a43cc280a2a7c81c20d412fdeee87",
          "sha256": "6cc8ec80db5c76bf60013e0f74b99f830734b21340631ef19f03dccc32fafbad"
        },
        "downloads": -1,
        "filename": "pyhooks-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "007a43cc280a2a7c81c20d412fdeee87",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4886,
        "upload_time": "2016-10-29T23:25:00",
        "url": "https://files.pythonhosted.org/packages/8a/aa/25f333f77e9945fffa3a6f5c31a826d9671ac3f6bee3488c709552680f16/pyhooks-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fecab594a62a486ad189fcefb34d7fb8",
          "sha256": "2db2fae9e5b3b17aee18632f94e69cee378db34163a4a9aa1e95c63362acca4d"
        },
        "downloads": -1,
        "filename": "pyhooks-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fecab594a62a486ad189fcefb34d7fb8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4880,
        "upload_time": "2017-11-12T17:23:01",
        "url": "https://files.pythonhosted.org/packages/b6/4d/e8f55d8c0ba4314dc26b4f02b2ac42042690eb704c1ddb0a39f45eedfbc9/pyhooks-1.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fecab594a62a486ad189fcefb34d7fb8",
        "sha256": "2db2fae9e5b3b17aee18632f94e69cee378db34163a4a9aa1e95c63362acca4d"
      },
      "downloads": -1,
      "filename": "pyhooks-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fecab594a62a486ad189fcefb34d7fb8",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4880,
      "upload_time": "2017-11-12T17:23:01",
      "url": "https://files.pythonhosted.org/packages/b6/4d/e8f55d8c0ba4314dc26b4f02b2ac42042690eb704c1ddb0a39f45eedfbc9/pyhooks-1.0.1.tar.gz"
    }
  ]
}