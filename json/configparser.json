{
  "info": {
    "author": "\u0141ukasz Langa",
    "author_email": "lukasz@langa.pl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "============\nconfigparser\n============\n\nThe ancient ``ConfigParser`` module available in the standard library 2.x has\nseen a major update in Python 3.2. This is a backport of those changes so that\nthey can be used directly in Python 2.6 - 3.5.\n\nTo use the ``configparser`` backport instead of the built-in version on both\nPython 2 and Python 3, simply import it explicitly as a backport::\n\n  from backports import configparser\n\nIf you'd like to use the backport on Python 2 and the built-in version on\nPython 3, use that invocation instead::\n\n  import configparser\n\nFor detailed documentation consult the vanilla version at\nhttp://docs.python.org/3/library/configparser.html.\n\nWhy you'll love ``configparser``\n--------------------------------\n\nWhereas almost completely compatible with its older brother, ``configparser``\nsports a bunch of interesting new features:\n\n* full mapping protocol access (`more info\n  <http://docs.python.org/3/library/configparser.html#mapping-protocol-access>`_)::\n\n    >>> parser = ConfigParser()\n    >>> parser.read_string(\"\"\"\n    [DEFAULT]\n    location = upper left\n    visible = yes\n    editable = no\n    color = blue\n\n    [main]\n    title = Main Menu\n    color = green\n\n    [options]\n    title = Options\n    \"\"\")\n    >>> parser['main']['color']\n    'green'\n    >>> parser['main']['editable']\n    'no'\n    >>> section = parser['options']\n    >>> section['title']\n    'Options'\n    >>> section['title'] = 'Options (editable: %(editable)s)'\n    >>> section['title']\n    'Options (editable: no)'\n\n* there's now one default ``ConfigParser`` class, which basically is the old\n  ``SafeConfigParser`` with a bunch of tweaks which make it more predictable for\n  users. Don't need interpolation? Simply use\n  ``ConfigParser(interpolation=None)``, no need to use a distinct\n  ``RawConfigParser`` anymore.\n\n* the parser is highly `customizable upon instantiation\n  <http://docs.python.org/3/library/configparser.html#customizing-parser-behaviour>`__\n  supporting things like changing option delimiters, comment characters, the\n  name of the DEFAULT section, the interpolation syntax, etc.\n\n* you can easily create your own interpolation syntax but there are two powerful\n  implementations built-in (`more info\n  <http://docs.python.org/3/library/configparser.html#interpolation-of-values>`__):\n\n  * the classic ``%(string-like)s`` syntax (called ``BasicInterpolation``)\n\n  * a new ``${buildout:like}`` syntax (called ``ExtendedInterpolation``)\n\n* fallback values may be specified in getters (`more info\n  <http://docs.python.org/3/library/configparser.html#fallback-values>`__)::\n\n    >>> config.get('closet', 'monster',\n    ...            fallback='No such things as monsters')\n    'No such things as monsters'\n\n* ``ConfigParser`` objects can now read data directly `from strings\n  <http://docs.python.org/3/library/configparser.html#configparser.ConfigParser.read_string>`__\n  and `from dictionaries\n  <http://docs.python.org/3/library/configparser.html#configparser.ConfigParser.read_dict>`__.\n  That means importing configuration from JSON or specifying default values for\n  the whole configuration (multiple sections) is now a single line of code. Same\n  goes for copying data from another ``ConfigParser`` instance, thanks to its\n  mapping protocol support.\n\n* many smaller tweaks, updates and fixes\n\nA few words about Unicode\n-------------------------\n\n``configparser`` comes from Python 3 and as such it works well with Unicode.\nThe library is generally cleaned up in terms of internal data storage and\nreading/writing files.  There are a couple of incompatibilities with the old\n``ConfigParser`` due to that. However, the work required to migrate is well\nworth it as it shows the issues that would likely come up during migration of\nyour project to Python 3.\n\nThe design assumes that Unicode strings are used whenever possible [1]_.  That\ngives you the certainty that what's stored in a configuration object is text.\nOnce your configuration is read, the rest of your application doesn't have to\ndeal with encoding issues. All you have is text [2]_. The only two phases when\nyou should explicitly state encoding is when you either read from an external\nsource (e.g. a file) or write back.\n\nVersioning\n----------\n\nThis backport is intended to keep 100% compatibility with the vanilla release in\nPython 3.2+. To help maintaining a version you want and expect, a versioning\nscheme is used where:\n\n* the first two numbers indicate the version of Python 3 from which the\n  backport is done\n\n* a backport release number is provided as the final number (zero-indexed)\n\nFor example, ``3.5.2`` is the **third** backport release of the\n``configparser`` library as seen in Python 3.5.  Note that ``3.5.2`` does\n**NOT** necessarily mean this backport version is based on the standard library\nof Python 3.5.2.\n\nOne exception from the 100% compatibility principle is that bugs fixed before\nreleasing another minor Python 3 bugfix version **will be included** in the\nbackport releases done in the mean time.\n\nMaintenance\n-----------\n\nThis backport is maintained on BitBucket by \u0141ukasz Langa, the current vanilla\n``configparser`` maintainer for CPython:\n\n* `configparser Mercurial repository <https://bitbucket.org/ambv/configparser>`_\n\n* `configparser issue tracker <https://bitbucket.org/ambv/configparser/issues>`_\n\nChange Log\n----------\n\n3.5.0\n~~~~~\n\n* a complete rewrite of the backport; now single codebase working on Python\n  2.6 - 3.5. To use on Python 3 import ``from backports import configparser``\n  instead of the built-in version.\n\n* compatible with 3.5.1\n\n* fixes `BitBucket issue #1\n  <https://bitbucket.org/ambv/configparser/issue/1>`_: versioning non-compliant\n  with PEP 386\n\n* fixes `BitBucket issue #3\n  <https://bitbucket.org/ambv/configparser/issue/3>`_: ``reload(sys);\n  sys.setdefaultencoding('utf8')`` in setup.py\n\n* fixes `BitBucket issue #5\n  <https://bitbucket.org/ambv/configparser/issue/5>`_: Installing the backport\n  on Python 3 breaks virtualenv\n\n* fixes `BitBucket issue #6\n  <https://bitbucket.org/ambv/configparser/issue/6>`_: PyPy compatibility\n\n3.5.0b2\n~~~~~~~\n\n* second beta of 3.5.0, not using any third-party futurization libraries\n\n3.5.0b1\n~~~~~~~\n\n* first beta of 3.5.0, using python-future\n\n* for the full feature list, see `3.5.0`_\n\n3.3.0r2\n~~~~~~~\n\n* updated the fix for `#16820 <http://bugs.python.org/issue16820>`_: parsers\n  now preserve section order when using ``__setitem__`` and ``update``\n\n3.3.0r1\n~~~~~~~\n\n* compatible with 3.3.0 + fixes for `#15803\n  <http://bugs.python.org/issue15803>`_ and `#16820\n  <http://bugs.python.org/issue16820>`_\n\n* fixes `BitBucket issue #4\n  <https://bitbucket.org/ambv/configparser/issue/4>`_: ``read()`` properly\n  treats a bytestring argument as a filename\n\n* `ordereddict <http://pypi.python.org/pypi/ordereddict>`_ dependency required\n  only for Python 2.6\n\n* `unittest2 <http://pypi.python.org/pypi/unittest2>`_ explicit dependency\n  dropped. If you want to test the release, add ``unittest2`` on your own.\n\n3.2.0r3\n~~~~~~~\n\n* proper Python 2.6 support\n\n  * explicitly stated the dependency on `ordereddict\n    <http://pypi.python.org/pypi/ordereddict>`_\n\n  * numbered all formatting braces in strings\n\n* explicitly says that Python 2.5 support won't happen (too much work necessary\n  without abstract base classes, string formatters, the ``io`` library, etc.)\n\n* some healthy advertising in the README\n\n3.2.0r2\n~~~~~~~\n\n* a backport-specific change: for convenience and basic compatibility with the\n  old ConfigParser, bytestrings are now accepted as section names, options and\n  values.  Those strings are still converted to Unicode for internal storage so\n  in any case when such conversion is not possible (using the 'ascii' codec),\n  UnicodeDecodeError is raised.\n\n3.2.0r1\n~~~~~~~\n\n* the first public release compatible with 3.2.0 + fixes for `#11324\n  <http://bugs.python.org/issue11324>`_, `#11670\n  <http://bugs.python.org/issue11670>`_ and `#11858\n  <http://bugs.python.org/issue11858>`_.\n\nConversion Process\n------------------\n\nThis section is technical and should bother you only if you are wondering how\nthis backport is produced. If the implementation details of this backport are\nnot important for you, feel free to ignore the following content.\n\n``configparser`` is converted using `python-future\n<http://python-future.org>`_ and free time.  Because a fully automatic\nconversion was not doable, I took the following branching approach:\n\n* the ``3.x`` branch holds unchanged files synchronized from the upstream\n  CPython repository. The synchronization is currently done by manually copying\n  the required files and stating from which CPython changeset they come from.\n\n* the ``default`` branch holds a version of the ``3.x`` code with some tweaks\n  that make it independent from libraries and constructions unavailable on 2.x.\n  Code on this branch still *must* work on the corresponding Python 3.x but\n  will also work on Python 2.6 and 2.7 (including PyPy).  You can check this\n  running the supplied unit tests with ``tox``.\n\nThe process works like this:\n\n1. I update the ``3.x`` branch with new versions of files.  Note that the\n   actual ``configparser.py`` file is now just a proxy for sources held in\n   ``backports/configparser/__init__.py``.\n\n2. I check for new names in ``__all__`` and update imports in\n   ``configparser.py`` accordingly. I run the tests on Python 3. Commit.\n\n3. I merge the new commit to ``default``. I run ``tox``. Commit.\n\n4. If there are necessary changes, I do them now (on ``default``). Note that\n   the changes should be written in the syntax subset supported by Python\n   2.6.\n\n5. I run ``tox``. If it works, I update the docs and release the new version.\n   Otherwise, I go back to point 3. I might use ``pasteurize`` to suggest me\n   required changes but usually I do them manually to keep resulting code in\n   a nicer form.\n\n\nFootnotes\n---------\n\n.. [1] To somewhat ease migration, passing bytestrings is still supported but\n       they are converted to Unicode for internal storage anyway. This means\n       that for the vast majority of strings used in configuration files, it\n       won't matter if you pass them as bytestrings or Unicode. However, if you\n       pass a bytestring that cannot be converted to Unicode using the naive\n       ASCII codec, a ``UnicodeDecodeError`` will be raised. This is purposeful\n       and helps you manage proper encoding for all content you store in\n       memory, read from various sources and write back.\n\n.. [2] Life gets much easier when you understand that you basically manage\n       **text** in your application.  You don't care about bytes but about\n       letters.  In that regard the concept of content encoding is meaningless.\n       The only time when you deal with raw bytes is when you write the data to\n       a file.  Then you have to specify how your text should be encoded.  On\n       the other end, to get meaningful text from a file, the application\n       reading it has to know which encoding was used during its creation.  But\n       once the bytes are read and properly decoded, all you have is text.  This\n       is especially powerful when you start interacting with multiple data\n       sources.  Even if each of them uses a different encoding, inside your\n       application data is held in abstract text form.  You can program your\n       business logic without worrying about which data came from which source.\n       You can freely exchange the data you store between sources.  Only\n       reading/writing files requires encoding your text to bytes.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://docs.python.org/3/library/configparser.html",
    "keywords": "configparser ini parsing conf cfg configuration file",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "configparser",
    "platform": "any",
    "project_url": "https://pypi.org/project/configparser/",
    "release_url": "https://pypi.org/project/configparser/3.5.0/",
    "requires_python": null,
    "summary": "This library brings the updated configparser from Python 3.5 to Python 2.6-3.5.",
    "version": "3.5.0"
  },
  "releases": {
    "3.2.0r1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "49ff19dd5511b069285a293dd3907902",
          "sha256": "8d2af400e4c4fbc4b8cb1cfb42c465b1f7470327a72a2a2413b6e50e4332b231"
        },
        "downloads": 3270,
        "filename": "configparser-3.2.0r1.tar.gz",
        "has_sig": false,
        "md5_digest": "49ff19dd5511b069285a293dd3907902",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29616,
        "upload_time": "2011-04-29T16:40:49",
        "url": "https://files.pythonhosted.org/packages/da/d3/2c5b86bae7a9b241307fb21196bbaf011df559ee954a2a09dfaa481de14b/configparser-3.2.0r1.tar.gz"
      }
    ],
    "3.2.0r2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ecdc31147658bd9340bcd605c1b7a849",
          "sha256": "fd99dc17193b500b800140c1eb85713e7008243cd6966b7bf52662423a33af34"
        },
        "downloads": 3200,
        "filename": "configparser-3.2.0r2.tar.gz",
        "has_sig": false,
        "md5_digest": "ecdc31147658bd9340bcd605c1b7a849",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32082,
        "upload_time": "2011-05-04T17:36:58",
        "url": "https://files.pythonhosted.org/packages/fa/99/8b0796ab16e92f2a0bb5a7c965c3480637c96ff901af508b490311df8441/configparser-3.2.0r2.tar.gz"
      }
    ],
    "3.2.0r3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8500fd87c61ac0de328fc996fce69b96",
          "sha256": "37feec498c770201ac51112b203338c3342721232fced5f6295399e67f535648"
        },
        "downloads": 15290,
        "filename": "configparser-3.2.0r3.tar.gz",
        "has_sig": false,
        "md5_digest": "8500fd87c61ac0de328fc996fce69b96",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32281,
        "upload_time": "2011-05-10T16:28:50",
        "url": "https://files.pythonhosted.org/packages/73/fd/654fc616e2db08e4b411c89ec0392da43ef5ac27bbee9a510d33d789ed2c/configparser-3.2.0r3.tar.gz"
      }
    ],
    "3.3.0r1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b6c6a9409be55966a4481f3a729070b3",
          "sha256": "78e08cbd08aa09caa5e404cbe890325d93152d1b3c1250f794ac1d50bec5e9d1"
        },
        "downloads": 6692,
        "filename": "configparser-3.3.0r1.tar.gz",
        "has_sig": false,
        "md5_digest": "b6c6a9409be55966a4481f3a729070b3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32819,
        "upload_time": "2012-12-31T15:02:50",
        "url": "https://files.pythonhosted.org/packages/da/be/30c9d70656f5bae43af4344c11fe1ef7138a9340adce0a98763bfd60ae52/configparser-3.3.0r1.tar.gz"
      }
    ],
    "3.3.0r2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dda0e6a43e9d8767b36d10f1e6770f09",
          "sha256": "6a2318590dfc4013fc5bf53c2bec14a8cb455a232295eb282a13f94786c4b0b2"
        },
        "downloads": 565798,
        "filename": "configparser-3.3.0r2.tar.gz",
        "has_sig": false,
        "md5_digest": "dda0e6a43e9d8767b36d10f1e6770f09",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32885,
        "upload_time": "2013-01-02T00:58:20",
        "url": "https://files.pythonhosted.org/packages/cf/59/d42a1e75fd73800f615ef7f63de2975c92b3f7267036f9f99711704525f3/configparser-3.3.0r2.tar.gz"
      }
    ],
    "3.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cfdd915a5b7a6c09917a64a573140538",
          "sha256": "5308b47021bc2340965c371f0f058cc6971a04502638d4244225c49d80db273a"
        },
        "downloads": 1160064,
        "filename": "configparser-3.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cfdd915a5b7a6c09917a64a573140538",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 39573,
        "upload_time": "2016-05-21T08:15:10",
        "url": "https://files.pythonhosted.org/packages/7c/69/c2ce7e91c89dc073eb1aa74c0621c3eefbffe8216b3f9af9d3885265c01c/configparser-3.5.0.tar.gz"
      }
    ],
    "3.5.0b1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d60ca2c714acb4adaf5818c6a1ffd78b",
          "sha256": "a0a2b6f89c167d409dabb52e39206ba77359f92310eed8c4610e3c894937d982"
        },
        "downloads": 7667,
        "filename": "configparser-3.5.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "d60ca2c714acb4adaf5818c6a1ffd78b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 38377,
        "upload_time": "2014-09-05T02:21:21",
        "url": "https://files.pythonhosted.org/packages/39/9d/f4685f636ae5b752dd1a5b9962f5743e621977d3a46d3f6bb35ef9405e7f/configparser-3.5.0b1.tar.gz"
      }
    ],
    "3.5.0b2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ad2a71db8bd9a017ed4735eac7acfa07",
          "sha256": "16810160ff28233efac6c1dc0eea8d4c9b87042f9210541dab4f92a90a7d8597"
        },
        "downloads": 269921,
        "filename": "configparser-3.5.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "ad2a71db8bd9a017ed4735eac7acfa07",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 38523,
        "upload_time": "2014-10-16T05:38:04",
        "url": "https://files.pythonhosted.org/packages/61/a7/48f627413200d5dfd0a5da8b494d34ccac03f8a87a6b2d765b7d81e175e3/configparser-3.5.0b2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "cfdd915a5b7a6c09917a64a573140538",
        "sha256": "5308b47021bc2340965c371f0f058cc6971a04502638d4244225c49d80db273a"
      },
      "downloads": 1160064,
      "filename": "configparser-3.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cfdd915a5b7a6c09917a64a573140538",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 39573,
      "upload_time": "2016-05-21T08:15:10",
      "url": "https://files.pythonhosted.org/packages/7c/69/c2ce7e91c89dc073eb1aa74c0621c3eefbffe8216b3f9af9d3885265c01c/configparser-3.5.0.tar.gz"
    }
  ]
}