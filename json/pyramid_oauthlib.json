{
  "info": {
    "author": "Randall Leeds",
    "author_email": "tilgovi@hypothes.is",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Pyramid",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware"
    ],
    "description": "Pyramid OAuthLib\n================\n\n.. image:: https://travis-ci.org/tilgovi/pyramid-oauthlib.svg?branch=master\n    :target: https://travis-ci.org/tilgovi/pyramid-oauthlib\n.. image:: http://img.shields.io/coveralls/tilgovi/pyramid-oauthlib.svg\n    :target: https://coveralls.io/r/tilgovi/pyramid-oauthlib\n\nPyramid OAuthLib is a library to integrate the excellent `OAuthLib`_ library\neasily into `Pyramid`_ applications. It is designed to ease development of\nOAuth applications, provide smooth migration possibilites to legacy codebases\nusing other authentication or authorization schemes, and configuration patterns\nfor creating pluggable OAuth components for Pyramid.\n\n**NOTICE**: Pyramid OAuthLib is not feature complete! It is missing the hooks\nfor token revocation. While this shouldn't be hard to add, it wasn't a priority\nto get the initial version released.\n\nUsage Overview\n--------------\n\nConfiguration::\n\n    def includeme(config):\n        \"\"\"Integration with OAuthLib is as smooth as possible.\"\"\"\n        from oauthlib.oauth2 import BearerToken, AuthorizationCodeGrant\n\n        # Validator callback functions are passed Pyramid request objects so\n        # you can access your request properties, database sessions, etc.\n        # The request object is populated with accessors for the properties\n        # referred to in the OAuthLib docs and used by its built in types.\n        validator = MyRequestValidator()\n\n        # Register response types to create grants.\n        config.add_response_type('oauthlib.oauth2.AuthorizationCodeGrant',\n                                 name='code',\n                                 request_validator=validator)\n\n        # Register grant types to validate token requests.\n        config.add_grant_type('oauthlib.oauth2.AuthorizationCodeGrant',\n                              name='authorization_code',\n                              request_validator=validator)\n\n        # Register the token types to use at token endpoints.\n        # The second parameter to all registrations may be left out to set it\n        # as default to use when no corresponding request parameter specifies\n        # the grant, response or token type. Be aware that the built in types\n        # will fail if a matching request parameter is missing, though.\n        config.add_token_type('oauthlib.oauth2.BearerToken'\n                              request_validator=validator)\n\n\nToken response::\n\n    def access_token(request):\n        \"\"\"Core functionality is available directly from the request.\n\n        Responses from OAuthLib are wrapped in a response object of type\n        :class:`pyramid.response.Response` so they can be returned directly\n        from views.\n        \"\"\"\n        userid = request.authenticated_userid\n        if userid is not None:\n            credentials = dict(userId=userid)\n        else:\n            credentials = None\n\n        return request.create_token_response(credentials=credentials)\n\nCustom grant type::\n\n    from oauthlib.oauth2 import ClientCredentialsGrant, InvalidClientError\n    from pyramid.authentication import BadCSRFToken\n    from pyramid.session import check_csrf_token\n\n    class SessionGrant(ClientCredentialsGrant):\n\n        \"\"\"A combined authentication and authorization session assertion grant.\n\n        When the Authorization Server and the Token Service are the same server\n        this grant type uses a single assertion, the CSRF token, for client\n        authentication and an authorization grant.[1] This works particularly\n        well with :class:`pyramid.authentication.SessionAuthenticationPolicy`.\n\n        [1] http://tools.ietf.org/html/draft-ietf-oauth-assertions-01#section-3\n        \"\"\"\n\n        def validate_token_request(self, request):\n            try:\n                check_csrf_token(request, token='assertion')\n            except BadCSRFToken:\n                raise InvalidClientError(request=request)\n\n            # An object with the confidential client_id and client_secret.\n            request.client = LOCAL_CLIENT\n\n            if request.client is None:\n                raise InvalidClientError(request=request)\n\n            request.client_id = request.client_id or request.client.client_id\n\n\n    def includeme(config):\n        config.add_grant_type(SessionGrant, 'assertion')\n        \nLicense\n-------\n\nPyramid OAuthLib is released under the `2-Clause BSD License`_, sometimes\nreferred to as the \"Simplified BSD License\" or the \"FreeBSD License\". More\nlicense information can be found in the included ``LICENSE.txt`` file.\n\n.. _OAuthLib: https://github.com/idan/oauthlib\n.. _Pyramid: http://www.pylonsproject.org/\n.. _2-Clause BSD License: http://www.opensource.org/licenses/BSD-2-Clause\n\n\n0.2.0 (2014-11-21)\n==================\n\nFeatures\n--------\n\n- Expose `add_oauth_param` as a directive on `Configurator` instances.\n  OAuthLib code typically assumes these attributes exist on the request\n  instance. Exposing this directive allows custom extensions to be more\n  portable to non-Pyramid code by avoiding the use of `request.params`\n  in favor of the transparent attribute access pattern of OAuthLib\n  request instances.\n\n0.1.1 (2014-08-04)\n==================\n\nFeatures\n--------\n\n- Request methods for easy integration of OAuth flows.\n- Request parameters to integrate with OAuthLib modules.\n- Registration of new grant, response, and token types, (optionally)\n  using dotted name resolution.\n- Introspectable configuration.\n- Full unit test coverage\n\nMissing in this release\n-----------------------\n\n- Support for revocation.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/tilgovi/pyramid_oauthlib",
    "keywords": "web pyramid pylons oauth authentication",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pyramid_oauthlib",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pyramid_oauthlib/",
    "release_url": "https://pypi.org/project/pyramid_oauthlib/0.2.0/",
    "requires_python": null,
    "summary": "Pyramid OAuthLib integration",
    "version": "0.2.0"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d55adbd0759faf016187ccf5a3f9486e",
          "sha256": "9c48d79ce1e603f6762ab3ffa54465fe55a9279e6fb06be3d0fc698e2fca3da6"
        },
        "downloads": 1738,
        "filename": "pyramid_oauthlib-0.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "d55adbd0759faf016187ccf5a3f9486e",
        "packagetype": "bdist_wheel",
        "python_version": "3.4",
        "size": 8682,
        "upload_time": "2014-08-04T22:27:04",
        "url": "https://files.pythonhosted.org/packages/fb/64/bc5e834fdbbe9f89a919dc69b495b6f94e0a2464195f7a09eac511b21229/pyramid_oauthlib-0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "58d4e7a5245b2f8b7ac4e4f83dd179d9",
          "sha256": "d0842d7cf339660bf78d2e6d72de91f2e7bbf41205312e2be05722e32d3eec80"
        },
        "downloads": 1334,
        "filename": "pyramid_oauthlib-0.1.tar.gz",
        "has_sig": true,
        "md5_digest": "58d4e7a5245b2f8b7ac4e4f83dd179d9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7786,
        "upload_time": "2014-08-04T22:26:49",
        "url": "https://files.pythonhosted.org/packages/f6/3b/62fd7078066ca2312f5def358beef6f7fed80e4c30174ed755274c2a074c/pyramid_oauthlib-0.1.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "eea70f5779732a0eca32f8226b30e4ff",
          "sha256": "67272bbeb0c0299b5279fa01e444f0682ebfd69edfca714a3b50114d37124f1c"
        },
        "downloads": 3781,
        "filename": "pyramid_oauthlib-0.1.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "eea70f5779732a0eca32f8226b30e4ff",
        "packagetype": "bdist_wheel",
        "python_version": "3.4",
        "size": 9008,
        "upload_time": "2014-08-04T22:32:03",
        "url": "https://files.pythonhosted.org/packages/65/c2/13f77ba254da7cfe4c2ce75a91cbf2e9dcb687bf1a008675a70112998d36/pyramid_oauthlib-0.1.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c4a74044e6f162d1cd446f16c71e2532",
          "sha256": "8a240d1911dd17ff5e20110a45f77ace340531a9679e71cc86dea3d197651512"
        },
        "downloads": 1377,
        "filename": "pyramid_oauthlib-0.1.1.tar.gz",
        "has_sig": true,
        "md5_digest": "c4a74044e6f162d1cd446f16c71e2532",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7891,
        "upload_time": "2014-08-04T22:31:59",
        "url": "https://files.pythonhosted.org/packages/8d/0d/3718f0ef4ebe0be446a45c57d6e40f88434c0950c765bde6945f95618141/pyramid_oauthlib-0.1.1.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b10558d887aa878d2a2405dec919bcb4",
          "sha256": "8ab72170197feee22ef41a7c679e2ffdfe164a5c9279da53a366e0c5a10a4092"
        },
        "downloads": 4560,
        "filename": "pyramid_oauthlib-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b10558d887aa878d2a2405dec919bcb4",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 9436,
        "upload_time": "2014-11-21T20:02:13",
        "url": "https://files.pythonhosted.org/packages/04/d2/1160cc7c5986cd3372d2b742820b727103e57163b11fb93606859186a183/pyramid_oauthlib-0.2.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "25d811da455797177f2f4d8ee5695953",
          "sha256": "bfee3a14d5ea91d92dd0edc7e3a4df9740c8b8eeaf536a34e1e7bba19cc63e6f"
        },
        "downloads": 1423,
        "filename": "pyramid_oauthlib-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "25d811da455797177f2f4d8ee5695953",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8266,
        "upload_time": "2014-11-21T20:02:09",
        "url": "https://files.pythonhosted.org/packages/03/a5/ede7eaa86e675a16a5f24fd343316ff727ef01cd86832ffbd7a0a3417f90/pyramid_oauthlib-0.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b10558d887aa878d2a2405dec919bcb4",
        "sha256": "8ab72170197feee22ef41a7c679e2ffdfe164a5c9279da53a366e0c5a10a4092"
      },
      "downloads": 4560,
      "filename": "pyramid_oauthlib-0.2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b10558d887aa878d2a2405dec919bcb4",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "size": 9436,
      "upload_time": "2014-11-21T20:02:13",
      "url": "https://files.pythonhosted.org/packages/04/d2/1160cc7c5986cd3372d2b742820b727103e57163b11fb93606859186a183/pyramid_oauthlib-0.2.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "25d811da455797177f2f4d8ee5695953",
        "sha256": "bfee3a14d5ea91d92dd0edc7e3a4df9740c8b8eeaf536a34e1e7bba19cc63e6f"
      },
      "downloads": 1423,
      "filename": "pyramid_oauthlib-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "25d811da455797177f2f4d8ee5695953",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8266,
      "upload_time": "2014-11-21T20:02:09",
      "url": "https://files.pythonhosted.org/packages/03/a5/ede7eaa86e675a16a5f24fd343316ff727ef01cd86832ffbd7a0a3417f90/pyramid_oauthlib-0.2.0.tar.gz"
    }
  ]
}