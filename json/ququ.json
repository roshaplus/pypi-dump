{
  "info": {
    "author": "Gal Matijevic / AIP",
    "author_email": "gmatijevic@aip.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "ququ\n====\nQuery queue for the new Daiquiri. It uses Celery and Redis broker to queue and\nsubmit the queries to the server. It implements a task for submitting as well\nas killing pending or running queries.\n\n\nInstallation\n------------\nCreate the virtual environment:\n\n.. code-block:: bash\n\n    virtualenv venv\n    source venv/bin/activate\n\nand clone this repository and install the requirements:\n\n.. code-block:: bash\n\n    pip install -r requirements.txt\n\nClone the queryparser package and install it:\n\n.. code-block:: bash\n\n    git clone https://github.com/aipescience/queryparser.git\n    cd queryparser\n    python setup.py install\n\n\nUsage\n-----\nFirst, run redis server by executing the script:\n\n.. code-block:: bash\n\n    ./run-redis\n\nRun two separate celery workers (both inside the ququ directory) in two\nseparate terminals:\n\n.. code-block:: bash\n    \n    celery -A tasks worker -c 1 --loglevel=info\n    celery -A tasks worker -c 1 --loglevel=info -Q abort\n    \nEdit app.py to add dbsettings keys and run it:\n\n.. code-block:: bash\n    \n    dbsettings = {'user':user, 'password':password, 'database':database}\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "UNKNOWN",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "ququ",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/ququ/",
    "release_url": "https://pypi.org/project/ququ/0.1/",
    "requires_python": null,
    "summary": "Submit queries to Celery queue",
    "version": "0.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8a87d29851b823724adf64b231b14256",
          "sha256": "ee19056b94b24409ee63dc74d99b16542a25d3410ca6a478bdee35f252a2f0b0"
        },
        "downloads": 13,
        "filename": "ququ-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8a87d29851b823724adf64b231b14256",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1478,
        "upload_time": "2017-03-24T13:42:17",
        "url": "https://files.pythonhosted.org/packages/8d/38/1fae0a4512eb9c88f3232af0c77a9d2ee1b3383543696a6b018dcf6f2f63/ququ-0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "8a87d29851b823724adf64b231b14256",
        "sha256": "ee19056b94b24409ee63dc74d99b16542a25d3410ca6a478bdee35f252a2f0b0"
      },
      "downloads": 13,
      "filename": "ququ-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8a87d29851b823724adf64b231b14256",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 1478,
      "upload_time": "2017-03-24T13:42:17",
      "url": "https://files.pythonhosted.org/packages/8d/38/1fae0a4512eb9c88f3232af0c77a9d2ee1b3383543696a6b018dcf6f2f63/ququ-0.1.tar.gz"
    }
  ]
}