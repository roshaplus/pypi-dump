{
  "info": {
    "author": "Chase Sterling",
    "author_email": "chase.sterling@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "jsonref\r\n=======\r\n\r\n.. image:: https://travis-ci.org/gazpachoking/jsonref.png?branch=master\r\n    :target: https://travis-ci.org/gazpachoking/jsonref\r\n\r\n.. image:: https://coveralls.io/repos/gazpachoking/jsonref/badge.png?branch=master\r\n    :target: https://coveralls.io/r/gazpachoking/jsonref\r\n\r\n\r\n``jsonref`` is a library for automatic dereferencing of\r\n`JSON Reference <http://tools.ietf.org/id/draft-pbryan-zyp-json-ref-03.html>`_\r\nobjects for Python (supporting 2.6+ including Python 3).\r\n\r\nThis library lets you use a data structure with JSON reference objects, as if\r\nthe references had been replaced with the referent data.\r\n\r\n\r\n.. code-block:: python\r\n\r\n    >>> from pprint import pprint\r\n    >>> import jsonref\r\n\r\n    >>> # An example json document\r\n    >>> json_str = \"\"\"{\"real\": [1, 2, 3, 4], \"ref\": {\"$ref\": \"#/real\"}}\"\"\"\r\n    >>> data = jsonref.loads(json_str)\r\n    >>> pprint(data)  # Reference is not evaluated until here\r\n    {'real': [1, 2, 3, 4], 'ref': [1, 2, 3, 4]}\r\n\r\n\r\nFeatures\r\n--------\r\n\r\n* References are evaluated lazily. Nothing is dereferenced until it is used.\r\n\r\n* Recursive references are supported, and create recursive python data\r\n  structures.\r\n\r\n\r\nReferences objects are actually replaced by lazy lookup proxy objects which are\r\nalmost completely transparent.\r\n\r\n.. code-block:: python\r\n\r\n    >>> data = jsonref.loads('{\"real\": [1, 2, 3, 4], \"ref\": {\"$ref\": \"#/real\"}}')\r\n    >>> # You can tell it is a proxy by using the type function\r\n    >>> type(data[\"real\"]), type(data[\"ref\"])\r\n    (<class 'list'>, <class 'jsonref.JsonRef'>)\r\n    >>> # You have direct access to the referent data with the __subject__\r\n    >>> # attribute\r\n    >>> type(data[\"ref\"].__subject__)\r\n    <class 'list'>\r\n    >>> # If you need to get at the reference object\r\n    >>> data[\"ref\"].__reference__\r\n    {'$ref': '#/real'}\r\n    >>> # Other than that you can use the proxy just like the underlying object\r\n    >>> ref = data[\"ref\"]\r\n    >>> isinstance(ref, list)\r\n    True\r\n    >>> data[\"real\"] == ref\r\n    True\r\n    >>> ref.append(5)\r\n    >>> del ref[0]\r\n    >>> # Actions on the reference affect the real data (if it is mutable)\r\n    >>> pprint(data)\r\n    {'real': [2, 3, 4, 5], 'ref': [2, 3, 4, 5]}\r\n\r\nComplete docs can be found at http://jsonref.readthedocs.org/",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/gazpachoking/jsonref",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jsonref",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/jsonref/",
    "release_url": "https://pypi.org/project/jsonref/0.1/",
    "requires_python": null,
    "summary": "An implementation of JSON Reference for Python",
    "version": "0.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a7f511bd8d4b7b696b230aee7fa3c62b",
          "sha256": "56e0ce228798bdecadff865c142741b1ffdd57a5e9c40c40ec2b641d7c430ad3"
        },
        "downloads": 39879,
        "filename": "jsonref-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a7f511bd8d4b7b696b230aee7fa3c62b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12296,
        "upload_time": "2013-05-17T21:25:08",
        "url": "https://files.pythonhosted.org/packages/3a/fe/42aca2f2a2e668375a92fcf74e0977a4943ca508e171c9a311b7d5fb9b07/jsonref-0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a7f511bd8d4b7b696b230aee7fa3c62b",
        "sha256": "56e0ce228798bdecadff865c142741b1ffdd57a5e9c40c40ec2b641d7c430ad3"
      },
      "downloads": 39879,
      "filename": "jsonref-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a7f511bd8d4b7b696b230aee7fa3c62b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 12296,
      "upload_time": "2013-05-17T21:25:08",
      "url": "https://files.pythonhosted.org/packages/3a/fe/42aca2f2a2e668375a92fcf74e0977a4943ca508e171c9a311b7d5fb9b07/jsonref-0.1.tar.gz"
    }
  ]
}