{
  "info": {
    "author": "Kuldeep Singh Dhaka",
    "author_email": "kuldeepdhaka9@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Topic :: Scientific/Engineering"
    ],
    "description": "pyBox0\n======\n\nPython binding for libbox0\n\nDependencies\n============\n\n* cffi\n* numpy\n\nIn C:\n\n* libbox0\n\nInstallation\n============\n\n$ python setup.py build\n$ python setup.py install\n\nConfiguration\n=============\nin local.properties\n\t_binding.py, build_path variable to tell where to look for header and library\n\nUsage\n=====\n\nlots of demo code in test/ and example/\na generic approch to opening device and module and do something with them\n\nimport box0\n\n# open any supported usb device\ndev = box0.usb.open_supported()\n\n# open the dio0 module (assuming the device support it)\n# if you need to iterate over the supported modules using dev\ndio0 = dev.dio(0)\n\n# Prepare for basic mode (basic functionality)\ndio0.basic_prepare()\n\n# set to output mode\ndio0.dir(0, dio0.OUTPUT)\n\n# set value of pin 0\ndio0.value(0, dio0.LOW)\n\n#disable hiz mode of pin 0,\n# note: all pins are in hiz mode right after opening (for protection)\ndio0.hiz(0, dio0.DISABLE)\n\n# start the basic mode\ndio0.basic_start()\n\n# wait\ntry:\n\twhile True:\n\t\ttime.sleep(.5)\nexcept:\n\tpass\n\n# Stop basic mode\ndio0.basic_stop()\n\n# close resources\ndio0.close()\ndev.close()\n\nNote\n====\npyBox0 uses same style as libbox0 and\n much of the documentation of libbox0 is applicable to pyBox0\n\nint b0_<section>_<func>(<section-object>, params....)\n\nin pyBox0:\n\tinstead of int, an exception (ResultException is raised) when int-val < 0\n\tso, now the return value is used for other tasks\n\n\t\"b0\" tag is now replace with \"box0.\" as python have concept of modules\n\n\t<section> is replace with files.\n\t\tfor example: <section> = \"device\" , theirs device.py\n\t\t\tand it contain Device.py\n\n\n\t<func> these are under-scored style name in libbox0\n\t\tin pyBox0, camelcasing is used\n\t\tfor example b0_usb_open_supported() is box0.usb.open_supported()\n\n\tmost of the library assumes numpy array.\n\t\tnumpy is good and you should always use numpy with pyBox0 as\n\t\tit much better in long run\n\nGetting help\n============\n\nget on to #box0 on IRC freenode\nand report bug on https://gitlab.com/madresistor/pyBox0\n\nGetting involved\n================\n\nget on to #box0 on IRC freenode\nand report bug on https://gitlab.com/madresistor/pyBox0\n\nLicence\n=======\n\nGNU/GPLv3 or later (see COPYING)\n\nCredits and references\n======================\n\nhttp://www.madresistor.org/\n\nMaintainer\n==========\n\nKuldeep Singh Dhaka <kuldeepdhaka9@gmail.com>",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://madresistor.org/box0",
    "keywords": "box0 libbox0 daq",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "box0",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/box0/",
    "release_url": "https://pypi.org/project/box0/0.3.0/",
    "requires_python": "",
    "summary": "libbox0 Binding",
    "version": "0.3.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "014660b904fc5e97bf21ab14c14e14ca",
          "sha256": "84d58b913ce5cb52824a24b7a70dbfb4540c46d2ccfdebf1344d05780f1c93ec"
        },
        "downloads": 447,
        "filename": "box0-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "014660b904fc5e97bf21ab14c14e14ca",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 50701,
        "upload_time": "2016-05-06T18:16:18",
        "url": "https://files.pythonhosted.org/packages/f9/e8/a00391319419ed08144affffeac78ff0bf432ea83e02382a3b3d3eb69074/box0-0.1.0.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b5460b69f84f3afaffbfe9c6e30ec30b",
          "sha256": "2b443692316bbe4a93367b394505ca4ba6d1787018354c4bb76ed6e2d430983b"
        },
        "downloads": 114,
        "filename": "box0-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b5460b69f84f3afaffbfe9c6e30ec30b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 52500,
        "upload_time": "2016-09-28T08:49:41",
        "url": "https://files.pythonhosted.org/packages/0c/37/4e6865502b391d46d4d4f91926e819710c91a8e84ca333043fb74f19378a/box0-0.2.0.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "aac7e6d3c641a9bcb7f1e287b5f2f283",
          "sha256": "a8c37aca142ddfee885c3006e33cbb48bf10f91a80a29c4da2474f2c938a9b2d"
        },
        "downloads": 291,
        "filename": "box0-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aac7e6d3c641a9bcb7f1e287b5f2f283",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 43922,
        "upload_time": "2016-12-26T12:33:48",
        "url": "https://files.pythonhosted.org/packages/f5/c8/b3c30a6e4e4606f6e8daf8dbf31dbe2f1534802b64f9ff919d1e8e938e63/box0-0.3.0-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "aac7e6d3c641a9bcb7f1e287b5f2f283",
        "sha256": "a8c37aca142ddfee885c3006e33cbb48bf10f91a80a29c4da2474f2c938a9b2d"
      },
      "downloads": 291,
      "filename": "box0-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aac7e6d3c641a9bcb7f1e287b5f2f283",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 43922,
      "upload_time": "2016-12-26T12:33:48",
      "url": "https://files.pythonhosted.org/packages/f5/c8/b3c30a6e4e4606f6e8daf8dbf31dbe2f1534802b64f9ff919d1e8e938e63/box0-0.3.0-py3-none-any.whl"
    }
  ]
}