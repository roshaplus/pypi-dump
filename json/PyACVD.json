{
  "info": {
    "author": "Alex Kaszynski",
    "author_email": "akascap@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: CEA CNRS Inria Logiciel Libre License, version 2.1 (CeCILL-2.1)",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Information Analysis"
    ],
    "description": "PyACVD\r\n======\r\n\r\nThis module takes a vtk surface mesh (vtkPolyData) surface and returns a\r\nuniformly meshed surface also as a vtkPolyData.  It is based on research by:\r\nS. Valette, and J. M. Chassery in `ACVD <https://github.com/valette/ACVD>`_.\r\n\r\nMuch of this code was translated from the C++ source code available on the\r\nabove website.  Cython was used as much of the remeshing process is of an\r\niterative nature.  This is currently a work in progress and any bugs within\r\nthis module do not reflect the true nature of ACVD developed by S. Valette.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nInstallation is straightforward using pip::\r\n\r\n    $ pip install PyACVD\r\n    \r\nYou can also visit `GitHub <https://github.com/akaszynski/PyACVD>`_ to download the latest source and install it running the following from the source directory::\r\n\r\n    $ pip install .\r\n\r\nYou will need a working copy of VTK.  This can be obtained by either building for the source or installing it using a Python distrubution like `Anaconda <https://www.continuum.io/downloads>`_.  The other dependencies are ``numpy`` and ``cython``.\r\n\r\nTests\r\n-----\r\n\r\nYou can test if your installation works by running the following tests included in the package.\r\n\r\n.. code:: python\r\n\r\n   from PyACVD import Tests\r\n\r\n   # Run Stanford bunny remeshing example\r\n   Tests.Remesh.Bunny()\r\n\r\n   # Run non-uniform sphere remeshing example\r\n   Tests.Remesh.Sphere()\r\n\r\n\r\nExample\r\n-------\r\n\r\nThis example loads a surface mesh, generates 10000 clusters, and creates a uniform mesh.\r\n\r\n.. code:: python\r\n\r\n    from PyACVD import Clustering\r\n    \r\n    # Load mesh from file.\r\n    filename = 'file.stl'\r\n    stlReader = vtk.vtkSTLReader() \r\n    stlReader.SetFileName(filename) \r\n    stlReader.Update()\r\n    mesh = stlReader.GetOutput()\r\n    \r\n    # Create clustering object\r\n    cobj = Clustering.Cluster(target)\r\n\r\n    # Generate clusters\r\n    cobj.GenClusters(10000)\r\n    \r\n    # Generate uniform mesh\r\n    cobj.GenMesh()\r\n\r\n    # Get mesh\r\n    remesh = cobj.ReturnNewMesh()\r\n    \r\n    \r\n    # The clustered original mesh and new mesh can be viewed with:\r\n    cobj.PlotClusters()   # must run cobj.GenClusters first\r\n    cobj.PlotRemesh()     # must run cobj.GenMesh first\r\n\r\n\r\nPython Algorthim Restrictions\r\n-----------------------------\r\n\r\nThe `vtkPolyData` mesh should not contain duplicate points (i.e. adjcent faces\r\nshould share identical points).  If not already done so, clean the mesh\r\nusing `vtk.vtkCleanPolyData`\r\n    \r\nThe number of resulting points is limited by the available memory of the\r\nhost computer.  If approaching the upper limit of your available memory,\r\nreduce the \"subratio\" option when generating the mesh.  As it will be\r\npointed out below, the coarser the mesh, the less accurate the solution.\r\n    \r\nThe input mesh should be composed of one surface.  Unexpected behavior\r\nmay result from a multiple input meshes, though some testing has shown\r\nthat it is stable.\r\n    \r\nHoles in the input mesh may not be filled by the module and will result in\r\na non-manifold output.\r\n\r\n\r\nKnown bugs\r\n----------\r\n\r\n- Cluster sizes are highly dependent on initial cluster placement.\r\n- Clusters one face (or point) large will generate highly non-uniform meshes.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/akaszynski/PyACVD",
    "keywords": "vtk uniform meshing remeshing,acvd",
    "license": "CECILL-B",
    "maintainer": null,
    "maintainer_email": null,
    "name": "PyACVD",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/PyACVD/",
    "release_url": "https://pypi.org/project/PyACVD/0.1.1/",
    "requires_python": null,
    "summary": "Uniformly remeshes vtk surface meshes",
    "version": "0.1.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "72bd932772b44eaa5df19c7d30cd07ac",
          "sha256": "812a0d4bb56f9254723466ab7cb8e640ea0cf45a0a514660843fc1da3d2650fc"
        },
        "downloads": 1310,
        "filename": "PyACVD-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "72bd932772b44eaa5df19c7d30cd07ac",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8190042,
        "upload_time": "2015-09-19T00:02:53",
        "url": "https://files.pythonhosted.org/packages/82/4b/25b2542dadfbfd49d975db2a146c270dab488a7a708b7ca4d55551768801/PyACVD-0.1.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f2f2e5b5dc2576a7fa64cf2a83c7681f",
          "sha256": "f78df2650a594ced259fcdc912cb76775323252d3b9fd3c68b8f8f6a8d4a7eeb"
        },
        "downloads": 0,
        "filename": "PyACVD-0.1.1-cp27-cp27m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "f2f2e5b5dc2576a7fa64cf2a83c7681f",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 3742160,
        "upload_time": "2017-06-09T15:58:23",
        "url": "https://files.pythonhosted.org/packages/fa/7d/19f21661a3622dd33c8d25ea4b4c28061f36faa5fc0a445f70191705b3cb/PyACVD-0.1.1-cp27-cp27m-win_amd64.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a23bdb684a0b5f6068e47e40ae7a6c2a",
          "sha256": "eb5fa202c8a0746c76fa4aa6395ff37ac8bcf174b3aa0e196ccba1cf7c106936"
        },
        "downloads": 0,
        "filename": "PyACVD-0.1.1-cp35-cp35m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "a23bdb684a0b5f6068e47e40ae7a6c2a",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 3735112,
        "upload_time": "2017-06-09T15:57:32",
        "url": "https://files.pythonhosted.org/packages/56/ae/ac7517423bc19773e65997ae8e1e7279277eebaf5020d27c4c4732abbafa/PyACVD-0.1.1-cp35-cp35m-win_amd64.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b98f286258273382a4398a2435ec2bdc",
          "sha256": "2f45e18760ce7b134fe9e0701d6ed564d0667072fff6d6c8ef615f93a90b3e32"
        },
        "downloads": 0,
        "filename": "PyACVD-0.1.1-cp36-cp36m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "b98f286258273382a4398a2435ec2bdc",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 3735117,
        "upload_time": "2017-06-09T15:56:28",
        "url": "https://files.pythonhosted.org/packages/36/53/66121df2f9f3ce378e2dfde2b5847157ea8b5bbf4db7c7dedd94dfd10721/PyACVD-0.1.1-cp36-cp36m-win_amd64.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e20420f62c9837842a1d195c40730a9b",
          "sha256": "bbfa8fee118c4d815f690d6cf932578a32d2dda0c628a728b8342b4b530934e1"
        },
        "downloads": 0,
        "filename": "PyACVD-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e20420f62c9837842a1d195c40730a9b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3663471,
        "upload_time": "2017-06-09T15:56:18",
        "url": "https://files.pythonhosted.org/packages/96/c6/54565e326d2a0ef50ae3f672f22668f2a9e11dda67875383a432b06ba3a3/PyACVD-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f2f2e5b5dc2576a7fa64cf2a83c7681f",
        "sha256": "f78df2650a594ced259fcdc912cb76775323252d3b9fd3c68b8f8f6a8d4a7eeb"
      },
      "downloads": 0,
      "filename": "PyACVD-0.1.1-cp27-cp27m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "f2f2e5b5dc2576a7fa64cf2a83c7681f",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "size": 3742160,
      "upload_time": "2017-06-09T15:58:23",
      "url": "https://files.pythonhosted.org/packages/fa/7d/19f21661a3622dd33c8d25ea4b4c28061f36faa5fc0a445f70191705b3cb/PyACVD-0.1.1-cp27-cp27m-win_amd64.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "a23bdb684a0b5f6068e47e40ae7a6c2a",
        "sha256": "eb5fa202c8a0746c76fa4aa6395ff37ac8bcf174b3aa0e196ccba1cf7c106936"
      },
      "downloads": 0,
      "filename": "PyACVD-0.1.1-cp35-cp35m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "a23bdb684a0b5f6068e47e40ae7a6c2a",
      "packagetype": "bdist_wheel",
      "python_version": "3.5",
      "size": 3735112,
      "upload_time": "2017-06-09T15:57:32",
      "url": "https://files.pythonhosted.org/packages/56/ae/ac7517423bc19773e65997ae8e1e7279277eebaf5020d27c4c4732abbafa/PyACVD-0.1.1-cp35-cp35m-win_amd64.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "b98f286258273382a4398a2435ec2bdc",
        "sha256": "2f45e18760ce7b134fe9e0701d6ed564d0667072fff6d6c8ef615f93a90b3e32"
      },
      "downloads": 0,
      "filename": "PyACVD-0.1.1-cp36-cp36m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "b98f286258273382a4398a2435ec2bdc",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 3735117,
      "upload_time": "2017-06-09T15:56:28",
      "url": "https://files.pythonhosted.org/packages/36/53/66121df2f9f3ce378e2dfde2b5847157ea8b5bbf4db7c7dedd94dfd10721/PyACVD-0.1.1-cp36-cp36m-win_amd64.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "e20420f62c9837842a1d195c40730a9b",
        "sha256": "bbfa8fee118c4d815f690d6cf932578a32d2dda0c628a728b8342b4b530934e1"
      },
      "downloads": 0,
      "filename": "PyACVD-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e20420f62c9837842a1d195c40730a9b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3663471,
      "upload_time": "2017-06-09T15:56:18",
      "url": "https://files.pythonhosted.org/packages/96/c6/54565e326d2a0ef50ae3f672f22668f2a9e11dda67875383a432b06ba3a3/PyACVD-0.1.1.tar.gz"
    }
  ]
}