{
  "info": {
    "author": "Christopher Singley",
    "author_email": "csingley@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Financial and Insurance Industry",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Office/Business",
      "Topic :: Office/Business :: Financial",
      "Topic :: Office/Business :: Financial :: Accounting",
      "Topic :: Office/Business :: Financial :: Investment",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "=========================================================\nPython parser for Interactive Brokers Flex XML statements\n=========================================================\n\n``ibflex`` is a Python library for converting brokerage statement data in\nInteractive Brokers' Flex XML format into standard Python data structures,\nso it can be conveniently processed and analyzed with Python scripts.\n\n*N.B. This module has nothing to do with programmatic trading.\nIt's about accounting.*\n\n``ibflex`` is compatible with Python version 3.4+.  The parser has no\ndependencies beyond the Python standard library (although the optional client\nfor fetching Flex Statements from Interactive Brokers' server does depend\non `requests`_ ).\n\n**This module is alpha software!**  It works and it's useful, but the\nAPI, data structures, etc. are likely to see major changes.  Several XML\nschemata are missing, and a few of the more newly-introduced attributes\nfor the existing schemata.  There are probably bugs.\n\n`Pull requests`_ are welcome.\n\n\nInstallation\n============\n::\n\n    pip install ibflex\n\n\nFlex Parser\n===========\nThe primary facility provided is the ``ibflex.parser`` module, which parses\nFlex-format XML data,  converts the parsed data into normal Python types\n(e.g. datetime.datetime, list), and exposes them as a nested dictionary whose\nstructure corresponds to that of the original Flex statements.\n\nUsage example:\n\n.. code:: python\n\n    In [1]: from ibflex import parser\n\n    In [2]: with open('/home/user/Downloads/2017-08_ibkr.xml', 'r') as xmlfile:\n       ...:     response = parser.parse(xmlfile)\n       ...:\n\n    In [3]: stmt = response['FlexStatements'][0]\n\n    In [4]: trades = stmt['Trades']\n\n    In [5]: {k:v for k,v in trades[-1] if v is not None}\n    Out[5]:\n    {'accountId': 'U1111111',\n     'acctAlias': 'Test Account',\n     'assetCategory': 'STK',\n     'buySell': 'BUY',\n     'changeInPrice': Decimal('0'),\n     'changeInQuantity': Decimal('0'),\n     'closePrice': Decimal('4.66'),\n     'conid': '148510778',\n     'cost': Decimal('369.3162058'),\n     'currency': 'USD',\n     'description': 'HC2 HOLDINGS INC',\n     'exchOrderId': 'N/A',\n     'exchange': 'NYSE',\n     'extExecID': 'L|AAA 9683/08152017|0000100001',\n     'fifoPnlRealized': Decimal('0'),\n     'fxPnl': Decimal('0'),\n     'fxRateToBase': Decimal('1'),\n     'ibCommission': Decimal('-0.5162058'),\n     'ibCommissionCurrency': 'USD',\n     'ibExecID': '0000e352.5992e388.01.01',\n     'ibOrderID': '931273568',\n     'isAPIOrder': False,\n     'levelOfDetail': 'EXECUTION',\n     'mtmPnl': Decimal('4'),\n     'multiplier': Decimal('1'),\n     'netCash': Decimal('-369.3162058'),\n     'notes': ['P'],\n     'openCloseIndicator': 'O',\n     'orderTime': datetime.datetime(2017, 8, 15, 11, 53, 18),\n     'orderType': 'LMT',\n     'origOrderID': '0',\n     'origTradePrice': Decimal('0'),\n     'proceeds': Decimal('-368.8'),\n     'quantity': Decimal('80'),\n     'reportDate': datetime.date(2017, 8, 15),\n     'settleDateTarget': datetime.date(2017, 8, 18),\n     'symbol': 'HCHC',\n     'taxes': Decimal('0'),\n     'tradeDate': datetime.date(2017, 8, 15),\n     'tradeID': '1885957768',\n     'tradeMoney': Decimal('368.8'),\n     'tradePrice': Decimal('4.61'),\n     'tradeTime': datetime.time(11, 53, 18),\n     'transactionID': '7933669307',\n     'transactionType': 'ExchTrade'}\n    \n\nFlex Data Format\n================\nGenerate Flex statements through `Interactive Brokers account management`_ .\nReports > Activities > Flex Queries\n\n``ibflex`` is designed to parse whatever you throw at it without additional\nconfiguration, with one major shortcoming: without providing additional\ninformation out of band, it is difficult to distinguish US-style date\nformats (mm/dd) from European-style date formats (dd/mm).\n\n** DO YOURSELF A FAVOR: CONFIGURE FLEX QUERIES TO USE ISO8601 EXTENDED FORMATS\nFOR DATE (YYYY-mm-dd) AND TIME (HH:MM:SS) **\n\n\nFlex Client\n===========\nOnce you've defined various Flex queries, you can generate an access token\nthat will allow you to generate statements and download them through the web\nAPI, instead of logging in to get them.\n\nReports > Settings > FlexWeb Service\n\nOnce you've got that set up - armed with the token, and the ID# of the desired\nFlex query - ``ibflex.client`` contains the facilities necessary to retrieve\nthem:\n\n.. code:: python\n\n    In [1]: from ibflex import client\n\n    In [2]: token = '111111111111111111111111'\n\n    In [3]: query_id = '111111'\n\n    In [4]: response = client.download(token, query_id)\n\n    In [5]: response[:215]\n    Out[5]: b'<FlexQueryResponse queryName=\"Get Everything\" type=\"AF\">\\n<FlexStatements count=\"1\">\\n<FlexStatement accountId=\"U111111\" fromDate=\"2018-01-01\" toDate=\"2018-01-31\" period=\"LastMonth\" whenGenerated=\"2018-02-01;211353\">\\n'\n\n\nYou can also just execute client.main() as a script:\n.. code:: bash\n\n    $ python client.py -t 111111111111111111111111 -q 111111 > 2018-01_ibkr.xml\n\n\nFinally, setup.py installs a script at ``~/.local/bin/flexget``... cron-tastic!\n\n.. code:: bash\n\n    $ flexget -t 111111111111111111111111 -q 111111 > 2018-01_ibkr.xml\n\n\nResources\n=========\n* Interactive Brokers `Activity Flex Query Reference`_\n* Interactive Brokers `FlexWeb Service Reference`_\n* `capgains` - package that uses ibflex (inter alia) to calculate realized gains\n* `ib-flex-analyzer`_ - Analyze your Interactive Brokers Flex XML reports with pandas\n\n.. _Pull requests: https://github.com/csingley/ibflex/pull/new/master\n.. _requests: https://github.com/requests/requests\n.. _Interactive Brokers account management: https://gdcdyn.interactivebrokers.com/sso/Login \n.. _Activity Flex Query Reference: https://www.interactivebrokers.com/en/software/reportguide/reportguide.htm#reportguide/activity_flex_query_reference.htm\n.. _FlexWeb Service Reference: https://www.interactivebrokers.com/en/software/am/am/reports/flex_web_service_version_3.htm\n.. _capgains: https://github.com/csingley/capgains\n.. _ib-flex-analyzer: https://github.com/wesm/ib-flex-analyzer\n",
    "docs_url": null,
    "download_url": "https://github.com/csingley/ibflex/releases/tag/0.11",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/csingley/ibflex",
    "keywords": "Interactive Brokers",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ibflex",
    "platform": "",
    "project_url": "https://pypi.org/project/ibflex/",
    "release_url": "https://pypi.org/project/ibflex/0.11/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Parse Interactive Brokers Flex XML reports and convert to Python data types",
    "version": "0.11"
  },
  "releases": {
    "0.11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "df137398ad03b0901b85199c0a9f02ba",
          "sha256": "d06720f86355c38a6ca83bbea57a9af68bcd3055a8839e72919650f70c98d43d"
        },
        "downloads": -1,
        "filename": "ibflex-0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "df137398ad03b0901b85199c0a9f02ba",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15771,
        "upload_time": "2018-02-02T13:18:39",
        "url": "https://files.pythonhosted.org/packages/f3/73/7fb2f77abc839e4099ba2bc322fe59a2f2077fb0340d9ea10ffc73117417/ibflex-0.11.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "df137398ad03b0901b85199c0a9f02ba",
        "sha256": "d06720f86355c38a6ca83bbea57a9af68bcd3055a8839e72919650f70c98d43d"
      },
      "downloads": -1,
      "filename": "ibflex-0.11.tar.gz",
      "has_sig": false,
      "md5_digest": "df137398ad03b0901b85199c0a9f02ba",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15771,
      "upload_time": "2018-02-02T13:18:39",
      "url": "https://files.pythonhosted.org/packages/f3/73/7fb2f77abc839e4099ba2bc322fe59a2f2077fb0340d9ea10ffc73117417/ibflex-0.11.tar.gz"
    }
  ]
}