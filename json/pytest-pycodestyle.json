{
  "info": {
    "author": "Holger Krekel and Ronny Pfannschmidt",
    "author_email": "holger.krekel@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4"
    ],
    "description": "This is a quick fork of https://bitbucket.org/pytest-dev/pytest-pep8 to \nmake it use the newest version of pep8, which is now named pycodestyle. \n\nSee:\n- https://github.com/PyCQA/pycodestyle/issues/466\n- https://bitbucket.org/pytest-dev/pytest-pep8/issues/15/pep8-changed-name-to-pycodestyle\n\n\nI also converted to git from git://repo.or.cz/fast-export.git.\nI did not contact the authors. I am not the author of this code, Holger \nKrekel and Ronny Pfannschmidt are. They seemt o have abandoned the code \nand I need it fast. The original MIT License seems to allow this. \n\nI plan to upload it to pypi and provide reasonable maintenance. \nI plan to contact the authors soon.\n\nThe changes are minimal, I will not change word pep8 everywhere, I will\nchange it in enough places to make this work.\n\n---\n\n\n\n.. image:: https://drone.io/bitbucket.org/pytest-dev/pytest-pep8/status.png\n   :target: https://drone.io/bitbucket.org/pytest-dev/pytest-pep8/latest\n.. image:: https://pypip.in/v/pytest-pep8/badge.png\n   :target: https://pypi.python.org/pypi/pytest-pep8\n\npy.test plugin for efficiently checking PEP8 compliance \n=======================================================\n\nUsage\n-----\n\ninstall via::\n\n    pip install pytest-pep8\n\nif you then type::\n\n    py.test --pep8\n    \nevery file ending in ``.py`` will be discovered and pep8-checked, \nstarting from the command line arguments. \n\n.. warning::\n\n    Running pep8 tests on your project is likely to cause a lot of \n    issues.  This plugin allows to configure on a per-project and\n    per-file basis which errors or warnings to care about, see\n    pep8ignore_.  As a preliminary advise, if you have \n    projects where you don't want to care at all about pep8 checks, \n    you can put configure it like this::\n\n        # content of setup.cfg (or pytest.ini)\n        [pytest]\n        pep8ignore = * ALL\n\n\nA little example \n----------------\n\nIf you have a pep8-violating file like this::\n\n    # content of myfile.py\n \n    somefunc( 123,456)\n\nyou can run it with the plugin installed::\n\n    $ py.test --pep8\n    =========================== test session starts ============================\n    platform linux2 -- Python 2.7.6 -- py-1.4.30 -- pytest-2.7.2\n    rootdir: /tmp/doc-exec-2, inifile: \n    plugins: pep8, cache\n    collected 1 items\n    \n    myfile.py F\n    \n    ================================= FAILURES =================================\n    ________________________________ PEP8-check ________________________________\n    /tmp/doc-exec-2/myfile.py:2:10: E201 whitespace after '('\n    somefunc( 123,456)\n             ^\n    /tmp/doc-exec-2/myfile.py:2:14: E231 missing whitespace after ','\n    somefunc( 123,456)\n                 ^\n    \n    ========================= 1 failed in 0.00 seconds =========================\n\nFor the meaning of (E)rror and (W)arning codes, see the error\noutput when running against your files or checkout `pep8.py\n<https://github.com/jcrocholl/pep8/blob/master/pep8.py>`_.\n\nLet's not now fix the PEP8 errors::\n\n    # content of myfile.py\n    somefunc(123, 456)\n\nand run again::\n\n    $ py.test --pep8\n    =========================== test session starts ============================\n    platform linux2 -- Python 2.7.6 -- py-1.4.30 -- pytest-2.7.2\n    rootdir: /tmp/doc-exec-2, inifile: \n    plugins: pep8, cache\n    collected 1 items\n    \n    myfile.py .\n    \n    ========================= 1 passed in 0.00 seconds =========================\n\nthe pep8 check now is passing. Moreover, if\nyou run it once again (and report skip reasons)::\n\n    $ py.test --pep8 -rs \n    =========================== test session starts ============================\n    platform linux2 -- Python 2.7.6 -- py-1.4.30 -- pytest-2.7.2\n    rootdir: /tmp/doc-exec-2, inifile: \n    plugins: pep8, cache\n    collected 1 items\n    \n    myfile.py s\n    ========================= short test summary info ==========================\n    SKIP [1] /home/hpk/p/pytest-pep8/pytest_pep8.py:65: file(s) previously passed PEP8 checks\n    \n    ======================== 1 skipped in 0.00 seconds =========================\n\nyou can see that the pep8 check was skipped because\nthe file has not been modified since it was last checked.\nAs the pep8 plugin uses the \n`pytest-cache plugin <http://pypi.python.org/pypi/pytest-cache>`_\nto implement its caching, you can use its ``--clearcache`` option to \nremove all pytest caches, among them the pep8 related one, which \nwill trigger the pep8 checking code to run once again::\n\n    $ py.test --pep8 --clearcache\n    =========================== test session starts ============================\n    platform linux2 -- Python 2.7.6 -- py-1.4.30 -- pytest-2.7.2\n    rootdir: /tmp/doc-exec-2, inifile: \n    plugins: pep8, cache\n    collected 1 items\n    \n    myfile.py .\n    \n    ========================= 1 passed in 0.00 seconds =========================\n\n.. _pep8ignore:\n\nConfiguring PEP8 options per project and file\n---------------------------------------------\n\nYou may configure PEP8-checking options for your project\nby adding an ``pep8ignore`` entry to your ``setup.cfg``\nor ``setup.cfg`` file like this::\n\n    # content of setup.cfg\n    [pytest]\n    pep8ignore = E201 E231\n\nThis would globally prevent complaints about two whitespace issues.\nRerunning with the above example will now look better::\n\n    $ py.test -q  --pep8\n    .\n    1 passed in 0.00 seconds\n\nIf you have some files where you want to specifically ignore \nsome errors or warnings you can start a pep8ignore line with \na glob-pattern and a space-separated list of codes::\n\n    # content of setup.cfg\n    [pytest]\n    pep8ignore = \n        *.py E201\n        doc/conf.py ALL\n\nSo if you have a conf.py like this::\n\n    # content of doc/conf.py\n\n    func (  [1,2,3]) #this line lots pep8 errors :)\n\nthen running again with the previous example will show a single\nfailure and it will ignore doc/conf.py alltogether::\n\n    $ py.test --pep8 -v # verbose shows what is ignored\n    =========================== test session starts ============================\n    platform linux2 -- Python 2.7.6 -- py-1.4.30 -- pytest-2.7.2 -- /home/hpk/venv/clean/bin/python\n    cachedir: /tmp/doc-exec-2/.cache\n    rootdir: /tmp/doc-exec-2, inifile: setup.cfg\n    plugins: pep8, cache\n    collecting ... collected 1 items\n    \n    myfile.py PASSED\n    \n    ========================= 1 passed in 0.01 seconds =========================\n\nNote that doc/conf.py was not considered or imported.\n\nIf you'ld like to have longer lines than 79 chars (which is the default for the\npep8 checker), you can configure it like this::\n\n    # content of setup.cfg\n    [pytest]\n    pep8maxlinelength = 99\n\nRunning PEP8 checks and no other tests\n--------------------------------------\n\nYou can also restrict your test run to only perform \"pep8\" tests\nand not any other tests by typing::\n\n    py.test --pep8 -m pep8\n\nThis will only run test items with the \"pep8\" marker which this\nplugins adds dynamically.\n\nNotes\n-----\n\nThe repository of this plugin is at http://bitbucket.org/pytest-dev/pytest-pep8\n\nFor more info on py.test see http://pytest.org\n\nThe code is partially based on Ronny Pfannschmidt's pytest-codecheckers plugin.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://bitbucket.org/pytest-dev/pytest-pep8",
    "keywords": "",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-pycodestyle",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pytest-pycodestyle/",
    "release_url": "https://pypi.org/project/pytest-pycodestyle/1.0.6/",
    "requires_python": "",
    "summary": "pytest plugin to check PEP8 requirements",
    "version": "1.0.6"
  },
  "releases": {
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6ab68c0f9515b116484118bba2cf9980",
          "sha256": "3c999d46543eb03d1dc9a43992ea18cb1aa197ecb03b820ac476d324617ed38b"
        },
        "downloads": 0,
        "filename": "pytest_pycodestyle-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ab68c0f9515b116484118bba2cf9980",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 8609,
        "upload_time": "2017-06-12T13:09:59",
        "url": "https://files.pythonhosted.org/packages/c9/05/166fb07412322e351a921c2b14c8b0438e43e2f8e082a1409b3e2b949b96/pytest_pycodestyle-1.0.6-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a7fa36f1f911b2ae9e543ec772d67249",
          "sha256": "e7ffe813fe06a9ba3986b5389dda8ce4fa36a309bf8eb1af1334e071c656a356"
        },
        "downloads": 0,
        "filename": "pytest-pycodestyle-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "a7fa36f1f911b2ae9e543ec772d67249",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7985,
        "upload_time": "2017-06-12T13:10:01",
        "url": "https://files.pythonhosted.org/packages/a3/af/963ceb0befb8a55c9c9a0342c051bc2077ed465c0d5da578110b0efe3cd5/pytest-pycodestyle-1.0.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "6ab68c0f9515b116484118bba2cf9980",
        "sha256": "3c999d46543eb03d1dc9a43992ea18cb1aa197ecb03b820ac476d324617ed38b"
      },
      "downloads": 0,
      "filename": "pytest_pycodestyle-1.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6ab68c0f9515b116484118bba2cf9980",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 8609,
      "upload_time": "2017-06-12T13:09:59",
      "url": "https://files.pythonhosted.org/packages/c9/05/166fb07412322e351a921c2b14c8b0438e43e2f8e082a1409b3e2b949b96/pytest_pycodestyle-1.0.6-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "a7fa36f1f911b2ae9e543ec772d67249",
        "sha256": "e7ffe813fe06a9ba3986b5389dda8ce4fa36a309bf8eb1af1334e071c656a356"
      },
      "downloads": 0,
      "filename": "pytest-pycodestyle-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "a7fa36f1f911b2ae9e543ec772d67249",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7985,
      "upload_time": "2017-06-12T13:10:01",
      "url": "https://files.pythonhosted.org/packages/a3/af/963ceb0befb8a55c9c9a0342c051bc2077ed465c0d5da578110b0efe3cd5/pytest-pycodestyle-1.0.6.tar.gz"
    }
  ]
}