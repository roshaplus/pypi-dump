{
  "info": {
    "author": "Chris Brand, Stephen Leibbrandt",
    "author_email": "support@clickatell.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Clickatell Python Library\r\n================================\r\n\r\nYou can see our other libraries and more documentation at the [Clickatell APIs and Libraries Project](http://clickatell.github.io/).\r\n\r\nThis library supports version **2** of Python.\r\n\r\n------------------------------------\r\n\r\nThis library allows easy access to connecting the [Clickatell's](http://www.clickatell.com) different messenging API's.\r\n\r\n1. Installation\r\n------------------\r\n\r\nYou can install this library via PIP as part of your requirements file.\r\n\r\n```\r\npip install clickatell-platform\r\n```\r\n\r\n[Clickatell Python PyPI](https://pypi.python.org/pypi?name=clickatell&version=0.0.1&:action=display)\r\n\r\n2. Usage\r\n------------------\r\n\r\nThe library currently supports the `Http` and `Rest` protocols.\r\n\r\n### HTTP API\r\n\r\n``` python\r\nfrom clickatell.http import Http\r\n\r\nclickatell = Http(apiKey)\r\nresponse = clickatell.sendMessage(['1111111111'], \"My Message rest\")\r\n\r\nprint(response) #Returns the headers with all the messages\r\n\r\nfor entry in response['messages']:\r\n    print(entry) #Returns all the message details per message\r\n    #print(entry['apiMessageId'])\r\n    #print(entry['to'])\r\n    #print(entry['accepted'])\r\n    #print(entry['error'])\r\n```\r\n\r\n### REST API\r\n\r\n``` python\r\nfrom clickatell.rest import Rest\r\n\r\nclickatell = Rest(apiKey)\r\nresponse = clickatell.sendMessage(['1111111111'], \"My Message rest\")\r\n\r\nprint response #Returns the headers with all the messages\r\n\r\nfor entry in response['messages']:\r\n    print(entry) #Returns all the message details per message\r\n    #print(entry['apiMessageId'])\r\n    #print(entry['to'])\r\n    #print(entry['accepted'])\r\n    #print(entry['error'])\r\n```\r\n\r\n### Sending to multiple numbers\r\n\r\nThe `sendMessage` call `to` parameter can take an array of numbers. If you specify only a single number like `clickatell.sendMessage(1111111111, \"Message\")` the library will automatically convert it to an array for your convenience.\r\n\r\nTo send to multiple numbers, just pass a list of numbers like `clickatell.sendMessage([1111111111,2222222222], \"Message\")`\r\n\r\n3. Supported API calls\r\n------------------\r\n\r\nThe available calls are defined in the `clickatell.Transport` interface.\r\n\r\n``` python\r\n\r\ndef sendMessage(self, to, message, extra={})\r\n\r\n```\r\n\r\n4. Dealing with extra parameters in sendMessage\r\n--------------------------------------\r\n\r\nFor usability purposes the `sendMessage` call focuses on the recipients and the content. In order to specify and of the additional parameters defined\r\nin the [Clickatell document](http://www.clickatell.com), you can use the `extra` parameter and pass them as a dictionary.\r\n\r\n5. Receiving and consuming the status callback\r\n--------------------------------------\r\n\r\nThe following will be returned from the callback in two different sets:\r\n\r\nDELIVERED_TO_GATEWAY :\r\n* integrationName\r\n* messageId\r\n* requestId\r\n* clientMessageId\r\n* to\r\n* from\r\n* statusCode\r\n* status\r\n* statusDescription\r\n* timestamp\r\n\r\nRECEIVED_BY_RECIPIENT :\r\n* integrationName\r\n* messageId\r\n* requestId\r\n* clientMessageId\r\n* to\r\n* from\r\n* statusCode\r\n* status\r\n* statusDescription\r\n* timestamp\r\n\r\nThere is a python test server included in the clickatell folder.\r\nTo run this server, you require the endpoints pip package:\r\n```\r\npip install endpoints\r\n```\r\n\r\nYou can run the server using the following command:\r\n```\r\n endpoints --dir=clickatell/ --prefix=controller --host=<hostname>:<port>\r\n```\r\n\r\nThis server currently prints out to the server console. Replace the print function with your function name to consume the data.\r\nAll data is returned in JSON.\r\n\r\n\r\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/clickatell/clickatell-python",
    "keywords": "clickatell,sms",
    "license": "LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "clickatell-platform",
    "platform": "",
    "project_url": "https://pypi.org/project/clickatell-platform/",
    "release_url": "https://pypi.org/project/clickatell-platform/2.0.0/",
    "requires_dist": [
      "httplib2"
    ],
    "requires_python": "",
    "summary": "Library for interacting with the Clickatell Platform SMS Gateway",
    "version": "2.0.0"
  },
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2e9d8694fcde77a4c104216b6193d0ae",
          "sha256": "94f50e557a129d83539924c69a71955cf9c6c5c37cb6f4ff8f0e31416cd3129e"
        },
        "downloads": -1,
        "filename": "clickatell_platform-2.0.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e9d8694fcde77a4c104216b6193d0ae",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 7544,
        "upload_time": "2017-10-20T08:50:09",
        "url": "https://files.pythonhosted.org/packages/79/3a/13c922d053354cec08fbfe9311f301599fce9787d4ab2f67e61506dc1588/clickatell_platform-2.0.0-py2-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2e9d8694fcde77a4c104216b6193d0ae",
        "sha256": "94f50e557a129d83539924c69a71955cf9c6c5c37cb6f4ff8f0e31416cd3129e"
      },
      "downloads": -1,
      "filename": "clickatell_platform-2.0.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "2e9d8694fcde77a4c104216b6193d0ae",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 7544,
      "upload_time": "2017-10-20T08:50:09",
      "url": "https://files.pythonhosted.org/packages/79/3a/13c922d053354cec08fbfe9311f301599fce9787d4ab2f67e61506dc1588/clickatell_platform-2.0.0-py2-none-any.whl"
    }
  ]
}