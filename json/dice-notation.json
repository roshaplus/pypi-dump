{
  "info": {
    "author": "Bernardo Mart\u00ednez Garrido",
    "author_email": "programming@wandrell.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Games/Entertainment :: Role-Playing"
    ],
    "description": "==============================\nDice Notation Tools for Python\n==============================\n\nThis notation is widely used on tabletop games, such as wargames or RPGs, and\nwas created on the late 70s for Dungeons & Dragons, as a way to allow generating\nrandom values in specific distributions.\n\nWith the pass of years it has evolved, and while it never underwent a formal\nstandarization process a core set of rules is kept among all the variations,\nmostly representing dice in a format such as '1d6', and the use of algebra\noperations like addition and subtraction.\n\nThis project aims to give support to the dice notation, allowing parsing and\noperating with it on any Python application.\n\n.. image:: https://badge.fury.io/py/dice-notation.svg\n    :target: https://pypi.python.org/pypi/dice-notation\n    :alt: Dice Notation Tools for Python Pypi package page\n\n.. image:: https://img.shields.io/badge/docs-release-blue.svg\n    :target: http://docs.wandrell.com/dice-notation-python\n    :alt: Dice Notation Tools for Python latest documentation\n.. image:: https://img.shields.io/badge/docs-develop-blue.svg\n    :target: http://docs.wandrell.com/development/dice-notation-python/\n    :alt: Dice Notation Tools for Python development documentation\n\nFeatures\n--------\n\n- Ply-based parser to generate objects for dice notation\n- Easy-to-use objects to handle the notation, just call the 'roll' method\n- Classes to support plain dice\n\nDocumentation\n-------------\n\nDocumentation sources are included with the project, and used to generate the\ndocumentation sites:\n\n- The `latest docs`_ are always generated for the latest release, kept in the 'master' branch\n- The `development docs`_ are generated from the latest code in the 'develop' branch\n\nYou can also create the documentation from the source files, kept in the 'docs'\nfolder, with the help of `Sphinx`_. For this use the makefile, or the make.bat\nfile, contained on that folder.\n\nPrerequisites\n~~~~~~~~~~~~~\n\nThe project has been tested in the following versions of the interpreter:\n\n- Python 2.7\n- Python 3.3\n- Python 3.4\n- Python 3.5\n- Pypy\n- Pypy 3\n\nAll other dependencies are indicated on the requirements.txt file.\nThe included makefile can install them with the command:\n\n``$ make requirements``\n\nInstalling\n~~~~~~~~~~\n\nThe project is offered as a `Pypi package`_, and using pip is the preferred way\nto install it. For this use the following command;\n\n``$ pip install dice-notation``\n\nIf manual installation is required, the project includes a setup.py file, along\na makefile allowing direct installation of the library, which can be done with\nthe following command:\n\n``$ make install``\n\nUsage\n-----\n\nThe application has been coded in Python, and does not require any particular\nframework.\n\nTo use it just import the parser::\n\n    from dice_notation.parser import DiceParser\n\nAnd then use it to parse a dice notation expression::\n\n    parser = DiceParser()\n    dice = parser.parse('1d6+2')\n\nThe result can be accessed just by calling the 'roll' method as many times as\nneeded, which will generate a new random value each time it is called::\n\n    print(dice.roll())\n    print(dice.roll())\n\nCollaborate\n-----------\n\nAny kind of help with the project will be well received, and there are two main ways to give such help:\n\n- Reporting errors and asking for extensions through the issues management\n- or forking the repository and extending the project\n\nIssues management\n~~~~~~~~~~~~~~~~~\n\nIssues are managed at the GitHub `project issues tracker`_, where any Github\nuser may report bugs or ask for new features.\n\nGetting the code\n~~~~~~~~~~~~~~~~\n\nIf you wish to fork or modify the code, visit the `GitHub project page`_, where\nthe latest versions are always kept. Check the 'master' branch for the latest\nrelease, and the 'develop' for the current, and stable, development version.\n\nLicense\n-------\n\nThe project has been released under the `MIT License`_.\n\n.. _GitHub project page: https://github.com/Bernardo-MG/dice-notation-python\n.. _latest docs: http://docs.wandrell.com/dice-notation-python/\n.. _development docs: http://docs.wandrell.com/development/dice-notation-python/\n.. _Pypi package: https://pypi.python.org/pypi/dice-notation\n.. _MIT License: http://www.opensource.org/licenses/mit-license.php\n.. _project issues tracker: https://github.com/Bernardo-MG/dice-notation-python/issues\n.. _Sphinx: http://sphinx-doc.org/",
    "docs_url": null,
    "download_url": "https://pypi.python.org/pypi/dice-notation",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Bernardo-MG/dice-notation-python",
    "keywords": "dice,dice notation,rpg,parser",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dice-notation",
    "platform": "any",
    "project_url": "https://pypi.org/project/dice-notation/",
    "release_url": "https://pypi.org/project/dice-notation/1.0.0/",
    "requires_python": "",
    "summary": "Dice notation tools",
    "version": "1.0.0"
  },
  "releases": {
    "0.1.0": [],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a435507bb238282b69763d3006e84987",
          "sha256": "dc179dedeec111110656a8cd540d068e160a55068e5dd0f3af4909c23282fb6a"
        },
        "downloads": 336,
        "filename": "dice-notation-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a435507bb238282b69763d3006e84987",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 47487,
        "upload_time": "2016-10-23T13:55:29",
        "url": "https://files.pythonhosted.org/packages/6e/ec/c811e20e791bbbcebe4a793b0a6dfbb7807de65534db323b7e0334e5cc36/dice-notation-1.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a435507bb238282b69763d3006e84987",
        "sha256": "dc179dedeec111110656a8cd540d068e160a55068e5dd0f3af4909c23282fb6a"
      },
      "downloads": 336,
      "filename": "dice-notation-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a435507bb238282b69763d3006e84987",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 47487,
      "upload_time": "2016-10-23T13:55:29",
      "url": "https://files.pythonhosted.org/packages/6e/ec/c811e20e791bbbcebe4a793b0a6dfbb7807de65534db323b7e0334e5cc36/dice-notation-1.0.0.tar.gz"
    }
  ]
}