{
  "info": {
    "author": "Rushy Panchal",
    "author_email": "rushy.panchal@princeton.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "pywsse\n-------\n\n.. image:: https://circleci.com/gh/PrincetonUniversity/pywsse.svg?style=svg\n    :target: https://circleci.com/gh/PrincetonUniversity/pywsse\n\n.. image:: https://badge.fury.io/py/pywsse.svg\n    :target: https://badge.fury.io/py/pywsse\n\nAuthors: Rushy Panchal, Naphat Sanguansin, Adam Libresco, J\u00e9r\u00e9mie Lumbroso.\n\nIntroduction\n============\n**pywsse** is an all-encompassing package to meet various needs for WSSE\nusage - both as an authentication backend (for various frameworks) and as a\nplug-and-play authentication mechanism for clients.\n\nThe motivation for this package came after dealing with various ambiguities\nin the WSSE protocol - some servers require specific digest algorithms and\nbase64-encode different parts of the token. By utilizing a single library, you\ncan be assured that there the token is generated and verified in the same way\nby both client and server.\n\nFrameworks/Package Support\n==========================\n\nThe following backend frameworks are currently supported:\n\n* `Django REST Framework`_\n\nIn addition, the following client packages are supported:\n\n* `requests`_\n* `coreapi`_\n\nDjango REST Framework\n^^^^^^^^^^^^^^^^^^^^^\n\nTo utilize the Django REST Framework plugin, install the *Django* plugin to\n:code:`settings.INSTALLED_APPS`:\n\n.. code:: python\n\n  INSTALLED_APPS = (\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.sites',\n    'django.contrib.staticfiles',\n    'django.contrib.admin',\n\n    'rest_framework',\n\n    'wsse.server.django.wsse',\n    )\n\nIn addition, add the authentication backend\n(:code:`wsse.server.drf.authentication.WSSEAuthentication`)\nto :code:`settings.REST_FRAMEWORK['DEFAULT_AUTHENTICATION_CLASSES']`:\n\n.. code:: python\n\n  REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n      'rest_framework.authentication.SessionAuthentication',\n      'wsse.server.drf.authentication.WSSEAuthentication'\n      ),\n    }\n\nAlternatively, you can set it for a subset of your views.\n\nPlease refer to the `Django REST Framework: Authentication Documentation <http://www.django-rest-framework.org/api-guide/authentication/#setting-the-authentication-scheme>`_ for more information.\n\nFinally, set the :code:`NONCE_STORE` and :code:`NONCE_STORE_ARGS` settings\nfor the **pywsse** package:\n\n.. code:: python\n\n  import wsse\n  wsse.settings.NONCE_STORE = 'wsse.server.django.wsse.store.DjangoNonceStore'\n  wsse.settings.NONCE_STORE_ARGS = []\n\n:note: Make sure to run the migrations after setting the nonce store.\n  Particularly, you must run the migrations for the :code:`wsse` app:\n\n  .. code:: bash\n\n    $ python manage.py migrate wsse\n\nrequests\n^^^^^^^^\n\nThe **requests** plugin is an authentication class that will automatically\nattach the appropriate header to the request.\n\nTo do so, import the :code:`wsse.client.requests.auth.WSSEAuth` class and\nattach it to the request:\n\n.. code:: python\n\n  import requests\n  from wsse.client.requests.auth import WSSEAuth\n\n  response = requests.get('http://localhost:8000/api/',\n    auth = WSSEAuth('username', 'password'))\n\nThe :code:`WSSEAuth` class can be reused as it will generate a new token for\neach request:\n\n.. code:: python\n\n  import requests\n  from wsse.client.requests.auth import WSSEAuth\n\n  auth = WSSEAuth('username', 'password')\n\n  response = requests.get('http://localhost:8000/api/1/', auth = auth)\n  next_response = requests.get('http://localhost:8000/api/2/', auth = auth)\n\ncoreapi\n^^^^^^^\n\nThe **coreapi** plugin is just a pluggable transport that automatically\nattaches the appropriate header before sending the request.\n\nTo make use of this transport, import the\n:code:`wsse.client.coreapi.transport.WSSEAuthenticatedHTTPTransport` class\nand add it to your list of transports to :code:`coreapi.Client`:\n\n.. code:: python\n\n  import coreapi\n  from wsse.client.coreapi.transport import WSSEAuthenticatedHTTPTransport\n\n  wsse_transport = WSSEAuthenticatedHTTPTransport('username', 'password')\n  client = coreapi.Client(transports = [wsse_transport])\n\n  schema = client.get('http://api.example.com')\n\nYou can also pass in any of the arguments or keyword arguments to\n`coreapi.transports.HTTPTransport` *after* the username and password.\n\nDevelopment\n===========\n\nTo run the development version of wsse, clone the repository and install the\ntesting requirements in :code:`requirements.txt`. Then, run the test suite\nusing either :code:`tox` or :code:`detox`:\n\n.. code:: bash\n\n  $ git clone git@github.com:PrincetonUniversity/pywsse.git\n  $ cd pywsse\n  $ virtualenv env\n  $ source env/bin/activate\n  $ pip install -r requirements.txt\n  $ detox\n\n.. note::\n\n  :code:`detox` is a parallel version of :code:`tox`. It only runs with Python\n  2.6-2.7 (but it can and will run tests for Python 3.x versions).\n\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/PrincetonUniversity/pywsse",
    "keywords": "REST,authentication,wsse",
    "license": "LGPLv3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pywsse",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pywsse/",
    "release_url": "https://pypi.org/project/pywsse/0.1.4/",
    "requires_python": null,
    "summary": "WSSE Authentication for various server and client backends.",
    "version": "0.1.4"
  },
  "releases": {
    "0.1": [],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "25b7a350b786cca791af031612199794",
          "sha256": "462ffe6079882e8c0207db32732809dd1a0570c8877d657079312b195b809b26"
        },
        "downloads": 434,
        "filename": "pywsse-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "25b7a350b786cca791af031612199794",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12036,
        "upload_time": "2016-09-02T22:48:11",
        "url": "https://files.pythonhosted.org/packages/ac/fe/3b362b86635bc064cd1879b3aa75e30867fc393d147e80fb3eb9fd18465c/pywsse-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dd06493da0f6ebd5c8ed005f6708f71a",
          "sha256": "4d2cac069f2f0c136777d3f24e6e4214ce4aa055f2eab0738d909f45d95acb01"
        },
        "downloads": 293,
        "filename": "pywsse-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dd06493da0f6ebd5c8ed005f6708f71a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20502,
        "upload_time": "2016-09-03T03:35:24",
        "url": "https://files.pythonhosted.org/packages/8e/b7/8932a792fe6d6c01a0316de307c3a2aa5de6040975b5e06a52cb0ec6f910/pywsse-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "737f795b6459190bfb87cb41c5a07335",
          "sha256": "bc67a9ea99da658c59df9e17cc940c5c96e12cc5eded021fba220046c261d716"
        },
        "downloads": 247,
        "filename": "pywsse-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "737f795b6459190bfb87cb41c5a07335",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22774,
        "upload_time": "2017-01-04T18:04:11",
        "url": "https://files.pythonhosted.org/packages/8c/d2/83faf89d194a5c80a8c5ba261daf5104699175de16eea2980d23a0aa7dbb/pywsse-0.1.3.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9ceecd24851b0538fe49f1ad36ab18cc",
          "sha256": "528a23deacd0bff3c18ea5a17104104b06b67bf6ce78822e53d2747249a24108"
        },
        "downloads": 250,
        "filename": "pywsse-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9ceecd24851b0538fe49f1ad36ab18cc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22723,
        "upload_time": "2017-01-04T20:26:54",
        "url": "https://files.pythonhosted.org/packages/ca/e7/489b9377b51612e07955e184c528c922072db86eb1ceacfa8dc70908778b/pywsse-0.1.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9ceecd24851b0538fe49f1ad36ab18cc",
        "sha256": "528a23deacd0bff3c18ea5a17104104b06b67bf6ce78822e53d2747249a24108"
      },
      "downloads": 250,
      "filename": "pywsse-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "9ceecd24851b0538fe49f1ad36ab18cc",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 22723,
      "upload_time": "2017-01-04T20:26:54",
      "url": "https://files.pythonhosted.org/packages/ca/e7/489b9377b51612e07955e184c528c922072db86eb1ceacfa8dc70908778b/pywsse-0.1.4.tar.gz"
    }
  ]
}