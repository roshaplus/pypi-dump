{
  "info": {
    "author": "Juan Antonio Osorio Robles",
    "author_email": "jaosorior@redhat.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: POSIX :: Linux"
    ],
    "description": "tripleo-ipsec\n=============\n\nAnsible role to configure IPSEC tunnels for TripleO\n\n* This sets up packages and firewall settings.\n\n* Sets the configuration for the IPSEC tunnels in the overcloud nodes.\n\n* Parses the given configuration file and starts the IPSEC tunnels.\n\nIn a final step, when pacemaker is enabled, it enables resource agents for each\nVirtual IP which puts up/tears down IPSEC tunnels depending on the VIP\nlocation.\n\nNote that as of the latest code, this now relies on the usage of TripleO's\ndynamic inventory. This means that it expects the inventory to tell the role\nwhich networks are being set and which IPs do the hosts have. If the relevant\nvariables don't come from the inventory, the role will attempt to use the legacy\nsetup which autodiscovers these. However, this setup is not very reliable if\nyou're using custom networks.\n\nRole Variables\n--------------\n\n* `ipsec_psk`: the Pre-Shared Key to be used for the IPSEC tunnels.\n  Note that is is sensible information and it's recommended that it's stored\n  securely on the host where the playbook runs from, e.g. using Ansible Vault.\n  One can generate this variable with the following command:\n  `openssl rand -base64 48`\n* `ipsec_algorithm`: Defines the encryption algorithm to use in the phase2alg\n  configuration option for the tunnels. Defaults to: `aes_gcm128-null`.\n  The possible values should be checked in libreswan's documentation.\n* `ipsec_configure_vips`: Determines whether or not the role should configure\n  the tunnels for the VIPs. Defaults to: `true`.\n* `ipsec_skip_firewall_rules`: Determines whether the role should skip\n  or not the firewall rules. Defaults to: `false`.\n* `ipsec_uninstall_tunnels`: Determines whether the role should remove the IPSEC\n  tunnels that were previously set. Defaults to: `false`.\n* `ipsec_upgrade_tunnels`: Determines whether the role should upgrade the IPSEC\n  tunnels that were previously set. This means it'll remove all the tunnels\n  created in a previous run and replace them. Defaults to: `false`.\n* `ipsec_setup_resource_agents`: Determines whether the role should create the\n  pacemaker resource agents or not. Defaults to: `true`.\n* `ipsec_force_install_legacy`: Forces the legacy installation. Defaults to: `false`.\n* `overcloud_controller_identifier`: This identifies which nodes are\n  controllers in the cluster and which aren't, and should be part of the\n  hostname of the controller. Defaults to: 'controller'. It's highly\n  recommended that there's a way to explicitly identify the nodes this way.\n  Note that this is only used in the legacy setup.\n\nExample Playbook\n----------------\n\n    - hosts: servers\n      roles:\n         - tripleo-ipsec\n\nEnabling ipsec tunnels in TripleO\n=========================================\n\nThe main playbook to be ran on the overcloud nodes is:\n\n```\ntests/deploy-ipsec-tripleo.yml\n```\n\nWhich will deploy IPSEC on the overcloud nodes for the internal API network.\n\nWe'll use a PSK and an AES128 cipher.\n\nAdd the PSK to an ansible var file:\n\n```\ncat <<EOF > ipsec-psk.yml\nipsec_psk: $(openssl rand -base64 48)\nEOF\n```\n\nEncrypt the file with ansible-vault (note that it'll prompt for a password):\n\n```\nansible-vault encrypt ipsec-psk.yml\n```\n\nHaving done this, now you can run the playbook:\n\n```\nansible-playbook -i /usr/bin/tripleo-ansible-inventory --ask-vault-pass \\\n\t-e @ipsec-psk.yml tests/deploy-ipsec-tripleo.yml\n```\n\nGenerating an inventory\n-----------------------\n\nThe script _/usr/bin/tripleo-ansible-inventory_ generates a dynamic inventory\nwith the nodes in the overcloud. And However it comes with some inconveniences:\n\n* In deployments older than Pike, it might be a bit slow to run. To address\n  this, in Ocata and Pike it's possible to generate a static inventory out of\n  the output of this command:\n\n  ```\n  /usr/bin/tripleo-ansible-inventory  --static-inventory nodes.txt\n  ```\n\n  This will create a called nodes.txt with the static inventory, which we could\n  now use and save some time.\n\n* Newton unfortunately only takes into account computes and controllers with\n  this command. So for this deployment we need to generate an inventory of our\n  own. we can do so with the following command:\n\n  ```\n  cat <<EOF > nodes.txt\n  [undercloud]\n  localhost\n\n  [undercloud:vars]\n  ansible_connection = local\n\n  [overcloud:vars]\n  ansible_ssh_user = heat-admin\n\n  [overcloud]\n  $( openstack server list -c Networks -f value | sed 's/ctlplane=//')\n  EOF\n  ```\n\n  This assumes that you're deploying this playbook from the undercloud itself.\n  Hence the undercloud group containing localhost.\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://git.openstack.org/cgit/openstack/tripleo-ipsec",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tripleo-ipsec",
    "platform": "",
    "project_url": "https://pypi.org/project/tripleo-ipsec/",
    "release_url": "https://pypi.org/project/tripleo-ipsec/8.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Ansible role for managing TripleO's IPSEC tunnels",
    "version": "8.0.1"
  },
  "releases": {
    "0.0.1.dev95": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e3763238c522cf3100b2b225b20c44ff",
          "sha256": "5d568751e4f785ddc8e97339a45e0564fd903cbba3723b470fcd63b1323a13c0"
        },
        "downloads": -1,
        "filename": "tripleo_ipsec-0.0.1.dev95-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3763238c522cf3100b2b225b20c44ff",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 5469,
        "upload_time": "2017-11-27T13:26:15",
        "url": "https://files.pythonhosted.org/packages/cb/d1/5c4fa012aa45ce6b26de8e81f8c675a8a397ac1822c210b7cf4f0378ed2c/tripleo_ipsec-0.0.1.dev95-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5498be8b1a814818ed3dedb9892b3f1d",
          "sha256": "76dfa593d963188b0810230c996bcf3352c4ed8b9f96ec1ab13817b47becf256"
        },
        "downloads": -1,
        "filename": "tripleo-ipsec-0.0.1.dev95.tar.gz",
        "has_sig": false,
        "md5_digest": "5498be8b1a814818ed3dedb9892b3f1d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 27917,
        "upload_time": "2017-11-27T13:26:17",
        "url": "https://files.pythonhosted.org/packages/b8/65/c3cd0b8835615607a022138fc4c584a5edebc3c2b99de0c6cd6175087b11/tripleo-ipsec-0.0.1.dev95.tar.gz"
      }
    ],
    "8.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "15daa6ab2e6dcb435b015283dd255ed3",
          "sha256": "740c6ce1424a6d5723a22580258ea6ec0254e76249510e3256cf7e0299b66030"
        },
        "downloads": -1,
        "filename": "tripleo_ipsec-8.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15daa6ab2e6dcb435b015283dd255ed3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 25183,
        "upload_time": "2018-01-30T23:12:30",
        "url": "https://files.pythonhosted.org/packages/d4/76/5d73ee1ae8b827b3cd253ea79993886f0b086787719fb4fda86aa92fef93/tripleo_ipsec-8.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "32ac59f3bf9af58f2ce5670f8fc6a02e",
          "sha256": "740c38db0e29a90ec1247be56189bbc3dd482e56f3606104c7507eab42877ed4"
        },
        "downloads": -1,
        "filename": "tripleo-ipsec-8.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "32ac59f3bf9af58f2ce5670f8fc6a02e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29403,
        "upload_time": "2018-01-30T23:12:33",
        "url": "https://files.pythonhosted.org/packages/2f/4c/6698dead031e02dea4749cac1fc6a5ed92871d432544c58d1db544672ec2/tripleo-ipsec-8.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "15daa6ab2e6dcb435b015283dd255ed3",
        "sha256": "740c6ce1424a6d5723a22580258ea6ec0254e76249510e3256cf7e0299b66030"
      },
      "downloads": -1,
      "filename": "tripleo_ipsec-8.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "15daa6ab2e6dcb435b015283dd255ed3",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 25183,
      "upload_time": "2018-01-30T23:12:30",
      "url": "https://files.pythonhosted.org/packages/d4/76/5d73ee1ae8b827b3cd253ea79993886f0b086787719fb4fda86aa92fef93/tripleo_ipsec-8.0.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "32ac59f3bf9af58f2ce5670f8fc6a02e",
        "sha256": "740c38db0e29a90ec1247be56189bbc3dd482e56f3606104c7507eab42877ed4"
      },
      "downloads": -1,
      "filename": "tripleo-ipsec-8.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "32ac59f3bf9af58f2ce5670f8fc6a02e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 29403,
      "upload_time": "2018-01-30T23:12:33",
      "url": "https://files.pythonhosted.org/packages/2f/4c/6698dead031e02dea4749cac1fc6a5ed92871d432544c58d1db544672ec2/tripleo-ipsec-8.0.1.tar.gz"
    }
  ]
}