{
  "info": {
    "author": "Ohad Manor",
    "author_email": "omanor@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License"
    ],
    "description": "====================\nMUSiCC Documentation\n====================\n\nMUSiCC is a marker genes based framework for metagenomic normalization and accurate profiling of gene abundances in the microbiome,\ndeveloped and maintained by the Borenstein group at the University of Washington.\n\n============\nAvailability\n============\n\nMUSiCC is available through the following sources:\n\n- As a Python module from GitHub or PyPI (see installation instructions below)\n- As an online tool at: http://elbo.gs.washington.edu/software_musicc.html.\n\n=======\nLicense\n=======\n\nMUSiCC is distributed under a BSD license and can be readily incorporated into custom analysis tools.\n\n=========================\nInstallation Instructions\n=========================\n\nPrerequisites for installing:\n\nIn order for MUSiCC to run successfully, the following Python modules should be pre-installed on your system:\n\n- Numpy >= 1.6.1 (http://www.numpy.org/)\n- Scipy >= 0.9 (http://www.scipy.org/)\n- Scikit-learn >= 0.15.2 (http://scikit-learn.org/stable/)\n- Pandas >= 0.14 (http://pandas.pydata.org/)\n\nIf you have *pip* installed, you can install these packages by running the following command:\n\n``pip install -U numpy scipy scikit-learn pandas``\n\n**Installing MUSiCC:**\n\nTo install MUSiCC, download the package from https://github.com/omanor/MUSiCC/archive/1.0.tar.gz\n\nAfter downloading MUSiCC, you\u2019ll need to unzip the file. If you\u2019ve downloaded the release version, do this with the following command:\n\n``tar -xzf MUSiCC-1.0.tar.gz``\n\nYou\u2019ll then change into the new MUSiCC directory as follows:\n\n``cd MUSiCC-1.0``\n\nand install using the following command:\n\n``python setup.py install``\n\nALTERNATIVELY, you can install MUSiCC directly from PyPI by running:\n\n``pip install -U MUSiCC``\n\nNote for windows users: Under some windows installations, Scipy may fail when importing the Stats module. Workarounds may be found online, such\nas `here <https://code.google.com/p/pythonxy/issues/detail?id=745>`_.\n\n============================\nTesting the software package\n============================\n\nAfter downloading and installing the software, we recommend testing it by running the following command:\n\n``test_musicc.py``\n\nThis will invoke a series of tests. A correct output should end with:\n\n``Ran 3 tests in X.XXXXs``\n\n``OK``\n\n===============================\nMUSiCC API via the command line\n===============================\nThe MUSiCC module handles all calculations internally.\nMUSiCC offers an interface to the MUSiCC functionality via the command line and the run_musicc script.\n\nUsage:\n------\n\n``run_musicc.py input_file [options]``\n\nRequired arguments:\n-------------------\n\n**input_file**\n    Input abundance file to correct\n\nOptional arguments:\n-------------------\n\n**-h, --help**\n    show help message and exit\n\n**-o OUTPUT_FILE, --out OUTPUT_FILE**\n    Output destination for corrected abundance (default: MUSiCC.tab)\n\n**-if {tab,csv}, --input_format {tab,csv}**\n    Option indicating the format of the input file (default: tab)\n\n**-of {tab,csv}, --output_format {tab,csv}**\n    Option indicating the format of the output file (default: tab)\n\n**-n, --normalize**\n    Apply MUSiCC normalization (default: false)\n\n**-c {use_generic, learn_model}, --correct {use_generic,learn_model}**\n    Correct abundance per-sample using MUSiCC (default: false)\n\n**-perf, --performance**\n    Calculate model performance on various gene sets (may add to running time) (default: false)\n\n**-v, --verbose**\n    Increase verbosity of module (default: false)\n\n\n============================\nMUSiCC API via python script\n============================\nMUSiCC can also be used directly inside a python script. Passing variables and flags to the MUSiCC script is done by\ncreating a dictionary and passing it to the function *correct_and_normalize*, as shown below.\n\nUsage:\n------\n\n>>> from musicc.core import correct_and_normalize\n>>> musicc_args = {'input_file': 'test_musicc/lib/python3.3/site-packages/musicc/examples/simulated_ko_relative_abundance.tab', 'output_file': 'MUSiCC.tab','input_format': 'tab', 'output_format': 'tab', 'musicc_inter': True, 'musicc_intra': 'learn_model','compute_scores': True, 'verbose': True}\n>>> correct_and_normalize(musicc_args)\n\nRequired arguments:\n-------------------\n\n**input_file**\n    Input abundance file to correct\n\nOptional arguments:\n-------------------\n\n**output_file**\n    Output destination for corrected abundance (default: MUSiCC.tab)\n\n**input_format {'tab','csv'}**\n    Option indicating the format of the input file (default: 'tab')\n\n**output_format {'tab','csv'}**\n    Option indicating the format of the output file (default: 'tab')\n\n**musicc_inter {True, False}**\n    Apply MUSiCC normalization (default: False)\n\n**musicc_intra {'use_generic', 'learn_model', 'None'}**\n    Correct abundance per-sample using MUSiCC (default: 'None')\n\n**compute_scores {True, False}**\n    Calculate model performance on various gene sets (may add to running time) (default: False)\n\n**verbose {True, False}**\n    Increase verbosity of module (default: False)\n\n========\nExamples\n========\nIn the *musicc/examples* directory, the file *simulated_ko_relative_abundance.tab* contains simulated KO abundance measurements of 20 samples described in the\nMUSiCC manuscript. Using this file as input for MUSiCC results in the following files:\n\n- simulated_ko_MUSiCC_Normalized.tab (only normalization)\n- simulated_ko_MUSiCC_Normalized_Corrected_use_generic.tab (normalize and correct using the generic model learned from HMP)\n- simulated_ko_MUSiCC_Normalized_Corrected_learn_model.tab (normalize and correct learning a new model for each sample)\n\nThe commands used were the following (via command line):\n\n``run_musicc.py musicc/examples/simulated_ko_relative_abundance.tab -n -perf -v -o musicc/examples/simulated_ko_MUSiCC_Normalized.tab``\n\n``run_musicc.py musicc/examples/simulated_ko_relative_abundance.tab -n -c use_generic -perf -v -o musicc/examples/simulated_ko_MUSiCC_Normalized_Corrected_use_generic.tab``\n\n``run_musicc.py musicc/examples/simulated_ko_relative_abundance.tab -n -c learn_model -perf -v -o musicc/examples/simulated_ko_MUSiCC_Normalized_Corrected_learn_model.tab``\n\n==================\nCiting Information\n==================\n\nIf you use the MUSiCC software, please cite the following paper:\n\nMUSiCC: A marker genes based framework for metagenomic normalization and accurate profiling of gene abundances in the microbiome.\n**Ohad Manor and Elhanan Borenstein.** *Genome Biology*\n\n==================\nQuestion forum\n==================\nFor MUSiCC announcements and questions, including notification of new releases, you can visit the `MUSiCC users forum <https://groups.google.com/forum/#!forum/musicc-users>`_.\n\n\n=======\nHISTORY\n=======\n\n=========================\n1.0.2 (17 November, 2016)\n=========================\n* Replaced scipy.stats.nanmedian with numpy.nanmedian since\nscipy.stats.nanmedian was deprecated in scipy 0.15\n\n====================\n1.0.1 (3 June, 2015)\n====================\n* Fixed crashes when running on extremely large files\n\n=====================\n1.0 (5 January, 2015)\n=====================\n* Initial release\n\n\n\n\n=======\nAuthors\n=======\n\nMUSiCC is written and maintained by Ohad Manor and the Borenstein group in University of Washington.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://elbo.gs.washington.edu/software_musicc.html",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "MUSiCC",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/MUSiCC/",
    "release_url": "https://pypi.org/project/MUSiCC/1.0.2/",
    "requires_python": null,
    "summary": "MUSICC: A marker genes based framework for metagenomic normalization and accurate profiling of gene abundances in the microbiome.",
    "version": "1.0.2"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2b03998afa3c40ef05c21adacf176c89",
          "sha256": "72ecebc8197e057fdb40698ca433a13b2b094630dc8cc08810090d64e8d2c0ea"
        },
        "downloads": 1776,
        "filename": "MUSiCC-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2b03998afa3c40ef05c21adacf176c89",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2479841,
        "upload_time": "2015-01-05T20:13:47",
        "url": "https://files.pythonhosted.org/packages/f4/b7/e286a0010a6f5078f1cda767eadc085c5fea2dfb3ce3865ce71ed8c4b93c/MUSiCC-1.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "270b23e925c6673643af8610d63070d4",
          "sha256": "912655c9b728b7ae1d0e6613863058ce2f90ca2b6c2954b41755311542a26cc1"
        },
        "downloads": 2821,
        "filename": "MUSiCC-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "270b23e925c6673643af8610d63070d4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2483689,
        "upload_time": "2015-06-04T21:50:31",
        "url": "https://files.pythonhosted.org/packages/01/18/8ddc017c60c24b0169e412f50089f1a24089677da43d9e401abc5444cc3b/MUSiCC-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e3efcfad1f5c2f695b7276135e697386",
          "sha256": "8e53bb2932e0189ef0d6c26b4e7b31d466f2ecb1fe2609ded8223e1d7704a643"
        },
        "downloads": 82,
        "filename": "MUSiCC-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e3efcfad1f5c2f695b7276135e697386",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2481067,
        "upload_time": "2016-11-17T20:06:46",
        "url": "https://files.pythonhosted.org/packages/72/4a/a2dfa40671629909fb5edd0e5a92084e9ee6a1fc43201411e9699696ed07/MUSiCC-1.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e3efcfad1f5c2f695b7276135e697386",
        "sha256": "8e53bb2932e0189ef0d6c26b4e7b31d466f2ecb1fe2609ded8223e1d7704a643"
      },
      "downloads": 82,
      "filename": "MUSiCC-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "e3efcfad1f5c2f695b7276135e697386",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 2481067,
      "upload_time": "2016-11-17T20:06:46",
      "url": "https://files.pythonhosted.org/packages/72/4a/a2dfa40671629909fb5edd0e5a92084e9ee6a1fc43201411e9699696ed07/MUSiCC-1.0.2.tar.gz"
    }
  ]
}