{
  "info": {
    "author": "Lee A.D. Cooper",
    "author_email": "cooperle@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "This package implements adaptive kernel density estimation algorithms for 1-dimensional \nsignals developed by Hideaki Shimazaki. This enables the generation of smoothed histograms\nthat preserve important density features at multiple scales, as opposed to naive\nsingle-bandwidth kernel density methods that can either over or under smooth density\nestimates. These methods are described in Shimazaki's paper:\n\n H. Shimazaki and S. Shinomoto, \"Kernel Bandwidth Optimization in Spike Rate Estimation,\" \n in Journal of Computational Neuroscience 29(1-2): 171\u2013182, 2010 \n http://dx.doi.org/10.1007/s10827-009-0180-4.\n \nLicense:\nAll software in this package is licensed under the Apache License 2.0.\nSee LICENSE.txt for more details.\n \nAuthors:\nHideaki Shimazaki (shimazaki@jhu.edu) shimazaki on Github\nLee A.D. Cooper (cooperle@gmail.com) cooperlab on GitHub\nSubhasis Ray (ray.subhasis@gmail.com)\n \nThree methods are implemented in this package:\n1. sshist - can be used to determine the optimal number of histogram bins for independent \nidentically distributed samples from an underlying one-dimensional distribution. The\nprincipal here is to minimize the L2 norm of the difference between the histogram and the\nunderlying distribution.\n\n2. sskernel - implements kernel density estimation with a single globally-optimized \nbandwidth.\n\n3. ssvkernel - implements kernel density estimation with a locally variable bandwidth.\n \nDependencies: These functions in this package depend on NumPy for various operations \nincluding fast-fourier transforms and histogram generation.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/cooperlab/AdaptiveKDE",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "adaptivekde",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/adaptivekde/",
    "release_url": "https://pypi.org/project/adaptivekde/1.0.0/",
    "requires_python": null,
    "summary": "Optimal fixed or locally adaptive kernel density estimation",
    "version": "1.0.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "61abc0196f3618f64242c4a827b46953",
          "sha256": "765d7ee6b0ea1ba3cf33fb4664da3c4ace789530bb39d9c29414c8ce4d62d2d2"
        },
        "downloads": 538,
        "filename": "adaptivekde-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "61abc0196f3618f64242c4a827b46953",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6403,
        "upload_time": "2016-05-06T03:43:15",
        "url": "https://files.pythonhosted.org/packages/6c/61/162533d11cc68973a5c2163b04d67e5ca5128d8561ead1646890f18e97e0/adaptivekde-1.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "61abc0196f3618f64242c4a827b46953",
        "sha256": "765d7ee6b0ea1ba3cf33fb4664da3c4ace789530bb39d9c29414c8ce4d62d2d2"
      },
      "downloads": 538,
      "filename": "adaptivekde-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "61abc0196f3618f64242c4a827b46953",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6403,
      "upload_time": "2016-05-06T03:43:15",
      "url": "https://files.pythonhosted.org/packages/6c/61/162533d11cc68973a5c2163b04d67e5ca5128d8561ead1646890f18e97e0/adaptivekde-1.0.0.tar.gz"
    }
  ]
}