{
  "info": {
    "author": "Mohamed Aturban",
    "author_email": "maturban@cs.odu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "Archive Now (archivenow)\n=============================\nA Tool To Push Web Resources Into Web Archives\n----------------------------------------------\n\nArchive Now (**archivenow**) currently is configured to push resources into four public web archives. You can easily add more archives by writing a new archive handler (e.g., ia_handler.py) and place it inside the folder \"handlers\".\n\nAs explained below, this library can be used through:\n\n- CLI\n\n- A Web Service\n\n- A Docker Container\n\n- Python\n\n\nInstalling\n----------\nThe latest release of **archivenow** can be installed using pip:\n\n.. code-block:: bash\n\n      $ pip install archivenow\n\nThe latest development version containing changes not yet released can be installed from source:\n\n.. code-block:: bash\n      \n      $ git clone git@github.com:maturban/archivenow.git\n      $ cd archivenow\n      $ pip install -r requirements.txt\n      $ pip install ./\n\nCLI USAGE\n---------\nUsage of sub-commands in **archivenow** can be accessed through providing the `-h` or `--help` flag, like any of the below.\n\n.. code-block:: bash\n\n      $ archivenow -h\n      usage: archivenow.py [-h] [--cc] [--cc_api_key [CC_API_KEY]] [--ia] [--is]\n                     [--wc] [-v] [--all] [--server] [--host [HOST]]\n                     [--port [PORT]]\n                     [URI]\n\n      positional arguments:\n        URI                   URI of a web resource\n\n      optional arguments:\n        -h, --help            show this help message and exit\n        --cc                  Use The Perma.cc Archive\n        --cc_api_key [CC_API_KEY]\n                              An API KEY is required by The Perma.cc Archive\n        --ia                  Use The Internet Archive\n        --is                  Use The Archive.is\n        --wc                  Use The WebCite Archive\n        -v, --version         Report the version of archivenow\n        --all                 Use all possible archives\n        --server              Run archiveNow as a Web Service\n        --host [HOST]         A server address\n        --port [PORT]         A port number to run a Web Service\n  \nExamples\n--------\n\n- **Example 1**\n\nTo save the web page (www.foxnews.com) in the Internet Archive:\n\n.. code-block:: bash\n\n      $ archivenow --ia www.foxnews.com\n      ['https://web.archive.org/web/20170209135625/http://www.foxnews.com']\n\n- **Example 2**\n\nBy default, the web page (e.g., www.foxnews.com) will be saved in the Internet Archive if no optional arguments provided:\n\n.. code-block:: bash\n\n      $ archivenow www.foxnews.com\n      https://web.archive.org/web/20170215164835/http://www.foxnews.com\n\n- **Example 3**\n\nTo save the web page (www.foxnews.com) in the Internet Archive (archive.org) and The Archive.is:\n\n.. code-block:: bash\n      \n      $ archivenow --ia --is www.foxnews.com\n      https://web.archive.org/web/20170209140345/http://www.foxnews.com\n      http://archive.is/fPVyc\n\n\n- **Example 4**\n\nTo save the web page (www.foxnews.com) in all configured web archives:\n\n.. code-block:: bash\n      \n      $ archivenow --all www.foxnews.com --cc_api_key $Your-Perma-CC-API-Key\n      https://perma.cc/8YYC-C7RM\n      https://web.archive.org/web/20170220074919/http://www.foxnews.com\n      http://archive.is/jy8B0\n      http://www.webcitation.org/6o9IKD9FP\n\nServer\n------\n\nYou can run **archivenow** as a web service. You can specify the server address and/or the port number (e.g., --host localhost  --port 11111)\n\n.. code-block:: bash\n      \n      $ archivenow --server\n \n         2017-02-09 14:20:33\n         Running on http://127.0.0.1:12345\n         (Press CTRL+C to quit) \n\n- **Example 5**\n\nTo save the web page (www.foxnews.com) in The Internet Archive through the web service:\n\n.. code-block:: bash\n      \n      $ curl -i http://127.0.0.1:12345/ia/www.foxnews.com\n      \n           HTTP/1.0 200 OK\n           Content-Type: application/json\n           Content-Length: 95\n           Server: Werkzeug/0.11.15 Python/2.7.10\n           Date: Thu, 09 Feb 2017 14:29:23 GMT\n\n          {\n            \"results\": [\n              \"https://web.archive.org/web/20170209142922/http://www.foxnews.com\"\n            ]\n          }\n      \n- **Example 6**\n\nTo save the web page (www.foxnews.com) in all configured archives though the web service:\n\n.. code-block:: bash\n      \n      $ curl -i http://127.0.0.1:12345/all/www.foxnews.com\n\n          HTTP/1.0 200 OK\n          Content-Type: application/json\n          Content-Length: 172\n          Server: Werkzeug/0.11.15 Python/2.7.10\n          Date: Thu, 09 Feb 2017 14:33:47 GMT\n\n          {\n            \"results\": [\n              \"https://web.archive.org/web/20170209143327/http://www.foxnews.com\", \n              \"http://archive.is/H2Yfg\", \n              \"http://www.webcitation.org/6o9Jubykh\",\n              \"Error (The Perma.cc Archive): An API KEY is required\"\n            ]\n          }   \n\n- **Example 7**\n\nBecause an API Key is required by Perma.cc, the HTTP request should be as following:\n        \n.. code-block:: bash\n      \n      $ curl -i http://127.0.0.1:12345/all/www.foxnews.com?cc_api_key=$Your-Perma-CC-API-Key\n\nOr use only the Perma.cc:\n\n.. code-block:: bash\n\n      $ curl -i http://127.0.0.1:12345/cc/www.foxnews.com?cc_api_key=$Your-Perma-CC-API-Key\n\nRunning as a Docker Container\n-----------------------------\n\n.. code-block:: bash\n\n    $ docker pull maturban/archivenow\n\nDifferent ways to run archivenow    \n\n.. code-block:: bash\n\n    $ docker run -it --rm maturban/archivenow -h\n    $ docker run -p 80:12345 -it --rm maturban/archivenow --server\n    $ docker run -p 80:11111 -it --rm maturban/archivenow --server --port 11111\n    $ docker run -it --rm maturban/archivenow --ia http://www.cnn.com\n    \n\nPython Usage\n------------\n\n.. code-block:: bash\n   \n    >>> from archivenow import archivenow\n    \n- **Example 8**\n\nTo save the web page (www.foxnews.com) in The WebCite Archive:\n\n.. code-block:: bash\n\n      >>> archivenow.push(\"www.foxnews.com\",\"wc\")\n      ['http://www.webcitation.org/6o9LTiDz3']\n\n- **Example 9**\n\nTo save the web page (www.foxnews.com) in all configured archives:\n\n.. code-block:: bash\n\n      >>> archivenow.push(\"www.foxnews.com\",\"all\")\n      ['https://web.archive.org/web/20170209145930/http://www.foxnews.com','http://archive.is/oAjuM','http://www.webcitation.org/6o9LcQoVV','Error (The Perma.cc Archive): An API KEY is required]\n\n- **Example 10**\n\nTo save the web page (www.foxnews.com) in The Perma.cc:\n\n.. code-block:: bash\n\n      >>> archivenow.push(\"www.foxnews.com\",\"cc\",\"cc_api_key=$YOUR-Perma-cc-API-KEY\")\n      ['https://perma.cc/8YYC-C7RM']\n      \n- **Example 11**\n\nTo start the server from Python do the following. The server/port number can be passed (e.g, start(port=1111, host='localhost')):\n\n.. code-block:: bash\n\n      >>> archivenow.start()\n      \n          2017-02-09 15:02:37\n          Running on http://127.0.0.1:12345\n          (Press CTRL+C to quit)\n\n\nConfiguring a new archive or removing existing one\n--------------------------------------------------\nAdding a new archive is as simple as adding a handler file in the folder \"handlers\". For example, if I want to add a new archive named \"My Archive\", I would create a file \"ma_handler.py\" and store it in the folder \"handlers\". The \"ma\" will be the archive identifier, so to push a web page (e.g., www.cnn.com) to this archive through the Python code, I should write \">>>archivenow.push(\"www.cnn.com\",\"ma\")\". In the file \"ma_handler.py\", the name of the class must be \"MA_handler\". This class must have at least one function called \"push\" which has one argument. It might be helpful to see how other \"\\*_handler.py\" organized.\n\nRemoving an archive can be done by one of the following options:\n\n- Removing the archive handler file from the folder \"handlers\"\n\n- Rename the archive handler file to other name that does not end with \"_handler.py\"\n\n- Simply, inside the handler file, set the variable \"enabled\" to \"False\"\n\n\nNotes\n-----\nThe Internet Archive (IA) sets a time gap of at least two minutes between creating different copies of the 'same' resource. For example, if you send a request to the IA to capture (www.cnn.com) at 10:00pm. The IA will create a new copy (lets call it C1) of this CNN homepage. The IA will return (C1) for all requests to archive the CNN homepage recived before 10:02pm. The Archive.is sets this time gap to five minutes.  \n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/maturban/archivenow",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "archivenow",
    "platform": "",
    "project_url": "https://pypi.org/project/archivenow/",
    "release_url": "https://pypi.org/project/archivenow/2017.3.1.4.15.20/",
    "requires_python": "",
    "summary": "A Python library to push web resources into public web archives",
    "version": "2017.3.1.4.15.20"
  },
  "releases": {
    "2017.2.20.22.48.41": [
      {
        "comment_text": "",
        "digests": {
          "md5": "339855b0a4bccb16839b1e406a1af732",
          "sha256": "7208b75623589444fdc2a215073991511cef614d567c9f56094d18690f345851"
        },
        "downloads": 15,
        "filename": "archivenow-2017.2.20.22.48.41.tar.gz",
        "has_sig": false,
        "md5_digest": "339855b0a4bccb16839b1e406a1af732",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8423,
        "upload_time": "2017-02-21T03:51:09",
        "url": "https://files.pythonhosted.org/packages/e5/76/efb4621597b686e1d0b9bf3935d87f0e7ade242dcbdf62fd0baf52542290/archivenow-2017.2.20.22.48.41.tar.gz"
      }
    ],
    "2017.2.20.3.40.24": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4bf6673821d8d6a4b5bdd52ca506c641",
          "sha256": "98e0c829365a84172c6dcfe78d93f76b482cc78f7c2494486acfb14b66cc4463"
        },
        "downloads": 13,
        "filename": "archivenow-2017.2.20.3.40.24.tar.gz",
        "has_sig": false,
        "md5_digest": "4bf6673821d8d6a4b5bdd52ca506c641",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8391,
        "upload_time": "2017-02-20T08:41:18",
        "url": "https://files.pythonhosted.org/packages/23/fd/4cd3e0cf1f3f71fa4c9f69f0ec019f43d11ba3391759db619392d9a0ee25/archivenow-2017.2.20.3.40.24.tar.gz"
      }
    ],
    "2017.2.20.6.8.18": [
      {
        "comment_text": "",
        "digests": {
          "md5": "96f80cca00ab6f55f019225ef1fdc8b8",
          "sha256": "c90bf9bc44a06aea6ce549fd6e4fb9e49bdac90cdbb708deec6a54197ef0db82"
        },
        "downloads": 15,
        "filename": "archivenow-2017.2.20.6.8.18.tar.gz",
        "has_sig": false,
        "md5_digest": "96f80cca00ab6f55f019225ef1fdc8b8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8395,
        "upload_time": "2017-02-20T11:11:26",
        "url": "https://files.pythonhosted.org/packages/cd/d2/95892fe283b15559763464d3bb4edf8d099d7640880a52aa858625f7e477/archivenow-2017.2.20.6.8.18.tar.gz"
      }
    ],
    "2017.3.1.4.15.20": [
      {
        "comment_text": "",
        "digests": {
          "md5": "11769467eb41cc5a1d443a8c31330f4f",
          "sha256": "aa8157738573b0610d9ae365ce32d32da23a3b5603d530b1ace66ba810121956"
        },
        "downloads": 18,
        "filename": "archivenow-2017.3.1.4.15.20.tar.gz",
        "has_sig": false,
        "md5_digest": "11769467eb41cc5a1d443a8c31330f4f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8396,
        "upload_time": "2017-03-01T21:19:23",
        "url": "https://files.pythonhosted.org/packages/51/94/8b882b01d48005b9e084d41ea26901f4b2b884e9813f828d06f644c45669/archivenow-2017.3.1.4.15.20.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "11769467eb41cc5a1d443a8c31330f4f",
        "sha256": "aa8157738573b0610d9ae365ce32d32da23a3b5603d530b1ace66ba810121956"
      },
      "downloads": 18,
      "filename": "archivenow-2017.3.1.4.15.20.tar.gz",
      "has_sig": false,
      "md5_digest": "11769467eb41cc5a1d443a8c31330f4f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8396,
      "upload_time": "2017-03-01T21:19:23",
      "url": "https://files.pythonhosted.org/packages/51/94/8b882b01d48005b9e084d41ea26901f4b2b884e9813f828d06f644c45669/archivenow-2017.3.1.4.15.20.tar.gz"
    }
  ]
}