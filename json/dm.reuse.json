{
  "info": {
    "author": "Dieter Maurer",
    "author_email": "dieter@handshake.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development",
      "Topic :: Utilities"
    ],
    "description": "dm.reuse\n========\n\nUtilities to reuse (slightly modified) objects in new contexts.\n\nCurrently, there is a single utility: `rebindFunction`.\nIt allows to reuse the code of a function while changing name, globals,\ndefault arguments, properties and/or names used.\n\nLets look at a trivial example. Function `f` accesses global variables\n`i` and `j`.\n\nExamples\n--------\n\n>>> i = 1; j = 2\n>>> def f(): return i, j\n...\n>>> f()\n(1, 2)\n\nWe want to derive a new function `g` which binds `i` to `-1`:\n\n>>> from dm.reuse import rebindFunction\n>>> g=rebindFunction(f, i=-1)\n>>> g()\n(-1, 2)\n\nWe can specify the rebinds not only via keyword arguments but via\na dictionary as well:\n\n>>> g=rebindFunction(f, dict(i=-1, j=-2))\n>>> g()\n(-1, -2)\n\nUsually, the function name is taken over from the original function,\nbut it can be changed:\n\n>>> f.func_name\n'f'\n>>> g.func_name\n'f'\n>>> g=rebindFunction(f, dict(i=-1, j=-2), funcName='g')\n>>> g.func_name\n'g'\n>>> g()\n(-1, -2)\n\nThe originals function docstring is taken over, too -- unless\noverridden:\n\n>>> f.func_doc = 'some documentation'\n>>> g=rebindFunction(f, dict(i=-1, j=-2))\n>>> f.__doc__ is g.__doc__\nTrue\n>>> g=rebindFunction(f, dict(i=-1, j=-2), funcDoc='some new documentation')\n>>> g.__doc__\n'some new documentation'\n\nDefault values for arguments can be added, removed or changed.\nUnknown arguments are recognized:\n\n>>> def f(a1, a2=2): return a1, a2\n...\n>>> g=rebindFunction(f, argRebindDir=dict(a1=1))\n>>> g()\n(1, 2)\n\n>>> from dm.reuse import REQUIRED\n>>> g=rebindFunction(f, argRebindDir=dict(a2=REQUIRED))\n>>> g(1)\nTraceback (most recent call last):\n  ...\nTypeError: f() takes exactly 2 arguments (1 given)\n\n>>> g=rebindFunction(f, argRebindDir=dict(a2=10))\n>>> g(1)\n(1, 10)\n\n>>> g=rebindFunction(f, argRebindDir=dict(a3=10))\nTraceback (most recent call last):\n  ...\nValueError: unknown arguments in `argRebindDir`: a3\n\nFinally, function properties can be rebound with `propRebindDir`.\nWe are careful, to give the new function a separate new property dict.\n\n>>> f.prop='p'\n>>> g=rebindFunction(f)\n>>> g.prop\n'p'\n>>> g=rebindFunction(f, propRebindDir=dict(prop='P', prop2='p2'))\n>>> g.prop, g.prop2\n('P', 'p2')\n>>> f.__dict__\n{'prop': 'p'}\n\nOccationally, functions use local imports which are not adequate\nin the new context. In order to provide control over them, names\nused inside the function code can be changed.\n\n>>> def f(a): import codecs; return codecs, a\n...\n>>> g=rebindFunction(f, nameRebindDir=dict(codecs='urllib'))\n>>> r = g(1)\n>>> r[0].__name__, r[1]\n('urllib', 1)\n\n\nHistory\n-------\n\n1.1\n  ``nameRebindDir`` support added",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "UNKNOWN",
    "keywords": "reuse",
    "license": "BSD (see \"dm/reuse/LICENSE.txt\", for details)",
    "maintainer": null,
    "maintainer_email": null,
    "name": "dm.reuse",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/dm.reuse/",
    "release_url": "https://pypi.org/project/dm.reuse/1.1/",
    "requires_python": null,
    "summary": "Support for object reuse with slight modifications",
    "version": "1.1"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d3f994b1f08c1c153ed59bc6ef31da4b",
          "sha256": "b9fca6adf30ee11ef2e03203f26fa35a41a868c9c5850bc0bcd984100d69aaa7"
        },
        "downloads": 4763,
        "filename": "dm.reuse-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d3f994b1f08c1c153ed59bc6ef31da4b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4386,
        "upload_time": "2007-10-03T11:34:19",
        "url": "https://files.pythonhosted.org/packages/df/84/b3a7882368598837cfeaa3fef6f3a17e09e4ee04179ed5a04656edc03c28/dm.reuse-1.0.tar.gz"
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e7672fb295e434265f245d5e5b9aab49",
          "sha256": "23144495720bc08c6c408af25403601226905e33ea099294090a05865082a8c2"
        },
        "downloads": 4921,
        "filename": "dm.reuse-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e7672fb295e434265f245d5e5b9aab49",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4937,
        "upload_time": "2010-10-19T10:08:59",
        "url": "https://files.pythonhosted.org/packages/a1/4d/8a7358e154343614202f7f908d75a49b02a8f10ab39e8fe2d9b641afc4fc/dm.reuse-1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e7672fb295e434265f245d5e5b9aab49",
        "sha256": "23144495720bc08c6c408af25403601226905e33ea099294090a05865082a8c2"
      },
      "downloads": 4921,
      "filename": "dm.reuse-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e7672fb295e434265f245d5e5b9aab49",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4937,
      "upload_time": "2010-10-19T10:08:59",
      "url": "https://files.pythonhosted.org/packages/a1/4d/8a7358e154343614202f7f908d75a49b02a8f10ab39e8fe2d9b641afc4fc/dm.reuse-1.1.tar.gz"
    }
  ]
}