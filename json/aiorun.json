{
  "info": {
    "author": "Caleb Hattingh",
    "author_email": "caleb.hattingh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": ".. image:: https://travis-ci.org/cjrh/aiorun.svg?branch=master\n    :target: https://travis-ci.org/cjrh/aiorun\n\n.. image:: https://coveralls.io/repos/github/cjrh/aiorun/badge.svg?branch=master\n    :target: https://coveralls.io/github/cjrh/aiorun?branch=master\n\n.. image:: https://img.shields.io/pypi/pyversions/aiorun.svg\n    :target: https://pypi.python.org/pypi/aiorun\n\n.. image:: https://img.shields.io/github/tag/cjrh/aiorun.svg\n    :target: https://img.shields.io/github/tag/cjrh/aiorun.svg\n\n.. image:: https://img.shields.io/badge/install-pip%20install%20aiorun-ff69b4.svg\n    :target: https://img.shields.io/badge/install-pip%20install%20aiorun-ff69b4.svg\n\n.. image:: https://img.shields.io/pypi/v/aiorun.svg\n    :target: https://img.shields.io/pypi/v/aiorun.svg\n\n.. image:: https://img.shields.io/badge/calver-YYYY.MM.MINOR-22bfda.svg\n    :target: http://calver.org/\n\n**ALPHA**\n\naiorun\n======================\n\nHere's the big idea (how you use it):\n\n.. code-block:: python\n\n   import asyncio\n   from aiorun import run\n\n   async def main():\n       # Put your application code here\n       await asyncio.sleep(1.0)\n\n   if __name__ == '__main__':\n       run(main())\n\nThis package provides a ``run()`` function as the starting point\nof your ``asyncio``-based application.\n\nSo what the heck does ``run()`` do exactly?? It:\n\n- creates a `Task` for the given coroutine (schedules it on the\n  event loop),\n- calls ``loop.run_forever()``,\n- adds default (and smart) signal handlers for both ``SIGINT``\n  and ``SIGTERM`` that will stop the loop, *and then it...*\n- gathers all outstanding tasks,\n- cancels them using ``task.cancel()`` (you can choose whether or\n  not to handle ``CancelledError`` in your coroutines),\n- waits for the executor to complete shutdown, and\n- finally closes the loop.\n\nAll of this stuff is boilerplate that you will never have to write\nagain. So, if you use ``aiorun`` this is what **you** need to remember:\n\n- Spawn all your work from a single, starting coroutine\n- When a shutdown signal is received, **all** currently-pending tasks\n  will have ``CancelledError`` raised internally. It's up to you whether\n  you want to handle this in a ``try/except`` or not.\n- Try to have executor jobs be shortish, since shutdown will wait for them\n  to finish. If you need a long-running thread or process tasks, use\n  a dedicated thread/subprocess and set ``daemon=True`` instead.\n\nThere's not much else to know.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/cjrh/aiorun",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiorun",
    "platform": "",
    "project_url": "https://pypi.org/project/aiorun/",
    "release_url": "https://pypi.org/project/aiorun/2017.10.1/",
    "requires_dist": [
      "typing; python_version < '3.5'"
    ],
    "requires_python": "",
    "summary": "Boilerplate for asyncio applications",
    "version": "2017.10.1"
  },
  "releases": {
    "2017.10.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f5190ad7182477256f38315a4d675be3",
          "sha256": "095894c711bf65e509f2da8de95843dade8e4f56e000c4df2dde0a6e263c5665"
        },
        "downloads": -1,
        "filename": "aiorun-2017.10.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5190ad7182477256f38315a4d675be3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 15550,
        "upload_time": "2017-10-20T12:02:10",
        "url": "https://files.pythonhosted.org/packages/40/d5/75516116e00712c40931accbbaacc4455cb15a89b63fb31e731119b20b78/aiorun-2017.10.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6a9d0c3b4c6a370ea91c109ab6a24e51",
          "sha256": "baf61bdb8d3cc85641805bc4c9dc6a0f0e53ac253e4128ed1ed3288ee3258608"
        },
        "downloads": -1,
        "filename": "aiorun-2017.10.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6a9d0c3b4c6a370ea91c109ab6a24e51",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7946,
        "upload_time": "2017-10-20T12:02:20",
        "url": "https://files.pythonhosted.org/packages/9a/2c/ea01f0cc5e1943738d3bc051b966adb2727c4e238b9130e44b63d40ccecd/aiorun-2017.10.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f5190ad7182477256f38315a4d675be3",
        "sha256": "095894c711bf65e509f2da8de95843dade8e4f56e000c4df2dde0a6e263c5665"
      },
      "downloads": -1,
      "filename": "aiorun-2017.10.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f5190ad7182477256f38315a4d675be3",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 15550,
      "upload_time": "2017-10-20T12:02:10",
      "url": "https://files.pythonhosted.org/packages/40/d5/75516116e00712c40931accbbaacc4455cb15a89b63fb31e731119b20b78/aiorun-2017.10.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "6a9d0c3b4c6a370ea91c109ab6a24e51",
        "sha256": "baf61bdb8d3cc85641805bc4c9dc6a0f0e53ac253e4128ed1ed3288ee3258608"
      },
      "downloads": -1,
      "filename": "aiorun-2017.10.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6a9d0c3b4c6a370ea91c109ab6a24e51",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7946,
      "upload_time": "2017-10-20T12:02:20",
      "url": "https://files.pythonhosted.org/packages/9a/2c/ea01f0cc5e1943738d3bc051b966adb2727c4e238b9130e44b63d40ccecd/aiorun-2017.10.1.tar.gz"
    }
  ]
}