{
  "info": {
    "author": "Caleb Hattingh",
    "author_email": "caleb.hattingh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": ".. image:: https://travis-ci.org/cjrh/aiorun.svg?branch=master\n    :target: https://travis-ci.org/cjrh/aiorun\n\n.. image:: https://coveralls.io/repos/github/cjrh/aiorun/badge.svg?branch=master\n    :target: https://coveralls.io/github/cjrh/aiorun?branch=master\n\n.. image:: https://img.shields.io/pypi/pyversions/aiorun.svg\n    :target: https://pypi.python.org/pypi/aiorun\n\n.. image:: https://img.shields.io/github/tag/cjrh/aiorun.svg\n    :target: https://img.shields.io/github/tag/cjrh/aiorun.svg\n\n.. image:: https://img.shields.io/badge/install-pip%20install%20aiorun-ff69b4.svg\n    :target: https://img.shields.io/badge/install-pip%20install%20aiorun-ff69b4.svg\n\n.. image:: https://img.shields.io/pypi/v/aiorun.svg\n    :target: https://img.shields.io/pypi/v/aiorun.svg\n\n.. image:: https://img.shields.io/badge/calver-YYYY.MM.MINOR-22bfda.svg\n    :target: http://calver.org/\n\n\naiorun\n======================\n\nHere's the big idea (how you use it):\n\n.. code-block:: python\n\n   import asyncio\n   from aiorun import run\n\n   async def main():\n       # Put your application code here\n       await asyncio.sleep(1.0)\n\n   if __name__ == '__main__':\n       run(main())\n\nThis package provides a ``run()`` function as the starting point\nof your ``asyncio``-based application. The ``run()`` function will\nrun forever. If you want to shut down when ``main()`` completes, just\ncall ``loop.stop()`` inside it: that will initiate shutdown.\n\nWhy?\n----\n\nThe ``run()`` function will handle **everything** that normally needs\nto be done during the shutdown sequence of the application.  All you\nneed to do is write your coroutines and run them.\n\nSo what the heck does ``run()`` do exactly?? It does these standard,\nidiomatic actions for asyncio apps:\n\n- creates a ``Task`` for the given coroutine (schedules it on the\n  event loop),\n- calls ``loop.run_forever()``,\n- adds default (and smart) signal handlers for both ``SIGINT``\n  and ``SIGTERM`` that will stop the loop;\n- and when the loop stops, the it will...\n- ...gather all outstanding tasks,\n- cancel them using ``task.cancel()``,\n- wait for the executor to complete shutdown, and\n- finally close the loop.\n\nAll of this stuff is boilerplate that you will never have to write\nagain. So, if you use ``aiorun`` this is what **you** need to remember:\n\n- Spawn all your work from a single, starting coroutine\n- When a shutdown signal is received, **all** currently-pending tasks\n  will have ``CancelledError`` raised internally. It's up to you whether\n  you want to handle this (inside your coroutines) with\n  a ``try/except`` or not.\n- Try to have executor jobs be shortish, since shutdown will wait for them\n  to finish. If you need a long-running thread or process tasks, use\n  a dedicated thread/subprocess and set ``daemon=True`` instead.\n\nThere's not much else to know for general use. `aiorun` has a few special\ntools that you might need in unusual circumstances. These are discussed\nnext.\n\nSmart shield for shutdown\n-------------------------\n\nIt's unusual, but sometimes you're going to want a coroutine to not get\ninterrupted by cancellation *during the shutdown sequence*. You'll look in\nthe official docs and find ``asyncio.shield()``.\n\nThe problem is that ``shield()`` doesn't work in shutdown scenarios because\nthe protection offered by ``shield()`` only applies if the specific coroutine\n*inside which* the ``shield()`` is used, gets cancelled directly.\n\nIf, however, you go through a conventional shutdown sequence (like ``aiorun``\nis doing internally), you would call:\n\n- ``tasks = all_tasks()``, followed by\n- ``group = gather(*tasks)``, and then\n- ``group.cancel()``\n\nThe problem is that ```shield()`` creates a *secret, inner*\ntask that will also be captured in the ``all_tasks()`` call above, so it\nwill also receive a cancellation signal just like everything else.\n\nTherefore, we have a version of ``shield()`` that works better for us:\n``shutdown_waits_for()``. If you've got a coroutine that must **not** be\ncancelled during the shutdown sequence, just wrap it in\n``shutdown_waits_for()``!\n\nHere's an example:\n\n.. code-block:: python\n\n    import asyncio\n    from aiorun import run, shutdown_waits_for\n\n    async def corofn():\n        await asyncio.sleep(60)\n        print('done!')\n\n    async def main():\n        try:\n            await shutdown_waits_for(corofn())\n        except asyncio.CancelledError\n            print('oh noes!')\n\n    run(main())\n\nIf you run this program and do nothing, it'll run forever ('cause that's\nhow ``aiorun.run()`` works) and you'll see only ``done!`` printed in the output.\nYou'll have to send a signal or ``CTRL-C`` to stop it, at which point\nyou'll see ``oh noes!`` printed. So far no surprises.\n\nIf, however, you hit ``CTRL-C`` *before* 60 seconds has passed, you will see\n``oh noes!`` printed immediately, and then after 60 seconds (since start),\n``done!`` is printed, and thereafter the program exits.\n\nBehind the scenes, ``all tasks()`` would have been cancelled by ``CTRL-C``,\nexcept ones wrapped in ``shutdown_waits_for()`` calls.  In this respect, it\nis loosely similar to ``asyncio.shield()``, but with special applicability\nto our shutdown scenario in ``aiorun()``.\n\nOh, and you can use ``shutdown_waits_for()`` as if it were ``asyncio.shield()``\ntoo. For that use-case it works the same.  If you're using ``aiorun``, there\nis no reason to use ``shield()``.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/cjrh/aiorun",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiorun",
    "platform": "",
    "project_url": "https://pypi.org/project/aiorun/",
    "release_url": "https://pypi.org/project/aiorun/2017.11.1/",
    "requires_dist": [
      "typing; python_version < '3.5'"
    ],
    "requires_python": "",
    "summary": "Boilerplate for asyncio applications",
    "version": "2017.11.1"
  },
  "releases": {
    "2017.10.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f5190ad7182477256f38315a4d675be3",
          "sha256": "095894c711bf65e509f2da8de95843dade8e4f56e000c4df2dde0a6e263c5665"
        },
        "downloads": -1,
        "filename": "aiorun-2017.10.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5190ad7182477256f38315a4d675be3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 15550,
        "upload_time": "2017-10-20T12:02:10",
        "url": "https://files.pythonhosted.org/packages/40/d5/75516116e00712c40931accbbaacc4455cb15a89b63fb31e731119b20b78/aiorun-2017.10.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6a9d0c3b4c6a370ea91c109ab6a24e51",
          "sha256": "baf61bdb8d3cc85641805bc4c9dc6a0f0e53ac253e4128ed1ed3288ee3258608"
        },
        "downloads": -1,
        "filename": "aiorun-2017.10.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6a9d0c3b4c6a370ea91c109ab6a24e51",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7946,
        "upload_time": "2017-10-20T12:02:20",
        "url": "https://files.pythonhosted.org/packages/9a/2c/ea01f0cc5e1943738d3bc051b966adb2727c4e238b9130e44b63d40ccecd/aiorun-2017.10.1.tar.gz"
      }
    ],
    "2017.10.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e8f26108f11abcbee68fb83c580f18b3",
          "sha256": "c7e572d7064cd2c82a9e71b86922429b191058cced71ca0fde2248e1066a7fe1"
        },
        "downloads": -1,
        "filename": "aiorun-2017.10.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8f26108f11abcbee68fb83c580f18b3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 15623,
        "upload_time": "2017-10-24T11:05:39",
        "url": "https://files.pythonhosted.org/packages/14/f2/af1e52afdc68b0abf7d36096a5a645ba8af7b57edb6d5de6a6024c9f19bb/aiorun-2017.10.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "513bbce8cc9de87f146193a345e6a2e2",
          "sha256": "7f7cb189aa9d279974b8501e78f84fb7281e12201f5e419269c7594039b0c8c1"
        },
        "downloads": -1,
        "filename": "aiorun-2017.10.2.tar.gz",
        "has_sig": false,
        "md5_digest": "513bbce8cc9de87f146193a345e6a2e2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7965,
        "upload_time": "2017-10-24T11:05:42",
        "url": "https://files.pythonhosted.org/packages/d3/7d/ef30df9a0d34e2b1639d83df1b08de2d74a5e7fb3131fffaf01c7c2ac1da/aiorun-2017.10.2.tar.gz"
      }
    ],
    "2017.10.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4a5ea418e1929f765c15d3988ddb78e1",
          "sha256": "fea610c9b9454f42ad30c06388d23ada58332edc6eb55e9016eba55685c58822"
        },
        "downloads": -1,
        "filename": "aiorun-2017.10.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a5ea418e1929f765c15d3988ddb78e1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 15592,
        "upload_time": "2017-10-25T08:22:15",
        "url": "https://files.pythonhosted.org/packages/eb/d9/b7baa5f3fbf9c8f1cc52201d517fcd6d31ae766cad64a94080de998bcd04/aiorun-2017.10.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "543ea29512981b881344067bdc6d99e5",
          "sha256": "f1fd3ac3599b9c4ff94927ecf4aa1fe9aaa300bf1479a9f89560c51e289f76f7"
        },
        "downloads": -1,
        "filename": "aiorun-2017.10.3.tar.gz",
        "has_sig": false,
        "md5_digest": "543ea29512981b881344067bdc6d99e5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8004,
        "upload_time": "2017-10-25T08:22:22",
        "url": "https://files.pythonhosted.org/packages/98/a0/f1b24f31067c335cf68d2685c74d6cc9b184b51b7c8179266395ba68c667/aiorun-2017.10.3.tar.gz"
      }
    ],
    "2017.10.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3490278e4c131e793382ee87d3c1f1e9",
          "sha256": "d5ccd244848ac0d10260c833db8c9a8f1dd2e77418f72b9d858318ce26a8d743"
        },
        "downloads": -1,
        "filename": "aiorun-2017.10.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3490278e4c131e793382ee87d3c1f1e9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 21196,
        "upload_time": "2017-10-27T09:57:40",
        "url": "https://files.pythonhosted.org/packages/31/a2/e621a9676497bfc9f20419153eb1ed3c3d723e716157544077a4f863d562/aiorun-2017.10.4-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7ab56a7ccab0005eadffeabe538d392c",
          "sha256": "fecfb6f038770233fd1f0b1bac47c9bcc900473bb30ac92a99684409e75a37b9"
        },
        "downloads": -1,
        "filename": "aiorun-2017.10.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7ab56a7ccab0005eadffeabe538d392c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11513,
        "upload_time": "2017-10-27T09:57:44",
        "url": "https://files.pythonhosted.org/packages/80/50/ab7071b373d3c1c2da2de74b31d0dd0093b2e56413695f4a2d9c1dab9cbd/aiorun-2017.10.4.tar.gz"
      }
    ],
    "2017.10.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d595bae27d986aec4d37abf6a52c5932",
          "sha256": "7ca9a2d4661f568d16d2fb0828d491215b6ba39e57b595e0782373bc1e575ebc"
        },
        "downloads": -1,
        "filename": "aiorun-2017.10.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d595bae27d986aec4d37abf6a52c5932",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 21576,
        "upload_time": "2017-10-28T20:58:58",
        "url": "https://files.pythonhosted.org/packages/53/ca/cdd1ab460e74fe8d56e70e18c9a7ddd78da62e6fd5bf5d7d386d8f545456/aiorun-2017.10.5-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "473339dd34460eb5ca82bb2e6c956f1a",
          "sha256": "992c180466b72ab2414d590584ce002c1568647775e5a641b7cac63d506c6e3d"
        },
        "downloads": -1,
        "filename": "aiorun-2017.10.5.tar.gz",
        "has_sig": false,
        "md5_digest": "473339dd34460eb5ca82bb2e6c956f1a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11651,
        "upload_time": "2017-10-28T20:59:02",
        "url": "https://files.pythonhosted.org/packages/9d/86/3bebab774ee1e6cb2ce65f514100e887bc01545a7cc19b232b5c989134f6/aiorun-2017.10.5.tar.gz"
      }
    ],
    "2017.11.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a42d8d52a8a6702bd4a2a1d64b4ef613",
          "sha256": "6be190a96fae6c3f9f6223b35c53b1eef0acfa94fb4d9bf5356fd6a49c06ad06"
        },
        "downloads": -1,
        "filename": "aiorun-2017.11.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a42d8d52a8a6702bd4a2a1d64b4ef613",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 21808,
        "upload_time": "2017-11-04T23:35:41",
        "url": "https://files.pythonhosted.org/packages/0a/1e/de347bc5b1c1840e1288326d0611cd814d2eadaa3997e56d5e7396331f9e/aiorun-2017.11.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6464c9eeda9120f3a4a466a2645f7804",
          "sha256": "44c78c4a647696b910d3806c482307471daf455bdef058e5cdaf8049b0fa543a"
        },
        "downloads": -1,
        "filename": "aiorun-2017.11.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6464c9eeda9120f3a4a466a2645f7804",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11779,
        "upload_time": "2017-11-04T23:35:45",
        "url": "https://files.pythonhosted.org/packages/05/28/c8488396940ecb9d395b47cf3e7d3509c9e0e7ab02b12a741b07d47a8872/aiorun-2017.11.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a42d8d52a8a6702bd4a2a1d64b4ef613",
        "sha256": "6be190a96fae6c3f9f6223b35c53b1eef0acfa94fb4d9bf5356fd6a49c06ad06"
      },
      "downloads": -1,
      "filename": "aiorun-2017.11.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a42d8d52a8a6702bd4a2a1d64b4ef613",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 21808,
      "upload_time": "2017-11-04T23:35:41",
      "url": "https://files.pythonhosted.org/packages/0a/1e/de347bc5b1c1840e1288326d0611cd814d2eadaa3997e56d5e7396331f9e/aiorun-2017.11.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "6464c9eeda9120f3a4a466a2645f7804",
        "sha256": "44c78c4a647696b910d3806c482307471daf455bdef058e5cdaf8049b0fa543a"
      },
      "downloads": -1,
      "filename": "aiorun-2017.11.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6464c9eeda9120f3a4a466a2645f7804",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 11779,
      "upload_time": "2017-11-04T23:35:45",
      "url": "https://files.pythonhosted.org/packages/05/28/c8488396940ecb9d395b47cf3e7d3509c9e0e7ab02b12a741b07d47a8872/aiorun-2017.11.1.tar.gz"
    }
  ]
}