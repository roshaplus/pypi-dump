{
  "info": {
    "author": "Human Cell Atlas contributors",
    "author_email": "tonytung@chanzuckerberg.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# chained-aws-lambda\n\n#### Running tests\n\nRun `make test` in the top-level `data-store` directory.\n\n\n#### Deployment\n\nAssuming the tests have passed above, the next step is to manually deploy.  See the section below for information on\nCI/CD with Travis if continuous deployment is your goal.\n\nNow deploy using make:\n\n    make deploy\n\nSet up AWS API Gateway.  The gateway is automatically set up for you and associated with the Lambda.  However, to get a\nfriendly domain name, you need to follow the\ndirections [here](http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html). In summary:\n\n* Generate a HTTPS certificate via AWS Certificate Manager, make sure it's in us-east-1\n* Set up the domain name in the API gateway console\n* Set up in Amazon Route 53 to point the domain to the API gateway\n* In the API Gateway, fill in the endpoints for the custom domain name e.g. Path=`/`, Destination=`dss` and `dev`.\n  These might be different based on the profile used (dev, stage, etc).\n* Set the environment variable `API_HOST` to your domain name in the `environment.local` file.\n\nIf successful, you should be able to see the Swagger API documentation at:\n\n    https://<domain_name>\n\nAnd you should be able to list bundles like this:\n\n    curl -X GET \"https://<domain_name>/v1/bundles\" -H  \"accept: application/json\"\n\n\n#### CI/CD with Travis CI\nWe use [Travis CI](https://travis-ci.org/HumanCellAtlas/data-store) for continuous integration testing and\ndeployment. When `make test` succeeds, Travis CI deploys the application into the `dev` stage on AWS for every commit\nthat goes on the master branch. This behavior is defined in the `deploy` section of `.travis.yml`.\n\n\n#### Authorizing Travis CI to deploy\nEncrypted environment variables give Travis CI the AWS credentials needed to run the tests and deploy the app. Run\n`scripts/authorize_aws_deploy.sh IAM-PRINCIPAL-TYPE IAM-PRINCIPAL-NAME` (e.g. `authorize_aws_deploy.sh user hca-test`)\nto give that principal the permissions needed to deploy the app. Because this is a limited set of permissions, it does\nnot have write access to IAM. To set up the IAM policies for resources in your account that the app will use, run `make\ndeploy` using privileged account credentials once from your workstation. After this is done, Travis CI will be able to\ndeploy on its own. You must repeat the `make deploy` step from a privileged account any time you change the IAM policies\nin `policy.json.template` files.\n\n[![](https://img.shields.io/badge/slack-%23data--store-557EBF.svg)](https://humancellatlas.slack.com/messages/data-store/)\n[![Build Status](https://travis-ci.org/HumanCellAtlas/data-store.svg?branch=master)](https://travis-ci.org/HumanCellAtlas/data-store)\n[![codecov](https://codecov.io/gh/HumanCellAtlas/data-store/branch/master/graph/badge.svg)](https://codecov.io/gh/HumanCellAtlas/data-store)\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/chanzuckerberg/chained-aws-lambda",
    "keywords": "",
    "license": "Apache Software License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "chained-aws-lambda",
    "platform": "MacOS X",
    "project_url": "https://pypi.org/project/chained-aws-lambda/",
    "release_url": "https://pypi.org/project/chained-aws-lambda/0.0.1/",
    "requires_dist": [
      "requests",
      "boto3"
    ],
    "requires_python": "",
    "summary": "chain work using AWS lambdas",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5e6935f09755ffd8ecd416e997151ad2",
          "sha256": "ba9a56b10b60fe95af6151c894d9c45de765ee7a81265c6d5d10ae829cfa5f42"
        },
        "downloads": 0,
        "filename": "chained_aws_lambda-0.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e6935f09755ffd8ecd416e997151ad2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 25296,
        "upload_time": "2017-09-16T00:15:41",
        "url": "https://files.pythonhosted.org/packages/79/cc/3ac31ff3f9f29469e75f4e3c4b9d762d9edbbd4e53869eb4a75ac88e2ede/chained_aws_lambda-0.0.0-py2.py3-none-any.whl"
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "057eb45bafd2fdde5f5bc3f58aaa3e44",
          "sha256": "25a8b06edcdfc7f3709c0cec8661d0bf4448aaf3beb4349f01a15947ce542590"
        },
        "downloads": 0,
        "filename": "chained_aws_lambda-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "057eb45bafd2fdde5f5bc3f58aaa3e44",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 25039,
        "upload_time": "2017-09-16T00:24:36",
        "url": "https://files.pythonhosted.org/packages/ac/78/39e4b1a657486dfbd20706a9ea1231b509b744ffd794007bc6da05988339/chained_aws_lambda-0.0.1-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "057eb45bafd2fdde5f5bc3f58aaa3e44",
        "sha256": "25a8b06edcdfc7f3709c0cec8661d0bf4448aaf3beb4349f01a15947ce542590"
      },
      "downloads": 0,
      "filename": "chained_aws_lambda-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "057eb45bafd2fdde5f5bc3f58aaa3e44",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 25039,
      "upload_time": "2017-09-16T00:24:36",
      "url": "https://files.pythonhosted.org/packages/ac/78/39e4b1a657486dfbd20706a9ea1231b509b744ffd794007bc6da05988339/chained_aws_lambda-0.0.1-py2.py3-none-any.whl"
    }
  ]
}