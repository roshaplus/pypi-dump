{
  "info": {
    "author": "Graham Krizek",
    "author_email": "graham@krizek.io",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "leh\n===\n\n|image0| |image1| |image2|\n\nAbout\n-----\n\n*Lambda Exception Helper*\n\nleh makes it easier to find unhandled exception log entries in `AWS\nLambda <https://aws.amazon.com/lambda/>`__ logs.\n\nAWS Lambda logs both ``stdout`` and ``stderr`` to the same stream in\n`CloudWatch <https://aws.amazon.com/cloudwatch/>`__. This can make it\ndifficult to find your error logs amongst all other ``stdout``. If you\ndon't view your logs immediately after an error is thrown, it gets even\nharder due to new log streams starting.\n\nleh makes this process easier by adding a message right before all\nunhandled exception logs. You can then search your logs with the\npredetermined message and find your exceptions faster.\n\nleh also gives you the ability to execute a separate Lambda function\nwhen an unhandled exception occurs. This allows you to either create a\nseparate log file for errors only or take action whenever an unhandled\nexception occurs.\n\nInstallation\n------------\n\nleh can be installed using the pip distribution system for Python by\nissuing:\n\n::\n\n    $ pip install leh\n\nAlternatively, you can run use ``setup.py`` to install by cloning this\nrepository and issuing:\n\n::\n\n    $ python setup.py install  # you may need sudo depending on your python installation\n\nUsage\n-----\n\nYou can start using leh by adding just 2 lines to your Handler:\n\n::\n\n    import leh\n    leh.Initialize()\n\nThis will add a default message of ``\"leh excepthook executed:\"`` just\nbefore your unhandled exception log.\n\nYou can customize your message, as well as setup a Lambda function, by\npassing parameters to the ``Initialize()`` function. Possible parameters\nare:\n\n+-------------------+--------------------------------------+---------+--------------------------------------------------------+------------------------------+\n| Parameter         | Required                             | Type    | Description                                            | Default                      |\n+===================+======================================+=========+========================================================+==============================+\n| ``Message``       | No                                   | String  | Custom message to prepend to unhandled exception logs. | ``leh excepthook executed:`` |\n+-------------------+--------------------------------------+---------+--------------------------------------------------------+------------------------------+\n| ``ExecuteLambda`` | No                                   | Boolean | Enable or Disable Lambda execution on error.           | ``False``                    |\n+-------------------+--------------------------------------+---------+--------------------------------------------------------+------------------------------+\n| ``FunctionName``  | Yes if ``ExecuteLambda`` is ``True`` | String  | Name of the function to execute.                       | None                         |\n+-------------------+--------------------------------------+---------+--------------------------------------------------------+------------------------------+\n| ``AWSKey``        | No                                   | String  | AWS Access Key for invoking a Lambda function.         | None                         |\n+-------------------+--------------------------------------+---------+--------------------------------------------------------+------------------------------+\n| ``AWSSecret``     | No                                   | String  | AWS Secret Key for invoking a Lambda function.         | None                         |\n+-------------------+--------------------------------------+---------+--------------------------------------------------------+------------------------------+\n\nI always recommend using `IAM\nRoles <http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html>`__ instead of directly passing credentials.\n\nPayload\n^^^^^^^\n\nWhen invoking a Lambda function, everything you need to know is included\nin the payload.\n\n*Example Payload:*\n\n::\n\n    {\n      \"function\": \"MyFunction\",\n      \"region\": \"us-west-2\",\n      \"origin-log-group\": \"/aws/lambda/myfunction\",\n      \"origin-log-stream\": \"f407a393-50d2-410a-a9c7-45a6a04e506e\",\n      \"exception\": \"Traceback (most recent call last):\\n  File \"test.py\", line 22, in <module>    print(list[1])\\nIndexError: list index out of range\"\n    }\n\nPerformance\n^^^^^^^^^^^\n\nIf you are only appending a custom message to your exception logs there\nis no delay in exiting. However, if you are executing a Lambda function\nthere will be a slight delay between when the error is thrown and when\nthe error is logged and the program is exited. This delay is the time it\ntakes to execute the Lambda function. leh always calls the Lambda\nfunction asynchronously, so there is never a wait for a response.\n\nEnvironment Variables\n^^^^^^^^^^^^^^^^^^^^^\n\nAlthough the ``Initialize()`` function usually completes in under 100\nmilliseconds, it's possible to not execute it and use environment\nvariables instead. You can define the the same parameters of the\n``Initialize()`` function using environment variables. The corresponding\nparameter names to environment variable names as follows:\n\n+---------------------+-----------------------------+\n| Parameter Name      | Environment Variable Name   |\n+=====================+=============================+\n| ``Message``         | ``LEH_MESSAGE``             |\n+---------------------+-----------------------------+\n| ``ExecuteLambda``   | ``LEH_EXECUTE_LAMBDA``      |\n+---------------------+-----------------------------+\n| ``FunctionName``    | ``LEH_FUNCTION_NAME``       |\n+---------------------+-----------------------------+\n| ``AWSKey``          | ``LEH_AWS_KEY``             |\n+---------------------+-----------------------------+\n| ``AWSSecret``       | ``LEH_AWS_SECRET``          |\n+---------------------+-----------------------------+\n\n**Warning:**\n\n-  If you do not call the ``Initialize()`` function, you MUST define a\n   ``LEH_MESSAGE`` environment variable.\n-  If you do not call the ``Initialize()`` function and choose to use\n   environment variables instead, you must manually set the\n   ``sys.excepthook`` in your Handler:\n\n::\n\n    import sys\n    import leh\n    sys.excepthook = leh.Hook\n\nExamples\n--------\n\nCreate a custom message:\n\n::\n\n    import leh\n    leh.Initialize(\n        Message=\"My Custom Hook Message\"\n    )\n\nExecute a Lambda function:\n\n::\n\n    import leh\n    leh.Initialize(\n        ExecuteLambda=True,\n        FunctionName=\"error-log-function\"\n    )\n\nExecute a Lambda function with specific keys:\n\n::\n\n    import leh\n    leh.Initialize(\n        ExecuteLambda=True,\n        FunctionName=\"error-log-function\",\n        AWSKey=\"AKIAIOSFODNN7EXAMPLE\",\n        AWSSecret=\"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n\n    )\n\n.. |image0| image:: https://img.shields.io/pypi/v/leh.svg\n.. |image1| image:: https://img.shields.io/circleci/project/github/gkrizek/leh.svg\n.. |image2| image:: https://img.shields.io/pypi/l/leh.svg\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/gkrizek/leh",
    "keywords": "aws lambda unhandled exception logging error",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "leh",
    "platform": "",
    "project_url": "https://pypi.org/project/leh/",
    "release_url": "https://pypi.org/project/leh/0.1.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Lambda Exception Helper",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "620af2e713d9917ef2a385745126c512",
          "sha256": "62c7c6ef29896cb011fbbff94e5f1b3a6904364d899bb66cf967295d517736d7"
        },
        "downloads": 0,
        "filename": "leh-0.1.1.tar.gz",
        "has_sig": true,
        "md5_digest": "620af2e713d9917ef2a385745126c512",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4663,
        "upload_time": "2017-08-14T16:30:48",
        "url": "https://files.pythonhosted.org/packages/fc/5c/4372b9e66f3cabbeac9462b1d1f93433e6151a2ac3296a2d5c635f8b6d1c/leh-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "620af2e713d9917ef2a385745126c512",
        "sha256": "62c7c6ef29896cb011fbbff94e5f1b3a6904364d899bb66cf967295d517736d7"
      },
      "downloads": 0,
      "filename": "leh-0.1.1.tar.gz",
      "has_sig": true,
      "md5_digest": "620af2e713d9917ef2a385745126c512",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4663,
      "upload_time": "2017-08-14T16:30:48",
      "url": "https://files.pythonhosted.org/packages/fc/5c/4372b9e66f3cabbeac9462b1d1f93433e6151a2ac3296a2d5c635f8b6d1c/leh-0.1.1.tar.gz"
    }
  ]
}