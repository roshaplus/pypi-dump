{
  "info": {
    "author": "John Cupitt",
    "author_email": "jcupitt@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Multimedia :: Graphics",
      "Topic :: Multimedia :: Graphics :: Graphics Conversion"
    ],
    "description": "README\n======\n\n.. image:: https://travis-ci.org/jcupitt/pyvips.svg?branch=master\n    :alt: Build Status\n    :target: https://travis-ci.org/jcupitt/pyvips\n\nPyPI package:\n\nhttps://pypi.python.org/pypi/pyvips\n\nThis module wraps the libvips image processing library. It needs the libvips\nshared library on your library search path, version 8.2 or later. \n\nhttps://jcupitt.github.io/libvips\n\nThis binding passes the vips test suite cleanly and with no leaks under\npython2.7 - python3.6, pypy and pypy3 on Windows, macOS and Linux. \n\nWe have formatted docs online here:\n\nhttps://jcupitt.github.io/pyvips/\n\nHow it works\n------------\n\nPrograms that use ``pyvips`` don't manipulate images directly, instead\nthey create pipelines of image processing operations building on a source\nimage. When the end of the pipe is connected to a destination, the whole\npipeline executes at once, streaming the image in parallel from source to\ndestination a section at a time.\n\nBecause ``pyvips`` is parallel, it's quick, and because it doesn't need to\nkeep entire images in memory, it's light.  For example, the libvips \nspeed and memory use benchmark: \n\nhttps://github.com/jcupitt/libvips/wiki/Speed-and-memory-use\n\nLoads a large tiff image, shrinks by 10%, sharpens, and saves again. On this\ntest ``pyvips`` is typically 5x faster than Pillow-SIMD and needs 4x less\nmemory. \n\nThere's a handy blog post explaining how libvips opens files, which gives\nsome more background.\n\nhttp://libvips.blogspot.co.uk/2012/06/how-libvips-opens-file.html\n\nInstall\n-------\n\nYou need the libvips shared library on your library search path, version 8.2 or\nlater. On linux and macOS, you can install via your package manager; on \nWindows you can download a pre-compiled binary from the libvips website:\n\nhttps://jcupitt.github.io/libvips/\n\nThen just install this package, perhaps::\n\n\t$ pip install --user pyvips\n\nExample\n-------\n\nThis sample program loads a JPG image, doubles the value of every green pixel,\nsharpens, and then writes the image back to the filesystem again::\n\n    import pyvips\n\n    image = pyvips.Image.new_from_file('some-image.jpg', access='sequential')\n    image *= [1, 2, 1]\n    mask = pyvips.Image.new_from_array([[-1, -1, -1],\n                                        [-1, 16, -1],\n                                        [-1, -1, -1]\n                                       ], scale=8)\n    image = image.conv(mask, precision='integer')\n    image.write_to_file('x.jpg')\n\nConverting old code\n-------------------\n\nTo convert old code, replace the lines::\n\n\timport gi\n\tgi.require_version('Vips', '8.0')\n\tfrom gi.repository import Vips \n\nwith::\n\n\timport pyvips\n\tVips = pyvips\n\nInstead of the ``pyvips = Vips``, you can of course also swap all ``Vips`` for\n``pyvips`` with eg.::\n\n        %s/Vips/pyvips/g\n\nBackground\n----------\n\nThe Python binding included in libvips works, but porting and installation\nare more difficult than they should be. \n\nThis new binding is:\n\n* compatible with the current Python binding (it runs the same test suite,\n  unmodified)\n\n* easier to install, since the stack is much smaller, and there are \n  no issues with the overrides directory\n\n* faster, since we implement Buffer and save some copies\n\n* faster, since it is \"thinner\". The ffi Ruby binding is about twice\n  as fast as the gobject-introspection one, when running the test suite\n\n* portable across CPython, PyPy and others\n\n* more simply portable to Windows \n\n* easy to package for pip\n\nNotes\n-----\n\nLocal user install::\n\n\t$ pip install --user -e .\n\t$ pip3 install --user -e .\n\t$ pypy -m pip --user -e .\n\nRun test suite::\n\n\t$ nosetests --logging-level=WARNING\n\t$ python3 -m nose --logging-level=WARNING\n\t$ pypy -m nose --logging-level=WARNING\n\nStylecheck::\n\n        $ flake8\n\nGenerate HTML docs in ``doc/build/html``::\n\n        $ cd doc; sphinx-build -bhtml . build/html\n\nRegenerate autodocs::\n\n        $ cd doc; \\\n          python -c \"import pyvips; pyvips.Operation.generate_sphinx_all()\" > x \n\nAnd copy-paste ``x`` into the obvious place in ``doc/vimage.rst``.\n\nUpdate version number::\n\n        $ vi pyvips/version.py\n\nUpdate pypi package::\n\n        $ python setup.py bdist_wheel\n        $ twine upload dist/*\n\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jcupitt/pyvips",
    "keywords": "image processing",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyvips",
    "platform": "",
    "project_url": "https://pypi.org/project/pyvips/",
    "release_url": "https://pypi.org/project/pyvips/2.0.2/",
    "requires_dist": [
      "nose; extra == 'test'",
      "flake8; extra == 'test'",
      "sphinx-rtd-theme; extra == 'doc'",
      "sphinx; extra == 'doc'",
      "cffi"
    ],
    "requires_python": "",
    "summary": "binding for the libvips image processing library",
    "version": "2.0.2"
  },
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "da3a980e702b834e76349922d93020bf",
          "sha256": "c99590364cfc620af0db004aa9c6e6830a3c337d0db074d0a61da74dd4b91071"
        },
        "downloads": 0,
        "filename": "pyvips-2.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da3a980e702b834e76349922d93020bf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 55947,
        "upload_time": "2017-08-19T14:29:05",
        "url": "https://files.pythonhosted.org/packages/6a/2d/5ca1ee5077f733335c208b7a3f3d62f964aaab87731ab3e2850e404df7f1/pyvips-2.0.0-py2.py3-none-any.whl"
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "de8d2d8de6410441109a8b246805fccd",
          "sha256": "bf74b25a91bed8d9a96be8d457ce26ee487bf8b72c48f2c56aa643e233e341b2"
        },
        "downloads": 0,
        "filename": "pyvips-2.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de8d2d8de6410441109a8b246805fccd",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 56493,
        "upload_time": "2017-08-23T17:53:13",
        "url": "https://files.pythonhosted.org/packages/40/99/2d9991eff005de6674f155808423e8aac934ba50b5c8858abef5e148c51f/pyvips-2.0.1-py2.py3-none-any.whl"
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e7e9ae205e49065fb283a16c210c8a9d",
          "sha256": "e6a6541672c6eab62ab8442738742b021c624a7b51b49c1ba9ab9aa99935692f"
        },
        "downloads": 0,
        "filename": "pyvips-2.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7e9ae205e49065fb283a16c210c8a9d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 57433,
        "upload_time": "2017-08-31T14:20:45",
        "url": "https://files.pythonhosted.org/packages/b6/3a/261808544f6832f6e00b6ee26435210d6293cc022b9c51e2b48543575dc5/pyvips-2.0.2-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e7e9ae205e49065fb283a16c210c8a9d",
        "sha256": "e6a6541672c6eab62ab8442738742b021c624a7b51b49c1ba9ab9aa99935692f"
      },
      "downloads": 0,
      "filename": "pyvips-2.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e7e9ae205e49065fb283a16c210c8a9d",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 57433,
      "upload_time": "2017-08-31T14:20:45",
      "url": "https://files.pythonhosted.org/packages/b6/3a/261808544f6832f6e00b6ee26435210d6293cc022b9c51e2b48543575dc5/pyvips-2.0.2-py2.py3-none-any.whl"
    }
  ]
}