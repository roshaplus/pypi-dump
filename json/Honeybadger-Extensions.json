{
  "info": {
    "author": "Ioannis Foukarakis",
    "author_email": "ioannis.foukarakis@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "\nHoneybadger-Extensions\n======================\n\n|CircleCI|\n\n**Honeybadger-Extensions** extend current `Honeybadger Python library`_ to better support `Celery`_ & `Flask`_.\n\nIt offers:\n\n- Improved reporting, including details for component, action etc.\n- Easier Honeybadger via Flask's or Celery's configuration object.\n- (Optional) Automatic reporting of errors detected by Celery or Flask.\n\n\nFeatures\n--------\n\nHoneybadger-Extensions provides the ``install_celery_handler()`` function which can be used\nat any time which can be used to initialize both Honeybadger & allow improved Honeybadger reporting. It also offers the\n``HoneybadgerFlask`` Flask extension that adds more information to Honeybadger logging, as well as automatic logging of\nerrors raised in the view functions.\n\nExample 1: Initialize Celery\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIn the following example, we will use the ``install_celery_handler`` to setup Honeybadger reporting.\n\n.. code:: python\n\n    from celery import Celery\n    from honeybadger_extensions import install_celery_handler\n\n    celery = Celery(__name__)\n    celery.config_from_object({\n        'HONEYBADGER_API_KEY': '<your key>',\n        'HONEYBADGER_ENVIRONMENT': 'development'\n    })\n\n    install_celery_handler(config=celery.conf, report_exceptions=True)\n\n\nExample 2: Initialize Flask\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can use HoneybadgerFlask extension to load Honeybadger configuration from Flask configuration object.\n\n.. code:: python\n\n    from flask import Flask, jsonify\n    from honeybadger_extensions import HoneybadgerFlask\n\n    app = Flask(__name__)\n    app.config['HONEYBADGER_ENVIRONMENT'] = 'development'\n    app.config['HONEYBADGER_API_KEY'] = '<your key>'\n    app.config['HONEYBADGER_EXCLUDE_HEADERS'] = 'Authorization, Proxy-Authorization, X-Custom-Key'\n    app.config['HONEYBADGER_PARAMS_FILTERS'] = 'password, secret, credit-card'\n\n    # Setup Honeybadger and listen for exceptions\n    HoneybadgerFlask(app, report_exceptions=True)\n\n    @app.route('/')\n    def index():\n        a = int(request.args.get('a'))\n        b = int(request.args.get('b'))\n\n        logger.info('Dividing two numbers {} {}'.format(a, b))\n        return jsonify({'result': a / b})\n\nInstallation\n------------\nThe easiest way to install it is using ``pip`` from PyPI\n\n.. code:: bash\n\n    pip install Honeybadger-Extensions\n\n\nLicense\n-------\n\nSee the `LICENSE`_ file for license rights and limitations (MIT).\n\n.. _Honeybadger Python Library: https://github.com/honeybadger-io/honeybadger-python\n.. _Flask: http://flask.pocoo.org/\n.. _Celery: http://www.celeryproject.org/\n.. _LICENSE: https://github.com/Workable/honeybadger-extensions/blob/master/LICENSE.md\n.. |CircleCI| image:: https://img.shields.io/circleci/project/github/Workable/honeybadger-extensions.svg\n   :target: https://circleci.com/gh/Workable/honeybadger-extensions\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/Workable/honeybadger-extensions",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Honeybadger-Extensions",
    "platform": "any",
    "project_url": "https://pypi.org/project/Honeybadger-Extensions/",
    "release_url": "https://pypi.org/project/Honeybadger-Extensions/0.1.0/",
    "requires_dist": [
      "coverage (~=4.3.4); extra == 'test'",
      "mock (==2.0.0); extra == 'test'",
      "nose; extra == 'test'",
      "celery (~=4.1.0); extra == 'celery'",
      "celery (~=4.1.0)",
      "Flask (>=0.8)",
      "blinker (>=1.1)",
      "honeybadger (>=0.0.6)"
    ],
    "requires_python": "",
    "summary": "Honeybadger extension that can log exceptions raised by Flask or Celery, adding more context than the original  honeybadger python library.",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a1cbe61aebd34d9fc8a40e90d3faf6c5",
          "sha256": "545e263f9c5e3c3a103bdd2322134cb39bd1bb8bc44fe06014a7a2122286ae1b"
        },
        "downloads": -1,
        "filename": "Honeybadger_Extensions-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a1cbe61aebd34d9fc8a40e90d3faf6c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 9681,
        "upload_time": "2017-10-11T12:41:01",
        "url": "https://files.pythonhosted.org/packages/46/99/e00976915970ecc02085a720696688888885aa9bc5919a6a79f1fe51f538/Honeybadger_Extensions-0.1.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "942be3c64658d2ac892701f8a947c570",
          "sha256": "dd5fe36f17baaf0d55db31c4e52880c0e4ccec6b9165f5cd9d8fca12a651aefc"
        },
        "downloads": -1,
        "filename": "Honeybadger-Extensions-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "942be3c64658d2ac892701f8a947c570",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7655,
        "upload_time": "2017-10-11T12:41:02",
        "url": "https://files.pythonhosted.org/packages/1c/73/23a0e3888ba64536c64853d156e92da70237daf54799913e890ee55d676e/Honeybadger-Extensions-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a1cbe61aebd34d9fc8a40e90d3faf6c5",
        "sha256": "545e263f9c5e3c3a103bdd2322134cb39bd1bb8bc44fe06014a7a2122286ae1b"
      },
      "downloads": -1,
      "filename": "Honeybadger_Extensions-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a1cbe61aebd34d9fc8a40e90d3faf6c5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 9681,
      "upload_time": "2017-10-11T12:41:01",
      "url": "https://files.pythonhosted.org/packages/46/99/e00976915970ecc02085a720696688888885aa9bc5919a6a79f1fe51f538/Honeybadger_Extensions-0.1.0-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "942be3c64658d2ac892701f8a947c570",
        "sha256": "dd5fe36f17baaf0d55db31c4e52880c0e4ccec6b9165f5cd9d8fca12a651aefc"
      },
      "downloads": -1,
      "filename": "Honeybadger-Extensions-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "942be3c64658d2ac892701f8a947c570",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7655,
      "upload_time": "2017-10-11T12:41:02",
      "url": "https://files.pythonhosted.org/packages/1c/73/23a0e3888ba64536c64853d156e92da70237daf54799913e890ee55d676e/Honeybadger-Extensions-0.1.0.tar.gz"
    }
  ]
}