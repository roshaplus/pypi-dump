{
  "info": {
    "author": "Ralf Biehl",
    "author_email": "ra.biehl@fz-juelich.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "**The aim of jscatter is handling of experimental data and models**:\n\n* Reading and analyzing experimental data with associated attributes as temperature, wavevector, comment, ....\n* Multidimensional fitting taking the attributes (as fixed parameters) into account.\n* Providing useful models (mainly for neutron and xray scattering), but there is no limitation.\n* Plotting with paper ready quality (preferred in xmgrace, matplotlib possible ).\n* Easy model building for non programmers.\n* Python scripts to document data evaluation and used modelling.\n\n`<http://jscatter.readthedocs.io>`_\n\n**Main concept**\n\n Link data from experiment, analytical theory or simulation with attributes as .temperature, .wavevector, .pressure,....\n Methods for fitting, filter, merging,... using attributes by name.\n A extensible library with common theories for fitting or simulation.\n\n**1  Data organisation**\n\n Multiple measurements are stored in a *dataList* (subclass of list) of *dataArray*.\n dataArray is a subclass of **numpy** ndarray but with attributes and more.\n Full numpy ndarray functionality is preserved.\n Special attributes are .X,.Y, .eY...- for convenience and easy reading.\n Thus dataList represents e.g. a temperature series (as dataList) with measurements (dataArray) as list elements.\n\n**2  Read/Write data**\n\n The intention is to read everything in the file to use it later and not ignore it as in numpy.loadtxt.\n Multiple measurement files can be read at once and then filtered according to attributes to get subsets.\n An ASCII file may consist of multiple sets of data with optional attributes or comments.\n Data are a matrix of values in a file. Attribute lines have a name in front.\n Everything else is a comment.\n Thus the first two words (separated by whitespace or other) decide about assignment of a line:\n\n * string + value     -> **attribute** with attribute name + list of values\n * value  + value     -> **data line** as sequence of numbers\n * string + string    -> **comment**\n * single words       -> **comment**\n * string+\\@unique_name-> **link** to other dataArray with a unique_name\n\n Even complex ASCII files can be read with a few changes given as options.\n The ASCII file is still human readable and can be edited.\n Attributes can be generated from content of the comments (attributes which are text and not numbers).\n\n**3  Fitting**\n\n Multidimensional attribute dependent fitting\n (least square Levenberg-Marquardt, differential evolution, .... from scipy.optimize).\n Attributes are used automatically as fixed fit parameters but can be overwritten.\n See dataList.fit for detailed description.\n\n**4  Plotting**\n\n We use an adaption of xmgrace for 2D plots (a wrapper; see GracePlot) as it allows\n interactive publication ready output in high quality for 2D plots.\n The plot is stored as ASCII (.agr file) with original data and not as non-editable image as png or jpg.\n This allows a later change of the plot layout without recalculation, because data are stored as data and not as image.\n Imagine the boss/reviewer asking for a change of colors/symbol size.\n Nevertheless a small `matplotlib <https://matplotlib.org/>`_ interface is there and matplotlib can be used as it is (e.g. for 3D plots).\n\n**5  Models**\n\n A set of models/theories is included see module e.g. formel, form factor and structure factor.\n User defined models can be used (e.g. as lambda function) just within a script or in interactive session of (i)python.\n By intention the user should write own models (to include e.g. a background, instrument resolution, ...) or to add different contributions.\n Contribution by new models is welcome. Please give a publication as reference as in the provided models.\n\n\n **some special functions**::\n\n  formel.scatteringLengthDensityCalc -> electron density, coh and inc neutron scattering length, mass\n  formel.sedimentationProfile        -> approximate solution to the Lamm equation of sedimenting particles\n  formel.waterdensity                -> temperature dependent density of water (H2O/D2O) with inorganic subtstances\n  structurefactor.RMSA               -> rescaled MSA structure factor for dilute charged colloidal dispersions\n  structurefactor.hydrodynamicFunct  -> hydrodynamic function from hydrodynamic pair interaction\n  formfactor.multiShellSphere        -> formfactor of multi shell spherical particles\n  formfactor.multiShellCylinder      -> formfactor of multi shell cylinder particles\n  formfactor.orientedCloudScattering -> 2D scattering of an oriented cloud of scatterers\n  dynamic.finiteZimm                 -> Zimm model with internal friction -> intermediate scattering function\n  dynamic.diffusionHarmonicPotential -> diffusion in harmonic potential-> intermediate scattering function\n  sas.smear                          -> smearing for SANS (Pedersen), SAXS (line collimation) or by explicit Gaussian\n  sas.desmear                        -> desmearing according to the Lake algorithm for the above\n  sas.waterXrayScattering            -> Absolute scattering of water with components (salt, buffer)\n\n**6  Examples & Documentation**\n\n A number of examples how to use jscatter is provided and can be run from jscatter.\n Documantation located at `<http://jscatter.readthedocs.io>`_.\n The html documentation can be opened in browser (for dev versions) ::\n\n  import jscatter as js\n  js.showDoc()                     # open html documentation\n  js.examples.showExampleList()    # show list of examples\n  js.examples.runExample(1)        # run example by number of filename\n  js.examples.showExample(1)       # show example source code\n\n\n A short example how to use jscatter::\n\n\n    # import jscatter and numpy\n    import numpy as np\n    import jscatter as js\n    # read the data (16 sets) with attributes as q, Dtrans .... in to dataList\n    i5=js.dL('./exampleData/iqt_1hho.dat')\n    # define a model for the fit\n    diffusion=lambda A,D,t,elastic,wavevector=0:A*np.exp(-wavevector**2*D*t)+elastic\n    # do the fit\n    i5.fit(model=diffusion,                     # the fit function\n           freepar={'D':[0.08],'A':0.98},       # start parameters, \"[]\" -> independent fit\n           fixpar={'elastic':0.0},              # fixed parameters\n           mapNames={'t':'X','wavevector':'q'}) # map names from the model to names from the data\n    # single valued start parameters are the same for all dataArrays\n    # list start parameters indicate independent fitting\n    # the command line shows progress and the final result, which is found in .lastfit\n\n    # open a plot with fixed size\n    p=js.grace(1.2,0.8)\n    # plot the data with Q values in legend as symbols\n    p.plot(i5,symbol=[-1,0.4,-1],legend='Q=$q')\n    # plot fit results in lastfit as lines without symbol or legend\n    p.plot(i5.lastfit,symbol=0,line=[1,1,-1])\n    p.save('test.agr')\n\n\n\n** Released under the GPLv3 **",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://gitlab.com/biehl/jscatter",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jscatter",
    "platform": "osx",
    "project_url": "https://pypi.org/project/jscatter/",
    "release_url": "https://pypi.org/project/jscatter/0.6.7/",
    "requires_dist": [],
    "requires_python": ">=2.7",
    "summary": "Combines dataArrays with attributes for fitting, plotting and analysis including models for Xray and neutron scattering",
    "version": "0.6.7"
  },
  "releases": {
    "0.6.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "afdb0623dac960bb81eda7b9dc8305b0",
          "sha256": "dbc995df595d6d64de52082e81ec96cccfd6d60bdd449001a9da3b87b92ec5c7"
        },
        "downloads": -1,
        "filename": "jscatter-0.6.6.tar.gz",
        "has_sig": false,
        "md5_digest": "afdb0623dac960bb81eda7b9dc8305b0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6799743,
        "upload_time": "2018-01-21T14:52:10",
        "url": "https://files.pythonhosted.org/packages/df/fc/ef16528c3bd520dbad83361a8ba698050bc2b3de0d8e511e7f7486c3ff0e/jscatter-0.6.6.tar.gz"
      }
    ],
    "0.6.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7b7554d2b08b157ee0533fb855f8063c",
          "sha256": "0036d0f577ba7ad149d76d45653ff8d981f72538467a06c9a348ca1c761ad781"
        },
        "downloads": -1,
        "filename": "jscatter-0.6.7.tar.gz",
        "has_sig": false,
        "md5_digest": "7b7554d2b08b157ee0533fb855f8063c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6799852,
        "upload_time": "2018-01-21T17:58:28",
        "url": "https://files.pythonhosted.org/packages/8d/51/74f40909c99956a811eed1a3fcd86e4097f06d2fa788c23f178937e0d409/jscatter-0.6.7.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "7b7554d2b08b157ee0533fb855f8063c",
        "sha256": "0036d0f577ba7ad149d76d45653ff8d981f72538467a06c9a348ca1c761ad781"
      },
      "downloads": -1,
      "filename": "jscatter-0.6.7.tar.gz",
      "has_sig": false,
      "md5_digest": "7b7554d2b08b157ee0533fb855f8063c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6799852,
      "upload_time": "2018-01-21T17:58:28",
      "url": "https://files.pythonhosted.org/packages/8d/51/74f40909c99956a811eed1a3fcd86e4097f06d2fa788c23f178937e0d409/jscatter-0.6.7.tar.gz"
    }
  ]
}