{
  "info": {
    "author": "Filip Stefanak",
    "author_email": "f.stefanak@rare-technologies.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "Bounded Counter \u2013 Count-min Sketch frequency estimation for large sets\n======================================================================\n\n**Work in progress!**\n\nCount frequencies in massive data sets using fixed memory footprint with a smart\n[Count-min Sketch](https://en.wikipedia.org/wiki/Count%E2%80%93min_sketch) implementation.\n\nContains implementation of the basic and conservative-update Count-min Sketch table, as well as our own implementation\nusing logarithmic probabilistic counter for reducing the space requirement (*logcons1024*).\n\nA [hyperloglog](https://github.com/ascv/HyperLogLog) counter is used to estimate the cardinality of the set of elements (how many distinct elements are tracked).\n\n```python\ncms = CountMinSketch(size_mb=512) # Use 512 MB\nprint(cms.width)  # 16 777 216\nprint(cms.depth)   # 8\nprint(cms.size)  # 536 870 912 (512 MB in bytes)\n\ncms.increment(\"foo\")\ncms.increment(\"bar\")\ncms.increment(\"foo\")\n\nprint(cms[\"foo\"]) # 2\nprint(cms[\"bar\"]) # 1\nprint(cms.cardinality()) # 2\nprint(cms.sum) # 3\n```\n\nParameters\n----------\n\n-   **size_mb** Maximum size of the structure in memory in megabytes.\n-   **Width**: The number of columns (hash buckets) in a single row of the table. Must be a power of 2.\n    Significantly affects precision and memory footprint. For precise results, this should be no smaller than one\n    order of magnitude away from the cardinality of the set.\n    For significantly smaller widths, deterioration will occur.\n    For instance, to store all bigrams in English Wikipedia (1 857 420 106 bigrams, 179 413 989 unique),\n    good results can be achieved with a width of 67 108 864 (2^26) (37%).\n-   **Depth**: Number of rows, significant for the reliability of the result. Linearly affects speed of the\n    algorithm as well as its memory footprint. For best results, use a small number such as 5.\n    Using more than 8 is wasteful, better put that memory\n    in width instead or use 'basic' or 'conservative' algorithms instead.\n-   **Algorithm**: There are several algorithms available:\n    -   *basic* straightforward implementation of the Count-Min Sketch as described on\n        [Wikipedia](https://en.wikipedia.org/wiki/Count%E2%80%93min_sketch) with a cell size of 4 bytes.\n    -   *conservative* variant of the algorithm using a simple optimization which is also described on Wikipedia. Also\n        uses 4 bytes per cell.\n    -   *logcounter8* is a probabilistic counter with a value that fits into 1 byte. Values of this counter are usually\n        off by +/- 30%. This can be used for rough estimations for extremely large sets.\n    -   *logcounter1024* is a probabilistic counter with a value that fits into 2 bytes. Values of this counter are usually\n        off by +/- 2%.\n    -   *logcons1024* is a conservative-update upgrade of 'logcounter1024' which offers substantially better precision of\n        the structure.\n\nMemory\n------\nTo calculate memory footprint:\n    ( width * depth * cell_size ) + HLL size\n\nCell size is\n   - 4B for basic / conservative algorithm\n   - 1B for logcounter8\n   - 2B for logcounter1024 / logcons1024\nHLL size is 32 KB\n\nExample:\n    width 2^26 (67 108 864), depth 4, logcons1024 (2B) has 2^(26 + 2 + 1) + 32 768 = 536.9 MB\n    Can be pickled to disk with this exact size.\n",
    "docs_url": null,
    "download_url": "http://pypi.python.org/pypi/bounter",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/RaRe-Technologies/bounter",
    "keywords": "counter",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bounter",
    "platform": "any",
    "project_url": "https://pypi.org/project/bounter/",
    "release_url": "https://pypi.org/project/bounter/0.1.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Counting frequencies in large data sets with constrained memory",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7decbe9db613f5032df3a294a84e757e",
          "sha256": "84c4ddd94a7ff5ec43cdeb9976b3b0e391ba0e19c912fe381c8c62216b38739e"
        },
        "downloads": -1,
        "filename": "bounter-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7decbe9db613f5032df3a294a84e757e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6376,
        "upload_time": "2017-09-01T14:00:49",
        "url": "https://files.pythonhosted.org/packages/d3/20/e817bfeb93b0f0de8e4fcdf67e1c4fb4616b074bb3b7434ff2fbf1c2a447/bounter-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "01a4da1e97d41faf5e6f8ce36ab83b91",
          "sha256": "672e0c45404a9ffe8b21d63c951f85cb9501325e7c9fa2713672a6843a29493c"
        },
        "downloads": -1,
        "filename": "bounter-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "01a4da1e97d41faf5e6f8ce36ab83b91",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6422,
        "upload_time": "2017-09-01T14:15:26",
        "url": "https://files.pythonhosted.org/packages/d6/60/6eae3d85f2b941d25c805b66b2020a6a9aec3626b58a8138a4fb8492831b/bounter-0.1.1.tar.gz"
      }
    ],
    "1.0.1rc1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e40c62f47f0f7f5db83a04ca3682e99f",
          "sha256": "ce76d1538d3c86e8fd55071012565dd1f83f398febb4e593ff075932131cabf8"
        },
        "downloads": -1,
        "filename": "bounter-1.0.1rc1-cp27-cp27m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "e40c62f47f0f7f5db83a04ca3682e99f",
        "packagetype": "bdist_wheel",
        "python_version": "cp27",
        "size": 55378,
        "upload_time": "2017-10-17T16:27:13",
        "url": "https://files.pythonhosted.org/packages/e3/4c/7f312329ebe9df0d40532586b6cf91428252ae754ed057fe111fa7bd322a/bounter-1.0.1rc1-cp27-cp27m-win_amd64.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ef8732104a22e553d05bb99779e22993",
          "sha256": "c2e3513d6a664342dd7001e917e0827a3d80c736e93a60649804d8356e2a228a"
        },
        "downloads": -1,
        "filename": "bounter-1.0.1rc1-cp36-cp36m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "ef8732104a22e553d05bb99779e22993",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "size": 55942,
        "upload_time": "2017-10-17T16:26:56",
        "url": "https://files.pythonhosted.org/packages/0f/65/a4f9568205ab6c941046d411b11692a9f4b07a942162c5c67d7d9775b48e/bounter-1.0.1rc1-cp36-cp36m-win_amd64.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "bb829c5a48d08124be7ddb61f2fb616a",
          "sha256": "cf7d522311222c48fc433b47b01700d526819fb46597462b87eb9f8dbdea8dd9"
        },
        "downloads": -1,
        "filename": "bounter-1.0.1rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "bb829c5a48d08124be7ddb61f2fb616a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 39315,
        "upload_time": "2017-10-17T15:39:09",
        "url": "https://files.pythonhosted.org/packages/00/99/48b40e41cd4d14447baf78437bec9f0fdd015ce3a9b4d6c6526e4794ceb2/bounter-1.0.1rc1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "01a4da1e97d41faf5e6f8ce36ab83b91",
        "sha256": "672e0c45404a9ffe8b21d63c951f85cb9501325e7c9fa2713672a6843a29493c"
      },
      "downloads": -1,
      "filename": "bounter-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "01a4da1e97d41faf5e6f8ce36ab83b91",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6422,
      "upload_time": "2017-09-01T14:15:26",
      "url": "https://files.pythonhosted.org/packages/d6/60/6eae3d85f2b941d25c805b66b2020a6a9aec3626b58a8138a4fb8492831b/bounter-0.1.1.tar.gz"
    }
  ]
}