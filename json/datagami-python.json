{
  "info": {
    "author": "Datagami",
    "author_email": "hello@datagami.info",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2 :: Only"
    ],
    "description": "[![Build Status](https://travis-ci.org/datagami/datagami-python.svg?branch=master)](https://travis-ci.org/datagami/datagami-python)\n\nDatagami API for Python\n=======================\n\nBasic wrapper to access the Datagami machine learning API.  There are three main methods:\n\n*  upload_data - send data to the Datagami server\n*  train - choose a model and train it on your data\n*  predict - make a prediction using your trained model\n\nFor some types of model one or more of these steps are combined in convenience methods:\n\n* forecast1D - train a model and return a prediction\n* auto1D - train many models and retun a list ordered by accuracy of their forecasts \n\n## Examples\n\n### Linear forecast\n\n```python\ndata = range(100)\nforecast = datagami.forecast1D('<key>', '<secret>', data, kernel='Lin', steps_ahead=10)\nprint forecast['predicted']\n```\n\nOutputs:\n\n```\n[99.9999999999655,\n 100.999999999942,\n 101.999999999986,\n 102.999999999945,\n 103.999999999971,\n 104.999999999953,\n 105.999999999976,\n 106.999999999961,\n 107.999999999962,\n 108.999999999974]\n```\n\n### Noisy sine curve\n\n```python\nt = np.arange(100)\nsine = 0.1*t + np.sin(t/3) + np.random.normal(t.size)\nforecast = datagami.forecast1D('<key>', '<secret>', list(sine), kernel='SE', steps_ahead=10)\nprint forecast\n```\n\nTODO add graph",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/datagami/datagami-python",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "datagami-python",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/datagami-python/",
    "release_url": "https://pypi.org/project/datagami-python/0.0.5/",
    "requires_python": null,
    "summary": "Datagami library for Python",
    "version": "0.0.5"
  },
  "releases": {
    "0.0.1": [],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9a8c4d3843e31dd73ef740bdc7f6ce4d",
          "sha256": "4646de20c9b9862e9957f70e4e3901bc0826bdfb55bac18ce24ce45fafe60c4a"
        },
        "downloads": 2323,
        "filename": "datagami-python-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9a8c4d3843e31dd73ef740bdc7f6ce4d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8422,
        "upload_time": "2015-03-30T03:03:31",
        "url": "https://files.pythonhosted.org/packages/60/8c/1d9499adc77869c5be15b7c27d041940bd3585646a63753e2e5c87506d9b/datagami-python-0.0.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9a8c4d3843e31dd73ef740bdc7f6ce4d",
        "sha256": "4646de20c9b9862e9957f70e4e3901bc0826bdfb55bac18ce24ce45fafe60c4a"
      },
      "downloads": 2323,
      "filename": "datagami-python-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "9a8c4d3843e31dd73ef740bdc7f6ce4d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8422,
      "upload_time": "2015-03-30T03:03:31",
      "url": "https://files.pythonhosted.org/packages/60/8c/1d9499adc77869c5be15b7c27d041940bd3585646a63753e2e5c87506d9b/datagami-python-0.0.5.tar.gz"
    }
  ]
}