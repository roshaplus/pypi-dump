{
  "info": {
    "author": "Team Razorpay",
    "author_email": "developers@razorpay.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "alohomora\n=========\n\nRazorpay's Secret Credential management system.\n\nInstallation\n------------\n\nalohomora is distributed via PyPi:\n\n.. code:: shell\n    pip install razorpay.alohomora\n\nWhat?\n-----\n\nAlohomora is an opinionated project that relies on our conventions to\nintelligently fetch secrets at run-time.\n\nWe don't do our own crypto. We rely on these libraries instead:\n\n-  https://github.com/fugue/credstash\n\nThis is how the template file [STRIKEOUT:looks] will look in our app\nrepository:\n\n.. code:: j2\n\n    # {{ alohomora_managed }}\n    DB_PASSWORD      = {{ lookup('db_password') }}\n\nThis repo runs directly on the same template and generates the\nequivalent file as the output.\n\nThe steps it follows are the following:\n\n1. Figure out the tables from which to read. All secrets are stored in a\n   ``credstash-env-app`` table structure in dynamoDB.\n2. Fetch all secrets from that table using credstash\n3. Render the template with the secrets using jinja\n\nHow it Works?\n-------------\n\nAlohomora expects the secrets for any application to be stored in a\ntable called ``credstash-{env}-{app}``. The IAM roles for this table\nmust be configured by you. Once you try to render a template, alohomora\nwill do the following:\n\n1. Read the entire table and decrypt all secrets and cache them locally.\n2. Render the template with these files and 2 extra variables: ``env``,\n   and ``app`` variables.\n3. Generate a diff report with any secrets that have been updated, and\n   send it to a log file. The report should contain number of secrets\n   updated, and their keys only.\n4. Overwrite the file with the new one if *everything looks cool*.\n\nThis project uses poet for managing dependencies.\n\nConfiguration?\n--------------\n\nAlohomora is designed to be a zero-config solution. That makes sense,\nbecause you are supposed to use alohomora to fetch the actual\nconfiguration.\n\nAlohomora is coupled (as of now) with AWS-CodeDeploy and assumes the\nexistence of the following environment variables:\n\n+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------+\n| Name                      | Description                                                                                                                                                          | Value                                                                  |\n+===========================+======================================================================================================================================================================+========================================================================+\n| APPLICATION\\_NAME         | This variable contains the name of the application being deployed. This is the name the user sets in the console or AWS CLI.                                         | This is passed to the template and elsewhere as the ``app`` variable   |\n+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------+\n| DEPLOYMENT\\_GROUP\\_NAME   | This variable contains the name of the deployment group. A deployment group is a set of instances associated with an application that you target for a deployment.   | This is expected to be the same as the environment name.               |\n+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------+\n\nWe perform a few transforms:\n\n-  Change both ``app`` and ``env`` to lowercase\n-  Replace ``production`` with ``prod`` in the ``env`` name\n-  Ignore anything after ``-`` in the environment. So ``beta-birdie`` becomes ``beta``\n\nUsage\n-----\n\nPlease see the wiki regarding alohomora binary usage.\n\nLICENSE\n-------\n\n``alohomora`` is released under the same license as credstash.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/razorpay/alohomora",
    "keywords": "credstash,ansible,secrets,jinja",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "razorpay.alohomora",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/razorpay.alohomora/",
    "release_url": "https://pypi.org/project/razorpay.alohomora/0.2/",
    "requires_python": "",
    "summary": "Secret distribution tool, written as a wrapper on credstash",
    "version": "0.2"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "722f55f51b49ffad686bcf6391f9ede9",
          "sha256": "7fb5b83d47942faf76f95148acfbe295385304269f6e8bfcc4eb466552dacd05"
        },
        "downloads": 0,
        "filename": "razorpay.alohomora-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "722f55f51b49ffad686bcf6391f9ede9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5112,
        "upload_time": "2017-05-10T15:07:50",
        "url": "https://files.pythonhosted.org/packages/96/1e/fd8ff57c701bb4cc1d163c4671af2b4e00cc4dbeb70c1fbc222dd2239304/razorpay.alohomora-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b93509357f207f9ebc11490060fa4ede",
          "sha256": "def2250d1a3786032636d685f4695b0d8bc37fde88cdb417e64ab0eb48c9ba9e"
        },
        "downloads": 0,
        "filename": "razorpay.alohomora-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b93509357f207f9ebc11490060fa4ede",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5120,
        "upload_time": "2017-05-26T09:24:08",
        "url": "https://files.pythonhosted.org/packages/3f/e8/d82cd953d12308013726ea2ae7b129b3caa40bdc0699ab298c894366592e/razorpay.alohomora-0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b93509357f207f9ebc11490060fa4ede",
        "sha256": "def2250d1a3786032636d685f4695b0d8bc37fde88cdb417e64ab0eb48c9ba9e"
      },
      "downloads": 0,
      "filename": "razorpay.alohomora-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b93509357f207f9ebc11490060fa4ede",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5120,
      "upload_time": "2017-05-26T09:24:08",
      "url": "https://files.pythonhosted.org/packages/3f/e8/d82cd953d12308013726ea2ae7b129b3caa40bdc0699ab298c894366592e/razorpay.alohomora-0.2.tar.gz"
    }
  ]
}