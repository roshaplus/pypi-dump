{
  "info": {
    "author": "Tobias Schruff",
    "author_email": "tobias.schruff@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# mpls\n`mpls` is a small lightweight Python package that manages a repository of\nmatplotlib styles and makes it easy to create, edit, and use different styles.\n\nPlease, refer to the respective [matplotlib page][3] for more information on how to customize the style of your\nplots directly with matplotlib.\n\n## About\nSimilar to [seaborn][1], `mpls` styles are organized in three types: **context**, **style**, and\n**palette**.\n\nThe **context** defines size relevant properties such as figure size, size of marker\npoints, etc.\nMore details on which `rcParams` belong to the **context** can be found [here](doc/context.md).\n\nThe **style** defines the general style properties such as basic figure _colors_ and _fonts_.\nMore details on which `rcParams` belong to the **style** can be found [here](doc/style.md). \n\nThe **palette** defines the color properties such as the colormap of images or the\ncolor of markers and lines.\nMore details on which `rcParams` belong to the **palette** can be found [here](doc/palette.md).\n\n### Style files\nTechnically, each of the three style types represents a subset of the `rcParams` dict in [matplotlib][2] and\nparameters are stored in a dict in so-called _style files_. These style files are regular _json_ files, with the exception that\nit is allowed to have C-style comments in the file. A small example of a valid **context** style file is\n```javascript\n{\n    // this is a line comment\n    \"figure.figsize\": [3, 4],\n    \n    /* this is a multi-\n       line comment */\n    \"font.size\": 10\n}\n```\n\n_Note_: In the current version, parameters defined in style files are not restricted to a certain subset of `rcParams`.\nGenerally, you can define any parameter in any style file! This is useful in some cases. However, this may change in\nthe future and in order to make working with style files easy and intuitive, please restrict yourself to the\nparameters specified in the respective style file documentation.\n\n## Installation\nThe easiest way to install mpls is to use `pip`, i.e.\n```\npip install mpls\n```\n\nHowever, if you want to work with the most recent version of `mpls`, you can just clone the repository and run setuptools in\nthe folder like \n```\npython setup.py install\n```\n\n## Requirements\nThere is only one requirement\n- `matplotlib`\n\nobviously ...\n\n## Examples\nAn example where the plotting context is modified temporarily.\n```python\nimport matplotlib.pyplot as plt\nimport mpls\n\nmpls.use(context='a4', style='thesis', palette='grayscale')\n\n# create some plot\n...\n\nwith mpls.temp(context='a4-landscape'):\n   # temporarily switch to A4 landscape format\n   ...\n\n# continue with regular A4 format\n...\n```\n\nAn example of mixing `matplotlib` and `mpls` styles\n```python\nimport matplotlib.pyplot as plt\nimport mpls\n\n# mix a matplotlib style with an mpls palette\nmpls.use('dark_background', palette='grayscale')\n\n# create some plots\n...\n```\n\n## Contributing\nContributions to the `mpls` code or the stylelib in this repository are very welcome. Just issue a pull request at the github page.\n\n## Using a custom style library\nAs default `mpls` fetches styles from the stylelib folder in this repository. But it is also possible to fetch files from\nany other _remote_ or _local_ repository. The easiest way to fetch `mpls` styles from a custom style library is to provide the \n`stylelib_url` parameter when calling `use` or `temp`, e.g.\n```python\nimport mpls\nmpls.use(context='a4', style='thesis', stylelib_url='http://some.other.repository.com/stylelib/{type}_{name}.json')\n```\n\nIf you want to switch the style library for a longer session, it is more convenient to change the default `stylelib_url` in your\n`mpls` configuration, i.e.\n```python\nimport mpls\n...\n# switch to another remote stylelib temporarily\nmpls.configure(stylelib_url='http://some.other.repository.com/stylelib/{type}_{name}.json')\n\n# or switch to a local stylelib\nmpls.configure(stylelib_url='~/stylelib/{type}/{name}.json')\n```\nIt is important to specify the two placeholders `{type}` and `{name}` in the url, because internally `mpls` will \nsubstitute these placeholders with the parameters provided in the frontend methods. For example, the call\n```python\nmpls.use(context='a4')\n```\nboils down to\n```python\nmpls.get(name='a4', type='context')\n```\nwhich calls `stylelib_url.format(name=name, type=type)` (i.e. _str_.[format(*args, **kwargs)][4]) to replace the placeholders in the `stylelib_url`.\n\n### Make your changes permanent\nTo make your changes permanent, just provide the `save=True` parameter when switching the `stylelib_url` in the\nconfiguration or call `configure` later, i.e.\n```\n# save changes immediately\nmpls.configure(stylelib_url='~/path/to/stylelib/{type}_{name}.json', save=True)\n# or later\nmpls.configure(stylelib_url='~/path/to/stylelib/{type}_{name}.json')\n...\nmpls.configure(save=True)\n```\nThis will save your changes to the `mpls` configuration file and which is loaded every time `mpls` is initialized.\n\n[1]: http://seaborn.pydata.org\n[2]: http://matplotlib.org\n[3]: http://matplotlib.org/users/customizing.html\n[4]: https://docs.python.org/3.7/library/stdtypes.html?highlight=str.format#str.format\n\n",
    "docs_url": null,
    "download_url": "https://github.com/scruffy-t/mpls/archive/0.1.0.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/scruffy-t/mpls",
    "keywords": "plotting matplotlib styles",
    "license": "BSD (3-clause)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mpls",
    "platform": "",
    "project_url": "https://pypi.org/project/mpls/",
    "release_url": "https://pypi.org/project/mpls/0.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "An open library of matplotlib styles",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5c95ff6896d3e373150193a2d6ee459a",
          "sha256": "3df5e1529f67c1f8aec5c06569199e9671c11bee7af01f19f064dbd091703656"
        },
        "downloads": 0,
        "filename": "mpls-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5c95ff6896d3e373150193a2d6ee459a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5923,
        "upload_time": "2017-07-25T12:17:03",
        "url": "https://files.pythonhosted.org/packages/1b/0a/d995b419453e4cba0deaeb25838add36ae5583451926b050b9082c58ebde/mpls-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5c95ff6896d3e373150193a2d6ee459a",
        "sha256": "3df5e1529f67c1f8aec5c06569199e9671c11bee7af01f19f064dbd091703656"
      },
      "downloads": 0,
      "filename": "mpls-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5c95ff6896d3e373150193a2d6ee459a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5923,
      "upload_time": "2017-07-25T12:17:03",
      "url": "https://files.pythonhosted.org/packages/1b/0a/d995b419453e4cba0deaeb25838add36ae5583451926b050b9082c58ebde/mpls-0.1.0.tar.gz"
    }
  ]
}