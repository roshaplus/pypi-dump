{
  "info": {
    "author": "Tomi Tuhkanen",
    "author_email": "tomi.tuhkanen@iki.fi",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3"
    ],
    "description": "RuuviTag Sensor Python Package\n==============================\n\n|Codeship Status for ttu/ruuvitag-sensor| |PyPI|\n\nRuuviTag Sensor is a Python library for communicating with `RuuviTag BLE\nSensor Beacon <http://ruuvitag.com/>`__ and for decoding sensord data\nfrom broadcasted eddystone-url.\n\nRequirements\n~~~~~~~~~~~~\n\n-  RuuviTag with Weather Station firmware\n\n   -  Setup `guide <https://ruu.vi/setup/>`__\n   -  Supports `Data Format 2, 3 and\n      4 <https://github.com/ruuvi/ruuvi-sensor-protocols>`__\n\n-  Python 2.7 and 3\n\n   -  psutil\n\n      -  Package uses psutil to start and stop processes. Psutil\n         requires ``sudo apt-get install python-dev`` or\n         ``sudo apt-get install python3-dev``\n\n-  Linux\n\n   -  Package's Windows and OSX supports are only for testing and url\n      decoding\n\n-  Bluez\n\n   -  ``sudo apt-get install bluez bluez-hcidump``\n\n-  Superuser rights\n\n   -  Package uses internally hciconf, hcitool and hcidump, which\n      require superuser rights\n\nInstallation\n~~~~~~~~~~~~\n\nInstall latest released version\n\n.. code:: sh\n\n    $ pip install ruuvitag_sensor\n\nInstall latest developement version\n\n.. code:: sh\n\n    $ pip install git+https://github.com/ttu/ruuvitag-sensor\n    # Or clone this repository and install locally\n    $ pip install -e .\n\nFull installation guide for `Raspberry PI &\nRaspbian <https://github.com/ttu/ruuvitag-sensor/blob/master/install_guide_pi.md>`__\n\nUsage\n~~~~~\n\nRuuviTag sensors can be identified using MAC addresses.\n\nGet data from sensor\n''''''''''''''''''''\n\n.. code:: python\n\n    from ruuvitag_sensor.ruuvi import RuuviTagSensor\n\n    sensor = RuuviTagSensor('AA:2C:6A:1E:59:3D')\n\n    # update state from the device\n    state = sensor.update()\n\n    # get latest state (does not get it from the device)\n    state = sensor.state\n\n    print(state)\n\nGet sensor datas with callback\n''''''''''''''''''''''''''''''\n\n``get_datas`` calls the callback every time when a RuuviTag sensor\nbroadcasts data\n\n.. code:: python\n\n    from ruuvitag_sensor.ruuvi import RuuviTagSensor\n\n    def handle_data(found_data):\n        print('MAC ' + found_data[0])\n        print(found_data[1])\n\n    RuuviTagSensor.get_datas(handle_data)\n\nOptional list of macs and run flag can be passed to the get\\_datas\nfunction. Callback is called only for macs in the list and setting run\nflag to false will stop execution. If run flag is not passed, function\nwill execute forever.\n\n.. code:: python\n\n    from ruuvitag_sensor.ruuvi import RuuviTagSensor, RunFlag\n\n    counter = 10\n    # RunFlag for stopping execution at desired time\n    run_flag = RunFlag()\n\n    def handle_data(found_data):\n        print('MAC ' + found_data[0])\n        print(found_data[1])\n        global counter\n        counter = counter - 1\n        if counter < 0:\n            run_flag.running = False\n\n    # List of macs of sensors which will execute callback function\n    macs = ['AA:2C:6A:1E:59:3D', 'CC:2C:6A:1E:59:3D']\n\n    RuuviTagSensor.get_datas(handle_data, macs, run_flag)\n\nGet data for specified sensors\n''''''''''''''''''''''''''''''\n\n``get_data_for_sensors`` will collect latest data from sensors for\nspecified duration.\n\n.. code:: python\n\n    from ruuvitag_sensor.ruuvi import RuuviTagSensor\n\n    # List of macs of sensors which data will be collected\n    # If list is empty, data will be collected for all found sensors\n    macs = ['AA:2C:6A:1E:59:3D', 'CC:2C:6A:1E:59:3D']\n    # get_data_for_sensors will look data for the duration of timeout_in_sec\n    timeout_in_sec = 4\n\n    datas = RuuviTagSensor.get_data_for_sensors(macs, timeout_in_sec)\n\n    # Dictionary will have lates data for each sensor\n    print(datas['AA:2C:6A:1E:59:3D'])\n    print(datas['CC:2C:6A:1E:59:3D'])\n\nRuuviTagReactive\n''''''''''''''''\n\nReactive wrapper and background process for RuuviTagSensor get\\_datas.\nOptional MAC address list can be passed on initializer and execution can\nbe stopped with stop function.\n\n.. code:: python\n\n    from ruuvitag_sensor.ruuvi_rx import RuuviTagReactive\n\n    ruuvi_rx = RuuviTagReactive()\n\n    # Print all notifications\n    ruuvi_rx.get_subject().\\\n        subscribe(print)\n\n    # Print only last data every 10 seconds for F4:A5:74:89:16:57\n    ruuvi_rx.get_subject().\\\n        filter(lambda x: x[0] == 'F4:A5:74:89:16:57').\\\n        buffer_with_time(10000).\\\n        subscribe(lambda datas: print(datas[len(datas) - 1]))\n\n    # Execute only every time when temperature changes for F4:A5:74:89:16:57\n    ruuvi_rx.get_subject().\\\n        filter(lambda x: x[0] == 'F4:A5:74:89:16:57').\\\n        map(lambda x: x[1]['temperature']).\\\n        distinct_until_changed().\\\n        subscribe(lambda x: print('Temperature changed: {}'.format(x)))\n\nMore\n`samples <https://github.com/ttu/ruuvitag-sensor/blob/master/examples/rx.py>`__\nand simple `HTTP\nserver <https://github.com/ttu/ruuvitag-sensor/blob/master/examples/http_server_asyncio_rx.py>`__\nunder examples directory.\n\nCheck official documentation from RxPy\n`GitHub <https://github.com/ReactiveX/RxPY>`__ and `RxPY Public\nAPI <https://ninmesara.github.io/RxPY/api/operators/index.html>`__\n\nFind sensors\n''''''''''''\n\n``find_ruuvitags`` function will exeute forever and when new RuuviTag\nsensor is found it will print it's MAC address and state at that moment.\nThis function can be used with a command line applications. Logging must\nbe enabled and set to print to console.\n\n.. code:: python\n\n    from ruuvitag_sensor.ruuvi import RuuviTagSensor\n    import ruuvitag_sensor.log\n\n    ruuvitag_sensor.log.enable_console()\n\n    RuuviTagSensor.find_ruuvitags()\n\nParse data\n''''''''''\n\n.. code:: python\n\n    from ruuvitag_sensor.ruuvi import RuuviTagSensor\n    from ruuvitag_sensor.decoder import UrlDecoder\n\n    full_data = '043E2A0201030157168974A51F0201060303AAFE1716AAFE10F9037275752E76692F23416A5558314D417730C3'\n    data = full_data[26:]\n\n    # convert_data returns tuple which has Data Format type and encoded data\n    encoded = RuuviTagSensor.convert_data(data)\n\n    sensor_data = UrlDecoder().decode_data(encoded[1])\n\n    print(sensor_data)\n    # {'temperature': 25.12, 'identifier': '0', 'humidity': 26.5, 'pressure': 992.0}\n\nData Formats\n''''''''''''\n\nExample data has data from 3 sensors with different firmwares. \\* 1st is\nData Format 2 so identifier is None as sensor doesn't broadcast any\nidentifier data. \\* 2nd is Data Format 4 and it has an identifier\ncharacter. \\* 3rd is Data Format 3.\n\n.. code:: python\n\n    {\n    'CA:F7:44:DE:EB:E1': { 'temperature': 22.0, 'humidity': 28.0, 'pressure': 991.0, 'identifier': None }, \n    'F4:A5:74:89:16:57': { 'temperature': 23.24, 'humidity': 29.0, 'pressure': 991.0, 'identifier': '0' },\n    'A3:GE:2D:91:A4:1F': { 'battery': 2899, 'pressure': 1027.66, 'humidity': 20.5, 'acceleration': 63818.215675463696, 'acceleration_x': 200.34, 'acceleration_y': 0.512, 'acceleration_z': -200.42, 'temperature': 26.3}\n    }\n\nLogging and Print to console\n''''''''''''''''''''''''''''\n\nLogging can be enabled by importing ``ruuvitag_sensor.log``. Console\nprint can be enabled by calling\n``ruuvitag_sensor.log.enable_console()``. Command line application has\nconsole logging enabled by default.\n\n.. code:: python\n\n    from ruuvitag_sensor.ruuvi import RuuviTagSensor\n    import ruuvitag_sensor.log\n\n    ruuvitag_sensor.log.enable_console()\n\n    datas = RuuviTagSensor.get_data_for_sensors()\n\n    print(datas)\n\nCommand line application\n''''''''''''''''''''''''\n\n::\n\n    $ python ruuvitag_sensor -h\n\n    usage: ruuvitag_sensor [-h] [-g MAC_ADDRESS] [-f] [-l] [-s] [--version]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -g MAC_ADDRESS, --get MAC_ADDRESS\n                            Get data\n      -f, --find            Find broadcasting RuuviTags\n      -l, --latest          Get latest data for found RuuviTags\n      -s, --stream          Stream broadcasts from all RuuviTags\n      --version             show program's version number and exit\n\nTests\n-----\n\nTests use unittest.mock library, so Python 3.3. or newer is required.\n\nRun with nosetests\n\n.. code:: sh\n\n    $ pip install nose\n    $ nosetests\n\nRun with setup\n\n.. code:: sh\n\n    $ python setup.py test\n\nExamples\n--------\n\nExamples are in\n`examples <https://github.com/ttu/ruuvitag-sensor/tree/master/examples>`__\ndirectory.\n\nChange log\n----------\n\n`Change\nLog <https://github.com/ttu/ruuvitag-sensor/blob/master/CHANGELOG.md>`__\n\nLicense\n-------\n\nLicensed under the\n`MIT <https://github.com/ttu/ruuvitag-sensor/blob/master/LICENSE>`__\nLicense.\n\n.. |Codeship Status for ttu/ruuvitag-sensor| image:: https://codeship.com/projects/5d8139b0-52ae-0134-2889-02adab5d782c/status?branch=master\n   :target: https://codeship.com/projects/171611\n.. |PyPI| image:: https://img.shields.io/pypi/v/ruuvitag_sensor.svg\n   :target: https://pypi.python.org/pypi/ruuvitag_sensor",
    "docs_url": null,
    "download_url": "https://github.com/ttu/ruuvitag-sensor/tarball/0.7.0",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ttu/ruuvitag-sensor",
    "keywords": "RuuviTag BLE",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "ruuvitag_sensor",
    "platform": "any",
    "project_url": "https://pypi.org/project/ruuvitag_sensor/",
    "release_url": "https://pypi.org/project/ruuvitag_sensor/0.7.0/",
    "requires_dist": [],
    "requires_python": null,
    "summary": "Find RuuviTag sensor beacons and get data from selected sensor and decode data from eddystone url",
    "version": "0.7.0"
  },
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "aec23af1a96ce0f6b7a4e8705a231830",
          "sha256": "79f8d390b70f3f7e9dd91321d41bb3400d80e57459c265bb648adb0043d3cfc2"
        },
        "downloads": 263,
        "filename": "ruuvitag_sensor-0.2.2.zip",
        "has_sig": false,
        "md5_digest": "aec23af1a96ce0f6b7a4e8705a231830",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11480,
        "upload_time": "2017-01-03T22:37:48",
        "url": "https://files.pythonhosted.org/packages/cf/71/230c436d0bd7b3e381fc9c2e5e86f09b1de01b767ddeb4c7c08965e77e10/ruuvitag_sensor-0.2.2.zip"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0c04d5ed3c2b3d6c3238293ccb9f7233",
          "sha256": "8069036efd30d406db02a3a6813a7a32ed7a8157f45810c7dcb618254a5a11a2"
        },
        "downloads": 6,
        "filename": "ruuvitag_sensor-0.3.0.zip",
        "has_sig": false,
        "md5_digest": "0c04d5ed3c2b3d6c3238293ccb9f7233",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12793,
        "upload_time": "2017-01-28T23:09:31",
        "url": "https://files.pythonhosted.org/packages/5d/6b/7d9f67af9a4acfcdb965db25178fa2269680eaad47dfe09313b44ba7ea2b/ruuvitag_sensor-0.3.0.zip"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fed5f0e5c20828a0722b2707d81c4e5f",
          "sha256": "470a14897b4394b13edda0a2bea8f1999f079fcb4fafd56a1d163c9b87199a09"
        },
        "downloads": 5,
        "filename": "ruuvitag_sensor-0.3.1.zip",
        "has_sig": false,
        "md5_digest": "fed5f0e5c20828a0722b2707d81c4e5f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12829,
        "upload_time": "2017-01-29T16:45:16",
        "url": "https://files.pythonhosted.org/packages/e3/33/4979ed6dd79f08f31d81c758dbe2ccc299c07e7a162a9041f87ec6e7d832/ruuvitag_sensor-0.3.1.zip"
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "69b577d157a5648ad9fd9e44bb418166",
          "sha256": "17857d77b7b47a0c7f14dd4008bfa8c0b2b679e89c4f66179af44e08e0cff4a8"
        },
        "downloads": 7,
        "filename": "ruuvitag_sensor-0.3.2.zip",
        "has_sig": false,
        "md5_digest": "69b577d157a5648ad9fd9e44bb418166",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12978,
        "upload_time": "2017-01-30T19:21:18",
        "url": "https://files.pythonhosted.org/packages/00/02/492a4cc16fc22bef7f6e0f02cfad35683753767bf46f431539745874228d/ruuvitag_sensor-0.3.2.zip"
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "397cba9b1e787b496cf59420b9ed6739",
          "sha256": "0d94ab2be5e9a8c8a94469ea4c1012188e004d27f35c145d04815fff56200590"
        },
        "downloads": 8,
        "filename": "ruuvitag_sensor-0.3.3.zip",
        "has_sig": false,
        "md5_digest": "397cba9b1e787b496cf59420b9ed6739",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12958,
        "upload_time": "2017-01-31T08:15:19",
        "url": "https://files.pythonhosted.org/packages/71/0c/9745e012fa2a66be1f3fdc90826904a6df27708cd65de56e7d2fdd4f4c80/ruuvitag_sensor-0.3.3.zip"
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "aef497ec2f0a97d8f3e57d5d223e79fd",
          "sha256": "7a7c9de95a1acf674c98a07aeb919e407bc16f0e42f57b1e99c391edb5a2c586"
        },
        "downloads": 8,
        "filename": "ruuvitag_sensor-0.3.4.zip",
        "has_sig": false,
        "md5_digest": "aef497ec2f0a97d8f3e57d5d223e79fd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12949,
        "upload_time": "2017-02-01T07:55:27",
        "url": "https://files.pythonhosted.org/packages/9d/f3/e7c9598c0dc3a7d613f2125f62dc6faa24a1c969a40e5516af9efaa26cef/ruuvitag_sensor-0.3.4.zip"
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c1e7ff2a715dcfd10b41da00178bbc11",
          "sha256": "3275670fec3de7dd22cfd94091834922c435214e50b33dc5ff9e7a56b1a9e113"
        },
        "downloads": 9,
        "filename": "ruuvitag_sensor-0.4.0.zip",
        "has_sig": false,
        "md5_digest": "c1e7ff2a715dcfd10b41da00178bbc11",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14939,
        "upload_time": "2017-02-19T09:59:23",
        "url": "https://files.pythonhosted.org/packages/01/d2/644432d71763ecbc654a824040d0070dcbf845f0b68d3ade5f6988808c10/ruuvitag_sensor-0.4.0.zip"
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9a9785dd65739e8b1f47be876e792b95",
          "sha256": "ca4a3d0de9e0c677bdd4c3d5dcb1bdeaab769714dc971749b82a49d158f2b095"
        },
        "downloads": 36,
        "filename": "ruuvitag_sensor-0.5.0.zip",
        "has_sig": false,
        "md5_digest": "9a9785dd65739e8b1f47be876e792b95",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17634,
        "upload_time": "2017-03-01T22:00:23",
        "url": "https://files.pythonhosted.org/packages/ee/36/8016262be8a3e523dc2ff7b134b9587e1f1b922b0302109851ca1f436938/ruuvitag_sensor-0.5.0.zip"
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7b0c15d2f20d420ddbb24527cf5a6147",
          "sha256": "04f45c89f2bf5f31fa6c16ff0c1eabcdebf350acc1237e5b69ac1675c173b2a7"
        },
        "downloads": 0,
        "filename": "ruuvitag_sensor-0.6.0.zip",
        "has_sig": false,
        "md5_digest": "7b0c15d2f20d420ddbb24527cf5a6147",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19462,
        "upload_time": "2017-05-05T19:01:56",
        "url": "https://files.pythonhosted.org/packages/95/da/e685615a13aeeb9bb0d8e0f45c126039efa6a0e317f1b5844045fc2db473/ruuvitag_sensor-0.6.0.zip"
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a2777e09717e40c092cb2d43acc79fee",
          "sha256": "e3598065dbfc85a11de049677fcfae8656d697a27a14d176befb1322c250d947"
        },
        "downloads": 0,
        "filename": "ruuvitag_sensor-0.7.0.zip",
        "has_sig": false,
        "md5_digest": "a2777e09717e40c092cb2d43acc79fee",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20180,
        "upload_time": "2017-06-28T21:27:20",
        "url": "https://files.pythonhosted.org/packages/d9/19/4108b74b78ffd3e9a0b7150df00b018003cd5b2c02d4600aa6a1c4188848/ruuvitag_sensor-0.7.0.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a2777e09717e40c092cb2d43acc79fee",
        "sha256": "e3598065dbfc85a11de049677fcfae8656d697a27a14d176befb1322c250d947"
      },
      "downloads": 0,
      "filename": "ruuvitag_sensor-0.7.0.zip",
      "has_sig": false,
      "md5_digest": "a2777e09717e40c092cb2d43acc79fee",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 20180,
      "upload_time": "2017-06-28T21:27:20",
      "url": "https://files.pythonhosted.org/packages/d9/19/4108b74b78ffd3e9a0b7150df00b018003cd5b2c02d4600aa6a1c4188848/ruuvitag_sensor-0.7.0.zip"
    }
  ]
}