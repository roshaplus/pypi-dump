{
  "info": {
    "author": "Edouard Theron",
    "author_email": "edouard@edtheron.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "=================\nPY-MIDI LIBRARY\n=================\n\n**A library for communicating via MIDI standard using Python3**\n\n*Warning: To use with Python3 only*. The library doesn't work with Python2.\n\n*Published under GNU License*\n\n**This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY**\n\nDo not hesitate to use Issues if necessary.\n\ned [at] edtheron [dot] me\n\n.. sectum::\n.. contents:: Table of Contents\n\n1) PURPOSE\n***********\nThis Python3 library has been made in order to communicate easily with any MIDI devices. The only requirement is to have a serial\ninterface on your computer. It's on this interface that you must connect MIDI cables to establish a communication between your\nmachine and the MIDI devices.\n\nThe py-midi library allows users to build and/or read MIDI messages without having to worry on formating them before sending and/or after receiving.\n\nMIDI (Musical Instrument Digital Interface) is a standard used for making easy for instruments, computers and other electronic devices\nto communicate.\n\nThis library is able to deal with any kind of MIDI messages, on any of the 16 possible channels.\n\nFor more details on the MIDI standard, see Wikipedia MIDI page https://en.wikipedia.org/wiki/MIDI\n\n2) INSTALLATION\n***************\nYou can install easily the package using Python Package Index. You just have to run the following command::\n\n\t$ python3 -m pip install py-midi\n\nor::\n\n\t$ sudo pip3 install py-midi\n\nThen you can import the package to your program::\n\n\timport midi\n\n3) CONTENT OF THE LIBRARY\n*************************\nA) Class MidiConnector\n======================\nCreates an interface between your program and the serial port of the machine. You instanciate by giving the path to the serial port. Example::\n\n\tc = MidiConnector('/dev/serial0') # should be the path used on RaspberryPi 3\n\nIf you *don't want* the MidiConnector.read() method to block for ever if it receives nothing, use the keyword argument **timeout** to set up a maximum duration (seconds) of blocking::\n\n    c = MidiConnector('/dev/serial0', timeout=5)\n\n*(Note: The timeout is only used for reading, not for writing)*\n\nFor reading messages received via MIDI IN, use the method read() as follow::\n\n    msg = c.read()\n\nFor sending messages via MIDI OUT::\n\n    c.write(msg)\n\nBy default, reading is done in **OMNI** mode, whereas writing is specific to a channel. However, you can override the default\nbehavior. For further details, run::\n\n    help(MidiConnector)\n\n\nB) Classes for different type of MIDI messages\n==============================================\n8 types of MIDI message (including SysEx) are managed by the package.\nHere are the exhaustive list, as well as how to instanciate them.\n*Note: none of the arguments passed to instanciate a message type must exceed 127 (255 if SysEx data), or be negative*\n\n* NoteOff(note_number, velocity)\n* NoteOn(note_number, velocity)\n* PolyphonicAftertouch(note_number, pressure)\n* ChannelAftertouch(pressure)\n* ControlChange(control_number, value)\n* ProgramChange(program_number)\n* PitchWheel(least_signifcant_byte, most_significant_byte)\n* SysEx(manufacturer_id, data1, data2..., data-N)\n\nC) Class Message\n================\nRepresents a MIDI message, with all its properties:\n\n+--------------+------------------------------------------------------------+\n| Attribute    |  Represents                                                |\n+==============+============================================================+\n| type         | The type of MIDI message: ControlChange, ProgramChange,    |\n|              | NoteOff, NoteOn, etc...                                    |\n+--------------+------------------------------------------------------------+\n| channel      | The channel used to send or the channel on which it has    |\n|              | been sent (from 1 to 16)                                   |\n+--------------+------------------------------------------------------------+\n| status       | The value of first message byte                            |\n|              |                                                            |\n+--------------+------------------------------------------------------------+\n| data1        | The value of second message byte                           |\n|              |                                                            |\n+--------------+------------------------------------------------------------+\n| data2        | The value of third message byte                            |\n|              | *Note: some types carry only 2 bytes*                      |\n+--------------+------------------------------------------------------------+\n\nIf you want to build a MIDI message, you need to use positionnal arguments, first the type, then the channel::\n\n    note_on = NoteOn(68, 102)\n    channel = 1\n    msg = Message(note_on, channel)\n\nThen you can access other properties, e.g. for a message type NoteOn::\n    >>> msg.velocity\n    102\n    >>> hex(msg.status) # The first byte of a NoteOn sent on channel 1 will be 1001 0000\n    '0x90'\n\n\n4) EXAMPLES\n*************\nBefore doing anything, import the package to your program::\n\n\timport midi\n\nThen depending on what you need to do, follow these examples.\n\nA) Reading MIDI messages (via MIDI IN device)\n=============================================\n\nFirst, I need to set up a connector object. It requires at least one argument: the port used for the serie interface::\n\n\tc = midi.Connector('path/to/serial/port')\n\nSuper easy. Now I just have to read through it::\n\n\tmsgIn = c.read() # return any MIDI messages received\n\nNote that this will block until a MIDI message is received (thus it can block for ever if your loop is not properly set up)\nTo set a timeout, you need to specify it when building the connector::\n\n\tc_timeout = midi.Connector('path/to/serial/port', timeout=10)\n\t# will block for max 10 sec when reading, or until a message is received \n\nYou can also specify a channel for listening::\n\n\tmsgInChannel8 = c.read(8) # return MIDI messages received on channel 8 only. Ignore the rest\n\nB) Sending MIDI messages (via MIDI OUT device)\n==============================================\n\nFirst you need to create the type of message you need to send (either a Control Change, a Note On, etc...)\n\nLet's say I want to create a Control Change that sets the value 127 to the control number 12::\n\n\tcc = midi.ControlChange(12, 127)\n\nI want to send the message on channel 15::\n\n\tchannel = 15\n\nNow I have everything I need to build up a MIDI message::\n\n\tmsgOut = midi.Message(cc, channel)\n\nI create the connector for sending the message (of course!)::\n\n\tc = midi.Connector('path/to/serial/port')\n\tc.write(msgOut)\n\nDo not hesitate to read helpers for further details, for example::\n\n\t>>> help(midi.MidiConnector)\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/edouardtheron/py-midi",
    "keywords": "package library midi music digital serial interface",
    "license": "GNU",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-midi",
    "platform": "",
    "project_url": "https://pypi.org/project/py-midi/",
    "release_url": "https://pypi.org/project/py-midi/1.2.2/",
    "requires_python": "",
    "summary": "A package for sending and receiving MIDI messages easily.",
    "version": "1.2.2"
  },
  "releases": {
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "89e2cf9ece93cb3a6ae9d79b8d8b5908",
          "sha256": "f6ca55150aca2f03362fd3377993ab3b3f183e345678a13c0e8c00aa0ed5df2d"
        },
        "downloads": 18,
        "filename": "py_midi-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "89e2cf9ece93cb3a6ae9d79b8d8b5908",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 11706,
        "upload_time": "2017-03-07T20:02:53",
        "url": "https://files.pythonhosted.org/packages/e5/04/cf233b487df6a3d37a9fcdb72efca15bbe04053ca8fc3cf6df9d9d11b985/py_midi-1.1.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "797d9492347f5332ec0974791f570ea0",
          "sha256": "d1378fb4278ae4dcb9c5a132b7388ce3f3074dc4959af5d00281ce3cf126ecc1"
        },
        "downloads": 19,
        "filename": "py-midi-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "797d9492347f5332ec0974791f570ea0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7955,
        "upload_time": "2017-03-07T20:02:55",
        "url": "https://files.pythonhosted.org/packages/30/d5/cf8e8415b341a84c21e2a3b5cfaa9337acdd0b1a83eab3fbb66f0fd389ea/py-midi-1.1.1.tar.gz"
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1aa81f0ae368802ccc2dde7b40dab3fe",
          "sha256": "737939a9d955aa023141ec18ef09cb01564ef294661dc5687bc72f14b9178a67"
        },
        "downloads": 20,
        "filename": "py_midi-1.1.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "1aa81f0ae368802ccc2dde7b40dab3fe",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 11288,
        "upload_time": "2017-03-10T00:01:29",
        "url": "https://files.pythonhosted.org/packages/73/3d/dba1e6cd91350155fdd694e549d7ed4999ecd246222876295af36cb7235d/py_midi-1.1.2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "bccc587ffcb15c05aee887da3950ded5",
          "sha256": "3c1ac7472230e406db441da43f11b1181f6ca0dfb37b9fa7ae2b3caddf1523d5"
        },
        "downloads": 21,
        "filename": "py-midi-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bccc587ffcb15c05aee887da3950ded5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7890,
        "upload_time": "2017-03-10T00:01:31",
        "url": "https://files.pythonhosted.org/packages/78/97/6382f56613c8a6da358d102b5a94dfd154c67a1a8722f67c0f89b109caa0/py-midi-1.1.2.tar.gz"
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "02f013a4da90daa9e7c1b0c67d7106ba",
          "sha256": "280444db3de3db9b8b6d0b340ebbd52aa02acdeeb408511234dbf167d5bb361b"
        },
        "downloads": 17,
        "filename": "py_midi-1.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "02f013a4da90daa9e7c1b0c67d7106ba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 12093,
        "upload_time": "2017-03-10T17:37:06",
        "url": "https://files.pythonhosted.org/packages/c6/6e/0a0fd91b4d0abddda4da529efd44f927c857fcde2691e252405a4e7a18b5/py_midi-1.1.3-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "093b2cfd7a8339bcd59f6b8790ddea47",
          "sha256": "01a5f59e99260ada2eac765c148563b3ec18d445bf0522a834ad5ca7f5eb515f"
        },
        "downloads": 17,
        "filename": "py-midi-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "093b2cfd7a8339bcd59f6b8790ddea47",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7885,
        "upload_time": "2017-03-10T17:47:01",
        "url": "https://files.pythonhosted.org/packages/4b/cb/2ee0e38a551f0ad2ee98cb3f85a6c0e4c335be1018a7ceaa9388bf1f4a43/py-midi-1.1.3.tar.gz"
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "03fd6238e2d150db747c04ad186341c8",
          "sha256": "374171aecc1faf11f576886ab23b8ab752b146cbfe23a610c11e66583e539c55"
        },
        "downloads": 21,
        "filename": "py_midi-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "03fd6238e2d150db747c04ad186341c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 13430,
        "upload_time": "2017-03-12T01:06:03",
        "url": "https://files.pythonhosted.org/packages/94/12/bcf887ec8be98b5d5f6f19d5105cebe709db1e60787f466a871bf242d19a/py_midi-1.2.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8f516e0e5400036746ab1cd75e75ae95",
          "sha256": "a7f1db44d5fc3eda122afb7f8510aea04fea9718050e022a4897d457553dcca8"
        },
        "downloads": 20,
        "filename": "py-midi-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8f516e0e5400036746ab1cd75e75ae95",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8710,
        "upload_time": "2017-03-12T01:09:42",
        "url": "https://files.pythonhosted.org/packages/70/29/3e4361be77c899b0becbd4a953ab36788b1eb7146834475c47f32a1a13bd/py-midi-1.2.1.tar.gz"
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5cd99697a694292aee817432cc093ce6",
          "sha256": "d1f033c21219e66d4758a45215470d10c8d0a0e5e5df10c0ba43a35f36c15998"
        },
        "downloads": 25,
        "filename": "py_midi-1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5cd99697a694292aee817432cc093ce6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 13430,
        "upload_time": "2017-03-12T01:24:03",
        "url": "https://files.pythonhosted.org/packages/46/13/c03f11dee41285f97097b20234fe40c85afa4cf054db6dde687f4e18cfc0/py_midi-1.2.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "75188906752e0c953f422290339e66cf",
          "sha256": "64b8dd2732b943fbc9062985fb970032eb18c75c85d6382a5a27dc84077de1b3"
        },
        "downloads": 20,
        "filename": "py-midi-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "75188906752e0c953f422290339e66cf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8710,
        "upload_time": "2017-03-12T01:24:06",
        "url": "https://files.pythonhosted.org/packages/a7/71/5d407c63fee38979fced030e76897de8777911ebbd6800d47c54fddc58f4/py-midi-1.2.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5cd99697a694292aee817432cc093ce6",
        "sha256": "d1f033c21219e66d4758a45215470d10c8d0a0e5e5df10c0ba43a35f36c15998"
      },
      "downloads": 25,
      "filename": "py_midi-1.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5cd99697a694292aee817432cc093ce6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 13430,
      "upload_time": "2017-03-12T01:24:03",
      "url": "https://files.pythonhosted.org/packages/46/13/c03f11dee41285f97097b20234fe40c85afa4cf054db6dde687f4e18cfc0/py_midi-1.2.2-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "75188906752e0c953f422290339e66cf",
        "sha256": "64b8dd2732b943fbc9062985fb970032eb18c75c85d6382a5a27dc84077de1b3"
      },
      "downloads": 20,
      "filename": "py-midi-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "75188906752e0c953f422290339e66cf",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8710,
      "upload_time": "2017-03-12T01:24:06",
      "url": "https://files.pythonhosted.org/packages/a7/71/5d407c63fee38979fced030e76897de8777911ebbd6800d47c54fddc58f4/py-midi-1.2.2.tar.gz"
    }
  ]
}