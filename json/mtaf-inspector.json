{
  "info": {
    "author": "Martin McCrorey",
    "author_email": "martin.mccrorey@verizon.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing"
    ],
    "description": "MTAF Inspector\n--------------\n\nThe MTAF Inspector is part of the  Mobile Test Automation Framework (MTAF),\na package for creating regression tests that use Selenium and Appium to test\nweb and mobile applications. (See \"Mobile Test Automation Framework\", below).\n\nMTAF Inspector creates a graphical user interface (GUI) to capture application\nscreenshots and calculate unique partial xpaths for displayed elements. The\nresulting xpaths are converted to an abbreviated format called \"zpath\" to make\nthem shorter (Android xpaths can be quite long).\n\nThe user can select elements individually with a mouse click, or click and\ndrag a selection rectangle on the displayed screenshot to narrow down the\nlist of partial zpaths shown on the screen. Resource ID's are also displayed,\nbut some elements won't have one, and a resource ID may not represent a unique\nelement on the screenshot.\n\nClicking on an ID or xpath will outline the corresponding element(s) on the\nscreenshot, and copy the ID or zpath value to the main GUI.\n\nFrom the main GUI, the user can query the Android device using the ID or\nzpath value to get a reference to the selected elements, and then obtain\nadditional information about the elements such as text content, position,\nsize, etc.\n\n----\n\nFeatures\n========\n- Graphical tool to assist in designing end-to-end tests on Android devices\n- Works with Android device emulators, or Android devices via USB connection\n- Interactively determines valid locators for screen elements, for use with\n  Appium\n- When no Appium server is present, grabs screenshots and xml via ADB\n- When used with Appium server, finds and manipulates visible screen\n  elements\n- Records Appium interactions in a log file\n- Loads plugins to extend menus, zpaths and GUI elements for specific\n  applications (examples to be added in future releases)\n\n----\n\nRunning MTAF Inspector\n======================\n\nAfter running \"pip install mtaf-inspector\", the mtaf-inspector executable\nPython script will be on the current path.\n\nBefore running mtaf-inspector, verify that these requirements have been met:\n\n- adb can be found on the current path\n- an Appium server is running on the local machine\n- an Android device or emulator is listed in the output of \"adb devices\"\n\nFrom the command prompt, just run \"mtaf-inspector\". MTAF Inspector will create\na directory for temporary files (default is '~/.MtafInspector')\n\nMTAF Inspector presents a GUI with these components (from top to bottom):\n\n- a menu bar with drop-down menus for both Appium and ADB operations\n- buttons and other controls for performing various operations that require Appium\n- an input field for entering arbitrary Python commands that will be run in the global context when the \"exec\" button is clicked\n- a scrolling text window that displays captured standard output\n- a scrolling text window that displays recorded commands\n- a bar with \"screenshot\" and \"quit\" buttons\n\nThe buttons and controls requiring Appium, along with the Appium drop-down menu,\nare disabled until Appium is started. Click \"Start Appium\" on the menu\nbar to start the Appium client and enable the GUI elements that require Appium.\n\nClicking the \"screenshot\" button will capture a screenshot from the Android\ndevice and display it in a new window, along with two locator columns.  The left\ncolumn will list any resource id's present in the current view. The right\ncolumn will display a minimum unique zpath for each element in the current\nview.\n\nIf Appium has been started, it will be used to obtain the screenshot and xml\nfrom the device; otherwise adb will be used.\n\nNot all elements have resource IDs, and some resource IDs may be shared by\nmultiple elements. Clicking a resource id will:\n\n- highlight any elements on the screenshot that have that resource id attribute\n- load the \"find element\" locator field in the main GUI with the resource ID\n- highlight the corresponding zpaths in the right column\n\nBy design, each element has one corresponding minimum zpath. Clicking a zpath\nwill:\n\n- highlight the corresponding element on the zpath\n- load the \"find element\" locator field in the main GUI with the zpath\n- if the element has a resource ID attribute, the corresponding button in the resource ID column will be highlighted\n\n----\n\nMobile Test Automation Framework\n================================\n\nThe Mobile Test Automation Framework is a Python Page Object Model framework,\ncurrently being used to test web and Android applications. It supports\nunittest and BDD test case organization, with detailed logging of test\nstepws and reporting of test results. It is also intended to eventually\nsupport iOS applications with some additional modules.\n\nThe first release of the MTAF (package name: \"mtaf\") includes the MTAF\nInspector, described above. The rest of the framework's components will\nbe included once they have been refactored for general release. See\nhttp://pypi.org/project/mtaf/ for details.\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/mccrorey48/mtaf-inspector",
    "keywords": "python,android,appium,selenium,adb,uiautomator,viewer,inspector,gui,locator,screenshot,xpath,resource_id,page object model",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mtaf-inspector",
    "platform": "",
    "project_url": "https://pypi.org/project/mtaf-inspector/",
    "release_url": "https://pypi.org/project/mtaf-inspector/0.1.10/",
    "requires_dist": [
      "mtaf (==1.0.10)"
    ],
    "requires_python": "",
    "summary": "Appium Uiautomator Xpath ResourceId Mobile Automation Tool",
    "version": "0.1.10"
  },
  "releases": {
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4b0a92b70518976e8742f8419fc79c37",
          "sha256": "02043775034620c1ba1afafebdfae5ca6e0a28eec9f9b051acf726e1bfd9e893"
        },
        "downloads": -1,
        "filename": "mtaf_inspector-0.1.10-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b0a92b70518976e8742f8419fc79c37",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 6772,
        "upload_time": "2018-01-08T16:26:14",
        "url": "https://files.pythonhosted.org/packages/a3/85/2e352b19930a3b8135054c840b68d1fc989d2308d7bb46f44ee8deadf00a/mtaf_inspector-0.1.10-py2-none-any.whl"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "db8a599d9489cd5f34967db3e9280cd5",
          "sha256": "1907469489cd0997d4b15103a45c42b160387dd29c2cfb99a845fc47795657a5"
        },
        "downloads": -1,
        "filename": "mtaf_inspector-0.1.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db8a599d9489cd5f34967db3e9280cd5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 6979,
        "upload_time": "2018-01-04T22:41:39",
        "url": "https://files.pythonhosted.org/packages/c0/91/9f52cb512278bf863b9d2209227fb000a3da1a72f83902654f03ef8b205d/mtaf_inspector-0.1.5-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4b0a92b70518976e8742f8419fc79c37",
        "sha256": "02043775034620c1ba1afafebdfae5ca6e0a28eec9f9b051acf726e1bfd9e893"
      },
      "downloads": -1,
      "filename": "mtaf_inspector-0.1.10-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "4b0a92b70518976e8742f8419fc79c37",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 6772,
      "upload_time": "2018-01-08T16:26:14",
      "url": "https://files.pythonhosted.org/packages/a3/85/2e352b19930a3b8135054c840b68d1fc989d2308d7bb46f44ee8deadf00a/mtaf_inspector-0.1.10-py2-none-any.whl"
    }
  ]
}