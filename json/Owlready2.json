{
  "info": {
    "author": "Lamy Jean-Baptiste (Jiba)",
    "author_email": "jibalamy@free.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Owlready2\n=========\n\n.. image:: https://readthedocs.org/projects/owlready2/badge/?version=latest\n   :target: http://owlready2.readthedocs.io/en/latest/\n   :alt: documentation\n\n.. image:: http://www.lesfleursdunormal.fr/static/_images/owlready_downloads.svg\n   :target: http://www.lesfleursdunormal.fr/static/informatique/pymod_stat_en.html\n   :alt: download stats\n\n\n         \nOwlready2 is a module for ontology-oriented programming in Python 3, including an optimized RDF quadstore.\n\nOwlready2 can:\n\n - Import OWL 2.0 ontologies in NTriples, RDF/XML or OWL/XML format.\n\n - Export OWL 2.0 ontologies to NTriples or RDF/XML.\n\n - Manipulates ontology classes, instances and properties transparently,\n   as if they were normal Python objects.\n\n - Add Python methods to ontology classes.\n\n - Perform automatic classification of classes and instances, using the HermiT reasoner.\n\n - Tested up to 100 millions of RDF triples (but can potentially support more).\n\n - In addition, the quadstore is compatible with the RDFlib Pyton module, which can be used to perform SPARQL queries.\n   \nOwlready has been created by Jean-Baptiste Lamy at the LIMICS reseach lab.\nIt is available under the GNU LGPL licence v3.\nIf you use Owlready in scientific works, **please cite the following article**:\n\n   **Lamy JB**.\n   `Owlready: Ontology-oriented programming in Python with automatic classification and high level constructs for biomedical ontologies. <http://www.lesfleursdunormal.fr/_downloads/article_owlready_aim_2017.pdf>`_\n   **Artificial Intelligence In Medicine 2017**;80C:11-28\n   \nIn case of troubles, questions or comments, please use this Forum/Mailing list: http://owlready.8326.n8.nabble.com\n\n\n  \nWhat can I do with Owlready2?\n-----------------------------\n\nLoad an ontology from a local repository, or from Internet:\n\n::\n\n  >>> from owlready2 import *\n  >>> onto_path.append(\"/path/to/your/local/ontology/repository\")\n  >>> onto = get_ontology(\"http://www.lesfleursdunormal.fr/static/_downloads/pizza_onto.owl\")\n  >>> onto.load()\n\nCreate new classes in the ontology, possibly mixing OWL constructs and Python methods:\n\n::\n\n  >>> class NonVegetarianPizza(onto.Pizza):\n  ...   equivalent_to = [\n  ...     onto.Pizza\n  ...   & ( onto.has_topping.some(onto.MeatTopping)\n  ...     | onto.has_topping.some(onto.FishTopping)\n  ...     ) ]\n  ...   def eat(self): print(\"Beurk! I'm vegetarian!\")\n\nAccess ontology class, and create new instances / individuals:\n\n::\n\n  >>> onto.Pizza\n  pizza_onto.Pizza\n  >>> test_pizza = onto.Pizza(\"test_pizza_owl_identifier\")\n  >>> test_pizza.has_topping = [ onto.CheeseTopping(),\n  ...                            onto.TomatoTopping(),\n  ...                            onto.MeatTopping  () ]\n\nExport to RDF/XML file:\n\n::\n\n  >>> test_onto.save()\n\nPerform reasoning, and classify instances and classes:\n\n::\n\n   >>> test_pizza.__class__\n   onto.Pizza\n   \n   >>> # Execute HermiT and reparent instances and classes\n   >>> sync_reasoner()\n   \n   >>> test_pizza.__class__\n   onto.NonVegetarianPizza\n   >>> test_pizza.eat()\n   Beurk! I'm vegetarian !\n\nFor more documentation, look at the doc/ directories in the source.\n\nChangelog\n---------\n\nversion 1 - 0.2\n***************\n\n* Fix sync_reasonner and Hermit call under windows (thanks Clare Grasso)\n\nversion 1 - 0.3\n***************\n\n* Add warnings\n* Accepts ontologies files that do not ends with '.owl'\n* Fix a bug when loading ontologies including concept without a '#' in their IRI\n\nversion 2 - 0.1\n***************\n\n* Full rewrite, including an optimized quadstore\n\nversion 2 - 0.2\n***************\n\n* Implement RDFXML parser and generator in Python (no longer use rapper or rdflib)\n* Property chain support\n* Add ntriples_diff.py utility\n* Bugfixes:\n  - Fix breaklines in literal when exporting to NTriples\n\nversion 2 - 0.3\n***************\n\n* Add destroy_entity() global function\n* Greatly improve performance for individual creation\n* When searching, allow to use \"*\" as a jocker for any object\n* Bugfixes:\n  - Fix nested intersections and unions\n  - Fix boolean\n  - Fix bug when removing parent properties\n  - Fix parsing of rdf:ID\n  - Fix multiple loading of the same ontology whose IRI is modified by OWL file, using an ontology alias table\n  - Fix ClassConstruct.subclasses()\n  - Check for properties with multiple incompatible classes (e.g. ObjectProperty and Annotation Property)\n\nversion 2 - 0.4\n***************\n\n* Add methods for querying the properties defined for a given individuals, the inverse properties\n  and the relation instances (.get_properties(), .get_inverse_properties() and .get_relations())\n* Add .indirect() method to obtain indirect relations (considering subproperties, transivitity,\n  symmetry and reflexibity)\n* search() now takes into account inheritance and inverse properties\n* search() now accepts 'None' for searching for entities without a given relation\n* Optimize ontology loading by recreating SQL index from scratch\n* Optimize SQL query for transitive quadstore queries, using RECURSIVE Sqlite3 statements\n* Optimize SQL query for obtaining the number of RDF triples (ie len(default_world.graph))\n* Add Artificial Intelligence In Medicine scientific article in doc and Readme \n* Bugfixes:\n  - Fix properties loading when reusing an ontology from a disk-stored quadstore\n  - Fix _inherited_property_value_restrictions() when complement (Not) is involved\n  - Fix restrictions with cardinality\n  - Fix doc on AllDisjoint / AllDifferent\n\n\nLinks\n-----\n\nOwlready2 on BitBucket (development repository): https://bitbucket.org/jibalamy/owlready2\n\nOwlready2 on PyPI (Python Package Index, stable release): https://pypi.python.org/pypi/Owlready2\n\nDocumentation: http://owlready2.readthedocs.io/\n\nForum/Mailing list: http://owlready.8326.n8.nabble.com\n\n\nContact \"Jiba\" Jean-Baptiste Lamy:\n\n::\n\n  <jean-baptiste.lamy *@* univ-paris13 *.* fr>\n  LIMICS\n  University Paris 13, Sorbonne Paris Cit\u00e9\n  Bureau 149\n  74 rue Marcel Cachin\n  93017 BOBIGNY\n  FRANCE\n",
    "docs_url": "https://pythonhosted.org/Owlready2/",
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://bitbucket.org/jibalamy/owlready2",
    "keywords": "",
    "license": "LGPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Owlready2",
    "platform": "",
    "project_url": "https://pypi.org/project/Owlready2/",
    "release_url": "https://pypi.org/project/Owlready2/0.4/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A module for ontology-oriented programming in Python: load OWL 2.0 ontologies as Python objects, modify them, save them, and perform reasoning via HermiT. Includes an optimized RDF quadstore.",
    "version": "0.4"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1e9c43a07ccc5d8ec2eb5fd2d34cfb86",
          "sha256": "65889745bbff9e3b9c4015f5ecc312ccdb9793181c9773ad469382bd65a9d771"
        },
        "downloads": 0,
        "filename": "Owlready2-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1e9c43a07ccc5d8ec2eb5fd2d34cfb86",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6701569,
        "upload_time": "2017-05-03T15:13:09",
        "url": "https://files.pythonhosted.org/packages/52/02/5a18f271c722919a315dff8418239ca8870eded2fecef3f104a0c0bcaee7/Owlready2-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c4fd36eab9fa881394e53b837c541966",
          "sha256": "0ed582740a7389b2ea19151cb91c549198072f123576628b76d658614b739d3d"
        },
        "downloads": 0,
        "filename": "Owlready2-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c4fd36eab9fa881394e53b837c541966",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6716574,
        "upload_time": "2017-05-24T18:43:22",
        "url": "https://files.pythonhosted.org/packages/a8/39/064ceb21eb5cb8837d5d5b9b33bfca07b7a621d27daa3e4bf9c699099ae6/Owlready2-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7b65b4a1e9050d4dc7bafe7c1af17c80",
          "sha256": "a6ab8683720d76d478a0f2d002fb0565a06e3492923790ac84ef1531e95da829"
        },
        "downloads": 0,
        "filename": "Owlready2-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7b65b4a1e9050d4dc7bafe7c1af17c80",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6720594,
        "upload_time": "2017-06-30T15:26:49",
        "url": "https://files.pythonhosted.org/packages/34/81/e9add1c87b55538eadf57f39bd92c1f69343ec741c97afa76e15b2e7e321/Owlready2-0.3.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "87342edc3f88e578b2b783c8b521c77b",
          "sha256": "8a4e7356701d1b4d236839e9b7514e1c2844f9b087f83e77d9ad8e2dd3bd23db"
        },
        "downloads": 0,
        "filename": "Owlready2-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "87342edc3f88e578b2b783c8b521c77b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6731567,
        "upload_time": "2017-08-26T09:12:00",
        "url": "https://files.pythonhosted.org/packages/ed/f1/5bbd4e6fd4f0340a2bebdf74bb6235b096cdb6af58de6f1fbed26904c162/Owlready2-0.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "87342edc3f88e578b2b783c8b521c77b",
        "sha256": "8a4e7356701d1b4d236839e9b7514e1c2844f9b087f83e77d9ad8e2dd3bd23db"
      },
      "downloads": 0,
      "filename": "Owlready2-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "87342edc3f88e578b2b783c8b521c77b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6731567,
      "upload_time": "2017-08-26T09:12:00",
      "url": "https://files.pythonhosted.org/packages/ed/f1/5bbd4e6fd4f0340a2bebdf74bb6235b096cdb6af58de6f1fbed26904c162/Owlready2-0.4.tar.gz"
    }
  ]
}