{
  "info": {
    "author": "thegrymek",
    "author_email": "andrzej.grymkowski@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "=======================\nPython Disk Collections\n=======================\n\n.. image:: https://img.shields.io/pypi/v/python-disk-collections.svg\n  :target: https://pypi.python.org/pypi/python-disk-collections\n\n.. image:: https://img.shields.io/pypi/l/python-disk-collections.svg\n  :target: https://pypi.python.org/pypi/python-disk-collections\n\n.. image:: https://img.shields.io/pypi/pyversions/python-disk-collections.svg\n  :target: https://pypi.python.org/pypi/python-disk-collections\n\n.. image:: https://travis-ci.org/thegrymek/python-disk-collections.svg?branch=master\n  :target: https://travis-ci.org/thegrymek/python-disk-collections\n\n.. image:: https://coveralls.io/repos/github/thegrymek/python-disk-collections/badge.svg\n  :target: https://coveralls.io/github/thegrymek/python-disk-collections\n\n\nModule contains class with extended python list that stores items at disk.\nBy default items before save are pickled and compressed. Use that list\nas usual list!\n\nIntend of package was to create generic list that stores really big list of items\nthat does not fit in memory and to avoid usage of external cache and local database\nstorages.\n\n\n.. code-block:: python\n\n    >>> from diskcollections.iterables import FileList\n    >>> flist = FileList()\n    >>> flist.extend([1, 2, 3])\n    >>> flist.append(4)\n    >>> flist\n    [1, 2, 3, 4]\n    >>> flist[2]\n    3\n    >>> flist2 = flist[:]  # copy makes new FileList\n    >>> my_list = list(flist)  # now its simple list\n\n\nThere are available more ways to serialize items.\n\n\n.. code-block:: python\n\n    >>> from diskcollections.iterables import FileList\n    >>> from diskcollections.handlers import (\n        PickleHandler,  # pickle items\n        PickleZLibHandler,  # pickle + compress items\n        JsonHandler, # convert to json items\n        JsonZLibHandler  # convert to json + compress items\n    )\n    >>> from functools import partial\n    >>> JsonFileList = partial(FileList, handler_class=JsonHandler)\n    >>> flist = JsonFileList()\n    >>> flist.append({'a': 1, 'b': 2, 'c': 3})\n    >>> flist[0]\n    {u'a': 1, u'b': 2, u'c': 3}\n\n\nInstallation\n------------\n\nTo install package type\n\n.. code-block:: bash\n\n    $ pip install python-disk-collections\n\n\nHow it works\n------------\n\nIn order to implement your serializer create class with methods:\n**dumps** and **loads** or import interface.\n\n\n.. code-block:: python\n\n    >>> from diskcollections.interfaces import IHandler\n\n    class IHandler:\n\n    @staticmethod\n    def dumps(obj):\n        \"\"\"Converts object to string.\n\n        :param obj: any python object\n        :return: dumped string\n        \"\"\"\n        raise NotImplementedError\n\n    @staticmethod\n    def loads(obj):\n        \"\"\"Restored dumped string into python object.\n\n        :param obj: Object stored as string\n        :return: python object restored from dump\n        \"\"\"\n        raise NotImplementedError\n\nAll handlers from example above implements interface **IHandler**.\n\nUnder the hood, **FileList** for storage items uses *tempfile.mktemp* (in python2)\nor *tempfile.TemporaryDirectory* (in python3). It means, that every list\nhas own unique directory, placed likely in */tmp/*.\nWhen list is removed by garbage collector, all items that was stored are lost.\n\n\nContribute\n----------\n\n#. Fork repository on GitHub to start making your changes to the **master** branch (or branch off of it).\n#. Write tests that prove that bug or future works as expected\n#. Check your code and tests with **tox**\n#. Send a pull request!\n\n\nLicense\n-------\n\nPython-Disk-Collection is under MIT license, see LICENSE for more details.\n\n\n",
    "docs_url": null,
    "download_url": "https://github.com/thegrymek/python-disk-collections/archive/0.0.1.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/thegrymek/python-disk-collections",
    "keywords": "pickle,cache,collections,list,json,zlib",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-disk-collections",
    "platform": "",
    "project_url": "https://pypi.org/project/python-disk-collections/",
    "release_url": "https://pypi.org/project/python-disk-collections/0.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Package provides class FileList that behaves like bulltin list but keeps your items at disk.",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2b5d220b438fcdc81a5224ef76e4849e",
          "sha256": "5f7295155462cb28a8ad927b7d5ca115895ea02e9b6ecc2c5aeb23f6b6f54149"
        },
        "downloads": -1,
        "filename": "python_disk_collections-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b5d220b438fcdc81a5224ef76e4849e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 13553,
        "upload_time": "2017-11-01T23:41:55",
        "url": "https://files.pythonhosted.org/packages/d0/6d/78defe65a7ab75beddfdae405feaba5746f0644c170b0b528366d996bd16/python_disk_collections-0.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "841e8f990b4aea38ee82f8267e0d9633",
          "sha256": "caaa686675212a0a97d8c48d67d0a1ae2fd862c0c8774b42d32c354be7da6132"
        },
        "downloads": -1,
        "filename": "python-disk-collections-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "841e8f990b4aea38ee82f8267e0d9633",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8010,
        "upload_time": "2017-11-01T23:41:56",
        "url": "https://files.pythonhosted.org/packages/4a/18/354a1318607b8f454c868b927f56b0c1b41f6b967b40c33df7060b14fdab/python-disk-collections-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2b5d220b438fcdc81a5224ef76e4849e",
        "sha256": "5f7295155462cb28a8ad927b7d5ca115895ea02e9b6ecc2c5aeb23f6b6f54149"
      },
      "downloads": -1,
      "filename": "python_disk_collections-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2b5d220b438fcdc81a5224ef76e4849e",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 13553,
      "upload_time": "2017-11-01T23:41:55",
      "url": "https://files.pythonhosted.org/packages/d0/6d/78defe65a7ab75beddfdae405feaba5746f0644c170b0b528366d996bd16/python_disk_collections-0.0.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "841e8f990b4aea38ee82f8267e0d9633",
        "sha256": "caaa686675212a0a97d8c48d67d0a1ae2fd862c0c8774b42d32c354be7da6132"
      },
      "downloads": -1,
      "filename": "python-disk-collections-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "841e8f990b4aea38ee82f8267e0d9633",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8010,
      "upload_time": "2017-11-01T23:41:56",
      "url": "https://files.pythonhosted.org/packages/4a/18/354a1318607b8f454c868b927f56b0c1b41f6b967b40c33df7060b14fdab/python-disk-collections-0.0.1.tar.gz"
    }
  ]
}