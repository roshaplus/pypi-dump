{
  "info": {
    "author": "Robert Hafner",
    "author_email": "tedivm@tedivm.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Version Control"
    ],
    "description": "GitConsensus\n============\n\nThis simple project allows github projects to be automated. It uses\n\u201creaction\u201d as a voting mechanism to automatically merge (or close) pull\nrequests.\n\nConsensus Rules\n---------------\n\nThe file ``.gitconsensus.yaml`` needs to be placed in the repository to\nbe managed. Any rule set to ``false`` or ommitted will be skipped.\n\n.. code:: yaml\n\n    # Which version of the consensus rules to use\n    version: 2\n\n    # Add extra labels for the vote counts and age when merging\n    extra_labels: false\n\n    # Don't count any vote from a user who votes for multiple options\n    prevent_doubles: true\n\n    # Minimum number of voters\n    quorum: 5\n\n    # Required percentage of \"yes\" votes (ignoring abstentions)\n    threshold: 0.65\n\n    # Only process votes by contributors\n    contributors_only: false\n\n    # Only process votes by collaborators\n    collaborators_only: false\n\n    # When defined only process votes from these github users\n    whitelist:\n      - alice\n      - carol\n\n    # When defined votes from these users will be ignored\n    blacklist:\n      - bob\n      - dan\n\n    # Number of hours after last action (commit or opening the pull request) before issue can be merged\n    mergedelay: 24\n\n    # Number of votes from contributors at which the mergedelay gets ignored, assuming no negative votes.\n    delayoverride: 10\n\n    # When `delayoverride` is set this value is the minimum hours without changes before the PR will be merged\n    mergedelaymin: 1\n\n    # Require this amount of time in hours before a PR with a license change will be merged.\n    licensedelay: 72\n\n    # Require this amount of time in hours before a PR with a consensus change will be merged.\n    consensusdelay: 72\n\n    # Do not allow license changes to be merged.\n    licenselock: true\n\n    # Do not allow consensus changes to be merged.\n    consensuslock: true\n\n    # Number of hours after last action (commit or opening the pull request) before issue is autoclosed\n    timeout: 720\n\nVoting\n------\n\nVotes are made by using reactions on the top level comment of the Pull\nRequest.\n\n+------------+---------+\n| Reaction   | Vote    |\n+============+=========+\n| |+1|       | Yes     |\n+------------+---------+\n| |-1|       | No      |\n+------------+---------+\n| |confused| | Abstain |\n+------------+---------+\n\nLabel Overrides\n---------------\n\nAny Pull Request with a ``WIP`` or ``DONTMERGE`` label (case\ninsensitive) will be skipped over.\n\nCommands\n--------\n\nAuthentication\n~~~~~~~~~~~~~~\n\n.. code:: shell\n\n    gitconsensus auth\n\nYou will be asked for your username, password, and 2fa token (if\nconfigured). This will be used to get an authentication token from\nGithub that will be used in place of your username and password (which\nare never saved).\n\nMerge\n~~~~~\n\nMerge all pull requests that meet consensus rules.\n\n.. code:: shell\n\n    gitconsensus merge USERNAME REPOSITORY\n\nClose\n~~~~~\n\nClose all pull requests that have passed the \u201ctimeout\u201d date (if it is\nset).\n\n.. code:: shell\n\n    gitconsensus close USERNAME REPOSITORY\n\nInfo\n~~~~\n\nGet detailed infromation about a specific pull request and what rules it\npasses.\n\n.. code:: shell\n\n    gitconsensus info USERNAME REPOSITORY PR_NUMBER\n\nForce Close\n~~~~~~~~~~~\n\nClose specific pull request, including any labels and comments that\nnormally would be sent.\n\n.. code:: shell\n\n    gitconsensus forceclose USERNAME REPOSITORY PR_NUMBER\n\nForce Merge\n~~~~~~~~~~~\n\nMerge specific pull request, including any labels and comments that\nnormally would be sent.\n\n.. code:: shell\n\n    gitconsensus forcemerge USERNAME REPOSITORY PR_NUMBER\n\n.. |+1| image:: https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\n.. |-1| image:: https://assets-cdn.github.com/images/icons/emoji/unicode/1f44e.png\n.. |confused| image:: https://assets-cdn.github.com/images/icons/emoji/unicode/1f615.png\n\n\n\n",
    "docs_url": null,
    "download_url": "https://github.com/tedivm/gitconsensus/archive/v0.4.0.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/tedivm/gitconsensus",
    "keywords": "automation github consensus git",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gitconsensus",
    "platform": "",
    "project_url": "https://pypi.org/project/gitconsensus/",
    "release_url": "https://pypi.org/project/gitconsensus/0.4.0/",
    "requires_dist": [
      "wheel; extra == 'dev'",
      "twine; extra == 'dev'",
      "pypandoc; extra == 'dev'",
      "requests (<2.19,>=2.18.0)",
      "PyYAML (<3.13,>=3.12)",
      "github3.py (<0.10,>=0.9.6)",
      "click (<6.0,>=5.0)"
    ],
    "requires_python": ">=3",
    "summary": "Automate Github Pull Requests using Reactions",
    "version": "0.4.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "253749ff231126e9e58af3f832453e3c",
          "sha256": "f7e5bade420bcad972e1b2b70403f8445e19849d4b110c0d40f8142569171e92"
        },
        "downloads": -1,
        "filename": "gitconsensus-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "253749ff231126e9e58af3f832453e3c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 9114,
        "upload_time": "2017-08-22T06:53:21",
        "url": "https://files.pythonhosted.org/packages/07/fc/70f15a4443878b3bf15ff39e1e8048fc2f9a0811d0d487d18e7815b70b38/gitconsensus-0.1.0-py3-none-any.whl"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f12d4002ddc69337b86bf24af51d4715",
          "sha256": "03ad1e4e46e153e15fe2c63306a37f935af3a5a466e1d6684ba225e26dcd374b"
        },
        "downloads": -1,
        "filename": "gitconsensus-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f12d4002ddc69337b86bf24af51d4715",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 9241,
        "upload_time": "2017-08-23T02:23:21",
        "url": "https://files.pythonhosted.org/packages/be/ef/b09a8ff6d727d4a051a95550a2fb0e4ff46f6cc2acab9d969ccca81828ab/gitconsensus-0.2.0-py3-none-any.whl"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "121040b5c75b947934652f6146976ecd",
          "sha256": "544f292d517ce58a7642f2d1ce96e110a303ef54b60bb8f6eba9b95361135d7d"
        },
        "downloads": -1,
        "filename": "gitconsensus-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "121040b5c75b947934652f6146976ecd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 9562,
        "upload_time": "2017-08-23T03:24:35",
        "url": "https://files.pythonhosted.org/packages/28/9f/515361f224a6c4cf3cf859e7c70bd88f97d244cb5c8091e08d46bd7fa8af/gitconsensus-0.3.0-py3-none-any.whl"
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d2a41153dc307870a7a13ce8e2f5973f",
          "sha256": "3a1e437dff27e7ac3eb5feb2a04ce7f1506406d6a0a114f2a04f32599f61f05e"
        },
        "downloads": -1,
        "filename": "gitconsensus-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2a41153dc307870a7a13ce8e2f5973f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 11038,
        "upload_time": "2018-01-21T05:15:16",
        "url": "https://files.pythonhosted.org/packages/a8/19/ac7c8937c21a05018e2ec29f26d318957460c2316546a5a8e1a52ae5ed0a/gitconsensus-0.4.0-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d2a41153dc307870a7a13ce8e2f5973f",
        "sha256": "3a1e437dff27e7ac3eb5feb2a04ce7f1506406d6a0a114f2a04f32599f61f05e"
      },
      "downloads": -1,
      "filename": "gitconsensus-0.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d2a41153dc307870a7a13ce8e2f5973f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 11038,
      "upload_time": "2018-01-21T05:15:16",
      "url": "https://files.pythonhosted.org/packages/a8/19/ac7c8937c21a05018e2ec29f26d318957460c2316546a5a8e1a52ae5ed0a/gitconsensus-0.4.0-py3-none-any.whl"
    }
  ]
}