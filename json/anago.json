{
  "info": {
    "author": "Hironsan",
    "author_email": "hiroki.nakayama.py@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\nanaGo\n=====\n\n***anaGo*** is a state-of-the-art library for sequence labeling using\nKeras.\n\nanaGo can performs named-entity recognition (NER), part-of-speech\ntagging (POS tagging), semantic role labeling (SRL) and so on.\n\nFeature Support\n---------------\n\nanaGo provide following features: \\* learning your own task without any\nknowledge. \\* defining your own model. \\* downloading learned model for\nmany tasks. (e.g. NER, POS Tagging, etc...)\n\nInstall\n-------\n\nTo install anaGo, simply run:\n\n::\n\n    $ pip install anago\n\nor install from the repository:\n\n::\n\n    $ git clone https://github.com/Hironsan/anago.git\n    $ cd anago\n    $ pip install -r requirements.txt\n\nGet Started\n-----------\n\nImport\n~~~~~~\n\nFirst, import the necessary modules:\n\n.. code:: python\n\n    import os\n    import anago\n    from anago.data.reader import load_data_and_labels, load_word_embeddings\n    from anago.data.preprocess import prepare_preprocessor\n    from anago.config import ModelConfig, TrainingConfig\n\nThey include loading modules, a preprocessor and configs.\n\nAnd set parameters to use later:\n\n.. code:: python\n\n    DATA_ROOT = 'data/conll2003/en/ner'\n    SAVE_ROOT = './models'  # trained model\n    LOG_ROOT = './logs'     # checkpoint, tensorboard\n    embedding_path = './data/glove.6B/glove.6B.100d.txt'\n    model_config = ModelConfig()\n    training_config = TrainingConfig()\n\nLoading data\n~~~~~~~~~~~~\n\nAfter importing the modules, read data for training, validation and\ntest:\n\n.. code:: python\n\n    train_path = os.path.join(DATA_ROOT, 'train.txt')\n    valid_path = os.path.join(DATA_ROOT, 'valid.txt')\n    test_path = os.path.join(DATA_ROOT, 'test.txt')\n    x_train, y_train = load_data_and_labels(train_path)\n    x_valid, y_valid = load_data_and_labels(valid_path)\n    x_test, y_test = load_data_and_labels(test_path)\n\nAfter reading the data, prepare preprocessor and pre-trained word\nembeddings:\n\n.. code:: python\n\n    p = prepare_preprocessor(x_train, y_train)\n    embeddings = load_word_embeddings(p.vocab_word, embedding_path, model_config.word_embedding_size)\n    model_config.vocab_size = len(p.vocab_word)\n    model_config.char_vocab_size = len(p.vocab_char)\n\nNow we are ready for training :)\n\nTraining a model\n~~~~~~~~~~~~~~~~\n\nLet's train a model. For training a model, we can use ***Trainer***.\nTrainer manages everything about training. Prepare an instance of\nTrainer class and give train data and valid data to train method:\n\n::\n\n    trainer = anago.Trainer(model_config, training_config, checkpoint_path=LOG_ROOT, save_path=SAVE_ROOT,\n                            preprocessor=p, embeddings=embeddings)\n    trainer.train(x_train, y_train, x_valid, y_valid)\n\nIf training is progressing normally, progress bar will be displayed as\nfollows:\n\n.. code:: commandline\n\n    ...\n    Epoch 3/15\n    702/703 [============================>.] - ETA: 0s - loss: 60.0129 - f1: 89.70\n    703/703 [==============================] - 319s - loss: 59.9278   \n    Epoch 4/15\n    702/703 [============================>.] - ETA: 0s - loss: 59.9268 - f1: 90.03\n    703/703 [==============================] - 324s - loss: 59.8417   \n    Epoch 5/15\n    702/703 [============================>.] - ETA: 0s - loss: 58.9831 - f1: 90.67\n    703/703 [==============================] - 297s - loss: 58.8993   \n    ...\n\nEvaluation for a model\n~~~~~~~~~~~~~~~~~~~~~~\n\nTo evaluate the trained model, we can use ***Evaluator***. Evaluator\nperforms evaluation. Prepare an instance of Evaluator class and give\ntest data to eval method:\n\n::\n\n    weights = os.path.join(SAVE_ROOT, 'model_weights.h5')\n\n    evaluator = anago.Evaluator(model_config, weights, save_path=SAVE_ROOT, preprocessor=p)\n    evaluator.eval(x_test, y_test)\n\nAfter evaluation, F1 value is output:\n\n.. code:: commandline\n\n    - f1: 90.67\n\nTagging a sentence\n~~~~~~~~~~~~~~~~~~\n\nTo tag any text, we can use ***Tagger***. Prepare an instance of Tagger\nclass and give text to tag method:\n\n::\n\n    weights = os.path.join(SAVE_ROOT, 'model_weights.h5')\n    tagger = anago.Tagger(model_config, weights, save_path=SAVE_ROOT, preprocessor=p)\n\nLet's try tagging a sentence, \"President Obama is speaking at the White\nHouse.\" We can do it as follows:\n\n.. code:: python\n\n    >>> sent = 'President Obama is speaking at the White House.'\n    >>> print(tagger.tag(sent))\n    [('President', 'O'), ('Obama', 'PERSON'), ('is', 'O'),\n     ('speaking', 'O'), ('at', 'O'), ('the', 'O'),\n     ('White', 'LOCATION'), ('House', 'LOCATION'), ('.', 'O')]\n    >>> print(tagger.get_entities(sent))\n    {'Person': ['Obama'], 'LOCATION': ['White House']}\n\nReference\n---------\n\nThis library uses bidirectional LSTM + CRF model based on `Neural\nArchitectures for Named Entity\nRecognition <https://arxiv.org/abs/1603.01360>`__ by Lample, Guillaume,\net al., NAACL 2016.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Hironsan/anago",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "anago",
    "platform": "",
    "project_url": "https://pypi.org/project/anago/",
    "release_url": "https://pypi.org/project/anago/0.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Sequence labeling library using Keras.",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c06ce6df4afccfadc5d7e4cdb4097391",
          "sha256": "7455d37aa22160072fe20da31ce35492b53f477a08fdafe2c8bea5e7e1ef6b39"
        },
        "downloads": 0,
        "filename": "anago-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c06ce6df4afccfadc5d7e4cdb4097391",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 20874,
        "upload_time": "2017-08-31T06:45:31",
        "url": "https://files.pythonhosted.org/packages/58/c8/98c8238dd79827abc030e85d54b7d631766142d86ff925d166ec369c2a53/anago-0.0.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b92452128c44757cd2fe34d55841bf3a",
          "sha256": "de1baad520e6a7bc507839b692ba70755b45d51c49aad6a24288a673a500cc1f"
        },
        "downloads": 0,
        "filename": "anago-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b92452128c44757cd2fe34d55841bf3a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15335,
        "upload_time": "2017-08-31T06:45:29",
        "url": "https://files.pythonhosted.org/packages/92/75/03483690d09fe348c9fba91f354c20809d08c63332d540dd8cd77c472eba/anago-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c06ce6df4afccfadc5d7e4cdb4097391",
        "sha256": "7455d37aa22160072fe20da31ce35492b53f477a08fdafe2c8bea5e7e1ef6b39"
      },
      "downloads": 0,
      "filename": "anago-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c06ce6df4afccfadc5d7e4cdb4097391",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 20874,
      "upload_time": "2017-08-31T06:45:31",
      "url": "https://files.pythonhosted.org/packages/58/c8/98c8238dd79827abc030e85d54b7d631766142d86ff925d166ec369c2a53/anago-0.0.1-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "b92452128c44757cd2fe34d55841bf3a",
        "sha256": "de1baad520e6a7bc507839b692ba70755b45d51c49aad6a24288a673a500cc1f"
      },
      "downloads": 0,
      "filename": "anago-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b92452128c44757cd2fe34d55841bf3a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15335,
      "upload_time": "2017-08-31T06:45:29",
      "url": "https://files.pythonhosted.org/packages/92/75/03483690d09fe348c9fba91f354c20809d08c63332d540dd8cd77c472eba/anago-0.0.1.tar.gz"
    }
  ]
}