{
  "info": {
    "author": "Amazon Web Services",
    "author_email": "aws-cryptools@amazon.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Security",
      "Topic :: Security :: Cryptography"
    ],
    "description": "######################\naws-encryption-sdk-cli\n######################\n\nThis command line tool can be used to encrypt and decrypt files and directories using the `AWS Encryption SDK`_.\n\nThe latest full documentation can be found at `Read the Docs`_.\n\nFind us on `GitHub`_.\n\n***************\nGetting Started\n***************\n\nRequired Prerequisites\n======================\n\n* Python 2.7+ or 3.4+\n* aws-encryption-sdk >= 1.3.2\n\nInstallation\n============\n\n.. note::\n\n   If you have not already installed `cryptography`_, you might need to install additional prerequisites as\n   detailed in the `cryptography installation guide`_ for your operating system.\n\n   .. code::\n\n       $ pip install aws-encryption-sdk-cli\n\n*****\nUsage\n*****\n\nInput and Output\n================\n\nFor the most part, the behavior of ``aws-encryption-cli`` in handling files is based on that\nof GNU CLIs such as ``cp``.  A qualifier to this is that when encrypting a file, if a\ndirectory is provided as the destination, rather than creating the source filename\nin the destination directory, a suffix is appended to the destination filename. By\ndefault the suffix is ``.encrypted`` when encrypting and ``.decrypted`` when decrypting,\nbut a custom suffix can be provided by the caller if desired.\n\nIf a destination file already exists, the contents will be overwritten.\n\n.. table::\n\n    +------------------------------+---------------------------------------+\n    | **Allowed input/output       | **output**                            |\n    | pairings**                   +------------+----------+---------------+\n    |                              | **stdout** | **file** | **directory** |\n    +-----------+------------------+------------+----------+---------------+\n    | **input** |   **stdin**      | Y          | Y        |               |\n    |           +------------------+------------+----------+---------------+\n    |           |  **single file** | Y          | Y        | Y             |\n    |           +------------------+------------+----------+---------------+\n    |           | **pattern match**|            |          | Y             |\n    |           +------------------+------------+----------+---------------+\n    |           |   **directory**  |            |          | Y             |\n    +-----------+------------------+------------+----------+---------------+\n\nIf the source includes a directory and the ``--recursive`` flag is set, the entire\ntree of the source directory is replicated in the target directory.\n\nParameter Values\n----------------\nSome arguments accept additional parameter values.  These values must be provided in the\nform of ``key=value`` as demonstrated below.\n\n.. code-block:: sh\n\n   --encryption-context key1=value1 key2=value2 \"key 3=value with spaces\"\n   --master-keys provider=aws-kms key=$KEY_ID_1 key=$KEY_ID_2\n   --caching capacity=3 max_age=80.0\n\n\nEncryption Context\n------------------\n\nEncrypt\n```````\n\nThe `encryption context`_ is an optional, but recommended, set of key-value pairs that contain\narbitrary nonsecret data. The encryption context can contain any data you choose, but it\ntypically consists of data that is useful in logging and tracking, such as data about the file\ntype, purpose, or ownership.\n\nParameters may be provided using `Parameter Values`_.\n\n.. code-block:: sh\n\n   --encryption-context key1=value1 key2=value2 \"key 3=value with spaces\"\n\nDecrypt\n```````\n\nIf an encryption context is provided on decrypt, it is instead used to require that the message\nbeing decrypted was encrypted using an encryption context that matches the specified requirements.\n\nIf ``key=value`` elements are provided, the decryption will only continue if the encryption\ncontext found in the encrypted message contains matching pairs.\n\n.. code-block:: sh\n\n   --encryption-context required_key=required_value classification=secret\n\nIf bare ``key`` elements are provided, the decryption will continue if those keys are found,\nregardless of the values. ``key`` and ``key=value`` elements can be mixed.\n\n.. code-block:: sh\n\n   --encryption-context required_key classification=secret\n\n.. warning::\n\n   If encryption context requirements are not satisfied by the ciphertext message, the\n   message will not be decrypted. One side effect of this is that if you chose to write\n   the plaintext output to a file and that file already exists, it will be deleted when\n   we stop the decryption.\n\nOutput Metadata\n---------------\nIn addition to the actual output of the operation, there is metadata about the operation\nthat can be useful. This metadata includes some information about the operation as well as\nthe complete header data from the ciphertext message.\n\nThe metadata for each operation is written to the specified file as a single line containing\nformatted JSON, so if a single command performs multiple file operations, a separate line\nwill be written for each operation. There are three operating modes:\n\n* ``--metadata-output FILE`` : Writes the metadata output to ``FILE`` (can be ``-`` for stdout\n  as long as main output is not stdout). Default behavior is to append the metadata entry to\n  the end of ``FILE``.\n* ``--overwrite-metadata`` : Force overwriting the contents of ``FILE`` with the new metadata.\n* ``-S/--suppress-metadata`` : Output metadata is suppressed.\n\nMetadata Contents\n`````````````````\nThe metadata JSON contains the following fields:\n\n* ``\"mode\"`` : ``\"encrypt\"``/``\"decrypt\"``\n* ``\"input\"`` : Full path to input file (or ``\"<stdin>\"`` if stdin)\n* ``\"output\"`` : Full path to output file (or ``\"<stdout>\"`` if stdout)\n* ``\"header\"`` : JSON representation of `message header data`_\n* ``\"header_auth\"`` : JSON representation of `message header authentication data`_ (only on decrypt)\n\nSkipped Files\n~~~~~~~~~~~~~\nIf encryption context checks fail when attempting to decrypt a file, the metadata contains\nadditional fields:\n\n* ``skipped`` : ``true``\n* ``reason`` : ``\"Missing encryption context key or value\"``\n* ``missing_encryption_context_keys`` : List of required encryption context keys that were\n  missing from the message.\n* ``missing_encryption_context_pairs`` : List of required encryption context key-value pairs\n  missing from the message.\n\n\nMaster Key Provider\n-------------------\nInformation for configuring a master key provider must be provided.\n\nParameters may be provided using `Parameter Values`_.\n\nRequired parameters:\n\n* **provider** *(default: aws-encryption-sdk-cli::aws-kms)* : Indicator of the master key\n  provider to use.\n\n    * See `Advanced Configuration`_ for more information on using other master key providers.\n\n* **key** *(at least one required, many allowed)* : Identifier for a master key to be used.\n  Must be an identifier understood by the specified master key provider.\n\n    * If using ``aws-kms`` to decrypt, `you must not specify a key`_.\n\nAny additional parameters supplied are collected into lists by parameter name and\npassed to the master key provider class when it is instantiated. Custom master key providers\nmust accept all arguments as prepared. See `Advanced Configuration`_ for more information.\n\nMultiple master keys can be defined using multiple instances of the ``key`` argument.\n\nMultiple master key providers can be defined using multiple ``--master-keys`` groups.\n\nIf multiple master key providers are defined, the first one is treated as the primary.\n\nIf multiple master keys are defined in the primary master key provider, the first one is treated\nas the primary. The primary master key is used to generate the data key.\n\nThe below logic is used to construct all master key providers. We use ``KMSMasterKeyProvider``\nas an example.\n\n.. code-block:: python\n\n   # With parameters:\n   --master-keys provider=aws-kms key=$KEY_1 key=$KEY_2\n\n   # KMSMasterKeyProvider is called as:\n   key_provider = KMSMasterKeyProvider()\n   key_provider.add_master_key($KEY_1)\n   key_provider.add_master_key($KEY_2)\n\n.. code-block:: sh\n\n   # Single KMS CMK\n   --master-keys provider=aws-kms key=$KEY_ARN_1\n\n   # Two KMS CMKs\n   --master-keys provider=aws-kms key=$KEY_ARN_1 key=$KEY_ARN_2\n\n   # KMS Alias by name in default region\n   --master-keys provider=aws-kms key=$ALIAS_NAME\n\n   # KMS Alias by name in two specific regions\n   --master-keys provider=aws-kms key=$ALIAS_NAME region=us-west-2\n   --master-keys provider=aws-kms key=$ALIAS_NAME region=eu-central-1\n\nAWS KMS\n```````\nIf you want to use the ``aws-kms`` master key provider, you can either specify that\nas the provider or simply not specify a provider and allow the default value to be used.\n\nThere are some configuration options which are unique to the ``aws-kms`` master key provider:\n\n* **profile** : Providing this configuration value will use the specified `named profile`_\n  credentials.\n* **region** : This allows you to specify the target region.\n\nThe logic for determining which region to use is shown in the pseudocode below:\n\n.. code-block:: python\n\n   if key ID is an ARN:\n      use region identified in ARN\n   else:\n      if region is specified:\n         use region\n      else if profile is specified and profile has a defined region:\n         use region defined in profile\n      else:\n         use system default region\n\nAdvanced Configuration\n``````````````````````\nIf you want to use a different master key provider, that provider must register a\n`setuptools entry point`_. You can find an example of registering this entry point in the\n``setup.py`` for this package.\n\nWhen a provider name is specifed in a call to ``aws-encryption-cli``, the appropriate entry\npoint for that name is used.\n\nHandling Multiple Entry Points\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIf multiple entry points are registered for a given name, you will need to specify the package\nthat registered the entry point you want to use.\n\nIn order to specify the package name, use the format: ``PACKAGE_NAME::ENTRY_POINT``.\n\n\n* ``provider=aws-kms``\n* ``provider=aws-encryption-sdk-cli::aws-kms``\n\nIf you supply only an entry point name and there is only one entry point registered for that\nname, that entry point will be used.\n\nIf you supply only an entry point name and there is more than one entry point registered\nfor that name, an error will be raised showing you all of the packages that have an entry\npoint registered for that name.\n\nIf you supply both a package and an entry point name, that exact entry point will be used.\nIf it is not accessible, an error will be raised showing you all of the packages that have\nan entry point registered for that name.\n\nExternal Master Key Providers\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThe entry point name use must not contain the string ``::``. This is used as a namespace\nseparator as descibed in `Handling Multiple Entry Points`_.\n\nWhen called, these entry points must return an instance of a master key provider. They must\naccept the parameters prepared by the CLI as described in `Master Key Provider`_.\n\nThese entry points must be registered in the ``aws_encryption_sdk_cli.master_key_providers``\ngroup.\n\nIf the entry point raises a ``aws_encryption_sdk_cli.exceptions.BadUserArgumentError``, the\nCLI will present the raised error message to the user to indicate bad user input.\n\nData Key Caching\n----------------\nData key caching is optional, but if used then the parameters noted as required must\nbe provided.  For detailed information about using data key caching with the AWS\nEncryption SDK, see the `data key caching documentation`_.\n\nParameters may be provided using `Parameter Values`_.\n\nAllowed parameters:\n\n* **capacity** *(required)* : Number of entries that the cache will hold.\n* **max_age** *(required)* :  Determines how long each entry can remain in the cache, beginning when it was added.\n* **max_messages_encrypted** :  Determines how long each entry can remain in the cache, beginning when it was added.\n* **max_bytes_encrypted** : Specifies the maximum number of bytes that a cached data key can encrypt.\n\n\nLogging and Verbosity\n---------------------\nThe ``-v`` argument allows you to tune the verbosity of the built-in logging to your desired level.\nIn short, the more ``-v`` arguments you supply, the more verbose the output gets.\n\n* unset : ``aws-encryption-cli`` logs all warnings, all dependencies only log critical messages\n* ``-v`` :  ``aws-encryption-cli`` performs moderate logging, all dependencies only log critical messages\n* ``-vv`` :  ``aws-encryption-cli`` performs detailed logging, all dependencies only log critical messages\n* ``-vvv`` :  ``aws-encryption-cli`` performs detailed logging, all dependencies perform moderate logging\n* ``-vvvv`` :  ``aws-encryption-cli`` performs detailed logging, all dependencies perform detailed logging\n\n.. table::\n\n   +-----------------------------------------------+\n   |           python logging levels               |\n   +===========+====================+==============+\n   | verbosity | aws-encryption-cli | dependencies |\n   | flag      |                    |              |\n   +-----------+--------------------+--------------+\n   | unset     | WARNING            | CRITICAL     |\n   +-----------+--------------------+--------------+\n   | -v        | INFO               | CRITICAL     |\n   +-----------+--------------------+--------------+\n   | -vv       | DEBUG              | CRITICAL     |\n   +-----------+--------------------+--------------+\n   | -vvv      | DEBUG              | INFO         |\n   +-----------+--------------------+--------------+\n   | -vvvv     | DEBUG              | DEBUG        |\n   +-----------+--------------------+--------------+\n\n\nConfiguration Files\n-------------------\nAs with any CLI where the configuration can get rather complex, you might want to use a configuration\nfile to define some or all of your desired behavior.\n\n.. warning::\n\n   There is a `known issue with config file parsing in Windows`_. Including single or double quote\n   characters in a config file on Windows will fail until we fix this issue. Please let us know\n   if this impacts you in the linked GitHub issue.\n\nConfiguration files are supported using Python's native `argparse file support`_, which allows\nyou to write configuration files exactly as you would enter arguments in the shell. Configuration\nfile references passed to ``aws-encryption-cli`` are identified by the ``@`` prefix and the\ncontents are expanded as if you had included them in line. Configuration files can have any\nname you desire.\n\n.. note::\n\n   In PowerShell, you will need to escape the ``@`` symbol so that it is sent to ``aws-encryption-cli``\n   rather than interpreted by PowerShell.\n\nFor example, if I wanted to use a common master key configuration for all of my calls, I could\ncreate a file ``master-key.conf`` with contents detailing my master key configuration.\n\n**master-key.conf**\n\n.. code-block:: sh\n\n   --master-key key=A_KEY key=ANOTHER_KEY\n\nThen, when calling ``aws-encryption-cli``, I can specify the rest of my arguments and reference\nmy new configuration file, and ``aws-encryption-cli`` will use the composite configuration.\n\n.. code-block:: sh\n\n   aws-encryption-cli -e -i $INPUT_FILE -o $OUTPUT_FILE @master-key.conf\n\n\nTo extend the example, if I wanted a common caching configuration for all of my calls, I could\nsimilarly place my caching configuration in a configuration file ``caching.conf`` in this example\nand include both files in my call.\n\n**caching.conf**\n\n.. code-block:: sh\n\n   --caching capacity=10 max_age=60.0 max_messages_encrypted=15\n\n.. code-block:: sh\n\n   aws-encryption-cli -e -i $INPUT_FILE -o $OUTPUT_FILE @master-key.conf @caching.conf\n\nConfiguration files can be referenced anywhere in ``aws-encryption-cli`` parameters.\n\n.. code-block:: sh\n\n   aws-encryption-cli -e -i $INPUT_DIR -o $OUTPUT_DIR @master-key.conf @caching.conf --recursive\n\nConfiguration files can have many lines, include comments using ``#``, and include\nreferences to other configuration files.\n\n**my-encrypt.config**\n\n.. code-block:: sh\n\n   --encrypt\n   @master-key.conf # Use existing master key config\n   @caching.conf\n   # Always recurse, but require interactive overwrite.\n   --recursive\n   --interactive\n\n.. code-block:: sh\n\n   aws-encryption-cli @my-encrypt -i $INPUT -o $OUTPUT\n\n\nEncoding\n--------\nBy default, ``aws-encryption-cli`` will always output raw binary data and expect raw binary data\nas input. However, there are some cases where you might not want this to be the case.\n\nSometimes this might be for convenience:\n\n* Accepting ciphertext through stdin from a human.\n* Presenting ciphertext through stdout to a human.\n\nSometimes it might be out of necessity:\n\n* Saving ciphertext output to a shell variable.\n\n   * Most shells apply a system encoding to any data stored in a variable. As a result, this\n     often results in corrupted data if binary data is stored without additional encoding.\n\n* Piping ciphertext in PowerShell.\n\n   * Similar to the above, all data passed through a PowerShell pipe is encoded using the\n     system encoding.\n\nIn order to address these scenarios, we provide two optional arguments:\n\n* ``--decode`` : Base64-decode input before processing.\n* ``--encode`` : Base64-encode output after processing.\n\nThese can be used independently or together, on any valid input or output.\n\nBe aware, however, that if you target multiple files either through a path expansion or by\ntargetting a directory, the requested decoding/encoding will be applied to all files.\n\n\nExecution\n=========\n\n.. code-block:: sh\n\n   usage: aws-encryption-cli [-h] [--version] [-e] [-d] [-S]\n                     [--metadata-output METADATA_OUTPUT] [--overwrite-metadata]\n                     [-m MASTER_KEYS [MASTER_KEYS ...]]\n                     [--caching CACHING [CACHING ...]] -i INPUT -o OUTPUT\n                     [--encode] [--decode]\n                     [-c ENCRYPTION_CONTEXT [ENCRYPTION_CONTEXT ...]]\n                     [--algorithm {\n                        AES_256_GCM_IV12_TAG16_HKDF_SHA384_ECDSA_P384,\n                        AES_192_GCM_IV12_TAG16_HKDF_SHA384_ECDSA_P384,\n                        AES_128_GCM_IV12_TAG16_HKDF_SHA256_ECDSA_P256,\n                        AES_256_GCM_IV12_TAG16_HKDF_SHA256,\n                        AES_192_GCM_IV12_TAG16_HKDF_SHA256,\n                        AES_128_GCM_IV12_TAG16_HKDF_SHA256,\n                        AES_256_GCM_IV12_TAG16,\n                        AES_192_GCM_IV12_TAG16,\n                        AES_128_GCM_IV12_TAG16\n                     }]\n                     [--frame-length FRAME_LENGTH] [--max-length MAX_LENGTH]\n                     [--suffix [SUFFIX]] [--interactive] [--no-overwrite] [-r]\n                     [-v] [-q]\n\n   Encrypt or decrypt data using the AWS Encryption SDK\n\n   optional arguments:\n     -h, --help            show this help message and exit\n     --version             show program's version number and exit\n     -e, --encrypt         Encrypt data\n     -d, --decrypt         Decrypt data\n     -S, --suppress-metadata\n                           Suppress metadata output.\n     --metadata-output METADATA_OUTPUT\n                           File to which to write metadata records\n     --overwrite-metadata  Force metadata output to overwrite contents of file\n                           rather than appending to file\n     -m MASTER_KEYS [MASTER_KEYS ...], --master-keys MASTER_KEYS [MASTER_KEYS ...]\n                           Identifying information for a master key provider and\n                           master keys. Each instance must include a master key\n                           provider identifier and identifiers for one or more\n                           master key supplied by that provider. ex: --master-\n                           keys provider=aws-kms key=$AWS_KMS_KEY_ARN\n     --caching CACHING [CACHING ...]\n                           Configuration options for a caching cryptographic\n                           materials manager and local cryptographic materials\n                           cache. Must consist of \"key=value\" pairs. If caching,\n                           at least \"capacity\" and \"max_age\" must be defined. ex:\n                           --caching capacity=10 max_age=100.0\n     -i INPUT, --input INPUT\n                           Input file or directory for encrypt/decrypt operation,\n                           or \"-\" for stdin.\n     -o OUTPUT, --output OUTPUT\n                           Output file or directory for encrypt/decrypt\n                           operation, or - for stdout.\n     --encode              Base64-encode output after processing\n     --decode              Base64-decode input before processing\n     -c ENCRYPTION_CONTEXT [ENCRYPTION_CONTEXT ...], --encryption-context ENCRYPTION_CONTEXT [ENCRYPTION_CONTEXT ...]\n                           key-value pair encryption context values (encryption\n                           only). Must a set of \"key=value\" pairs. ex: -c\n                           key1=value1 key2=value2\n     --algorithm {\n            AES_256_GCM_IV12_TAG16_HKDF_SHA384_ECDSA_P384,\n            AES_192_GCM_IV12_TAG16_HKDF_SHA384_ECDSA_P384,\n            AES_128_GCM_IV12_TAG16_HKDF_SHA256_ECDSA_P256,\n            AES_256_GCM_IV12_TAG16_HKDF_SHA256,\n            AES_192_GCM_IV12_TAG16_HKDF_SHA256,\n            AES_128_GCM_IV12_TAG16_HKDF_SHA256,\n            AES_256_GCM_IV12_TAG16,\n            AES_192_GCM_IV12_TAG16,\n            AES_128_GCM_IV12_TAG16\n         }\n                           Algorithm name (encryption only)\n     --frame-length FRAME_LENGTH\n                           Frame length in bytes (encryption only)\n     --max-length MAX_LENGTH\n                           Maximum frame length (for framed messages) or content\n                           length (for non-framed messages) (decryption only)\n     --suffix [SUFFIX]     Custom suffix to use when target filename is not\n                           specified (empty if specified but no value provided)\n     --interactive         Force aws-encryption-cli to prompt you for verification before\n                           overwriting existing files\n     --no-overwrite        Never overwrite existing files\n     -r, -R, --recursive   Allow operation on directories as input\n     -v                    Enables logging and sets detail level. Multiple -v\n                           options increases verbosity (max: 4).\n     -q, --quiet           Suppresses most warning and diagnostic messages\n\n   For more usage instructions and examples, see: http://aws-encryption-sdk-cli.readthedocs.io/en/latest/\n\n\n.. _AWS Encryption SDK: https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/introduction.html\n.. _message header data: http://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/message-format.html#header-structure\n.. _message header authentication data: http://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/message-format.html#header-authentication\n.. _Read the Docs: http://aws-encryption-sdk-cli.readthedocs.io/en/latest/\n.. _GitHub: https://github.com/awslabs/aws-encryption-sdk-cli/\n.. _cryptography: https://cryptography.io/en/latest/\n.. _cryptography installation guide: https://cryptography.io/en/latest/installation/\n.. _data key caching documentation: http://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/data-key-caching.html\n.. _encryption context: http://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/concepts.html#encryption-context\n.. _KMSMasterKeyProvider: http://aws-encryption-sdk-python.readthedocs.io/en/latest/generated/aws_encryption_sdk.key_providers.kms.html#aws_encryption_sdk.key_providers.kms.KMSMasterKeyProvider\n.. _argparse file support: https://docs.python.org/3/library/argparse.html#fromfile-prefix-chars\n.. _named profile: http://docs.aws.amazon.com/cli/latest/userguide/cli-multiple-profiles.html\n.. _setuptools entry point: http://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins\n.. _you must not specify a key: https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/crypto-cli-how-to.html#crypto-cli-master-key\n.. _known issue with config file parsing in Windows: https://github.com/awslabs/aws-encryption-sdk-cli/issues/110\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://aws-encryption-sdk-cli.readthedocs.io/en/latest/",
    "keywords": "aws-encryption-sdk aws kms encryption cli command line",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aws-encryption-sdk-cli",
    "platform": "",
    "project_url": "https://pypi.org/project/aws-encryption-sdk-cli/",
    "release_url": "https://pypi.org/project/aws-encryption-sdk-cli/1.1.2/",
    "requires_dist": [
      "attrs (>=17.1.0)",
      "setuptools",
      "typing (>=3.6.2)",
      "aws-encryption-sdk (>=1.3.2)"
    ],
    "requires_python": "",
    "summary": "This command line tool can be used to encrypt and decrypt files and directories using the AWS Encryption SDK.",
    "version": "1.1.2"
  },
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ea26a022cf44bd558d870646efc85976",
          "sha256": "b9e7fd9aa141a5b9801f785b7d49a2cdc8155c839d944a6e687099fb63f4c1df"
        },
        "downloads": -1,
        "filename": "aws_encryption_sdk_cli-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea26a022cf44bd558d870646efc85976",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 67069,
        "upload_time": "2017-11-18T04:01:05",
        "url": "https://files.pythonhosted.org/packages/ff/74/8ef0fce32228daf64c024eee0ff53689555aa44a293ffaa726fb2572b7b8/aws_encryption_sdk_cli-1.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "805739d95773f86008d0ff36b171ca7a",
          "sha256": "1ec0b8b0e47ffbdaa672a74e7dae1fc8c8e87d280c0723ba6e86e2e6cb11e073"
        },
        "downloads": -1,
        "filename": "aws-encryption-sdk-cli-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "805739d95773f86008d0ff36b171ca7a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1826644,
        "upload_time": "2017-11-18T04:01:23",
        "url": "https://files.pythonhosted.org/packages/76/a6/0b45dcde08aafbc289fcdc1881131164b1870a18bb2616904e69775ac2ec/aws-encryption-sdk-cli-1.1.0.tar.gz"
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e0b85b709b096228a14ca6a57746b0af",
          "sha256": "d53a39205670ef40b0ad6faf6599f64d34c22c18a66efa457baefbb2aefc9c5c"
        },
        "downloads": -1,
        "filename": "aws_encryption_sdk_cli-1.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e0b85b709b096228a14ca6a57746b0af",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 65144,
        "upload_time": "2017-11-21T00:14:56",
        "url": "https://files.pythonhosted.org/packages/3e/2c/c7bd138f3abd97bbb971709591cc90b3d7dd15a815ff2186aeac1e81bcd7/aws_encryption_sdk_cli-1.1.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "68a8c5f616925f0f8380c23e61985a89",
          "sha256": "243b09b4aa0766417b57b71f469673d965b23c8ee0327f1167b66e88bce5aadc"
        },
        "downloads": -1,
        "filename": "aws-encryption-sdk-cli-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "68a8c5f616925f0f8380c23e61985a89",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1826298,
        "upload_time": "2017-11-21T00:14:58",
        "url": "https://files.pythonhosted.org/packages/26/d2/1ba083139b15ebdd67b7694dc86a5b2d83491b2620e26c14f2a45c8703d9/aws-encryption-sdk-cli-1.1.1.tar.gz"
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3174c76b80e57566a1babcb84b478d31",
          "sha256": "28e14108a24fd9f6a05cd1fc5ffc01f8bbd7eb1aa3f90c3a015a4af11945d7e0"
        },
        "downloads": -1,
        "filename": "aws_encryption_sdk_cli-1.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3174c76b80e57566a1babcb84b478d31",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 52118,
        "upload_time": "2017-11-22T18:46:19",
        "url": "https://files.pythonhosted.org/packages/48/c4/a8624898fa0c8192382f129ecd5634de5c0de5ba6aa55a22aee7ca8889e7/aws_encryption_sdk_cli-1.1.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "038dc476b7e44421d78b48a82fffcec1",
          "sha256": "b9c300d917f2f6a23a75b310d47366daef1810dc6db7ae5bb5367023324ae89d"
        },
        "downloads": -1,
        "filename": "aws-encryption-sdk-cli-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "038dc476b7e44421d78b48a82fffcec1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1826888,
        "upload_time": "2017-11-22T18:46:23",
        "url": "https://files.pythonhosted.org/packages/a4/05/c3c5d38a615109bdcdc9020ec33f25ed9945cd90f5d9cca6c6d4274d62d7/aws-encryption-sdk-cli-1.1.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "3174c76b80e57566a1babcb84b478d31",
        "sha256": "28e14108a24fd9f6a05cd1fc5ffc01f8bbd7eb1aa3f90c3a015a4af11945d7e0"
      },
      "downloads": -1,
      "filename": "aws_encryption_sdk_cli-1.1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3174c76b80e57566a1babcb84b478d31",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 52118,
      "upload_time": "2017-11-22T18:46:19",
      "url": "https://files.pythonhosted.org/packages/48/c4/a8624898fa0c8192382f129ecd5634de5c0de5ba6aa55a22aee7ca8889e7/aws_encryption_sdk_cli-1.1.2-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "038dc476b7e44421d78b48a82fffcec1",
        "sha256": "b9c300d917f2f6a23a75b310d47366daef1810dc6db7ae5bb5367023324ae89d"
      },
      "downloads": -1,
      "filename": "aws-encryption-sdk-cli-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "038dc476b7e44421d78b48a82fffcec1",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 1826888,
      "upload_time": "2017-11-22T18:46:23",
      "url": "https://files.pythonhosted.org/packages/a4/05/c3c5d38a615109bdcdc9020ec33f25ed9945cd90f5d9cca6c6d4274d62d7/aws-encryption-sdk-cli-1.1.2.tar.gz"
    }
  ]
}