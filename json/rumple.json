{
  "info": {
    "author": "Kilte Leichnam",
    "author_email": "nwotnbm@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "======\nRumple\n======\n\nSimple Dependency Injection Container inspired by `Pimple <http://pimple.sensiolabs.org/>`_.\n\nInstallation\n============\n\nUsing pip:\n\n.. code:: sh\n\n    # pip install rumple\n\nManually:\n\n.. code:: sh\n\n    $ git clone https://github.com/Kilte/rumple\n    $ cd rumple\n    # python setup.py install\n\nUsage\n=====\n\n.. code:: python\n\n    from rumple import Container\n\n    c1 = Container()\n    c2 = Container({\n        'param': 'value',\n        'service': lambda: object()\n    })\n\n\nDefining services\n-----------------\n\n.. code:: python\n\n    from rumple import Container\n\n\n    class Service(object):\n        pass\n\n\n    class AnotherService(object):\n        def __init__(self, service):\n            self.service = service\n\n    container = Container()\n    container['service'] = lambda: Service()\n    container['another_service'] = lambda c: AnotherService(c['service'])\n    another_service = container['another_service']\n    assert isinstance(another_service, AnotherService)\n    assert another_service.service is container['service']\n\nDefining parameters\n-------------------\n\n.. code:: python\n\n    from rumple import Container\n\n    container = Container()\n    container['parameter'] = 'value'\n    assert container['parameter'] == 'value'\n\nExtending services\n------------------\n\n.. code:: python\n\n    from rumple import Container\n\n\n    class Service(object):\n        def __init__(self):\n            self.optional_dependency = None\n\n        def set_optional_dependency(self, dependency):\n            self.optional_dependency = dependency\n\n\n    class OptionalDependency(object):\n        pass\n\n\n    def extend_service(service, container):  # Note: you can omit \"container\" argument\n        service.set_optional_dependency(container['optional_dependency'])\n        return service\n\n    container = Container()\n    container['service'] = lambda: Service()\n    container['optional_dependency'] = lambda: OptionalDependency()\n    container.extend('service', extend_service)\n\nProviders\n---------\n\n.. code-block:: python\n\n    from rumple import Container, extend, share, value\n\n\n    class Provider(object):\n        @share()\n        def service(self):\n            return object()\n\n        @share('renamed_service')\n        def another_service(self):\n            return object()\n\n        @share()\n        def service_for_extend(self):\n            return object()\n\n        @value()\n        def first_option(self):\n            return 'value_1'\n\n        @value('second_option_renamed')\n        def second_option(self):\n            return 'value_2'\n\n        @value()\n        def _ignored(self):\n            return 'value'\n\n\n    class AnotherProvider(object):\n        @extend('service_for_extend')\n        def extend_service(self, service_for_extend):\n            assert isinstance(service_for_extend, object)\n            return str(object)\n\n\n    container = Container()\n    container.register(Provider())\n    container.register(AnotherProvider())\n    assert isinstance(container['service'], object)\n    assert isinstance(container['renamed_service'], object)\n    assert isinstance(container['service_for_extend'], str)\n    assert container['first_option'] == 'value_1'\n    assert container['second_option_renamed'] == 'value_2'\n    assert '_ignored' not in container\n\nIterating through a container\n-----------------------------\n\n.. code:: python\n\n    from rumple import Container\n\n    container = Container({'k1': 'v1', 'k2': 'v2'})\n    for item in container:\n        print(item)\n\n    # Output:\n    # ('k1', 'v1')\n    # ('k2', 'v2')\n\nChangelog\n=========\n\n0.1.0 (15.07.2015)\n------------------\n\n- First release\n\nContributing\n============\n\n- Fork and clone it\n- Create your feature branch (git checkout -b awesome-feature)\n- Make your changes\n- Write/update tests, if it's necessary\n- Update README.md, if it's necessary\n- Push your branch (git push origin awesome-feature)\n- Send a pull request\n\nLICENSE\n=======\n\nThe MIT License (MIT)",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Kilte/rumple",
    "keywords": "container,dependency injection,inversion of control",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "rumple",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/rumple/",
    "release_url": "https://pypi.org/project/rumple/0.1.0/",
    "requires_python": null,
    "summary": "A simple dependency injection container",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9200698ba7cef58b04b5a854c026fce5",
          "sha256": "a61e88a6acedd9acf62b31ec679f34feeac74b032b1bbf88da3549a7389cf2ae"
        },
        "downloads": 2526,
        "filename": "rumple-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9200698ba7cef58b04b5a854c026fce5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3593,
        "upload_time": "2015-07-14T23:13:24",
        "url": "https://files.pythonhosted.org/packages/5a/ca/bc2b7782b0d1064b11645b8a5a8042c5e22033d4dff3e01a9f1912692c5b/rumple-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9200698ba7cef58b04b5a854c026fce5",
        "sha256": "a61e88a6acedd9acf62b31ec679f34feeac74b032b1bbf88da3549a7389cf2ae"
      },
      "downloads": 2526,
      "filename": "rumple-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9200698ba7cef58b04b5a854c026fce5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3593,
      "upload_time": "2015-07-14T23:13:24",
      "url": "https://files.pythonhosted.org/packages/5a/ca/bc2b7782b0d1064b11645b8a5a8042c5e22033d4dff3e01a9f1912692c5b/rumple-0.1.0.tar.gz"
    }
  ]
}