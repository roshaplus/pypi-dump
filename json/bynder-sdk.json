{
  "info": {
    "author": "Bynder",
    "author_email": "techteam@bynder.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Bynder Python SDK\n=================\n\nThe main goal of this SDK is to speed up the integration of Bynder\ncustomers who use Python. Making it easier to connect to the Bynder API\n(http://docs.bynder.apiary.io) and execute requests on it.\n\nRequirements and dependencies\n-----------------------------\n\nThe Python SDK requires the following in order to fully work:\n\n-  ``Python >= 3.5``, older versions of Python won't work.\n\nPip should handle all the dependencies automatically.\n\nInstallation\n------------\n\nThis SDK depends on a few libraries in order to work, installing it with\npip should take care of everything automatically.\n\nBefore you install the SDK we recommend you to setup a virtual\nenvironment:\n\n.. code:: bash\n\n    virtualenv -p python3 venv  # create virtual environment\n    source venv/bin/activate    # activate virtual environment\n\nAfter you have successfully setup a virtual environment you can install\nthe SDK with `pip <https://pip.pypa.io/en/stable/installing/>`__. Run\nthe following command while your virtual environment is active.\n\n.. code:: bash\n\n    pip install bynder-sdk\n\nTo use the SDK, you have to import it at the top of your file:\n\n.. code:: python\n\n    from bynder_sdk import BynderClient \n\nHow to use it\n-------------\n\nThis is a simple example on how to retrieve data from the Bynder asset\nbank. For a more detailed example of implementation refer to the `sample\ncode <https://github.com/Bynder/bynder-python-sdk/blob/master/example/app.py>`__.\n\nBefore executing any request to the Bynder API we need to instantiate\nthe **BynderClient** class, the following example shows how to do this:\n\n.. code:: python\n\n        bynder_client = BynderClient(\n            base_url=config.get('BYNDER_TOKENS', 'base_url'),\n            consumer_key=config.get('BYNDER_TOKENS', 'consumer_key'),\n            consumer_secret=config.get('BYNDER_TOKENS', 'consumer_secret'),\n            token=config.get('BYNDER_TOKENS', 'token'),\n            token_secret=config.get('BYNDER_TOKENS', 'token_secret')\n        )\n\nWe encourage you to store the tokens in a `configuration\nfile <https://docs.python.org/3/library/configparser.html>`__ or as\nenvrioment variables. This will help you to keep your tokens safe.\n\nAfter getting the **BynderClient** configured successfully we need to\nget an instance of the **AssetBankClient** in order to do any of the API\ncalls relative to the Bynder Asset Bank module:\n\n.. code:: python\n\n         asset_bank_client = bynder_client.asset_bank_client\n         collection_client = bynder_client.collection_client # Works the same\n\nAnd with this, we can start our request to the API, listed in the\n**Methods Available** section following. Short example of getting all\nthe **Media Items**:\n\n.. code:: python\n\n        media_list = asset_bank_client.media_list()\n\nThis call will return a list with all the Media Items available in the\nBynder environment. Note that some of the calls accept a query array in\norder to filter the results via the API call params (see `Bynder API\nDocs <http://docs.bynder.apiary.io/>`__) for more details. For instance,\nif we only wanted to retrieve **2 images** here is what the call would\nlook like:\n\n.. code:: python\n\n        media_list = asset_service.media_list({\n            'limit': 2,\n            'type': 'image'\n        })\n\nMethods Available\n-----------------\n\nThese are the methods currently availble on the **Bynder Python SDK**,\nrefer to the `Bynder API Docs <http://docs.bynder.apiary.io/>`__ for\nmore specific details on the calls.\n\nBynderClient:\n^^^^^^^^^^^^^\n\nGet an instance of the Asset Bank Client or the Collection Client if\nalready with access tokens set up. Also allows to generate and\nauthenticate request tokens, which are necessary for the rest of the\nAsset Bank and Collection calls.\n\n.. code:: python\n\n        asset_bank_client\n        collection_client\n        login()\n        request_token()\n        authorise_url()\n        access_token()\n        logout()\n        derivatives()\n\nasset\\_bank\\_client:\n^^^^^^^^^^^^^^^^^^^^\n\nAll the Asset Bank related calls, provides information and access to\nMedia management.\n\n.. code:: python\n\n        brands()\n        media_list(query)\n        media_info(media_id, query)\n        meta_properties()\n        tags()\n        media_download_url()\n        set_media_properties(media_id, query)\n        delete_media(media_id)\n        create_usage(itegration_id, asset_id, query)\n        usage(query)\n        delete_usage(integration_id, asset_id, query)\n        upload_file(file_path, brand_id, media_id, query)\n\nWith the ``upload_file`` method you can do two things. You can upload a\nnew asset, or you can upload a new version of an exising asset. You can\ncontrol this by sending a media\\_id or not.\n\ncollection\\_client:\n^^^^^^^^^^^^^^^^^^^\n\nAll the collection related calls.\n\n.. code:: python\n\n        collections(query)\n        collections_info(collection_id)\n        create_collection(name, query)\n        delete_collection(collection_id)\n        collection_media_ids(collection_id)\n        add_media_to_collection(collection_id, media_ids)\n        remove_media_from_collection(collection_id, meedia_ids)\n        share_collection(collection_id, collection_option, recipients, query)\n\nTests\n-----\n\nYou can run the tests by using the command below. This will install the\npackages required and execute the tests for all the clients.\n\n.. code:: bash\n\n    make test\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://bynder.com",
    "keywords": "bynder,dam",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bynder-sdk",
    "platform": "",
    "project_url": "https://pypi.org/project/bynder-sdk/",
    "release_url": "https://pypi.org/project/bynder-sdk/0.0.5/",
    "requires_dist": [
      "requests-oauthlib (==0.8.0)",
      "requests (==2.18.4)"
    ],
    "requires_python": "",
    "summary": "Bynder SDK can be used to speed up the integration of Bynder in Python",
    "version": "0.0.5"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9963c649963c337823f9b9b959b6eff0",
          "sha256": "6d088371308b52c23f14566ec696cb73dbd643632d48c7381f7de5607062c458"
        },
        "downloads": -1,
        "filename": "bynder_sdk-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9963c649963c337823f9b9b959b6eff0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 12971,
        "upload_time": "2017-09-22T08:29:05",
        "url": "https://files.pythonhosted.org/packages/8e/d2/782b716270b81570f78569a58533ea6ea612720784c8ab0389b39528e796/bynder_sdk-0.0.1-py3-none-any.whl"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "33c7789a38d445c1ae32ddb4037abe19",
          "sha256": "fe2b68c69fe92b89896438ed178686c38e3fbdb3268fc56efc168557a3695139"
        },
        "downloads": -1,
        "filename": "bynder_sdk-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33c7789a38d445c1ae32ddb4037abe19",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 16697,
        "upload_time": "2017-09-22T11:32:05",
        "url": "https://files.pythonhosted.org/packages/5f/ae/30e14e8da56d6774563199d56fd8b1f763817d07972bdbcd03475a002b6b/bynder_sdk-0.0.2-py3-none-any.whl"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1b26c56a1bad6f654a2772dcca0fafb0",
          "sha256": "fb21fe417d04ff6057c711aa8a8e6891a697b85ee272298ce1276debb0062964"
        },
        "downloads": -1,
        "filename": "bynder_sdk-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1b26c56a1bad6f654a2772dcca0fafb0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 16828,
        "upload_time": "2017-09-25T09:00:29",
        "url": "https://files.pythonhosted.org/packages/bd/5d/401c778d18dd28213ad149199c471a1f0848b23edc8751b900a1a129795f/bynder_sdk-0.0.3-py3-none-any.whl"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "af95f6f005d82ed5e0ad361f3fb9edc7",
          "sha256": "2df202ca4c7a0d95149276877aad0fcd41c1f3173f92816961180c09887f009b"
        },
        "downloads": -1,
        "filename": "bynder_sdk-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af95f6f005d82ed5e0ad361f3fb9edc7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 16808,
        "upload_time": "2017-12-04T13:57:49",
        "url": "https://files.pythonhosted.org/packages/6b/ed/8503880e57ff00897a521cdcd77c31cfc56a6677af4271ade5bb622f4b8d/bynder_sdk-0.0.4-py3-none-any.whl"
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "042474a7434193103443935a85f9423f",
          "sha256": "f883efaef8581080b4cbec753abe6370059f7c9f2eac2f924c9401bae92214da"
        },
        "downloads": -1,
        "filename": "bynder_sdk-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "042474a7434193103443935a85f9423f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 17029,
        "upload_time": "2018-01-05T15:23:03",
        "url": "https://files.pythonhosted.org/packages/ec/50/94324ebe4bacc85a6cdf5226483692ea98ec218cbe3aafdad9d2e1cfeb3b/bynder_sdk-0.0.5-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "042474a7434193103443935a85f9423f",
        "sha256": "f883efaef8581080b4cbec753abe6370059f7c9f2eac2f924c9401bae92214da"
      },
      "downloads": -1,
      "filename": "bynder_sdk-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "042474a7434193103443935a85f9423f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 17029,
      "upload_time": "2018-01-05T15:23:03",
      "url": "https://files.pythonhosted.org/packages/ec/50/94324ebe4bacc85a6cdf5226483692ea98ec218cbe3aafdad9d2e1cfeb3b/bynder_sdk-0.0.5-py3-none-any.whl"
    }
  ]
}