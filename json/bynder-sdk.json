{
  "info": {
    "author": "Bynder",
    "author_email": "techteam@bynder.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Bynder Python SDK\n\nThe main goal of this SDK is to speed up the integration of Bynder customers who use Python. Making it easier to connect to the Bynder API (http://docs.bynder.apiary.io) and execute requests on it.\n\n\n## Requirements and dependencies\n\nThe Python SDK requires the following in order to fully work:\n\n- `Python >= 3.5`, older versions of Python won't work.\n\nPip should handle all the dependencies automatically.\n\n\n## Installation\n\nThis SDK depends on a few libraries in order to work, installing it with pip should take care of everything automatically. \n\nBefore you install the SDK we recommend you to setup a virtual environment:\n```bash\nvirtualenv -p python3 venv  # create virtual environment\nsource venv/bin/activate    # activate virtual environment\n```\n\nAfter you have successfully setup a virtual environment you can install the SDK with [pip](https://pip.pypa.io/en/stable/installing/).  Run the following command while your virtual environment is active.\n\n```bash\npip install bynder-sdk\n```\n\nTo use the SDK, you have to import it at the top of your file:\n\n```python\nfrom bynder_sdk import BynderClient \n```\n\n\n## How to use it\n\nThis is a simple example on how to retrieve data from the Bynder asset bank. For a more detailed example of implementation refer to the [sample code](https://github.com/Bynder/bynder-python-sdk/blob/master/example/app.py).\n\nBefore executing any request to the Bynder API we need to instantiate the **BynderClient** class, the following example shows how to do this:\n```python\n    bynder_client = BynderClient(\n        base_url=config.get('BYNDER_TOKENS', 'base_url'),\n        consumer_key=config.get('BYNDER_TOKENS', 'consumer_key'),\n        consumer_secret=config.get('BYNDER_TOKENS', 'consumer_secret'),\n        token=config.get('BYNDER_TOKENS', 'token'),\n        token_secret=config.get('BYNDER_TOKENS', 'token_secret')\n    )\n```\n\nWe encourage you to store the tokens in a [configuration file](https://docs.python.org/3/library/configparser.html) or as envrioment variables. This will help you to keep your tokens safe.\n\nAfter getting the **BynderClient** configured successfully we need to get an instance of the **AssetBankClient** in order to do any of the API calls relative to the Bynder Asset Bank module:\n\n```python\n     asset_bank_client = bynder_client.asset_bank_client\n     collection_client = bynder_client.collection_client # Works the same\n```\nAnd with this, we can start our request to the API, listed in the **Methods Available** section following. Short example of getting all the **Media Items**:\n\n```python\n    media_list = asset_bank_client.media_list()\n```\n\nThis call will return a list with all the Media Items available in the Bynder environment. Note that some of the calls accept a query array in order to filter the results via the API call params (see [Bynder API Docs](http://docs.bynder.apiary.io/)) for more details. \nFor instance, if we only wanted to retrieve **2 images** here is what the call would look like:\n```python\n    media_list = asset_service.media_list({\n        'limit': 2,\n        'type': 'image'\n    })\n```\n\n\n## Methods Available\nThese are the methods currently availble on the **Bynder Python SDK**, refer to the [Bynder API Docs](http://docs.bynder.apiary.io/) for more specific details on the calls.\n\n#### BynderClient:\nGet an instance of the Asset Bank Client or the Collection Client  if already with access tokens set up. Also allows to generate and authenticate request tokens, which are necessary for the rest of the Asset Bank and Collection calls.\n```python\n    asset_bank_client\n    collection_client\n    login()\n    request_token()\n    authorise_url()\n    access_token()\n    logout()\n    derivatives()\n```\n\n#### asset_bank_client:\nAll the Asset Bank related calls, provides information and access to \nMedia management.\n```python\n    brands()\n    media_list(query)\n    media_info(media_id, query)\n    meta_properties()\n    tags()\n    media_download_url()\n    set_media_properties(media_id, query)\n    delete_media(media_id)\n    create_usage(itegration_id, asset_id, query)\n    usage(query)\n    delete_usage(integration_id, asset_id, query)\n    upload_file(file_path, brand_id, media_id, query)\n```\n\nWith the `upload_file` method you can do two things. You can upload a new asset, or you can upload a new version of an exising asset. You can control this by sending a media_id or not.\n\n#### collection_client:\nAll the collection related calls.\n```python\n    collections(query)\n    collections_info(collection_id)\n    create_collection(name, query)\n    delete_collection(collection_id)\n    collection_media_ids(collection_id)\n    add_media_to_collection(collection_id, media_ids)\n    remove_media_from_collection(collection_id, meedia_ids)\n    share_collection(collection_id, collection_option, recipients, query)\n```\n\n\n## Tests\n\nYou can run the tests by using the command below. This will install the packages required and execute the tests for all the clients.\n\n```bash\nmake test\n```\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://bynder.com",
    "keywords": "bynder,dam",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bynder-sdk",
    "platform": "",
    "project_url": "https://pypi.org/project/bynder-sdk/",
    "release_url": "https://pypi.org/project/bynder-sdk/0.0.2/",
    "requires_dist": [
      "requests-oauthlib (==0.8.0)",
      "requests (==2.18.4)"
    ],
    "requires_python": "",
    "summary": "Bynder SDK can be used to speed up the integration of Bynder in Python",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9963c649963c337823f9b9b959b6eff0",
          "sha256": "6d088371308b52c23f14566ec696cb73dbd643632d48c7381f7de5607062c458"
        },
        "downloads": 0,
        "filename": "bynder_sdk-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9963c649963c337823f9b9b959b6eff0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 12971,
        "upload_time": "2017-09-22T08:29:05",
        "url": "https://files.pythonhosted.org/packages/8e/d2/782b716270b81570f78569a58533ea6ea612720784c8ab0389b39528e796/bynder_sdk-0.0.1-py3-none-any.whl"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "33c7789a38d445c1ae32ddb4037abe19",
          "sha256": "fe2b68c69fe92b89896438ed178686c38e3fbdb3268fc56efc168557a3695139"
        },
        "downloads": 0,
        "filename": "bynder_sdk-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33c7789a38d445c1ae32ddb4037abe19",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 16697,
        "upload_time": "2017-09-22T11:32:05",
        "url": "https://files.pythonhosted.org/packages/5f/ae/30e14e8da56d6774563199d56fd8b1f763817d07972bdbcd03475a002b6b/bynder_sdk-0.0.2-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "33c7789a38d445c1ae32ddb4037abe19",
        "sha256": "fe2b68c69fe92b89896438ed178686c38e3fbdb3268fc56efc168557a3695139"
      },
      "downloads": 0,
      "filename": "bynder_sdk-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "33c7789a38d445c1ae32ddb4037abe19",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 16697,
      "upload_time": "2017-09-22T11:32:05",
      "url": "https://files.pythonhosted.org/packages/5f/ae/30e14e8da56d6774563199d56fd8b1f763817d07972bdbcd03475a002b6b/bynder_sdk-0.0.2-py3-none-any.whl"
    }
  ]
}