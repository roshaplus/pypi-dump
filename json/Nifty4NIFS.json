{
  "info": {
    "author": "ncomeau",
    "author_email": "ncomeau@gemini.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: MacOS X",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Programming Language :: Python :: 2.7",
      "Topic :: Scientific/Engineering :: Astronomy",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "Nifty\n=====\n\n.. image:: https://zenodo.org/badge/93109208.svg\n   :alt: DOI of the latest release. See releases.\n   :target: https://zenodo.org/record/852696#.WaWmr5PyhMA\n.. image:: https://readthedocs.org/projects/newer-nifty/badge/?version=latest\n   :alt: Nifty's documentation, hosted on ReadtheDocs.\n   :target: http://newer-nifty.readthedocs.io/en/latest/\n.. image:: http://img.shields.io/badge/powered%20by-AstroPy-orange.svg?style=flat\n   :alt: Nifty uses Astropy! Here is a link to the project webpage:\n   :target: http://www.astropy.org/\n\nA Python Data Reduction Pipeline for the Gemini-North Near-Infrared Integral\nField Spectrometer (NIFS).\n\nFull documentation: `ReadTheDocs <http://newer-nifty.readthedocs.io/en/latest/>`_.\n\nThis is a new data reduction Python pipeline that uses Astroconda and the Gemini\nIRAF Package to reduce NIFS data. It offers a complete data reduction process from\nsorting the data to producing a final flux calibrated and wavelength calibrated\ncombined cube with the full S/N for a science target.\n\nThis pipeline is open source but is not supported by Gemini Observatory.\n\nAny feedback and comments (mbusserolle@gemini.edu) are welcome!\n\nCopyright\n---------\n\nFor more details, please read the LICENSE.\n\n\nHow to Submit Bugs and Requests\n-------------------------------\n\nVery important: **do not submit a Gemini help desk ticket!**.\n\nIf you want to report a problem, use the `Gemini Data Reduction Forum thread <http://drforum.gemini.edu/topic/nifs-python-data-reduction-pipeline/>`_\nor create an issue in this repo.\n\nInstallation\n============\n\nPre-Requisites\n--------------\nMake sure you have the latest version of Gemini Astroconda installed, have activated an Astroconda environment and have set up PYRAF.\nYou can find instructions for installing Astroconda `here <https://astroconda.readthedocs.io/en/latest/>`_.\n\nInstalling\n----------\n>From PyPi.org:\n\n.. code-block:: text\n\n    pip install Nifty4NIFS\n\n.. TODO(nat): implement these instructions.\n*Coming Soon: Instructions for installing in Developer mode.*\n\n.. code-block:: text\n\n    Not implemented yet.\n\nQuick Start\n===========\n\nTo run Nifty, getting data reduction parameters from an interactive input session:\n\n.. code-block:: text\n\n   runNifty -i\n\nTo run Nifty in full-automatic mode with default input parameters, provide the -f flag\nand a full local path to the raw data or a Gemini Program ID string (Eg: GN-2013A-Q-62).\n\n.. code-block:: text\n\n   runNifty -f <data_location>\n\n\nRunning Nifty\n=============\n\nThe runNifty command should now be active. You can now run Nifty from any directory to do either a\nfull or partial data reduction. Nifty is launched by typing the runNifty command with the name of a\nconfiguration file and optional command line options. Typing runNifty without any arguments lists the\nsyntax and available options.\n\nTo get available options:\n\n.. code-block:: text\n\n   runNifty\n\nTo show help:\n\n.. code-block:: text\n\n   runNifty -h\n\nTo run Nifty, populating a configuration file interactively:\n\n.. code-block:: text\n\n   runNifty -i\n\nTo run Nifty by supplying your own configuration file:\n\n.. code-block:: text\n\n   runNifty <configurationfile.cfg>\n\nTo do a full automatic data reduction with default options:\n\n.. code-block:: text\n\n   runNifty -f <pathOrProgramID>\n\nTo redo the last data reduction, reading the config file saved at the beginning of the most recent reduction:\n\n.. code-block:: text\n\n  runNifty -f\n\n\nInput\n=====\n\nYou can provide input to Nifty in three ways:\n\n- Interactive input\n- A runtimeData/user_options.json file\n- Command line arguments\n\nTo provide interactive input run Nifty with no command line options by typing:\n\n.. code-block:: text\n\n   python Nifty.py\n\nNote that the data reduction parameters are saved to a new runtimeData/user_options.json file\nat the end of an interactive input session.\n\nTo have Nifty load its parameters from a runtimeData/user_options.json use the -r or -l command line arguments. These arguments are equivalent.\n\n.. code-block:: text\n\n   python Nifty.py -r\n\nor:\n\n.. code-block:: text\n\n   python Nifty.py -l\n\nPractical Examples\n==================\n\nObservations of Titan\n---------------------\n\nRecipe used: defaultConfig.cfg\n\nObservations of a Moderate Redshift Galaxy\n------------------------------------------\n\nRecipe used: defaultConfig.cfg\n\nLet's reduce NIFS data of a moderate redshift galaxy, located at z ~ 1.284. This is a faint target, so after making\nindividual cubes we use the reported telescope P and Q offsets to blindly merge our final cubes.\n\nAs this program is out of its proprietary period and available on the Gemini Public Archive, we can use the defaultConfig.cfg configuration\nfile and specify its program ID to reduce it.\n\n.. code-block:: text\n\n   runNifty -f GN-2013A-Q-62\n\nWe could also launch the reduction from a provided configuration file.\n\n\nContents of the configuration file:\n\n.. code-block:: text\n\n   TODO(nat): When finalized fill this out!\n\nTo launch the reduction:\n\n.. code-block:: text\n\n   runNifty <configurationFile>\n\n\n\n\n\n\nEditable Control Files\n======================\n\nAt several points Nifty reads and writes data from textfiles. These files are found in the runtimeData/\ndirectory. They are:\n\nModifed line lists; we used calibration line lists from `GNIRS<http://www.gemini.edu/sciops/instruments/gnirs/calibration/arc-lamp-ids>`_\n- h_test_one_argon.dat\nA modified list of wavelength calibration lines in the H band that we found worked well.\n- j_test_one_argon.dat\nA modified list of wavelength calibration lines in the J band that we found worked well.\n- k_test_two_argon.dat\nA modified list of wavelength calibration lines in the K band that we found worked well.\n- new_starstemp.txt\nEffective temperatures for each spectral type are stored in this.\n- vega_ext.fits\nSpectra of Vega in the z, J, H and K bands are included in the 4 extensions of this.\n-runtimeData/user_options.json saves the parameters of the latest data reduction. **It is updated after each data reduction.**\n\n\n\nNotes\n=====\n\nObject and Sky frame differentiation\n------------------------------------\n\nIf the sorting script does not create a skylist in the object or telluric observation\ndirectories this means that the offsets between sky frames and object frames were smaller\nthan expected. A skyframelist can be manually created and saved in the appropriate directory, or\nthe limit placed on the offset can be changed. To lower the limit manually do a search in nifsSort.py\nfor \"skyframelist.append(entry)\" and change the <= <value_in_arcseconds> to something new.\n\nH-Line Removal\n--------------\n\nSee hline_removal.rst for more info.\n\nInteractive Merging\n-------------------\n\nCubes can be shifted using QFits View (this is currently necessary for\nvery faint objects) and then combined using nifsMerge.py by prepending the name of each\nfile with the prefix \"shif\" and saving them in the observation directory (where the reduced science data is stored).\n\nMerging\n-------\n\n.. TODO(nat): improve this.\n\nOne can use custom offsets for each cube to merge by specifying use_pq_offsets==False.\nThe pipeline will pause and wait for you to create an appropriate offsets.txt in the appropriate\ndirectory.\n\nRecipes\n=======\n**These are pretty much all depreciated.** TODO(nat): update these.\n\nWe have built several data reduction recipes that you may find useful. These consist of\nruntimeData/user_options.json files that are loaded with the -l flag.\n\n1. To perform sorting, calibration data reductions, and science reductions without the telluric correction and without producing a merged cube:\n\n.. code-block:: text\n\n    python Nifty.py -q users/name/reduction/Raw -t -k -m\n\n2. To perform sorting, calibration data reductions, and science reductions without telluric correction and produce a merged cube:\n\n.. code-block:: text\n\n    python Nifty.py -q users/name/reduction/Raw -t -k\n\n3. To perform sorting, calibration data reductions, and science reductions without the telluric correction, no flux calibration, and produce a merged cube:\n\n.. code-block:: text\n\n    python Nifty.py -q users/name/reduction/Raw -f -1\n\n4. To perform sorting, calibration data reductions, and science reductions with the telluric correction (interactively), flux calibration, and produce a merged cube:\n\n.. code-block:: text\n\n    python Nifty.py -q users/name/reduction/Raw -w\n\n5. To start the script by producing a merged cube (all the science data must already be reduced):\n\n.. code-block:: text\n\n    python Nifty.py -q users/name/reduction/Raw -s -r -n -t -k\n\n6. To start the script by performing the telluric correction and produce a merged cube (assuming the telluric data and science data have already been reduced)\n\n.. code-block:: text\n\n    python Nifty.py -q users/name/reduction/Raw -s -r -k -b 8\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://www.gemini.edu",
    "keywords": "Gemini NIFS nifs pipeline reduction data IRAF iraf PYRAF pyraf astronomy integral field spectroscopy ifs ifu",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Nifty4NIFS",
    "platform": "",
    "project_url": "https://pypi.org/project/Nifty4NIFS/",
    "release_url": "https://pypi.org/project/Nifty4NIFS/1.0b1/",
    "requires_dist": [],
    "requires_python": "~=2.7",
    "summary": "The Gemini NIFS data reduction pipeline.",
    "version": "1.0b1"
  },
  "releases": {
    "1.0a1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "61af59695bbcba97e263bb5df3fdb806",
          "sha256": "3a4104baf341693f4d279e769e25e320a92d4b4cc1bdc9d540669db128a37c2d"
        },
        "downloads": 0,
        "filename": "Nifty4NIFS-1.0a1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "61af59695bbcba97e263bb5df3fdb806",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 121215,
        "upload_time": "2017-09-01T01:10:10",
        "url": "https://files.pythonhosted.org/packages/da/de/5a665e5f03db75b94b360a743306c2c39923a7b6de698dd0da6fa97a6146/Nifty4NIFS-1.0a1-py2-none-any.whl"
      }
    ],
    "1.0b1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d156188c7225c67824932cf39207331d",
          "sha256": "f589b87c9f96a02d6eadb97e6209eb69e328001c479f8ccd7e5efea81312b3db"
        },
        "downloads": 0,
        "filename": "Nifty4NIFS-1.0b1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "d156188c7225c67824932cf39207331d",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 124956,
        "upload_time": "2017-09-09T03:35:26",
        "url": "https://files.pythonhosted.org/packages/d7/89/4c60545e2438060dee7aecc2e78be57772bbbfa3a70685637e31f30b23ce/Nifty4NIFS-1.0b1-py2-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d156188c7225c67824932cf39207331d",
        "sha256": "f589b87c9f96a02d6eadb97e6209eb69e328001c479f8ccd7e5efea81312b3db"
      },
      "downloads": 0,
      "filename": "Nifty4NIFS-1.0b1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "d156188c7225c67824932cf39207331d",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 124956,
      "upload_time": "2017-09-09T03:35:26",
      "url": "https://files.pythonhosted.org/packages/d7/89/4c60545e2438060dee7aecc2e78be57772bbbfa3a70685637e31f30b23ce/Nifty4NIFS-1.0b1-py2-none-any.whl"
    }
  ]
}