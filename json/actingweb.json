{
  "info": {
    "author": "Greger Wedel",
    "author_email": "greger@support.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2.7",
      "Topic :: System :: Distributed Computing"
    ],
    "description": "======================================================\nREADME - actingweb - an ActingWeb Library\n======================================================\nThis is a python library implementation showcasing the REST-based `ActingWeb <http://actingweb.org>`_\ndistributed micro-services model. A typical use case is bot to bot communication on a peer to peer level.\nIt serves as the reference implementation for the ActingWeb REST protocol\nspecification <http://actingweb.readthedocs.io/en/release/actingweb-spec.html>`_ for\nhow such micro-services interact.\n\nBuilding and installing\n------------------------\n\n::\n\n    # Build source distribution\n    python setup.py sdist\n\n    # Build a binary distribution for python2:\n    python setup.py bdist_wheel\n\n    # Upload to test server:\n    python setup.py sdist upload -r pypitest\n\n    # Upload to production server:\n    twine upload dist/*\n\n\nRepository and documentation\n----------------------------\n\nThe library is available as a PYPI library and installed with `pip install actingweb`. Project home is at\n`https://pypi.org/project/actingweb/ <https://pypi.org/project/actingweb/>`_.\n\nThe git repository for this library can be found at\n`https://bitbucket.org/gregerw/actingweb <https://bitbucket.org/gregerw/actingweb>`_.\n\nThe latest documentation for the released version (release branch) of this library can be found at \n`http://actingweb.readthedocs.io/ <http://actingweb.readthedocs.io/>`_.\n\nThe master branch of the library has the latest features and bug fixes and the updated documentation can be found at\n`http://actingweb.readthedocs.io/en/master <http://actingweb.readthedocs.io/en/master>`_.\n\n\nWhy use actingweb?\n---------------------\nActingWeb is well suited for applications where each individual user's data and functionality both needs high degree\nof security and privacy AND high degree of interactions with the outside world. Typical use cases are Internet of Things\nwhere each user's \"Thing\" becomes a bot that interacts with the outside world, as well as bot to bot\ncommunication where each user can get a dedicated, controllable bot talking to other user's bots.\n\nAs a developer, you get a set of out of the box functionality from the ActingWeb library:\n\n- an out-of-the-box REST bot representing each user's thing, service, or functionality (your choice)\n- a way to store and expose data over REST in a very granular way using properties\n- a trust system that allows creation of relationships the user's bot on the user level\n- a subscription system that allows one bot (user) to subscribe to another bot's (user's) changes\n- an oauth framework to tie the bot to any other API service and thus allow user to user communication using\n    individual user's data from the API service\n\nThere is a high degree of configurability in what to expose, and although the ActingWeb specification specifies\na protocol set to allow bots from different developers to talk to each other, not all functionality needs to be\nexposed.`\n\nEach user's indvidual bot is called an ``actor`` and this actor has its own root URL where its data and services are\nexposed. See below for further details.\n\nFeatures of actingweb library\n----------------------------------\nThe latest code in master is at all times deployed to\n`https://actingwebdemo.greger.io/ <https://actingwebdemo.greger.io/>`_\nIt has implemented a simple sign-up page as a front-end to a REST-based factory URL that will instantiate a\nnew actor with a guid to identify the actor. The guid is then embedded in the actor's root URL, e.g.\n``https://actingwebdemo.greger.io/9f1c331a3e3b5cf38d4c3600a2ab5d54``.\n\nIf you try to create an actor, you will get to a simple web front-end where you can set the actor's data\n(properties) and delete the actor. You can later access the actor (both /www and REST) by using the Creator\nyou set as username and the passphrase you get when creating the actor and log in.\n\n**acting-web-gae-library** is a close to complete implementation of the full ActingWeb specification where all\nfunctionality can be accessed through the actor's root URL (e.g.\n``https://actingwebdemo.greger.io/9f1c331a3e3b5cf38d4c3600a2ab5d54``):\n\n- ``/properties``: attributed/value pairs as flat or nested json can be set, accessed, and deleted to store this actor's data\n- ``/meta``: a publicly available json structure allowing actor's to discover each other's capabilities\n- ``/trust``: access to requesting, approving, and managing trust relationships with other actors of either the same type or any other actor \"talking actingweb\"\n- ``/subscriptions``: once a trust relationship is set up, this path allows access to establishing, retrieving, and managing subscriptions that are based on paths and identified with target, sub-target, and resource, e.g. ``/resources/folders/12345``\n- ``/callbacks``: used for verification when establishing trust/subscriptions, to receive callbacks on subscriptions, as well as a programming hook to process webhooks from 3rd party services\n- ``/resources``: a skeleton to simplify exposure of any type of resource (where /properties is not suited)\n- ``/oauth``: used to initiate a www-based oauth flow to tie the actor to a specific OAuth user and service. Available if OAuth is turned on and a 3rd party OAuth service has been configured in config.py. /www will also be redirected to /oauth (*OAuth is not enabled in the online actingwebdemo mini-application*)\n\n**Sidenote**: The **actingweb  library** also implements a simple mechanism for protecting the /www path with oauth\n(not in the specification). On successful OAuth authorisation, it will set a browser cookie to the oauth\ntoken. This is not used in the inline demo and requires also that the identity of the user authorising OAuth\naccess is the same user already tied to the instantiated actor. There is a programming hook that allows such\nverification as part of the OAuth flow, but it is not enabled in the actingwebdemo mini-application.\n\nOther applications using the actingweb library\n---------------------------------------------------\nThere is also another demo application available for `Cisco Spark <http://www.ciscospark.com>`_\n. It uses the actingweb library to implement a Cisco Spark bot and integration. If you have signed up as a\nCisco Spark user, you can try it out by sending a message to armyknife@sparkbot.io.\n\nMore details about the Spark Army Knife can be found on `this blog <http://stuff.ttwedel.no/tag/spark>`_\n.\n\nThe ActingWeb Model\n-------------------\nThe ActingWeb micro-services model and protocol defines a bot-to-bot and micro-service-to-micro-service\ncommunication that allows extreme distribution of data and functionality. This makes it very suitable for\nholding small pieces of sensitive data on behalf of a user or \"things\" (as in Internet of Things).\nThese sensitive data can then be used and shared in a very granular and controlled way through the secure\nand distributed ActingWeb REST protocol. This allows you to expose e.g. your location data from your phone\ndirectly on the Internet (protected by a security framework) and to be used by other services **on your choosing**.\nYou can at any time revoke access to your data for one particular service without influencing anything else.\n\nThe ActingWeb Micro-Services Model\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nThe programming model in ActingWeb is based on an extreme focus on only representing one small set of functionality\nand for only one user or entity. This is achieved by not allowing any other way of calling the service\n(in ActingWeb called a \"mini-application\") than through a user and the mini-app's REST interface (a user's\ninstance of a mini-application is called an *actor* in ActingWeb). From a practical point of view, getting xyz's\nlocation through the REST protocol is as simple as doing a GET ``http://mini-app-url/xyz/properties/location``.\n\nThere is absolutely no way of getting xyz's and yyz's location information in one request, and the security model\nenforces access based on user (i.e. actor), so even if you have access to\n``http://mini-app-url/xyz/properties/location``, you may not have access to\n``http://mini-app-url/yyz/properties/location``.\n\nAny functionality desired across actors, for example xyz sharing location information with yyz\n**MUST** be done through the ActingWeb REST protocol. However, since the ActingWeb service-to-service\nREST protocol is standardised, **any** service implementing the protocol can easily share data with other services.\n\nThe ActingWeb REST Protocol\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nThe ActingWeb REST protocol specifies a set of default endpoints (like ``/properties``, ``/trust``,\n``/subscriptions`` etc) that are used to implement the service-to-service communication, as well as a set of\nsuggested endpoints (like ``/resources``, ``/actions`` etc) where the mini-applications can expose their own\nfunctionality. All exchanges are based on REST principles and a set of flows are built into the protocol that\nsupport exchanging data, establishing trust between actors (per actor, not per mini-application), as well as\nsubscribing to changes.\n\nThe ActingWeb Security Model\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nThe security model is based on trust between actors, not mini-applications. This means that each instance of the\nmini-application holding the sensitive data for one particular person or thing **must** be connected through a trust\nrelationship to another ActingWeb actor, but it doesn't have to be a mini-application of the same type (like location\nsharing), but could be a location sharing actor establishing a trust relationship with 911 authorities to\nallow emergency services to always be able to look you up.\n\nThere are currently two ways of establishing trust between actors: either through an explicit OAuth flow where an\nactor is tied to somebody's account somewhere else (like Google, Box.com, etc) or through a flow where one actor\nrequests a trust relationship with another, which then needs to be approved either interactively by a user or\nprogramatically through the REST interface.\n\nSee `http://actingweb.org/ <http://actingweb.org/>`_ for more information.\n\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://actingweb.org",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "actingweb",
    "platform": "",
    "project_url": "https://pypi.org/project/actingweb/",
    "release_url": "https://pypi.org/project/actingweb/2.2.2/",
    "requires_dist": [
      "logging",
      "urlfetch",
      "boto3",
      "pynamodb"
    ],
    "requires_python": "<3",
    "summary": "The official ActingWeb library",
    "version": "2.2.2"
  },
  "releases": {
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "135ea746f11594ec7558cb5d145d143e",
          "sha256": "5fe2441f598cc97bc855289014b9d4db2b4b2358fc8a2fa5d101969abd670d26"
        },
        "downloads": -1,
        "filename": "actingweb-2.1.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "135ea746f11594ec7558cb5d145d143e",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 29261,
        "upload_time": "2017-11-05T08:05:36",
        "url": "https://files.pythonhosted.org/packages/de/38/dd3037f6415df49b72556d4bfb087868927fed10b7149169837b371819e8/actingweb-2.1.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a8b1eae5ac18ddb20adf1ecfd8f512c3",
          "sha256": "e13ba2bd7f5f25e9967c5c047ed4d1005fdc9034888bcfefd7c92ae808b065c9"
        },
        "downloads": -1,
        "filename": "actingweb-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a8b1eae5ac18ddb20adf1ecfd8f512c3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 60604,
        "upload_time": "2017-10-07T14:49:05",
        "url": "https://files.pythonhosted.org/packages/2c/6d/c9196adc3efaeb73435c38ea9c3f991aac426bc94dd5c04db2d2d9b79b85/actingweb-2.1.0.tar.gz"
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "aa36b54ae41802537be372ddd1ca2c9c",
          "sha256": "f41098809b8c726d39043fe42107d98a71ad7d4fca531c6156aa1c1cdea3d9c7"
        },
        "downloads": -1,
        "filename": "actingweb-2.1.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa36b54ae41802537be372ddd1ca2c9c",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 29262,
        "upload_time": "2017-11-05T08:06:32",
        "url": "https://files.pythonhosted.org/packages/ee/d4/4a817b0de3819e5995e04dc2f28cfc5e380986e10c016741994e49af5ebb/actingweb-2.1.1-py2-none-any.whl"
      }
    ],
    "2.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cf08c1951057a9aca9050a0e4cdb4765",
          "sha256": "acad506ef28395a388b59ced792ae0a3301632f3f1c5eab03db88965ed17e77d"
        },
        "downloads": -1,
        "filename": "actingweb-2.1.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf08c1951057a9aca9050a0e4cdb4765",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 63104,
        "upload_time": "2017-11-12T09:17:03",
        "url": "https://files.pythonhosted.org/packages/b9/98/1226b68b7fed5ba56c82e047eceaecbec49954a0e80cd018635e0b57af05/actingweb-2.1.2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "91ac8b745493cf9edb725ff6bc74e340",
          "sha256": "3f6aea23e9fc2d27e0383c4028e9e051f5c4be5e8b756bd8f27759d7eba33351"
        },
        "downloads": -1,
        "filename": "actingweb-2.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "91ac8b745493cf9edb725ff6bc74e340",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 83980,
        "upload_time": "2017-11-12T09:17:04",
        "url": "https://files.pythonhosted.org/packages/31/c6/5ee003e941fd1a12c7fc29fe5aa4fa7f8251a640546fcb4986c9ef0b47e0/actingweb-2.1.2.tar.gz"
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6a136238241ed5281e3f5acc6d4ce75a",
          "sha256": "801f2d8885c1393dfe9965a81165a00ff2b6e9af93b6f53fcbc8318076f99ebb"
        },
        "downloads": -1,
        "filename": "actingweb-2.2.0.macosx-10.6-intel.tar.gz",
        "has_sig": false,
        "md5_digest": "6a136238241ed5281e3f5acc6d4ce75a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 115022,
        "upload_time": "2017-11-25T19:51:27",
        "url": "https://files.pythonhosted.org/packages/0b/37/f9aa8192c40f33f212cd6454aa117410648ab9bb85376c00b2a56fa43eef/actingweb-2.2.0.macosx-10.6-intel.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4b1f573c3a3d0eb34d85119d45094863",
          "sha256": "a724bd54d3d80515cd9ab745001797690b6f27bf6a320ae095ca46198cfd6a4d"
        },
        "downloads": -1,
        "filename": "actingweb-2.2.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b1f573c3a3d0eb34d85119d45094863",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 73476,
        "upload_time": "2017-11-25T20:05:01",
        "url": "https://files.pythonhosted.org/packages/f2/b1/945eb8da64578ba7e642789868fee82afbfde0504f50a822760704119b42/actingweb-2.2.0-py2-none-any.whl"
      }
    ],
    "2.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "692537a61767e340588db8c897a248cb",
          "sha256": "a975a15f9c29aaccf400ff28fde699e282d93d51e4a64f0f1bac726fbfdef669"
        },
        "downloads": -1,
        "filename": "actingweb-2.2.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "692537a61767e340588db8c897a248cb",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 73656,
        "upload_time": "2017-12-03T07:04:19",
        "url": "https://files.pythonhosted.org/packages/47/48/b8249ee26d8f7cf5f4d0dc30379312097877843b33fe2d1ec684192dcad5/actingweb-2.2.1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8ca90d4ed20f81f010e22f5b64298490",
          "sha256": "d389514cd821a6a870ae069f154a812a445aaf8ff6682fd82606b35171f6729f"
        },
        "downloads": -1,
        "filename": "actingweb-2.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8ca90d4ed20f81f010e22f5b64298490",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 90469,
        "upload_time": "2017-12-03T07:04:22",
        "url": "https://files.pythonhosted.org/packages/82/2b/0155b0839334a68318833f1e1ef61cc6f49e1b49d33706434b1c77ec5f07/actingweb-2.2.1.tar.gz"
      }
    ],
    "2.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2d922799f9400ce776b69ea34cd9bcd1",
          "sha256": "2e67dd939a12eecf48b54479762ed1272e2c4f6df760950a46888a9b3a87f99f"
        },
        "downloads": -1,
        "filename": "actingweb-2.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d922799f9400ce776b69ea34cd9bcd1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 73691,
        "upload_time": "2017-12-03T13:23:55",
        "url": "https://files.pythonhosted.org/packages/f2/1c/0fc92858e2b1632c5ea1050605f20049d1e0ee8b6709a11a47bd365c99cf/actingweb-2.2.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6302b210f18bd34023b863d8e01aa70b",
          "sha256": "79334d9706759983d204e89bfdb81c4a5b3da3937d90dda86e3486864e4c5f3b"
        },
        "downloads": -1,
        "filename": "actingweb-2.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6302b210f18bd34023b863d8e01aa70b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 90503,
        "upload_time": "2017-12-03T13:23:56",
        "url": "https://files.pythonhosted.org/packages/8d/81/e86bea21a4bf77f8e9d63009717528831177fcc5a9057ee54906708ed3a7/actingweb-2.2.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2d922799f9400ce776b69ea34cd9bcd1",
        "sha256": "2e67dd939a12eecf48b54479762ed1272e2c4f6df760950a46888a9b3a87f99f"
      },
      "downloads": -1,
      "filename": "actingweb-2.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2d922799f9400ce776b69ea34cd9bcd1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 73691,
      "upload_time": "2017-12-03T13:23:55",
      "url": "https://files.pythonhosted.org/packages/f2/1c/0fc92858e2b1632c5ea1050605f20049d1e0ee8b6709a11a47bd365c99cf/actingweb-2.2.2-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "6302b210f18bd34023b863d8e01aa70b",
        "sha256": "79334d9706759983d204e89bfdb81c4a5b3da3937d90dda86e3486864e4c5f3b"
      },
      "downloads": -1,
      "filename": "actingweb-2.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6302b210f18bd34023b863d8e01aa70b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 90503,
      "upload_time": "2017-12-03T13:23:56",
      "url": "https://files.pythonhosted.org/packages/8d/81/e86bea21a4bf77f8e9d63009717528831177fcc5a9057ee54906708ed3a7/actingweb-2.2.2.tar.gz"
    }
  ]
}