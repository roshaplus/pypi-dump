{
  "info": {
    "author": "Gaetan Semet",
    "author_email": "gaetan@xeberon.net",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "===============================\ncfgtree - Configuration as Tree\n===============================\n\n.. image:: https://travis-ci.org/Stibbons/cfgtree.svg?branch=master\n    :target: https://travis-ci.org/Stibbons/cfgtree\n.. image:: https://readthedocs.org/projects/cfgtree/badge/?version=latest\n   :target: http://cfgtree.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n.. image:: https://coveralls.io/repos/github/Stibbons/cfgtree/badge.svg\n   :target: https://coveralls.io/github/Stibbons/cfgtree\n.. image:: https://badge.fury.io/py/cfgtree.svg\n   :target: https://pypi.python.org/pypi/cfgtree/\n   :alt: Pypi package\n.. image:: https://img.shields.io/badge/license-MIT-blue.svg\n   :target: ./LICENSE\n   :alt: MIT licensed\n\n* Free software: MIT\n* Documentation: https://cfgtree.readthedocs.org/en/latest/\n* Source: https://github.com/Stibbons/cfgtree\n\nDescription\n===========\n\nThis module provides an easy yet comprehensive way of defining a configuration tree\nfor any application.\n\nIt requires the following acknolegdment:\n\n- Application settings are organize in a hierarchical structure, dependend of the application\n  itself. This structure is called in cfgtree: \"bare config\".\n\n- User settings may come from different inputs:\n\n  - environment variables (12 factors approach)\n  - command line argument\n  - configuration storage such as file (json, yaml, ini) or configuration server\n\nSimilar opensource projects\n---------------------------\n\n* Openstack's `Olso.config <https://docs.openstack.org/oslo.config/latest/>`_\n\nConfiguration Storage\n---------------------\n\nThe trivial storage is a simple json file. The complete settings are placed inside it, such as::\n\n    {\n        'setting1': 'value1',\n        'setting2': 'value2',\n        'setting3': 'value3',\n    }\n\nBut developer may want to organize in a more hierarchical structure, splitting into different files,\netc.\n\nAnother typical file format for configuration is YAML, which is more human readable and allow\ninserting comments and so.\n\nBut, ultimately, all file format actually stores a hierarchical configuration.\n\nCurrent Support:\n\n- single Json file\n\nFuture support:\n\n- Yaml file (with inplace save keeping comments and overall organization)\n- Set of Yaml files\n- Configuration server\n\nConfiguration Tree Description\n------------------------------\n\nConfiguration hierarchy is to be described in a `cfgtree.EnvironmentConfig` inherited instance,\ninside the member `.cfgtree`, using helper classes such as `StringCfg`, 'IntCfg', 'UserCfg' or\n'PasswordCfg'. Each setting can be set by environment variable, command line parameter or by\nthe storage file(s) itself.\n\nLet's take an example of an item defined at the first level of the hierarchy. It is defined as a\n'IntCfg' with name 'count'. It can be set by the following:\n\n- environment variable ``APPLICATIONNAME_COUNT`` (where ``APPLICATIONNAME`` is an optional\n  developer-defined prefix added to every environment variable to avoid conflicts)\n- command line argument ``--count``\n- item `count` at the first level of a json file\n\nHierarchical structure is reflected in these different ways, to avoid conflicts. Now, the 'count'\nsetting is set in a settings section called 'general':\n\n- environment variable: ``APPLICATIONNAME_GENERAL_COUNT``\n- command line argument: ``--general-count``\n- Json has a first level named ``general``, and inside one of the items is called ``count``.\n\nXPath syntax\n------------\n\nA xpath-like syntax allows to reach any item of the configuration: ``<key1>.<key2>.<key3>.<item>``.\n\nDocumentation\n=============\n\nFull documentation is provided on `ReadTheDocs <https://cfgtree.readthedocs.org/en/latest/>`_.\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Stibbons/cfgtree",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cfgtree",
    "platform": "",
    "project_url": "https://pypi.org/project/cfgtree/",
    "release_url": "https://pypi.org/project/cfgtree/0.1.0/",
    "requires_dist": [
      "pbr (>=3.0)"
    ],
    "requires_python": "",
    "summary": "Automatic configuration file, command line, environment variable parser",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "22280dee808a2020fe31b2331a13f2a2",
          "sha256": "f61e6668fd5e148a6f7423379ae9badaba07e2f890eb5bcb3d9f2d1b66e03c0b"
        },
        "downloads": -1,
        "filename": "cfgtree-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22280dee808a2020fe31b2331a13f2a2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 12995,
        "upload_time": "2018-01-06T10:11:13",
        "url": "https://files.pythonhosted.org/packages/d8/5f/0ad546c4a5a242e439114208978d065a3d3ae7aaf2d1147cb575209c3654/cfgtree-0.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "31e34892d57163a1ca92fdaabedeeca4",
          "sha256": "ef04550bc62fef9e960c57d5e9872af5598a82e1410d79438c83652725b9d4aa"
        },
        "downloads": -1,
        "filename": "cfgtree-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "31e34892d57163a1ca92fdaabedeeca4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20801,
        "upload_time": "2018-01-06T10:11:14",
        "url": "https://files.pythonhosted.org/packages/25/cd/2828670379793deb32e3e8d650fc0a8606447e023d96b8698338e3780827/cfgtree-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "22280dee808a2020fe31b2331a13f2a2",
        "sha256": "f61e6668fd5e148a6f7423379ae9badaba07e2f890eb5bcb3d9f2d1b66e03c0b"
      },
      "downloads": -1,
      "filename": "cfgtree-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "22280dee808a2020fe31b2331a13f2a2",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 12995,
      "upload_time": "2018-01-06T10:11:13",
      "url": "https://files.pythonhosted.org/packages/d8/5f/0ad546c4a5a242e439114208978d065a3d3ae7aaf2d1147cb575209c3654/cfgtree-0.1.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "31e34892d57163a1ca92fdaabedeeca4",
        "sha256": "ef04550bc62fef9e960c57d5e9872af5598a82e1410d79438c83652725b9d4aa"
      },
      "downloads": -1,
      "filename": "cfgtree-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "31e34892d57163a1ca92fdaabedeeca4",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 20801,
      "upload_time": "2018-01-06T10:11:14",
      "url": "https://files.pythonhosted.org/packages/25/cd/2828670379793deb32e3e8d650fc0a8606447e023d96b8698338e3780827/cfgtree-0.1.0.tar.gz"
    }
  ]
}