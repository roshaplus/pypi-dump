{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Home-page: https://github.com/nateshmbhat/Yify-Python\nAuthor: Natesh M Bhat\nAuthor-email: nateshmbhatofficial@gmail.com\nLicense: MIT\nDescription: Yify for Python\n        ===============\n        \n        This is Python Library which is used to get the Top seeded torrents at\n        any given time and get the entire movie details and ratings .\n        \n        Its also useful to search for any movie using different parameters and\n        obtain their magnet link or torrent file of any preferred quality.\n        \n        Features :\n        ----------\n        \n        -  **Search for movie torrents**\n        -  **Get the details of any movie which includes :**\n        \n           -  Torrent details of 720p,1080p,3D quality\n           -  Torrent Magnet links and hashes along with their size and seeds\n           -  imdb\\_code\n           -  Imdb Rating and MPA rating\n           -  Year\n           -  Runtime\n           -  Summary\n           -  Movie Description\n        \n        All the above Details are obtained in the form of attributes of\n        Yify.movie object each object representing a movie.\n        \n        -  Get the Top Most Seeded Torrents listed in the Yify Website\n        -  Download the torrent file of a corresponding torrent.\n        -  Start the torrent download directly without having to download it\n           from the user's default torrent client.\n        \n        Installation :\n        --------------\n        \n        Python3\n        ~~~~~~~\n        \n        ::\n        \n            pip install pyYify\n        \n        or\n        \n        ::\n        \n            pip3 install pyYify\n        \n        Usage :\n        -------\n        \n        **First import yify to use its functions.**\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n        \n        .. raw:: html\n        \n           <!-- -->\n        \n        ::\n        \n            from pyYify import yify\n        \n        There are two classes in yify namely 'movie' and 'torrent'.\n        \n        **Search for movies.**\n        ~~~~~~~~~~~~~~~~~~~~~~\n        \n        On searching , it returns a list of movies (movie objects) .\n        \n        ::\n        \n            movies_list = yify.search_movies(search_string , quality , minimum_rating , genre)\n        \n        The search\\_string for the movie can be 'Movie Title/IMDb Code, Actor\n        Name, Director Name'. quality = 'All' , '720p' , '1080p' , '3D'.\n        minimum\\_rating is an imdb\\_rating. genre = See\n        https://www.imdb.com/genre/ for a list of genres.\n        \n        **Get the top seeded movies from Yify**\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n        \n        .. raw:: html\n        \n           <!-- -->\n        \n        ::\n        \n            movies_list  = yify.get_top_seeded_torrents() ;\n        \n        Returns a list of movies, each movie object only contains its Name and\n        Webpage unlike the searching method which has all the details in the\n        returned movies. To get the rest of the movie details use getinfo()\n        method .\n        \n        ::\n        \n            for movie in movies_list:\n                movie.getinfo() ;\n        \n        -  .. rubric:: **Each movie Object has has the following data :**\n              :name: each-movie-object-has-has-the-following-data\n        \n           -  id\n           -  url\n           -  imdb\\_code\n           -  title\n           -  title\\_long\n           -  slug\n           -  year\n           -  rating\n           -  runtime\n           -  genres\n           -  summary\n           -  description\n           -  language\n           -  mpa\\_rating\n           -  image\\_links\n           -  torrents\n        \n        The movie.torrents is a list of torrents each of which corresponds to\n        the torrent of same movie but of different quality. ('720p' , '1080p' or\n        '3D' )\n        \n        -  .. rubric:: **Each torrent has the following data :**\n              :name: each-torrent-has-the-following-data\n        \n           -  name\n           -  url\n           -  magnet\n           -  hash\n           -  quality\n           -  seeds\n           -  peers\n           -  size\n           -  date\\_uploaded\n        \n        .. raw:: html\n        \n           <!-- -->\n        \n        ::\n        \n            movie1 = movies_list[0] \n            torrent1 = movie1.torrents[0]\n        \n            print(\"Magnet link = \" , torrent1.magnet)\n        \n        **Downloading the Torrent file of a movie**\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n        \n        .. raw:: html\n        \n           <!-- -->\n        \n        ::\n        \n            torrent1.download_torrent_file( path , filename )\n        \n        **Starting the download directly using magnet link without downloading the torrent file .**\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n        \n        This starts the default torrent client prompting the download dialog :\n        \n        ::\n        \n            torrent1.start_download()\n        \nKeywords: yify,torrent-python,movie-torrent,torrent,pyyify,Yify,yify torrent,yify download,download yify,yifyer,yifypy,torrent download,movie torrent,movie downloader,movie finder\nPlatform: UNKNOWN\nClassifier: Programming Language :: Python :: 3.2\nClassifier: Programming Language :: Python :: 3.3\nClassifier: Programming Language :: Python :: 3.4\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyYify",
    "platform": "",
    "project_url": "https://pypi.org/project/pyYify/",
    "release_url": "https://pypi.org/project/pyYify/1.8.6/",
    "requires_dist": [
      "urllib3",
      "urllib",
      "requests",
      "bs4"
    ],
    "requires_python": "",
    "summary": " This Module is used to get the Top seeded torrents at any given time and get the entire movie details and ratings . Its also useful to search for any movie using different parameters and obtain their magnet link or torrent file of any prefered quality.",
    "version": "1.8.6"
  },
  "releases": {
    "1.8.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5f2854803f5f58dc57cd4b90ede0cd54",
          "sha256": "6a12a709efada07759970927bc35ea5bf9fff946be206f457420678d423260be"
        },
        "downloads": -1,
        "filename": "pyYify-1.8.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f2854803f5f58dc57cd4b90ede0cd54",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 7886,
        "upload_time": "2017-11-25T13:59:37",
        "url": "https://files.pythonhosted.org/packages/9c/37/d8c726d6e856c6bb28c03280c5c0b5dc066e5e2d9199a2e7d2b28bded681/pyYify-1.8.6-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b05bf81683427aafd4cbd8235b13092b",
          "sha256": "71fc2b82ecb39d1be495fc4f5f104b396fc84b2716f2d6b7bb268fe19cf31ecb"
        },
        "downloads": -1,
        "filename": "pyYify-1.8.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b05bf81683427aafd4cbd8235b13092b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6218,
        "upload_time": "2017-11-25T13:59:38",
        "url": "https://files.pythonhosted.org/packages/23/8f/10f0f6da4560f695f4faaf3b7710d5857866b42819c0e512dc3973816cff/pyYify-1.8.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5f2854803f5f58dc57cd4b90ede0cd54",
        "sha256": "6a12a709efada07759970927bc35ea5bf9fff946be206f457420678d423260be"
      },
      "downloads": -1,
      "filename": "pyYify-1.8.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5f2854803f5f58dc57cd4b90ede0cd54",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 7886,
      "upload_time": "2017-11-25T13:59:37",
      "url": "https://files.pythonhosted.org/packages/9c/37/d8c726d6e856c6bb28c03280c5c0b5dc066e5e2d9199a2e7d2b28bded681/pyYify-1.8.6-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "b05bf81683427aafd4cbd8235b13092b",
        "sha256": "71fc2b82ecb39d1be495fc4f5f104b396fc84b2716f2d6b7bb268fe19cf31ecb"
      },
      "downloads": -1,
      "filename": "pyYify-1.8.6.tar.gz",
      "has_sig": false,
      "md5_digest": "b05bf81683427aafd4cbd8235b13092b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6218,
      "upload_time": "2017-11-25T13:59:38",
      "url": "https://files.pythonhosted.org/packages/23/8f/10f0f6da4560f695f4faaf3b7710d5857866b42819c0e512dc3973816cff/pyYify-1.8.6.tar.gz"
    }
  ]
}