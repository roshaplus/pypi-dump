{
  "info": {
    "author": "Dave Hylands",
    "author_email": "dhylands@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Embedded Systems",
      "Topic :: System :: Shells",
      "Topic :: Terminals :: Serial",
      "Topic :: Utilities"
    ],
    "description": "rshell\n=========\n\nRemote MicroPytyhon shell.\n\nThis is a simple shell which runs on the host and uses MicroPython's\nraw-REPL to send python snippets to the pyboard in order to get\nfilesystem information, and to copy files to and from MicroPython's\nfilesystem.\n\nIt also has the ability to invoke the regular REPL, so rshell can be\nused as a terminal emulator as well.\n\nNote: With rshell you can disable USB Mass Storage and still copy files\ninto and out of your pyboard.\n\nWhen using the commands, the /flash directory, and the /sdcard directory\n(if an sdcard is inserted) are considered to be on the pyboard, and all\nother directories are considered to be on the host.\n\nNOTE: rshell requires a fairly recent version of the MicroPython\nfirmware, specifically one which contains the ubinascii.unhexlify\ncommand which was added May 19, 2015 (v1.4.3-28-ga3a14b9 or newer).\n\nIf your verion of the firmware isn't new enough, then you'll see an\nerror message something like this:\n\n::\n\n    >./rshell.py\n    rshell needs MicroPython firmware with ubinascii.unhexlify\n\nInstallation\n============\n\nYou can install rshell using the command:\n\n::\n\n    sudo pip3 install rshell\n\nIf you use a virtualenv, then you don't need the sudo. rshell needs Python3.\nAll of my testing was done using version 3.4.0.\n\nDebian/Ubuntu users can get pip3 using:\n\n::\n\n    sudo apt-get install python3-pip\n\nSample Session\n==============\n\nThis shows a pyboard in its default state, copying a hello.py and then\nentering the repl and importing it.\n\n::\n\n    >rshell\n    Welcome to rshell. Use Control-D to exit.\n    /home/dhylands/Dropbox/micropython/rshell> ls -l /flash\n       529 May 21 17:34 README.txt\n       286 May 21 17:34 boot.py\n        34 May 21 17:34 main.py\n      2436 May 21 17:34 pybcdc.inf\n    /home/dhylands/Dropbox/micropython/rshell> cp hello.py /flash\n    /home/dhylands/Dropbox/micropython/rshell> ls -l /flash\n       529 May 21 17:34 README.txt\n       286 May 21 17:34 boot.py\n        21 May 21 17:35 hello.py\n        34 May 21 17:34 main.py\n      2436 May 21 17:34 pybcdc.inf\n    /home/dhylands/Dropbox/micropython/rshell> cat /flash/hello.py\n    print('Hello World')\n    /home/dhylands/Dropbox/micropython/rshell> repl\n    Entering REPL. Use Control-X to exit.\n\n    Micro Python v1.4.3-28-ga3a14b9 on 2015-05-21; PYBv1.0 with STM32F405RG\n    Type \"help()\" for more information.\n    >>> \n    >>> import hello\n    Hello World\n    >>> \n    /home/dhylands/Dropbox/micropython/rshell> \n\nCommand Line Options\n====================\n\n-h, --help\n----------\n\nDisplays a lit of the valid options. You should get something like the\nfollowing displayed:\n\n::\n\n    usage: rshell [options] [command]\n\n    Remote Shell for a MicroPython board.\n\n    positional arguments:\n      cmd                   Optional command to execute\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -b BAUD, --baud BAUD  Set the baudrate used (default = 115200)\n      --buffer-size BUFFER_SIZE\n                            Set the buffer size used for transfers (default = 512)\n      -p PORT, --port PORT  Set the serial port to use (default '/dev/ttyACM0')\n      -u USER, --user USER  Set username to use (default 'micro')\n      -w PASSWORD, --password PASSWORD\n                            Set password to use (default 'python')\n      -e EDITOR, --editor EDITOR\n                            Set the editor to use (default 'vi')\n      -f FILENAME, --file FILENAME\n                            Specifies a file of commands to process.\n      -d, --debug           Enable debug features\n      -n, --nocolor         Turn off colorized output\n      --wait                How long to wait for serial port\n      --binary              Enable binary file transfer\n      --timing              Print timing information about each command\n      --quiet               Turns off some output (useful for testing)\n\n    You can specify the default serial port using the RSHELL_PORT environment\n    variable.\n\n-b BAUD, --baud BAUD\n--------------------\n\nSets the baud rate to use when talking to the pyboard over a serial port. If\nno baud is specified, then the baudrate from the RSHELL_BAUD enviroinment\nvariable is used. If the RSHELL_BAUD environment variable is not defined then\nthe default baudrate of 115200 is used.\n\n--buffer-size\n-------------\n\nSets the buffer size used when transferring files betweem the host and the\npyboard. If no buffer size is specified, then the value from the\nRSHELL_BUFFER_SIZE environment variable is used. If the RSHELL_BUFFER_SIZE\nenvironment variable is not defined, then the default of 512 is used.\n\n-d, --debug\n-----------\n\nTurns on debugging. This allows you to see the script which is sent over\nthe raw REPL and the response received.\n\n-e EDITOR, --editor\n-------------------\n\nSpecifies the editor to use with the edit command. If no editor is specified,\nthen the following environment variables will be searched: RSHELL_EDITOR,\nVISUAL, and EDITOR. If none of those environment variables is set then vi will\nbe used.\n\n-f FILENAME, --file FILENAME\n----------------------------\n\nSpecifies a file of rshell commands to process. This allows you to\ncreate a script which executes any valid rshell commands.\n\n-n, --nocolor\n-------------\n\nBy default, rshell uses ANSI color escape codes when displaying the\nprompt and ls output. This option allows colorized output to be\ndisabled.\n\n-a --ascii\n----------\n\nOn certain platforms the raw REPL mode is unreliable with particular sequences\nof binary characters. Specifying --ascii enables the transfer of binary files\nto such platforms. It does this by encoding the data as ASCII hex.\n\n--wait\n------\n\nIf a port is specified defines how long rshell will wait for the port to exist\nand for a connection to be established. The default is 0 seconds specifying an\nimmediate return.\n\n-p PORT, --port PORT\n--------------------\n\nSpecifies the serial port which should be used to talk to the\nMicroPython board. You can set the RSHELL\\_PORT environment variable to\nspecify the default port to be used, if --port is not specified on the\ncommand line.\n\n--quiet\n-------\n\nThis option causes the Connecting messages printed when rshell starts to be\nsuppressed. This is mostly useful for the test scripts.\n\n--timing\n--------\n\nIf the timing option is specified then rshell will print the amount of time\nthat each command takes to execute.\n\n-u USER, --user USER\n--------------------\n\nSpecifies the username to use when logging into a WiPy over telent. If no\nusername is specified, then the username from the RSHELL_USER environment\nvariable is used. If the RSHELL_USER environment variable doesn't exist\nthen the default username 'micro' is used.\n\n-w PASSWORD, --password PASSWORD\n--------------------------------\n\nSpecified the password to use when logging into a WiPy over telnet. If no\npassword is specified, then the password from the RSHELL_PASSWORD environment\nvariable is used. If the RSHELL_PASSWORD environment variable doesn't exist\nthen the default password 'python' is used.\n\ncmd\n---\n\nIf a command is specified, then that command will be executed and rshell will\nexit. Examples:\n\n::\n\n    rshell cp somefile.py /flash\n    rshell repl ~ pyb.bootloader() ~\n\nFile System\n===========\n\nrshell can be connected to multiple pyboards simultaneously. If the\nboard module exists on the pyboard (i.e. a file named board.py somewhere\nin the module search path) and it contains an attribute called name then\nthe pyboard will use that name. If the board module can't be imported\nthen the board will be named, pyboard or wipy. Names will have -1 (or\nsome other number) to make the board name unique.\n\nYou can access the internal flash on the first board connected using\n/flash and the sd card on the first board connected can be accessed\nusing /sd.\n\nFor all other connected pyboards, you can use /board-name/flash or\n/board-name/sd (you can see the board names using the boards command).\n\nThe boards command will show all of the connected pyboards, along with all of\nthe directories which map onto that pyboard.\n\nCommands\n========\n\nargs\n----\n\n::\n\n    args [arguments...]\n\nDebug function for verifying argument parsing. This function just prints\nout each argument that it receives.\n\nboards\n------\n\n::\n\n    boards\n\nLists all of the boards that rshell is currently connected to, their\nnames, and the connection.\n\ncat\n---\n\n::\n\n    cat FILENAME...\n\nConcatinates files and sends to stdout.\n\ncd\n--\n\n::\n\n    cd DIRECTORY\n\nChanges the current directory. ~ expansion is supported, and cd - goes\nto the previous directory.\n\nconnect\n-------\n\n::\n\n    connect TYPE TYPE_PARAMS\n    connect serial port [baud]\n    connect telnet ip-address-or-name\n\nConnects a pyboard to rshell. rshell can be connected to multiple\npyboards simultaneously.\n\ncp\n--\n\n::\n\n    usage: cp SOURCE DEST\n    cp SOURCE... DIRECTORY\n    cp [-r|--recursive] [SOURCE|SRC_DIR]... DIRECTORY\n    cp [-r|--recursive] PATTERN DIRECTORY\n\n    positional arguments:\n      DEST             A destination file\n      SOURCE           File to copy\n      SRC_DIR          Directory to copy\n      PATTERN          File or directory pattern match string e.g. foo/*.py\n\n    optional arguments:\n      -h, --help       show this help message and exit\n      -r, --recursive  copy directories recursively\n\nCopies the SOURCE file to DEST. DEST may be a filename or a directory\nname. If more than one source file is specified, then the destination\nshould be a directory.\n\nDirectories will only be copied if -r is specified.\n\nA single pattern may be specified, in which case the destination\nshould be a directory. Pattern matching is performed according to a subset\nof the Unix rules (see below). \n\nRecursive copying uses rsync (see below): where a file exists on source\nand destination, it will only be copied if the source is newer than the\ndestination.\n\n\necho\n----\n\n::\n\n    echo TEXT...\n\nDisplay a line of text.\n\nedit\n----\n\n::\n\n    edit filename\n\nIf the file is on a pyboard, it copies the file to host, invokes an\neditor and if any changes were made to the file, it copies it back to\nthe pyboard.\n\nThe editor which is used defaults to vi, but can be overridem using\neither the --editor command line option when rshell.py is invoked, or by\nusing the RSHELL\\_EDITOR, VISUAL or EDITOR environment variables (they\nare tried in the order listed).\n\nfilesize\n--------\n\n::\n\n    filesize FILE\n\nPrints the size of the file, in bytes. This function is primarily\ntesting.\n\nfiletype\n--------\n\n::\n\n    filetype FILE\n\nPrints the type of file (dir or file). This function is primarily for\ntesting.\n\nhelp\n----\n\n::\n\n    help [COMMAND]\n\nList available commands with no arguments, or detailed help when a\ncommand is provided.\n\nls\n--\n\n::\n\n    usage: ls [-a] [-l] [FILE|DIRECTORY|PATTERN]...\n\n    List directory contents.\n\n    positional arguments:\n      FILE        File to list (show absolute path)\n      DIRECTORY   Directory (list contents)\n      PATTERN     File or directory pattern match string e.g. foo/*.py\n\n    optional arguments:\n      -h, --help  show this help message and exit\n      -a, --all   do not ignore hidden files\n      -l, --long  use a long listing format\n\nPattern matching is performed according to a subset of the Unix rules\n(see below). \n\nmkdir\n-----\n\n::\n\n    mkdir DIRECTORY...\n\nCreates one or more directories.\n\nrepl\n----\n\n::\n\n    repl [board-name] [~ line][ ~]\n\nEnters into the regular REPL with the MicroPython board. Use Control-X\nto exit REPL mode and return the shell. It may take a second or two\nbefore the REPL exits.\n\nIf you provide a board-name then rshell will connect to that board,\notherwise it will connect to the default board (first connected board).\n\nIf you provide a tilde followed by a space (~ ) then anything after the\ntilde will be entered as if you typed it on the command line.\n\nIf you want the repl to exit, end the line with the ~ character.\n\nFor example, you could use:\n\n::\n\n    rshell.py repl ~ pyb.bootloader()~\n\nand it will boot the pyboard into DFU.\n\nIf you want to execute multiple Python commands these should be separated\nby the ~ character (not the ; character):\n\n::\n\n    rshell.py repl ~ import mymodule ~ mymodule.run()\n\nrm\n--\n\n::\n\n    usage: rm [-f|--force] FILE...\n    rm [-f|--force] PATTERN\n    rm -r [-f|--force] PATTERN\n    rm -r [-f|--force] [FILE|DIRECTORY]...\n\n    Removes files or directories (including their contents).\n\n    positional arguments:\n      FILE             File to remove\n      DIRECTORY        Directory to remove (-r required)\n      PATTERN          File matching pattern e.g. *.py\n\n    optional arguments:\n      -h, --help       show this help message and exit\n      -r, --recursive  remove directories and their contents recursively\n      -f, --force      ignore nonexistant files and arguments\n\nA single pattern may be specified. Pattern matching is performed\naccording to a subset of the Unix rules (see below). Directories\ncan only be removed if the recursive argument is provided.\n\nBeware of rm -r * or worse.\n\nrsync\n-----\n\n::\n\n    usage: rsync [-m|--mirror] [-n|--dry-run] [-v|--verbose] SRC_DIR DEST_DIR\n\n    Recursively synchronises a source directory to a destination.\n    Directories must exist.\n\n    positional arguments:\n      SRC_DIR          Directory containing source files.\n      DEST_DIR         Directory for destination\n\n    optional arguments:\n      -h, --help       show this help message and exit\n      -m, --mirror     remove files or directories from destination if\n                       absent from source.\n      -n, --dry-run    make no changes but report what would be done. Implies -v\n      -v, --verbose    report changes made.\n\n\nSynchronisation is performed by comparing the date and time of source\nand destination files. Files are copied if the source is newer than the\ndestination.\n\n\nshell\n-----\n\nThe shell command can also be abbreviated using the exclamation point.\n\n::\n\n    shell some-command\n    !some-command\n\nThis will invoke a command, and return back to rshell. Example:\n\n::\n\n    !make deploy\n\nwill flash the pyboard.\n\nPattern Matching\n================\n\nThis is performed according to a subset of the Unix rules. The limitations\nare that wildcards are only allowed in the rightmost directory of a path and\ncurly bracket {} syntax is unsupported:\n\n::\n\n    *.py Match files in current directory with a .py extension\n    temp/x[0-9]a.* Match temp/x1a.bmp but not temp/x00a.bmp\n\n    t*/*.bmp Invalid: will produce an error message\n    {*.doc,*.pdf} Invalid: will produce an error message\n",
    "docs_url": null,
    "download_url": "https://github.com/dhylands/rshell/tarball/v0.0.1",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/dhylands/rshell",
    "keywords": "micropython shell",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rshell",
    "platform": "",
    "project_url": "https://pypi.org/project/rshell/",
    "release_url": "https://pypi.org/project/rshell/0.0.11/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A remote shell for working with MicroPython boards.",
    "version": "0.0.11"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9d6076837c24dd56268b62064ad6a75c",
          "sha256": "5bc3aea2fb8508287a86b36281725bb78ad50422590c3d99ea0c4e41b9cb81e1"
        },
        "downloads": 384,
        "filename": "rshell-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9d6076837c24dd56268b62064ad6a75c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 31150,
        "upload_time": "2016-01-09T06:57:41",
        "url": "https://files.pythonhosted.org/packages/ce/31/cbbba79317833bedcf763cc520d9d2ac2878772587cd55ae68c9dfce93b8/rshell-0.0.1.tar.gz"
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d1aa053b64fa5251ce4f43995dca18ac",
          "sha256": "9aa32d493dc4b3651e0d7cefc7c48129e96e6a215ac72f013979aaa0d61eefbb"
        },
        "downloads": 0,
        "filename": "rshell-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "d1aa053b64fa5251ce4f43995dca18ac",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40522,
        "upload_time": "2017-05-26T06:19:22",
        "url": "https://files.pythonhosted.org/packages/eb/0e/85bfc72e75ee53aa1c6470b002d33b5d207ec4cb55135e7d8e9cf77b647a/rshell-0.0.10.tar.gz"
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ff83d88296079e2631e87dcf328b09c3",
          "sha256": "1801425051681b8a7fb646428b563a7d9461a2e704665c18ee4ec764f1de21a6"
        },
        "downloads": 0,
        "filename": "rshell-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "ff83d88296079e2631e87dcf328b09c3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 36334,
        "upload_time": "2017-09-24T22:24:25",
        "url": "https://files.pythonhosted.org/packages/51/0e/06a2a6bad1bd08bf1f91d19bb2ebc2676f15b48acafba77a96f59dbad7ed/rshell-0.0.11.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3790f5c0884ba25bea38659ae125bfae",
          "sha256": "ab1219fbe08957c9e4c28a8591cf8c3b360983e8c72ee9d0b02e5015c824fa8b"
        },
        "downloads": 107,
        "filename": "rshell-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3790f5c0884ba25bea38659ae125bfae",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 34623,
        "upload_time": "2016-02-23T23:41:11",
        "url": "https://files.pythonhosted.org/packages/d9/16/1535152a5af8dc7dc696a1bb98aeb05a6d2ab6b12c1b404b37b42744ce7e/rshell-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bf97f3da160af260af42ac6199a780e4",
          "sha256": "05313f19d06c0148be4629015bb8af2349b02ebc789288de07cedbde9574bd85"
        },
        "downloads": 99,
        "filename": "rshell-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bf97f3da160af260af42ac6199a780e4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 35466,
        "upload_time": "2016-02-24T03:25:27",
        "url": "https://files.pythonhosted.org/packages/2d/5c/cd20299cc56778301152dd399c7a63c6f66fdb9182c71cfc666a2c0790cf/rshell-0.0.3.tar.gz"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8c369731dfea354979e8644861b4692f",
          "sha256": "cbe37f851d1b8e536cde8eecea49c2f8f1443a17f92436f23bb695cbbd080533"
        },
        "downloads": 104,
        "filename": "rshell-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8c369731dfea354979e8644861b4692f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 35505,
        "upload_time": "2016-02-24T04:18:36",
        "url": "https://files.pythonhosted.org/packages/58/ba/058236e1079eab17140138147cfa9b46dec5efc000e9a1bf6a393d4d427e/rshell-0.0.4.tar.gz"
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0055dfa379c5ce5ce3a2b084f513b9f6",
          "sha256": "8a80570e9d967bf4065cf28499aeb01931cffbc65904736ff89b7a94b15692c9"
        },
        "downloads": 501,
        "filename": "rshell-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0055dfa379c5ce5ce3a2b084f513b9f6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 31960,
        "upload_time": "2016-04-30T04:32:13",
        "url": "https://files.pythonhosted.org/packages/ac/90/c7bfb8befd602213c5e77201c5063ddf7e8dc3dc7c520f90ae06644458bc/rshell-0.0.5.tar.gz"
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d60a95c7742ad3171df088920b2f0666",
          "sha256": "625039d009366618f018be6d77a436ebc994d75a7182cd4ac43e2fbb3f35aa3f"
        },
        "downloads": 92,
        "filename": "rshell-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d60a95c7742ad3171df088920b2f0666",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32073,
        "upload_time": "2016-11-21T17:17:53",
        "url": "https://files.pythonhosted.org/packages/43/b9/d2280f09d459e3f0ca0b895d759a24b65f25c5aeed579b754846e61d637f/rshell-0.0.6.tar.gz"
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "761e1d37f298a28ac19aeab9d631e334",
          "sha256": "61ca5fe42d3b5e591bfd77974025ecc9f579455c1371d6d6ace70d7c8589fe6e"
        },
        "downloads": 99,
        "filename": "rshell-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "761e1d37f298a28ac19aeab9d631e334",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32226,
        "upload_time": "2016-12-19T19:32:34",
        "url": "https://files.pythonhosted.org/packages/fd/71/bf8e9e7c0b4518933be9a559480cc14364b65412ea23537c71dcfe0a699a/rshell-0.0.7.tar.gz"
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7103e3ba855bbe83ca04aedb2a40867e",
          "sha256": "6117afa8653d4c4912ffb83194c32964ad39aed5c0433895c81687f02be0d1fa"
        },
        "downloads": 7,
        "filename": "rshell-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "7103e3ba855bbe83ca04aedb2a40867e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32156,
        "upload_time": "2017-01-09T08:13:12",
        "url": "https://files.pythonhosted.org/packages/4d/56/85c743e4c17624e4369d78cd61a41f1eb14cd7768f3b8a9836699b59caf6/rshell-0.0.8.tar.gz"
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d9bb67c2f2b5296b6d4b80fbcd39297c",
          "sha256": "cf5993b39e284f364d1f491df088696ae83c9419b4874ef296036ad59bd62284"
        },
        "downloads": 39,
        "filename": "rshell-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "d9bb67c2f2b5296b6d4b80fbcd39297c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 37509,
        "upload_time": "2017-02-12T18:55:17",
        "url": "https://files.pythonhosted.org/packages/80/8c/a2b6021ce34e35433dc93fbe1f9ab81a20ce7b403e3037bb43e449ef4479/rshell-0.0.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ff83d88296079e2631e87dcf328b09c3",
        "sha256": "1801425051681b8a7fb646428b563a7d9461a2e704665c18ee4ec764f1de21a6"
      },
      "downloads": 0,
      "filename": "rshell-0.0.11.tar.gz",
      "has_sig": false,
      "md5_digest": "ff83d88296079e2631e87dcf328b09c3",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 36334,
      "upload_time": "2017-09-24T22:24:25",
      "url": "https://files.pythonhosted.org/packages/51/0e/06a2a6bad1bd08bf1f91d19bb2ebc2676f15b48acafba77a96f59dbad7ed/rshell-0.0.11.tar.gz"
    }
  ]
}