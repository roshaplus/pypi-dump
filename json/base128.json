{
  "info": {
    "author": "Roland Puntaier",
    "author_email": "roland.puntaier@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Education",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development"
    ],
    "description": "If called from command line, this encodes a binary file into base128.\nIf imported from python it provides a base128 class to do the same.\n\nAn instance of base128 can be used to convert to and from base128 encoding.\n\nEncoding: The python package bitarray is used to insert a 0 bit every 8\nbits of the data.  Bitarray cares to shift the bits to make room for the\nnew bit.  This is done in chunks.  \nThe length in bits mod 8 can become greater than zero for chunks of size\nnot equal to a multiple of 7. So ``chunksize`` must be a multiple of 7.\nEven if ``chunksize`` is a multiple of 7 the last chunk \nlikely has to be padded to reach a multiple of 8 after encoding.\nThe amount of padding can be expressed as a function of the original data\nlength mod ``chunksize`` (``modchunk``). ``modchunk`` is added as an\nadditional byte at the end of the encoding.  To make this byte also\nbase128, we require ``chunksize``<=128.\n\nIf ``chars`` is provided, the resulting 7-bit numbers are \nused as indices to map to entries of ``chars``. \nWith bytes ``chars`` the resulting chunks will be integer lists \nand possibly still need to be typed to bytes for further processing::\n\n    with open('tstenc.txt','wb') as f: f.write(b'\\n'.join([bytes(x) for x in encoded]))\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/rpuntaie/base128",
    "keywords": "encoding, base128, iso-8859",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "base128",
    "platform": "",
    "project_url": "https://pypi.org/project/base128/",
    "release_url": "https://pypi.org/project/base128/0.1.0/",
    "requires_dist": [
      "bitarray (>=0.8.1)"
    ],
    "requires_python": ">3.3",
    "summary": "Encodes to and decodes from base128.",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "90b0a17237575e81c41f4a2c2bba74a1",
          "sha256": "dca2f830612899967838be7f9fc4da21f156c5f2bf55f6fc2393ff1e6c7dd938"
        },
        "downloads": 0,
        "filename": "base128-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90b0a17237575e81c41f4a2c2bba74a1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 8277,
        "upload_time": "2017-09-17T22:08:36",
        "url": "https://files.pythonhosted.org/packages/b5/93/709af5f7daf56e6ab23eb818c9c898379cdc9c566a51240d046bde8de61f/base128-0.1.0-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "90b0a17237575e81c41f4a2c2bba74a1",
        "sha256": "dca2f830612899967838be7f9fc4da21f156c5f2bf55f6fc2393ff1e6c7dd938"
      },
      "downloads": 0,
      "filename": "base128-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "90b0a17237575e81c41f4a2c2bba74a1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 8277,
      "upload_time": "2017-09-17T22:08:36",
      "url": "https://files.pythonhosted.org/packages/b5/93/709af5f7daf56e6ab23eb818c9c898379cdc9c566a51240d046bde8de61f/base128-0.1.0-py3-none-any.whl"
    }
  ]
}