{
  "info": {
    "author": "Ryan Garber",
    "author_email": "ryanmichaelgarber@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: WWW/HTTP :: HTTP Servers"
    ],
    "description": "#######\nMiniPyP\n#######\n---------------------------------------\nA more traditional web server in Python\n---------------------------------------\n\nAbout the project\n=================\nMiniPyP (pronounced ``mini\u00b7pipe``) is an event-driven web server written in pure Python. **However, MiniPyP is not an application framework**. It's a full web server, with virtual hosts, reverse proxies, and everything else you need. MiniPyP is intended to replace Apache and nginx, so you can use Python without the performance hit of CGI.\n\nMiniPyP has some more advanced features right out of the box, too. For example, when a user goes to ``/some/url`` on your server, and the directory's ``static`` option is set to False (default), the server will look for the file ``/some/url``. If it doesn't exist, but the file ``/some`` does, that file will be served. Extensions do not need to be specified with the ``static`` option set to False. In addition, if a file does not exist but a file named ``catchall`` exists, it will be served instead of a 404. This makes creating a single-page application that much more elegant.\n\nSetup\n=====\nFirst, install MiniPyP via pip.\n\n.. code-block:: bash\n\n  pip install python\n\nNow let's start a server on ``*:80``. The default document root is ``/var/www/html``.\n\n.. code-block:: python\n\n  from minipyp import MiniPyP\n\n  MiniPyP().start()\n\nSome more basic options include sites (aka virtual hosts) and directory options.\n\n.. code-block:: python\n\n  from minipyp import MiniPyP\n\n  sites = [\n      {\n          'uris': ['mysite.com', 'www.mysite.com']\n          'root': '/var/www/mysite'\n      }\n  ]\n\n  directories = {\n      '/': {\n          'public': False\n      }\n      '/var/www': {\n          'public': True,\n          'indexing': False\n      }\n  }\n\n  MiniPyP(root='/var/www/default', sites=sites, directories=directories).start()\n\nCreating a page\n===============\n\nTo create a page (e.g. 'https://mysite.com/test'), create a file called ``test.py`` in mysite.com's root with the following:\n\n.. code-block:: python\n\n  def render(minipyp, request):\n      return '<p>You requested the page <code>' + request.uri + '</code>.</p>'\n\nYou should now understand basic use of MiniPyP. Visit the documentation to learn all of your options.",
    "docs_url": null,
    "download_url": "https://github.com/RyanGarber/minipyp/archive/0.1.0a2.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/RyanGarber/minipyp",
    "keywords": "http https web cgi fast-cgi fpm ssl tls socket proxy reverse",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minipyp",
    "platform": "",
    "project_url": "https://pypi.org/project/minipyp/",
    "release_url": "https://pypi.org/project/minipyp/0.1.0a2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A more traditional web server",
    "version": "0.1.0a2"
  },
  "releases": {
    "0.1.0a1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "68da8cff28596ffb2e128f5713b9b47a",
          "sha256": "dd53add5a2104d2198cb9e254c2ac09e3a1e760f2bc408787aee60df746e0929"
        },
        "downloads": -1,
        "filename": "minipyp-0.1.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "68da8cff28596ffb2e128f5713b9b47a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7207,
        "upload_time": "2018-01-18T09:55:50",
        "url": "https://files.pythonhosted.org/packages/61/53/1d4a88755d86221534789d391287cb04c345398cb4fc8761db56d6a08183/minipyp-0.1.0a1.tar.gz"
      }
    ],
    "0.1.0a2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fcdd9652dc657ef7875c3435cb0718af",
          "sha256": "2d8fa6cbcdb2d4e408271246d49c08e71ab65995dc916834fe1aa52a6b1b8c4a"
        },
        "downloads": -1,
        "filename": "minipyp-0.1.0a2.tar.gz",
        "has_sig": false,
        "md5_digest": "fcdd9652dc657ef7875c3435cb0718af",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7737,
        "upload_time": "2018-01-19T23:29:14",
        "url": "https://files.pythonhosted.org/packages/31/11/e2daffc46ade31112efec90dafcc6e1b3aa25baa8128361fd9d64fdc921a/minipyp-0.1.0a2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fcdd9652dc657ef7875c3435cb0718af",
        "sha256": "2d8fa6cbcdb2d4e408271246d49c08e71ab65995dc916834fe1aa52a6b1b8c4a"
      },
      "downloads": -1,
      "filename": "minipyp-0.1.0a2.tar.gz",
      "has_sig": false,
      "md5_digest": "fcdd9652dc657ef7875c3435cb0718af",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7737,
      "upload_time": "2018-01-19T23:29:14",
      "url": "https://files.pythonhosted.org/packages/31/11/e2daffc46ade31112efec90dafcc6e1b3aa25baa8128361fd9d64fdc921a/minipyp-0.1.0a2.tar.gz"
    }
  ]
}