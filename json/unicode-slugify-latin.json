{
  "info": {
    "author": "Emin Bugra Saral",
    "author_email": "eminbugrasaral@me.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Environment :: Web Environment :: Mozilla",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![Build Status](https://travis-ci.org/eminbugrasaral/unicode-slugify-latin.svg?branch=master)](https://travis-ci.org/eminbugrasaral/unicode-slugify-latin)\n\n**Links**\n\nPyPi: https://pypi.python.org/pypi/unicode-slugify-latin\n\nGithub: https://github.com/eminbugrasaral/unicode-slugify-latin\n\n# Unicode Slugify (with Latin Hack)\n\nUnicode Slugify is a slugifier that generates unicode slugs.  It was originally\nused in the Firefox Add-ons web site to generate slugs for add-ons and add-on\ncollections.  Many of these add-ons and collections had unicode characters and\nrequired more than simple transliteration.\n\n## Install\n\n    pip install unicode-slugify-latin\n\n## Usage\n\n    >>> import slugify\n\n    >>> slugify.slugify(u'B\u00e4n...g (bang)')\n    u'b\u00e4ng-bang'\n\n## Latin Hack\n\n- Replaces special Latin chars with similar ascii representations.\n- Problem: I want users who speak Latin languages with English keyboards to be able to search through my Latin strings.\n- Solution: Slugify that Latin string by enabling Latin replacement, and match this string with the slugified search word.\n- Example: Strore \"Sabanc\u0131 \u00dcniversitesi\" as \"sabanci-universitesi\" and then users will be able to search with any combination like \"Sabanci\", \"Sabanc\u0131\" and \"SABANCI\".\n- Note: Do not forget to slugify both strings with replace_latin=True\n\n## Example\n\n    >>> from slugify import slugify\n\n    >>> string_without_latin_letters = slugify(u'\u0131spanakl\u0131 bo\u011faz tur\u015fusu', replace_latin=True)\n    u'ispanakli-bogaz-tursusu'\n\n    >>> slugify(u'Ispanakli Bogaz Tursusu') == string_without_latin_letters\n    True\n\n    >>> u'Bogazici'.lower() in slugify(u'bo\u011fazi\u00e7i', replace_latin=True)\n    True\n    \n    >>> slugify(u'\u00e7i\u00e7ek', replace_turkish=True) in slugify(u'\u00c7\u0130\u00c7EK', replace_latin=True)\n    True\n    \n    >>> u'cicek' in slugify(u'\u00c7\u0130\u00c7EK', replace_latin=True)\n    True\n\n## List of common latin letters to be replaced\n\n- \u0131, \u00ec, \u00ed, \u00ee, \u00ef -> i\n- \u0130, \u00cc, \u00cd, \u00ce, \u00cf -> I\n- \u00f6, \u00f3, \u00f2, \u00f4, \u00f5, \u00f8 -> o\n- \u00d6, \u00d2, \u00d3, \u00d4, \u00d5, \u00d8 -> O\n- \u00fc, \u00f9, \u00fa, \u00fb -> u\n- \u00dc, \u00d9, \u00da, \u00db -> U\n- \u00e0, \u00e1, \u00e2, \u00e3, \u00e4, \u00e5 -> a\n- \u00c0, \u00c1, \u00c2, \u00c3, \u00c4, \u00c5 -> A\n- \u00e6 -> ae\n- \u00c6 -> AE\n- \u00e8, \u00e9, \u00ea, \u00eb -> e\n- \u00c8, \u00c9, \u00ca, \u00cb -> E\n- \u00f1 -> n\n- \u00d1 -> N\n- \u00fd, \u00ff -> y\n- \u00dd, \u0178 -> Y\n- \u015f -> s\n- \u015e -> S\n- \u00e7 -> c\n- \u00c7 -> C\n- \u011f -> g\n- \u011e -> G\n\n## New parameters after this fork\n\n- replace_latin: Replace common Latin letters to be replaced with similar ascii representation.\n- unicode_pairs: You can give a dictionary of unicode characters with their replacement values. Like: {u'\\xe9', 'e'} - \u00e9 will be replaced with e\n\n## Sponsors\n\n- This library is being used in The Volt Ride Sharing App (http://thevoltapp.com)\n- Hippo Foundry (http://hipolabs.com)\n\n## Contact\n\n- Website: http://www.eminbugrasaral.com",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/eminbugrasaral/unicode-slugify-latin",
    "keywords": "turkish,latin,unicode,slugify,letter,char,replace,replacement,ascii,django",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "unicode-slugify-latin",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/unicode-slugify-latin/",
    "release_url": "https://pypi.org/project/unicode-slugify-latin/0.2/",
    "requires_python": null,
    "summary": "A slug generator that turns strings into unicode slugs, and enables replacement for common latin letters into ascii representations.",
    "version": "0.2"
  },
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c2f4f34e9ea305fb3c8c3acce9e95a35",
          "sha256": "7dc3fcefd5df2f97cfdb12e8227dd4beffd162e121b8cc1cc08e9e0acc028134"
        },
        "downloads": 1722,
        "filename": "unicode-slugify-latin-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c2f4f34e9ea305fb3c8c3acce9e95a35",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5948,
        "upload_time": "2015-01-12T07:40:32",
        "url": "https://files.pythonhosted.org/packages/c1/da/0f6944188b7226c5959573d95fdf43ec3648264ffe375ea558a8e1c955c5/unicode-slugify-latin-0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c2f4f34e9ea305fb3c8c3acce9e95a35",
        "sha256": "7dc3fcefd5df2f97cfdb12e8227dd4beffd162e121b8cc1cc08e9e0acc028134"
      },
      "downloads": 1722,
      "filename": "unicode-slugify-latin-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c2f4f34e9ea305fb3c8c3acce9e95a35",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5948,
      "upload_time": "2015-01-12T07:40:32",
      "url": "https://files.pythonhosted.org/packages/c1/da/0f6944188b7226c5959573d95fdf43ec3648264ffe375ea558a8e1c955c5/unicode-slugify-latin-0.2.tar.gz"
    }
  ]
}