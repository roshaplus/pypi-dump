{
  "info": {
    "author": "National Instruments",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Human Machine Interfaces",
      "Topic :: Software Development :: Embedded Systems",
      "Topic :: System :: Hardware",
      "Topic :: System :: Hardware :: Hardware Drivers"
    ],
    "description": "FPGA Interface Python API\r\n=======\r\n\r\nOverview\r\n--------\r\nThe National Instruments FPGA Interface Python API is used for communication between processor and FPGA within NI reconfigurable I/O (RIO) hardware such as NI CompactRIO, NI Single-Board RIO, NI FlexRIO, and NI R Series multifunction RIO.\r\n\r\nWith the FPGA Interface Python API, developers can use LabVIEW FPGA to program the FPGA within NI hardware and communicate to it from Python running on a host computer. This gives engineers and scientists with Python expertise the ability to take advantage of compiled LabVIEW FPGA bitfiles, also the option to reuse existing Python code.\r\n\r\nInstallation\r\n------------\r\nNiFpga can be installed by cloning the master branch and then in a command\r\nline in the directory of setup.py run:\r\n\r\n    pip install --pre .\r\n\r\nOr by installing from PyPI using:\r\n\r\n    pip install nifpga\r\n\r\nExamples\r\n--------\r\n\r\nThe FPGA Interface Python API is session based. LabVIEW FPGA will generate\r\nbitfiles (.lvbitx) that can be used to program the hardware. For additional\r\ninformation on sessions view our Read the docs documentation\r\n\r\nExample usage of FPGA configuration functions:\r\n\r\n    with Session(bitfile=\"BitfilePath.lvbitx\", resource=\"RIO0\") as session:\r\n       try:\r\n          session.run()\r\n       except FpgaAlreadyRunningWarning:\r\n          pass\r\n       session.download()\r\n       session.abort()\r\n       session.reset()\r\n       my_control = session.registers[\"MyControl\"]\r\n       my_control.write(4)\r\n       data = my_control.read()\r\n\r\n\r\nSee our [readthedocs page](http://nifpga-python.readthedocs.io/en/latest/) for more detailed examples and documentation.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ni/nifpga-python",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nifpga",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/nifpga/",
    "release_url": "https://pypi.org/project/nifpga/17.0.0.post2/",
    "requires_python": "",
    "summary": "Python API for interacting with National Instrument's LabVIEW FPGA Devices",
    "version": "17.0.0.post2"
  },
  "releases": {
    "17.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4c5d3e5278727f95468ddaaf3970df4d",
          "sha256": "0565a89a9102028d4bb076bd2bfa8fbd37c8254f94cb9460dddccea806bc0d34"
        },
        "downloads": 20,
        "filename": "nifpga-17.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c5d3e5278727f95468ddaaf3970df4d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 24360,
        "upload_time": "2017-03-06T22:37:43",
        "url": "https://files.pythonhosted.org/packages/e6/6a/3f6ef0e92afdf4467c8b37df6e5682f5939d9e101659f201a8c829057438/nifpga-17.0.0-py2.py3-none-any.whl"
      }
    ],
    "17.0.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "50510f3294be13748b13d1e34b429b40",
          "sha256": "6a6a2c8795c261ae64f7667e560777a021e45636d750b2100e8e78d3f8ced891"
        },
        "downloads": 82,
        "filename": "nifpga-17.0.0.post1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "50510f3294be13748b13d1e34b429b40",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 23521,
        "upload_time": "2017-03-15T15:37:40",
        "url": "https://files.pythonhosted.org/packages/5b/59/88bea60f2ef1ea9b50b829c4f416f064db09f88aed3896c83efb3ffe9cf6/nifpga-17.0.0.post1-py2.py3-none-any.whl"
      }
    ],
    "17.0.0.post2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bb89ca3099c1de05d66058e10c238be8",
          "sha256": "1e23418e50fde4b495e954742ef31e588f167e9e3f9509f91934343701ee1e86"
        },
        "downloads": 0,
        "filename": "nifpga-17.0.0.post2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bb89ca3099c1de05d66058e10c238be8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 23867,
        "upload_time": "2017-04-21T23:44:15",
        "url": "https://files.pythonhosted.org/packages/42/2b/5785fec3ff589a6eeefd363154e3e04f2f953843eb25c047a64ea81d2372/nifpga-17.0.0.post2-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "bb89ca3099c1de05d66058e10c238be8",
        "sha256": "1e23418e50fde4b495e954742ef31e588f167e9e3f9509f91934343701ee1e86"
      },
      "downloads": 0,
      "filename": "nifpga-17.0.0.post2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bb89ca3099c1de05d66058e10c238be8",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 23867,
      "upload_time": "2017-04-21T23:44:15",
      "url": "https://files.pythonhosted.org/packages/42/2b/5785fec3ff589a6eeefd363154e3e04f2f953843eb25c047a64ea81d2372/nifpga-17.0.0.post2-py2.py3-none-any.whl"
    }
  ]
}