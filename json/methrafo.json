{
  "info": {
    "author": "Jun Ding",
    "author_email": "jund@andrew.cmu.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\n  __  __      _   _     _____        __      \n|  \\/  |    | | | |   |  __ \\      / _|     \n| \\  / | ___| |_| |__ | |__) |__ _| |_ ___  \n| |\\/| |/ _ \\ __| '_ \\|  _  // _` |  _/ _ \\ \n| |  | |  __/ |_| | | | | \\ \\ (_| | || (_) |\n|_|  |_|\\___|\\__|_| |_|_|  \\_\\__,_|_| \\___/ \n                                             \n                                             \t\t \n\t\t\t \nINTRODUCTION \n========================================================================\n\nThis software was designed to estimate genome-wide absolute methylation \nlevel based on the MeDIP-Seq data. \n\nSUPPORTED PLATFORMS\n========================================================================\nLinux, MacOS\n\nPREREQUISITES\n========================================================================\npython 2.7.x\n\nIt was installed by default for most Linux distributicons and MAC\nIf not, please refer https://www.python.org/downloads/ for installation \ninstructions. \n\nPython packages dependencies:\n-- scikit-learn \n-- scipy\n-- numpy\n\nThe python setup.py script will try to install these packages automatically.\nHowever, please install them manually if, by any reason, the automatic \ninstallation fails. \n\nexternal packages dependencies:\nThe software requires the following external packages to process bam files.\n(The following packages must be installed if you want to calculate methylation\nlevel based on raw bam files) \n\n--samtools\n--bedtools\n--bedGraphToBigWig\n\n1) samtools, bedtools\nFor debian/ubuntu based linux, you can install samtools,bedtools directly by:\n$sudo apt-get install samtools\n$sudo apt-get install bedtools\n\nFor redhat/centos/fedora linux, you can install samtools, bedtools directly by:\n$sudo yum install samtools\n$sudo yum install bedtools. \n\nIf you can't install samtools,bedtools using the command above, please refer \nthe manual page for installation instructions. \nsamtools: http://samtools.sourceforge.net/\nbedtoos: http://bedtools.readthedocs.io/en/latest/\n\n2)bedGraphToWigBig\nFirst download the excutable from UCSC web-site.\n\nFor Linux, \nhttp://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/\nFor Mac os,\nhttp://hgdownload.cse.ucsc.edu/admin/exe/macOSX.x86_64/\n\nSecond, add the script to os path. \nOpen a terminal, then type\n--------------------\n$export PATH=$PATH:~/path_to_bedGraphToWigBig_Folder\nIf you need it permanently add the above command in your ~/.bashrc\n\nPlease refer the following page for help about how to set $PATH on linux\nhttp://stackoverflow.com/questions/14637979/how-to-permanently-set-path-on-linux\n\n\nINSTALLATION\n========================================================================\nFirst, download the software package.\nSecond, cd to the package directory.\nLinux, Mac:\n$ sudo python setup.py install \n\nOr install using pip\n$sudo pip install methrafo\n\n\nUSAGE/EXAMPLES\n========================================================================\nPlease check the example dataset provided in the example folder at: \nhttp://www.cs.cmu.edu/~jund/methrafo/example/\n\nThe following 4 commands were provided by the methrafo package:\nmethrafo.bamScript, methrafo.download, methrafo.train, methrafo.predict\n\n1)methrafo.download\nThis command was used to download the genome files \nFiles: chromosome sequences(e.g. chr1.fa.gz), chromosome sizes(e.g. hg19.chrom.sizes)\n$methrafo.download <reference_genome_id> <output_directory>\ne.g.\n$methrafo.download hg19 hg19\nreference_genome_id represents the ID of the genome (e.g. hg19,mm10, et al.)\n\n\n2)methrafo.bamScript\nThis command was used to convert bam file to bigWig file (RPKM)\n$methrafo.bamScript <bam_file> <genome size file>\nbam_file => bam file\ngenome size file => chromosome sizes .e.g. hg19.chrom.sizes (This file can be found in the downloaded reference genome folder e.g. hg19_out)\ne.g. \n$methrafo.bamScript example/example_raw.bam hg19/hg19.chrom.sizes\n\n\n3)methrafo.train \nThis command was used to train the model\n$methrafo.train <downloaded_reference_genome_folder> <MeDIPS.bigWig> <Bisulfite.bigWig> <output_prefix>\n<downloaded_reference_genome_folder>: The downloaded genome reference folder hg19\n<MeDIPS.bigWig> : The bigWig file representing the RPKM on each position of the genome. \n<Bisulfite.bigWig>: The bigWig file representing the Bisulfite-Seq methylation level. \n\nNote: if your input is .bam file, please use methrafo.bamScript to convert it to bigWig format. \n\ne.g.\n$methrafo.train hg19 example/example_medip.bw example/example_bisulfite.bw trained_model\n\n4)methrafo.predict\nThis command was used to predict the methylation level based on MeDIP-Seq data\n$methrafo.predict hg19 example/example_medips.bw trained_model.pkl example_out\n\n\nHOW TO USE\n========================================================================\n1) methRafo accept the following formats as the input:\n   .bam  => mapped reads from MeDIP-Seq result\n   .bw   => bigWig file from MeDIP-Seq (representing the RPKM value)\n   \n   If the input is in .bam format, you need to use methrafo to convert \n   it to bigWig format. Please refer methrafo.bamScript command above for\n   converion instruction. \n   \n   You might need to use methrafo.download the download corresponding reference \n   genome. But you are also allowed to download the reference genome yourself.\n   The reference genome folder needs to contain the following files:\n   all chromsome sequences in fasta format; chromosome size file containing\n   the length information of the chromosome. \n   \n2) We provided a trained model on human (Based on breast luminal cells dataset \n   from roadmap database). We tested it  on a few other datasets on human and it shows\n   pretty good performance in terms of running time and correlation with Bisulfite-Seq data.\n   You can use the trained model we provided or you can use the methrafo.train script we provide\n   to build your own model by specifying MeDIP-Seq input (in bigWig format) and Bisulfite-Seq output (in bigWig format)\n   Please refer methrafo.train command for complete details. \n   \n3) With the provided trained model (or your own trained model), we provided the command methrafo.predict to \n   predict the genome wide methylation level. The output file is a Wiggle (.wig) format file. You can visualize\n   it using IGV or UCSC genome browser. You can also get the methylation level for any given genomic location\n   easily from the generated wig file. \n   \n  \nCREDITS\n========================================================================\nThis software was developed by ZIV-system biology group @ Carnegie Mellon University\nImplemented by Jun Ding\n\n\nLICENSE \n========================================================================\nThis software is under MIT license.\nsee the LICENSE.txt file for details. \n\n\nCONTACT\n========================================================================\nzivbj at cs.cmu.edu\njund  at andrew.cmu.edu\n\n\n\n\n                                 \n                                 \n                                 \n                                 \n                                 \n\n                                                         \n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/phoenixding/methrafo",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "methrafo",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/methrafo/",
    "release_url": "https://pypi.org/project/methrafo/1.0.4/",
    "requires_python": null,
    "summary": "MeDIP-Seq methylation estimation based a random forest regressor",
    "version": "1.0.4"
  },
  "releases": {
    "1.0.0": [],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "caff5a7eab4e1752b81fe0dfba049a60",
          "sha256": "3ce6a7db60de996b985b5e7eea9c4870eed9e003fb358e86f57102ca30628634"
        },
        "downloads": 0,
        "filename": "methrafo-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "caff5a7eab4e1752b81fe0dfba049a60",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6961,
        "upload_time": "2017-04-24T18:19:22",
        "url": "https://files.pythonhosted.org/packages/3e/90/d95f95e2eef539ad849bfe0d1635c76c4c23576f19cccbf35f237cba1490/methrafo-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fb2d4c7f8eb9d38256d6fae43b2f01bc",
          "sha256": "4058520bd85576a70bd80dc0765198357af0a8ad6bc78ced234b6398095dc7dd"
        },
        "downloads": 0,
        "filename": "methrafo-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fb2d4c7f8eb9d38256d6fae43b2f01bc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6934,
        "upload_time": "2017-04-24T18:42:31",
        "url": "https://files.pythonhosted.org/packages/f8/5c/f304396d27c0afac249c3011563e80c2ad775bbaf9e5a8522cbf17a1793e/methrafo-1.0.2.tar.gz"
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7bdee7857637542ade0a16bea2f03063",
          "sha256": "b9859f072b8d1da87360077c213b5bc619d002f810ac4a5fd7f9c3f178626765"
        },
        "downloads": 0,
        "filename": "methrafo-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7bdee7857637542ade0a16bea2f03063",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3395915,
        "upload_time": "2017-04-24T18:47:24",
        "url": "https://files.pythonhosted.org/packages/45/c4/f6e9d67d4c015850be59fdd9b0d4f60ecf3937ac5e1d9b5ae4dc62e1d752/methrafo-1.0.3.tar.gz"
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "193efd5a66d75bd438a803af562878f1",
          "sha256": "574bda463f81aa64802b57065a6cd2ccc888cc4aa4a558b74df3abaaef6a319a"
        },
        "downloads": 0,
        "filename": "methrafo-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "193efd5a66d75bd438a803af562878f1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3395914,
        "upload_time": "2017-04-26T20:08:34",
        "url": "https://files.pythonhosted.org/packages/95/ab/9f7693f0eb37f27abada28c28ca344ac36f8c0b8c6512ed5d4debe63997b/methrafo-1.0.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "193efd5a66d75bd438a803af562878f1",
        "sha256": "574bda463f81aa64802b57065a6cd2ccc888cc4aa4a558b74df3abaaef6a319a"
      },
      "downloads": 0,
      "filename": "methrafo-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "193efd5a66d75bd438a803af562878f1",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3395914,
      "upload_time": "2017-04-26T20:08:34",
      "url": "https://files.pythonhosted.org/packages/95/ab/9f7693f0eb37f27abada28c28ca344ac36f8c0b8c6512ed5d4debe63997b/methrafo-1.0.4.tar.gz"
    }
  ]
}