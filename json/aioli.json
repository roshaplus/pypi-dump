{
  "info": {
    "author": "brettatoms",
    "author_email": "brettatoms@gmail.com",
    "bugtrack_url": "https://github.com/brettatoms/aioli/issues",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "Aioli\n=====\n\n**Aioli (ayo-OH-lee)** is a little sauce on top of Python's asyncio\npackage. With a little **aioli** it makes it easier to take advantage of\nasyncio in synchronous code.\n\nThese helpers are intended for IO bound tasks that yield. If you're not\nyield'ing or if your code is CPU bound then **aioli** probably won't\nhelp you much unless you start getting fancy with passing in your own\nloops in with their own executors.\n\nAwait\n~~~~~\n\n.. code:: python\n\n    @asyncio.coroutine\n    def func(x):\n        yield from asyncio.sleep(random())\n        return x\n    result = aioli.await(func(1))\n\nMap\n~~~\n\n.. code:: python\n\n    # Func will be run asynchronously for each item in iterable and results\n    # will be returned in order as their available.\n    def func(x):\n        yield from asyncio.sleep(random())\n        return x\n\n    for result in aioli.map(func, iterable):\n        print(result)\n\nParallel\n~~~~~~~~\n\n.. code:: python\n\n    # Func will be run asynchronously for each item in iterable and results\n    # will be returned as they are available.  Order is not guaranteed.\n    def inc(x):\n        yield from asyncio.sleep(random())\n        return x + 1\n\n    for result in aioli.parallel(func, iterable):\n        print(result)\n\nFilter\n~~~~~~\n\n.. code:: python\n\n    # Func will be run asynchronously for each item in iterable and results\n    # will be returned in order as their available.\n    is_even = lambda x: x % 2 == 0\n    for result in aioli.map(is_even, range(0, 100)):\n        print(result)\n\nFilter false\n~~~~~~~~~~~~\n\n.. code:: python\n\n    # Func will be run asynchronously for each item in iterable and results\n    # will be returned in order as their available.\n    is_even = lambda x: x % 2 == 0\n    for result in aioli.map(is_even, range(0, 100)):\n        print(result)\n\nFilter false\n~~~~~~~~~~~~\n\n.. code:: python\n\n    # Func will be run asynchronously for each item in iterable and results\n    # will be returned in order as their available.\n    is_even = lambda x: x % 2 == 0\n    for result in aioli.map(is_even, range(0, 100)):\n        print(result)",
    "docs_url": null,
    "download_url": "https://github.com/brettatoms/aioli/archive/master.zip",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/brettatoms/aioli",
    "keywords": "aioli,async,asyncio,concurrency,concurrent",
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "aioli",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/aioli/",
    "release_url": "https://pypi.org/project/aioli/0.0.4/",
    "requires_python": null,
    "summary": "asyncio special sauce",
    "version": "0.0.4"
  },
  "releases": {
    "0.0.1.dev12": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2b5a692f1397a25837ffe7ae7da52eda",
          "sha256": "39c89b857076d042969e1c536d4d2b5d144c3f497cdb176a1448a59bd21f59f1"
        },
        "downloads": 1172,
        "filename": "aioli-0.0.1.dev12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b5a692f1397a25837ffe7ae7da52eda",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 4167,
        "upload_time": "2015-03-23T19:57:07",
        "url": "https://files.pythonhosted.org/packages/53/51/cb50fea4f27b009144f5f15da04ac1f550c35a23a80a45ff11f73fdb7321/aioli-0.0.1.dev12-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d8300bca2b45fa61c3843de577f7731e",
          "sha256": "c7fd95c18e4ffdabbace0fea20badd8c619f564c95f5422b08142e3a690c7c06"
        },
        "downloads": 1192,
        "filename": "aioli-0.0.1.dev12.tar.gz",
        "has_sig": false,
        "md5_digest": "d8300bca2b45fa61c3843de577f7731e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4085,
        "upload_time": "2015-03-23T19:57:10",
        "url": "https://files.pythonhosted.org/packages/10/c7/34324817db797e2824687e120b7702f06d12e56bd6dcb6f9886b8a45c69a/aioli-0.0.1.dev12.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c53355d03f0d8ceb921c321e81d3294b",
          "sha256": "779d49255fcc4aac0f2286a49ed3182886754bcbb11cb4cc94893d8d59f4919f"
        },
        "downloads": 1200,
        "filename": "aioli-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c53355d03f0d8ceb921c321e81d3294b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2434,
        "upload_time": "2015-03-23T20:09:19",
        "url": "https://files.pythonhosted.org/packages/6a/6a/913a02e1427859fafce86fec344115a324d1f7f990517a5e7b0c5b107b4a/aioli-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "044a9e67302cdd7c16ee8c54611758f2",
          "sha256": "37c6961be7fd6bf397b8fb3f04696f4c3f1b2072ea0b193bdd08f248d72a488b"
        },
        "downloads": 1160,
        "filename": "aioli-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "044a9e67302cdd7c16ee8c54611758f2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3922,
        "upload_time": "2015-03-30T16:36:52",
        "url": "https://files.pythonhosted.org/packages/33/14/1a46ae1df7466dc962e74c5cb4179f284e798888c327ce04b84534bb16cf/aioli-0.0.3.tar.gz"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b3ac3a9d720db77a8906f967b1d450b2",
          "sha256": "46dd0141e626aeb56e5ad76bc9ff7c54b722ebefc7cfe574a46dbc868d38ac1c"
        },
        "downloads": 2467,
        "filename": "aioli-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b3ac3a9d720db77a8906f967b1d450b2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4043,
        "upload_time": "2015-03-30T16:51:43",
        "url": "https://files.pythonhosted.org/packages/06/89/e2063c2d01ecac771c3834d5883858e3de3c1328e22d1402c8804d116631/aioli-0.0.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b3ac3a9d720db77a8906f967b1d450b2",
        "sha256": "46dd0141e626aeb56e5ad76bc9ff7c54b722ebefc7cfe574a46dbc868d38ac1c"
      },
      "downloads": 2467,
      "filename": "aioli-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "b3ac3a9d720db77a8906f967b1d450b2",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4043,
      "upload_time": "2015-03-30T16:51:43",
      "url": "https://files.pythonhosted.org/packages/06/89/e2063c2d01ecac771c3834d5883858e3de3c1328e22d1402c8804d116631/aioli-0.0.4.tar.gz"
    }
  ]
}