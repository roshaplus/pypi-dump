{
  "info": {
    "author": "Nirvik Ghosh",
    "author_email": "nirvik1993@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Twisted",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Topic :: Communications :: File Sharing",
      "Topic :: System :: Networking",
      "Topic :: System :: Operating System"
    ],
    "description": "iWant\n=====\n\nCLI based decentralized peer to peer file sharing\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhat is it?\n-----------\n\nA commandline tool for searching and downloading files in LAN network,\nwithout any central server.\n\nFeatures\n--------\n\n-  **Decentralized** : There is no central server hosting files.\n   Therefore, no central point of failure\n-  **Easy discovery of files**: As easy as searching for something in\n   Google.\n-  **File download from multiple peers**: If the seeder fails/leaves the\n   group, leecher will continue to download from another seeder in the\n   network\n-  **Directory download**: Supports downloading directories\n-  **Resume download**: Resume download from where you left off.\n-  **Consistent data**: Any changes(modification, deletion, addition)\n   made to files inside the shared folder will be instantly reflected in\n   the network\n-  **Cross Platform**: Works in Linux/Windows/Mac. More testing needs to\n   be done in Mac\n\nWhy I built this ?\n------------------\n\n-  I like the idea of typing some filename in the terminal and download\n   it if people around me have it.\n-  No third party registration.\n-  No crazy configuration.\n-  Wanted it to be cross platform.\n-  Zero downtime.\n-  No browser.. just terminal\n-  For fun \u00af\\\\\\ *(\u30c4)*/\u00af\n\nInstallation\n------------\n\n.. code:: sh\n\n    python setup.py install --user\n\nSystem Dependencies\n-------------------\n\nMake sure, you have the following system dependencies installed: \\*\nlibffi-dev \\* libssl-dev\n\nUsage\n-----\n\n::\n\n    iWant.\n\n    Usage:\n        iwanto start\n        iwanto search <name>\n        iwanto download <hash>\n        iwanto share <path>\n        iwanto download to <destination>\n        iwanto view config\n        iwanto --version\n\n    Options:\n        -h --help                                   Show this screen.\n        --version                                   Show version.\n        start                                       This starts the iwant server in your system\n        search <name>                               Discovering files in the network. Example: iwanto search batman\n        download <hash>                             Downloads the file from the network\n        share <path>                                Change your shared folder\n        view config                                 View shared and download folder\n        download to <destination>                   Change download folder\n\n**Note: Shared and Download folder cannot be the same**\n\nHow to run\n----------\n\nRun ``iwanto start`` (this runs the iwant service).\n\nRunning client\n--------------\n\nTo run services like, search, download, view config and change config,\nopen up another terminal and make sure that iwant server is running.\n\nRunning server\n--------------\n\nIn windows, admin access is required to run the server\n\n.. code:: sh\n\n    iwanto start\n\n\n\n\n\n\nSearch files\n------------\n\nType the name of file ;) (P.S No need of accurate names)\n\n.. code:: sh\n\n    iwanto search <filename>\n\nExample:\n\n.. code:: sh\n\n    iwanto search \"slicon valey\"\n\n\n\n\n\n\nDownload files\n--------------\n\nTo download the file , just enter the hash of the file you get after\nsearching.\n\n.. code:: sh\n\n    iwanto download <hash of the file>\n\nExample:\n\n.. code:: sh\n\n    iwanto download b8f67e90097c7501cc0a9f1bb59e6443\n\n\n\n\n\n\nChange shared folder\n--------------------\n\nChange shared folder anytime (Even when iwant service is running)\n\n.. code:: sh\n\n    iwanto share <path>\n\nExample:\n\n.. code:: sh\n\n    iwanto share /home/User/Movies/\n\nIn windows, give quotes:\n\n.. code:: sh\n\n    iwanto share \"C:\\Users\\xyz\\books\\\"\n\n\n\n\n\n\nChange downloads folder\n-----------------------\n\nChange download folder anytime\n\n.. code:: sh\n\n    iwanto download to <path>\n\nExample:\n\n.. code:: sh\n\n    iwanto download to /home/User/Downloads\n\nIn windows, give quotes:\n\n.. code:: sh\n\n    iwanto download to \"C:\\User\\Downloads\"\n\nView shared/donwload folder\n---------------------------\n\n.. code:: sh\n\n    iwanto view config\n\nHow does it work ?\n------------------\n\nAs soon as the program starts, it spawns the **election daemon**,\n**folder monitoring daemon** and **server daemon**.\n\n1. The **election daemon** takes care of the following activities\n\n   -  Manages the consensus.\n   -  Notifies the **server daemon** as soon as there is a leader\n      change.\n   -  It coordinates with other peers in the network regarding\n      contesting elections, leader unavailability, network failure,\n      split brain situation etc.\n   -  It uses **multicast** for peer discovery. \n      \n      \n\n2. When the **folder monitoring daemon** starts, it performs the\n   following steps\n\n   -  Indexes all the files in the shared folder\n   -  Updates the entries in the database\n   -  Informs the server about the indexed files and folders.\n   -  Any changes made in the shared folder will trigger the **folder\n      monitoring daemon** to index the modified files, update the\n      database and then inform the server about the changes\n\n3. The **iwant client** talks to the **server daemon** when the user\n   wishes to:\n\n   -  search for files\n   -  download files\n   -  change shared folder\n   -  change download folder\n\n4. The **server daemon** receives commands from **iwant client** and\n   updates from **file monitoring and election daemon**.\n\n   -  Updates received from **folder monitoring daemon** is fowarded to\n      the leader. For example: indexed files/folders information.\n   -  Updates received from the **election daemon** like\n      ``leader change`` event, triggers the server to forward the\n      indexed files/folders information to the new leader\n   -  Queries received from the **iwant client** like ``file search`` is\n      forwarded to the leader, who then performs fuzzy search on the\n      metadata it received from other peers and returns a list\n      containing (filename, size, checksum)\n   -  Queries received from the **iwant client** like ``file download``\n      is forwarded to the leader, who forwards the roothash of the\n      file/folder along with the list of peers who have the file. The\n      **server daemon** then intiates download process with peers\n      mentioned in the peers list.\n   -  Updates received from the **iwant client** like\n      ``changing shared folder``, triggers the **server daemon** to make\n      sure that the **folder monitoring daemon** indexes the new folder\n      and after indexing is complete, the **server daemon** updates the\n      leader with the new indexed files/folders meta information.\n\nTodo\n----\n\n-  Create test modules\n-  Make download faster\n-  Incorporate tight security mechanisms\n-  Improve UI for file/folder download progress bar\n-  Add streaming functionality\n\nWhy it may not work?\n--------------------\n\n-  Firewall\n-  Multicast not supported in your router.\n\nErrors\n------\n\nAll logs are present in ``~/.iwant/.iwant.log`` or\n``AppData\\Roaming\\.iwant\\.iwant.log``\n\nLiked the project ?\n-------------------\n\n| |Say Thanks!|\n| Any ideas, bugs or modifications required, feel free to me send me a\n  PR :)\n\n.. |Say Thanks!| image:: https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg\n   :target: https://saythanks.io/to/nirvik",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/nirvik/iWant",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "iwant",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/iwant/",
    "release_url": "https://pypi.org/project/iwant/1.0.13/",
    "requires_dist": [],
    "requires_python": null,
    "summary": "CLI based decentralized peer to peer file sharing",
    "version": "1.0.13"
  },
  "releases": {
    "1.0.12": [
      {
        "comment_text": "",
        "digests": {
          "md5": "99cda6edeffb687c60c87ce18612ae3f",
          "sha256": "8792e529bb2c0661f31d9bd39df4b619fdae66bfce5328b35f23fd0684bd3aed"
        },
        "downloads": 0,
        "filename": "iwant-1.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "99cda6edeffb687c60c87ce18612ae3f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 36253,
        "upload_time": "2017-06-25T10:56:36",
        "url": "https://files.pythonhosted.org/packages/59/22/2b857910be68a3b6979faa0c4c12b959d1393b5069607a8c43fbf707f18d/iwant-1.0.12.tar.gz"
      }
    ],
    "1.0.13": [
      {
        "comment_text": "",
        "digests": {
          "md5": "26a711a45bc133833fe52a30927c83d5",
          "sha256": "3b86bd17d6f9d88d48e0b7bcb14f45025a48a80578dbdf0b32e4e602a12bc2f8"
        },
        "downloads": 0,
        "filename": "iwant-1.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "26a711a45bc133833fe52a30927c83d5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 36203,
        "upload_time": "2017-06-25T12:22:07",
        "url": "https://files.pythonhosted.org/packages/b2/a1/1abc8c969d1674ffb7243ebcf53d1618dead712b57f7a2203f283c1430c8/iwant-1.0.13.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "26a711a45bc133833fe52a30927c83d5",
        "sha256": "3b86bd17d6f9d88d48e0b7bcb14f45025a48a80578dbdf0b32e4e602a12bc2f8"
      },
      "downloads": 0,
      "filename": "iwant-1.0.13.tar.gz",
      "has_sig": false,
      "md5_digest": "26a711a45bc133833fe52a30927c83d5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 36203,
      "upload_time": "2017-06-25T12:22:07",
      "url": "https://files.pythonhosted.org/packages/b2/a1/1abc8c969d1674ffb7243ebcf53d1618dead712b57f7a2203f283c1430c8/iwant-1.0.13.tar.gz"
    }
  ]
}