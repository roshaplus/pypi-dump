{
  "info": {
    "author": "Hiroki KIYOHARA",
    "author_email": "hirokiky@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# django-keeper\n\nAuthorization library for Django, not depends on models.\n\n* Won't depend on models\n* Won't save assignments/permissions into datastores\n\nSupported versions:\n\n* Python 3.5\n* Python 3.6\n* Django 1.10\n* Django 1.11\n\n## Install\n\n```bash\n$ pip install django-keeper\n```\n\nAnd add to INSTALLED_APPS\n\n```python\nINSTALLED_APPS = [\n    ...\n    'keeper',\n]\n```\n\n## At A Glance\n\nDeclarative permission mapping for models.\n\n```python\nfrom django.conf import settings\nfrom keeper.security import Allow\nfrom keeper.operators import Everyone, Authenticated, IsUser\n\n\nclass Issue(models.Model):\n    author = models.ForeignKey(settings.AUTH_USER_MODEL)\n    ...\n\n    def __acl__(self):\n        return [\n            (Allow, Everyone, 'view'),\n            (Allow, Authenticated, 'add_comment'),\n            (Allow, IsUser(self.author), 'edit'),\n        ]\n\n```\n\nInstances of model allow:\n\n* Every requests to view\n* Autheticated requests to add comments\n* it's author to edit\n\nThen, apply `@keeper` for views.\n\n```python\nfrom keeper.views import keeper\n\n\n# Model Permissions\n@keeper(\n    'view',\n    model=Issue,\n    mapper=lambda request, issue_id: {'id': issue_id},\n)\ndef issue_detail(request, issue_id):\n    \"\"\" View requires 'view' permission of Issue model\n\n    * An issue object will be retrieved\n    * keeper will check whether the rquests has 'view' permission for the issue\n\n    The third argument function can return keyword argument to retrieve the issue object.\n    \"\"\"\n    request.k_context  # Will be instance of the issue object\n    ...\n\n\n\n@keeper(\n    'add_comment',\n    model=Issue,\n    mapper=lambda request, issue_id: {'id': issue_id},\n)\ndef add_comment(request, issue_id):\n    ...\n\n```\n\n## Global Permission\n\nNot just for model permissions `django-keeper` can handle global permissions.\n\nFirst, write class having `__acl__` method in models.py.\n\n```python\nclass Root:\n    def __acl__(self):\n        return [\n            (Allow, Authenticated, 'view_dashboard'),\n            (Allow, Authenticated, 'add_issue'),\n        ]\n```\n\nIt's not necessary to put it in `models.py`,\nbut easy to understand.\n\nAnd specify it.\n\n```python\nKEEPER_GLOBAL_CONTEXT = myapp.models.Root'\n```\n\nThen you can use global permission in views.\nSimply just apply `@keeper` and permission names.\n\n```python\n@keeper('add_issue')\ndef issue_list(request):\n    \"\"\" View requires 'add_issue' permission of Root Context\n    \"\"\"\n\n```\n\n## Operators\n\nOperators is just `Callable[[HttpRequest], bool]`.\nBy default django-keeper has these operators:\n\n* `keeper.operators.Everyone`\n* `keeper.operators.Authenticated`\n* `keeper.operators.IsUser`\n* `keeper.operators.Staff`\n\nAlso you can create your own operators easily.\n\n```python\nfrom keeper.operators import Authenticated\n\n\nclass IsIP:\n    def __init__(self, ip):\n        self.ip = ip\n        \n    def __call__(self, request):\n        return request.META.get('REMOTE_ADDR') == self.ip\n\n\nclass BelongsTeam(Authenticated):\n    def __init__(self, team, role):\n        self.team = team\n\n    def __call__(self, request):\n        if not super().__call__(request):\n            return False\n        return  request.user.team == self.team\n```\n\nUse it in ACL\n\n```python\nclass Article(models.Model):\n    team = models.ForeignKey(Team)\n    \n    def __acl__(self):\n        return [\n            (Allow, Everyone, 'view'),\n            (Allow, BelongsTeam(self.team), 'edit'),\n            (Allow, IsIP(settings.COMPANY_IP_ADDRESS), 'edit'),\n        ]\n```\n\n## On Fail Actions\n\nYou can change actions when requests can't pass ACLs.\n\n```python\nfrom keeper.views import keeper, login_required\n\n@keeper(\n    'view_articles',\n    on_fail=login_required(),\n)\ndef dashboard(request):\n    ...\n```\n\nThis view will behave just like `@login_required` decorator of Django\nwhen requests don't have 'view' permission.\n\nAlso you can use other actions.\n\n* `keeper.views.login_required`\n* `keeper.views.permission_denied`\n* `keeper.views.not_found`\n* `keeper.views.redirect`\n\n## Use in template\n\nHandling permissions in templates is also supported.\n\n```django\n{% load keeper %}\n\n{% has_permission issue 'edit' as can_edit %}\n\n{% if can_edit %}\n    <a href=\"...\">Edit</a>\n{% endif %}\n```\n\nWhen checking global permission, use `has_global_permission`.\n\n```django\n{% load keeper %}\n\n{% has_global_permission 'add_issue' as can_add_issue %}\n\n{% if can_add_issue %}\n    <a href=\"...\">New Issue</a>\n{% endif %}\n```\n\n## Alternative\n\n* [django-guardian](https://github.com/django-guardian/django-guardian)\n    * It depends on databases\n    * Not way to handle global permissions, not just for a model\n* [django-rules](https://github.com/dfunckt/django-rules)\n\n## FAQ\n\n* Can I filter models by using ACL?\n    * Not supported\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/hirokiky/django-keeper/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-keeper",
    "platform": "",
    "project_url": "https://pypi.org/project/django-keeper/",
    "release_url": "https://pypi.org/project/django-keeper/0.1.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Authorization library for Django, with ACL, not depends on models.",
    "version": "0.1.3"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4b28c7b2b044df78ef0f762d87c0bd88",
          "sha256": "05abb5152f302450037ece4239b0af2eb7537bff474d70cf3bf6f926f30c3eb0"
        },
        "downloads": 0,
        "filename": "django_keeper-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b28c7b2b044df78ef0f762d87c0bd88",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 1735,
        "upload_time": "2017-09-03T06:59:09",
        "url": "https://files.pythonhosted.org/packages/bc/ef/4cd1c4b50cc3d795bdb77abc94fdc6b6c07672350a9b62191d3294fb8113/django_keeper-0.1.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6072956143565953709876e6a723f642",
          "sha256": "773e830736532f2f89a5bb8914fff14e2e5f1f98bc10df4c01d135fe31b2689c"
        },
        "downloads": 0,
        "filename": "django-keeper-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6072956143565953709876e6a723f642",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 640,
        "upload_time": "2017-09-03T06:59:07",
        "url": "https://files.pythonhosted.org/packages/e1/fd/1846746e8fa8dd7aa3545922600ba9bef1027a33d920c240bda19f42f940/django-keeper-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7758d7195cd96b0d79023fd15d7ade62",
          "sha256": "7e393f39cb795831b016441388182e95cee38fce8cec95ec9aeb686990a719f6"
        },
        "downloads": 0,
        "filename": "django_keeper-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7758d7195cd96b0d79023fd15d7ade62",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 7383,
        "upload_time": "2017-09-03T07:11:02",
        "url": "https://files.pythonhosted.org/packages/53/bc/bd605339e1fce8e657f516186ad87d3ac161e24c27d0d2fd8ad427210307/django_keeper-0.1.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "82a30ec2b3fea9ee494726371ead2d28",
          "sha256": "1c44f4cf03a21a379c47a7772aa649669490979eaebce58d607ce25d844c8434"
        },
        "downloads": 0,
        "filename": "django-keeper-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "82a30ec2b3fea9ee494726371ead2d28",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3939,
        "upload_time": "2017-09-03T07:11:00",
        "url": "https://files.pythonhosted.org/packages/b9/81/489d3b74f3af3c456b52b615143733b481dfd4f932ce1b33998802d66f58/django-keeper-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "82989c6973b0df2e128bb704c455af0d",
          "sha256": "0d7b84d21c601c752df15be3dc60300e22c2eeb8e7e28543aa9a9e130c6d3a2b"
        },
        "downloads": 0,
        "filename": "django_keeper-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "82989c6973b0df2e128bb704c455af0d",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 7686,
        "upload_time": "2017-09-03T08:09:56",
        "url": "https://files.pythonhosted.org/packages/cb/e3/f98c94b401a21ed8319cc1d5aaa3a26983667395b4bece306e76a77d4e32/django_keeper-0.1.3-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a282bb7fb19fc4a406a3d21787cd0f9f",
          "sha256": "189b6efdb5cba3228cabb8de9d1c94c292bd955119dffd0552ae310118294824"
        },
        "downloads": 0,
        "filename": "django-keeper-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a282bb7fb19fc4a406a3d21787cd0f9f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5357,
        "upload_time": "2017-09-03T08:09:54",
        "url": "https://files.pythonhosted.org/packages/e6/89/9add7de02cc13bc3204ac62bc65752ce371d7dd65823605fdffebf777fc3/django-keeper-0.1.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "82989c6973b0df2e128bb704c455af0d",
        "sha256": "0d7b84d21c601c752df15be3dc60300e22c2eeb8e7e28543aa9a9e130c6d3a2b"
      },
      "downloads": 0,
      "filename": "django_keeper-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "82989c6973b0df2e128bb704c455af0d",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 7686,
      "upload_time": "2017-09-03T08:09:56",
      "url": "https://files.pythonhosted.org/packages/cb/e3/f98c94b401a21ed8319cc1d5aaa3a26983667395b4bece306e76a77d4e32/django_keeper-0.1.3-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "a282bb7fb19fc4a406a3d21787cd0f9f",
        "sha256": "189b6efdb5cba3228cabb8de9d1c94c292bd955119dffd0552ae310118294824"
      },
      "downloads": 0,
      "filename": "django-keeper-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "a282bb7fb19fc4a406a3d21787cd0f9f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5357,
      "upload_time": "2017-09-03T08:09:54",
      "url": "https://files.pythonhosted.org/packages/e6/89/9add7de02cc13bc3204ac62bc65752ce371d7dd65823605fdffebf777fc3/django-keeper-0.1.3.tar.gz"
    }
  ]
}