{
  "info": {
    "author": "Nikolay Khabarov",
    "author_email": "2xl@mail.ru",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "|Build Status|\n\n.. figure:: https://cloud.githubusercontent.com/assets/8740775/26766365/14796b54-4999-11e7-8ca2-9428a45878ab.png\n   :alt: \n\nPyCNC is a free open-source high-performance G-code interpreter and\nCNC/3D-printer controller. It can run on a variety of Linux-powered\nARM-based boards, such as Raspberry Pi, Odroid, Beaglebone and others.\nThis gives you a flexibility to pick a board you are most familiar with,\nand use everything Linux has to offer, while keeping all your G-code\nruntime on the same board without a need to have a separate\nmicrocontroller for real-time operation. Our choice of Python as main\nprogramming language significantly reduces code base compared to C/C++\nprojects, reduces boilerplate and microcontroller-specific code, and\nmakes the project accessible to a broader audience to tinker with.\n\nRealtime Motor Control in Linux?\n================================\n\n| Typically there is no way to control stepper motors from Linux runtime\n  environment due to the lack of real time GPIO control. Even kernel\n  based modules can not guarantee precise control of pulses for\n  steppers. However, we can use a separate hardware module, DMA (Direct\n  Memory Access) which provides high precision for GPIO outputs. This\n  module can copy bytes which represent GPIO states from RAM buffer\n  directly to GPIO with some clock based on main chip internal\n  oscillator without using CPU's cores. Using such approach this project\n  generates impulses for moving stepper motors and that is very precise\n  way regardless CPU load and OS time jitter.\n| This approach also allows to use Python language for this project.\n  Typically, Python is not good choice for real time application, but\n  since project just needs to set up DMA buffers and hardware will do\n  the rest, Python become the perfect choice for easy development of\n  this project.\n\nVideo demo - `YouTube video <https://youtu.be/vcedo59raS4>`__\n\nCurrent gcode support\n=====================\n\n| Commands G0, G1, G2, G3, G4, G17, G18, G19, G20, G21, G28, G53, G90,\n  G91, G92, M2, M3, M5, M30 are supported. Commands can be easily added,\n  see `gmachine.py <./cnc/gmachine.py>`__ file.\n| Four axis are supported - X, Y, Z, E.\n| Spindle with rpm control is supported.\n| Circular interpolation for XY, ZX, YZ planes is supported.\n\nConfig\n======\n\n| All configs are stored in `config.py <./cnc/config.py>`__ and contain\n  hardware properties, limitations and pin names for hardware control.\n| Raspberry Pi implementation should be connected to A4988, DRV8825 or\n  any other stepper motor drivers with DIR and STEP pin inputs. Default\n  config is created for Raspberry Pi 2-3 and this wiring diagram:\n  |image1|\n| So having Raspberry Pi connected this way, there is no need to\n  configure pin map for project.\n\nHardware\n========\n\nCurrently, this project supports Raspberry Pi 1-3. Developed and tested\nwith RPI3. And there is a way to add new boards. See\n`hal.py <./cnc/hal.py>`__ file. *Note: Current Raspberry Pi\nimplementation uses the same resources as on board 3.5 mm jack(PWM\nmodule), so do not use it. HDMI audio works.*\n\nUsage\n=====\n\n| Just clone this repo and run ``./pycnc`` from repo root. It will start\n  in interactive terminal mode where gcode commands can be entered\n  manually.\n| To run file with gcode commands, just run ``./pycnc filename``.\n| Optionally, ``pycnc`` can be installed. Run\n\n.. code:: bash\n\n    sudo pip install .\n\nin repo root directory to install it. After than, ``pycnc`` command will\nbe added to system path. To remove installation, just run:\n\n.. code:: bash\n\n    sudo pip remove pycnc\n\nPerformance notice\n==================\n\n| Pure Python interpreter would not provide great performance for high\n  speed machines. Overspeeding setting causes motors mispulses and\n  probably lose of trajectory. According to my tests, Raspberry Pi 2 can\n  handle axises with 400 pulses on mm with top velocity ~800 mm per min.\n  There is always way out! :) Use JIT Python implementation like PyPy.\n  RPi2 can handle up to 18000 mm per minute on the machine with 80 steps\n  per millimeter motors with PyPy.\n| *Note: Raspbian has outdated PyPy version in repositories(v4.0).\n  Moreover v4.0 has issue with ``mmap`` module implementation. Use PyPy\n  v5.0+, download it for your OS from\n  `here <https://pypy.org/download.html>`__.*\n| PyPy installation:\n\n.. code:: bash\n\n    wget wget https://bitbucket.org/pypy/pypy/downloads/pypy2-v5.7.1-linux-armhf-raspbian.tar.bz2\n    sudo mkdir /opt/pypy\n    sudo tar xvf pypy2-v5.7.1-linux-armhf-raspbian.tar.bz2 --directory /opt/pypy/ --strip-components=1\n    sudo ln -s /opt/pypy/bin/pypy /usr/local/bin/pypy\n\nProject architecture\n====================\n\n.. figure:: https://user-images.githubusercontent.com/8740775/27006267-72506220-4e38-11e7-984f-a629971b6e52.png\n   :alt: \n\nDependencies\n============\n\nNothing for runtime. Just pure Python code. For uploading to PyPi there\nis a need in ``pandoc``:\n\n.. code:: bash\n\n    sudo dnf install pandoc\n    sudo pip install pypandoc\n\nGCode simulation\n================\n\nJust a link, mostly for myself :), to a nice web software for gcode\nfiles emulation (very helpful for manual creating of gcode files):\nhttps://nraynaud.github.io/webgcode/\n\nLicense\n=======\n\nsee `LICENSE <./LICENSE>`__ file.\n\nAuthor\n======\n\nNikolay Khabarov\n\n.. |Build Status| image:: https://travis-ci.org/Nikolay-Kha/PyCNC.svg?branch=master\n   :target: https://travis-ci.org/Nikolay-Kha/PyCNC\n.. |image1| image:: https://cloud.githubusercontent.com/assets/8740775/26024664/bc13d5a6-37de-11e7-98ed-9391109fcfd0.jpg",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Nikolay-Kha/PyCNC",
    "keywords": "CNC 3D printer robot raspberry pi",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pycnc",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pycnc/",
    "release_url": "https://pypi.org/project/pycnc/0.1.3/",
    "requires_python": null,
    "summary": "CNC machine controller",
    "version": "0.1.3"
  },
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7946f4d780ca661d114a0c48c6d4cf34",
          "sha256": "129eae8411060bdbca07a052c808a865085fdab70e10d0b1f2810a75c7334072"
        },
        "downloads": 0,
        "filename": "pycnc-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7946f4d780ca661d114a0c48c6d4cf34",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25299,
        "upload_time": "2017-05-14T14:59:33",
        "url": "https://files.pythonhosted.org/packages/9a/2a/b1baeda0625411fea053974111ed5accf824525b8b42e14f652de0c09390/pycnc-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "226fb1336e71fbfe3848841bc49cf276",
          "sha256": "1382373ba7a48ca51707fbcf0600631571660e0b6680b95f06d9d60551fa294a"
        },
        "downloads": 0,
        "filename": "pycnc-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "226fb1336e71fbfe3848841bc49cf276",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32946,
        "upload_time": "2017-06-11T23:45:35",
        "url": "https://files.pythonhosted.org/packages/52/13/9d80dd1ecd822cf041c10cf997e7cde80525e33500db1696a2fba7bf4e18/pycnc-0.1.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "226fb1336e71fbfe3848841bc49cf276",
        "sha256": "1382373ba7a48ca51707fbcf0600631571660e0b6680b95f06d9d60551fa294a"
      },
      "downloads": 0,
      "filename": "pycnc-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "226fb1336e71fbfe3848841bc49cf276",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 32946,
      "upload_time": "2017-06-11T23:45:35",
      "url": "https://files.pythonhosted.org/packages/52/13/9d80dd1ecd822cf041c10cf997e7cde80525e33500db1696a2fba7bf4e18/pycnc-0.1.3.tar.gz"
    }
  ]
}