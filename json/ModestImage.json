{
  "info": {
    "author": "Chris Beaumont",
    "author_email": "cbeaumont@cfa.harvard.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3"
    ],
    "description": "ModestImage\n===========\n\n*Friendlier matplotlib interaction with large images*\n\nModestImage extends the matplotlib AxesImage class, and avoids\nunnecessary calculation and memory when rendering large images (where\nmost image pixels aren't visible on the screen). It has the following\nbenefits over AxesImage:\n\n-  Draw time is (roughly) independent of image size\n-  Large ``numpy.memmap`` arrays can be visualized, without making an\n   in-memory copy of the entire array. This enables visualization of\n   images too large to fit in memory.\n\nUsing ModestImage\n-----------------\n\nThe easiest way is to use the modified ``imshow`` function:\n\n::\n\n    import matplotlib.pyplot as plt\n    from modest_image import ModestImage, imshow\n\n    ax = plt.gca()\n    imshow(ax, image_array, vmin=0, vmax=10)\n    plt.show()\n\n``imshow`` accepts all the keyword arguments that the matplotlib\nfunction does. The ``vmin`` and ``vmax`` keywords aren't necessary but,\nif they are not provided, the entire image will be scanned to determine\nthe min/max values. This can be slow if the array is huge.\n\nTo create a ModestImage artist directly:\n\n::\n\n    artist = ModestImage(data=array)\n\nLooking at very big FITS images\n-------------------------------\n\n::\n\n    import matplotlib.pyplot as plt\n    import pyfits\n    from modest_image import imshow\n\n    ax = plt.gca()\n    huge_array = pyfits.open('file_name.fits', memmap=True)[0].data\n    artist = imshow(ax, huge_array, vmin=0, vmax=10)\n    plt.show()\n\nThis opens almost instantly, with a modest memory footprint.\n\nWhy is Matplotlib Image Drawing Slow?\n-------------------------------------\n\nFor the first draw request after setting the color mapping or data\narray, AxesImage (the default matplotlib image class) calculates the\nRGBA value for every pixel in the data array. That's a lot of work for\nlarge images, and usually overkill given that the final rendering is\nlimited by screen resolution (usually 100K-1M pixels) and not image\nresolution (often much more).\n\nAxesImage compensates for this by saving the results of this scaling.\nThis means that subsequent renderings that only change the position or\nzoom level are very fast. However, in interactive situations where the\ndata array or intensity scale change often, AxesImage wastes lots of\ntime calculating RGBA values for every pixel in a (potentially large)\ndata set. It also makes several temporary arrays with size comparable to\nthe original array, wasting memory.\n\nHow is ModestImage faster?\n--------------------------\n\nModestImage resamples the image array at each draw request, extracting a\nsmaller image whose resolution and extent are matched to the screen\nresolution. Thus, the RGBA scaling step is much faster, since it takes\nplace only for pixels relevant for the current rendering.\n\nThis scheme does not take advantage of AxesImage's caching, and thus\nredraws after move and zoom operations are slightly slower. However,\ndraws after colormap and data changes are substantially faster, and most\nredraws are fast enough for interactive use.\n\nPerformance and Tests\n---------------------\n\n``speed_test.py`` compares the peformance of ModestImage and AxesImage.\nFor a 1000x1000 pixel image:\n\n::\n\n        Performace Tests for AxesImage\n\n               time_draw: 186 ms per operation\n               time_move: 19 ms per operation\n          time_move_zoom: 28 ms per operation\n\n        Performace Tests for ModestImage\n\n              time_draw: 25 ms per operation\n              time_move: 20 ms per operation\n         time_move_zoom: 28 ms per operation\n\n``time_draw`` is the render time after the cache has been cleared (e.g.\nafter ``set_data`` has been called, or the colormap has been changed).\nModestImage is slightly slower than, though still competetive with,\nAxesImage for move and zoom operations where AxesImage uses cached data.\n\nUnit tests can be found in the ``tests`` directory. ModestImage does not\nalways produce results identical to AxesImage at the pixel level, due to\nhow it downsamples images. The discrepancy is minor, however, and\ndisappears if no downsampling takes place (i.e. a screen pixel samples\n<= 1 data pixel)",
    "docs_url": null,
    "download_url": "http://github.com/ChrisBeaumont/mpl-modest-image",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "UNKNOWN",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "ModestImage",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/ModestImage/",
    "release_url": "https://pypi.org/project/ModestImage/0.1/",
    "requires_python": null,
    "summary": "Friendlier matplotlib interaction with large images",
    "version": "0.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "58cc9b44472bda358484bb5cb03757af",
          "sha256": "f1c296d0058abbc633a5c9a6c5c9f9884824615da203600ff493d5c38d0ed359"
        },
        "downloads": 2468,
        "filename": "ModestImage-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "58cc9b44472bda358484bb5cb03757af",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6501,
        "upload_time": "2014-05-08T19:48:42",
        "url": "https://files.pythonhosted.org/packages/16/38/68ce9477625d2126e9455897809e08e98d266a0ab438c15ed8f99fc884b7/ModestImage-0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "58cc9b44472bda358484bb5cb03757af",
        "sha256": "f1c296d0058abbc633a5c9a6c5c9f9884824615da203600ff493d5c38d0ed359"
      },
      "downloads": 2468,
      "filename": "ModestImage-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "58cc9b44472bda358484bb5cb03757af",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6501,
      "upload_time": "2014-05-08T19:48:42",
      "url": "https://files.pythonhosted.org/packages/16/38/68ce9477625d2126e9455897809e08e98d266a0ab438c15ed8f99fc884b7/ModestImage-0.1.tar.gz"
    }
  ]
}