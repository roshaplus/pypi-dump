{
  "info": {
    "author": "Cody Landry",
    "author_email": "cody.landry@me.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# Smores\n\n[![CircleCI branch](https://img.shields.io/circleci/project/github/codylandry/Smores/master.svg)]()\n[![Coverage Status](https://coveralls.io/repos/github/codylandry/Smores/badge.svg?branch=master)](https://coveralls.io/github/codylandry/Smores?branch=master)\n\nSmores allows you to specify a schema for user facing template features.  It leverages marshmallow (hence 'smores') to\npopulate and transform data that is then rendered via jinja.  It has a parser that presents a more friendly syntax to \nusers (ex. {user.addresses:1.street}).  It also includes an autocomplete method that gives you intellisense style \noptions given a tag fragment.  \n\nSmores provides two Marshmallow field types called TemplateString and TemplateFile.  Templates defined in these fields\nare scoped to that schema and it's descendants.  Each schema can have a _default_template that, if defined, will what\nis inserted if the associated tag ends with that schema.  For example: typing {user.address} will render the _default_template\nfor the Address schema.  You can define other template attributes as well.  For example, see the 'google_link' attribute\nof the Address schema below.  Typing {user.address.google_link} will populate and insert that link.  \n\nsmores.tag_autocomplete is a method where you can provide a tag 'fragment' and it will return the possible options below that.\nFor example:\n\n```python\nfrom smores import Smores, TemplateString\nfrom marshmallow import Schema, fields\n\n# instantiate a smores instance\nsmores = Smores()\n\n# smores.schema registers the schema with the instance\n@smores.schema\nclass Coordinates(Schema):\n    lat = fields.Decimal()\n    lng = fields.Decimal()\n    _default_template = TemplateString(\"{{lat}},{{lng}}\")\n\n@smores.schema\nclass Address(Schema):\n    street = fields.String()\n    suite = fields.String()\n    city = fields.String()\n    state = fields.String()\n    zipcode = fields.String()\n    coordinates = fields.Nested(Coordinates)\n    google_link = TemplateString('<a href=\"https://maps.google.com/?ll={{coordinates}}\">View Map</a>')\n    _default_template = TemplateString(\"\"\"\n        <div>{{<a href=\"https://maps.google.com/?ll={{coordinates}}\">View Map</a>}}</div>\n        <div>{{street}} -- {{suite}}</div>\n        <div>{{city}}, {{state}} {{zipcode}}</div>\n    \"\"\")\n\n@smores.schema\nclass User(Schema):\n    id = fields.Integer()\n    name = fields.String()\n    email = fields.Email()\n    address = fields.Nested(Address)\n    _default_template = TemplateString(\"\"\"\n        <div>{{name}}</div>\n        <div>E: {{email}}</div>\n        <div>{{address}}</div>\n    \"\"\")\n``` \n\n\n```python\n    # for the schemas above, simply invoke the autocomplete method with a tag fragment\n\n    >>> smores.autocomplete(\"\")\n    AutocompleteResponse(tagStatus='INVALID', options=['address', 'coordinates', 'user'])\n\n    >>> smores.autocomplete('user')\n    AutocompleteResponse(tagStatus='VALID', options=['_default_template', 'address', 'email', 'id', 'name'])\n\n    >>> smores.autocomplete('us')\n    AutocompleteResponse(tagStatus='INVALID', options=['user'])\n\n    >>> smores.autocomplete(\"user.address.coordinates\")\n    AutocompleteResponse(tagStatus='VALID', options=['_default_template', 'lat', 'lng'])\n\n    # Receiving '_default_template' or no results means that the current tag fragment is valid but _default_template\n    # shouldn't be appended to the tag in the ui.\n``` \n\n\n```python\n# provide data to the render function\ndata = {\n    \"user\": {\n        \"id\": 1,\n        \"name\": \"Leanne Graham\",\n        \"username\": \"Bret\",\n        \"email\": \"Sincere@april.biz\",\n        \"phone\": \"1-770-736-8031 x56442\",\n        \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"state\": \"MD\",\n            \"zipcode\": \"92998-3874\",\n            \"coordinates\": {\n                \"lat\": \"36.065934\",\n\t\t\t\t\"lng\": \"-79.791414\"\n            }\n        },\n    }\n}\n\n# provide user created template\nuser_template = \"\"\"\n    <h3>Hi, {user.name}!</h3>\n    <p>Your Info:</p>\n    {user}\n\"\"\"\n\n# render the output\nprint smores.render(data, user_template)\n\n# output -->\n# <h3>Hi, Leanne Graham!</h3>\n# <p>Your Info:</p>\n# \n# <div>Leanne Graham</div>\n# <div>E: Sincere@april.biz</div>\n# <div>\n#     <div><a href=\"https://maps.google.com/?ll=36.065934,-79.791414\">View Map</a></div>\n#     <div>Kulas Light -- Apt. 556</div>\n#     <div>Gwenborough, MD 92998-3874</div>\n# </div>\n```\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/codylandry/Smores",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "smores",
    "platform": "",
    "project_url": "https://pypi.org/project/smores/",
    "release_url": "https://pypi.org/project/smores/0.0.1/",
    "requires_dist": [
      "bs4; extra == 'utils'",
      "coverage; extra == 'test'",
      "coveralls; extra == 'test'",
      "pytest-runner; extra == 'test'",
      "pony; extra == 'test'",
      "pytest; extra == 'test'",
      "recommonmark; extra == 'docs'",
      "mkdocs; extra == 'docs'",
      "pydocmd; extra == 'docs'",
      "pyparsing",
      "Jinja2",
      "marshmallow"
    ],
    "requires_python": "",
    "summary": "Allows you to create a schema for templates with a tag syntax easy enough for end users.",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c032a339922d1baf5545bbbee2508796",
          "sha256": "16d65a17fca6bf63dc3a92e2ac6020c1d4f13515e057c659a2e79ad0a0270a02"
        },
        "downloads": -1,
        "filename": "smores-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c032a339922d1baf5545bbbee2508796",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 12323,
        "upload_time": "2017-11-28T03:19:12",
        "url": "https://files.pythonhosted.org/packages/00/ed/0a091f0ae7533ed4012e89f08615f04f9ae24a2f5faf4e31788eb00aa142/smores-0.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a001f052acd8c7707404ba20aa0c9beb",
          "sha256": "48c65b744d321e376437261527c0d226e1b86ca47be88447e934572b90fd81da"
        },
        "downloads": -1,
        "filename": "smores-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a001f052acd8c7707404ba20aa0c9beb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11223,
        "upload_time": "2017-11-28T03:19:13",
        "url": "https://files.pythonhosted.org/packages/c9/ed/7a5fdf31aac1ace88228be80faa7853da93180f011b41787414925f76f33/smores-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c032a339922d1baf5545bbbee2508796",
        "sha256": "16d65a17fca6bf63dc3a92e2ac6020c1d4f13515e057c659a2e79ad0a0270a02"
      },
      "downloads": -1,
      "filename": "smores-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c032a339922d1baf5545bbbee2508796",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 12323,
      "upload_time": "2017-11-28T03:19:12",
      "url": "https://files.pythonhosted.org/packages/00/ed/0a091f0ae7533ed4012e89f08615f04f9ae24a2f5faf4e31788eb00aa142/smores-0.0.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "a001f052acd8c7707404ba20aa0c9beb",
        "sha256": "48c65b744d321e376437261527c0d226e1b86ca47be88447e934572b90fd81da"
      },
      "downloads": -1,
      "filename": "smores-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a001f052acd8c7707404ba20aa0c9beb",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 11223,
      "upload_time": "2017-11-28T03:19:13",
      "url": "https://files.pythonhosted.org/packages/c9/ed/7a5fdf31aac1ace88228be80faa7853da93180f011b41787414925f76f33/smores-0.0.1.tar.gz"
    }
  ]
}