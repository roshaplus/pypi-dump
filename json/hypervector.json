{
  "info": {
    "author": "Ben Burrill",
    "author_email": "bburrill98+hypervector@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Public Domain",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "hypervector\n===========\n| Simple, general, pure Python vectors\n|\n| ``hypervector.py`` defines an infinite-dimensional ``Vector`` type for all your vectoring needs.  Instances of ``Vector`` are immutable and come with a wide array of useful operations and features.\n|\n| ``hypervector`` is in the public domain.\n\nA few explanatory examples\n--------------------------\nHello world\n\n.. code:: python\n\n    >>> from hypervector import Vector\n    >>> (Vector(1, 2, 1) + Vector(3, 0, 2)).xy\n    Vector(4, 2)\n\nKing of infinite (vector) space\n\n.. code:: python\n\n    >>> vec = Vector(2, 4)\n    >>> (vec[0], vec[1], vec[2], vec[1114111])\n    (2, 4, 0, 0)\n\nCross-eyed\n\n.. code:: python\n\n    >>> vec_1, vec_2 = Vector(1, 2, 3), Vector(3, 2, 1)\n    >>> Vector.cross(vec_1, vec_2)\n    Vector(-4.0, 8.0, -4.0)\n    >>> [Vector.dot(_, vec) for vec in (vec_1, vec_2)]\n    [0.0, 0.0]\n    >>> vec_3 = Vector(-1, 8, 3, 2)\n    >>> Vector.cross(vec_1, vec_2, vec_3)\n    Vector(8.0, -16.0, 8.0, 56.0)\n    >>> [Vector.dot(_, vec) for vec in (vec_1, vec_2, vec_3)]\n    [0.0, 0.0, 0.0]\n\nTesting\n-------\n| ``hypervector`` uses `py.test`_ and `hypothesis`_, with `tox`_ as a test runner.\n|\n| The unit tests can be run with ``tox``.  If you run into any slow data generation errors, use\n| ``tox -- --hypothesis-profile=allow-slow`` instead.\n\nWhy infinite dimensions?\n------------------------\n| Because generalizing things is fun and having infinite dimensions is somewhat easier and simpler than having an abstract Vector type with arbitrary (but finite) dimensions.\n|\n| It is worth noting that ``Vector`` plays a little fast and loose with the concept of infinite dimensions, as it has a concept of \"relevant\" dimensions which is exposed through iteration, string representations, and a few other places to a lesser extent.\n| Similarly, there is no way to have a ``Vector`` with infinite non-zero components.\n\nHow fast is hypervector?\n------------------------\n| Dunno.  Probably pretty slow.  If you need speed, use numpy.\n\nAlternatives\n------------\n| There are many other libraries with similar features to ``hypervector``.  Some notable examples:\n\n * `numpy <http://www.numpy.org/>`_\n * `pyeuclid <https://pypi.python.org/pypi/euclid3>`_ |--| Has (among other things) ``Vector2`` and ``Vector3`` types.  Also has packages for *Python* 2 and *Python* 3.\n\nLinks\n-----\n| Get `hypervector from PyPi`_: ``pip install hypervector``\n| Report bugs and offer suggestions at the github `issues`_ page.\n\n.. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..\n.. Dependencies\n.. _py.test: https://pytest.org/\n.. _hypothesis: http://hypothesis.works/\n.. _tox: https://pypi.python.org/pypi/tox\n\n.. Links\n.. _hypervector from PyPi: https://pypi.python.org/pypi/hypervector\n.. _issues: https://github.com/benburrill/hypervector/issues\n\n.. Definitions\n.. |--| unicode:: U+2014 .. (em dash)\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/benburrill/hypervector",
    "keywords": "",
    "license": "Public Domain",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hypervector",
    "platform": "any",
    "project_url": "https://pypi.org/project/hypervector/",
    "release_url": "https://pypi.org/project/hypervector/0.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Simple, general, pure Python vectors",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "28e30ee8e089d1df4a02cde4203b55f4",
          "sha256": "4db7fc2bca673d76e9b14f5bf05d46a1df38750ff7b9cce388fc4eecb66808ba"
        },
        "downloads": -1,
        "filename": "hypervector-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "28e30ee8e089d1df4a02cde4203b55f4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8543,
        "upload_time": "2017-10-30T01:55:25",
        "url": "https://files.pythonhosted.org/packages/0c/a3/21d77a4bb0eaaafd7189c1288b8b4e40f2b80f927aeec616b61a19b77c01/hypervector-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "28e30ee8e089d1df4a02cde4203b55f4",
        "sha256": "4db7fc2bca673d76e9b14f5bf05d46a1df38750ff7b9cce388fc4eecb66808ba"
      },
      "downloads": -1,
      "filename": "hypervector-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "28e30ee8e089d1df4a02cde4203b55f4",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8543,
      "upload_time": "2017-10-30T01:55:25",
      "url": "https://files.pythonhosted.org/packages/0c/a3/21d77a4bb0eaaafd7189c1288b8b4e40f2b80f927aeec616b61a19b77c01/hypervector-0.0.1.tar.gz"
    }
  ]
}