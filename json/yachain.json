{
  "info": {
    "author": "F. Brekeveld",
    "author_email": "f.brekeveld@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "yachain\n=======\n\n.. image:: https://travis-ci.org/hootnot/yachain.svg?branch=master\n    :target: https://travis-ci.org/hootnot/yachain\n\n.. image:: https://img.shields.io/pypi/pyversions/yachain.svg\n    :target: https://github.com/hootnot/yachain\n\nYAML access on chained attribute names.\n\nInstall\n-------\n\n.. code-block:: shell\n\n   $ pip install yachain\n\n\nSuppose we have:\n\n.. code-block:: yaml\n\n   network:\n      name: developers\n      gitserver:\n         ip: 192.168.178.101\n         netmask: 255.255.255.0\n         gateway: 192.168.178.1\n         packages:\n         - yum\n         - gcc\n\n\nWith *yachain* we can access this as:\n\n.. code-block:: python\n\n   >>> import yachain\n\n   >>> c = yachain.Config().load(\"netw.cfg\")\n   >>> print(c[\"network::gitserver::gateway\"])\n   192.168.178.1\n   >>> print(c[\"network::gitserver::packages\"])\n   ['yum', 'gcc']\n\n\nReferences to files / paths independent from environment\n--------------------------------------------------------\n\nReferences to files and paths can be used relative and absolute.\nIn case an attribute ends on *path* or *file* then the path can be\nprefixed automatically when operation from a virtual environment is detected.\nThe works by default upper and lower case and can be overriden.\n\nUsing the *prefix* makes it possible to use the same config in different\nenvironments.\n\n.. code-block:: python\n\n   import yachain\n   import yaml\n   import sys\n   import os\n\n   # yaml config:\n   yc = \"\"\"\n   ---\n   app:\n     logfile: var/log/app.log\n     textrules: var/app.app.txt\n     database_path: var/app/db\n     database_file: /var/app/db/db.txt\n     database_name: db.txt\n   \"\"\"\n\n   PREFIX = \"/\" if not hasattr(sys, 'real_prefix') else sys.prefix\n   # CONFIG_FILE = os.path.join(PREFIX, \"etc/app/app.cfg\")\n   config = yachain.Config(prefix=PREFIX, configdata=yaml.load(yc))\n\n\n   for A in [\"logfile\",\n             \"textrules\",\n             \"database_path\",\n             \"database_file\",\n             \"database_name\"]:\n       k = \"app::{}\".format(A)\n       print config[k]\n\n\nWhen run from a virtual environment, this will give us:\n\n.. code-block:: bash\n\n   /home/user/venv/var/log/app.log\n   var/app.app.txt\n   /home/user/venv/var/app/db\n   /var/app/db/db.txt\n   db.txt\n\n\nSo, as expected, the *logfile* and *database_path* got the PREFIX.\n\nWhen run from a non-virtual environment, this will give us:\n\n.. code-block:: bash\n\n   /var/log/app.log\n   var/app.app.txt\n   /var/app/db\n   /var/app/db/db.txt\n   db.txt\n\n\nSo, as expected, prefixed with \"/\".\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/hootnot/yachain",
    "keywords": "YAML parser configuration",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yachain",
    "platform": "",
    "project_url": "https://pypi.org/project/yachain/",
    "release_url": "https://pypi.org/project/yachain/0.1.1/",
    "requires_python": "",
    "summary": "YAML parser",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "49a59769bd382fa76e8beaa9c4e7ea2f",
          "sha256": "cc9032e41b1d0aa9e5fdc6a65896da9c66cee6649908dceff45431e51c9cffc3"
        },
        "downloads": 0,
        "filename": "yachain-0.1.0.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "49a59769bd382fa76e8beaa9c4e7ea2f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4722,
        "upload_time": "2017-06-04T07:07:07",
        "url": "https://files.pythonhosted.org/packages/83/26/cb118d79df4fa2a4b5ffb59c86e593b4feb4a12b11bc866628dce57e5ede/yachain-0.1.0.linux-x86_64.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b5bd716a133d98283874f556303ee770",
          "sha256": "2a5dc74e575873ae3486122c7908c23350625e3b9ca09186662abda503609f6a"
        },
        "downloads": 0,
        "filename": "yachain-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5bd716a133d98283874f556303ee770",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 6255,
        "upload_time": "2017-06-04T09:17:43",
        "url": "https://files.pythonhosted.org/packages/86/8a/a8d722a08ad92b6712cbf14f41dee5264eb71e75466c3cf9a6a0857de746/yachain-0.1.1-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b5bd716a133d98283874f556303ee770",
        "sha256": "2a5dc74e575873ae3486122c7908c23350625e3b9ca09186662abda503609f6a"
      },
      "downloads": 0,
      "filename": "yachain-0.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b5bd716a133d98283874f556303ee770",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 6255,
      "upload_time": "2017-06-04T09:17:43",
      "url": "https://files.pythonhosted.org/packages/86/8a/a8d722a08ad92b6712cbf14f41dee5264eb71e75466c3cf9a6a0857de746/yachain-0.1.1-py2.py3-none-any.whl"
    }
  ]
}