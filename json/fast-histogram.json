{
  "info": {
    "author": "Thomas Robitaille",
    "author_email": "thomas.robitaille@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "|Travis Status| |AppVeyor Status|\n\nAbout\n-----\n\nSometimes you just want to compute simple 1D or 2D histograms with regular bins. Fast. No\nnonsense. `Numpy's <http://www.numpy.org>`__ histogram functions are\nversatile, and can handle for example non-regular binning, but this\nversatility comes at the expense of performance.\n\nThe **fast-histogram** mini-package aims to provide simple and fast\nhistogram functions for regular bins that don't compromise on performance. It doesn't do\nanything complicated - it just implements a simple histogram algorithm\nin C and keeps it simple. The aim is to have functions that are fast but\nalso robust and reliable. The result is a 1D histogram function here that\nis **7-15x faster** than ``numpy.histogram``, and a 2D histogram function\nthat is **20-25x faster** than ``numpy.histogram2d``.\n\nTo install:\n\n::\n\n    pip install fast-histogram\n\nThe ``fast_histogram`` module then provides two functions:\n``histogram1d`` and ``histogram2d``:\n\n.. code:: python\n\n    from fast_histogram import histogram1d, histogram2d\n\nExample\n-------\n\nHere's an example of binning 10 million points into a regular 2D\nhistogram:\n\n.. code:: python\n\n    In [1]: import numpy as np\n\n    In [2]: x = np.random.random(10_000_000)\n\n    In [3]: y = np.random.random(10_000_000)\n\n    In [4]: %timeit _ = np.histogram2d(x, y, range=[[-1, 2], [-2, 4]], bins=30)\n    935 ms \u00b1 58.4 ms per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\n\n    In [5]: from fast_histogram import histogram2d\n\n    In [6]: %timeit _ = histogram2d(x, y, range=[[-1, 2], [-2, 4]], bins=30)\n    40.2 ms \u00b1 624 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 10 loops each)\n\n(note that ``10_000_000`` is possible in Python 3.6 syntax, use ``10000000`` instead in previous versions)\n\nThe version here is over 20 times faster! The following plot shows the\nspeedup as a function of array size for the bin parameters shown above:\n\n.. figure:: https://github.com/astrofrog/fast-histogram/raw/master/speedup_compared.png\n   :alt: Comparison of performance between Numpy and fast-histogram\n\nas well as results for the 1D case, also with 30 bins. The speedup for\nthe 2D case is consistently between 20-25x, and for the 1D case goes\nfrom 15x for small arrays to around 7x for large arrays.\n\nQ&A\n---\n\nWhy don't the histogram functions return the edges?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nComputing and returning the edges may seem trivial but it can slow things down by a factor of a few when computing histograms of 10^5 or fewer elements, so not returning the edges is a deliberate decision related to performance. You can easily compute the edges yourself if needed though, using ``numpy.linspace``.\n\nDoesn't package X already do this, but better?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis may very well be the case! If this duplicates another package, or\nif it is possible to use Numpy in a smarter way to get the same\nperformance gains, please open an issue and I'll consider deprecating\nthis package :)\n\nOne package that does include fast histogram functions (including in\nn-dimensions) and can compute other statistics is\n`vaex <https://github.com/maartenbreddels/vaex>`_, so take a look there\nif you need more advanced functionality!\n\nAre the 2D histograms not transposed compared to what they should be?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThere is technically no 'right' and 'wrong' orientation - here we adopt\nthe convention which gives results consistent with Numpy, so:\n\n.. code:: python\n\n    numpy.histogram2d(x, y, range=[[xmin, xmax], [ymin, ymax]], bins=[nx, ny])\n\nshould give the same result as:\n\n.. code:: python\n\n    fast_histogram.histogram2d(x, y, range=[[xmin, xmax], [ymin, ymax]], bins=[nx, ny])\n\nWhy not contribute this to Numpy directly?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAs mentioned above, the Numpy functions are much more versatile, so they could not\nbe replaced by the ones here. One option would be to check in Numpy's functions for\ncases that are simple and dispatch to functions such as the ones here, or add\ndedicated functions for regular binning. I hope we can get this in Numpy in some form\nor another eventually, but for now, the aim is to have this available to packages\nthat need to support a range of Numpy versions.\n\nWhy not use Cython?\n~~~~~~~~~~~~~~~~~~~\n\nI originally implemented this in Cython, but found that I could get a\n50% performance improvement by going straight to a C extension.\n\nWhat about using Numba?\n~~~~~~~~~~~~~~~~~~~~~~~\n\nI specifically want to keep this package as easy as possible to install,\nand while `Numba <https://numba.pydata.org>`__ is a great package, it is\nnot trivial to install outside of Anaconda.\n\nCould this be parallelized?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis may benefit from parallelization under certain circumstances. The\neasiest solution might be to use OpenMP, but this won't work on all\nplatforms, so it would need to be made optional.\n\nCouldn't you make it faster by using the GPU?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAlmost certainly, though the aim here is to have an easily installable\nand portable package, and introducing GPUs is going to affect both of\nthese.\n\nWhy make a package specifically for this? This is a tiny amount of functionality\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPackages that need this could simply bundle their own C extension or\nCython code to do this, but the main motivation for releasing this as a\nmini-package is to avoid making pure-Python packages into packages that\nrequire compilation just because of the need to compute fast histograms.\n\nCan I contribute?\n~~~~~~~~~~~~~~~~~\n\nYes please! This is not meant to be a finished package, and I welcome\npull request to improve things.\n\n.. |Travis Status| image:: https://travis-ci.org/astrofrog/fast-histogram.svg?branch=master\n   :target: https://travis-ci.org/astrofrog/fast-histogram\n\n.. |AppVeyor Status| image:: https://ci.appveyor.com/api/projects/status/ek63g9haku5on0q2/branch/master?svg=true\n   :target: https://ci.appveyor.com/project/astrofrog/fast-histogram",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/astrofrog/fast-histogram",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fast-histogram",
    "platform": "",
    "project_url": "https://pypi.org/project/fast-histogram/",
    "release_url": "https://pypi.org/project/fast-histogram/0.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Fast simple 1D and 2D histograms",
    "version": "0.3"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ff56c7adbdf33eb9c6c6cd200de84d18",
          "sha256": "a3d5404d420530ce62368c4383697febde36ad0ea586fdd8b0e6c3699aed323e"
        },
        "downloads": -1,
        "filename": "fast-histogram-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ff56c7adbdf33eb9c6c6cd200de84d18",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6982,
        "upload_time": "2017-07-18T15:28:35",
        "url": "https://files.pythonhosted.org/packages/2e/41/f43250884e8cdeba67c4101f5de161b25831b7ddd397b4320218d5c58430/fast-histogram-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c6efe9d3015f1efde2e1d51dc8a5242a",
          "sha256": "e3f563db22478a950a24a52b11786114a8ad90c72addd7bd72e7e5a7d2159ece"
        },
        "downloads": -1,
        "filename": "fast-histogram-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c6efe9d3015f1efde2e1d51dc8a5242a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7080,
        "upload_time": "2017-07-18T16:49:40",
        "url": "https://files.pythonhosted.org/packages/06/fc/9bf4b9393035d732d578e0ab522956abe296332b890fbc9731f9fc72b600/fast-histogram-0.2.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "87c6c31a19bf48b464da623b3bb1cf07",
          "sha256": "1cbefcb23a8fad6f904b73a6a8d7cc04127e3691cbb6f0cdd4fdd20a94f0dd0c"
        },
        "downloads": -1,
        "filename": "fast-histogram-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "87c6c31a19bf48b464da623b3bb1cf07",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7102,
        "upload_time": "2017-07-18T16:52:11",
        "url": "https://files.pythonhosted.org/packages/c7/50/fc4b5f6b43be12b2733a3b7d19c735c34812fefacadbf975b47d44bed3f3/fast-histogram-0.2.1.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ee3370deba22deb546e91f2864315632",
          "sha256": "fdfab401aed9ba2bf96cac2f41679dbb26e0da520e7fd0428e8b1aa20b47ac0d"
        },
        "downloads": -1,
        "filename": "fast-histogram-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ee3370deba22deb546e91f2864315632",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8304,
        "upload_time": "2017-10-29T00:26:32",
        "url": "https://files.pythonhosted.org/packages/33/88/d54dbf97a1dd521939de428baeffc0800d57fc4509ecea4b9e2d9721d2b1/fast-histogram-0.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ee3370deba22deb546e91f2864315632",
        "sha256": "fdfab401aed9ba2bf96cac2f41679dbb26e0da520e7fd0428e8b1aa20b47ac0d"
      },
      "downloads": -1,
      "filename": "fast-histogram-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "ee3370deba22deb546e91f2864315632",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8304,
      "upload_time": "2017-10-29T00:26:32",
      "url": "https://files.pythonhosted.org/packages/33/88/d54dbf97a1dd521939de428baeffc0800d57fc4509ecea4b9e2d9721d2b1/fast-histogram-0.3.tar.gz"
    }
  ]
}