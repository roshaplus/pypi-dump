{
  "info": {
    "author": "Matthew Planchard",
    "author_email": "msplanchard@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "PyDecor\n=======\n\nEasy-peasy Python decorators!\n\n\nWork in Progress!\n-----------------\n\n.. WARNING::\n  **This is a work in progress! It is still marked as being in the\n  Planning stage, and it is not ready for third-party usage. Breaking\n  changes may occur, and all planned functionality is not yet present**\n\n\nSummary\n-------\n\nDecorators are great, but they're hard to write, especially if you want\nto include arguments to your decorators, or use your decorators on\nclasses as well as functions, or if you want to be able to call your\ndecorators with or without parentheses.\n\nPyDecor aims to make function easy and straightforward, so that developers\ncan stop worrying about closures and syntax in triply nested functions and\ninstead get down to decorating!\n\nPlanned Featureset\n------------------\n\nMy plan is to include the following callback-oriented decorators.\nAll decorators will be capable of functioning at the function, method, or\nclass level. Decorators will be stackable.\n\n* ``before`` - run a callback before the decorated callable, optionally\n  introspecting and altering the args and kwargs passed to the decorated\n  function\n* ``after`` - run a callback after the decorated callable, optionally\n  introspecting and adjusting/replacing the return value\n* ``decorate`` - allow providing ``before`` and ``after`` functions in\n  one decorator rather than stacking\n\nIn addition, a function ``decorator`` will be provided, which will take\nsimilar arguments to ``decorate`` above, but will instead return a new\ndecorator. Decorators created in this way will be callable at the function,\nmethod, or the class level, with or without parameters, and will be\nstackable.\n\nCredits and Links\n-----------------\n\n* This project was started using my semi-custom `project template`_\n* Tests are run with pytest_\n\n.. _`project template`: https://github.com/mplanchard/python_skeleton\n.. _pytest:\n.. _`py.test`: https://docs.pytest.org/en/latest/\n\n\n",
    "docs_url": "https://pythonhosted.org/pydecor/",
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/mplanchard/pydecor",
    "keywords": "decorators,python2,python3",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pydecor",
    "platform": "",
    "project_url": "https://pypi.org/project/pydecor/",
    "release_url": "https://pypi.org/project/pydecor/0.1.0.dev3/",
    "requires_python": "",
    "summary": "Easy peasy Python decorators",
    "version": "0.1.0.dev3"
  },
  "releases": {
    "0.1.0.dev1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1c90280fa266518eebf65da8a80ec0eb",
          "sha256": "2ff6addcdcd39fc6f412232f324e31a0f71fa8eb85d9e84b04651ea9d2ebb1d5"
        },
        "downloads": 0,
        "filename": "pydecor-0.1.0.dev1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c90280fa266518eebf65da8a80ec0eb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 3706,
        "upload_time": "2017-06-01T01:13:23",
        "url": "https://files.pythonhosted.org/packages/e6/95/f74fd8366f605b6b28f0c2cde723202693bddee938001fe43a9121c30e96/pydecor-0.1.0.dev1-py2.py3-none-any.whl"
      }
    ],
    "0.1.0.dev2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "617d97ce5495fa983abb553cfcf34bea",
          "sha256": "6a7a88ea1f30921ef2f2d9c1961e87d5326c870494d7448b5a2e8a528e5ad12e"
        },
        "downloads": 0,
        "filename": "pydecor-0.1.0.dev2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "617d97ce5495fa983abb553cfcf34bea",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 4098,
        "upload_time": "2017-06-01T03:15:39",
        "url": "https://files.pythonhosted.org/packages/5e/a2/1c5aad2c5bf175be1f5d5b7271e969259c9c1f1b54e30a5719be513559ff/pydecor-0.1.0.dev2-py2.py3-none-any.whl"
      }
    ],
    "0.1.0.dev3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fe67d6828ff2efe7a5b96492f88adfbc",
          "sha256": "3233127d6f4f96285deaa6b2e551bd07261566acc75131f0298a7b4ef21d0a0b"
        },
        "downloads": 0,
        "filename": "pydecor-0.1.0.dev3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe67d6828ff2efe7a5b96492f88adfbc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 6867,
        "upload_time": "2017-06-07T13:52:15",
        "url": "https://files.pythonhosted.org/packages/be/1f/8ed7e83df54b414c4064f34e8dbc4a6498f7686ea2580a1f9587aacca2b7/pydecor-0.1.0.dev3-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fe67d6828ff2efe7a5b96492f88adfbc",
        "sha256": "3233127d6f4f96285deaa6b2e551bd07261566acc75131f0298a7b4ef21d0a0b"
      },
      "downloads": 0,
      "filename": "pydecor-0.1.0.dev3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fe67d6828ff2efe7a5b96492f88adfbc",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 6867,
      "upload_time": "2017-06-07T13:52:15",
      "url": "https://files.pythonhosted.org/packages/be/1f/8ed7e83df54b414c4064f34e8dbc4a6498f7686ea2580a1f9587aacca2b7/pydecor-0.1.0.dev3-py2.py3-none-any.whl"
    }
  ]
}