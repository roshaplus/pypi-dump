{
  "info": {
    "author": "",
    "author_email": "seiji.armstrong@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# seipy\n\nHelper functions for the python data science stack as well as spark, AWS, jupyter.\n\n## What is it\n\nThis library contains helpers and wrappers for common data science libraries in the python stack:\n- pandas\n- numpy\n- scipy\n- sklearn\n- matplotlib\n- pyspark\n\nThere are also functions that simplify common manipulations for machine learning and data science\nin general, as well as interfacing with the following tools:\n- s3\n- jupyter\n- aws\n- spark SQL\n\n## Installation\n```\n# PyPI\npip install seipy\n```\n\n## Here are some examples\n\n### pandas\n\n#### Apply function to unique DataFrame entries only (for speedup)\n```\nfrom seipy import apply_uniq\ndf2 = apply_uniq(df, orig_col, new_col, _func)\n```\nThis will return the same DataFrame as performing:\n`df[new_col] = df[orig_col].apply(_func)`\nbut is much more performant when there are many duplicate entries in `orig_col`.\n\nIt works by performing the function `_func` only on the unique entries and then merging with the original DataFrame.\nOriginally answered on stack overflow:\nhttps://stackoverflow.com/questions/46798532/how-do-you-effectively-use-pd-dataframe-apply-on-rows-with-duplicate-values/\n\n#### Filtering DataFrame with multiple conditions\n```\nfrom seipy import filt\n# example with keyword arguments\nfilt(df,\n     season=\"summer\",\n     age=(\">\", 18),\n     sport=(\"isin\", [\"Basketball\", \"Soccer\"]),\n     name=(\"contains\", \"Armstrong\")\n    )\n\n# example with dict notation\na = {'season': \"summer\", 'age': (\">\", 18)}\nfilt(df, **a)\n```\n\n### linear algebra\n\n```\nfrom seipy import distmat\ndistmat()\n```\nThis will prints possible distance metrics such as \"euclidean\" \"chebyshev\", \"hamming\".\n\n```\ndistmat(fframe, metric)\n```\nThis generates a distance matrix using `metric`.\nNote, this function is a wrapper of scipy.spatial.distance.cdist\n\n\n### jupyter\n\n```\nfrom seipy import notebook_contains\nnotebook_contains(search_str,\n                  on_docker=False,\n                  git_dir='~/git/experiments/',\n                  start_date='2015-01-01', end_date='2018-12-31')\n```\nPrints a list of notebooks that contain the str `search_str`.\nVery useful for these situations: \"Where's that notebook where I was trying that one thing that one time?\"\n\n### s3\n```\nfrom seipy import s3zip_func\ns3zip_func(s3zip_path, _func, cred_fpath=cred_fpath, **kwargs)\n```\nThis one's kinda nice. It allows one to apply a function `_func` to each subfile in a zip file sitting on s3.\nI use it to filter and enrich some csv files that periodically get zipped to s3, for example.\n\n\n### spark and s3 on jupyter\n\n```\nfrom seipy import s3spark_init\nspark = s3spark_init(cred_fpath)\n```\nReturns `spark`, a `SparkSession` that makes it possible to interact with s3 from jupyter notebooks.\n`cred_fpath` is the file path to the aws credentials file containing your keys.\n\n\n### Miscellaneous\n\n```\nfrom seiji import merge_two_dicts\nmerge_two_dicts(dict_1, dict_2)\n```\nReturns the merged dict `{**dict_1, **dict_2}`.\nAn extension for mulitple dicts is `reduce(lambda d1,d2: {**d1,**d2}, dict_args[0])`\n\n### Getting help\n\nPlease either post an issue on this github repo, or email the author `seiji dot armstrong at gmail` with feedback,\nfeature requests, or to complain that something doesn't work as expected.\n\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Seiji-Armstrong/seipy",
    "keywords": "pandas numpy spark jupyter data-science machine-learning s3",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "seipy",
    "platform": "",
    "project_url": "https://pypi.org/project/seipy/",
    "release_url": "https://pypi.org/project/seipy/1.2.0b1/",
    "requires_dist": [
      "seaborn",
      "scipy",
      "scikit-learn",
      "scapy-python3",
      "pyspark",
      "pandas",
      "pandas",
      "numpy",
      "matplotlib",
      "ipython",
      "boto3"
    ],
    "requires_python": ">=3",
    "summary": "Helper functions for data science",
    "version": "1.2.0b1"
  },
  "releases": {
    "1.2.0b1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "344c56d13c648e995b12d6f39190b6d7",
          "sha256": "02c5146caf527e645273e019b8a573f01040cc56f0bbcf1fc2d668968a7f686d"
        },
        "downloads": -1,
        "filename": "seipy-1.2.0b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "344c56d13c648e995b12d6f39190b6d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 19780,
        "upload_time": "2017-12-28T06:20:40",
        "url": "https://files.pythonhosted.org/packages/a9/8f/c4bfc9495b122230ffb6c18b6bcde275ea3e64ff0fce88f451ce244c855b/seipy-1.2.0b1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "60e98f6f6036fc989b85e8d0de6ac4bc",
          "sha256": "a0c974e5394ba4f7197c34418c6778292bdd8cff6ff1f555d7250e62fe84dc26"
        },
        "downloads": -1,
        "filename": "seipy-1.2.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "60e98f6f6036fc989b85e8d0de6ac4bc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15393,
        "upload_time": "2017-12-28T06:20:41",
        "url": "https://files.pythonhosted.org/packages/51/3c/3f2cbf8619ca55d7b74b413803d57510a940b21be301b30f79a142c300df/seipy-1.2.0b1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "344c56d13c648e995b12d6f39190b6d7",
        "sha256": "02c5146caf527e645273e019b8a573f01040cc56f0bbcf1fc2d668968a7f686d"
      },
      "downloads": -1,
      "filename": "seipy-1.2.0b1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "344c56d13c648e995b12d6f39190b6d7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 19780,
      "upload_time": "2017-12-28T06:20:40",
      "url": "https://files.pythonhosted.org/packages/a9/8f/c4bfc9495b122230ffb6c18b6bcde275ea3e64ff0fce88f451ce244c855b/seipy-1.2.0b1-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "60e98f6f6036fc989b85e8d0de6ac4bc",
        "sha256": "a0c974e5394ba4f7197c34418c6778292bdd8cff6ff1f555d7250e62fe84dc26"
      },
      "downloads": -1,
      "filename": "seipy-1.2.0b1.tar.gz",
      "has_sig": false,
      "md5_digest": "60e98f6f6036fc989b85e8d0de6ac4bc",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15393,
      "upload_time": "2017-12-28T06:20:41",
      "url": "https://files.pythonhosted.org/packages/51/3c/3f2cbf8619ca55d7b74b413803d57510a940b21be301b30f79a142c300df/seipy-1.2.0b1.tar.gz"
    }
  ]
}