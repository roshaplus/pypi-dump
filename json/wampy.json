{
  "info": {
    "author": "Simon Harrison",
    "author_email": "noisyboiler@googlemail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": ".. -*- mode: rst -*-\n\n|Travis|_ |Python27|_ |Python33|_ |Python34|_ |Python35|_ |Python36|_ \n\n.. |Travis| image:: https://travis-ci.org/noisyboiler/wampy.svg?branch=master\n.. _Travis: https://travis-ci.org/noisyboiler/wampy\n\n.. |Python27| image:: https://img.shields.io/badge/python-2.7-blue.svg\n.. _Python27: https://pypi.python.org/pypi/wampy/\n\n.. |Python33| image:: https://img.shields.io/badge/python-3.3-blue.svg\n.. _Python33: https://pypi.python.org/pypi/wampy/\n\n.. |Python34| image:: https://img.shields.io/badge/python-3.4-blue.svg\n.. _Python34: https://pypi.python.org/pypi/wampy/\n\n.. |Python35| image:: https://img.shields.io/badge/python-3.5-blue.svg\n.. _Python35: https://pypi.python.org/pypi/wampy/\n\n.. |Python36| image:: https://img.shields.io/badge/python-3.6-blue.svg\n.. _Python36: https://pypi.python.org/pypi/wampy/\n\nwampy\n=====\n\n*[whomp-ee]*\n\n.. pull-quote ::\n\n    WAMP RPC and Pub/Sub for your Python apps and microservices\n\nThis is a Python implementation of `WAMP`_ not requiring `Twisted`_ or asyncio, enabling use within classic blocking Python applications. It is a light-weight alternative to `autobahn`_.\n\nWith **wampy** you can quickly and easily create your own **WAMP** clients, whether this is in a web app, a microservice, a script or just in a Python shell.\n\n**wampy** tries to provide an intuitive API for your **WAMP** messaging.\n\nSee `ReadTheDocs`_ for more detailed documentation.\n\nwampy features\n~~~~~~~~~~~~~~\n\n- Remote Procedure Calls over websockets\n- Publish and Subscribe over websockets\n- Client Authentication\n- Transport Layer Security\n- Pytest fixtures to use when testing your projects\n- nameko_ integration with nameko_wamp_\n\nQuickstart: wampy from the command line\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBefore any messaging can happen you need a **Router**. Messages are then routed between **Clients** over an administrative domain on the **Router** called a **Realm**.\n\nFor the quickest of starts I suggest that you use **Crossbar.io** and start it up on the default host and port, and with the default **realm** and **roles**. See the `Crossbar.io docs`_ for the instructions on this or alternatively run with **wampy's** testing setup.\n\n::\n\n    $ pip install --editable .[dev]\n\n    $ crossbar start --config ./wampy/testing/configs/crossbar.json\n\nwampy RPC\n~~~~~~~~~\n\nNow open your preferred text editor and we'll write a few lines of Python constructing a simple **WAMP** service that takes a decimal number and returns the binary representation of it - wowzers!\n\n::\n\n    from wampy.peers.clients import Client\n    from wampy.roles import callee\n\n    class BinaryNumberService(Client):\n\n        @callee\n        def get_binary_number(self, number):\n            return bin(number)\n\nSave this module somewhere on your Python path and we'll use a **wampy** command line interface tool to start the service.\n\n::\n\n    $ wampy run path.to.your.module.including.module_name:BinaryNumberService\n\nFor example, running one of the **wampy** example applications against the Router suggested previously:\n\n::\n\n    $ wampy run docs.examples.services:DateService --config ./wampy/testing/configs/crossbar.json\n\nActually - no need to panic! The ``BinaryNumberService`` example already exists in the **wampy** examples so put that text editor away if you like. Just execute from the command line:\n\n::\n\n    $ wampy run docs.examples.services:BinaryNumberService --config ./wampy/testing/configs/crossbar.json\n\n\nNow, open a Python console in a new terminal, allowing the ``BinaryNumberService`` to run uninterupted in your original terminal (but once you're done with it ``Ctrl-C`` is required).\n\n::\n\n    In [1]: from wampy.peers.clients import Client\n\n    In [2]: from wampy.peers.routers import Crossbar\n\n    In [3]: router = Crossbar(config_path='./wampy/testing/configs/crossbar.json')\n\n    In [4]: with Client(router=router) as client:\n                result = client.rpc.get_binary_number(number=100)\n\n    In [5]: result\n    Out[5]: u'0b1100100'\n\nNote here that a ``Client`` takes a ``router`` argument which defaults to Crossbar. Crossbar then defaults to ``realm1`` on ``localhost:8080``. To use different values you'll need to configure and pass in the router object to the client yourself. This isn't hard, but when you're developing locally these defaults are there to help you get up and running quickly.\n\nIn fact, the ``router`` was just there in this example to make it clear that a ``Client`` takes a ``router`` parameter. Developing locally, this is all you need:\n\n::\n\n    In [1]: from wampy.peers.clients import Client\n\n    In [2]: with Client() as client:\n                result = client.rpc.get_binary_number(number=100)\n\n\nwampy RPC for Crossbar.io\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe RPC pattern above was inspired by the nameko_ project, but this pattern may not feel intuitive for those familiar with **Crossbar.io**, the primary Router used by **wampy**.\n\nFor this reason there also exists the ``CallProxy`` object which implements the ``call`` API by more loosely wrapping **wampy's** ``Call`` Message. In this pattern, applications and their endpoints are identified by dot delimented strings rather than a single API name, e.g.\n\n::\n\n    \"com.example.endpoint\"\n\nJust like the ``rpc`` API, the ``call`` API is directly available on every **wampy** client. Lets look at the two examples side by side.\n\n::\n\n    >>> client.rpc.get_foo_bar(eggs, foo=bar, spam=ham)\n    >>> client.call(\"get_foo_bar\", eggs, foo=bar, spam=ham)\n\nNoted these are very similar and achieve the same, but the intention here is for the ``call`` API to behave more like a classic **Crossbar.io** application and the ``rpc`` to be used in nameko_wamp_.\n\nThe ``call`` API however does allow calls of the form...\n\n::\n\n    >>> client.call(\"com.myapp.foo.bar\", eggs, foo=bar, spam=ham) \n\n...which you will not be able to do with the ``rpc`` API.\n\n\nPublishing and Subscribing is equally as simple\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo demonstrate, first of all you need a **Subscriber**. You can either create one yourself in a Python module (as a subclass of a **wampy** ``Client``) or use the example ``Client`` already for you in ``docs.examples.services``.\n\nHere we use the said example service, but all a **Subscriber** is is a **wampy** ``Client`` with a method decorated by ``subscribe``. Take a look and see for yourself in the examples_.\n\nLet's start up that example service.\n\n::\n\n    $ wampy run docs.examples.services:SubscribingService --config ./wampy/testing/configs/crossbar.json\n\nNow we have a service running that subscribes to the topic \"foo\".\n\nIn another terminal, with a **wampy** virtualenv, you can create a **Publisher** - which is no different to any other **wampy** Client.\n\n::\n\n    In [1]: from wampy.peers import Client, Crossbar\n\n    In [2]: with Client(router=Crossbar()) as client:\n                result = client.publish(topic=\"foo\", message=\"spam\")\n\nHopefully you'll see any message you send printed to the screen where the example service is running. You'll also see the meta data that **wampy** chooses to send.\n\nSee `ReadTheDocs`_ for more detailed documentation.\n\n\nRunning the tests\n~~~~~~~~~~~~~~~~~\n\n::\n\n    $ pip install --editable .[dev]\n    $ py.test ./test -v\n\n\nBuild the docs\n~~~~~~~~~~~~~~\n\n::\n\n    $ pip install -r rtd_requirements.txt\n    $ sphinx-build -E -b html ./docs/ ./docs/_build/\n\nIf you like this project, then Thank You, and you're welcome to get involved.\n\n.. _Crossbar.io docs: http://crossbar.io/docs/Quick-Start/\n.. _ReadTheDocs: http://wampy.readthedocs.io/en/latest/\n.. _WAMP Protocol: http://wamp-proto.org/\n.. _examples: https://github.com/noisyboiler/wampy/blob/master/docs/examples/services.py#L26\n.. _autobahn: http://autobahn.ws/python/\n.. _nameko: https://github.com/nameko\n.. _nameko_wamp: https://github.com/noisyboiler/nameko-wamp\n.. _Twisted: https://twistedmatrix.com/trac/\n.. _WAMP: http://wamp-proto.org/static/rfc/draft-oberstet-hybi-crossbar-wamp.html\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/noisyboiler/wampy",
    "keywords": "WAMP RPC",
    "license": "GNU GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wampy",
    "platform": "",
    "project_url": "https://pypi.org/project/wampy/",
    "release_url": "https://pypi.org/project/wampy/0.9.7/",
    "requires_dist": [
      "guzzle-sphinx-theme; extra == 'docs'",
      "Sphinx (==1.4.5); extra == 'docs'",
      "flake8; extra == 'dev'",
      "colorlog; extra == 'dev'",
      "pytest-capturelog (==0.7); extra == 'dev'",
      "pytest (==2.9.1); extra == 'dev'",
      "mock (==1.3.0); extra == 'dev'",
      "pytest (==3.1.3); extra == 'dev'",
      "autobahn (==0.17.2); extra == 'dev'",
      "crossbar (==0.15.0); extra == 'dev'",
      "six (==1.10.0)",
      "eventlet (==0.21.0)"
    ],
    "requires_python": "",
    "summary": "WAMP RPC and Pub/Sub for python apps and microservices",
    "version": "0.9.7"
  },
  "releases": {
    "0.9.0": [],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "aa2f89684fb43dd7c424ce052b381aec",
          "sha256": "1d9e9afdcd7fad8e1b30cf6717d43e0e003e7f84cdaab67563885d5811d97bad"
        },
        "downloads": 0,
        "filename": "wampy-0.9.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa2f89684fb43dd7c424ce052b381aec",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 50856,
        "upload_time": "2017-04-17T19:26:09",
        "url": "https://files.pythonhosted.org/packages/1f/95/464cc3d659dc0799f14311620b171416a4f6bccf8b992d5c043babd29073/wampy-0.9.1-py2-none-any.whl"
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fd672b47c8b87d5d5a16b3f495b55a74",
          "sha256": "4fcdcce09115476a0d1d2c248d2821705be48e01fba6941d6347014737eea092"
        },
        "downloads": 0,
        "filename": "wampy-0.9.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd672b47c8b87d5d5a16b3f495b55a74",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 50774,
        "upload_time": "2017-04-18T20:44:00",
        "url": "https://files.pythonhosted.org/packages/9e/95/4814e73f89a2751935c53590d31d0351fc2f40b987689cd8a30e4a3b4926/wampy-0.9.2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "18ad095a58c63b28ed7903bbe137ce40",
          "sha256": "59ed5f0a993a2c6418043d033973bc50366d5965d10025db74f33d87ba08765a"
        },
        "downloads": 0,
        "filename": "wampy-0.9.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18ad095a58c63b28ed7903bbe137ce40",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 50778,
        "upload_time": "2017-04-18T21:27:53",
        "url": "https://files.pythonhosted.org/packages/ab/7c/f5b97befcdc3da7250556217dcc53abb7c6db517bb3666a12d0c91bd34d9/wampy-0.9.2-py2.py3-none-any.whl"
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a923a710ed164fb0fe264399a0a7caab",
          "sha256": "2ca8212b608e33999cb388922ffc2ae0ca4a24acd07c8f17b3db65a2c3063d20"
        },
        "downloads": 0,
        "filename": "wampy-0.9.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "a923a710ed164fb0fe264399a0a7caab",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 51994,
        "upload_time": "2017-04-30T18:50:03",
        "url": "https://files.pythonhosted.org/packages/f2/08/f4682fc5385da5c4420f06aeddca2f98cd8069a9406df246850b4866f6e8/wampy-0.9.3-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3924258c1383e590de4a97b8b21c7d8b",
          "sha256": "b1c9c109346c6aa2b5a26faf0ec40a0edd21b4a89c6d669215c744d135b6c14f"
        },
        "downloads": 0,
        "filename": "wampy-0.9.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3924258c1383e590de4a97b8b21c7d8b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 51997,
        "upload_time": "2017-04-23T09:12:58",
        "url": "https://files.pythonhosted.org/packages/1a/b9/1785eb94a73e2f37fb892c97b86e0001f1bcb82446c1b44caf72c59e06be/wampy-0.9.3-py2.py3-none-any.whl"
      }
    ],
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "71368db58ee400aff2d269f27b81cbf6",
          "sha256": "0844de64f322e15ae442e478aed3dda695e2a2b19f4d3da18f5de279ca3901f2"
        },
        "downloads": 0,
        "filename": "wampy-0.9.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71368db58ee400aff2d269f27b81cbf6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 48080,
        "upload_time": "2017-05-07T17:58:23",
        "url": "https://files.pythonhosted.org/packages/ac/57/13ad1559879260414c4c99c5ff0e81c62785c07c58a34c6ce4a806cd438a/wampy-0.9.4-py2.py3-none-any.whl"
      }
    ],
    "0.9.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "274b952773c86d25c54c5f521293ea66",
          "sha256": "5353eb36cf995b75bf47c7acd73cb043d1e99aa7d590729fae163be6f4e4fbcb"
        },
        "downloads": 0,
        "filename": "wampy-0.9.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "274b952773c86d25c54c5f521293ea66",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 54361,
        "upload_time": "2017-06-29T19:58:59",
        "url": "https://files.pythonhosted.org/packages/a1/1e/dec8acf65df2c1a9a02ec29cf5f86e91317e4c8eb837c9812878bc66e297/wampy-0.9.5-py2.py3-none-any.whl"
      }
    ],
    "0.9.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3f95603cf2df293f38ec33619f3f51dd",
          "sha256": "98633679195c533202102227d790c6118f438f989e9dd5185329ceba86016eee"
        },
        "downloads": 0,
        "filename": "wampy-0.9.6-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f95603cf2df293f38ec33619f3f51dd",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 55000,
        "upload_time": "2017-07-13T08:55:47",
        "url": "https://files.pythonhosted.org/packages/fe/13/ee23299e0c12688e77449bca41ded1d250d937394188f360ae37ab0dcf9b/wampy-0.9.6-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6f906e86c81d73c37c0d308ccb17287f",
          "sha256": "eda9829fcd7181588461d2748250ec4a05bfc615c5cdbe55adf48ea873f52ebf"
        },
        "downloads": 0,
        "filename": "wampy-0.9.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f906e86c81d73c37c0d308ccb17287f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 55003,
        "upload_time": "2017-07-13T08:32:46",
        "url": "https://files.pythonhosted.org/packages/c6/59/9b5e5fe456a6e3c19dccbda4a582ad414e3f75231eb9d09981a7cb28f43a/wampy-0.9.6-py2.py3-none-any.whl"
      }
    ],
    "0.9.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d8c22433c67e47f849c89aaf5b5e345b",
          "sha256": "44ce206f7fcbeaba41d0b99b027372e69db6fdb2abe599eea5eec3a685c89121"
        },
        "downloads": 0,
        "filename": "wampy-0.9.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d8c22433c67e47f849c89aaf5b5e345b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 60770,
        "upload_time": "2017-08-24T11:42:45",
        "url": "https://files.pythonhosted.org/packages/59/60/e33d41515cd0a89342815e1ddb7d3eaa86249a305dec4cff7546642ee291/wampy-0.9.7-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d8c22433c67e47f849c89aaf5b5e345b",
        "sha256": "44ce206f7fcbeaba41d0b99b027372e69db6fdb2abe599eea5eec3a685c89121"
      },
      "downloads": 0,
      "filename": "wampy-0.9.7-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d8c22433c67e47f849c89aaf5b5e345b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 60770,
      "upload_time": "2017-08-24T11:42:45",
      "url": "https://files.pythonhosted.org/packages/59/60/e33d41515cd0a89342815e1ddb7d3eaa86249a305dec4cff7546642ee291/wampy-0.9.7-py2.py3-none-any.whl"
    }
  ]
}