{
  "info": {
    "author": "Lex Scarisbrick",
    "author_email": "lex@scarisbrick.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing",
      "Topic :: Software Development :: Testing :: Traffic Generation"
    ],
    "description": "Spoof\n=====\n\nOn-demand HTTP server for use in test environments where mocking underlying calls isn't an option or where it's necessary to have an actual HTTP server listening on a socket (e.g. testing IPv6 connectivity).  Multiple HTTP servers can be run concurrently, and by default the port number is the next available unused port.\n\nCompatibility\n~~~~~~~~~~~~~\n\nSpoof was tested with the following versions of Python (2.6.x and 3.3.x omitted due to SSL compatibility issues):\n\n-  2.7.13\n-  3.4.6\n-  3.5.3\n-  3.6.1\n\nInstallation\n~~~~~~~~~~~~\n\nInstall from source:\n\n::\n\n  python setup.py install\n\nInstall from PyPI:\n\n::\n\n  pip install spoof\n\nExample usage\n-------------\n\n.. code:: python\n\n  import unittest\n  import spoof\n  import thing\n\n  class TestThing(unittest.TestCase):\n    httpd = None\n    httpd6 = None\n\n    @classmethod\n    def setUpClass(cls):\n      # X509 certificates can be expensive to generate, so it should be done\n      # infrequently.  Also, creating a new HTTP server instance with a new\n      # port number for each and every test can starve a system of available\n      # TCP/IP ports.  Because of this, creating an `HTTPServer` instance\n      # should also be done infrequently, unless the port number is static.\n      sslContext = spoof.SSLContext.selfSigned()\n      cls.httpd = spoof.HTTPServer(sslContext=sslContext)\n      cls.httpd.start()\n      # IPv6-only, if needed; `HTTPServer` also accepts IPv6 addresses\n      cls.httpd6 = spoof.HTTPServer6(sslContext=sslContext)\n      cls.httpd6.start()\n\n    @classmethod\n    def tearDownClass(cls):\n      cls.httpd.stop()\n      cls.httpd6.stop()\n      cls.httpd = None\n      cls.httpd6 = None\n\n    def setUp(self):\n      # Calling `reset()` suffices to sanitize the HTTP server environment.\n      self.httpd.reset()\n      self.httpd.debug = False\n      self.thing = thing.Thing(self.httpd.address, self.httpd.port)\n      # or\n      self.altThing = thing.AltThing(self.httpd.url)\n\n    def tearDown(self):\n      self.thing = None\n      self.altThing = None\n\n    def test_thingUsingSpoof(self):\n      response1 = [200, [('Content-Type', 'application/json')], '{\"id\": 1111}']\n      response2 = [200, [('Content-Type', 'application/json')], '{\"id\": 2222}']\n      self.httpd.queueResponse(response1)\n      self.httpd.queueResponse(response2)\n      # HTTP debug logging, if needed\n      self.httpd.debug = True\n      self.thing.requiringTwoJSONresponses()\n      lastRequest = self.httpd.requests[-1]\n      expectedContent = '{\"action\": \"rename\", \"old\": 1111, \"new\": 2222}'\n      self.assertEqual(expectedContent, lastRequest.content)\n\nSquelching SSL warnings\n-----------------------\n\nSome libraries like\n`Requests <http://docs.python-requests.org/en/master/>`__ will complain\nloudly or refuse to connect to HTTP servers with a self-signed SSL\ncertificate. One way to work around this is to monkeypatch the requests\nlibrary in the testing code. For example:\n\n.. code:: python\n\n  import requests\n\n  certVerify = requests.adapters.HTTPAdapter.cert_verify\n  def certNoVerify(self, conn, url, verify, cert):\n    return certVerify(self, conn, url, False, cert)\n  requests.adapters.HTTPAdapter.cert_verify = certNoVerify\n  requests.packages.urllib3.disable_warnings()\n\nAnother common case is libraries that leverage ``ssl`` directly. One way\nto work around this is to globally set the default context to\nunverified. For example:\n\n.. code:: python\n\n  import ssl\n\n  try:\n    createUnverifiedHttpsContext = ssl._create_unverified_context\n  except AttributeError:\n    # ignore if ssl context not verified by default\n    pass\n  else:\n    ssl._create_default_https_context = createUnverifiedHttpsContext\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/lexsca/spoof.git",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spoof",
    "platform": "",
    "project_url": "https://pypi.org/project/spoof/",
    "release_url": "https://pypi.org/project/spoof/1.0.5/",
    "requires_python": "",
    "summary": "HTTP server for testing environments",
    "version": "1.0.5"
  },
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a9127c3113d4ea71c54806dd5f1ea69f",
          "sha256": "fe4d5e66d2fb628a2bf061552d663d7f42c3d71959f2336254df73d222b5d327"
        },
        "downloads": 0,
        "filename": "spoof-1.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9127c3113d4ea71c54806dd5f1ea69f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7196,
        "upload_time": "2017-04-10T14:46:51",
        "url": "https://files.pythonhosted.org/packages/f7/ed/a4be1e0cb75bd726b751941c485cc48cde0e3d28a39b196b5533df76f5ce/spoof-1.0.3-py2.py3-none-any.whl"
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "30448e44faa6793dada7eca72723070a",
          "sha256": "845fe1af4852cb2fdc3a9a5d58979f3636edcd4989cff09d8cd6aa13816896c6"
        },
        "downloads": 0,
        "filename": "spoof-1.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "30448e44faa6793dada7eca72723070a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7196,
        "upload_time": "2017-04-10T14:48:58",
        "url": "https://files.pythonhosted.org/packages/c7/72/55992c1924b9b2fb9d4a085d070b3249e5f766fecb878ad04686af0675b2/spoof-1.0.4-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9f09658825f0de94e8300080605dc921",
          "sha256": "d27f4068f520512cd20bac682fa520b26ce8536d4e3181af66f78526380c7409"
        },
        "downloads": 0,
        "filename": "spoof-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9f09658825f0de94e8300080605dc921",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6277,
        "upload_time": "2017-04-10T14:48:59",
        "url": "https://files.pythonhosted.org/packages/97/91/86a6468972b26622a64613ae1c60fb463a812dc3dc4fd7b03b72ba2ec3c2/spoof-1.0.4.tar.gz"
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c98582edd238a21e84b8a993514a219b",
          "sha256": "f18810236ba705bf064e280891e6c43f6470a43a49b55ad9f82c757fbe3555c0"
        },
        "downloads": 0,
        "filename": "spoof-1.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c98582edd238a21e84b8a993514a219b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10606,
        "upload_time": "2017-04-23T18:58:47",
        "url": "https://files.pythonhosted.org/packages/35/6b/5a64b44b08bd0e40700f9fc1c2da5b796c97602143cc3c69e8fd57c26355/spoof-1.0.5-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "48d8da4656a519bbd837ec5767cd42a6",
          "sha256": "91f25352e75a0b819ae5e5a45eeb53637a627d388412ff6db1e5b988a834649f"
        },
        "downloads": 0,
        "filename": "spoof-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "48d8da4656a519bbd837ec5767cd42a6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7704,
        "upload_time": "2017-04-23T18:58:52",
        "url": "https://files.pythonhosted.org/packages/b2/83/35eb68fd89b6b04d18ffa049e16e410c5631fad888045bc5ce32824dc635/spoof-1.0.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c98582edd238a21e84b8a993514a219b",
        "sha256": "f18810236ba705bf064e280891e6c43f6470a43a49b55ad9f82c757fbe3555c0"
      },
      "downloads": 0,
      "filename": "spoof-1.0.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c98582edd238a21e84b8a993514a219b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 10606,
      "upload_time": "2017-04-23T18:58:47",
      "url": "https://files.pythonhosted.org/packages/35/6b/5a64b44b08bd0e40700f9fc1c2da5b796c97602143cc3c69e8fd57c26355/spoof-1.0.5-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "48d8da4656a519bbd837ec5767cd42a6",
        "sha256": "91f25352e75a0b819ae5e5a45eeb53637a627d388412ff6db1e5b988a834649f"
      },
      "downloads": 0,
      "filename": "spoof-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "48d8da4656a519bbd837ec5767cd42a6",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7704,
      "upload_time": "2017-04-23T18:58:52",
      "url": "https://files.pythonhosted.org/packages/b2/83/35eb68fd89b6b04d18ffa049e16e410c5631fad888045bc5ce32824dc635/spoof-1.0.5.tar.gz"
    }
  ]
}