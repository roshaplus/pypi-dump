{
  "info": {
    "author": "Bradley M. Froehle",
    "author_email": "brad.froehle@gmail.com",
    "bugtrack_url": "https://github.com/bfroehle/pymumps/issues",
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "PyMUMPS: A parallel sparse direct solver\r\n========================================\r\n\r\nRequirements\r\n------------\r\n\r\n-  `MUMPS <http://graal.ens-lyon.fr/MUMPS/>`_\r\n-  `mpi4py <https://code.google.com/p/mpi4py/>`_\r\n\r\nGetting Started\r\n---------------\r\n\r\nInstall using ``python setup.py install`` or run from the local\r\ncheckout.\r\n\r\nExamples\r\n--------\r\n\r\nCentralized input & output. The sparse matrix and right hand side are\r\ninput only on the rank 0 process. The system is solved using all\r\navailable processes and the result is available on the rank 0 process.\r\n\r\n::\r\n\r\n    from mumps import DMumpsContext\r\n    ctx = DMumpsContext()\r\n    if ctx.myid == 0:\r\n        ctx.set_centralized_sparse(A)\r\n        x = b.copy()\r\n        ctx.set_rhs(x) # Modified in place\r\n    ctx.run(job=6) # Analysis + Factorization + Solve\r\n    ctx.destroy() # Cleanup\r\n\r\nRe-use symbolic or numeric factorizations.\r\n\r\n::\r\n\r\n    from mumps import DMumpsContext\r\n    ctx = DMumpsContext()\r\n    if ctx.myid == 0:\r\n        ctx.set_centralized_assembled_rows_cols(A.row+1, A.col+1) # 1-based\r\n    ctx.run(job=1) # Analysis\r\n\r\n    if ctx.myid == 0:\r\n        ctx.set_centralized_assembled_values(A.data)\r\n    ctx.run(job=2) # Factorization\r\n\r\n    if ctx.myid == 0:\r\n        x = b1.copy()\r\n        ctx.set_rhs(x)\r\n    ctx.run(job=3) # Solve\r\n\r\n    # Reuse factorizations by running `job=3` with new right hand sides\r\n    # or analyses by supplying new values and running `job=2` to repeat\r\n    # the factorization process.",
    "docs_url": null,
    "download_url": "https://github.com/bfroehle/pymumps/tags",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/bfroehle/pymumps",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyMUMPS",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/PyMUMPS/",
    "release_url": "https://pypi.org/project/PyMUMPS/0.1/",
    "requires_python": null,
    "summary": "Python bindings for MUMPS, a parallel sparse direct solver",
    "version": "0.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f64dd26c6fd37af15809a3faef9479ba",
          "sha256": "d2022b4863a29e9dc0e49ab751404f36a8b6d3b53a060dcd1ae093ed51ed3ada"
        },
        "downloads": 3362,
        "filename": "PyMUMPS-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f64dd26c6fd37af15809a3faef9479ba",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 96955,
        "upload_time": "2013-04-08T20:38:43",
        "url": "https://files.pythonhosted.org/packages/ac/27/773ea19219ed0fff64db06f415e6606414b09493f1525c5a73941d0517dd/PyMUMPS-0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f64dd26c6fd37af15809a3faef9479ba",
        "sha256": "d2022b4863a29e9dc0e49ab751404f36a8b6d3b53a060dcd1ae093ed51ed3ada"
      },
      "downloads": 3362,
      "filename": "PyMUMPS-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f64dd26c6fd37af15809a3faef9479ba",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 96955,
      "upload_time": "2013-04-08T20:38:43",
      "url": "https://files.pythonhosted.org/packages/ac/27/773ea19219ed0fff64db06f415e6606414b09493f1525c5a73941d0517dd/PyMUMPS-0.1.tar.gz"
    }
  ]
}