{
  "info": {
    "author": "Jarrod Kahn",
    "author_email": "jarrod.kahn+wincast@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# wincast\n\nA Real Time Win Forecasting System for the NFL\n\nNote: This package is still under development.\nFor now, you can play around with it via the\ncommand line.\n\n## Usage\n\nThe model will predict whether or not the offense team will win.\nAn output of `1` means the model is forecasting a win for the offense\nteam. A `0` means the model is forecast a loss (or tie) for the\noffense team.\n\n\n```sh\n$ pip install -r requirements.txt\n$ python\n>>> import numpy as np\n>>> from wincast.train import Trainer\n>>>\n>>> model = Trainer()\n>>> model.train()\n>>> # Now you can make predictions. Input features are as follows:\n>>> # (quarter, minute, second, points offense, points defense,\n>>> #     t.o.l. offense, t.o.l. defense, down, yards to go,\n>>> #     yards from own goal)\n>>>\n>>> # Here is an example of a call to predict, where the model\n>>> # forecasts a win for the team on offense:\n>>> model.predict([[4, 0, 5, 20, 7, 3, 2, 1, 2, 20]])\narray([[1]], dtype=int32)\n\n>>> # Get the probability of each class 0/1:\n>>> model.predict_proba(np.array([[4, 0, 5, 20, 7, 3, 2, 1, 2, 20]]))\narray([[ 0.00880867,  0.99119133]], dtype=float32)\n```\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/kahnjw/wincast",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wincast",
    "platform": "",
    "project_url": "https://pypi.org/project/wincast/",
    "release_url": "https://pypi.org/project/wincast/0.0.7/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "",
    "version": "0.0.7"
  },
  "releases": {
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "431d36fa8383fb64ef8b930793d33653",
          "sha256": "4ea019ea69ba7b48f0722c74710326a7d35fe79eee2d43a384882ac381076c0d"
        },
        "downloads": -1,
        "filename": "wincast-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "431d36fa8383fb64ef8b930793d33653",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25138,
        "upload_time": "2017-12-21T22:48:03",
        "url": "https://files.pythonhosted.org/packages/d5/f9/60a7c1154c5fc7a190a193a776c214d175e3055fd2f05f73ab12f1dd4c5a/wincast-0.0.7.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "431d36fa8383fb64ef8b930793d33653",
        "sha256": "4ea019ea69ba7b48f0722c74710326a7d35fe79eee2d43a384882ac381076c0d"
      },
      "downloads": -1,
      "filename": "wincast-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "431d36fa8383fb64ef8b930793d33653",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 25138,
      "upload_time": "2017-12-21T22:48:03",
      "url": "https://files.pythonhosted.org/packages/d5/f9/60a7c1154c5fc7a190a193a776c214d175e3055fd2f05f73ab12f1dd4c5a/wincast-0.0.7.tar.gz"
    }
  ]
}