{
  "info": {
    "author": "Roman Kutlak",
    "author_email": "kutlak.roman@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development :: Libraries",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "Current Status\n==============\nThis is just a starting point - an alpha version - mainly a wrapper\naround SimpleNLG_.\n\nAlthough it is possible to go from first order logic to text,\nthere is no sophistication in how things are processed.\nThe library is still missing basics like aggregation or referring expression generation.\n\n\nIntro\n=====\n\nNLGlib is a library for natural language generation (NLG) written in Python.\nIt seeks to fill a gap in the NLG field. There are currently no off-the-shelf\nlibraries that one could take and incorporate into other projects.\nThe aim of this library is to be useful for general projects that would like\nto add a bit of text generation to their capabilities.\n\n\nAudience\n========\n\nThe library should be usable by programmers with no prior linguistic knowledge.\nGiven that the aim of the library is language generation,\nsome linguistic knowledge is necessary but you should be able to pick it up\nfrom the examples.\n\n\nScope\n=====\n\nThe aim of the library is to create a base for NLG system starting from content\nselection all the way to realisation. The library will cover document structuring\ntools, lexicalisation, referring expression generation and aggregation.\nRealisation will be done using other realisation libraries (SimpleNLG_ or pynlg_).\n\n\nHistory\n=======\n\nNLGlib started as a part of the EPSRC project\nScrutable Autonomous Systems (SAsSy): www.scrutable-systems.org\nWhen the project finished, the code was moved to this repository to create\na stand-alone re-usable library.\n\n\nExample\n=======\n\n.. code-block:: python\n\n    from nlglib.realisation.simplenlg.realisation import Realiser\n    from nlglib.microplanning import *\n\n    realise_en = Realiser(host='roman.kutlak.info', port=40000)\n    realise_es = Realiser(host='roman.kutlak.info', port=40001)\n\n\n    def main():\n        p = Clause(\"Mar\u00eda\", \"perseguir\", \"un mono\")\n        p['TENSE'] = 'PAST'\n        # expected = 'Mar\u00eda persigue un mono.'\n        print(realise_es(p))\n        p = Clause(NP(\"la\", \"r\u00e1pida\", \"corredora\"), VP(\"perseguir\"), NP(\"un\", \"mono\"))\n        subject = NP(\"la\", \"corredora\")\n        objekt = NP(\"un\", \"mono\")\n        verb = VP(\"perseguir\")\n        subject.premodifiers.append(\"r\u00e1pida\")\n        p.subject = subject\n        p.predicate = verb\n        p.object = objekt\n        # expected = 'La r\u00e1pida corredora persigue un mono.'\n        print(realise_es(p))\n        p = Clause(NP('this', 'example'), VP('show', 'how cool simplenlg is'))\n        # expected = This example shows how cool simplenlg is.\n        print(realise_en(p))\n\n\n    if __name__ == '__main__':\n        main()\n\n\n.. _SimpleNLG: https://github.com/simplenlg/simplenlg\n.. _pynlg: https://github.com/mapado/pynlg",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/roman-kutlak/nlglib",
    "keywords": "natural language generation,NLG,text generation,nlglib,library",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nlglib",
    "platform": "",
    "project_url": "https://pypi.org/project/nlglib/",
    "release_url": "https://pypi.org/project/nlglib/0.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Natural Language Generation library for Python",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "59d02e24201ac51be4f548fde646cf8a",
          "sha256": "de502aabbd3d8fd020868f7e2340aec88f953cea327e5efeaf909773bf14213c"
        },
        "downloads": -1,
        "filename": "nlglib-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "59d02e24201ac51be4f548fde646cf8a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 49401,
        "upload_time": "2017-12-29T22:40:05",
        "url": "https://files.pythonhosted.org/packages/04/65/e831b88f7d9ab6be4508d27eb5db361120c08e706d28ef2b840d48da66dd/nlglib-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "59d02e24201ac51be4f548fde646cf8a",
        "sha256": "de502aabbd3d8fd020868f7e2340aec88f953cea327e5efeaf909773bf14213c"
      },
      "downloads": -1,
      "filename": "nlglib-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "59d02e24201ac51be4f548fde646cf8a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 49401,
      "upload_time": "2017-12-29T22:40:05",
      "url": "https://files.pythonhosted.org/packages/04/65/e831b88f7d9ab6be4508d27eb5db361120c08e706d28ef2b840d48da66dd/nlglib-0.1.0.tar.gz"
    }
  ]
}