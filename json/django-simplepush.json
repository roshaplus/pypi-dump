{
  "info": {
    "author": "Subhajeet Dey",
    "author_email": "subhajeet2107@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "#Django-Simplepush\n------\n\nA plugable django app to send chrome/firefox push notifications through GCM with Notification icon support.\na brief overview can be found here: [Google WebPushNotications](https://developers.google.com/web/fundamentals/getting-started/codelabs/push-notifications/)\nThis app uses latest ServiceWorkers so push notifications may not be supported in your browser, please check here: [Can I Use Web Pushnotifactions](http://caniuse.com/#search=notification)\nNotice that Web Pushnotifcations are a work in progress so all features might not be supported.\n[Notification Spec](https://notifications.spec.whatwg.org/)\n\n##Installation:\nYou can install it easily from pypi by running\n\tpip install django-simplepush\n\nAfter installing the package, add ``simplepush`` in in your\n``INSTALLED_APPS`` settings\n\n\tINSTALLED_APPS = (\n\t    ...\n\t    'simplepush',\n\t)\n\nIf you would like to send notification to Google Chrome Users, you need\nto add a ``SIMPLEPUSH_SETTINGS`` entry with the **Google Cloud Messanging\nID and Key** Like following:\n\n    SIMPLEPUSH_SETTINGS = {\n        \"GCM_ID\": \"Your GCM ID\",\n        \"GCM_KEY\":\"Your GCM KEY\"\n    }\n\n**Replace ``\"Your GCM ID\"`` and ``\"Your GCM KEY\"`` with your Google\nCloud Messanging ID and Key**\nTo know how to obtain GCM ID and Key please see this [Documentation from Google Developers](https://developers.google.com/web/fundamentals/getting-started/push-notifications/step-04?hl=en) and the [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/API/Push_API/Using_the_Push_API#Setting_up_Google_Cloud_Messaging)\n\nThen include ``simplepush`` in the ``urls.py``\n    urlpatterns =\n\n        url(r'^simplepush/', include('simplepush.urls'))\n    ]\n\nThen run Migration by **``python manage.py migrate``**\n\n##Usage:\n\n###Adding Simplepush in Django Template\n---------------------------------------\n\nSo in html template, you need to load ``simplepush_tags`` custom template tag by following: \nIf you are using built in templating engine, add ``{% load simplepush_tags %}`` in the template.Remember to load static files first with ``{% load static %}``. The service worker wont register if you did not put ``{% simplepush_html %}`` tag inside <head></head> Tags. If you are using jinja or other templating engine, you can manually add the html header and button and other information such as:\n\n```html\n\t<script id=\"simplepush-js\" type=\"text/javascript\" src=\"/static/simplepush/simplepush.js\"></script>\n\t<script id=\"service-worker-js\" type=\"text/javascript\" src=\"/static/simplepush/simplepush_serviceworker.js\"></script>\n\t<link rel=\"manifest\" href=\"/simplepush/manifest\">\n\n```\nNext, inside the ``<head></head>`` tag add ``{% simplepush_html %}``. Like following\n```html\n\t<head>\n\t  {% simplepush_html %}\n\t</head>\n```\n\nNext, inside the ``<body></body>`` tag, insert ``{% simplepush_html_button %}``\nwhere you would like to see the **Subscribe to Push Messaging** Button.\nLike following\n```html\n    <body>\n      <p> Hello World! </p>\n      {% simplepush_html_button %}\n    </body>\n```\n\n    **Note:** The Push Notification Button will show only if the user is logged in.\nOr for jinja templates:\n\n```html\n\t<button id=\"simplepush-subscribe-button\" data-url=\"/simplepush/save_information\">Subscribe to Push Messaging</button>\n```\n\n###Sending Web Push Notification\n--------------------------------\nA Web Push generally have a header and body. According to the W3C Specification, the data should be encrypted in transmission. the data is addressed as payload generally. Also a TTL header should be included indicating how much time the web push server store the data if the user is not online.\n\nYou can send push notification as:\n\n```python\n\tfrom simplepush import send_user_notification\n\tpayload = {\"head\":\"Hello World\", \"body\":\"Testing Push Notification\", \"icon\":\"http://loremflickr.com/320/240\", \"link\":\"https://github.com/subhajeet2107/django-simplepush\"}\n\tsend_user_notification(user=user, payload=payload, ttl=1000)\n\n\t\"\"\"\n\tThe user in this is subscribed user which will get notification to all of his subscribed browser, a user can have multiple subscriptions through various browsers or devices.\n\tThe link key in payload specifies the url which can be opened when clicking on Notification\n\t\"\"\"\n\n```",
    "docs_url": null,
    "download_url": "https://github.com/subhajeet2107/django-simplepush/archive/master.zip",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/subhajeet2107/django-simplepush",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-simplepush",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-simplepush/",
    "release_url": "https://pypi.org/project/django-simplepush/0.11/",
    "requires_python": null,
    "summary": "A webpush notifications plugable app for Django",
    "version": "0.11"
  },
  "releases": {
    "0.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "84bc969b28f3c5644e27bff452ea1ae2",
          "sha256": "365788db80aa10ab89cfbc5462822393faa392d1ded02cb984ece0eb4284fa90"
        },
        "downloads": 9,
        "filename": "django-simplepush-0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "84bc969b28f3c5644e27bff452ea1ae2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5547,
        "upload_time": "2017-01-14T15:55:09",
        "url": "https://files.pythonhosted.org/packages/b9/b9/a0d61a1c710feaeab590e5e98ca35ddcffbd2e66b0d9a1f628b5579ceea5/django-simplepush-0.10.tar.gz"
      }
    ],
    "0.11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "81ec3c3394d9535b5922737adc6da6c4",
          "sha256": "9e4cf7fae5ffee3f3c7aad71a26f16860fa8b4d7bb251e98a045ce4fa7680af9"
        },
        "downloads": 12,
        "filename": "django-simplepush-0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "81ec3c3394d9535b5922737adc6da6c4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10772,
        "upload_time": "2017-01-14T16:22:45",
        "url": "https://files.pythonhosted.org/packages/0b/76/27bb9601d0100b6d22f4d8cb03f1fc8b66d11e6d272820b92897bd63afff/django-simplepush-0.11.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "81ec3c3394d9535b5922737adc6da6c4",
        "sha256": "9e4cf7fae5ffee3f3c7aad71a26f16860fa8b4d7bb251e98a045ce4fa7680af9"
      },
      "downloads": 12,
      "filename": "django-simplepush-0.11.tar.gz",
      "has_sig": false,
      "md5_digest": "81ec3c3394d9535b5922737adc6da6c4",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 10772,
      "upload_time": "2017-01-14T16:22:45",
      "url": "https://files.pythonhosted.org/packages/0b/76/27bb9601d0100b6d22f4d8cb03f1fc8b66d11e6d272820b92897bd63afff/django-simplepush-0.11.tar.gz"
    }
  ]
}