{
  "info": {
    "author": "Stephen Reid McLaughlin",
    "author_email": "stephen.mclaughlin@utexas.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha"
    ],
    "description": "### Mac Installation\n\n\nInstall Audio Tagging Toolkit using pip:\n\n```bash\npip install git+git://github.com/hipstas/audio-tagging-toolkit.git\n```\n\nNext we will install **`ffmpeg`**, a command-line tool for audio and video encoding. First we will install several media codecs and command-line tools, then we will download ffmpeg's source code and compile it before installing. If you've previously installed ffmpeg using Homebrew, uninstall that copy before we begin:\n\n```bash\nbrew uninstall ffmpeg\n```\n\nEnter the following commands one at a time; note that the first and fourth lines are very long. After the last command you will be prompted to enter your password.\n\n```\nbrew install automake fdk-aac git lame libass libtool libvorbis libvpx opus sdl shtool texi2html theora wget x264 xvid yasm\n\ngit clone http://source.ffmpeg.org/git/ffmpeg.git ffmpeg\n\ncd ffmpeg\n\n./configure  --prefix=/usr/local --enable-gpl --enable-nonfree --enable-libass --enable-libfdk-aac --enable-libfreetype --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libxvid\n\nmake && sudo make install\n```\n\n\n\n### Install Ubuntu dependencies:\n\n```bash\napt-get update -y && apt-get upgrade -y\nsudo apt-get install python-numpy python-scipy python-matplotlib ipython ipython-notebook python-pandas python-sympy python-nose\nsudo apt-get -y install swig\nsudo apt-get -y install libpulse-dev\n\npip install -U pip\npip install virtualenv\n\n#Install FFmpeg with MP3 support (at your own risk):\n\nsudo add-apt-repository -y ppa:mc3man/trusty-media\nsudo apt-get update\nsudo apt-get -y dist-upgrade\nsudo apt-get -y install ffmpeg\n```\n\nNow install Audio Tagging Toolkit using pip:\n\n```bash\npip install git+git://github.com/hipstas/audio-tagging-toolkit.git\n```\n\n\n\n\n\n### Script examples via bash\n\n- Locate applause in single file, with non-applause segments labeled \"Speaker Name\" and a 2-second buffer on either side of each transition:\n\n```bash\ncd /path/to/audio-tagging-toolkit\n\npython FindApplause.py -c -b 2 -l \"Speaker Name\" -i /path/to/audio.mp3\n```\n\n- Batch applause classification with CSV output, default 1-second buffer, and label for non-applause regions:\n\n```bash\ncd /path/to/audio-tagging-toolkit\n\npython FindApplause.py -c -b -l \"Speaker Name\" /path/to/directory/\n```\n\n- Diarize a single file:\n\n```bash\ncd /path/to/audio-tagging-toolkit\n\npython Diarize.py -b -c -i /Users/mclaugh/Desktop/attktest/Creeley-Robert_33_A-Note_Rockdrill-2.mp3\n```\n\n- Batch Diarize:\n\n```bash\ncd /path/to/audio-tagging-toolkit\n\npython Diarize.py -b -c /Users/mclaugh/Desktop/attktest/\n```\n\n- Excerpt a class:\n\n```bash\n\ncd /Users/mclaugh/Dropbox/WGBH_ARLO_Project/audio-tagging-toolkit/\n\nfor f in /Volumes/Turcich-2012/AAPB_Test_Haystack/*_king_gradientboosting.csv; do\nbase=$(basename \"\"\"$f\"\"\" _king_gradientboosting.csv)\npython ExcerptClass.py -i \"\"\"/Volumes/Turcich-2012/AAPB_Test_Haystack/$base.mp3\"\"\" -t \"\"\"$f\"\"\" -e 0 -o \"/Volumes/Turcich-2012/AAPB_excerpt_output/\";\ndone\n\nfor f in /Volumes/Turcich-2012/AAPB_Test_Haystack/*_king_gradientboosting.csv; do\nbase=$(basename \"\"\"$f\"\"\" _king_gradientboosting.csv)\npython ExcerptClass.py -i \"\"\"/Volumes/Turcich-2012/AAPB_Test_Haystack/$base.mp4\"\"\" -t \"\"\"$f\"\"\" -e 0 -o \"/Volumes/Turcich-2012/AAPB_excerpt_output/\";\ndone\n```\n\n- Excerpt from MP4s only:\n\n```bash\ncd /Users/mclaugh/Dropbox/WGBH_ARLO_Project/audio-tagging-toolkit/\n\nfor f in /Volumes/Turcich-2012/AAPB_Test_Haystack/*.mp4; do\nbase=$(basename \"\"\"$f\"\"\" .mp4)\ncommand=\"\"\"python ExcerptClass.py -i \"/Volumes/Turcich-2012/AAPB_Test_Haystack/$base.mp4\" -t \"/Volumes/Turcich-2012/AAPB_Test_Haystack/${base}_king_gradientboosting.csv\" -e 0 -o \"/Volumes/Turcich-2012/AAPB_excerpt_output/\" \"\"\";\necho $command\neval $command;\ndone\n```\n\n- Launch QuickCheck script to rapidly review applause/speaker labels in Sonic Visualiser:\n\n```bash\ncd /path/to/audio-tagging-toolkit\npython QuickCheck.py -a -v -i /path/to/audio/files\n```\n\n- QuickCheck diarization mode:\n\n\n```bash\ncd /path/to/audio-tagging-toolkit\npython QuickCheck.py -d -v -i /path/to/audio/files\n```\n\n- Assign random tags:\n\n```bash\npython RandomTags.py -s 3 -n 3 -e -i /path/to/example.mp3 -o /path/to/output_dir/\n```",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/hipstas/audio-tagging-toolkit",
    "keywords": "audio music speech classification tagging labeling ml supervised",
    "license": "Apache 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "attk",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/attk/",
    "release_url": "https://pypi.org/project/attk/0.0.3/",
    "requires_dist": [],
    "requires_python": null,
    "summary": "Audio Tagging Toolkit: A collection of scripts to expedite audio annotation and classifier training.",
    "version": "0.0.3"
  },
  "releases": {
    "0.0.3": []
  },
  "urls": []
}