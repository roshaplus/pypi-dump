{
  "info": {
    "author": "Nat Comeau",
    "author_email": "ncomeau@gemini.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Nifty\n=====\nA Python Data Reduction Pipeline for the Gemini-North Near-Infrared Integral\nField Spectrometer (NIFS).\n\nThis is a new data reduction python pipeline that uses Astroconda and the Gemini\nIraf Package to reduce NIFS data. It offers a complete data reduction process from\nsorting the data to producing a final flux calibrated and wavelength calibrated\ncombined cube with the full S/N for a science target.\n\nThis pipeline is open source but is not supported by Gemini Observatory.\n\nAny feedback and comments (mbusserolle@gemini.edu) are welcome!\n\nCopyright\n---------\n\nFor more details, please read the LICENSE.\n\n\nHow to Submit Bugs and Requests\n-------------------------------\n\nVery important: **do not submit a Gemini help desk ticket!**.\n\nIf you want to report a problem, use the `Gemini Data Reduction Forum thread <http://drforum.gemini.edu/topic/nifs-python-data-reduction-pipeline/>`\nor create an issue in this repo.\n\nInstallation\n============\n\n1. Install Astroconda. Instructions can be found on Gemini's website `here. <http://www.gemini.edu/node/12665>`\n2. Download the latest release of Nifty from `here.<https://github.com/Nat1405/newer-nifty/releases>`\n3. Unpack the .zip or .tar file.\n4. In a terminal change into the unpacked Nifty directory. When you type \"ls\" you should see\n   several files like \"Nifty.py, nifsSort.py, etc.\". You're ready to go!\n5. TODO(nat): add a way to verify the download with an md5.\n\nYou should see the following directory structure:\n\n|_ Nifty.py\n|_ nifsSort.py\n|_ nifsBaselineCalibration.py\n|_ nifsReduce.py\n|_ nifsMerge.py\n|_ nifsDefs.py\n|____ runtimeData/\n|  |____ h_wave.data\n|  |____ j_wave.data\n|  |____ k_wave.data\n|____ docs/\n|  |____ nifs_pipeline_june_2015.pdf\n|____ extras/\n|  |____ geminiSort.py\n|____ tests/\n   |____ generate_response_curve.py\n   |____ hk.txt\n   |____ nftelluric_modified.cl\n\n\nQuick Start\n-----------\n\nTo launch Nifty with interactive input, type:\n\n.. code-block:: text\n\n   python Nifty.py\n\nNifty will let you select parameters for the data reduction. Press enter to accept\nthe default options.\n\nTo do a full reduction accepting all the defaults, you can either type:\n\n.. code-block:: text\n\n   python Nifty.py -f\n\nor type \"yes\" at the first interactive prompt that asks if you would like to do a\nfull default reduction.\n\nInput\n-----\n\nYou can provide input to Nifty in three ways:\n\n- Interactive input\n- A user_options.json file\n- Command line arguments\n\nTo provide interactive input run Nifty with no command line options by typing:\n\n.. code-block:: text\n\n   python Nifty.py\n\nNote that the data reduction parameters are saved to a new user_options.json file\nat the end of an interactive input session.\n\nTo have Nifty load its parameters from a user_options.json use the -r or -l command line arguments. These arguments are equivalent.\n\n.. code-block:: text\n\n   python Nifty.py -r\n\nor:\n\n.. code-block:: text\n\n   python Nifty.py -l\n\nCommand Line Arguments\n----------------------\n\nNifty supports several command line arguments. Using these with a user_options.json input file\nmakes Nifty integrate well with shell scripts.\n\nNifty may be invoked with the following command line options:\n\n**-l**\n  Load. Load data reduction parameters from a user_options.json file.\n**-r**\n  Repeat. Repeat the last data reduction, loading parameters from a user_options.json file.\n  Equivalent to -l, Load.\n**-f**\n  Full automatic run. Do a full automatic data reduction copying parameters from the included default_input.json.\n\n\n\n\n\n\n\nNote:\n=====\n\nOBJECT AND SKY FRAMES\n\nIf the sorting script does not create a skylist in the object or telluric observation\ndirectories this means that the offsets between sky frames and object frames were smaller\nthan expected. A skylist can be manually created and saved in the appropriate directory, or\nthe limit placed on the offset can be changed. In sort.py the limit set on \"rad\" can be lowered in\nlines 194, 245, and 492 for object sky images and in lines 198, 249, and 495 for telluric sky images.\n\nH-Line Removal\n--------------\n\nThe H-line removal can be done non-interactively, but it is advised that this be performed\ninteractively and using the \"vega_tweak\" method in order to accurately scale the vega spectrum.\nIn the interactive mode for the initial scaling and call to \"telluric\" these are the cursor keys\nand colon commands (from http://iraf.net/irafhelp.php?val=telluric&help=Help+Page):\n\n- ? - print help\n- a - automatic RMS minimization within sample regions\n- c - toggle calibration spectrum display\n- d - toggle data spectrum display\n- e - expand (double) the step for the current selection\n- q - quit\n- r - redraw the graphs\n- s - add or reset sample regions\n- w - window commands (see :/help for additional information)\n- x - graph and select from corrected shifted candidates\n- y - graph and select from corrected scaled candidates\n\n- :help           - print help\n- :shift  [value] - print or reset the current shift\n- :scale  [value] - print or reset the current scale\n- :dshift [value] - print or reset the current shift step\n- :dscale [value] - print or reset the current scale step\n- :offset [value] - print or reset the current offset between spectra\n- :sample [value] - print or reset the sample regions\n- :smooth [value] - print or reset the smoothing box size\n\nTo decrease the scale or shift value, the cursor must be under the spectrum and to increase\nthese values the cursor must be above the spectrum. Occasionally, this will not work in which\ncase the value can be designated with a colon command.\n\nIf using the vega_tweak or other interactive line removal method, the lines can be removed\nin a splot environment (commands found here: http://stsdas.stsci.edu/cgi-bin/gethelp.cgi?splot.hlp).\nThe most useful commands for this are:\n\n- k + (g, l or v)\nMark two continuum points and fit a single line profile. The second key selects the\ntype of profile: g for gaussian, l for lorentzian, and v for voigt. Any other second key\ndefaults to gaussian. The center, continuum at the center, core intensity, integrated flux,\nequivalent width, and FWHMs are printed and saved in the log file. See d for fitting multiple profiles and - to subtract the fit.\n\n- w\nWindow the graph. For further help type ? to the \"window:\" prompt or see help under gtools.\nTo cancel the windowing use a.\n\nIt is necessary to press 'i' before 'q' once the h-lines have been removed in order to save the changes.\n\n\nInteractive Merging\n-------------------\n\nCubes can be shifted using QFits View (this is currently necessary for\nvery faint objects) and then combined using nifsMerge.py by prepending the name of each\nfile with the prefix \"shif\" and saving them in the observation directory (where the reduced science data is stored).\n\nSome Recipes\n------------\n\n1. To perform sorting, calibration data reductions, and science reductions without the telluric correction and without producing a merged cube:\npython Main.py -q users/name/reduction/Raw -t -k -m\n\n2. To perform sorting, calibration data reductions, and science reductions without telluric correction and produce a merged cube:\npython Main.py -q users/name/reduction/Raw -t -k\n\n3. To perform sorting, calibration data reductions, and science reductions without the telluric correction, no flux calibration, and produce a merged cube:\npython Main.py -q users/name/reduction/Raw -f -1\n\n4. To perform sorting, calibration data reductions, and science reductions with the telluric correction (interactively), flux calibration, and produce a merged cube:\npython Main.py -q users/name/reduction/Raw -w\n\n5. To start the script by producing a merged cube (all the science data must already be reduced):\npython Main.py -q users/name/reduction/Raw -s -r -n -t -k\n\n6. To start the script by performing the telluric correction and produce a merged cube (assuming the telluric data and science data have already been reduced)\npython Main.py -q users/name/reduction/Raw -s -r -k -b 8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Nat1405/newer-nifty",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nifty-gemini",
    "platform": "",
    "project_url": "https://pypi.org/project/nifty-gemini/",
    "release_url": "https://pypi.org/project/nifty-gemini/0.1.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Gemini NIFS data reduction pipeline.",
    "version": "0.1.2"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fdf713f729ddd0e7a73eef600e1bc4f9",
          "sha256": "082001f289204e6ebc62ebe88e0a781db73df51d658bee0383f30e028a2d09e7"
        },
        "downloads": 0,
        "filename": "nifty-gemini-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fdf713f729ddd0e7a73eef600e1bc4f9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1821278,
        "upload_time": "2017-08-02T00:31:21",
        "url": "https://files.pythonhosted.org/packages/2f/2f/442d64c738255f0f8f319012cc03bc601a61204fcfcdb446bf08bfbcba81/nifty-gemini-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a254ea34e73e3b3b8ea20756eb1979ef",
          "sha256": "23dcac3c4793fc6331d0f59e22e9dc23ebaea18bd742df38607b21b1ef2c0d60"
        },
        "downloads": 0,
        "filename": "nifty-gemini-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a254ea34e73e3b3b8ea20756eb1979ef",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1821235,
        "upload_time": "2017-08-02T00:45:07",
        "url": "https://files.pythonhosted.org/packages/11/2f/5d05e04e732825c4a14f2f3e59e8b3174437193346ced749f2e658c8449d/nifty-gemini-0.1.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a254ea34e73e3b3b8ea20756eb1979ef",
        "sha256": "23dcac3c4793fc6331d0f59e22e9dc23ebaea18bd742df38607b21b1ef2c0d60"
      },
      "downloads": 0,
      "filename": "nifty-gemini-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a254ea34e73e3b3b8ea20756eb1979ef",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 1821235,
      "upload_time": "2017-08-02T00:45:07",
      "url": "https://files.pythonhosted.org/packages/11/2f/5d05e04e732825c4a14f2f3e59e8b3174437193346ced749f2e658c8449d/nifty-gemini-0.1.2.tar.gz"
    }
  ]
}