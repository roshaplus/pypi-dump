{
  "info": {
    "author": "Felix Meyer-Wolters",
    "author_email": "felix@meyerwolters.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\n# sty\n\n<img src=\"assets/charts.png\" alt=\"charts\" />  \n\n## Description\n\nSimple, intuitive and extensible string styling for your terminal.\n\nSty has no dependencies and consists of ~ 170 LOC (incl. empty lines).\n\n\n## Getting Started\n\n**Install** sty:\n\n```\npip install sty\n```\n\nYou can import sty like this:\n \n```python\nimport sty\n```\n\nHowever, if you need to style a lot of stuff, you might consider importing the \nstyle objects directly, like this:\n\n```python\nfrom sty import fg, bg, ef, rs\n```\n\nStyle all the strings:\n\n```python\nmy_string = fg.blue + bg.li_red + ef.bold + 'Hello world!' + rs.all\n```\n \n<img src=\"assets/helloworld.png\" alt=\"helloworld\" />  \n    \n## Documentation:\n\n#### Italic:\n\n```python\na = ef.italic + 'Italic.' + rs.italic\nb = ef.i + fg.blue + 'Italic.' + rs.i + ' Not italic but blue.' + rs.fg\n\nprint(a, b, sep='\\n')\n```\n\n<img src=\"assets/italic.png\" alt=\"italic\" />  \n\n#### Bold:\n\n```python\na = ef.bold + 'Bold.' + rs.bold\nb = ef.b + 'Bold.' + rs.b + fg.li_yellow + ' Not bold but yellow.' + rs.fg\n\nprint(a, b, sep='\\n')\n```\n\n<img src=\"assets/bold.png\" alt=\"bold\" />  \n\n#### Underline:\n\n```python\na = ef.underline + 'Underlined.' + rs.underline\nb = ef.u + 'Underlined.' + rs.u + fg.green + ' Not underlined but green.' + rs.fg\n\nprint(a, b, sep='\\n')\n```\n\n<img src=\"assets/underline.png\" alt=\"underline\" />  \n\n#### TODO:\n\nAdd examples for, strike, blink, etc..\n\n\n#### String coloring by name:\n\n```python\na = fg.blue + 'I have a blue foreground.' + rs.fg\nb = bg.li_cyan + 'I have a light cyan background' + rs.bg\nc = fg.red + bg.green + 'I have a red fg and green bg.' + rs.all\n\nprint(a, b, c, sep='\\n')\n```\n\n<img src=\"assets/color_by_name.png\" alt=\"color_by_name\" />  \n\nNotice: Color names/values can be modified/extended. See 'customizing' below.\n\n\n#### String coloring using 8-bit numbers:\n\n```python\na = fg(34) + 'I have a green foreground.' + rs.fg\nb = bg(133) + 'I have a pink background' + rs.bg\nc = fg(226) + bg(19) + 'I have a light yellow fg and dark blue bg.' + rs.all\n\nprint(a, b, c, sep='\\n')\n```\n\n<img src=\"assets/8bit.png\" alt=\"8bit\" />  \n    \nLink: [Info on 8-bit numbers](1)\n\n\n#### String coloring using 24-bit RGB values:\n\n```python\na = fg(10, 255, 10) + 'I have a green foreground.' + rs.fg\nb = bg(255, 150, 50) + 'I have an orange background' + rs.bg\nc = fg(90, 90, 90) + bg(32, 32, 32) + 'Grey fg and dark grey bg.' + rs.all\n\nprint(a, b, c, sep='\\n')\n```\n\n<img src=\"assets/24bit.png\" alt=\"24bit\" />  \n\nLink: [Info on 24-bit numbers](2)\n\n\n#### Customizing sty\n\nIf you want to change/add attributes to your sty objects (fg, bg, ef, rs) you can use a dict and the rendering methods provided by `sty.render` to do so:\n\n```python\ncustom_register = dict(\n    orange=render.eightbit_fg(214),  # Add 'orange' to fg (using 8-bit code)\n    green=render.rgb_fg(255, 0, 0),  # Modify value for 'green' (using rgb code)\n    blue=render.sgr(95),  # Turn 'blue' into magenta (using sgr code)\n)\n\na = fg.green + 'I have a green foreground.' + rs.fg\nb = fg.blue + 'I have a blue foreground.' + rs.fg\n\nfg(custom_register)\n\nc = fg.green + 'I have a red foreground now.' + rs.fg\nd = fg.blue + 'I have a magenta foreground now.' + rs.fg\ne = fg.orange + 'I was set orange by a newly registered color name.' + rs.fg\n\nprint(a, b, c, d, e, sep='\\n')\n```\n\n<img src=\"assets/customizing.png\" alt=\"customizing\" />  \n\nAs you see, there are three types of renders:\n\n* `sgr` This one is used to generate ansi strings for SGR \"Select Graphic Rendition\" codes. These are most widely supported. They can be used for colors, as well as styling (italic, bold, blink, etc.). Link\n* `rgb`: This one is used to generate ansi strings for 24-bit colors. Link\n* `eigthbit`: This one is used to generate ansi strings for 8-bit colors. Link\n\n## Terminal Support\n\nThis was initially tested on Arch Linux using 'Termite' terminal. If you have issues with your setup, please leave an issue. If sty forks fine on your setup, feel free to add your setup to the list below:\n\n#### Termite on Linux\n\n* SGR: Fine!\n* 8-bit color: Fine!\n* 24-bit color: Fine!\n\nIf you want to support the widest range of terminals, you should stick to the sgr renderer. The default attributes in all sty objects (`fb`,`bg`,`ef`,`rs`) use `sgr` values exclusively.\n\n\n\n\n[0]: https://en.wikipedia.org/wiki/ANSI_escape_code#SGR_(Select_Graphic_Rendition)_parameters\n\n[1]: https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit\n\n[2]: https://en.wikipedia.org/wiki/ANSI_escape_code#24-bit\n",
    "docs_url": null,
    "download_url": "https://github.com/feluxe/sty/tarball/1.0.0-beta.2",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/feluxe/sty",
    "keywords": "styling",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sty",
    "platform": "",
    "project_url": "https://pypi.org/project/sty/",
    "release_url": "https://pypi.org/project/sty/1.0.0b2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "",
    "version": "1.0.0b2"
  },
  "releases": {
    "1.0.0b1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "86c14ed785415152dfe7cb19d997577d",
          "sha256": "8f2198717340ee9c54e0e7618e9523bd017b319ba2ec3b615d555631ab84a5cb"
        },
        "downloads": -1,
        "filename": "sty-1.0.0b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86c14ed785415152dfe7cb19d997577d",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 8122,
        "upload_time": "2018-02-10T13:45:29",
        "url": "https://files.pythonhosted.org/packages/46/e4/655f3fcc2e9167e4be62b35006683b4c42cc5cc30d1d775815f0cdd6c685/sty-1.0.0b1-py3-none-any.whl"
      }
    ],
    "1.0.0b2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8e5338a825f9be0f90ab41a05a130856",
          "sha256": "405cf8ef35f460496f2e8c02bea687a16e6d32875057ec664850997eab18dc1b"
        },
        "downloads": -1,
        "filename": "sty-1.0.0b2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e5338a825f9be0f90ab41a05a130856",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 8411,
        "upload_time": "2018-02-10T16:10:07",
        "url": "https://files.pythonhosted.org/packages/06/97/174e63ff468f4f37984f4ef2370cd4b9a533e0cec092ba31b1e78c35aa59/sty-1.0.0b2-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "8e5338a825f9be0f90ab41a05a130856",
        "sha256": "405cf8ef35f460496f2e8c02bea687a16e6d32875057ec664850997eab18dc1b"
      },
      "downloads": -1,
      "filename": "sty-1.0.0b2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8e5338a825f9be0f90ab41a05a130856",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 8411,
      "upload_time": "2018-02-10T16:10:07",
      "url": "https://files.pythonhosted.org/packages/06/97/174e63ff468f4f37984f4ef2370cd4b9a533e0cec092ba31b1e78c35aa59/sty-1.0.0b2-py3-none-any.whl"
    }
  ]
}