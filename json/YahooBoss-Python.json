{
  "info": {
    "author": "Constituent Voice",
    "author_email": "opensource@constituentvoice.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "================\nYahooBoss-Python\n================\n\nSimple Wrapper Around the Yahoo Boss Search API\n\nSee https://developer.yahoo.com/boss/search/\n\n---------\nYahooBoss\n---------\n\nBase class. Should not be called directly.\n\n-----------\nPlaceFinder\n-----------\n\nUse PlaceFinder to locate an address or place\n\nUsage\n=====\n\nFind the coordinates of a place o address\n\n::\n\n\tfrom yahooboss import PlaceFinder\n\n\tpf = Placefinder(your_key,your_secret)\n\tresults = pf.lookup( 'Address or Place Name' )\n\tlatitude = results[0].get('latitude')\n\tlongitude = results[0].get('longitude')\n\n\nFind an address by latitude and longitude\n\n::\n\n\tfrom yahooboss import PlaceFinder\n\tpf = Placefinder(your_key, your_secret)\n\tresults = pf.reverse( lat, lon )\n\taddress = results[0]\n\n\tstreet = address.get('line1')\n\tcity = address.get('city')\n\tstate = address.get('state') # or address.get('statecode') for the abbreviation\n\tzip = address.get('uzip')\n\n\nMethods\n=======\n\n`__init__( key, secret )`\n-------------------------\n\nExtends ``YahooBoss``, returns a ``PlaceFinder`` object\n\nArguments:\n\n- `key`- YahooBoss oAuth key.\n- `secret` - YahooBoss oAuth secret\n\n`lookup( place )`\n----------------------\n\nAccepts an address or place name and returns a validated address and geocode\n\nArguments:\n\n- `place` - Address or place name\n\nReturns ``dict``\n\n::\n\n\t{\n\t\t\"count\": \"1\",\n\t\t\"start\": \"0\",\n\t\t\"request\": \"count=1&flags=J&q=2435%2BN.%2BCentral%2BExpressway%252C%2BRichardson%2BTX%2B75080\",\n\t\t\"results\": [\n\t\t\t{\n\t\t\t\t\"neighborhood\": \"\",\n\t\t\t\t\"house\": \"2435\",\n\t\t\t\t\"county\": \"Dallas County\",\n\t\t\t\t\"street\": \"N Central Expy\",\n\t\t\t\t\"radius\": \"400\",\n\t\t\t\t\"quality\": \"87\",\n\t\t\t\t\"unit\": \"\",\n\t\t\t\t\"city\": \"Richardson\",\n\t\t\t\t\"countrycode\": \"US\",\n\t\t\t\t\"woeid\": \"12790359\",\n\t\t\t\t\"xstreet\": \"\",\n\t\t\t\t\"line4\": \"United States\",\n\t\t\t\t\"line3\": \"\",\n\t\t\t\t\"line2\": \"Richardson, TX 75080-2717\",\n\t\t\t\t\"line1\": \"2435 N Central Expy\",\n\t\t\t\t\"state\": \"Texas\",\n\t\t\t\t\"latitude\": \"32.98529\",\n\t\t\t\t\"hash\": \"4289EC860C737D3F\",\n\t\t\t\t\"unittype\": \"\",\n\t\t\t\t\"offsetlat\": \"32.985249\",\n\t\t\t\t\"statecode\": \"TX\",\n\t\t\t\t\"postal\": \"75080-2717\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"uzip\": \"75080\",\n\t\t\t\t\"country\": \"United States\",\n\t\t\t\t\"longitude\": \"-96.711983\",\n\t\t\t\t\"countycode\": \"\",\n\t\t\t\t\"offsetlon\": \"-96.713814\",\n\t\t\t\t\"addressmatchtype\": \"POINT_ADDRESS\",\n\t\t\t\t\"woetype\": \"11\"\n\t\t\t}\n\t\t]\n\t}\n\n`reverse( lat, lon )`\n---------------------\n\nFinds an address based on the given coordinates.\n\nArguments:\n\n- `lat` - Latitude of the location\n- `lon` - Longitude of the location\n\nReturns ``dict``\n\n::\n\n\t{\n\t\t\"count\": \"1\", \n\t\t\"start\": \"0\", \n\t\t\"request\": \"count=1&flags=J&gflags=R&location=32.98529%2B-96.711983&q=2435%2BN.%2BCentral%2BExpressway%252C%2BRichardson%252C%2BTX%2B75080\", \n\t\t\"results\": [\n\t\t\t{\n\t\t\t\t\"neighborhood\": \"\", \n\t\t\t\t\"house\": \"2435\", \n\t\t\t\t\"county\": \"Dallas County\", \n\t\t\t\t\"street\": \"N Central Expy\", \n\t\t\t\t\"radius\": \"400\", \n\t\t\t\t\"quality\": \"87\", \"unit\": \"\", \n\t\t\t\t\"city\": \"Richardson\", \n\t\t\t\t\"countrycode\": \"US\", \n\t\t\t\t\"woeid\": \"12790359\", \n\t\t\t\t\"xstreet\": \"\", \n\t\t\t\t\"line4\": \"United States\", \n\t\t\t\t\"line3\": \"\", \n\t\t\t\t\"line2\": \"Richardson, TX 75080-2717\", \n\t\t\t\t\"line1\": \"2435 N Central Expy\", \n\t\t\t\t\"state\": \"Texas\", \n\t\t\t\t\"latitude\": \"32.98529\", \n\t\t\t\t\"hash\": \"4289EC860C737D3F\", \n\t\t\t\t\"unittype\": \"\", \n\t\t\t\t\"offsetlat\": \"32.98529\", \n\t\t\t\t\"statecode\": \"TX\", \n\t\t\t\t\"postal\": \"75080-2717\", \n\t\t\t\t\"name\": \"32.98529 -96.711983\", \n\t\t\t\t\"uzip\": \"75080\", \n\t\t\t\t\"country\": \"United States\", \n\t\t\t\t\"longitude\": \"-96.711983\", \n\t\t\t\t\"countycode\": \"\", \n\t\t\t\t\"offsetlon\": \"-96.711983\", \n\t\t\t\t\"addressmatchtype\": \"POINT_ADDRESS\", \n\t\t\t\t\"woetype\": \"11\"\n\t\t\t}\n\t\t]\n\t}\n\n`placefinder( place )`\n----------------------\n\nAlias for `lookup()` to remain compatible with 0.1.x\n\n----------\nBossSearch\n----------\n\nUse BossSearch to search the web or news articles\n\nUsage\n=====\n\n::\n\n\tfrom yahooboss import BossSearch\n\tbs = BossSearch(your_key, your_secret)\n\n\tweb_results = bs.search_web( 'search parameters' )\n\n\tfor wr in web_results:\n\t\tprint 'Title: %s' % wr.get('title')\n\t\tprint 'Summary: %s' % wr.get('abstract')\n\t\tprint 'URL: %s' % wr.get('url')\n\n\tnews_results = bs.search_news( 'search parameters' )\n\n\tfor r in news_results:\n\t\tprint 'Title: %s' % r.get('title')\n\t\tprint 'Summary: %s' % r.get('abstract')\n\t\tprint 'Source: %s' % r.get('source')\n\t\tprint 'Date: %s' % r.get('date')\n\t\tprint 'URL: %s' % r.get('url')\n\n\nMethods\n=======\n\n`__init__(key, secret, **kwargs)`\n---------------------------------\n\nExtends YahooBoss, returns a ``BossSearch`` object\n\nArguments\n\n- `key` - YahooBoss oAuth key\n- `secret` - YahooBoss oAuth secret\n\nKeyword arguments:\n\n- `age` - Max age of the results (e.g. \"7d\". See the Search BOSS documentation for a complete list)\n- `urls` - list of urls to search. (Can be partial urls, see the BOSS documentation)\n- `results_per_page` - number of results per page (or per request)\n- `sites` - list or comma separated string of sites. BOSS seems to be using this in favor of urls.\n\n`search_web(query, page_num=1,**kwargs)`\n----------------------------------------\n\nSearches the web for the specified query and returns a list of results\n\nArguments:\n\n- `query` - the query string to search for\n- `page_num` - start at page (default: 1)\n\nKeyword arguments:\n\n- Same arguments as passed to `__init__()`\n\nReturns a list of ``dict`` results:\n\n::\n\n\t[{\n\t\t\"dispurl\": \"starwars.wikia.com/wiki/<b>Yoda</b>\",\n\t\t\"title\": \"<b>Yoda</b> - Wookieepedia, the Star Wars Wiki\",\n\t\t\"url\": \"http://starwars.wikia.com/wiki/Yoda\",\n\t\t\"abstract\": \"<b>Yoda</b> was one of the most renowned and powerful Jedi Masters in galactic history. He was known for his legendary wisdom, mastery of the Force and skills in lightsaber ...\",\n\t\t\"clickurl\": \"http://starwars.wikia.com/wiki/Yoda\",\n\t\t\"date\": \"\"\n\t}]\n\n`search_news(query,page_num=1,**kwargs)`\n----------------------------------------\n\nSearch Yahoo News for the specified query\n\nArguments:\n\n- `query` - string to search for\n- `page_num` - start at page (default: 1)\n\nKeyword arguments:\n\n- same arguments as passed to `__init__()`\n\nReturns a list of ``dict`` results:\n\n::\n\n\t[{\n\t\t\"sourceurl\": \"http://abcnews.go.com/\",\n\t\t\"language\": \"en english\",\n\t\t\"title\": \"Ferguson Library Becomes Oasis of Calm Amid Strife\",\n\t\t\"url\": \"http://abcnews.go.com/US/ferguson-library-refuge-adults-children-amid-strife/story?id=25050930\",\n\t\t\"abstract\": \"Ferguson library has become an oasis of calm and activities for children while school postpone during the street protests over the police shooting of Michael Brown.\",\n\t\t\"clickurl\": \"\",\n\t\t\"source\": \"ABC News\",\n\t\t\"date\": \"1408554014\"\n\t}]\n\n\n`make_request(bucket, query, page_num)`\n---------------------------------------\n\nUsed internally to make a raw request to YahooBoss services. Can be used to make a request\nto one of the services not currently covered by a wrapper function.\n\nArguments:\n\n- `bucket` - yahoo service bucket (e.g. \"news\")\n- `query` - query string to search\n- `page_num` - page to start at\n\nReturns a list of dicts. The structure of the dict depends on the return value from Yahoo\n\n----\nTODO\n----\n\nThe module currently does not support Yahoo's \"LimitedWeb\", \"Images\", \"Spelling\", \"Blogs\" or \"Related Search\".\n\nThese can be requested via the ``BossSearch.make_request`` method\n\n------\nAuthor\n------\n\nConstituentVoice - opensource@constituentvoice.com\n\n-----------------\nCopyright / Legal\n-----------------\n\nUse of this module requires YahooBoss credentials and agreement to Yahoo Inc.'s Terms of Service\n\nYahoo, YahooBoss, BossSearch, and PlaceFinder are trademarks and property of Yahoo Inc.\n\nConstituentVoice is not affiliated in any way with Yahoo Inc.\n\nThis software is licensed under the terms of the BSD License. It is provided to you free to modify\nor redistribute but with NO WARRANTY. See LICENSE.txt for details.\n\nCopyright (c) 2015 ConstituentVoice",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/constituentvoice/YahooBoss-Python",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "YahooBoss-Python",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/YahooBoss-Python/",
    "release_url": "https://pypi.org/project/YahooBoss-Python/0.2.0/",
    "requires_python": null,
    "summary": "Simple wrapper around the Yahoo Boss API (https://developer.yahoo.com/boss/search/)",
    "version": "0.2.0"
  },
  "releases": {
    "0.1.4": [],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "313c09f8479e1ae26370d94782f8eb13",
          "sha256": "cee9e372fec69b7920f4a375c97fcd08674a1e74bbb8fb047d2ee5a45e152ed9"
        },
        "downloads": 2065,
        "filename": "YahooBoss-Python-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "313c09f8479e1ae26370d94782f8eb13",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5335,
        "upload_time": "2014-09-05T18:21:10",
        "url": "https://files.pythonhosted.org/packages/01/53/76d0544acd43b5cffc017164dac4dfb0767b714080839e0dccb7c7dcbd7a/YahooBoss-Python-0.1.5.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0187759a457659352586885320ecbf71",
          "sha256": "19da21d311a47e555a188ded19f707178d0b5a3b86f0813e03b8e161b763426f"
        },
        "downloads": 1713,
        "filename": "YahooBoss-Python-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0187759a457659352586885320ecbf71",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6269,
        "upload_time": "2015-02-26T20:01:29",
        "url": "https://files.pythonhosted.org/packages/10/9d/fac7300f463a4be9964fa5b801c5ae187a37fd3458c04d7707a06133c813/YahooBoss-Python-0.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "0187759a457659352586885320ecbf71",
        "sha256": "19da21d311a47e555a188ded19f707178d0b5a3b86f0813e03b8e161b763426f"
      },
      "downloads": 1713,
      "filename": "YahooBoss-Python-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0187759a457659352586885320ecbf71",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6269,
      "upload_time": "2015-02-26T20:01:29",
      "url": "https://files.pythonhosted.org/packages/10/9d/fac7300f463a4be9964fa5b801c5ae187a37fd3458c04d7707a06133c813/YahooBoss-Python-0.2.0.tar.gz"
    }
  ]
}