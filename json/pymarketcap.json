{
  "info": {
    "author": "\u00c1lvaro Mond\u00e9jar <mondejar1994@gmail.com>",
    "author_email": "mondejar1994@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<h1>pymarketcap</h1>\n\n[![PyPi Version](http://img.shields.io/pypi/v/pymarketcap.svg)](https://pypi.python.org/pypi/pymarketcap/)\n\n**pymarketcap** is an APACHE licensed library for retrieve information from [coinmarketcap](http://coinmarketcap.com/) API and web. Consist of a parser built on BeautifulSoup and a API wrapper. If you only want the API wrapper, go to [here](https://github.com/mondeja/coinmarketcap-api).\n\n## Installation:\n\nYou need to install BeautifulSoup before:\n\n    $ pip install bs4\n\nFrom source use\n\n    $ python setup.py install\n\n## Documentation:\n\n### API methods\n\n- **`GET /v1/ticker/`**\n- **`GET /v1/ticker/currency`**\n\n```python\n>>> from pymarketcap import *       # Only contains the class Pymarketcap\n>>> coinmarketcap = Pymarketcap()\n>>> coinmarketcap.ticker(<currency>)\n# <currency> can be passed through 'ethereum' or 'ETH' and returns in json\n\n>>> coinmarketcap.ticker('ETH')\n>>> coinmarketcap.ticker('ethereum')\n\n# Add VERBOSE=True or V=True for a string response, like this:\n>>> coinmarketcap.ticker('STEEM', V=True)\n\n# This is for receive all the currencies in a string\n>>> coinmarketcap.ticker(VERBOSE=True)\n\n[\n  {\n    id: \"bitcoin\",\n    name: \"Bitcoin\",\n    symbol: \"BTC\",\n    rank: 1,\n    price_usd: 448.66,\n    24h_volume_usd: 84396000,\n    market_cap_usd: 6946212888,\n    available_supply: 15482200,\n    total_supply: 15482200,\n    percent_change_1h: 0.47,\n    percent_change_24h: -1.61,\n    percent_change_7d: 1.25\n  },\n  {\n    id: \"ethereum\",\n    name: \"Ethereum\",\n    symbol: \"ETH\",\n    rank: 2,\n    price_usd: 7.28,\n    24h_volume_usd: 13419600,\n    market_cap_usd: 578917949,\n    available_supply: 79512085,\n    total_supply: 79512085,\n    percent_change_1h: 0.21,\n    percent_change_24h: -6.51,\n    percent_change_7d: -14.64\n  },\n\n  ...\n]\t\t\t\n```\n\n\n- **`GET /v1/global/`**\n\n```python\n>>> coinmarketcap.stats(VERBOSE=True)\n{\n  total_market_cap_usd: 8280726727,\n  total_24h_volume_usd: 108644044,\n  bitcoin_percentage_of_market_cap: 81.77,\n  active_currencies: 690,\n  active_assets: 57,\n  active_markets: 1902\n}\t\t\n```\n\n\n### Web Parser methods\n\n#### [Currency markets](http://coinmarketcap.com/currencies/<currency>/#markets)\n\n- **`GET http://coinmarketcap.com/currencies/<currency>/#markets`**\n\n\n```python\n>>> coinmarketcap.markets('ETH', V=True)\n\n[\n  {\n    \"pair\": \"ETH/BTC\", \n    \"source\": \"Poloniex\", \n    \"percent_volume\": 29.72, \n    \"price_usd\": 49.07, \n    \"24h_volume_usd\": 35779900\n  }, \n  {\n    \"pair\": \"ETH/USD\", \n    \"source\": \"GDAX\", \n    \"percent_volume\": 8.22, \n    \"price_usd\": 49.99, \n    \"24h_volume_usd\": 9897980\n  }, \n  {\n    \"pair\": \"ETH/USD\", \n    \"source\": \"Bitfinex\", \n    \"percent_volume\": 7.98, \n    \"price_usd\": 49.45, \n    \"24h_volume_usd\": 9606490\n  }, \n\n ...\n]\n```\n\n\n#### [Global ranks](http://www.coinmarketcap.com/gainers-losers/)\n\n- **`GET http://www.coinmarketcap.com/gainers-losers/`**\n\n```python\n>>> coinmarketcap.ranks(V=True)\n\n{\n  \"losers\": {\n    \"1h\": [\n      {\n        \"24h_volume_usd\": 15219, \n        \"symbol\": \"XEN\", \n        \"price_usd\": 0.327427, \n        \"percent_change\": -24.28, \n        \"name\": \"Xenixcoin\"\n      }, \n      {\n        \"24h_volume_usd\": 818024, \n        \"symbol\": \"PINK\", \n        \"price_usd\": 0.002168, \n        \"percent_change\": -18.3, \n        \"name\": \"PinkCoin\"\n      },\n      ...\n\n# You can pass '7d', '24h', '1h', 'gainers' and 'losers' for filter responses:\ncoinmarketcap.ranks('gainers', '1h', V=True)\n\n{\n  \"1h\": [\n    {\n      \"24h_volume_usd\": 62719, \n      \"symbol\": \"NOBL\", \n      \"price_usd\": 0.00024, \n      \"percent_change\": 18.99, \n      \"name\": \"NobleCoin\"\n    }, \n    {\n      \"24h_volume_usd\": 22355, \n      \"symbol\": \"RDD\", \n      \"price_usd\": 5.5e-05, \n      \"percent_change\": 17.72, \n      \"name\": \"ReddCoin\"\n    }, \n    {\n      \"24h_volume_usd\": 12723, \n      \"symbol\": \"BOLI\", \n      \"price_usd\": 0.003156, \n      \"percent_change\": 15.83, \n      \"name\": \"Bolivarcoin\"\n    }, \n...\n```\n\n## License:\n\n```\n  Apache v2.0 License\n  Copyright 2017 \u00c1lvaro Mond\u00e9jar\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n```\n\n## Buy me a coffee?\n\nIf you feel like buying me a coffee (or a beer?), donations are welcome:\n\n```\nBTC : 1LfUF4AcvH7Wd1wTc7Mmqobj4AypUbpvN5\nETH : 0x7428fE875226880DaD222c726F6340eec42Db567\nSTEEM: @mondeja\n```",
    "docs_url": null,
    "download_url": "https://github.com/mondeja/pymarketcap/archive/master.zip",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/mondeja/pymarketcap",
    "keywords": "Scrypt,SHA256d,cryptocurrency,API,wrapper,parser,json,LTC,Litecoin,BTC,Bitcoin",
    "license": "Apache v2.0 License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pymarketcap",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pymarketcap/",
    "release_url": "https://pypi.org/project/pymarketcap/3.0.3.1/",
    "requires_python": null,
    "summary": "Python3 API for coinmarketcap.com.",
    "version": "3.0.3.1"
  },
  "releases": {
    "3.0.3": [],
    "3.0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d9e360a89b686e42d5bc32be32bce49e",
          "sha256": "6a9fb43dfc20fef31dc068f415f55f300942644df24e449b7d5a06ae464313c3"
        },
        "downloads": 0,
        "filename": "pymarketcap-3.0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d9e360a89b686e42d5bc32be32bce49e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3226,
        "upload_time": "2017-06-12T14:12:34",
        "url": "https://files.pythonhosted.org/packages/63/d7/d7b3020d6da7a05477252705ff7832fecd8b13207f0fa461e150b46e29b4/pymarketcap-3.0.3.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d9e360a89b686e42d5bc32be32bce49e",
        "sha256": "6a9fb43dfc20fef31dc068f415f55f300942644df24e449b7d5a06ae464313c3"
      },
      "downloads": 0,
      "filename": "pymarketcap-3.0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d9e360a89b686e42d5bc32be32bce49e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3226,
      "upload_time": "2017-06-12T14:12:34",
      "url": "https://files.pythonhosted.org/packages/63/d7/d7b3020d6da7a05477252705ff7832fecd8b13207f0fa461e150b46e29b4/pymarketcap-3.0.3.1.tar.gz"
    }
  ]
}