{
  "info": {
    "author": "Random User",
    "author_email": "rndusr@posteo.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "torf-cli\n========\n\ntorf-cli is a command line tool that can create new torrents and magnet URIs,\ndump the metainfo of a torrent in a readable and parsable format and edit\nexisting torrents (e.g. to fix a typo or change the info hash to deal with\ncross-seeding issues without hashing the pieces again).\n\n::\n\n    $ torf -h\n    torf 1.0a1 <https://github.com/rndusr/torf-cli>\n\n    USAGE\n        torf PATH [OPTIONS] [-o FILE]\n        torf -i FILE\n        torf -i FILE [OPTIONS] -o FILE\n\n    ARGUMENTS\n        --help,-h              Show this help screen and exit\n        --version              Show version information and exit\n\n        PATH                   Path to torrent's content\n        --exclude, -e EXCLUDE  Files from PATH to exclude (see below)\n                               (may be given multiple times)\n        --in, -i FILE          Read metainfo from torrent FILE\n        --out, -o FILE         Write metainfo to torrent FILE\n                               (defaults to NAME.torrent when creating new torrent)\n        --yes, -y              Overwrite FILE without asking\n        --magnet, -m           Create magnet link\n\n        --name, -n NAME        Torrent name (defaults to basename of PATH)\n        --tracker, -t TRACKER  Announce URL (may be given multiple times)\n        --webseed, -w WEBSEED  Webseed URL (BEP19) (may be given multiple times)\n        --private, -p          Only use tracker(s) for peer discovery (no DHT/PEX)\n        --xseed, -x            Randomize info hash to help with cross-seeding\n        --source, -s SOURCE    Source string in the torrent's info\n        --date, -d DATE        Creation date as YYYY-MM-DD[ HH:MM[:SS]], 'now' for\n                               current local time or 'today' for current local time\n                               at midnight\n                               (defaults to 'today' when creating new torrent)\n        --comment, -c COMMENT  Comment that is stored in the torrent file\n\n        --notracker, -T        Remove any trackers from existing torrent\n        --nowebseed, -W        Remove any webseeds from existing torrent\n        --noprivate, -P        Make existing torrent public\n        --noxseed, -X          De-randomize info hash of existing torrent\n        --nosource, -S         Remove source string from existing torrent\n        --nodate, -D           Remove date from existing torrent\n        --nocomment, -C        Remove comment from existing torrent\n\n        NOTE: Options starting with '--no' are only effective when editing a torrent\n              (i.e. both --in and --out are specified).\n\n    EXCLUDING FILES\n        The --exclude argument takes a pattern that is matched against file names in\n        PATH and matching files are not included in the torrent.  This argument is\n        ignored, if PATH is a single file.  Patterns use these special characters:\n            *      matches everything\n            ?      matches any single character\n            [seq]  matches any character in seq\n            [!seq] matches any char not in seq\n\nExamples\n--------\n\nCreate 'foo.torrent' with two trackers\n\n.. code:: sh\n\n    $ torf path/to/foo -t http://bar.example.org:6881/announce -t http://baz.something.com:6881/announce\n\nRead 'foo.torrent' and display its metainfo\n\n.. code:: sh\n\n    $ torf -i foo.torrent\n\nRead 'foo.torrent', edit its comment, remove the date and write the result to\n'bar.torrent'\n\n.. code:: sh\n\n    $ torf -i foo.torrent -c 'This torrent has changed' -D -o bar.torrent\n\nInstallation\n------------\n\nThe `latest release <https://pypi.org/project/torf-cli>`_ can be installed from PyPI.\n\n.. code:: sh\n\n   $ pip3 install torf-cli         # Installs torf system-wide (/usr/local/)\n   $ pip3 install --user torf-cli  # Installs torf in your home (~/.local/)\n\nThe `latest development version <https://github.com/rndusr/torf-cli>`_ is\navailable on GitHub in the `master` branch.\n\n.. code:: sh\n\n   $ pip3 install [--user] git+https://github.com/rndusr/torf-cli.git\n\nContributing\n------------\n\nBug reports and feature requests are welcome in the `issue tracker\n<https://github.com/rndusr/torf-cli/issues>`_.\n\nLicense\n-------\n\ntorf-cli is free software: you can redistribute it and/or modify it under the\nterms of the GNU General Public License as published by the Free Software\nFoundation, either version 3 of the License, or (at your option) any later\nversion.\n\nThis program is distributed in the hope that it will be useful but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE. See the `GNU General Public License\n<https://www.gnu.org/licenses/gpl-3.0.txt>`_ for more details.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/rndusr/torf-cli",
    "keywords": "bittorrent torrent magnet file cli",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "torf-cli",
    "platform": "",
    "project_url": "https://pypi.org/project/torf-cli/",
    "release_url": "https://pypi.org/project/torf-cli/1.0/",
    "requires_dist": [],
    "requires_python": ">=3.6",
    "summary": "CLI tool to create, read and edit torrent files and produce magnet URIs",
    "version": "1.0"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "78e73506f01b8528ab4ceb8e77cca792",
          "sha256": "9cd74d1ee553286281243c5bde9f9c4e81d4a399caa17fbd1a294f6ef15ed834"
        },
        "downloads": -1,
        "filename": "torf-cli-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "78e73506f01b8528ab4ceb8e77cca792",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9497,
        "upload_time": "2018-02-01T14:33:25",
        "url": "https://files.pythonhosted.org/packages/3a/a3/9e693ed15d7c1e2a2710fb5854047532fdac98e1ff9c31ede2ce2d4e1302/torf-cli-1.0.tar.gz"
      }
    ],
    "1.0a1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "259db63a4c8bc1ea88e7e7fe8c2fe6cb",
          "sha256": "4ec72c83ba0366cbb77897d9c509d39c00db48416db6073f139ecd745bc4ba16"
        },
        "downloads": -1,
        "filename": "torf-cli-1.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "259db63a4c8bc1ea88e7e7fe8c2fe6cb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9300,
        "upload_time": "2018-01-15T15:21:22",
        "url": "https://files.pythonhosted.org/packages/32/95/1d81b73c0a878bb4917719d4587d264e3f3ef0034e21df74b2049e6a4b8f/torf-cli-1.0a1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "78e73506f01b8528ab4ceb8e77cca792",
        "sha256": "9cd74d1ee553286281243c5bde9f9c4e81d4a399caa17fbd1a294f6ef15ed834"
      },
      "downloads": -1,
      "filename": "torf-cli-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "78e73506f01b8528ab4ceb8e77cca792",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9497,
      "upload_time": "2018-02-01T14:33:25",
      "url": "https://files.pythonhosted.org/packages/3a/a3/9e693ed15d7c1e2a2710fb5854047532fdac98e1ff9c31ede2ce2d4e1302/torf-cli-1.0.tar.gz"
    }
  ]
}