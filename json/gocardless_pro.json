{
  "info": {
    "author": "GoCardless",
    "author_email": "engineering@gocardless.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. |circle-badge| image:: https://circleci.com/gh/gocardless/gocardless-pro-python.svg?style=shield&circle-token=:circle-token\n    :target: https://circleci.com/gh/gocardless/gocardless-pro-python\n.. |pypi-badge| image:: https://badge.fury.io/py/gocardless_pro.svg\n    :target: https://pypi.python.org/pypi/gocardless_pro\n\nGoCardless Pro Python client library\n============================================\n\nA Python client for interacting with the GoCardless Pro API.\n\n|circle-badge| |pypi-badge|\n\nTested against Python 2.7, 3.3, 3.4, 3.5, and 3.6.\n\n- `\"Getting Started\" guide <https://developer.gocardless.com/getting-started/api/introduction/?lang=python>`_ with copy and paste Python code samples\n- `API reference <https://developer.gocardless.com/api-reference>`_\n------------\n\nInstall from PyPI:\n\n.. code:: bash\n\n    $ pip install gocardless_pro\n\n\nUsage\n-----\n\nCreate a ``Client`` instance, providing your access token and the environment\nyou want to use:\n\n.. code:: python\n\n    import gocardless_pro\n    token = os.environ['ACCESS_TOKEN']\n    client = gocardless_pro.Client(access_token=token, environment='live')\n\nAccess API endpoints using the corresponding methods on the client object:\n\n.. code:: python\n\n    # Create a new customer. We automatically add idempotency keys to requests to create\n    # resources, stopping duplicates accidentally getting created if something goes wrong\n    # with the API (e.g. networking problems) - see https://developer.gocardless.com/api\n    # -reference/#making-requests-idempotency-keys for details\n    customer = client.customers.create(params={'email': 'jane@example.com'})\n\n    # Fetch a payment by its ID\n    payment = client.payments.get(\"PA123\")\n\n    # Loop through a page of payments, printing each payment's amount\n    for payment in client.payments.list().records:\n        decimal_amount = decimal.Decimal(payment.amount) / 100\n        print('Payment for \u00a3{0}'.format(decimal_amount))\n\n    # Create a mandate PDF in a specific language\n    client.mandate_pdfs.create(\n        params={'links': {'mandate': 'MD00001234XYZ'}},\n        headers={'Accept-Language': 'fr'}\n    )\n\nFor full documentation, see our `API reference`_.\n\n.. _API reference: https://developer.gocardless.com/api-reference\n\n\nAvailable resources\n```````````````````\n\nBank details lookups\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Perform a bank details lookup\n    client.bank_details_lookups.create(params={...})\n\nCreditors\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a creditor\n    client.creditors.create(params={...})\n\n    # List creditors\n    client.creditors.list(params={...})\n\n    # Iterate through all creditors\n    client.creditors.all(params={...})\n\n    # Get a single creditor\n    client.creditors.get('CR123', params={...})\n\n    # Update a creditor\n    client.creditors.update('CR123', params={...})\n\nCreditor bank accounts\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a creditor bank account\n    client.creditor_bank_accounts.create(params={...})\n\n    # List creditor bank accounts\n    client.creditor_bank_accounts.list(params={...})\n\n    # Iterate through all creditor_bank_accounts\n    client.creditor_bank_accounts.all(params={...})\n\n    # Get a single creditor bank account\n    client.creditor_bank_accounts.get('BA123', params={...})\n\n    # Disable a creditor bank account\n    client.creditor_bank_accounts.disable('BA123', params={...})\n\nCustomers\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a customer\n    client.customers.create(params={...})\n\n    # List customers\n    client.customers.list(params={...})\n\n    # Iterate through all customers\n    client.customers.all(params={...})\n\n    # Get a single customer\n    client.customers.get('CU123', params={...})\n\n    # Update a customer\n    client.customers.update('CU123', params={...})\n\nCustomer bank accounts\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a customer bank account\n    client.customer_bank_accounts.create(params={...})\n\n    # List customer bank accounts\n    client.customer_bank_accounts.list(params={...})\n\n    # Iterate through all customer_bank_accounts\n    client.customer_bank_accounts.all(params={...})\n\n    # Get a single customer bank account\n    client.customer_bank_accounts.get('BA123', params={...})\n\n    # Update a customer bank account\n    client.customer_bank_accounts.update('BA123', params={...})\n\n    # Disable a customer bank account\n    client.customer_bank_accounts.disable('BA123', params={...})\n\nEvents\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # List events\n    client.events.list(params={...})\n\n    # Iterate through all events\n    client.events.all(params={...})\n\n    # Get a single event\n    client.events.get('EV123', params={...})\n\nMandates\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a mandate\n    client.mandates.create(params={...})\n\n    # List mandates\n    client.mandates.list(params={...})\n\n    # Iterate through all mandates\n    client.mandates.all(params={...})\n\n    # Get a single mandate\n    client.mandates.get('MD123', params={...})\n\n    # Update a mandate\n    client.mandates.update('MD123', params={...})\n\n    # Cancel a mandate\n    client.mandates.cancel('MD123', params={...})\n\n    # Reinstate a mandate\n    client.mandates.reinstate('MD123', params={...})\n\nMandate pdfs\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a mandate PDF\n    client.mandate_pdfs.create(params={...})\n\nPayments\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a payment\n    client.payments.create(params={...})\n\n    # List payments\n    client.payments.list(params={...})\n\n    # Iterate through all payments\n    client.payments.all(params={...})\n\n    # Get a single payment\n    client.payments.get('PM123', params={...})\n\n    # Update a payment\n    client.payments.update('PM123', params={...})\n\n    # Cancel a payment\n    client.payments.cancel('PM123', params={...})\n\n    # Retry a payment\n    client.payments.retry('PM123', params={...})\n\nPayouts\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # List payouts\n    client.payouts.list(params={...})\n\n    # Iterate through all payouts\n    client.payouts.all(params={...})\n\n    # Get a single payout\n    client.payouts.get('PO123', params={...})\n\nRedirect flows\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a redirect flow\n    client.redirect_flows.create(params={...})\n\n    # Get a single redirect flow\n    client.redirect_flows.get('RE123456', params={...})\n\n    # Complete a redirect flow\n    client.redirect_flows.complete('RE123456', params={...})\n\nRefunds\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a refund\n    client.refunds.create(params={...})\n\n    # List refunds\n    client.refunds.list(params={...})\n\n    # Iterate through all refunds\n    client.refunds.all(params={...})\n\n    # Get a single refund\n    client.refunds.get('RF123', params={...})\n\n    # Update a refund\n    client.refunds.update('RF123', params={...})\n\nSubscriptions\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a subscription\n    client.subscriptions.create(params={...})\n\n    # List subscriptions\n    client.subscriptions.list(params={...})\n\n    # Iterate through all subscriptions\n    client.subscriptions.all(params={...})\n\n    # Get a single subscription\n    client.subscriptions.get('SB123', params={...})\n\n    # Update a subscription\n    client.subscriptions.update('SB123', params={...})\n\n    # Cancel a subscription\n    client.subscriptions.cancel('SB123', params={...})\n\n\n\nRunning tests\n-------------\n\nFirst, install the development dependencies:\n\n.. code:: bash\n\n    $ pip install -r requirements-dev.txt\n\nTo run the test suite against the current Python version, run ``nosetests``.\n\nTo run the test suite against multiple Python versions, run ``tox``.\n\nIf you don't have all versions of Python installed, you can run the tests in\na Docker container by running ``make``.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/gocardless/gocardless-pro-python",
    "keywords": "gocardless directdebit payments sepa bacs",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gocardless_pro",
    "platform": "",
    "project_url": "https://pypi.org/project/gocardless_pro/",
    "release_url": "https://pypi.org/project/gocardless_pro/1.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A client library for the GoCardless Pro API.",
    "version": "1.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a6f2a1d2a5774a900c552a31ad668242",
          "sha256": "d71215825ceaff37e466837bda2007d5551e582cac938e38c93ca768cbfe0b5d"
        },
        "downloads": 1824,
        "filename": "gocardless_pro-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a6f2a1d2a5774a900c552a31ad668242",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17878,
        "upload_time": "2015-07-08T13:25:49",
        "url": "https://files.pythonhosted.org/packages/fc/ad/3f83b8a81f883d2b73280dc2318ef362bac563d69f047a22445edd6383c4/gocardless_pro-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "87748f2cba4be8c49cbf9e922586e066",
          "sha256": "1be217a9c7f322f427cfd165367bc59412411edb4ba529361d22eb8347030fd1"
        },
        "downloads": 887,
        "filename": "gocardless_pro-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "87748f2cba4be8c49cbf9e922586e066",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17278,
        "upload_time": "2015-07-08T16:19:18",
        "url": "https://files.pythonhosted.org/packages/39/96/5e96795116cc5f588650556d136f8289a0065baef5aa8bb10e382fc08206/gocardless_pro-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2e557789ae7f7addab94f9bc83b222f6",
          "sha256": "6768b26082a67a231877197dd78bc8140edbd9af60164f8c55e27e91035e1102"
        },
        "downloads": 3365,
        "filename": "gocardless_pro-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2e557789ae7f7addab94f9bc83b222f6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17726,
        "upload_time": "2015-07-13T11:24:11",
        "url": "https://files.pythonhosted.org/packages/4b/b2/72e73fd5349d67c78877fd2c865c81aee9c56391b023ca9e4437ea663a25/gocardless_pro-0.1.2.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5854bf916fdd9680d77be1d75d3c41f0",
          "sha256": "bd9949762dc3035ce4891b91624c5c3b9aeb754ec44b2d9c103e46fde6a6a24b"
        },
        "downloads": 731,
        "filename": "gocardless_pro-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5854bf916fdd9680d77be1d75d3c41f0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18002,
        "upload_time": "2015-12-15T12:49:19",
        "url": "https://files.pythonhosted.org/packages/0b/8c/c9dfe6d815a7a416548be9678862aa95f09c036daa9a29ab7cecdf66b979/gocardless_pro-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "38d832eb25346b97f8c679330c440a37",
          "sha256": "e6b85541a6f8e0c8586c259f95dc3b995ee2c84f1e9a70a6eca59916a43c71ee"
        },
        "downloads": 328,
        "filename": "gocardless_pro-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "38d832eb25346b97f8c679330c440a37",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18025,
        "upload_time": "2016-02-05T12:37:19",
        "url": "https://files.pythonhosted.org/packages/1f/61/668d2a83f37a74751f647aa4e2a5dbed49d638d1a22890088d0c7a50c61f/gocardless_pro-0.2.1.tar.gz"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4b52af7b33a52acc6965e2b2b163dfa1",
          "sha256": "f54ba0ab95f50f85e41f39c03365d4a23d75cd1efe7ecc1f6cea982923173249"
        },
        "downloads": 1864,
        "filename": "gocardless_pro-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4b52af7b33a52acc6965e2b2b163dfa1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18261,
        "upload_time": "2016-03-16T14:43:44",
        "url": "https://files.pythonhosted.org/packages/4a/59/17207ec464d7567a2875f0f1d4eb940998918b7f2608d1f923430f6607d7/gocardless_pro-0.2.2.tar.gz"
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4e06eb711c7fb09872cfd80263e9ef8c",
          "sha256": "51bce08b660a1735392bf85eba4a5b656e4c27d85b5668eefcbd08e6052a4052"
        },
        "downloads": 1635,
        "filename": "gocardless_pro-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4e06eb711c7fb09872cfd80263e9ef8c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17001,
        "upload_time": "2016-08-03T14:48:53",
        "url": "https://files.pythonhosted.org/packages/3e/19/1c3b932fbddef892cdd14b28e11688ea4d1c9c979e9499c25a9fdac4bd6c/gocardless_pro-0.2.3.tar.gz"
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "572857c380baaf173ff2f8054ddbd3cf",
          "sha256": "85d74a94d9a72932beec8a3b8cecdbcbb81ece5c16c335ac47fb542ded56c4e2"
        },
        "downloads": 15,
        "filename": "gocardless_pro-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "572857c380baaf173ff2f8054ddbd3cf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17142,
        "upload_time": "2017-01-18T09:42:38",
        "url": "https://files.pythonhosted.org/packages/82/77/966144cb6c77c607c6139467d0b683f7b947016a03969d712231e38ceee3/gocardless_pro-0.2.4.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "69d78e0f622c3bf68b64cd3f7f98e9f4",
          "sha256": "2033762c349baedff3bfcd6696081184c2f34180a95caf4f35d6c6d8c964fa50"
        },
        "downloads": 17,
        "filename": "gocardless_pro-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "69d78e0f622c3bf68b64cd3f7f98e9f4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17169,
        "upload_time": "2017-02-22T10:32:07",
        "url": "https://files.pythonhosted.org/packages/95/9b/8c40f73074f13f8dfdd17428fa108b017ba6a107c86d8ad08c14eb6eb4ee/gocardless_pro-0.3.0.tar.gz"
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "81f8505a8adeb2ec42232ce77a0342e3",
          "sha256": "73e2671fe5057abdebabb3ef465749bd29a34d8ee9d4a554c925b45c48e1f395"
        },
        "downloads": 0,
        "filename": "gocardless_pro-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "81f8505a8adeb2ec42232ce77a0342e3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20380,
        "upload_time": "2017-05-19T11:52:13",
        "url": "https://files.pythonhosted.org/packages/ca/81/dba8d3bad9cc5d5746d1704d6ddfbb8a7b219e0fc74d416d6aedbd8c486c/gocardless_pro-1.0.0.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8fa9e21e9863bcebe4a8b47ff7286051",
          "sha256": "ceb4a7f5975b118cb027dc0a49625be4af00eba555930f2f8ae583a0590d3f28"
        },
        "downloads": 0,
        "filename": "gocardless_pro-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8fa9e21e9863bcebe4a8b47ff7286051",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20776,
        "upload_time": "2017-09-18T15:14:28",
        "url": "https://files.pythonhosted.org/packages/93/17/eedd9fafffac8d8d627f8ba8e2dec7c3d7d5cef033679574ed63b29bb95e/gocardless_pro-1.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "8fa9e21e9863bcebe4a8b47ff7286051",
        "sha256": "ceb4a7f5975b118cb027dc0a49625be4af00eba555930f2f8ae583a0590d3f28"
      },
      "downloads": 0,
      "filename": "gocardless_pro-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8fa9e21e9863bcebe4a8b47ff7286051",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 20776,
      "upload_time": "2017-09-18T15:14:28",
      "url": "https://files.pythonhosted.org/packages/93/17/eedd9fafffac8d8d627f8ba8e2dec7c3d7d5cef033679574ed63b29bb95e/gocardless_pro-1.1.0.tar.gz"
    }
  ]
}