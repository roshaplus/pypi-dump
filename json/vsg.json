{
  "info": {
    "author": "Jeremiah C Leary",
    "author_email": "jeremiah.c.leary@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 2.7",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Text Processing :: General"
    ],
    "description": "VHDL Style Guide (VSG)\n======================\n\n**Coding style enforcement for VHDL.**\n\n<div align=\"center\">\n  <!-- github release -->\n  <a href=\"https://github.com/jeremiah-c-leary/vhdl-style-guide\">\n    <img src=\"https://img.shields.io/github/tag/jeremiah-c-leary/vhdl-style-guide.svg?style=flat-square\"\n      alt=\"Github Release\" />\n  </a>\n  <!-- PyPI version -->\n  <a href=\"https://pypi.python.org/pypi/vsg\">\n    <img src=\"https://img.shields.io/pypi/v/vsg.svg?style=flat-square\"\n      alt=\"PyPI Version\" />\n  </a>\n  <!-- Build Status -->\n  <a href=\"https://travis-ci.org/jeremiah-c-leary/vhdl-style-guide\">\n    <img src=\"https://img.shields.io/travis/jeremiah-c-leary/vhdl-style-guide/master.svg?style=flat-square\"\n      alt=\"Build Status\" />\n  </a>\n  <!-- Test Coverage -->\n  <a href=\"https://codecov.io/github/jeremiah-c-leary/vhdl-style-guide\">\n    <img src=\"https://img.shields.io/codecov/c/github/jeremiah-c-leary/vhdl-style-guide/master.svg?style=flat-square\"\n      alt=\"Test Coverage\" />\n  </a>\n  <!-- Read The Docs -->\n  <a href=\"http://vhdl-style-guide.readthedocs.io/en/latest/index.html\">\n    <img src=\"https://img.shields.io/readthedocs/vsg.svg?style=flat-square\"\n      alt=\"Read The Docs\" />\n  </a>\n</div>\n\nAfter recently performing code reviews, most of the issues found were related to style.\nTime spent in code reviews addressing style issues is a waste.\nDepending on your process, style issues can take a lot of time to resolve.\n\n1. Create finding/ticket/issue\n2. Disposition\n3. Fix\n4. Verify fix\n\nSpending less time on style issues, leaves more time to analyze the substance of the code.\nUltimately, this will reduce the amount of time performing code reviews.\nSpending more time on substance than style will result in higher quality code that costs less.\n\n## Key benefits\n\n* Define VHDL coding standards\n* Makes coding standards visible to everyone\n* Improve code reviews\n* Quickly bring code up to current standards\n\nVSG allows the style of the code to be defined and enforced over part or the entire code base.\nConfigurations allow for multiple coding standards.\n\n## Key Features\n\n* Command line tool\n  - integrate into continuous integration flow\n* Fixes and/or reports issues found\n  - whitespace\n    - horizontal\n    - vertical\n  - upper and lower case\n  - keyword alignments\n  - etc...\n* Fully configurable rules via JSON configuration file\n  - Disable rules\n  - Alter behavior of existing rules\n  - Change phase of execution\n* Localize rule sets\n  - Create your own rules using python\n  - Use existing rules as a template\n  - Fully integrates into base rule set\n\n## Installation\n\nYou can get the latest released version of VSG via **pip**.\n\n```\npip install vsg\n```\n\nThe latest development version can be cloned...\n\n```\ngit clone https://github.com/jeremiah-c-leary/vhdl-style-guide.git\n```\n...and then installed locally...\n```\npython setup.py install\n```\n\n## Usage\n\nVSG is a command line tool and is invoked with...\n```\n$vsg\n\nusage: VHDL Style Guide (VSG) [-h] -f FILENAME [--local_rules LOCAL_RULES]\n                              [--configuration CONFIGURATION] [--fix]\n\nAnalyzes VHDL files for style guide violations.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f FILENAME, --filename FILENAME\n                        File to analyze\n  --local_rules LOCAL_RULES\n                        Path to local rules\n  --configuration CONFIGURATION\n                        JSON configuration file\n  --fix                 Fix issues found\n```\n\nHere is an example output running against a test file:\n```\n$ vsg -f PIC.vhd \nFile:  PIC.vhd\n==============\nPhase 1... Reporting\nPhase 2... Reporting\nPhase 3... Reporting\nPhase 4... Reporting\nPhase 5... Reporting\n  comment_002               |         51 | Ensure proper alignment of comment with previous line.\n  comment_002               |         52 | Ensure proper alignment of comment with previous line.\n  comment_002               |         54 | Ensure proper alignment of comment with previous line.\n  comment_002               |         55 | Ensure proper alignment of comment with previous line.\n  comment_003               |     76-256 | Inconsistent alignment of comments within process.\n  sequential_005            |      87-93 | Inconsistent alignment of \"<=\" in group of lines.\n  sequential_005            |    102-103 | Inconsistent alignment of \"<=\" in group of lines.\n  sequential_005            |    105-108 | Inconsistent alignment of \"<=\" in group of lines.\n  sequential_005            |    110-113 | Inconsistent alignment of \"<=\" in group of lines.\n  sequential_005            |    115-118 | Inconsistent alignment of \"<=\" in group of lines.\n  sequential_005            |    120-124 | Inconsistent alignment of \"<=\" in group of lines.\n  sequential_005            |    129-133 | Inconsistent alignment of \"<=\" in group of lines.\n  sequential_005            |    160-161 | Inconsistent alignment of \"<=\" in group of lines.\n  sequential_005            |    173-174 | Inconsistent alignment of \"<=\" in group of lines.\n  comment_002               |        183 | Ensure proper alignment of comment with previous line.\n  sequential_005            |    225-226 | Inconsistent alignment of \"<=\" in group of lines.\n  sequential_005            |    238-239 | Inconsistent alignment of \"<=\" in group of lines.\nPhase 6... Not executed\nPhase 7... Not executed\n==============\nTotal Rules Checked: 204\nTotal Failures:      523\n```\n\n## Configuring\n\nAny attribute of any rule can be configured by using the --configuration option and a JSON file.\nThis is the basic form of a configuration file: \n\n```json\n{\n    \"rule\":{\n        \"global\":{\n            \"attributeName\":\"AttributeValue\" \n        },\n        \"ruleId_ruleNumber\":{\n            \"attributeName\":\"AttributeValue\" \n        }\n    }\n}\n```\n\n### Example Configuration: Disabling a rule\n\nBelow is an example of a JSON file which disables the rule **entity_004**\n\n```json\n{\n    \"rule\":{\n        \"entity_004\":{\n            \"disable\":\"True\"\n        }\n    }\n}\n```\n\n### Example Configuration: Setting the indent increment size\n\nThe indent increment size is the number of spaces an indent level takes.\nIt can be configured on an per rule basis...\n\n```json\n{\n    \"rule\":{\n        \"entity_004\":{\n            \"indentSize\":4\n        }\n    }\n}\n```\n\n...or configured for every rule using **global**:\n\n\n```json\n{\n    \"rule\":{\n        \"global\":{\n            \"indentSize\":4\n        }\n    }\n}\n```\n\nThe **global** value will be overridden if the same attribute is specified for an individual rule.\n\n## Running Tests\n\nYou can run all the tests at the top level by invoking the following command...\n\n```\n$ python setup.py test\nrunning test\nSearching for nose\n.\n.\n.\n\n----------------------------------------------------------------------\nRan 578 tests in 0.364s\n\nOK\n```\n...or...\n```\n$ python -m unittest discover\nn----------------------------------------------------------------------\nRan 578 tests in 0.072s\n\nOK\n```\n\n\n## Local rules\n\nVSG supports customization by allowing localized rules.\nThis is simply a directory with an __init__.py file and one or more python files.\nThe files should follow the same structure and naming convention as the rules found in the vsg/rules directory.\n\nThe localized rules will be used when the -l command line argument is given.\n\n## Phases\n\nThe rules are grouped together and ran in phases.\nIf issues are found during a phase, then successive phases will not execute.\n\n### Phase 1 - Structural\n\nThis phase checks the structure of VHDL statements.\nThis ensures the VHDL is structured properly for future phases.\n\n### Phase 2 - Whitespace\n\nThis phase checks whitespace rules.\nHowever, this does not include indentation.\n\n### Phase 3 - Vertical Spacing\n\nThis phase checks all vertical spacing requirements are met.\n\n### Phase 4 - Indentation\n\nThis phase checks all indentation rules\n\n### Phase 5 - Alignment\n\nThis phase checks all alignment rules\n\n### Phase 6 - Capitalization\n\nThis phase checks capitalization rules\n\n### Phase 7 - Naming conventions\n\nThis phase checks naming restrictions for signals, constants, ports, etc...\n\n",
    "docs_url": null,
    "download_url": "https://github.com/jeremiah-c-leary/vhdl-style-guide",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jeremiah-c-leary/vhdl-style-guide",
    "keywords": "vhdl",
    "license": "GNU General Public License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vsg",
    "platform": "",
    "project_url": "https://pypi.org/project/vsg/",
    "release_url": "https://pypi.org/project/vsg/0.5/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "VHDL Style Guide",
    "version": "0.5"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "284aaa8dca100a3c763de3409748252b",
          "sha256": "ad23bbfcb0d0b7326ce5087cfc78b16f925aa0eecc29ca3c74f263a1ed242e20"
        },
        "downloads": -1,
        "filename": "vsg-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "284aaa8dca100a3c763de3409748252b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26177,
        "upload_time": "2017-11-11T17:44:06",
        "url": "https://files.pythonhosted.org/packages/cb/56/a1d14c14ce60ea6480b6181772977efe967fbf3e2c9bd9ffe6059f981063/vsg-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0ef0316d34559b81691fb9ab287e6b94",
          "sha256": "56743333df127787e77d524ac335a05665fbf8ccd6353936aed42f6993aab661"
        },
        "downloads": -1,
        "filename": "vsg-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0ef0316d34559b81691fb9ab287e6b94",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30562,
        "upload_time": "2017-11-19T21:49:19",
        "url": "https://files.pythonhosted.org/packages/bc/65/1573ece76adaa5111b73f2334864c667b77cc7bddf06bcc5d08e32abafed/vsg-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "17a3cb3b5c5d72d1fbb9974c5ddc7b16",
          "sha256": "b9ec7e35df626eda6ebc3f964244342314833d428b2d112e5c74b01eaa69b0e2"
        },
        "downloads": -1,
        "filename": "vsg-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "17a3cb3b5c5d72d1fbb9974c5ddc7b16",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 61915,
        "upload_time": "2017-11-27T00:04:16",
        "url": "https://files.pythonhosted.org/packages/a0/a1/fc5670df4cf7ded297596fdb1af827e3a13c589500264b06e585b56af32d/vsg-0.3.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6f38b740c709e061862b3463c69457ab",
          "sha256": "764ae3fe7854d590e38ddf29d813ccf014ba10b25b8e7a78842b58dceb4df538"
        },
        "downloads": -1,
        "filename": "vsg-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6f38b740c709e061862b3463c69457ab",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 65715,
        "upload_time": "2017-12-03T17:00:43",
        "url": "https://files.pythonhosted.org/packages/d5/b9/ebec8b912ccd1d6893f17a84b05650294c0c4086044533f5f8975cf5f912/vsg-0.4.tar.gz"
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5e8f0c6e30a4839966c9ce398df48cc1",
          "sha256": "5bb5fbf89e7b2bfa70d0ed2137791c72bf8f830091142be663336d4ce7005a72"
        },
        "downloads": -1,
        "filename": "vsg-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5e8f0c6e30a4839966c9ce398df48cc1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 68753,
        "upload_time": "2017-12-10T14:40:26",
        "url": "https://files.pythonhosted.org/packages/4d/00/f953b25e300c65de1aafb4ec555f08ff9d063234c350de67abbac766610a/vsg-0.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5e8f0c6e30a4839966c9ce398df48cc1",
        "sha256": "5bb5fbf89e7b2bfa70d0ed2137791c72bf8f830091142be663336d4ce7005a72"
      },
      "downloads": -1,
      "filename": "vsg-0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "5e8f0c6e30a4839966c9ce398df48cc1",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 68753,
      "upload_time": "2017-12-10T14:40:26",
      "url": "https://files.pythonhosted.org/packages/4d/00/f953b25e300c65de1aafb4ec555f08ff9d063234c350de67abbac766610a/vsg-0.5.tar.gz"
    }
  ]
}