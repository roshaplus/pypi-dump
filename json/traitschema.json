{
  "info": {
    "author": "Michael V. DePalatis",
    "author_email": "mike@depalatis.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python"
    ],
    "description": "traitschema\n===========\n\n.. image:: https://travis-ci.org/mivade/traitschema.svg?branch=master\n    :target: https://travis-ci.org/mivade/traitschema\n\n.. image:: https://codecov.io/gh/mivade/traitschema/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/mivade/traitschema\n\n.. image:: https://img.shields.io/github/release/mivade/traitschema.svg\n    :target: https://github.com/mivade/traitschema\n\nCreate serializable, type-checked schema using traits_ and Numpy. A typical use\ncase involves saving several Numpy arrays of varying shape and type.\n\n.. _traits: http://docs.enthought.com/traits/\n\n\nDefining schema\n---------------\n\n.. note::\n\n    The following assumes a basic familiarity with the ``traits`` package. See\n    its `documentation <http://docs.enthought.com/traits/>`_ for details.\n\nIn order to be able to properly serialize data, non-scalar traits should be\ndeclared as a ``traits.api.Array`` type. Example:\n\n.. code-block:: python\n\n    import numpy as np\n    from traits.api import Array, String\n    from traitschema import Schema\n\n    class NamedMatrix(Schema):\n        name = String()\n        data = Array(dtype=np.float64)\n\n    matrix = NamedMatrix(name=\"name\", data=np.random.random((8, 8)))\n\n\nSaving and loading\n------------------\n\nData can be stored in the following formats:\n\n* HDF5 via ``h5py``\n* JSON via the standard library ``json`` module\n* Numpy ``npz`` format\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/mivade/traitschema",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "traitschema",
    "platform": "",
    "project_url": "https://pypi.org/project/traitschema/",
    "release_url": "https://pypi.org/project/traitschema/1.1.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Serializable schema using traits",
    "version": "1.1.1"
  },
  "releases": {
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "41941207b9394026746bc54d0ef153e7",
          "sha256": "82c959eb4e288679d8855b43b668a7331f76fa6d0ebd1f05187226fd768f235f"
        },
        "downloads": -1,
        "filename": "traitschema-1.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41941207b9394026746bc54d0ef153e7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 6129,
        "upload_time": "2018-01-20T16:03:08",
        "url": "https://files.pythonhosted.org/packages/40/54/172211bc75a2bff5334263d3a84df1dfeb1be2349e5456bbed545754298f/traitschema-1.1.1-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "41941207b9394026746bc54d0ef153e7",
        "sha256": "82c959eb4e288679d8855b43b668a7331f76fa6d0ebd1f05187226fd768f235f"
      },
      "downloads": -1,
      "filename": "traitschema-1.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "41941207b9394026746bc54d0ef153e7",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 6129,
      "upload_time": "2018-01-20T16:03:08",
      "url": "https://files.pythonhosted.org/packages/40/54/172211bc75a2bff5334263d3a84df1dfeb1be2349e5456bbed545754298f/traitschema-1.1.1-py2.py3-none-any.whl"
    }
  ]
}