{
  "info": {
    "author": "Ryosuke Fukatani",
    "author_email": "nannyakannya@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "|Build Status|\r\n\r\nstacked\\_generalization\r\n=======================\r\n\r\nImplemented machine learning ***stacking technic[1]*** as handy library\r\nin Python. Feature weighted linear stacking is also available. (See\r\nhttps://github.com/fukatani/stacked\\_generalization/tree/master/stacked\\_generalization/example.)\r\n\r\nIncluding simple model cache system Joblibed claasifier and Joblibed\r\nRegressor.\r\n\r\nFeature\r\n-------\r\n\r\n1) Any scikit-learn model is availavle for Stage 0 and Stage 1 model. And stacked model itself has the same interface as scikit-learn library.\r\n''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\r\n\r\nex.\r\n\r\n.. code:: python\r\n\r\n    from stacked_generalization.lib.stacking import StackedClassifier\r\n    from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\r\n    from sklearn.linear_model import LogisticRegression, RidgeClassifier\r\n    from sklearn import datasets, metrics\r\n    iris = datasets.load_iris()\r\n\r\n    # Stage 1 model\r\n    bclf = LogisticRegression(random_state=1)\r\n\r\n    # Stage 0 models\r\n    clfs = [RandomForestClassifier(n_estimators=40, criterion = 'gini', random_state=1),\r\n            GradientBoostingClassifier(n_estimators=25, random_state=1),\r\n            RidgeClassifier(random_state=1)]\r\n\r\n    # same interface as scikit-learn\r\n    sl = StackedClassifier(bclf, clfs)\r\n    sl.fit(iris.target, iris.data)\r\n    score = metrics.accuracy_score(iris.target, classifier.predict(iris.data))\r\n    print(\"Accuracy: %f\" % score)\r\n\r\nMore detail example is here.\r\nhttps://github.com/fukatani/stacked\\_generalization/blob/master/stacked\\_generalization/example/cross\\_validation\\_for\\_iris.py\r\n\r\nhttps://github.com/fukatani/stacked\\_generalization/blob/master/stacked\\_generalization/example/simple\\_regression.py\r\n\r\nStacked learning model itself is used as sk-learn model, so you can\r\nreplace model such as *RandomForestClassifier* to *stacked model* easily\r\nin your scripts.\r\n\r\n2) Evaluation model by out-of-bugs score.\r\n'''''''''''''''''''''''''''''''''''''''''\r\n\r\nStacking technic itself uses CV to stage0. So if you use CV for entire\r\nstacked model, ***each stage 0 model are fitted n\\_folds squared\r\ntimes.*** Sometimes its computational cost can be significent,therefore\r\nwe implemented CV only for stage1[2].\r\n\r\nFor example, when we get 3 blends (stage0 prediction), 2 blends are used\r\nfor stage 1 fitting. The remaining one blend is used for model test.\r\nRepitation this cycle for all 3 blends, and averaging scores, we can get\r\noob (out-of-bugs) score ***with only n\\_fold times stage0 fitting.***\r\n\r\nex.\r\n\r\n.. code:: python\r\n\r\n    sl = StackedClassifier(bclf, clfs, oob_score_flag=True)\r\n    sl.fit(iris.target, iris.data)\r\n    print(\"Accuracy: %f\" % sl.oob_score_)\r\n\r\n3) Caching stage1 blend\\_data and trained model. (optional)\r\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    sl = StackedClassifier(bclf, clfs, save_stage0=True, save_dir='stack_temp')\r\n\r\nFeature of Joblibed Classifier / Regressor\r\n------------------------------------------\r\n\r\nJoblibed Classifier / Regressor is simple cache system for scikit-learn\r\nmachine learning model. You can use it easily by minimum code\r\nmodification.\r\n\r\nAt first fitting and prediction, model calculation is performed\r\nnormally. At the same time, model fitting result and prediction result\r\nare saved as *.pkl* and *.csv* respectively.\r\n\r\n**At second fitting and prediction, if cache is existence, model and\r\nprediction results will be loaded from cache and never recalculation.**\r\n\r\ne.g.\r\n\r\n.. code:: python\r\n\r\n    from sklearn import datasets\r\n    from sklearn.cross_validation import StratifiedKFold\r\n    from sklearn.ensemble import RandomForestClassifier\r\n    from stacked_generalization.lib.joblibed import JoblibedClassifier\r\n\r\n    # Load iris\r\n    iris = datasets.load_iris()\r\n\r\n    # Declaration of Joblibed model\r\n    rf = RandomForestClassifier(n_estimators=40)\r\n    clf = JoblibedClassifier(rf, \"rf\")\r\n\r\n    train_idx, test_idx = list(StratifiedKFold(iris.target, 3))[0]\r\n\r\n    xs_train = iris.data[train_idx]\r\n    y_train = iris.target[train_idx]\r\n    xs_test = iris.data[test_idx]\r\n    y_test = iris.target[test_idx]\r\n\r\n    # Need to indicate sample for discriminating cache existence.\r\n    clf.fit(xs_train, y_train, train_idx)\r\n    score = clf.score(xs_test, y_test, test_idx)\r\n\r\nSee also\r\nhttps://github.com/fukatani/stacked\\_generalization/blob/master/stacked\\_generalization/lib/joblibed.py\r\n\r\nSoftware Requirement\r\n--------------------\r\n\r\n-  Python (2.7 or later)\r\n-  scikit-learn\r\n\r\nInstallation\r\n------------\r\n\r\n::\r\n\r\n    pip install stacked_generalization\r\n\r\nLicense\r\n-------\r\n\r\nMIT License. (http://opensource.org/licenses/mit-license.php)\r\n\r\nCopyright\r\n---------\r\n\r\nCopyright (C) 2016, Ryosuke Fukatani\r\n\r\nMany part of the implementation of stacking is based on the following.\r\nThanks!\r\nhttps://github.com/log0/vertebral/blob/master/stacked\\_generalization.py\r\n\r\nOther\r\n-----\r\n\r\nAny contributions (implement, documentation, test or idea...) are\r\nwelcome.\r\n\r\nReferences\r\n----------\r\n\r\n[1] L. Breiman, \"Stacked Regressions\", Machine Learning, 24, 49-64\r\n(1996). [2] J. Sill1 et al, \"Feature Weighted Linear Stacking\",\r\nhttps://arxiv.org/abs/0911.0460, 2009.\r\n\r\n.. |Build Status| image:: https://travis-ci.org/fukatani/stacked_generalization.svg?branch=master\r\n   :target: https://travis-ci.org/fukatani/stacked_generalization",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/fukatani/stacked_generalization",
    "keywords": "Stacking,Machine Learning",
    "license": "Apache License 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "stacked_generalization",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/stacked_generalization/",
    "release_url": "https://pypi.org/project/stacked_generalization/0.0.4/",
    "requires_python": null,
    "summary": "Machine Learning Stacking Util",
    "version": "0.0.4"
  },
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1160d97c3efa2ff05c2155154ef2e6d3",
          "sha256": "3f7a7f5f031ec271105a6b87c7bbd5357d8c90fbf369d25dedb4d4c1ea61722f"
        },
        "downloads": 124,
        "filename": "stacked_generalization-0.0.3.zip",
        "has_sig": false,
        "md5_digest": "1160d97c3efa2ff05c2155154ef2e6d3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22407,
        "upload_time": "2016-07-22T14:48:04",
        "url": "https://files.pythonhosted.org/packages/a6/21/748a6470b0b8f7c2b8ac1df7a28a84d71ba60e1ed3a247b0a02b26cf5f8a/stacked_generalization-0.0.3.zip"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "24be68ccad344b42e4788f4656c805ff",
          "sha256": "0313972921b0d8343d847bacf1e6602fb8013f8004502fc504242d3f3dc18d3c"
        },
        "downloads": 381,
        "filename": "stacked_generalization-0.0.4.zip",
        "has_sig": false,
        "md5_digest": "24be68ccad344b42e4788f4656c805ff",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21991,
        "upload_time": "2016-08-13T06:37:01",
        "url": "https://files.pythonhosted.org/packages/d0/99/e42d99355f00068aa2f8eef5f88c1610558f10217e2704067b5134629397/stacked_generalization-0.0.4.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "24be68ccad344b42e4788f4656c805ff",
        "sha256": "0313972921b0d8343d847bacf1e6602fb8013f8004502fc504242d3f3dc18d3c"
      },
      "downloads": 381,
      "filename": "stacked_generalization-0.0.4.zip",
      "has_sig": false,
      "md5_digest": "24be68ccad344b42e4788f4656c805ff",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 21991,
      "upload_time": "2016-08-13T06:37:01",
      "url": "https://files.pythonhosted.org/packages/d0/99/e42d99355f00068aa2f8eef5f88c1610558f10217e2704067b5134629397/stacked_generalization-0.0.4.zip"
    }
  ]
}