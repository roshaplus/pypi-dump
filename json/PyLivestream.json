{
  "info": {
    "author": "Michael Hirsch, Ph.D.",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Multimedia :: Graphics :: Capture :: Screen Capture",
      "Topic :: Multimedia :: Sound/Audio :: Capture/Recording"
    ],
    "description": ".. image:: https://travis-ci.org/scivision/PyLivestream.svg?branch=master\n    :target: https://travis-ci.org/scivision/PyLivestream\n\n.. image:: https://coveralls.io/repos/github/scivision/PyLivestream/badge.svg?branch=master\n    :target: https://coveralls.io/github/scivision/PyLivestream?branch=master\n\n.. image:: https://img.shields.io/pypi/pyversions/PyLivestream.svg\n  :target: https://pypi.python.org/pypi/PyLivestream\n  :alt: Python versions (PyPI)\n\n.. image::  https://img.shields.io/pypi/format/PyLivestream.svg\n  :target: https://pypi.python.org/pypi/PyLivestream\n  :alt: Distribution format (PyPI)\n\n.. image:: https://api.codeclimate.com/v1/badges/b6557d474ec050e74629/maintainability\n   :target: https://codeclimate.com/github/scivision/ffmpeg-youtube-live/maintainability\n   :alt: Maintainability\n\n==========================================\nPython scripted livestreaming using FFmpeg\n==========================================\n\nStreams to one or **multiple** streaming sites simultaneously.\nFFmpeg is used from Python ``subprocess`` to stream to Facebook Live, YouTube Live, Periscope, Twitch, Mixer, Ustream, Vimeo and more for streaming broadcasts.\nThe Python scripts compute good streaming parameters, and emit the command used so you can just copy and paste in the future if you wish.\nWorks on any OS (Mac, Linux, Windows).\nUses an ``.ini`` file to adjust all parameters.\n\n:FFmpeg: >= 3.0 required\n:Python: >= 3.5 required\n\n\n.. contents::\n\nInstall\n=======\n::\n\n    python -m pip install -e .\n\n\nStream Setup\n============\n\nThe ``.ini`` file contains parameters relevant to your stream.\nFind device names with commands like:\n\n* Windows: ``ffmpeg -list_devices true -f dshow -i dummy``\n* Mac: ``ffmpeg -f avfoundation -list_devices true -i \"\"``\n* Linux: ``v4l2-ctl --list-devices``\n\nI will describe usage for each of YouTube Live, Facebook Live, Periscope and Twitch.\n\nYouTube Live\n------------\n\n1. `configure  <https://www.youtube.com/live_dashboard>`_ YouTube Live.\n2. Run Python script and chosen input will stream on YouTube Live.\n\n::\n\n    python Screenshare.py stream.ini youtube\n\n\nFacebook Live\n-------------\n\n1. configure your Facebook Live stream, get stream ID from `https://www.facebook.com/live/create <https://www.facebook.com/live/create>`_\n2. Run Python script for Facebook with chosen input\n\n::\n\n    python Screenshare.py stream.ini facebook\n\n\nPeriscope\n---------\n\n1. create a new stream by EITHER:\n\n   * from phone Periscope app, go to Profile -> Settings -> Periscope Producer and see your Stream Key. The \"checking source\" button will go to \"preview stream\" once you do step #2.\n   * from computer web browser, go to `https://www.periscope.tv/account/producer <https://www.periscope.tv/account/producer>`_ and Create New Source.\n2. Run Python script for Periscope with chosen input\n\n::\n\n    python Screenshare.py stream.ini periscope\n\nI prefer using the Phone method as then the phone is a \"second screen\" where I can see if the stream is lagging, and if I \"leave broadcast\" and come back in, I can comment from my phone etc.\n\n\nTwitch\n------\n\n1. create stream from `Twitch Dashboard <http://www.twitch.tv/broadcast/dashboard>`_\n2. Run Python script for Twitch with chosen input\n\nIf you are not in the Northeast US, edit `stream.ini` to have the `closest server <http://bashtech.net/twitch/ingest.php>`_.\n\n\nUsage\n=========\n\n* ``stream.ini`` is setup for your computer and desired parameters\n* ``site`` is ``facebook``, ``periscope`` or ``youtube``\n\n\n\nWebcam\n------\nAudio is included::\n\n    python Webcam.py stream.ini site\n\n\nScreen Share Livestream\n-----------------------\nAudio is included::\n\n    python Screenshare.py stream.ini site(s)\n\nStream to multiple sites, in this example Periscope and YouTube Live simultaneously::\n\n    python Screenshare.py stream.ini youtube periscope\n\n\nFile Input\n----------\n\n\nLoop single video endlessly\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n::\n\n    python FileLoop.py stream.ini site videofile\n\n\nseveral video files\n~~~~~~~~~~~~~~~~~~~\nGlob list of video files to stream::\n\n    python FileGlob.py stream.ini site path pattern\n\n-loop       optionally loop endlessly the globbed file list\n\n\nstream all videos in directory\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nExample: all AVI videos in directory ``~/Videos``::\n\n    python FileGlob.py stream.ini youtube ~/Videos \"*.avi\"\n\nstream endlessly looping videos\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nExample: all AVI videos in ``~/Videos`` are endlessly looped::\n\n    python FileGlob.py stream.ini youtube ~/Videos \"*.avi\" -loop\n\n\nstream all audio files in directory\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nGlob list of video files to stream.\nMust include a static image (could be your logo)::\n\n    python FileGlob.py stream.ini site path pattern -i image\n\npath      path to where video files are\npattern   e.g. ``*.avi``  pattern matching video files\n-i        filename of image to use as stream background\n\nExample: stream all .mp3 audio under ``~/Library`` directory::\n\n    python FileGlob.py stream.ini youtube ~/Library \"*.mp3\" -i mylogo.jpg\n\n\nScreen capture to disk\n----------------------\nThis script saves your screen capture to a file on your disk::\n\n    python ScreenCapture2disk.py stream.ini myvid.avi\n\n\n\nUtilities\n=========\n\n* ``PyLivestream.get_framerate(vidfn)`` gives the frames/sec of a video file.\n* ``PyLivestream.get_resolution(vidfn)`` gives the resolution (widthxheight) of video file.\n\n\nNotes\n=====\n\n* Linux requires X11, not Wayland (choose at login)\n* FFmpeg Ubuntu `PPA <https://launchpad.net/~mc3man/+archive/ubuntu/trusty-media>`_\n* `Reference webpage <https://www.scivision.co/youtube-live-ffmpeg-livestream/>`_\n* `Test videos for looping/globbing <http://www.divx.com/en/devices/profiles/video>`_\n\nFFmpeg References\n-----------------\n\n* `streaming <https://trac.ffmpeg.org/wiki/EncodingForStreamingSites>`_\n* `webcam <https://trac.ffmpeg.org/wiki/Capture/Webcam>`_\n* `webcam overlay <https://trac.ffmpeg.org/wiki/EncodingForStreamingSites#Withwebcamoverlay>`_\n\nWindows\n~~~~~~~\n* `DirectShow <https://trac.ffmpeg.org/wiki/DirectShow>`_ device selection\n* DirectShow `examples <https://ffmpeg.org/ffmpeg-devices.html#Examples-4>`_\n\nStream References\n-----------------\n\n* Twitch `parameters <https://help.twitch.tv/customer/portal/articles/1253460-broadcast-requirements>`_\n* Twitch `servers <http://bashtech.net/twitch/ingest.php>`_\n* Periscope `parameters <https://www.pscp.tv/help/external-encoders>`_\n* YouTube Live `parameters <https://support.google.com/youtube/answer/2853702>`_\n* Facebook Live `parameters <https://www.facebook.com/facebookmedia/get-started/live>`_\n* Mixer `parameters <https://watchbeam.zendesk.com/hc/en-us/articles/210090606-Stream-Settings-the-basics>`_\n* Mixer `server list <https://watchbeam.zendesk.com/hc/en-us/articles/209659883-How-to-change-your-Ingest-Server>`_\n* Ustream `parameters <https://support.ustream.tv/hc/en-us/articles/207852117-Internet-connection-and-recommended-encoding-settings>`_\n* Vimeo `config <https://help.vimeo.com/hc/en-us/articles/115012811168>`_\n* Vimeo `parameters <https://help.vimeo.com/hc/en-us/articles/115012811208-Encoder-guides>`_\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/scivision/PyLivestream",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyLivestream",
    "platform": "",
    "project_url": "https://pypi.org/project/PyLivestream/",
    "release_url": "https://pypi.org/project/PyLivestream/1.3.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Easy streaming using FFmpeg to YouTube Live, Periscope, Facebook Live, Twitch, ...",
    "version": "1.3.0"
  },
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2e01de565fbb6413715088a15c085674",
          "sha256": "7b724e3b10fa49f595d09ba7eb256dae58baedfc5f1416b5b0e82529014081c9"
        },
        "downloads": -1,
        "filename": "PyLivestream-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e01de565fbb6413715088a15c085674",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 11004,
        "upload_time": "2018-01-30T15:19:53",
        "url": "https://files.pythonhosted.org/packages/4a/ef/86ea66680af3dcca1c2f60958a3cfcf1948ebcde331035b2c2329796c9ec/PyLivestream-1.1.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e981b6a332d143c79a288a9089e994aa",
          "sha256": "e1e733fbd53bc1eebc37d7e8d73b0e120b3e712113522c7fe41d5a982f18fef6"
        },
        "downloads": -1,
        "filename": "PyLivestream-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e981b6a332d143c79a288a9089e994aa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5942,
        "upload_time": "2018-01-30T15:19:52",
        "url": "https://files.pythonhosted.org/packages/04/d8/07ddeb61a679c37128270d8f3888284df9ebc509a88d69c58a87b4e4b715/PyLivestream-1.1.0.tar.gz"
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6319d1b804e3e84189c22574039a3602",
          "sha256": "6448f056aef1326214abb6ed60b118b504a46e9125d1a1ce77e5623cdca149f9"
        },
        "downloads": -1,
        "filename": "PyLivestream-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6319d1b804e3e84189c22574039a3602",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 11050,
        "upload_time": "2018-01-31T06:43:24",
        "url": "https://files.pythonhosted.org/packages/5d/74/3c55c2a1afd0b0888d18982caba40e8d1e04c7dadfeac894060073110818/PyLivestream-1.3.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4fe07381039ec229c678115e0e103fd2",
          "sha256": "ac4695650cd9f1af5b0bbb148974f5340f50ec8981c9a42f6030315ae676a627"
        },
        "downloads": -1,
        "filename": "PyLivestream-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4fe07381039ec229c678115e0e103fd2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7757,
        "upload_time": "2018-01-31T06:43:23",
        "url": "https://files.pythonhosted.org/packages/80/e5/d7345797ddb167f14697437cfc642ef893957310e985b2768e539f45bb8a/PyLivestream-1.3.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "6319d1b804e3e84189c22574039a3602",
        "sha256": "6448f056aef1326214abb6ed60b118b504a46e9125d1a1ce77e5623cdca149f9"
      },
      "downloads": -1,
      "filename": "PyLivestream-1.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6319d1b804e3e84189c22574039a3602",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 11050,
      "upload_time": "2018-01-31T06:43:24",
      "url": "https://files.pythonhosted.org/packages/5d/74/3c55c2a1afd0b0888d18982caba40e8d1e04c7dadfeac894060073110818/PyLivestream-1.3.0-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "4fe07381039ec229c678115e0e103fd2",
        "sha256": "ac4695650cd9f1af5b0bbb148974f5340f50ec8981c9a42f6030315ae676a627"
      },
      "downloads": -1,
      "filename": "PyLivestream-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4fe07381039ec229c678115e0e103fd2",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7757,
      "upload_time": "2018-01-31T06:43:23",
      "url": "https://files.pythonhosted.org/packages/80/e5/d7345797ddb167f14697437cfc642ef893957310e985b2768e539f45bb8a/PyLivestream-1.3.0.tar.gz"
    }
  ]
}