{
  "info": {
    "author": "Nasim Rahaman",
    "author_email": "nasim.rahaman@iwr.uni-heidelberg.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "\n=======\nInferno\n=======\n\n\n\n.. image:: https://img.shields.io/pypi/v/inferno.svg\n        :target: https://pypi.python.org/pypi/pytorch-inferno\n\n.. image:: https://img.shields.io/travis/DerThorsten/inferno.svg\n        :target: https://travis-ci.org/DerThorsten/inferno-1\n\n.. image:: https://readthedocs.org/projects/pytorch-inferno/badge/?version=latest\n        :target: http://pytorch-inferno.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status               \n\n.. image:: https://pyup.io/repos/github/nasimrahaman/inferno/shield.svg\n     :target: https://pyup.io/repos/github/nasimrahaman/inferno/\n     :alt: Updates\n\n\n\n.. image:: http://svgshare.com/i/2j7.svg\n\n\n\n\n\nInferno is a little library providing utilities and convenience functions/classes around \n`PyTorch <https://github.com/pytorch/pytorch>`_. \nIt's a work-in-progress, but the first release is underway! \n\n\n\n* Free software: Apache Software License 2.0\n* Documentation: https://pytorch-inferno.readthedocs.io (Work in progress).\n\n\nFeatures\n--------\n\nCurrent features include: \n  *   a basic \n      `Trainer class <https://github.com/nasimrahaman/inferno/tree/master/docs#preparing-the-trainer>`_ \n      to encapsulate the training boilerplate (iteration/epoch loops, validation and checkpoint creation),\n  *   a `graph API <https://github.com/nasimrahaman/inferno/blob/master/inferno/extensions/containers/graph.py>`_ for building models with complex architectures, powered by `networkx <https://github.com/networkx/networkx>`_. \n  *   `easy data-parallelism <https://github.com/nasimrahaman/inferno/tree/master/docs#using-gpus>`_ over multiple GPUs, \n  *   `a submodule <https://github.com/nasimrahaman/inferno/blob/master/inferno/extensions/initializers>`_ for `torch.nn.Module`-level parameter initialization,\n  *   `a submodule <https://github.com/nasimrahaman/inferno/blob/master/inferno/io/transform>`_ for data preprocessing / transforms,\n  *   `support <https://github.com/nasimrahaman/inferno/tree/master/docs#using-tensorboard>`_ for `Tensorboard <https://www.tensorflow.org/get_started/summaries_and_tensorboard>`_ (best with atleast `tensorflow-cpu <https://github.com/tensorflow/tensorflow>`_ installed)\n  *   `a callback API <https://github.com/nasimrahaman/inferno/tree/master/docs#setting-up-callbacks>`_ to enable flexible interaction with the trainer,\n  *   `various utility layers <https://github.com/nasimrahaman/inferno/tree/master/inferno/extensions/layers>`_ with more underway,\n  *   `a submodule <https://github.com/nasimrahaman/inferno/blob/master/inferno/io/volumetric>`_ for volumetric datasets, and more!\n\n\n\n\n\n.. code:: python\n\n  import torch.nn as nn\n  from inferno.io.box.cifar10 import get_cifar10_loaders\n  from inferno.trainers.basic import Trainer\n  from inferno.trainers.callbacks.logging.tensorboard import TensorboardLogger\n  from inferno.extensions.layers.convolutional import ConvELU2D\n  from inferno.extensions.layers.reshape import Flatten\n\n  # Fill these in:\n  LOG_DIRECTORY = '...'\n  SAVE_DIRECTORY = '...'\n  DATASET_DIRECTORY = '...'\n  DOWNLOAD_CIFAR = True\n  USE_CUDA = True\n\n  # Build torch model\n  model = nn.Sequential(\n      ConvELU2D(in_channels=3, out_channels=256, kernel_size=3),\n      nn.MaxPool2d(kernel_size=2, stride=2),\n      ConvELU2D(in_channels=256, out_channels=256, kernel_size=3),\n      nn.MaxPool2d(kernel_size=2, stride=2),\n      ConvELU2D(in_channels=256, out_channels=256, kernel_size=3),\n      nn.MaxPool2d(kernel_size=2, stride=2),\n      Flatten(),\n      nn.Linear(in_features=(256 * 4 * 4), out_features=10),\n      nn.Softmax()\n  )\n\n  # Load loaders\n  train_loader, validate_loader = get_cifar10_loaders(DATASET_DIRECTORY,\n                                                      download=DOWNLOAD_CIFAR)\n\n  # Build trainer\n  trainer = Trainer(model) \\\n    .build_criterion('CrossEntropyLoss') \\\n    .build_metric('CategoricalError') \\\n    .build_optimizer('Adam') \\\n    .validate_every((2, 'epochs')) \\\n    .save_every((5, 'epochs')) \\\n    .save_to_directory(SAVE_DIRECTORY) \\\n    .set_max_num_epochs(10) \\\n    .build_logger(TensorboardLogger(log_scalars_every=(1, 'iteration'),\n                                    log_images_every='never'), \n                  log_directory=LOG_DIRECTORY)\n\n  # Bind loaders\n  trainer \\\n      .bind_loader('train', train_loader) \\\n      .bind_loader('validate', validate_loader)\n\n  if USE_CUDA:\n    trainer.cuda()\n\n  # Go!\n  trainer.fit()\n\n\n\n\nTo visualize the training progress, navigate to `LOG_DIRECTORY` and fire up tensorboard with \n\n.. code:: bash\n\n  $ tensorboard --logdir=${PWD} --port=6007\n\n\nand navigate to `localhost:6007` with your browser.\n\n\n\nFuture Features: \n------------------------\nPlanned features include: \n  *   a class to encapsulate Hogwild! training over multiple GPUs, \n  *   minimal shape inference with a dry-run,\n  *   proper packaging and documentation,\n  *   cutting-edge fresh-off-the-press implementations of what the future has in store. :)\n\n\n\nCredits\n---------\nAll contributors are listed here_. \n\n.. _here: https://pytorch-inferno.readthedocs.io/en/latest/authors.html\n\nThis packag was partially generated with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template + lots of work by Thorsten. \n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n\n=======\nHistory\n=======\n\n0.1.0 (2017-08-24)\n------------------\n\n* First early release on PyPI\n\n0.1.1 (2017-08-24)\n------------------\n\n* Version Increment\n    \n0.1.2 (2017-08-24)\n------------------\n\n* Version Increment\n\n\n0.1.3 (2017-08-24)\n------------------\n\n* Updated Documentation\n\n0.1.4 (2017-08-24)\n------------------\n\n* travis auto-deployment on pypi\n\n\n0.1.5 (2017-08-24)\n------------------\n\n* travis changes to run unittest\n\n\n0.1.6 (2017-08-24)\n------------------\n\n* travis missing packages for unittesting\n* fixed inconsistent version numbers\n\n0.1.7 (2017-08-25)\n------------------\n\n* setup.py critical bugix in install procedure\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/nasimrahaman/inferno",
    "keywords": "inferno pytorch torch deep learning cnn deep-pyromania",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytorch_inferno",
    "platform": "",
    "project_url": "https://pypi.org/project/pytorch_inferno/",
    "release_url": "https://pypi.org/project/pytorch_inferno/1.1.6/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Inferno is a little library providing utilities and convenience functions/classes around PyTorch.",
    "version": "1.1.6"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "269de4cb3cfb7f06cdcade86001a6c73",
          "sha256": "fa3a582c2b2f158970cfea458d68671e9ddcfdcfa3b4cdfca0a0229711ef1cfb"
        },
        "downloads": 0,
        "filename": "pytorch_inferno-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "269de4cb3cfb7f06cdcade86001a6c73",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25356,
        "upload_time": "2017-08-24T11:46:50",
        "url": "https://files.pythonhosted.org/packages/4b/06/74b15251495a94bcdc2ac3581f11a6705e9221c21b898edb46fa7ae8bd44/pytorch_inferno-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dbf14f5fafa9d48b84237a7180bca788",
          "sha256": "67c5fc744855e782394ede9c7eb124438b391a04ace0a9b521168d7547093d5b"
        },
        "downloads": 0,
        "filename": "pytorch-inferno-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dbf14f5fafa9d48b84237a7180bca788",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25361,
        "upload_time": "2017-08-24T11:48:47",
        "url": "https://files.pythonhosted.org/packages/0f/3f/fef706f7e5b51f0857e7c99b54624674b6cbf0db805815009d484e3f7136/pytorch-inferno-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "53dc3ae7bf7165f197cbf31a2274e040",
          "sha256": "10ff3906145ae51cdfb974d07ee360c0ac0ac2bc20a4f02cbeea29eb8c7e33d7"
        },
        "downloads": 0,
        "filename": "pytorch-inferno-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "53dc3ae7bf7165f197cbf31a2274e040",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25359,
        "upload_time": "2017-08-24T11:49:02",
        "url": "https://files.pythonhosted.org/packages/cd/06/ea7d3d7f7ee09b6ad7397495bd2344f1cf69d2a83caa1ac397fa5756a4c7/pytorch-inferno-0.1.2.tar.gz"
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "15455d1587ae5236c8d7fb2ce20ff133",
          "sha256": "7293534473b111de766d8ca386659c7dad8d17d2b8b21356ca477c19141d1ab2"
        },
        "downloads": 0,
        "filename": "pytorch-inferno-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "15455d1587ae5236c8d7fb2ce20ff133",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 27094,
        "upload_time": "2017-08-24T14:16:59",
        "url": "https://files.pythonhosted.org/packages/78/6b/daa1eef680f1f4774f8695d07bbba5195fd7dfc367e1c600b41196317ddf/pytorch-inferno-1.1.4.tar.gz"
      }
    ],
    "1.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d2a14de0e832d2a1e304078cd12f81ed",
          "sha256": "23c0299b4814df015a9d8ef4b501748587bdf01f0ebb441ce923c77fd1bd7d37"
        },
        "downloads": 0,
        "filename": "pytorch-inferno-1.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d2a14de0e832d2a1e304078cd12f81ed",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 80196,
        "upload_time": "2017-08-25T08:43:37",
        "url": "https://files.pythonhosted.org/packages/3b/74/f60a4f0b3d90d8f1c3cf7f96a1fb10da6886ebcf518633e70bcda4956ec3/pytorch-inferno-1.1.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d2a14de0e832d2a1e304078cd12f81ed",
        "sha256": "23c0299b4814df015a9d8ef4b501748587bdf01f0ebb441ce923c77fd1bd7d37"
      },
      "downloads": 0,
      "filename": "pytorch-inferno-1.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "d2a14de0e832d2a1e304078cd12f81ed",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 80196,
      "upload_time": "2017-08-25T08:43:37",
      "url": "https://files.pythonhosted.org/packages/3b/74/f60a4f0b3d90d8f1c3cf7f96a1fb10da6886ebcf518633e70bcda4956ec3/pytorch-inferno-1.1.6.tar.gz"
    }
  ]
}