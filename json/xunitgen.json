{
  "info": {
    "author": "Nicolas L\u00e9veill\u00e9",
    "author_email": "nicolas@uucidl.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Travis-CI: https://travis-ci.org/uucidl/uu.xunitgen.svg?branch=master\n\nAbstract\n========\n\n``xunitgen`` is a python module for the simple production of ``xunit``\nor ``junit`` XML files for use in continuous integration. Such as with\n``Jenkins``.\n\nIt converts a stream of timed (start/finish/error) events and convert\nthem into a report.\n\nIt brings / need no dependencies besides an installation of ``Python 2``\nor ``Python 3``.\n\nUsing\n=====\n\nOnce you have added the directory surrounding ``xunitgen`` into your\n``PYTHONPATH``, you can create simple test steps by using the\nxunitgen.Recorder:\n\n.. code:: python\n\n    import xunitgen\n\n    destination = xunitgen.XunitDestination('.')\n\n    with xunitgen.Recorder(destination, 'my-test-suite') as recorder:\n        with recorder.step('a-success') as step:\n            pass\n\n        with recorder.step('a-failing-test') as step:\n            step.error('this step has failed')\n\n        with recorder.step('another-failing-test'):\n            raise Exception('I have failed too!')\n\nWhich will produce a file named my-test-suite.xml under the current\ndirectory\n\nLower level, event API\n----------------------\n\nYou can also use a lower level API (EventReceiver) if you need finer\ncontrol:\n\n.. code:: python\n\n    import xunitgen\n\n    receiver = xunitgen.EventReceiver()\n    receiver.begin_case('a-test', 0, 'foo')\n    receiver.failure('because', 'ExceptionFoo')\n    receiver.end_case('a-test', 9)\n\n    print xunitgen.tostring(receiver.results())\n\nExample (event_trace module)\n----------------------------\n\nThe xunitgen.event_trace module shows an example of using the lower\nlevel API to convert a tracing format to xUnit files. This can be used\nfor instance by C programs/tests to produce test traces without having\nto implement the xUnit format.\n\n*xunitgen/event_traces.py*\n\nContributing\n============\n\nIf you want to make code contributions to ``xunitgen`` here are the\nsteps to follow to get a working development environment:\n\nCreate a virtual environment and activate it\n\n.. code:: example\n\n    $ virtualenv venv\n    $ . venv/bin/activate\n\nInstall development dependencies\n\n.. code:: example\n\n    $ pip install -r dev_requirements.txt\n\nWith the virtual environment active, test your changes before\nsubmitting:\n\n.. code:: example\n\n    $ nosetests -s tests\n\nAdditional Contributors\n=======================\n\n-  Diez Roggisch <dir@ableton.com>\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/uucidl/uu.xunitgen",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xunitgen",
    "platform": "",
    "project_url": "https://pypi.org/project/xunitgen/",
    "release_url": "https://pypi.org/project/xunitgen/1.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Generate xUnit.xml files",
    "version": "1.0.1"
  },
  "releases": {
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4e2ec2ecffa55ba533771458d00b0163",
          "sha256": "62b2a772ec8ba657049030fd2500f7b77d6525ce9e009cf496a4fe242c282e0f"
        },
        "downloads": -1,
        "filename": "xunitgen-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "4e2ec2ecffa55ba533771458d00b0163",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4018,
        "upload_time": "2014-05-26T20:28:47",
        "url": "https://files.pythonhosted.org/packages/cd/df/d5e469925870422f785f8eff54bd7bc05704b0c958cd3cc0ee5f83e0fb29/xunitgen-0.1.6.tar.gz"
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "50195b34e8e13d5f294588afd660e044",
          "sha256": "67fb7dad45009fe8bb0856f588bbde2cb2033d6c4e1ce4a8f9acc9631e8cb597"
        },
        "downloads": -1,
        "filename": "xunitgen-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "50195b34e8e13d5f294588afd660e044",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5277,
        "upload_time": "2017-12-10T12:46:40",
        "url": "https://files.pythonhosted.org/packages/4b/76/ac8242e1df3aae47e501684a1300e168c510a7853ef3c84846af50f90ea3/xunitgen-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "895cd3af21f6737ad04feb2855a62e43",
          "sha256": "4843925ae26a4f4c0f264773cee23c5bc679c1aee694ad7866193fc4d0267898"
        },
        "downloads": -1,
        "filename": "xunitgen-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "895cd3af21f6737ad04feb2855a62e43",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5016,
        "upload_time": "2017-12-10T12:52:39",
        "url": "https://files.pythonhosted.org/packages/c3/df/166de4259e35de65ff368bbc2c1a098fd05831aa5d5a27f37e9cbe19b520/xunitgen-1.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "895cd3af21f6737ad04feb2855a62e43",
        "sha256": "4843925ae26a4f4c0f264773cee23c5bc679c1aee694ad7866193fc4d0267898"
      },
      "downloads": -1,
      "filename": "xunitgen-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "895cd3af21f6737ad04feb2855a62e43",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5016,
      "upload_time": "2017-12-10T12:52:39",
      "url": "https://files.pythonhosted.org/packages/c3/df/166de4259e35de65ff368bbc2c1a098fd05831aa5d5a27f37e9cbe19b520/xunitgen-1.0.1.tar.gz"
    }
  ]
}