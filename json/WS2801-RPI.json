{
  "info": {
    "author": "Markus Kupke",
    "author_email": "kupkemarkus@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Education"
    ],
    "description": "WS2801python_rpi\n================\n\nA python module connecting RPI with WS2801\n------------------------------------------\n\n**This is version 1.0.0.dev4. It is in development. Code may change\nwithout notice.**\n\nIt is based on the spidev module you can find\n`here <https://github.com/doceme/py-spidev>`__.\n\nYou can use it like this:\n\n.. code:: python\n\n    import WS2801_RPI as w\n    s=w.set_led_colors_buffer_list_multi_call\n    w.set_number_of_leds(100)                      # adjust to the number of leds in your project\n    w.s(1)                                         # to let led number 1 shine in white\n    w.flush()                                      # to communicate your settings to the led strip via spi\n\nYou can call set_leds as often as you like before flushing it out. And\nof course you can flush as often as you need to create effects.\n\nOther convenience functions are:\n--------------------------------\n\n-  ``clear()``: turn off all leds. Remember you need to call ``flush()``\n   to see the effect.\n-  ``get_led_colors_buffer_dict()``: Get all rgb values currently in the\n   buffer as dictionary. This might differ from what you see on your LED\n   strip.\n-  ``set_led_colors_buffer_dict_multi_call()``: After you adjusted the\n   dict of the function above: Write it back to the buffer. Don\u2019t forget\n   ``flush()``.\n-  ``set_max_speed_hz(hz)``: Default is 1MHz. You may change this but\n   not below 1,5KHz.\n-  ``set_gamma()``: Set the gamma value. Formula is:\n   ``int(((rgb/255)**gamma)*255)``. Default is 2.1 which reduces the\n   number of rgb values to approx. 187. Set it to ``1`` you will have\n   255 values per color but you won\u2019t be able to see them. Your eye will\n   turn many into white.\n\nInstallation\n------------\n\n``pip install WS2801_RPI``.\n\nHint\n----\n\nYou can raise the log level if you like to suppress warnings:\n\n.. code:: python\n\n    import logging\n    logging.getLogger().setLevel(31)\n\nAcknowledgement\n---------------\n\n-  `Atom <https://atom.io/>`__ was my editor of choice\n-  Formatting was done with\n   `linter-pylama <https://atom.io/packages/linter-pylama>`__\n\nGeneral remarks on WS2801:\n--------------------------\n\n-  In the Data\n   `Sheet <https://cdn-shop.adafruit.com/datasheets/WS2801.pdf>`__ of\n   WS2801 I found the following passage I didn\u2019t fully understand:\n   ``When the WS2801 receives total 24 clock rising edges, the WS2801 enters relay mode ...``.\n   In addition one can read\n   `this <https://electronics.stackexchange.com/a/307117>`__\n   explanation. I found it helpful.\n-  WS2801 is using the raising flag of the clock to retrieve the data\n   and expects clock being low for 500 microseconds between data\n   transmissions. Hence there is no need to chance the mode of spidev.\n   It must be zero, regardless which effects you see.\n\nWould be glad if this code was used often in your projects. Feedback and pull requests are more than welcome.\n-------------------------------------------------------------------------------------------------------------\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/mk2366/WS2801python_rpi",
    "keywords": "RaspberryPi WS2801",
    "license": "GNU GENERAL PUBLIC LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "WS2801-RPI",
    "platform": "",
    "project_url": "https://pypi.org/project/WS2801-RPI/",
    "release_url": "https://pypi.org/project/WS2801-RPI/1.0.0.dev4/",
    "requires_dist": [
      "spidev"
    ],
    "requires_python": "",
    "summary": "Conecting WS2801 LED strip to Raspberry Pi",
    "version": "1.0.0.dev4"
  },
  "releases": {
    "1.0.0.dev2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f58446d24fcfff3b5dbeb47e7ff458b8",
          "sha256": "6cdb5a94b592bbb39ceff7e7325255281bcd65b2e4140458424a523180f75c36"
        },
        "downloads": -1,
        "filename": "WS2801_RPI-1.0.0.dev2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f58446d24fcfff3b5dbeb47e7ff458b8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7909,
        "upload_time": "2017-12-14T13:24:53",
        "url": "https://files.pythonhosted.org/packages/f8/83/59f2449dc62c2f336cb3e0313a07537cea9b3c3a90e12942efdbed77a3cd/WS2801_RPI-1.0.0.dev2-py2.py3-none-any.whl"
      }
    ],
    "1.0.0.dev3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e8d0cd96962f3cae0057a1a466a99885",
          "sha256": "cb5d792524b8a27b676f4e2a65e1c159d06999fe57312cff7958f80c183e3de2"
        },
        "downloads": -1,
        "filename": "WS2801_RPI-1.0.0.dev3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8d0cd96962f3cae0057a1a466a99885",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 8230,
        "upload_time": "2017-12-15T08:12:07",
        "url": "https://files.pythonhosted.org/packages/8c/a3/f25217c62cf63af60be31d14c5a1a276b233fe2868cf9163ff65fe23318e/WS2801_RPI-1.0.0.dev3-py2.py3-none-any.whl"
      }
    ],
    "1.0.0.dev4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9212fcd6f444814fe1e51ab7a65a791f",
          "sha256": "95db8ee5cdf6835d6061a5337c797cc6464d18745ae0ecc4252683ddbfb537d1"
        },
        "downloads": -1,
        "filename": "WS2801_RPI-1.0.0.dev4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9212fcd6f444814fe1e51ab7a65a791f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 8416,
        "upload_time": "2017-12-18T08:51:47",
        "url": "https://files.pythonhosted.org/packages/7b/c0/ea21a66bbf7e01a526e9c72320182f3243d04e0755d8454c67666e235cbf/WS2801_RPI-1.0.0.dev4-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9212fcd6f444814fe1e51ab7a65a791f",
        "sha256": "95db8ee5cdf6835d6061a5337c797cc6464d18745ae0ecc4252683ddbfb537d1"
      },
      "downloads": -1,
      "filename": "WS2801_RPI-1.0.0.dev4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9212fcd6f444814fe1e51ab7a65a791f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 8416,
      "upload_time": "2017-12-18T08:51:47",
      "url": "https://files.pythonhosted.org/packages/7b/c0/ea21a66bbf7e01a526e9c72320182f3243d04e0755d8454c67666e235cbf/WS2801_RPI-1.0.0.dev4-py2.py3-none-any.whl"
    }
  ]
}