{
  "info": {
    "author": "orsinium",
    "author_email": "master_fess@mail.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Plugins",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Human Machine Interfaces"
    ],
    "description": "TextDistance\n============\n\n**TextDistance** -- python library for compare distance between two or\nmore sequences by many algorithms.\n\nFeatures:\n\n-  30+ algorithms\n-  Pure python implementation\n-  Simple usage\n-  More than two sequences comparing\n-  Some algorithms have more than one implementation in one class.\n-  Optional numpy usage for maximum speed.\n\nAlgorithms\n----------\n\nEdit based\n~~~~~~~~~~\n\n+------------------------------------------------------------------------------------------------+--------------------------+------------------------------+\n| Algorithm                                                                                      | Class                    | Functions                    |\n+================================================================================================+==========================+==============================+\n| `Hamming <https://en.wikipedia.org/wiki/Hamming_distance>`__                                   | ``Hamming``              | ``hamming``                  |\n+------------------------------------------------------------------------------------------------+--------------------------+------------------------------+\n| `MLIPNS <http://www.sial.iias.spb.su/files/386-386-1-PB.pdf>`__                                | ``Mlipns``               | ``mlipns``                   |\n+------------------------------------------------------------------------------------------------+--------------------------+------------------------------+\n| `Levenshtein <https://en.wikipedia.org/wiki/Levenshtein_distance>`__                           | ``Levenshtein``          | ``levenshtein``              |\n+------------------------------------------------------------------------------------------------+--------------------------+------------------------------+\n| `Damerau-Levenshtein <https://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance>`__   | ``DamerauLevenshtein``   | ``damerau_levenshtein``      |\n+------------------------------------------------------------------------------------------------+--------------------------+------------------------------+\n| `Jaro-Winkler <https://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance>`__                 | ``JaroWinkler``          | ``jaro_winkler``, ``jaro``   |\n+------------------------------------------------------------------------------------------------+--------------------------+------------------------------+\n| `Strcmp95 <http://cpansearch.perl.org/src/SCW/Text-JaroWinkler-0.1/strcmp95.c>`__              | ``StrCmp95``             | ``strcmp95``                 |\n+------------------------------------------------------------------------------------------------+--------------------------+------------------------------+\n| `Needleman-Wunsch <https://en.wikipedia.org/wiki/Needleman%E2%80%93Wunsch_algorithm>`__        | ``NeedlemanWunsch``      | ``needleman_wunsch``         |\n+------------------------------------------------------------------------------------------------+--------------------------+------------------------------+\n| `Gotoh <https://www.cs.umd.edu/class/spring2003/cmsc838t/papers/gotoh1982.pdf>`__              | ``Gotoh``                | ``gotoh``                    |\n+------------------------------------------------------------------------------------------------+--------------------------+------------------------------+\n| `Smith-Waterman <https://en.wikipedia.org/wiki/Smith%E2%80%93Waterman_algorithm>`__            | ``SmithWaterman``        | ``smith_waterman``           |\n+------------------------------------------------------------------------------------------------+--------------------------+------------------------------+\n\nToken based\n~~~~~~~~~~~\n\n+---------------------------------------------------------------------------------------------------------------------------+------------------+---------------------------------------------+\n| Algorithm                                                                                                                 | Class            | Functions                                   |\n+===========================================================================================================================+==================+=============================================+\n| `Jaccard index <https://en.wikipedia.org/wiki/Jaccard_index>`__                                                           | ``Jaccard``      | ``jaccard``                                 |\n+---------------------------------------------------------------------------------------------------------------------------+------------------+---------------------------------------------+\n| `S\u00f8rensen\u2013Dice coefficient <https://en.wikipedia.org/wiki/S%C3%B8rensen%E2%80%93Dice_coefficient>`__                      | ``Sorensen``     | ``sorensen``, ``sorensen_dice``, ``dice``   |\n+---------------------------------------------------------------------------------------------------------------------------+------------------+---------------------------------------------+\n| `Tversky index <https://en.wikipedia.org/wiki/Tversky_index>`__                                                           | ``Tversky``      | ``tversky``                                 |\n+---------------------------------------------------------------------------------------------------------------------------+------------------+---------------------------------------------+\n| `Overlap coefficient <https://en.wikipedia.org/wiki/Overlap_coefficient>`__                                               | ``Overlap``      | ``overlap``                                 |\n+---------------------------------------------------------------------------------------------------------------------------+------------------+---------------------------------------------+\n| `Tanimoto distance <https://en.wikipedia.org/wiki/Jaccard_index#Tanimoto_similarity_and_distance>`__                      | ``Tanimoto``     | ``tanimoto``                                |\n+---------------------------------------------------------------------------------------------------------------------------+------------------+---------------------------------------------+\n| `Cosine similarity <https://en.wikipedia.org/wiki/Cosine_similarity>`__                                                   | ``Cosine``       | ``cosine``                                  |\n+---------------------------------------------------------------------------------------------------------------------------+------------------+---------------------------------------------+\n| `Monge-Elkan <https://www.academia.edu/200314/Generalized_Monge-Elkan_Method_for_Approximate_Text_String_Comparison>`__   | ``MongeElkan``   | ``monge_elkan``                             |\n+---------------------------------------------------------------------------------------------------------------------------+------------------+---------------------------------------------+\n| `Bag distance <https://github.com/Yomguithereal/talisman/blob/master/src/metrics/distance/bag.js>`__                      | ``Bag``          | ``bag``                                     |\n+---------------------------------------------------------------------------------------------------------------------------+------------------+---------------------------------------------+\n\nSequence based\n~~~~~~~~~~~~~~\n\n+--------------+----------+--------------+\n| Algorithm    | Class    | Functions    |\n+==============+==========+==============+\n| `longest     | ``LCSSeq | ``lcsseq``   |\n| common       | ``       |              |\n| subsequence  |          |              |\n| similarity < |          |              |\n| https://en.w |          |              |\n| ikipedia.org |          |              |\n| /wiki/Longes |          |              |\n| t_common_sub |          |              |\n| sequence_pro |          |              |\n| blem>`__     |          |              |\n+--------------+----------+--------------+\n| `longest     | ``LCSStr | ``lcsstr``   |\n| common       | ``       |              |\n| substring    |          |              |\n| similarity < |          |              |\n| https://docs |          |              |\n| .python.org/ |          |              |\n| 2/library/di |          |              |\n| fflib.html#d |          |              |\n| ifflib.Seque |          |              |\n| nceMatcher>` |          |              |\n| __           |          |              |\n+--------------+----------+--------------+\n| `Ratcliff-Ob | ``Ratcli | ``ratcliff_o |\n| ershelp      | ffObersh | bershelp``   |\n| similarity   | elp``    |              |\n| similarity < |          |              |\n| http://colla |          |              |\n| boration.cmc |          |              |\n| .ec.gc.ca/sc |          |              |\n| ience/rpn/bi |          |              |\n| blio/ddj/Web |          |              |\n| site/article |          |              |\n| s/DDJ/1988/8 |          |              |\n| 807/8807c/88 |          |              |\n| 07c.htm>`__  |          |              |\n+--------------+----------+--------------+\n\nCompression based\n~~~~~~~~~~~~~~~~~\n\nWork in progress. Now all algorithms compare two strings as array of\nbits, not by chars.\n\n``NCD`` - normalized compression distance.\n\nFunctions:\n\n1. ``bz2_ncd``\n2. ``lzma_ncd``\n3. ``arith_ncd``\n4. ``rle_ncd``\n5. ``bwtrle_ncd``\n6. ``zlib_ncd``\n\nPhonetic\n~~~~~~~~\n\n+-----------------------------------------------------------------------------------+--------------+--------------+\n| Algorithm                                                                         | Class        | Functions    |\n+===================================================================================+==============+==============+\n| `MRA <https://en.wikipedia.org/wiki/Match_rating_approach>`__                     | ``MRA``      | ``mra``      |\n+-----------------------------------------------------------------------------------+--------------+--------------+\n| `Editex <https://anhaidgroup.github.io/py_stringmatching/v0.3.x/Editex.html>`__   | ``Editex``   | ``editex``   |\n+-----------------------------------------------------------------------------------+--------------+--------------+\n\nSimple\n~~~~~~\n\n+-----------------------+----------------+----------------+\n| Algorithm             | Class          | Functions      |\n+=======================+================+================+\n| Prefix similarity     | ``Prefix``     | ``prefix``     |\n+-----------------------+----------------+----------------+\n| Postfix similarity    | ``Postfix``    | ``postfix``    |\n+-----------------------+----------------+----------------+\n| Length distance       | ``Length``     | ``length``     |\n+-----------------------+----------------+----------------+\n| Identity similarity   | ``Identity``   | ``identity``   |\n+-----------------------+----------------+----------------+\n| Matrix similarity     | ``Matrix``     | ``matrix``     |\n+-----------------------+----------------+----------------+\n\nUsage\n-----\n\nAll algorithms have 2 interfaces:\n\n1. Class which can get some algorithm-specific params by init.\n2. Class instance with default init params for quick and simple usage.\n\nAll algorithms have some common methods:\n\n1. ``.distance(*sequences)`` -- calculate distance between sequences.\n2. ``.similarity(*sequences)`` -- calculate similarity for sequences.\n3. ``.maximum(*sequences)`` -- maximum possible value for distance and\n   similarity. ``distance + similarity == maximum``.\n4. ``.normalized_distance(*sequences)`` -- normalized distance between\n   sequences. The return value is a float between 0 and 1, where 0 means\n   equal, and 1 totally different.\n5. ``.normalized_distance(*sequences)`` -- normalized similarity for\n   sequences. The return value is a float between 0 and 1, where 0 means\n   totally different, and 1 equal.\n\nMost common init arguments:\n\n1. ``qval`` -- q-value for split sequences into q-grams. Possible\n   values:\n\n   -  1 (default) -- compare sequences by chars.\n   -  2 or more -- transform sequences to q-grams.\n   -  None -- split sequences by words.\n\n2. ``as_set`` -- for token-based algorithms:\n\n   -  True -- ``t`` and ``ttt`` is equal.\n   -  False (default) -- ``t`` and ``ttt`` is different.\n\nExample\n-------\n\n.. code:: python\n\n    import textdistance\n\n    textdistance.hamming('test', 'text')\n    # 1\n\n    textdistance.hamming.distance('test', 'text')\n    # 1\n\n    textdistance.hamming.similarity('test', 'text')\n    # 3\n\n    textdistance.hamming.normalized_distance('test', 'text')\n    # 0.25\n\n    textdistance.hamming.normalized_similarity('test', 'text')\n    # 0.75\n\n    textdistance.Hamming(qval=2).distance('test', 'text')\n    # 2",
    "docs_url": null,
    "download_url": "https://github.com/orsinium/textdistance/tarball/master",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/orsinium/textdistance",
    "keywords": "distance between text strings sequences iterators",
    "license": "GNU Lesser General Public License v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "textdistance",
    "platform": "",
    "project_url": "https://pypi.org/project/textdistance/",
    "release_url": "https://pypi.org/project/textdistance/2.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Compute distance between the two texts.",
    "version": "2.0.1"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0ea04583fd99afb346378c60144fd089",
          "sha256": "09723fbaf99fc51f6096663dbdd5bf1e3922b9b5c964755647cc5b8f90feb793"
        },
        "downloads": -1,
        "filename": "textdistance-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0ea04583fd99afb346378c60144fd089",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6355,
        "upload_time": "2017-05-05T08:59:35",
        "url": "https://files.pythonhosted.org/packages/0c/75/2a49803f09a770317ab111ab87b6df12604244019ccac0e2d5b3335596b2/textdistance-1.0.0.tar.gz"
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1eaacf69f60f8ff6c11dd5f19d455435",
          "sha256": "26ea623082a1b88ce8ec433e1a4260d9bd3471023faf08015fdb284437e3249f"
        },
        "downloads": -1,
        "filename": "textdistance-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1eaacf69f60f8ff6c11dd5f19d455435",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9712,
        "upload_time": "2018-02-10T10:28:12",
        "url": "https://files.pythonhosted.org/packages/6c/da/b3ea5ebe0a7fe75ec132686945792ce0efb35a4c76eff75eaac34eee59ec/textdistance-2.0.0.tar.gz"
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f66a5c62c501f556e3b1e2fa8e259d5d",
          "sha256": "392df2e3a29c3f43981e13337cb2c8543e23a2ec5669e4eb70dc7bcaba260230"
        },
        "downloads": -1,
        "filename": "textdistance-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f66a5c62c501f556e3b1e2fa8e259d5d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21898,
        "upload_time": "2018-02-10T10:51:39",
        "url": "https://files.pythonhosted.org/packages/d9/6c/9d40768fc3fed79e663a0b2ba43a2c5a111c607b509949209fba893de81c/textdistance-2.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f66a5c62c501f556e3b1e2fa8e259d5d",
        "sha256": "392df2e3a29c3f43981e13337cb2c8543e23a2ec5669e4eb70dc7bcaba260230"
      },
      "downloads": -1,
      "filename": "textdistance-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f66a5c62c501f556e3b1e2fa8e259d5d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 21898,
      "upload_time": "2018-02-10T10:51:39",
      "url": "https://files.pythonhosted.org/packages/d9/6c/9d40768fc3fed79e663a0b2ba43a2c5a111c607b509949209fba893de81c/textdistance-2.0.1.tar.gz"
    }
  ]
}