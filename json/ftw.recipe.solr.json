{
  "info": {
    "author": "4teamwork AG",
    "author_email": "mailto:info@4teamwork.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Buildout :: Recipe",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Zope Public License",
      "Programming Language :: Python",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "Introduction\n============\n\nThis recipe installs a `Solr <http://lucene.apache.org/solr/>`_ \nserver with buildout.\n\nIt's kept as simple as possible and contrary to `collective.recipe.solrinstance`\nit does not generate any Solr configuration files. Instead the user can provide\na directory containing custom configuration files. A default set of configuration\nfiles for usage with Plone is provided.\n\nYou can use it by adding a part like this::\n\n    [buildout]\n    parts = solr\n\n    [solr]\n    recipe = ftw.recipe.solr\n    cores =\n        core1\n\n\nSupported options\n=================\n\nThe recipe supports the following options:\n\nhost\n    Name or IP address of the Solr server. Defaults to ``localhost``.\n\nport\n    Server port. Defaults to ``8983``.\n\ncores\n    List of cores that should be created.\n\nurl\n    Url for Solr distribution download.\n\nmd5sum\n    MD5 checksum of Solr distribution.\n\njvm-opts\n    Can be used to configure JVM options. Defaults to \n    ``-Xms512m -Xmx512m -Xss256k``\n\nconf\n    Path to a directory containing Solr configuration files.\n\n\nLinks\n=====\n\n- Github: https://github.com/4teamwork/ftw.recipe.solr\n- Issues: https://github.com/4teamwork/ftw.recipe.solr/issues\n- Pypi: http://pypi.python.org/pypi/ftw.recipe.solr\n- Continuous integration: https://jenkins.4teamwork.ch/search?q=ftw.recipe.solr\n\n\nCopyright\n=========\n\nThis package is copyright by `4teamwork <http://www.4teamwork.ch/>`_.\n\n``ftw.recipe.solr`` is licensed under GNU General Public License, version 2.\nChangelog\n=========\n\n1.0.0 (2018-02-02)\n------------------\n\n- Initial release.\n  [buchi]\n\nWe setup an HTTP server that provides the files we want to download:\n\n    >>> import os.path\n    >>> testdata = join(os.path.dirname(__file__), 'testdata')\n    >>> server_url = start_server(testdata)\n    >>> mkdir(sample_buildout, 'downloads')\n\nWe'll start by creating a simple buildout that uses our recipe::\n\n    >>> write(sample_buildout, 'buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = solr\n    ... index=https://pypi.python.org/simple/\n    ...\n    ... [solr]\n    ... recipe = ftw.recipe.solr\n    ... url = {server_url}solr-7.2.1.tgz\n    ... md5sum = 95e828f50d34c1b40e3afa8630138664\n    ...\n    ... cores = core1\n    ... \"\"\".format(server_url=server_url))\n\nRunning the buildout gives us::\n\n    >>> print system(buildout)\n    Installing solr.\n    Downloading http://test.server/solr-7.2.1.tgz\n    <BLANKLINE>\n\nWe should have a Solr distribution in the parts directory::\n\n    >>> ls(sample_buildout, 'parts', 'solr')\n    d contrib\n    d dist\n    -  log4j.properties\n    d server\n\nWe should also have a Solr home directory::\n\n    >>> ls(sample_buildout, 'var')\n    d log\n    d solr\n\nThe home directory should contain a directory for the Solr core and two\nconfiguration files::\n\n    >>> ls(sample_buildout, 'var', 'solr')\n    d core1\n    - solr.xml\n    - zoo.cfg\n\nThe core directory should contain a conf directory and core.properties file::\n\n    >>> ls(sample_buildout, 'var', 'solr', 'core1')\n    d conf\n    - core.properties\n\nThe conf direcotry should contain a basic set of Solr configuration files::\n\n    >>> ls(sample_buildout, 'var', 'solr', 'core1', 'conf')\n    - managed-schema\n    - mapping-FoldToASCII.txt\n    - solrconfig.xml\n    - stopwords.txt\n    - synonyms.txt\n\nOur custom log4j.properties file should configure a log file in var/log::\n\n    >>> cat(sample_buildout, 'parts', 'solr', 'log4j.properties')\n    # Default Solr log4j config\n    # rootLogger log level may be programmatically overridden by -Dsolr.log.level\n    log4j.rootLogger=INFO, file, CONSOLE\n    <BLANKLINE>\n    # Console appender will be programmatically disabled when Solr is started with option -Dsolr.log.muteconsole\n    log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\n    log4j.appender.CONSOLE.layout=org.apache.log4j.EnhancedPatternLayout\n    log4j.appender.CONSOLE.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p (%t) [%X{collection} %X{shard} %X{replica} %X{core}] %c{1.} %m%n\n    <BLANKLINE>\n    #- size rotation with log cleanup.\n    log4j.appender.file=org.apache.log4j.RollingFileAppender\n    log4j.appender.file.MaxFileSize=50MB\n    log4j.appender.file.MaxBackupIndex=4\n    <BLANKLINE>\n    #- File to log to and log format\n    log4j.appender.file.File=/sample-buildout/var/log/solr.log\n    log4j.appender.file.layout=org.apache.log4j.EnhancedPatternLayout\n    log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p (%t) [%X{collection} %X{shard} %X{replica} %X{core}] %c{1.} %m%n\n    <BLANKLINE>\n    # Adjust logging levels that should differ from root logger\n    log4j.logger.org.apache.zookeeper=WARN\n    log4j.logger.org.apache.hadoop=WARN\n    log4j.logger.org.eclipse.jetty=WARN\n    log4j.logger.org.eclipse.jetty.server.Server=INFO\n    log4j.logger.org.eclipse.jetty.server.ServerConnector=INFO\n    <BLANKLINE>\n    # set to INFO to enable infostream log messages\n    log4j.logger.org.apache.solr.update.LoggingInfoStream=OFF\n\nWe should also have a startup script::\n\n    >>> ls(sample_buildout, 'bin')\n    - buildout\n    - solr\n\n    >>> cat(sample_buildout, 'bin', 'solr')\n    #!/usr/bin/env bash\n    <BLANKLINE>\n    DEFAULT_JVM_OPTS=\"-Dfile.encoding=UTF-8\"\n    JVM_OPTS=(${DEFAULT_JVM_OPTS[@]} -Xms512m -Xmx512m -Xss256k)\n    <BLANKLINE>\n    JAVACMD=\"java\"\n    PID_FILE=\"/sample-buildout/var/solr/solr.pid\"\n    <BLANKLINE>\n    SOLR_PORT=\"8983\"\n    SOLR_HOME=\"/sample-buildout/var/solr\"\n    SOLR_INSTALL_DIR=\"/sample-buildout/parts/solr\"\n    SOLR_SERVER_DIR=\"/sample-buildout/parts/solr/server\"\n    <BLANKLINE>\n    SOLR_START_OPT=('-server' \\\n    \"${JVM_OPTS[@]}\" \\\n    -Djetty.host=localhost\n    -Djetty.port=$SOLR_PORT \\\n    -Djetty.home=$SOLR_SERVER_DIR \\\n    -Dsolr.solr.home=$SOLR_HOME \\\n    -Dsolr.install.dir=$SOLR_INSTALL_DIR \\\n    -Dsolr.log.dir=/sample-buildout/var/log \\\n    -Dlog4j.configuration=/sample-buildout/parts/solr/log4j.properties)\n    <BLANKLINE>\n    start() {\n        cd \"$SOLR_SERVER_DIR\"\n        nohup \"$JAVACMD\" \"${SOLR_START_OPT[@]}\" -Dsolr.log.muteconsole -jar start.jar --module=http >/dev/null 2>&1 &\n        echo $! > \"$PID_FILE\"\n        pid=`cat \"$PID_FILE\"`\n        echo \"Solr started with pid $pid.\"\n    }\n    <BLANKLINE>\n    start_fg() {\n        cd \"$SOLR_SERVER_DIR\"\n        \"$JAVACMD\" \"${SOLR_START_OPT[@]}\" -jar start.jar --module=http\n    }\n    <BLANKLINE>\n    start_console() {\n        cd \"$SOLR_SERVER_DIR\"\n        \"$JAVACMD\" \"${SOLR_START_OPT[@]}\" -Dsolr.log.muteconsole -jar start.jar --module=http\n    }\n    <BLANKLINE>\n    stop() {\n        if [ -e $PID_FILE ]; then\n            pid=`cat \"$PID_FILE\"`\n            ps -p $pid | grep start.jar > /dev/null 2>&1\n            if [ $? -eq 0 ]\n            then\n                kill -TERM $pid\n                rm -f $PID_FILE\n                echo \"Solr stopped successfully.\"\n            else\n                echo \"Solr is not running.\"\n            fi\n        else\n            echo \"Solr is not running.\"\n        fi\n    }\n    <BLANKLINE>\n    status() {\n        if [ -e $PID_FILE ]; then\n            pid=`cat \"$PID_FILE\"`\n            ps -p $pid | grep start.jar > /dev/null 2>&1\n            if [ $? -eq 0 ]\n            then\n                echo \"Solr running with pid $pid.\"\n            else\n                echo \"Solr is not running.\"\n            fi\n        else\n            echo \"Solr is not running.\"\n        fi\n    }\n    <BLANKLINE>\n    case \"$1\" in\n        start)\n            start\n            ;;\n    <BLANKLINE>\n        fg)\n            start_fg\n            ;;\n    <BLANKLINE>\n        console)\n            start_console\n            ;;\n    <BLANKLINE>\n        stop)\n            stop\n            ;;\n    <BLANKLINE>\n        restart)\n            stop\n            start\n            ;;\n    <BLANKLINE>\n        status)\n            status\n            ;;\n        *)\n            echo \"Usage: `basename \"$0\"` {start|fg|console|stop|restart|status}\" >&2\n            exit 1\n            ;;\n    esac",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/4teamwork/ftw.recipe.solr",
    "keywords": "",
    "license": "GPL2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ftw.recipe.solr",
    "platform": "",
    "project_url": "https://pypi.org/project/ftw.recipe.solr/",
    "release_url": "https://pypi.org/project/ftw.recipe.solr/1.0.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A zc.buildout recipe to install a Solr server",
    "version": "1.0.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5edd089d975f23e1329bf5e02f6b8a3b",
          "sha256": "0265ad33bef8110c64fc36213060432b9959d6be5af21d0afa7157cbbbc603c5"
        },
        "downloads": -1,
        "filename": "ftw.recipe.solr-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5edd089d975f23e1329bf5e02f6b8a3b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 67684,
        "upload_time": "2018-02-02T10:52:55",
        "url": "https://files.pythonhosted.org/packages/fb/d3/98073fba1685ed8cc9ca7138e9472ec8b3d7f798fd8e6117b04943a849e2/ftw.recipe.solr-1.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5edd089d975f23e1329bf5e02f6b8a3b",
        "sha256": "0265ad33bef8110c64fc36213060432b9959d6be5af21d0afa7157cbbbc603c5"
      },
      "downloads": -1,
      "filename": "ftw.recipe.solr-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5edd089d975f23e1329bf5e02f6b8a3b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 67684,
      "upload_time": "2018-02-02T10:52:55",
      "url": "https://files.pythonhosted.org/packages/fb/d3/98073fba1685ed8cc9ca7138e9472ec8b3d7f798fd8e6117b04943a849e2/ftw.recipe.solr-1.0.0.tar.gz"
    }
  ]
}