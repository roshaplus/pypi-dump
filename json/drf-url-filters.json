{
  "info": {
    "author": "Manjit Kumar",
    "author_email": "manjit1727@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "# drf-url-filters\n\n**drf-url-filters** is a simple django app to apply filters on drf\nmodelviewset's queryset in a clean, simple and configurable way. It also\nsupports validations on incoming query params and their values. A beautiful\npython package [voluptouos](https://github.com/alecthomas/voluptuous) is being\nused for validations on the incoming query parameters. The best part about\nvoluptouos is you can define your own validations as per your query params\nrequirements.\n\n# Quick start\n---\n**Installation**\n\n1. Download `drf-url-filters` app package from this git repo or can be\ninstalled using python-pip like `pip install drf-url-filters`.\n\n2. Add `filters` in INSTALLED_APPS of settings.py file of django project.\n\n**How it works?**\n\n1. Your View or ModelViewSet should inherit `FiltersMixin` from\n`filters.mixins.FiltersMixin`.\n\n2. To apply filters using `drf-url-filters` we need to configure our view to\nhave a dict mapping `filter_mappings` which converts incoming query parameters\nto query you want to make on the column name on the queryset.\n\n# validations.py\n\n```python\n\nfrom filters.schema import base_query_param_schema\nfrom filters.validations import (\n    CSVofIntegers,\n    IntegerLike,\n    DatetimeWithTZ\n)\n\n# make a validation schema for players filter query params\nplayers_query_schema = base_query_param_schema.extend(\n    {\n        \"id\": IntegerLike(),\n        \"name\": unicode,\n        \"team_id\": CSVofIntegers(),  # /?team_id=1,2,3\n        \"install_ts\": DatetimeWithTZ(),\n        \"update_ts\": DatetimeWithTZ(),\n    }\n)\n```\n\n# views.py\n\n```python\n\nfrom rest_framework import (\n    viewsets,\n    filters,\n)\n\nfrom .models import Player, Team\nfrom .pagination import ResultSetPagination\nfrom .serializers import PlayerSerializer, TeamSerializer\nfrom .validations import teams_query_schema, players_query_schema\nfrom filters.mixins import (\n    FiltersMixin,\n)\n\n\nclass PlayersViewSet(FiltersMixin, viewsets.ModelViewSet):\n    \"\"\"\n    This viewset automatically provides `list`, `create`, `retrieve`,\n    `update` and `destroy` actions.\n    \"\"\"\n    serializer_class = PlayerSerializer\n    pagination_class = ResultSetPagination\n    filter_backends = (filters.OrderingFilter,)\n    ordering_fields = ('id', 'name', 'update_ts')\n    ordering = ('id',)\n\n    # add a mapping of query_params to db_columns(queries)\n    filter_mappings = {\n        'id': 'id',\n        'name': 'name__icontains',\n        'team_id': 'teams',\n        'install_ts': 'install_ts',\n        'update_ts': 'update_ts',\n        'update_ts__gte': 'update_ts__gte',\n        'update_ts__lte': 'update_ts__lte',\n    }\n\n    # add validation on filters\n    filter_validation_schema = players_query_schema\n\n    def get_queryset(self):\n        \"\"\"\n        Optionally restricts the queryset by filtering against\n        query parameters in the URL.\n        \"\"\"\n        query_params = self.request.query_params\n        url_params = self.kwargs\n\n        # get queryset_filters from FilterMixin\n        queryset_filters = self.get_db_filters(url_params, query_params)\n\n        # This dict will hold filter kwargs to pass in to Django ORM calls.\n        db_filters = queryset_filters['db_filters']\n\n        # This dict will hold exclude kwargs to pass in to Django ORM calls.\n        db_excludes = queryset_filters['db_excludes']\n\n        # fetch queryset from Players model\n        queryset = Player.objects.prefetch_related(\n            'teams'  # use prefetch_related to minimize db hits.\n        ).all()\n\n        return queryset.filter(**db_filters).exclude(**db_excludes)\n```\n\nWith the use of `drf-url-filters` adding a new filter on a new column is as\nsimple as adding a new key in the dict. Prohibitting a filter on particular\ncolumn is same as removing a key value mapping from the `filter_mappings` dict.\n\n\n# LICENSE\n[MIT License](LICENSE.MD)\nCopyright (c) 2016 Manjit Kumar.\n\n# Credits\nSpecial thanks to authors of\n[voluptouos](https://github.com/alecthomas/voluptuous) and friends\n[cdax](https://github.com/cdax) and [saurabhjha](https://github.com/SaurabhJha)\nwho encourage people to contribute into open source community.\n\n# Support\nPlease [open an issue]\n(https://github.com/manjitkumar/drf-url-filters/issues/new) for support.",
    "docs_url": null,
    "download_url": "https://github.com/manjitkumar/drf-url-filters/archive/v0.1.3.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/manjitkumar/drf-url-filters",
    "keywords": "drf-url-filters,filters,queryparamters",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "drf-url-filters",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/drf-url-filters/",
    "release_url": "https://pypi.org/project/drf-url-filters/0.2.1/",
    "requires_python": null,
    "summary": "A django app to apply filters on drf querysets using query params with validations using voluptuous.",
    "version": "0.2.1"
  },
  "releases": {
    "0.1.0": [],
    "0.1.1": [],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6c032f778cafde2c4722be8a4762290f",
          "sha256": "235069c29c7e4d53276cda0a0df3b4eaf7962d00644bffef67aa2f202848e170"
        },
        "downloads": 456,
        "filename": "drf-url-filters-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6c032f778cafde2c4722be8a4762290f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6866,
        "upload_time": "2016-04-14T16:49:26",
        "url": "https://files.pythonhosted.org/packages/35/c9/be09443673d37d000745e245bf234a943f3f5e98b6e20c9b35f261cbf31c/drf-url-filters-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "684b974fb04fcc1f320d2e50660d0521",
          "sha256": "e6ad7bc74f5996ba64781340e24fe980556dd049b5eb4ffda1bf008c4d251be0"
        },
        "downloads": 143,
        "filename": "drf-url-filters-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "684b974fb04fcc1f320d2e50660d0521",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6864,
        "upload_time": "2016-04-24T09:20:29",
        "url": "https://files.pythonhosted.org/packages/3d/b9/94f6cbf4db17f88a77a89d56af0b6330051bc5f99a3df00ad26102ff0929/drf-url-filters-0.1.3.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fc8586728c87565461412cac0a1f8ea9",
          "sha256": "d92fbe2b97d2e7434d368c0d74305244f06539dec49de2bb7003bc521b8f07b8"
        },
        "downloads": 278,
        "filename": "drf-url-filters-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fc8586728c87565461412cac0a1f8ea9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7232,
        "upload_time": "2016-09-21T11:16:51",
        "url": "https://files.pythonhosted.org/packages/9e/8c/6c2bd7f98721d14051607b8dd28d621cd3e7e634a800b79166faf8cfe289/drf-url-filters-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a102ca555b85dc2bb3ab8cb7a51cabd4",
          "sha256": "02e32e40838200498bbef7d23b8fc21f5b93502be11994e810d977fafcf7ed54"
        },
        "downloads": 12,
        "filename": "drf-url-filters-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a102ca555b85dc2bb3ab8cb7a51cabd4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6468,
        "upload_time": "2017-02-20T11:25:02",
        "url": "https://files.pythonhosted.org/packages/b5/66/273d4717b632560caa72dba9e49dc6e55cdefe66c33929ff5a254beafa54/drf-url-filters-0.2.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a102ca555b85dc2bb3ab8cb7a51cabd4",
        "sha256": "02e32e40838200498bbef7d23b8fc21f5b93502be11994e810d977fafcf7ed54"
      },
      "downloads": 12,
      "filename": "drf-url-filters-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a102ca555b85dc2bb3ab8cb7a51cabd4",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6468,
      "upload_time": "2017-02-20T11:25:02",
      "url": "https://files.pythonhosted.org/packages/b5/66/273d4717b632560caa72dba9e49dc6e55cdefe66c33929ff5a254beafa54/drf-url-filters-0.2.1.tar.gz"
    }
  ]
}