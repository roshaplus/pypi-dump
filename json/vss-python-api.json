{
  "info": {
    "author": "matej",
    "author_email": "matej.dujic@visionect.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "This is a package implementing Visionect API in Python.\n\nCheck `API documentation <https://api.visionect.com/>`__ for more info.\n\nAPI endpoints and responses are subject to change, so make sure to\nfollow `release\nnotes. <http://docs.visionect.com/ReleaseNotes/VisionectSoftwareSuite.html>`__\n\n--------------\n\nInstallation\n~~~~~~~~~~~~\n\n``pip install vss-python-api``\n\nUse\n~~~\n\n``from vss_python_api import ApiDeclarations``\n\n``{object_name} = ApiDeclarations(url, key, secret)``\n\n``status_code, response (optional) = {object_name}.{function({params})}``\n\nFunction list\n~~~~~~~~~~~~~\n\nDevice\n^^^^^^\n\nretrieve a device\n'''''''''''''''''\n\n``get_device(uuid)``\n\n-  params: uuid *string*\n-  returns: status code *int*, response *json*\n\nupdate a device\n'''''''''''''''\n\n``update_device(uuid, device_object)``\n\n-  params: uuid *string*, device\\_object *json*\n-  returns: status code *int*\n\ndelete a device\n'''''''''''''''\n\n``delete_device(uuid)``\n\n-  params: uuid *string*\n-  returns: status code *int*, response *json*\n\n--------------\n\nDevice collection\n^^^^^^^^^^^^^^^^^\n\nlist all devices\n''''''''''''''''\n\n``get_all_devices()``\n\n-  params: /\n-  returns: status code *int*, response *json*\n\nupdate a list of devices\n''''''''''''''''''''''''\n\n``update_all_devices(device_object_list)``\n\n-  params: device\\_object\\_list *json list*\n\n   -  example:\n      ``device_object_list = [device_object1, device_object2, ... device_objectN]``\n\n-  returns: status code *int*\n\n--------------\n\nDevice configuration\n^^^^^^^^^^^^^^^^^^^^\n\nget configuration list\n''''''''''''''''''''''\n\n``get_device_config_list(uuid)``\n\n-  params: uuid *string*\n-  returns: status code *int*, response *json*\n\nget configuration\n'''''''''''''''''\n\n``get_device_config(uuid, tclv_type)``\n\n-  params: uuid *string*, tclv\\_type *int*\n-  returns: status code *int*, response *json*\n\nset configuration\n'''''''''''''''''\n\n``update_device_config(uuid, tclv_type, value)``\n\n-  params: uuid *string*, tclv\\_type *int*, value *int*\n-  returns: status code *int*\n\n--------------\n\nReboot\n^^^^^^\n\nreboot device\n'''''''''''''\n\n``reboot_device(uuid)``\n\n-  params: uuid *string*\n-  returns: status code *int*\n\nreboot a list of devices\n''''''''''''''''''''''''\n\n``reboot_device_list(uuid_list)``\n\n-  params: uuid\\_list *list*\n\n   -  example: ``uuid_list = [uuid1, uuid2, ... uuidN]``\n\n-  returns: status code *int*\n\n--------------\n\nSessions\n^^^^^^^^\n\nretrieve a session\n''''''''''''''''''\n\n``get_session(uuid)``\n\n-  params: uuid *string*\n-  returns: status code *int*, response *json*\n\nupdate a session\n''''''''''''''''\n\n``update_session(uuid, session_object)``\n\n-  params: uuid *string*, session\\_object *json*\n-  returns: status\\_code *int*\n\nremove a session\n''''''''''''''''\n\n``delete_session(uuid)``\n\n-  params: uuid *string*\n-  returns: status\\_code *int*\n\n--------------\n\nSession collection\n^^^^^^^^^^^^^^^^^^\n\nlist all sessions\n'''''''''''''''''\n\n``get_session_list()``\n\n-  returns: status\\_code *int*, response *json*\n\ncreate a session\n''''''''''''''''\n\n``create_session(session_object)``\n\n-  params: session\\_object *json*\n\n   -  example:\n\n      ::\n\n          session_object = {\n              \"Uuid\": {uuid},\n              \"Backend\": {\n                  \"Name\": \"HTML\",\n                  \"Fields\": {\n                      \"url\": \"http://demo.visionect.com/clock/?t=602\"\n                  }\n              },\n              \"Options\": {\n                  \"DefaultDithering\": \"none\",\n                  \"DefaultEncoding\": \"4\"\n              }\n          }\n\n-  returns: status\\_code *int*\n\nupdate a list of sessions\n'''''''''''''''''''''''''\n\n``update_session_list(sessions_object)``\n\n-  params: sessions\\_object *json list*\n\n   -  example:\n      ``sessions_object = [session_object1, session_object2, ...  session_objectN]``\n\n-  returns: status\\_code *int*\n\n--------------\n\nRestart\n^^^^^^^\n\nrestart a session\n'''''''''''''''''\n\n``restart_session(uuid)``\n\n-  params: uuid *string*\n-  returns: status\\_code *int*\n\nrestart a list of sessions\n''''''''''''''''''''''''''\n\n``restart_session_list(uuid_list)``\n\n-  params: uuid\\_list *string list*\n\n   -  example: ``[uuid1, uuid2, ... uuidN]``\n\n-  returns: status\\_code *int*\n\n--------------\n\nUser\n^^^^\n\nretrieve a user\n'''''''''''''''\n\n``get_user(username)``\n\n-  params: username *string*\n-  returns: status\\_code *int*, response *json*\n\nupdate a user\n'''''''''''''\n\n``update_user(username, user_object)``\n\n-  params: username *string*, user\\_object *json*\n\n   -  example:\n\n      ::\n\n          {\n          \"Username\": {username},\n          \"Password\": {password},\n          \"IsActive\": true,\n          \"IsAPI\": false\n          }\n\n-  returns: status\\_code *int*\n\ndelete a user\n'''''''''''''\n\n``delete_user(username)``\n\n-  params: username *string*\n-  returns: status\\_code *int*\n\n--------------\n\nUser list\n^^^^^^^^^\n\nlist all users\n''''''''''''''\n\n``get_user_list()``\n\n-  returns: status\\_code *int*, response *json*\n\ncreate a user\n^^^^^^^^^^^^^\n\n``create_user(username, password)``\n\n-  params: username *string*, password *string*\n-  returns: status\\_code *int*\n\nupdate a list of users\n^^^^^^^^^^^^^^^^^^^^^^\n\n``update_user_list(user_list_object)``\n\n-  params: user\\_list\\_object *json list*\n\n   -  example:\n      ``user_list_object = [user_object1, user_object2, ... user_objectN]``\n\n-  returns: status\\_code *int*\n\n--------------\n\nConfig\n^^^^^^\n\nretrieve configuration\n''''''''''''''''''''''\n\n``get_config()``\n\n-  returns: status\\_code *int*, response *json*\n\nupdate configuration\n^^^^^^^^^^^^^^^^^^^^\n\n``update_config(config_object)``\n\n-  params: config\\_object *json*\n-  returns: status\\_code *int*\n\n--------------\n\nLive view\n^^^^^^^^^\n\n``get_live_view(uuid, type, file_lv)``\n\n-  params: uuid *string*, type *string*, file\\_lv *string*\n\n   -  example: ``get_live_view({uuid}, 'image', '.png')``\n\n-  returns: status\\_code *int*\n\n--------------\n\nStatus\n^^^^^^\n\n``get_status()``\n\n-  returns: status\\_code *int*, response *json*\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://api.visionect.com/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vss-python-api",
    "platform": "",
    "project_url": "https://pypi.org/project/vss-python-api/",
    "release_url": "https://pypi.org/project/vss-python-api/1.0.2/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "Python library for easy access to Visionect API.",
    "version": "1.0.2"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4979e23a442942db183dbfddb7a14c9b",
          "sha256": "726cb06a32237e963a14b7f2f65ffecd5775b629e198f84b51f9d944b46e776d"
        },
        "downloads": -1,
        "filename": "vss_python_api-1.0.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "4979e23a442942db183dbfddb7a14c9b",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 3568,
        "upload_time": "2018-01-03T14:13:37",
        "url": "https://files.pythonhosted.org/packages/6b/bd/00a5a9103832e178a6750ed361852569624c406619d64ebe2d5db56415c8/vss_python_api-1.0.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "21e14fc3737f201d68d52c32f83ff9dd",
          "sha256": "1d4b384a81f3ab15862d17436dbebd2bee690fdde7687ea2923a3ef61a05e08f"
        },
        "downloads": -1,
        "filename": "vss_python_api-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "21e14fc3737f201d68d52c32f83ff9dd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3399,
        "upload_time": "2018-01-03T14:13:40",
        "url": "https://files.pythonhosted.org/packages/74/a3/ee253212704db577ddef73e2d65536bf10d1e8385f6af4311e923ffbd8a3/vss_python_api-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "538606f14f51cf05b8efbbc6afe44d3e",
          "sha256": "759e04603efa0a3f91712602437d59ba8e616563ddca2db0596be8c750dd5900"
        },
        "downloads": -1,
        "filename": "vss_python_api-1.0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "538606f14f51cf05b8efbbc6afe44d3e",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 3567,
        "upload_time": "2018-01-03T14:46:58",
        "url": "https://files.pythonhosted.org/packages/4e/8c/99ef43789edc9ab66bc9dcdf967d7022f0ff70a998707a6f4d4a583d3688/vss_python_api-1.0.1-py2-none-any.whl"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d4eb87acea414542fba40d7beac37396",
          "sha256": "6623f5638fd187dacea123bbe9b8ca8aeaafc0200844887b95bb0b97d7f123a6"
        },
        "downloads": -1,
        "filename": "vss_python_api-1.0.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4eb87acea414542fba40d7beac37396",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 6129,
        "upload_time": "2018-01-03T15:03:35",
        "url": "https://files.pythonhosted.org/packages/b7/c7/8666f17c02e032c1f36568f16d90ce856be7b268e5f6877f2121b172e06e/vss_python_api-1.0.2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7f864b6002e1f70320c4cadf4b0cc70c",
          "sha256": "aa0f881898cd4464177cc0076285883e957f937e77c89268111ea800630e9394"
        },
        "downloads": -1,
        "filename": "vss_python_api-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7f864b6002e1f70320c4cadf4b0cc70c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4361,
        "upload_time": "2018-01-03T15:03:39",
        "url": "https://files.pythonhosted.org/packages/87/7e/0e393dc1544821538dc10b2337e48dc559c306353b111ad8f0a9029e2431/vss_python_api-1.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d4eb87acea414542fba40d7beac37396",
        "sha256": "6623f5638fd187dacea123bbe9b8ca8aeaafc0200844887b95bb0b97d7f123a6"
      },
      "downloads": -1,
      "filename": "vss_python_api-1.0.2-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "d4eb87acea414542fba40d7beac37396",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 6129,
      "upload_time": "2018-01-03T15:03:35",
      "url": "https://files.pythonhosted.org/packages/b7/c7/8666f17c02e032c1f36568f16d90ce856be7b268e5f6877f2121b172e06e/vss_python_api-1.0.2-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "7f864b6002e1f70320c4cadf4b0cc70c",
        "sha256": "aa0f881898cd4464177cc0076285883e957f937e77c89268111ea800630e9394"
      },
      "downloads": -1,
      "filename": "vss_python_api-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7f864b6002e1f70320c4cadf4b0cc70c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4361,
      "upload_time": "2018-01-03T15:03:39",
      "url": "https://files.pythonhosted.org/packages/87/7e/0e393dc1544821538dc10b2337e48dc559c306353b111ad8f0a9029e2431/vss_python_api-1.0.2.tar.gz"
    }
  ]
}