{
  "info": {
    "author": "Oliver Cope",
    "author_email": "oliver@redgecko.org",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Topic :: Text Processing :: Markup :: HTML"
    ],
    "description": "Piglet Templates\r\n================\r\n\r\nPiglet is a text and HTML template engine in the kid/genshi/kajiki\r\ntemplates family.\r\n\r\nThe Piglet template engine offers:\r\n\r\n- Template inhertitance through py:extends/py:block (similar to Jinja2)\r\n- Compiles templates to fast python byte code.\r\n- HTML aware templating: output is well formed and content is\r\n  escaped, preventing XSS attacks.\r\n- Reusable template functions, deep nesting of template inheritance,\r\n  flexible translations and embedded python expressions\r\n\r\n`Documentation <http://ollycope.com/software/piglet/>`_\r\n\\| `Bitbucket repository <https://bitbucket.org/ollyc/piglet>`_\r\n\r\nThis is what a piglet template looks like:\r\n\r\n.. code:: html\r\n\r\n    <py:extends href=\"layout.html\">\r\n\r\n        <py:block name=\"content\">\r\n            <h1>This is the content block.</h1>\r\n            <p>\r\n                Hello $user.firstnames $user.lastname!\r\n            </p>\r\n\r\n            <!--!\r\n              The following paragraph is marked for translation.\r\n\r\n              The i18n:name attribute substitues the python code interpolation\r\n              with a simple placeholder, so translators see this message:\r\n\r\n                'Today is ${day}'\r\n            -->\r\n            <p i18n:message=\"\">\r\n              Today is <span i18n:name=\"day\">${date.strftime('%a')}</span>.\r\n            </p>\r\n\r\n            <p py:choose=\"today.weekday()\">\r\n                <py:when test=\"0\">\r\n                    I don't like Mondays\r\n                </py:when>\r\n                <py:when test=\"day == 4\">\r\n                    I never could get the hang of Thursdays\r\n                </py:when>\r\n                <py:otherwise>Is it the weekend yet?</py:otherwise>\r\n            </p>\r\n\r\n            <p py:for=\"verse in in poem\">\r\n                <py:for each=\"line in verse\">$line<br/></py:for>\r\n            </p>\r\n\r\n        </py:block>\r\n\r\n\r\nThere's a text templating mode too:\r\n\r\n.. code::\r\n\r\n    Hello $user.firstnames $user.lastname!\r\n\r\n    {% trans %}\r\n    Today is {% transname \"day\" %}${date.strftime('%a')}{% end %}\r\n    {% end %}.\r\n\r\n    {% for verse in poem %}\r\n        {% for line in verse %}$line\r\n        {% end %}\r\n    {% end %}\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nTo install the latest release using pip (recommended):\r\n\r\n.. code:: sh\r\n\r\n    pip install piglet\r\n\r\n\r\nTo install the latest source:\r\n\r\n.. code:: sh\r\n\r\n    hg clone https://bitbucket.org/ollyc/piglet\r\n    cd piglet\r\n    python setup.py install\r\n\r\n\r\n\r\nRendering templates from the Python API\r\n----------------------------------------\r\n\r\nA simple example of rendering a template from python code:\r\n\r\n.. code:: python\r\n\r\n    from piglet import HTMLTemplate\r\n\r\n    template = HTMLTemplate('<p>$greeting</p)')\r\n    print(template.render({'greeting': 'Bonjour!'}))\r\n\r\n\r\nLoading templates from disk:\r\n\r\n.. code:: python\r\n\r\n    from piglet import TemplateLoader\r\n\r\n    loader = TemplateLoader(['./templates/'])\r\n    template = loader.load('mytemplate.html')\r\n    print(template.render({'greeting': 'Hello!'})\r\n\r\n\r\nA fully loaded example:\r\n\r\n.. code:: python\r\n\r\n    from piglet import TemplateLoader\r\n    import gettext\r\n\r\n    loader = TemplateLoader(\r\n        # List of directories to search for template files\r\n        ['./templates/'],\r\n\r\n        # Auto reload templates when files are modified? Defaults to False,\r\n        # use True for development\r\n        auto_reload=True,\r\n\r\n        # The template class to use - either HTMLTemplate or TextTemplate\r\n        template_cls=HTMLTemplate,\r\n\r\n        # File encoding to use by default\r\n        default_encoding='UTF-8',\r\n\r\n        # A persistent on disk cache for piglet templates\r\n        cache_dir='.cache/piglet'\r\n\r\n        # A factory function returning a gettext Translations instance\r\n        # or compatible object. For example Django users could plug in\r\n        # `lambda: django.utils.translation`. If your app isn't translated\r\n        # omit this argument.\r\n        translations_factory=lambda: gettext.translation(...),\r\n\r\n    )\r\n    template = loader.load('mytemplate.html', encoding='UTF-8')\r\n\r\nTemplates can also be rendered as a stream. This might be useful for generating\r\nlong documents that you don't want to hold in memory all at once:\r\n\r\n.. code:: python\r\n\r\n    template = loader.load('huge.html', encoding='UTF-8')\r\n    for s in template({'data': load_massive_dataset()}):\r\n        sys.stdout.write(s)\r\n\r\n\r\n\r\nTemplate Inheritance\r\n--------------------\r\n\r\nThe layout template should be marked up with `<py:block>` tags\r\nto indicate customization points:\r\n\r\n.. code:: html\r\n\r\n    <!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n        <title py:block=\"title\">Default title</title>\r\n    </head>\r\n    <body>\r\n        <py:block name=\"content\">\r\n        Content goes here\r\n        </py:block>\r\n    </body>\r\n    </html>\r\n\r\n\r\nChild templates then use ``<py:extends href=\"...\">`` to pull in the parent's\r\nlayout.\r\n\r\n\r\nYou can also define template functions:\r\n\r\n.. code:: html\r\n\r\n    <!--! File: widgets.html\r\n    -->\r\n    <py:def function=\"modal(content, title='hello')\">\r\n        <div class=\"modal\">\r\n            <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <button type=\"button\" data-dismiss=\"modal\">X</button>\r\n                        <h4 class=\"modal-title\">$title</h4>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        ${content() if callable(content) else content}\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\">Close</button>\r\n                        <button type=\"button\">Save changes</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </py:def>\r\n\r\n\r\nTemplate functions can be imported into other templates:\r\n\r\n.. code:: html\r\n\r\n    <py:import href=\"widgets.html\" alias=\"widgets\"/>\r\n    <p>\r\n        ${widgets.modal(content=\"Hello world!\")}\r\n    </p>\r\n\r\n\r\nDid you notice the ``${content() if callable content else content}``\r\ninterpolation in the function body? That's to support ``py:call``, which can\r\npass chunks of template code as keyword arguments:\r\n\r\n.. code:: html\r\n\r\n        <py:call function=\"widgets.modal(fullpage=True)\">\r\n            <py:keyword name=\"content\">\r\n                This is the modal content. You can include\r\n                <a href=\"#\">markup here</a> too!\r\n            </py:keyword>\r\n        </py:call>\r\n\r\n\r\nLicense\r\n-------\r\n\r\nPiglet is licensed under the Apache license version 2.0.\r\n\r\n\r\n0.4.7 (released 2017-04-20)\r\n---------------------------\r\n\r\n- Bugfix: unicode characters in unescaped interpolations no longer raise\r\n  an exception in python 2.\r\n\r\n0.4.6 (released 2017-04-19)\r\n---------------------------\r\n\r\n- Added ``{% import path/to/template.txt as foo %}`` text template directive\r\n- Bugfix: fixed parsing error with quoted values in expressions contained\r\n  within template directives.\r\n- Bugfix: calling template functions from unescaped interpolations\r\n  (eg ``$!{myfunc()}`` no longer raises an exception.\r\n\r\n0.4.5 (released 2017-03-13)\r\n---------------------------\r\n\r\n- Rename project to piglet-templates\r\n- Fix error with nested <py:call> directives\r\n\r\n0.4.4 (released 2017-01-08)\r\n---------------------------\r\n\r\n- py:extends: allow the 'href' attribute to contain interpolations, eg\r\n  ``<py:extends href=\"${template}.html>\"``\r\n- i18n: added a babel extractor plugin for text templates\r\n- Bugfix: whitespace in translated strings is now correctly normalized\r\n- Bugfix: fixed crash in text templates when using\r\n  ``{% if %}...{% else %}...{% end %}`` blocks\r\n\r\n0.4.3 (released 2016-11-29)\r\n---------------------------\r\n\r\n- Loader: an ``extension_map`` argument can be given, mapping file extensions\r\n  to template classes. By default ``.txt`` is mapped to\r\n  `piglet.template.TextTemplate` and ``.html`` to\r\n  `piglet.template.HTMLTemplate`.\r\n- Bugfix: unicode symbols no longer cause an exception when used in template\r\n  expressions in Python 2.\r\n- Bugfix: fixed multiple scoping issue with variable names used in\r\n  the argument lists of ``<py:def>`` template function directives.\r\n\r\n0.4.2 (released 2016-11-08)\r\n---------------------------\r\n\r\n- Added <py:comment> directive\r\n- Exceptions are now reraised, ensuring the originating traceback is shown.\r\n- ``<py:call>`` Now passes its inner HTML as a positional argument, unless it\r\n  is whitespace.\r\n- ``<py:call>`` is now an inner directive, meaning that\r\n  ``<p py:call=\"foo()\"></p>``\r\n  will now fill the ``<p>`` element rather than replacing it.\r\n- The loader cache directory may be specified via the ``PIGLET_CACHE``\r\n  environment variable.\r\n- Added i18n:comment directive\r\n\r\n0.4.1 (released 2016-10-17)\r\n---------------------------\r\n\r\n- Added ``{% def %}`` and ``{% for %}`` text template directives\r\n- Added ``allow_absolute_paths`` option to TemplateLoader\r\n\r\n0.4 (released 2016-10-16)\r\n-------------------------\r\n\r\n- Bugfix: ensure ``<py:else>`` directives are always attached to the correct\r\n  ``<py:if>``\r\n- Added ``i18n:trans`` as an alias for i18n:translate\r\n- ``i18n:name`` directives now have a shorter alias\r\n  (``i18n:s``, for substitution) and can take an optional expr attribute,\r\n  eg ``<i18n:s name=\"foo\" expr=\"calculate_foo()\"/>``\r\n- Interpolations in translated strings are now extracted using the\r\n  interpolation text as a placeholder in the absence of a\r\n  ``i18n:name`` directive\r\n- ``py:whitespace=\"strip\"`` no longer strips whitespace between tags\r\n  on the same line.\r\n- Text template directives now include ``{% with %}``,\r\n  ``{% extends %}`` and ``{% block %}``\r\n- <py:extend> can now be used to load a template of the same name elsewhere\r\n  on the template search path.\r\n- The search algorithm used by TemplateLoader is improved\r\n- Bugfix: fix for duplicate rendering when super() is used in the middle of the\r\n  inheritance chain\r\n- Generated code uses ``yield from`` where it supported by the python version.\r\n- The caching code has been simplified, caching .py files to disk containing\r\n  the compiled python source.\r\n- Bugfix: ``py:attrs`` no longer raises an exception\r\n- Bugfix: interpolations can now contain entity references\r\n\r\n\r\n0.3 (released 2016-10-03)\r\n-------------------------\r\n\r\n- The translation code now normalizes whitespace in i18n:messages\r\n- Bugfix: fixed extraction of translations within ``<py:else>`` blocks\r\n- Added translation support in text templates\r\n\r\n0.2 (released 2016-10-02)\r\n-------------------------\r\n\r\n- Bugfix: ensure that grammar files are included in binary distributions\r\n- Bugfix: fix for undefined variable error when using py:with to reassign\r\n  a variable\r\n\r\n0.1 (released 2016-10-01)\r\n-------------------------\r\n\r\n- initial release",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://bitbucket.org/ollyc/piglet",
    "keywords": "jinja2,jinja,genshi,kajiki,mako,kid,template,templating,html,template engine",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "piglet-templates",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/piglet-templates/",
    "release_url": "https://pypi.org/project/piglet-templates/0.4.7/",
    "requires_python": "",
    "summary": "Piglet template engine: a fast HTML template engine",
    "version": "0.4.7"
  },
  "releases": {
    "0.4.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5341afd323067fa17f31c2625b88f3d3",
          "sha256": "f1c0c464e29ea29a3822dc039e5ec1ce0da430696caf0d05aa2e261152cf7786"
        },
        "downloads": 25,
        "filename": "piglet_templates-0.4.5-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "5341afd323067fa17f31c2625b88f3d3",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 67448,
        "upload_time": "2017-03-13T11:45:08",
        "url": "https://files.pythonhosted.org/packages/6a/85/f3c5cc81ce163c0b7caaa47bcbce29d53af0946bd57c569d73f3252605cc/piglet_templates-0.4.5-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0cb0d0edf9bf7766bc30dbd1fcf44801",
          "sha256": "22992f75e7cef7f88234b2ee89950c66614d3aa78897bd9f4b2af3cd9dedca76"
        },
        "downloads": 26,
        "filename": "piglet-templates-0.4.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0cb0d0edf9bf7766bc30dbd1fcf44801",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 54096,
        "upload_time": "2017-03-13T11:45:12",
        "url": "https://files.pythonhosted.org/packages/4d/ab/f697790c44c891ab6984a80e09007b387d451b6a09509fa283666bb13e3d/piglet-templates-0.4.5.tar.gz"
      }
    ],
    "0.4.5.dev0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c84b703e8edd1e333855ad6c2e09dbb2",
          "sha256": "ddf4e9c0591ed264856103996fbeacec634a270d00f9164060cd923b40e18773"
        },
        "downloads": 22,
        "filename": "piglet-templates-0.4.5.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "c84b703e8edd1e333855ad6c2e09dbb2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 51302,
        "upload_time": "2017-03-13T11:45:11",
        "url": "https://files.pythonhosted.org/packages/7e/89/cb0ac83fb43e334b12bb713374686c9d9539f65efe109c50c16a2611dab1/piglet-templates-0.4.5.dev0.tar.gz"
      }
    ],
    "0.4.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f7e7fcd58afe3a0dfc0bc6c3d8bf42cd",
          "sha256": "299b65d35bc1d2c8d254732d2ed272ffaea109e4500805319fd36d4227118bc5"
        },
        "downloads": 0,
        "filename": "piglet_templates-0.4.6-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7e7fcd58afe3a0dfc0bc6c3d8bf42cd",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 67921,
        "upload_time": "2017-04-19T19:45:33",
        "url": "https://files.pythonhosted.org/packages/6f/b7/72452baa9d5e9ded2ddc9ef2e94475f4772559b9e62724d4e428ea0c6821/piglet_templates-0.4.6-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f529223c0f306cbbf0bbe6ca7bec514a",
          "sha256": "acd0466cf4de61c49b1fd39350801283e7fc8d883b34f316da297cd90c762aa2"
        },
        "downloads": 0,
        "filename": "piglet-templates-0.4.6.tar.gz",
        "has_sig": false,
        "md5_digest": "f529223c0f306cbbf0bbe6ca7bec514a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 51852,
        "upload_time": "2017-04-19T19:45:37",
        "url": "https://files.pythonhosted.org/packages/3f/94/45107ee2fca27e3520d2da4eb99662b5d78cec3f0266584278088f1835d6/piglet-templates-0.4.6.tar.gz"
      }
    ],
    "0.4.6.dev0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bf39263a1c833577eeb28a2573b82361",
          "sha256": "236a4b357329b2133dfedfee09af40273bbaa506961ef2333a781e62a1420e0b"
        },
        "downloads": 0,
        "filename": "piglet-templates-0.4.6.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "bf39263a1c833577eeb28a2573b82361",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 51461,
        "upload_time": "2017-04-19T19:45:35",
        "url": "https://files.pythonhosted.org/packages/80/23/39fb71dd5b92a08bd541ebd55c4083a3014bf16ec47f5cbd577619679e5d/piglet-templates-0.4.6.dev0.tar.gz"
      }
    ],
    "0.4.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "60be9d39c4a27b34954d9acc9f46590c",
          "sha256": "004e60b7b487c6442e323e4557a034882b4691f0751e70a69b4cf2232f0c9287"
        },
        "downloads": 0,
        "filename": "piglet_templates-0.4.7-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "60be9d39c4a27b34954d9acc9f46590c",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 68041,
        "upload_time": "2017-04-20T07:58:05",
        "url": "https://files.pythonhosted.org/packages/a4/21/2b1d4d92eab0e6b2b1de07876135161b16eeeccb067367bc1ed82efe0763/piglet_templates-0.4.7-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c405c4f1b72a59a95a85b8944abd09e7",
          "sha256": "1b2183fd50a57d6f259c5580a179d5baed69a79227bc3e9209c54f4bf83dbb1c"
        },
        "downloads": 0,
        "filename": "piglet-templates-0.4.7.tar.gz",
        "has_sig": false,
        "md5_digest": "c405c4f1b72a59a95a85b8944abd09e7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 54749,
        "upload_time": "2017-04-20T07:58:07",
        "url": "https://files.pythonhosted.org/packages/59/fe/95af993ba4f805baa3ad13ebe25afe1a0e7cc3452360dfcfce732602900f/piglet-templates-0.4.7.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "60be9d39c4a27b34954d9acc9f46590c",
        "sha256": "004e60b7b487c6442e323e4557a034882b4691f0751e70a69b4cf2232f0c9287"
      },
      "downloads": 0,
      "filename": "piglet_templates-0.4.7-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "60be9d39c4a27b34954d9acc9f46590c",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 68041,
      "upload_time": "2017-04-20T07:58:05",
      "url": "https://files.pythonhosted.org/packages/a4/21/2b1d4d92eab0e6b2b1de07876135161b16eeeccb067367bc1ed82efe0763/piglet_templates-0.4.7-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "c405c4f1b72a59a95a85b8944abd09e7",
        "sha256": "1b2183fd50a57d6f259c5580a179d5baed69a79227bc3e9209c54f4bf83dbb1c"
      },
      "downloads": 0,
      "filename": "piglet-templates-0.4.7.tar.gz",
      "has_sig": false,
      "md5_digest": "c405c4f1b72a59a95a85b8944abd09e7",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 54749,
      "upload_time": "2017-04-20T07:58:07",
      "url": "https://files.pythonhosted.org/packages/59/fe/95af993ba4f805baa3ad13ebe25afe1a0e7cc3452360dfcfce732602900f/piglet-templates-0.4.7.tar.gz"
    }
  ]
}