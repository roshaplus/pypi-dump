{
  "info": {
    "author": "maxme1",
    "author_email": "maxs987@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "This repository contains a grammar for config files, as well as a\nparser, a registration system and a manager of resources, and is mainly\ndesigned for the `deep\\_pipe <https://github.com/neuro-ml/deep_pipe>`__\nlibrary.\n\nGrammar overview\n================\n\nResources definition\n--------------------\n\nThink of resources as constants in a programming language. They are\ndeclared using the ``=`` symbol.\n\n.. code:: python\n\n    file_path = \"/some/path\"\n    num_folds = 5\n    kernel_sizes = [3 3 5]\n    some_dict = {\n      \"a\": \"my string\"\n      \"b\": [\"some\" \"list\" 3]\n    }\n\nAll the data types allowed in JSON are allowed in this grammar too,\nhowever the coma (``,``) symbol is optional.\n\nComments\n--------\n\nComments begin with ``//`` and end with a newline character:\n\n.. code:: python\n\n    // a comment\n    x = 1 // a very important constant\n\nModules definition\n------------------\n\nModules are the key concept in dpipe. They can be declared in two ways:\nby using indentation\n\n.. code:: python\n\n    my_dataset = dataset:isles\n        data_path = \"my_path\"\n        filename = \"meta.csv\"\n\nor round brackets\n\n.. code:: python\n\n    my_dataset = dataset:isles(\n        data_path = \"my_path\"\n        filename = \"meta.csv\"\n    )\n\nNote, that inside round brackets as well as square and curly brackets\n(JSON arrays and objects) the indentation has no effect.\n\nSo, the following declaration is equivalent to the previous one.\n\n.. code:: python\n\n    my_dataset = dataset:isles(data_path = \"my_path\" filename = \"meta.csv\")\n\nAs a consequence, if you need to define a module inside an array or\nobject, you must use round brackets:\n\n.. code:: python\n\n    datasets = [\n      dataset:isles(filename = \"meta.csv\")\n      dataset:brats(filename = \"meta.csv\")\n    ]\n\nNesting modules\n~~~~~~~~~~~~~~~\n\nIf a module takes another module as a parameter, you can simply nest\ntheir definitions:\n\n.. code:: python\n\n    dataset = dataset_wrapper:cached\n        dataset = dataset:isles\n            filename = \"meta.csv\"     \n\nThe ``lazy`` parameter\n~~~~~~~~~~~~~~~~~~~~~~\n\nSome resources must not be called when you specify their params.\n\nTo avoid the resource from being called you ca use the ``@lazy`` parameter:\n\n.. code:: json\n\n    dataset = dataset:isles\n        @lazy\n        filename = \"meta.csv\"     \n\nMixins\n------\n\nThe grammar also supports multiple inheritance, realized as mixins.\n\n.. code:: json\n\n    @extends \"../relative/path/config_one\" \"/or/absolute/path/config_two\"\n\n    another_resource = \"Important data\"\n\nThe ``@extends`` command takes any number of string arguments,\ncontaining paths. The paths can be absolute, or relative to the folder\nwhere lies the config that is being parsed.\n\nResource Manager\n================\n\nThe ResourceManager class interprets a config file and manages the\nresources defined in it:\n\n.. code:: python\n\n    rm = ResourceManager(config_path, get_module)\n    print(rm.another_resource)\n\nAll the requests are processed lazily.\n\nRegistration system\n===================\n\nThe RegistrationSystem class provides a convenient way to keep track of\nall your modules in python code.\n\nTo register a resource (and use it in your configs) you can either use a\ndecorator, or a function:\n\n.. code:: python\n\n    @register(module_name='dummy', module_type='dataset')\n    class Dataset:\n        def __init__(self, data_path):\n            # init implementation\n            pass\n        # class implementation\n        pass\n        \n    data = 'some important data defined inside Python'\n    register_inline(data, module_name='data', module_type='constants')\n\nThen you can use it inside your config file:\n\n.. code:: json\n\n    dataset = dataset:dummy\n        data_path = \"/some/path\"\n        \n    important = constants:data\n",
    "docs_url": null,
    "download_url": "https://github.com/maxme1/resource-manager/archive/0.2.3.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/maxme1/resource-manager",
    "keywords": "config",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "resource-manager",
    "platform": "",
    "project_url": "https://pypi.org/project/resource-manager/",
    "release_url": "https://pypi.org/project/resource-manager/0.2.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A small resource manager for config files",
    "version": "0.2.3"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3f153716296824f769541b4291dd7559",
          "sha256": "61479c649e0cd89ea614fc4a1d04f408ad15c800c37431ee4861ffcc8313682b"
        },
        "downloads": -1,
        "filename": "resource-manager-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3f153716296824f769541b4291dd7559",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11193,
        "upload_time": "2017-10-24T14:08:45",
        "url": "https://files.pythonhosted.org/packages/25/02/6c72931bd92290d288d86d40386a8e1c5d2e44bd6631205a9f9dda4b43f7/resource-manager-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2ab3408b0004cbf6e5d62b4006675c0a",
          "sha256": "08443808b99f162f78f2f64086c32eb94b584941d653c6f37635b98ea6c6b851"
        },
        "downloads": -1,
        "filename": "resource-manager-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2ab3408b0004cbf6e5d62b4006675c0a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11308,
        "upload_time": "2017-10-26T15:55:53",
        "url": "https://files.pythonhosted.org/packages/16/dc/5286f0c8d93ea9bfe5e3fea47be2c3905b58f6cb97f968fbdfaff7bae46d/resource-manager-0.2.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fb2b1cb4195d414794b3003e7516f6ff",
          "sha256": "b08ab45a0c5663460784ad62c56cf80487bcd6cbde4df77d35e6f85f0e37aeb1"
        },
        "downloads": -1,
        "filename": "resource-manager-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fb2b1cb4195d414794b3003e7516f6ff",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11339,
        "upload_time": "2017-10-26T16:02:42",
        "url": "https://files.pythonhosted.org/packages/1f/2f/171b8f13a73339dfba7e2be9d6cb08c2b419efc64d5cf8cb998d1c3aa585/resource-manager-0.2.1.tar.gz"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2c6b0c9c4a9f165aad28e5ebf7490eeb",
          "sha256": "ef896402a682a0eb838575b9581f19a0cd5e56e5f0455c638b715a5c186a959f"
        },
        "downloads": -1,
        "filename": "resource-manager-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2c6b0c9c4a9f165aad28e5ebf7490eeb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11342,
        "upload_time": "2017-10-26T16:19:29",
        "url": "https://files.pythonhosted.org/packages/2e/66/84c40fc2ab36c28d27ce11fbaa895de61662423d3c484d09e6480f00c588/resource-manager-0.2.2.tar.gz"
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "23ab93f3897e5fc62c920197a52f7052",
          "sha256": "d8f403f107a73937a00c1c89dd3dff4c13a970f7b70cf1fa7d1599e2371ae202"
        },
        "downloads": -1,
        "filename": "resource-manager-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "23ab93f3897e5fc62c920197a52f7052",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11351,
        "upload_time": "2017-10-26T16:46:02",
        "url": "https://files.pythonhosted.org/packages/a3/48/f5980f7b5b4c13d9c634b12197ac4240cdcb9482991eed9398d71e153e0a/resource-manager-0.2.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "23ab93f3897e5fc62c920197a52f7052",
        "sha256": "d8f403f107a73937a00c1c89dd3dff4c13a970f7b70cf1fa7d1599e2371ae202"
      },
      "downloads": -1,
      "filename": "resource-manager-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "23ab93f3897e5fc62c920197a52f7052",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 11351,
      "upload_time": "2017-10-26T16:46:02",
      "url": "https://files.pythonhosted.org/packages/a3/48/f5980f7b5b4c13d9c634b12197ac4240cdcb9482991eed9398d71e153e0a/resource-manager-0.2.3.tar.gz"
    }
  ]
}