{
  "info": {
    "author": "Andre Santos",
    "author_email": "andre.f.santos@inesctec.pt",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Bonsai\n======\n\n| Bonsai is an attempt to provide a miniature and refined representation\n  for the\n| often cumbersome **syntax trees** and **program models**.\n| This idea, of providing a *smaller tree* that is more or less the same\n  thing,\n| is where the name comes from.\n\n| This work started as part of an analysis tool that I am developing for\n  my own\n| research. I am interested in analysing `ROS`_\n| robotics applications, which are often written in C++.\n| Since free C++ analysis tools are *rather scarce*, I tried\n| to come up with my own, using the Python bindings of the ``clang``\n  compiler.\n| At the moment of this writing, I am aware that these bindings are\n  incomplete\n| in terms of AST information they provide.\n\n| As this analysis tool developed, I realized that the C++ analysis\n  features\n| are independent of ROS or any other framework, and that this kind of\n  tool\n| might be useful for someone else, either as is, or as a starting point\n  for\n| something else.\n\nFeatures\n--------\n\n| Bonsai provides an interface to represent, analyse or manipulate\n  programs.\n| The model it uses is abstract enough to serve as a basis for specific\n  language\n| implementations, although it focuses more on\n  imperative/object-oriented\n| languages for now.\n\nWhat to expect from **bonsai**:\n\n-  classes for the different **entities of a program** (e.g. variables,\n   functions, etc.);\n-  extended classes for **specific programming languages** (only C++ for\n   now);\n-  **parser implementations**, able to take a file and produce a model\n   (e.g. ``clang`` for C++);\n-  extensible interface to **manipulate and query** the resulting model\n   (e.g. find calls for a function);\n-  a console script to use as a standalone application.\n\nInstallation\n------------\n\n| Here are some instructions to help you get bonsai.\n| Bonsai has been tested with *Linux Ubuntu* and *Python 2.7*,\n| but the platform should not make much of a difference.\n| Dependencies are minimal, and depend on what you want to analyse.\n\n| Since at the moment there is only a single implementation for C++\n| using clang 3.8, you will need to install ``libclang`` and the\n| `clang.cindex bindings`_\n| (``pip install clang``) to parse C++ files. Skip this if you want to\n  use\n| the library in any other way.\n\nMethod 1: Running Without Installation\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n| Open a terminal, and move to a directory where you want to clone this\n| repository.\n\n.. code:: bash\n\n    git clone https://github.com/git-afsantos/bonsai.git\n\n| There is an executable script in the root of this repository to help\n  you get started.\n| It allows you to run bonsai without installing it. Make sure that your\n  terminal is at\n| the root of the repository.\n\n.. code:: bash\n\n    cd bonsai\n    python bonsai-runner.py <args>\n\nYou can also run it with the executable package syntax.\n\n.. code:: bash\n\n    python -m bonsai <args>\n\nMethod 2: Installing Bonsai on Your Machine\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n| Bonsai is now available on `PyPi`_.\n| You can install it from source or from a wheel.\n\n.. code:: bash\n\n    [sudo] pip install bonsai-code\n\n| The above command will install bonsai for you. Alternatively, download\n  and extract its\n| source, move to the project\u2019s root directory, and then execute the\n  following.\n\n.. code:: bash\n\n    python setup.py install\n\n| After installation, you should be able to run the command ``bonsai``\n  in your terminal\n| from anywhere.\n\nExamples\n--------\n\n| The ``cpp_example.py`` script at the root of this repository is a\n  small example on\n| how to parse a C++ file and then find all references to a variable\n  ``a`` in that file.\n| In it, you can see parser creation\n\n.. code:: python\n\n    parser = CppAstParser(workspace = \"examples/cpp\")\n\n| access to the global (top level, or root) scope of the program, and\n  obtaining\n| a pretty string representation of everything that goes in it\n\n.. code:: python\n\n    parser.global_scope.pretty_str()\n\n| getting a list of all references to variable ``a``, starting the\n  search from\n| the top of the program (global scope)\n\n.. code:: python\n\n    CodeQuery(parser.global_scope).all_references.where_name(\"a\").get()\n\n| and accessing diverse properties from the returned ``CodeReference``\n  objects,\n| such as file line and column (``cppobj.line``, ``cppobj.column``), the\n  type of the\n| object (``cppobj.result``), what is it a reference of\n  (``cppobj.reference``,\n| in this case a ``CodeVariable``) and an attempt to interpret the\n  program and\n| resolve the reference to a concrete value\n  (``resolve_reference(cppobj)``).\n\n| Do note that **resolving expressions and references is still\n  experimental**,\n| and more often that not will not be able to produce anything useful.\n\n| This is the pretty string output for a program that defines a class\n  ``C``\n| and a couple of functions.\n\n::\n\n    class C:\n      C():\n        [declaration]\n\n      void m(int a):\n        [declaration]\n\n      int x_ = None\n\n    C():\n      x_ = 0\n\n    void m(int a):\n      a = (a + 2) * 3\n      this.x_ = a\n\n    int main(int argc, char ** argv):\n      C c = new C()\n      c.m(42)\n      C * c1 = new C()\n      C * c2 = new C()\n      new C()\n      delete(c1)\n      delete(c2)\n      return 0\n\n| The pretty string representation, as seen, is a sort of\n  pseudo-language, inspired\n| in the Python syntax, even though the parsed program is originally in\n  C++.\n\n| For more details on what you can get from the various program\n  entities, check out\n| the source for the abstract model and then the language-specific\n| implementation of your choice.\n\n.. _ROS: http://www.ros.org/\n.. _clang.cindex bindings: https://github.com/llvm-mirror/clang/tree/master/bindings/python\n.. _PyPi: https://pypi.python.org/pypi/bonsai-code\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/git-afsantos/bonsai",
    "keywords": "static-analysis ast parsing",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bonsai-code",
    "platform": "",
    "project_url": "https://pypi.org/project/bonsai-code/",
    "release_url": "https://pypi.org/project/bonsai-code/0.1.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Static analysis library.",
    "version": "0.1.3"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a9abb20805084b95656c052953f71afc",
          "sha256": "597a46e203991f180c411bddb3ac812de201727457d2d0df44a85e832372cade"
        },
        "downloads": -1,
        "filename": "bonsai_code-0.1.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9abb20805084b95656c052953f71afc",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 29065,
        "upload_time": "2017-10-11T16:02:14",
        "url": "https://files.pythonhosted.org/packages/f2/24/6dea28636f924085b58dbf6693fbdf23787bfe1415b9b8908e3d51fd3304/bonsai_code-0.1.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "799db9d6fd4079fe5906a579141377ba",
          "sha256": "fefaa1ebcfc6dc6a396f9a7a001893512ac4419d4a0a50184a4838ad4447bbc6"
        },
        "downloads": -1,
        "filename": "bonsai-code-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "799db9d6fd4079fe5906a579141377ba",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19389,
        "upload_time": "2017-10-11T16:02:18",
        "url": "https://files.pythonhosted.org/packages/d1/c0/4d2c2927124705c23526ef6f6fb6529eb099d1bf357be9693378d9aea108/bonsai-code-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d07e52b4121297d93fe4b9f8af4f544b",
          "sha256": "38778002a3136747dc192a70f900ea74a6e35d37d461356296d39998793e3ca8"
        },
        "downloads": -1,
        "filename": "bonsai_code-0.1.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "d07e52b4121297d93fe4b9f8af4f544b",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 33965,
        "upload_time": "2017-11-09T22:47:12",
        "url": "https://files.pythonhosted.org/packages/0f/47/79d89c8966aaaf2a620e13e4070136d85be4a939abef9235e61ebfc37c80/bonsai_code-0.1.1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5196a3cd935bd88af02ddc7bbdeeeec5",
          "sha256": "caa14938534d75cf05e6814e97d1429076220b34d0482fde49b4f0911b893b4c"
        },
        "downloads": -1,
        "filename": "bonsai-code-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5196a3cd935bd88af02ddc7bbdeeeec5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25058,
        "upload_time": "2017-11-09T22:47:13",
        "url": "https://files.pythonhosted.org/packages/e7/39/e3c869eb1fbffae90468aa62f246312dad45bd60f7fe177e326d099495d3/bonsai-code-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "91975a6b7b60bc2f4cc6d2a412b981de",
          "sha256": "43aebaf99678f07e253f0606dcebe5493f3157477ded33dd21367e24c5bea52c"
        },
        "downloads": -1,
        "filename": "bonsai_code-0.1.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "91975a6b7b60bc2f4cc6d2a412b981de",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 33975,
        "upload_time": "2017-11-10T09:16:10",
        "url": "https://files.pythonhosted.org/packages/64/42/6589d005922cff23b5d0bbe1dae863068f93e3005db98b9bed7dcfa0cbb7/bonsai_code-0.1.2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e606a28c9bd524f4cb5d7b713423043f",
          "sha256": "e165d5d7d4f99e47e9282183549e1c557b5f6169412d0285e9de5d995b64017e"
        },
        "downloads": -1,
        "filename": "bonsai-code-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e606a28c9bd524f4cb5d7b713423043f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25078,
        "upload_time": "2017-11-10T09:16:11",
        "url": "https://files.pythonhosted.org/packages/a4/fa/38ce9f7fada05b353af844c42ca678dfa5f73ae8da869285cf0964b0ac5b/bonsai-code-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cd8f10c5f9a3c111b3250cef9b356c71",
          "sha256": "01c0860a5e383437424591cb143b79cc2d6a0fd896b0b7abbbb8297348a02e8a"
        },
        "downloads": -1,
        "filename": "bonsai_code-0.1.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd8f10c5f9a3c111b3250cef9b356c71",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 33979,
        "upload_time": "2017-11-10T09:19:37",
        "url": "https://files.pythonhosted.org/packages/bf/d6/f1a87733ab396ec572d91d468f7983fa4356620e13cf5bbaec017b5ca46e/bonsai_code-0.1.3-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4f363d41362c26ca4f41b91cf0c2c6a4",
          "sha256": "19bb94c9ed398e0999588908c3505d547e4c2ede4a957643ee6fb9951c58506d"
        },
        "downloads": -1,
        "filename": "bonsai-code-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4f363d41362c26ca4f41b91cf0c2c6a4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25073,
        "upload_time": "2017-11-10T09:19:39",
        "url": "https://files.pythonhosted.org/packages/3d/d2/25772cf0f6efd62b182fa7a419214083960941769e031d275775677efb93/bonsai-code-0.1.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "cd8f10c5f9a3c111b3250cef9b356c71",
        "sha256": "01c0860a5e383437424591cb143b79cc2d6a0fd896b0b7abbbb8297348a02e8a"
      },
      "downloads": -1,
      "filename": "bonsai_code-0.1.3-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "cd8f10c5f9a3c111b3250cef9b356c71",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 33979,
      "upload_time": "2017-11-10T09:19:37",
      "url": "https://files.pythonhosted.org/packages/bf/d6/f1a87733ab396ec572d91d468f7983fa4356620e13cf5bbaec017b5ca46e/bonsai_code-0.1.3-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "4f363d41362c26ca4f41b91cf0c2c6a4",
        "sha256": "19bb94c9ed398e0999588908c3505d547e4c2ede4a957643ee6fb9951c58506d"
      },
      "downloads": -1,
      "filename": "bonsai-code-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "4f363d41362c26ca4f41b91cf0c2c6a4",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 25073,
      "upload_time": "2017-11-10T09:19:39",
      "url": "https://files.pythonhosted.org/packages/3d/d2/25772cf0f6efd62b182fa7a419214083960941769e031d275775677efb93/bonsai-code-0.1.3.tar.gz"
    }
  ]
}