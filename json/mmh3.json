{
  "info": {
    "author": "Hajime Senuma",
    "author_email": "hajime.senuma@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "mmh3\r\n====\r\n\r\n.. image:: https://img.shields.io/travis/hajimes/mmh3.svg?branch=master\r\n   :target: https://travis-ci.org/hajimes/mmh3\r\n\r\n.. image:: https://ci.appveyor.com/api/projects/status/github/hajimes/mmh3?branch=master&svg=true\r\n   :target: https://ci.appveyor.com/project/hajimes/mmh3\r\n\r\nPython wrapper for MurmurHash (MurmurHash3), a set of fast and robust hash functions.\r\n\r\nmmh3 2.4 supports Python 2.7, Python 3.3 and higher.\r\n\r\nUsage\r\n-----\r\n\r\nSample Usage::\r\n\r\n    >>> import mmh3\r\n    >>> mmh3.hash('foo') # 32 bit signed int\r\n    -156908512\r\n    >>> mmh3.hash64('foo') # two 64 bit signed ints (by using the 128-bit algorithm as its backend)\r\n    (-2129773440516405919, 9128664383759220103)\r\n    >>> mmh3.hash128('foo') # 128 bit signed int\r\n    168394135621993849475852668931176482145\r\n    >>> mmh3.hash_bytes('foo') # 128 bit value as bytes\r\n    'aE\\xf5\\x01W\\x86q\\xe2\\x87}\\xba+\\xe4\\x87\\xaf~'\r\n    >>> mmh3.hash('foo', 42) # uses 42 for its seed\r\n    -1322301282\r\n\r\n``hash64``, ``hash128``, and ``hash_bytes`` have the third argument for architecture optimization. Use True for x64 and False for x86 (default: True).::\r\n\r\n    >>> mmh3.hash64('foo', 42, True) \r\n    (-840311307571801102, -6739155424061121879)\r\n\r\nBeware that ``hash64`` returns **two** values, because it uses the 128-bit version of MurmurHash3 as its backend.\r\n\r\nVersion 2.4 added support for 64-bit data.\r\n\r\n    >>> import numpy as np\r\n    >>> a = np.zeros(2**32, dtype=np.int8)\r\n    >>> mmh3.hash_bytes(a)\r\n    b'V\\x8f}\\xad\\x8eNM\\xa84\\x07FU\\x9c\\xc4\\xcc\\x8e'\r\n\r\nVersion 2.4 also changed the type of seeds from signed 32-bit int to unsigned 32-bit int. (**The resulting values with signed seeds still remain the same as before, as long as they are 32-bit**)\r\n\r\n    >>> mmh3.hash('aaaa', -1756908916) # signed rep. for 0x9747b28c\r\n    1519878282\r\n    >>> mmh3.hash('aaaa', 2538058380) # unsigned rep. for 0x9747b28c\r\n    1519878282\r\n\r\nBe careful so that these seeds do not exceed 32-bit. Unexpected results may happen with invalid values.\r\n\r\n    >>> mmh3.hash('foo', 2 ** 33)\r\n    -156908512\r\n    >>> mmh3.hash('foo', 2 ** 34)\r\n    -156908512\r\n\r\n\r\nChanges\r\n=======\r\n2.4 (2017-05-27)\r\n------------------\r\n* Support seeds with 32-bit unsigned integers; thanks `Alexander Maznev <https://github.com/pik>`_!\r\n* Support 64-bit data (under 64-bit environments)\r\n* Fix compile errors for Python 3.6 under Windows systems.\r\n* Add unit testing and continuous integration with Travis CI and AppVeyor.\r\n\r\n2.3.2 (2017-05-26)\r\n------------------\r\n* Relicensed from public domain to `CC0-1.0 <./LICENSE>`_.\r\n\r\n2.3.1 (2015-06-07)\r\n------------------\r\n* Fix compile errors for gcc >=5.\r\n\r\n2.3 (2013-12-08)\r\n----------------\r\n* Add ``hash128``, which returns a 128-bit signed integer.\r\n* Fix a misplaced operator which could cause memory leak in a rare condition.\r\n* Fix a malformed value to a Python/C API function which may cause runtime errors in recent Python 3.x versions.\r\n\r\nThe first two commits are from `Derek Wilson <https://github.com/underrun>`_. Thanks!\r\n\r\n2.2 (2013-03-03)\r\n----------------\r\n* Improve portability to support systems with old gcc (version < 4.4) such as CentOS/RHEL 5.x. (Commit from `Micha Gorelick <https://github.com/mynameisfiber>`_. Thanks!)\r\n\r\n2.1 (2013-02-25)\r\n----------------\r\n\r\n* Add `__version__` constant. Check if it exists when the following revision matters for your application.\r\n* Incorporate the revision r147, which includes robustness improvement and minor tweaks.\r\n\r\nBeware that due to this revision, **the result of 32-bit version of 2.1 is NOT the same as that of 2.0**. E.g.,::\r\n\r\n    >>> mmh3.hash('foo') # in mmh3 2.0\r\n    -292180858\r\n    >>> mmh3.hash('foo') # in mmh3 2.1\r\n    -156908512\r\n\r\nThe results of hash64 and hash_bytes remain unchanged. Austin Appleby, the author of Murmurhash, ensured this revision was the final modification to MurmurHash3's results and any future changes would be to improve performance only.\r\n\r\nLicense\r\n=======\r\n\r\n`CC0-1.0 <./LICENSE>`_.\r\n\r\nFAQ\r\n===\r\n\r\nHow can I use this module? Any tutorials?\r\n-----------------------------------------\r\n\r\nThe following textbooks and tutorials are great sources to learn how to use mmh3 (and other hash algorithms in general) for high-performance computing.\r\n\r\n* Chapter 11: Using Less Ram in Micha Gorelick and Ian Ozsvald. 2014. *High Performance Python: Practical Performant Programming for Humans*. O'Reilly Media. `ISBN: 978-1-4493-6159-4 <https://www.amazon.com/dp/1449361595>`_.\r\n* Duke University. `Efficient storage of data in memeory <http://people.duke.edu/~ccc14/sta-663-2016/20B_Big_Data_Structures.html>`_.\r\n* Max Burstein. `Creating a Simple Bloom Filter <http://www.maxburstein.com/blog/creating-a-simple-bloom-filter/>`_.\r\n* Bugra Akyildiz. `A Gentle Introduction to Bloom Filter <https://bugra.github.io/work/notes/2016-06-05/a-gentle-introduction-to-bloom-filter/>`_.\r\n\r\nSome results are different from other MurmurHash3-based libraries.\r\n------------------------------------------------------------------\r\n\r\nmmh3 returns **signed** values. To convert them into unsigned values, see https://stackoverflow.com/questions/20766813/how-to-convert-signed-to-unsigned-integer-in-python\r\n\r\nFor compatibility with Google Guava (Java), see https://stackoverflow.com/questions/29932956/murmur3-hash-different-result-between-python-and-java-implementation\r\n\r\n\r\nI want to report errors/ask questions/send requests.\r\n----------------------------------------------------\r\n\r\nThank you for helping me to improve the library. Please make sure to post them *through the issue tracking system of GitHub*. Issues sent directly to my email account may go unnoticed.\r\n\r\nAuthors\r\n=======\r\n\r\nMurmurHash3 was originally developed by Austin Appleby and distributed under public domain.\r\n\r\n* http://code.google.com/p/smhasher/\r\n\r\nPorted and modified for Python by Hajime Senuma.\r\n\r\n* http://pypi.python.org/pypi/mmh3\r\n* http://github.com/hajimes/mmh3",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://packages.python.org/mmh3",
    "keywords": "utility hash MurmurHash",
    "license": "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mmh3",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/mmh3/",
    "release_url": "https://pypi.org/project/mmh3/2.4/",
    "requires_python": "",
    "summary": "Python wrapper for MurmurHash (MurmurHash3), a set of fast and robust hash functions.",
    "version": "2.4"
  },
  "releases": {
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "801e9d44f8bd24ae663f201c53918fb5",
          "sha256": "787f67a05a9cf9a5ac0b4755e0b0cc2ded5a1541ffde710da43aeebd7a15162b"
        },
        "downloads": 7310,
        "filename": "mmh3-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "801e9d44f8bd24ae663f201c53918fb5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4863,
        "upload_time": "2011-06-07T14:17:38",
        "url": "https://files.pythonhosted.org/packages/cb/e0/d9459f9d4b56cc78c85f1c1aca54eb0ed89d4ed703da979e09b24806d434/mmh3-2.0.tar.gz"
      }
    ],
    "2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "de69924d56b7838e818de246591cdb8b",
          "sha256": "1c4f2cc8c15e473ec1e30f88619559a653a3068812a5108597ea9ec21a971d71"
        },
        "downloads": 212034,
        "filename": "mmh3-2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "de69924d56b7838e818de246591cdb8b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5526,
        "upload_time": "2013-03-03T12:49:32",
        "url": "https://files.pythonhosted.org/packages/55/54/7130149630120d8ab7c6b395966e908dc9f54e769982e34135db6713846c/mmh3-2.2.tar.gz"
      }
    ],
    "2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1e1e7acc8a4a5714ddc0f9228ebfb5b3",
          "sha256": "ef9896a8083ffadf92a9e41e3db4d276670cdcddf4b2a4d619d92edb4af6cbdb"
        },
        "downloads": 102769,
        "filename": "mmh3-2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1e1e7acc8a4a5714ddc0f9228ebfb5b3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5964,
        "upload_time": "2013-12-10T14:29:14",
        "url": "https://files.pythonhosted.org/packages/e9/a3/eca10f533c29f24610432c6e379c1196ce7c21990392d94d07551cb06cda/mmh3-2.3.tar.gz"
      }
    ],
    "2.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "388380bfd5f8f702ba2af7e4d72bddee",
          "sha256": "ecadc3557c093211a70b49814cf91d6833fff403edf2d8405645e227262de928"
        },
        "downloads": 664389,
        "filename": "mmh3-2.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "388380bfd5f8f702ba2af7e4d72bddee",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6122,
        "upload_time": "2015-06-07T23:03:12",
        "url": "https://files.pythonhosted.org/packages/87/a9/d15efdb230b1588b9427c77ce4b608aaf478bd0ebd47b2f6a7a1bc7cce4b/mmh3-2.3.1.tar.gz"
      }
    ],
    "2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "86bb3f4cd0ce4a934d0216348586249b",
          "sha256": "d8c2e813cc29aca93d8d5f89a497efbb37e61db21a43133651d4833d7b50962f"
        },
        "downloads": 0,
        "filename": "mmh3-2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "86bb3f4cd0ce4a934d0216348586249b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8130,
        "upload_time": "2017-05-29T15:06:03",
        "url": "https://files.pythonhosted.org/packages/c7/9f/4e97cfdeb5aa486531d804e8eafb42822a9d036ab86849a21603ad098dbb/mmh3-2.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "86bb3f4cd0ce4a934d0216348586249b",
        "sha256": "d8c2e813cc29aca93d8d5f89a497efbb37e61db21a43133651d4833d7b50962f"
      },
      "downloads": 0,
      "filename": "mmh3-2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "86bb3f4cd0ce4a934d0216348586249b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8130,
      "upload_time": "2017-05-29T15:06:03",
      "url": "https://files.pythonhosted.org/packages/c7/9f/4e97cfdeb5aa486531d804e8eafb42822a9d036ab86849a21603ad098dbb/mmh3-2.4.tar.gz"
    }
  ]
}