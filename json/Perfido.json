{
  "info": {
    "author": "Cameron Whiting",
    "author_email": "thetoxicarcade@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 2.7",
      "Topic :: Security :: Cryptography"
    ],
    "description": "# Perfido [![Build Status](https://travis-ci.org/toxik-io/perfido.svg?branch=master)](https://travis-ci.org/toxik-io/perfido)\nPerfido is a diff-friendly, no-guarentees encryption method for your repo.\nIt scans your repo, chops every file into chunks, and runs GCM (AEAD) symetric\nencryption on them, saving the keys it used with the public RSA keys in your\nsettings.\n\nWhen most of the file hasn't changed, this is meant to save a little space\nover just encrypting the whole file differently each time. (no guarentees).\n\n***Technically speaking, right now it's length hardcoded so deleting some means\nit has to re-encrypt the rest of the entire file, so... not space saving yet!***\n\n## Contributing (help welcome) :beers:\n\nYou're more than welcome to get mad at the fact that nothing\nworks yet, or that I repeat myself a whole lot.\n\n**Pull requests :heart:**, the commands to help out with your changes are:\n* `virtualenv staging -p python3`\n* `pylint perfido/`\n* `autopep8 -rvi .`\n* `green -vvv perfido`\n\n**Design :octocat:**\n* repeat less (for example, the context manager for repos within testing)\n* unify code that does the same thing (check/lookup -> status)\n* test with more isolation on code (when promptKeyring fails, almost everything does)\n* binary/string management on the libraries we're using (pygit, pycryptodome)\n\n**Algorithms :tophat:**\n* database lookups (comma separated, newlines (friendly with git's diff))\n* sizes of blocks (prefix on algorithm database)\n* unexpected states (could make a lot of permutation tables)\n\n\n### Todos:\n* versioning\n  * [ ] pypi stuff (initial package)\n  * [ ] fix pypi's angry nature\n  * [ ] allow installing to the command line\n  * [ ] use as a library\n* testing\n  * [ ] get example dirs reproducible\n  * [ ] build `with` helper for tests\n  * [ ] commit hook on failing lint/tests/coverage?\n* design\n  * [ ] path storage (or just have path as requirement to functions)\n  * [ ] use pygit instead of `subprocess.call` for compatibility vs shell commands\n  * [ ] move to subcommands in `run.py`\n  * [ ] combine check/lookup into one \"status\" command.\n* block lengths\n  * [ ] store blocklengths in db\n  * [ ] algorithm for variable blocklengths to save space\n  * [ ] find optimum AES-GCM message size (currently, 3*128)\n* multiple users (`keyAdd`, `keyDel`)\n  * [ ] command to manage GPG/triplesec keys on repo?\n  * [ ] pbkdf2 that? should scrypt by default.\n  * [ ] subfolders by key fingerprint, each file's paths\n  * [ ] build aliases back into files again.\n* [ ] sanity checking for files that don't exist in either place\n  * [ ] mv/rm commands (`perfidoMV`, `perfidoCP`, `perfidoRM`)\n  * [ ] add to encryption unencrypted files\n  * [ ] add to unencryption, files that don't need encrypting\n\n# Commands :computer:\n\n## Init :sparkles: `perfido init /path/to/repo`\nAdds perfido database dir to your project, inits git (to be helpful).\nDefaults to '.'\n\n## Encrypt :lock: `perfido encrypt /path/to/repo`\nEncrypts the working directory and stores that data with the public\nkeys within `.pfd`.\n\n## Decrypt :unlock: `perfido decrypt /path/to/repo`\nDecrypts the working directory with the private key in your home dir's\ndotfiles.\n\n## Lookup :eyes: `perfido lookup /path/to/repo`\nChecks whether a directory is a perfido repository. Could be\nreasonably combined with 'check' to produce a \"status\" command.\n\n## Check :mag: `perfido check /path/to/repo`\nTests whether file state is sane by reading perfido's DB and\ncomparing that to the working tree.\n\n## Key-Add :key: `perfido key-add alias /path/to/repo`\nCreate the private key needed for encrypting something. currently,\nshould really only be your own key. Then encrypts the repository\nmetadata with that key, just in-case.\n\n## Key-Del :key: `perfido key-del alias /path/to/repo`\nDeletes a key (defaults to your own). Will decrypt the repo before\ndeleting the key if it's the only one.\n\n## MV :runner: `perfido mv start finish`\nMove a file and its metadata\n\n## CP :runner: `perfido cp start finish`\nCopy a file and its metadata (should technically encrypt it differently?)\n\n## RM :boom: `perfido rm file`\nRemove a file and its metadata\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/toxik-io/perfido",
    "keywords": "Git AES AES-GCM Crypto",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Perfido",
    "platform": "",
    "project_url": "https://pypi.org/project/Perfido/",
    "release_url": "https://pypi.org/project/Perfido/0.0.0a0/",
    "requires_dist": [
      "argparse (>=1.4.0)",
      "pycryptodome (>=3.4.7)"
    ],
    "requires_python": "",
    "summary": "diff-friendly AES-GCM for git repos",
    "version": "0.0.0a0"
  },
  "releases": {
    "0.0.0a0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "554777c67ba1817fcdeec48f1dd5a272",
          "sha256": "c82e0e90029d880ba69bb50e233ccbadf4a11f17b9274239b4b564a674d119fb"
        },
        "downloads": -1,
        "filename": "perfido-0.0.0a0.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "554777c67ba1817fcdeec48f1dd5a272",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30748,
        "upload_time": "2017-11-06T07:19:31",
        "url": "https://files.pythonhosted.org/packages/ef/3e/e2a77d751c48315a31d94f23d2dea4550fb67394077759b7c078faa9aef8/perfido-0.0.0a0.linux-x86_64.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8dd6528adac03e456387281cd6c39a3c",
          "sha256": "8fa390c60cb31a6c79d0b06c49f4398af591127ab9846dd3f7d7bc2f477ed5ae"
        },
        "downloads": -1,
        "filename": "perfido-0.0.0a0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8dd6528adac03e456387281cd6c39a3c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 23816,
        "upload_time": "2017-11-06T07:19:29",
        "url": "https://files.pythonhosted.org/packages/84/65/f1774267e5441fea441fa3c2d8eee34ed6bcf9426506987ffa536ffd125f/perfido-0.0.0a0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b2f6e740351bc53a04158af306150415",
          "sha256": "d5772d68a59e24707cbdff27c923b513512470bcf644c127b13a87800a39d414"
        },
        "downloads": -1,
        "filename": "Perfido-0.0.0a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2f6e740351bc53a04158af306150415",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 23814,
        "upload_time": "2017-11-06T07:16:21",
        "url": "https://files.pythonhosted.org/packages/ee/b0/84ef407a590a3431be5e71c5a1e1e63194e26499fba0a40cc3a60d85a4ec/Perfido-0.0.0a0-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "554777c67ba1817fcdeec48f1dd5a272",
        "sha256": "c82e0e90029d880ba69bb50e233ccbadf4a11f17b9274239b4b564a674d119fb"
      },
      "downloads": -1,
      "filename": "perfido-0.0.0a0.linux-x86_64.tar.gz",
      "has_sig": false,
      "md5_digest": "554777c67ba1817fcdeec48f1dd5a272",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 30748,
      "upload_time": "2017-11-06T07:19:31",
      "url": "https://files.pythonhosted.org/packages/ef/3e/e2a77d751c48315a31d94f23d2dea4550fb67394077759b7c078faa9aef8/perfido-0.0.0a0.linux-x86_64.tar.gz"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "8dd6528adac03e456387281cd6c39a3c",
        "sha256": "8fa390c60cb31a6c79d0b06c49f4398af591127ab9846dd3f7d7bc2f477ed5ae"
      },
      "downloads": -1,
      "filename": "perfido-0.0.0a0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8dd6528adac03e456387281cd6c39a3c",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 23816,
      "upload_time": "2017-11-06T07:19:29",
      "url": "https://files.pythonhosted.org/packages/84/65/f1774267e5441fea441fa3c2d8eee34ed6bcf9426506987ffa536ffd125f/perfido-0.0.0a0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "b2f6e740351bc53a04158af306150415",
        "sha256": "d5772d68a59e24707cbdff27c923b513512470bcf644c127b13a87800a39d414"
      },
      "downloads": -1,
      "filename": "Perfido-0.0.0a0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b2f6e740351bc53a04158af306150415",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 23814,
      "upload_time": "2017-11-06T07:16:21",
      "url": "https://files.pythonhosted.org/packages/ee/b0/84ef407a590a3431be5e71c5a1e1e63194e26499fba0a40cc3a60d85a4ec/Perfido-0.0.0a0-py3-none-any.whl"
    }
  ]
}