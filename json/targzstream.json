{
  "info": {
    "author": "NVRAM",
    "author_email": "nvram@users.sourceforge.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Archiving :: Packaging",
      "Topic :: Utilities"
    ],
    "description": "targzstream\n===========\n\nVersion: 1.0\n\nSummary\n-------\n\nThis module provides an extension to the standard tarfile.TarFile class\nwhich provides the ability to add files to a TarFile that are compressed\non-the-fly.  It will only work on an uncompressed output tarfile, since after\nthe data is written it will overwrite the header for the file with the\ncorrect size data.\n\nLimitations\n-----------\n\n- The object to which the tarfile is being written must support \"seek()\", so\n  this cannot work over a socket, nor presumably with a compressed tarfile.\n  *Note: re-compressing contents is not very useful.*\n\n- The \"close_gz_file\" method *must* be called when the data is finished, and\n  calling \"close\" on the *GzipStream* object is not sufficient.\n\nExample Usage\n-------------\n\n.. code:: python\n\n    #!/usr/bin/env python3\n    import os, sys, shutil\n\n    import targzstream\n\n    # USAGE:  ./foo.py TARFILE INPUT [ INPUT2 ... ]\n    #  Eg: ./foo.py myoutput.tar *.cpp *.h\n\n    with targzstream.TarFile(sys.argv[1], mode='w') as tarball:\n        for fname in sys.argv[2:]:\n            st = os.stat(fname)\n            obj = tarball.add_gz_file(name=fname + '.gz', mtime=st.st_mtime,\n                                      uid=st.st_uid, gid=st.st_gid, mode=st.st_mode)\n\n            # Copy the data.\n            with open(fname, 'rb') as fin:\n                shutil.copyfileobj(fin, obj)\n\n            # REMEMBER: close_gz_file() is required\n            tarball.close_gz_file()\n    # The end.\n\nTODO\n----\n\n- Wrap *add_gz_file* and *close_gz_file* as a context manager, allowing simply:\n\n  .. code:: python\n\n    with tarball.gzstream(name=fname + '.gz', mtime=mtime, ...) as obj:\n        with open(fname, 'rb') as fin:\n            shutil.copyfileobj(fin, obj)\n\n- Have *add_gz_file* handle the result of an *os.stat*.  Eg:\n\n  .. code:: python\n\n    with tarball.gz_file(name=fname + '.gz', stat=os.stat(fname)) as obj:\n        with open(fname, 'rb') as fin:\n            shutil.copyfileobj(fin, obj)",
    "docs_url": null,
    "download_url": "https://github.com/n2vram/targzstream/archive/1.0",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/n2vram/targzstream",
    "keywords": "tarfile,gzip,streaming",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "targzstream",
    "platform": "any",
    "project_url": "https://pypi.org/project/targzstream/",
    "release_url": "https://pypi.org/project/targzstream/1.0/",
    "requires_python": null,
    "summary": "An extension to tarfile to allow adding compressed-on-the-fly files to a tarfile, allowing files too large to fit into memory or data that is generated on the fly.  Note that the output file object must support \"seek()\", hence must be a regular uncompressed tar file.",
    "version": "1.0"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a592177013a4fce0caa1e1018277b0d1",
          "sha256": "6b52ef34e9a249d54ff71c5338f5e672158fddd6c3efd5204321febf2c11abdc"
        },
        "downloads": 0,
        "filename": "targzstream-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a592177013a4fce0caa1e1018277b0d1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3581,
        "upload_time": "2017-04-23T06:54:49",
        "url": "https://files.pythonhosted.org/packages/b3/e4/fc1565dd5768b1fd682be8d08a7a9975ccb183f5a1df6d26f8a224de3e35/targzstream-1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a592177013a4fce0caa1e1018277b0d1",
        "sha256": "6b52ef34e9a249d54ff71c5338f5e672158fddd6c3efd5204321febf2c11abdc"
      },
      "downloads": 0,
      "filename": "targzstream-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a592177013a4fce0caa1e1018277b0d1",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3581,
      "upload_time": "2017-04-23T06:54:49",
      "url": "https://files.pythonhosted.org/packages/b3/e4/fc1565dd5768b1fd682be8d08a7a9975ccb183f5a1df6d26f8a224de3e35/targzstream-1.0.tar.gz"
    }
  ]
}