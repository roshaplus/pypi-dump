{
  "info": {
    "author": "Tomasz Jadachowski",
    "author_email": "tjadachowski@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Security :: Cryptography",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# README\n\nTool for translating and creating custom look addresses for various cryptocurrencies.\n\nTranslating produce address for different coin, which will have the same private key as address\nwhich is being translated. Of course private key is not needed or revealed during translation.\n\nCreating address gives us possibility to generate private key and corresponding address with\nspecified prefix.\n\nSupported coins are:\n* Bitcoin (BTC)\n* Bitcoin Cash (BCH)\n* BitcoinZ (BTCZ)\n* Bitstar (BITS)\n* Crave (CRAVE)\n* Dash (DASH)\n* Diamond (DMD)\n* Dogecoin (DOGE)\n* Hush (HUSH)\n* Komodo (KMD)\n* Litecoin (LTC)\n* Mooncoin (MOON)\n* Snow Gem (SNG)\n* Sirius (SIRX)\n* Zcash (ZCH)\n* Zclassic (ZCL)\n* Zeit (ZEIT)\n* ZenCash (ZEN)\n* Zero (ZERO)\n* Zoin (ZOIN)\n\nIf you find this tool useful please donate to BTC address: 1BTC1NNjeiAmFqe2n1QJjkEa4aMyAhkpKG\n## INSTALLATION\n\nInstall Python 3 (follow instructions from python.org). Supported versions are 3.4, 3.5, 3.6.\n\n### On Ubuntu\n `sudo apt-get install build-essential python3-dev libgmp3-dev`\n\n### Install python packages\n `pip3 install -r requirements.txt`\n\n\n## USAGE\n\n### Run\n\n 1. Translating address between coins:\n\n  `python3 transaddress.py --address=<ADDRESS> --input_symbol=<COIN SYMBOL> --output_symbol=<COIN SYMBOL>`\n\n  For example to translate Bitcoin address 1BTC1NNjeiAmFqe2n1QJjkEa4aMyAhkpKG to Hush address we enter:\n\n  `python3 transaddress.py -a 1BTC1NNjeiAmFqe2n1QJjkEa4aMyAhkpKG -i BTC -o HUSH`\n\n 2. Translating private key in wif format between coins\n\n  `python3 transprivkey.py --private_key=<ADDRESS> --output_symbol=<COIN SYMBOL>`\n\n  For example to translate Bitcoin private key KwDiDMtpksBAcfyHsVS5XzmirtyjKWSeaeM9U1QppugixMUeKMqp\n   to Hush private key we enter:\n\n  `python3 transprivkey.py -p KwDiDMtpksBAcfyHsVS5XzmirtyjKWSeaeM9U1QppugixMUeKMqp -o HUSH`\n\n 3. Generating address with given pattern and corresponding private key:\n\n `python3 genaddress.py --pattern=<PATTERN> --symbol=<COIN SYMBOL>`\n \n For example for Hush coin and prefix t1aaaa we enter:\n\n `python3 genaddress.py -p t1aaaa -s Hush`\n\n### Import\nCreated private key should be imported using bitcoin-cli program \nor corresponding tool (importing in Qt wallet doesn't always work)\n\n `bitcoin-cli importprivkey <GENERATED_PRIV_KEY>`\n\nTo verify the key was imported check:\n\n `bitcoin-cli dumpprivkey <GENERATED_ADDRESS>`\n\n## Tests\nInstall pytest ,pytest-cov and tox packages:\n\n `pip3 install -r requirements_dev.txt`\n\nRun tests and check report htmlcov/index.html:\n\n `python3 -m pytest --cov=./ --cov-report=html`\n \nTo run tests on various python versions run command:\n`tox`\n\n## Adding new coin\n1. Add new entry in `settings.py`. Prefix bytes are usually defined in chainparams.cpp file.\n Exemplary for Zen we have:\n\n`'ZEN': {'name': 'zen cash', 'address_prefix_bytes': b'\\x20\\x89', 'secret_prefix_bytes': b'\\x80'}`\n\n2. Update this readme with new supported coin\n3. Create pull request\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/tompin/multicrypto",
    "keywords": "cryptocurrencies",
    "license": "http://opensource.org/licenses/MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "multicrypto",
    "platform": "",
    "project_url": "https://pypi.org/project/multicrypto/",
    "release_url": "https://pypi.org/project/multicrypto/0.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Tool for translating and creating custom addresses for various cryptocurrencies",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b3f55d6c95a4d05e4f170735b5373693",
          "sha256": "1c27db04d0625a11fa015ba597a2faa21ab320b9c25a001381dceab761b9d711"
        },
        "downloads": -1,
        "filename": "multicrypto-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b3f55d6c95a4d05e4f170735b5373693",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6472,
        "upload_time": "2018-02-08T14:57:00",
        "url": "https://files.pythonhosted.org/packages/63/c1/d97e0e46ea24bb81b450c1d8809e9b49164b4d11767484f32238561e733d/multicrypto-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b3f55d6c95a4d05e4f170735b5373693",
        "sha256": "1c27db04d0625a11fa015ba597a2faa21ab320b9c25a001381dceab761b9d711"
      },
      "downloads": -1,
      "filename": "multicrypto-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b3f55d6c95a4d05e4f170735b5373693",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6472,
      "upload_time": "2018-02-08T14:57:00",
      "url": "https://files.pythonhosted.org/packages/63/c1/d97e0e46ea24bb81b450c1d8809e9b49164b4d11767484f32238561e733d/multicrypto-0.1.0.tar.gz"
    }
  ]
}