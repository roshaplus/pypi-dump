{
  "info": {
    "author": "Uptick",
    "author_email": "dev@uptickhq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# django-model-import\n\n[![PyPI version](https://badge.fury.io/py/django-model-import.svg)](https://badge.fury.io/py/django-model-import)\n\nDjango Model Import is a light weight CSV importer built for speed.\n\nIt uses a standard Django `ModelForm` to parse each row, giving you a familiar API to work with\nfor data validation and model instantiation. In most cases, if you already have a `ModelForm`\nfor the `ContentType` you are importing you do not need to create an import specific form.\n\nTo present feedback to the end-user running the import you can easily generate a preview\nof the imported data by toggling the `commit` parameter.\n\nIt also provides some import optimized fields for ForeignKey's, allowing preloading all\npossible values, or caching each lookup as it occurs, or looking up a model where multiple\nfields are needed to uniquely identify a resource.\n\n\n## Installation\n\nStandard pip install:\n\n```bash\npip install django-model-import\n```\n\n\n## Quickstart\n\n```python\nimport djangomodelimport\n\nclass BookImporter(ImporterModelForm):\n    name = forms.CharField()\n    author = CachedChoiceField(queryset=Author.objects.all(), to_field='name')\n\n    class Meta:\n        model = Book\n\nwith default_storage.open('books.csv', 'rb') as fh:\n    data = fh.read().decode(\"utf-8\")\n\nimporter = djangomodelimport.ModelImporter(BookImporter)\npreview = importer.process(data, commit=False)\nerrors = preview.get_errors()\n\nif errors:\n    print(errors)\n\nresults = importer.process(data, commit=True)\nfor result in results:\n    print(result.instance)\n\n```\n\n\n## Composite key lookups\n\nOften a relationship cannot be referenced via a single unique string. For this we can use\na `CachedChoiceField` with a `CompositeLookupWidget`. The widget looks for the values\nunder the `type` and `variant` columns in the source CSV, and does a unique lookup\nwith the field names specified in `to_field`, e.g. `queryset.get(type__name=type, name=variant)`.\n\nThe results of each `get` are cached internally for the remainder of the import minimising\nany database access.\n\n```python\nclass AssetImporter(ImporterModelForm):\n    site = djangomodelimport.CachedChoiceField(queryset=Site.objects.active(), to_field='ref')\n    type = djangomodelimport.CachedChoiceField(queryset=AssetType.objects.filter(is_active=True), to_field='name')\n    type_variant = djangomodelimport.CachedChoiceField(\n        queryset=InspectionItemTypeVariant.objects.filter(is_active=True),\n        required=False,\n        widget=djangomodelimport.CompositeLookupWidget(source=('type', 'variant')),\n        to_field=('type__name', 'name'),\n    )\n    contractor = djangomodelimport.CachedChoiceField(queryset=Contractor.objects.active(), to_field='name')\n```\n\n\n## Flat related fields\n\nOften you'll have a OneToOneField or just a ForeignKey to another model, but you want to be able to\ncreate/update that other model via this one. You can flatten all of the related model's fields onto\nthis importer using `FlatRelatedField`.\n\n```python\nclass ClientImporter(ImporterModelForm):\n    primary_contact = FlatRelatedField(\n        queryset=ContactDetails.objects.all(),\n        fields={\n            'contact_name': {'to_field': 'name', 'required': True},\n            'email': {'to_field': 'email'},\n            'email_cc': {'to_field': 'email_cc'},\n            'mobile': {'to_field': 'mobile'},\n            'phone_bh': {'to_field': 'phone_bh'},\n            'phone_ah': {'to_field': 'phone_ah'},\n            'fax': {'to_field': 'fax'},\n        },\n    )\n\n    class Meta:\n        model = Client\n        fields = (\n            'name',\n            'ref',\n            'is_active',\n            'account',\n\n            'primary_contact',\n        )\n```\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ABASystems/django-model-import",
    "keywords": "csv",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-model-import",
    "platform": "",
    "project_url": "https://pypi.org/project/django-model-import/",
    "release_url": "https://pypi.org/project/django-model-import/0.1.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Fast CSV imports using django model forms.",
    "version": "0.1.3"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "eaa9289c33ed8f1ec2bde5d6589cdb20",
          "sha256": "fff389f6ad6a80f83e57c1fe30ccb8e3011aa3a534660a74968f325160871b54"
        },
        "downloads": -1,
        "filename": "django-model-import-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eaa9289c33ed8f1ec2bde5d6589cdb20",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9844,
        "upload_time": "2017-09-18T03:02:08",
        "url": "https://files.pythonhosted.org/packages/2d/90/47cdd331e21b4fe6db44d2bfc2c9890f0af10e32f4483d365e5b3af1fc32/django-model-import-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a12bb708e674a46d0752611ed0b3f0a7",
          "sha256": "6eea8a272316158b61209a4f9b90a2a4830fe32903246e2157a2b1033d6e1df8"
        },
        "downloads": -1,
        "filename": "django-model-import-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a12bb708e674a46d0752611ed0b3f0a7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9194,
        "upload_time": "2017-11-27T04:41:18",
        "url": "https://files.pythonhosted.org/packages/b5/04/0baf5d85db0e38cfef8f840058970d933e5f170151fe92674e7e5c7ae1d8/django-model-import-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fc6166d7ecdae30a1f47968f9cda7b8d",
          "sha256": "45d3e7417e1858a0dba83f8a17d784e94e28f4330bdd202a466e624e036a5982"
        },
        "downloads": -1,
        "filename": "django-model-import-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fc6166d7ecdae30a1f47968f9cda7b8d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9200,
        "upload_time": "2017-12-17T23:14:49",
        "url": "https://files.pythonhosted.org/packages/bc/b0/50b3bb167c8c0205112318e3c058981cf4249369ce6d52d821042210b153/django-model-import-0.1.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fc6166d7ecdae30a1f47968f9cda7b8d",
        "sha256": "45d3e7417e1858a0dba83f8a17d784e94e28f4330bdd202a466e624e036a5982"
      },
      "downloads": -1,
      "filename": "django-model-import-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "fc6166d7ecdae30a1f47968f9cda7b8d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9200,
      "upload_time": "2017-12-17T23:14:49",
      "url": "https://files.pythonhosted.org/packages/bc/b0/50b3bb167c8c0205112318e3c058981cf4249369ce6d52d821042210b153/django-model-import-0.1.3.tar.gz"
    }
  ]
}