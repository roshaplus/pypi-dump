{
  "info": {
    "author": "it-spirit",
    "author_email": "thomas.massmann@it-spir.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Plone",
      "Framework :: Plone :: 4.1",
      "Framework :: Plone :: 4.2",
      "Framework :: Plone :: 4.3",
      "Framework :: Plone :: 5.0",
      "Framework :: Plone :: 5.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "spirit.plone.theming\n====================\n\nThis Plone Add-On provides some theming extensions for `Plone`_ Websites.\nIn order to use it, you would need a diazo theme which supports the provided options.\n\n\nMostly Harmless\n---------------\n\n.. image:: https://travis-ci.org/it-spirit/spirit.plone.theming.png?branch=master\n    :target: http://travis-ci.org/it-spirit/spirit.plone.theming\n    :alt: Travis CI status\n\n\nAvailable Options\n-----------------\n\nBelow is a list of currently supported options.\nNote that not every theme by default supports all of those options.\n\nEnable Debug Mode\n#################\n\nIf enabled, the content of the diazo snippets will be visible to the user.\nIf disabled, the content is hidden with CSS.\nThere is also a debug option which will be available as content with the CSS id ``PLONE_THEMING_DEBUG`` if enabled.\nThe default is set to ``False``.\n\nDiazo example::\n\n  <!-- Show spirit.plone.theming debug output for logged in users, if enabled. -->\n  <before css:theme-children=\".wrapper\" css:if-content=\".userrole-authenticated #PLONE_THEMING_DEBUG\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <xsl:copy-of css:select=\"#spirit_plone_theming_diazo_snippets\" />\n        </div>\n      </div>\n    </div>\n  </before>\n\n\nSite Logo\n#########\n\nWhen running on Plone 4, you can upload a custom site logo for your Plone site.\nIn Plone 5 the site logo can be customized in the site settings, so this setting will only be available for Plone 4 or below.\nIf no custom logo is set, Plone's default logo will be used.\nFor Plone 4 and below, there is a custom logo viewlet which will render the logo based on the theme setting.\n\n\nSite Favicon\n############\n\nYou can upload a custom favicon for your Plone site.\nAny image format can be uploaded, but \\*.ico and \\*.png files work best.\nIf no custom icon is set, Plone's default favicon will be used.\nThe favicon link HTML markup will be available as content with the CSS id ``PLONE_THEMING_FAVICON``.\n\nDiazo example::\n\n    <replace\n        css:theme=\"head link[rel='shortcut icon']\"\n        css:content=\"#PLONE_THEMING_FAVICON link\"\n        />\n\n\nHeader Option\n#############\n\nYou can select one of the available header options which are provided by the theme, e.g. ``header-v1`` and ``header-v2``.\nIf no option is selected, the theme might render a default header.\nThe selected header option will be available as content with the CSS id ``PLONE_THEMING_HEADER_OPTION``.\nThe theme should set all available header options using the ``spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_header_options`` registry key.\n\nDiazo example::\n\n    <!-- Define this variable in your main rules.xml file. -->\n    <xsl:variable name=\"header\" css:select=\"#PLONE_THEMING_HEADER_OPTION\"></xsl:variable>\n\n    ...\n\n    <!-- Add selected header CSS from spirit.plone.theming. -->\n    <after css:theme-children=\"html head\" css:if-content=\"#PLONE_THEMING_HEADER_OPTION\">\n      <!-- CSS Header -->\n      <xsl:choose>\n        <xsl:when test=\"starts-with($header, 'header-v1')\">\n          <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/headers/header-v1.css\" />\n        </xsl:when>\n        <xsl:when test=\"starts-with($header, 'header-v2')\">\n          <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/headers/header-v2.css\" />\n        </xsl:when>\n        <xsl:otherwise>\n          <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/headers/header-v1.css\" />\n        </xsl:otherwise>\n      </xsl:choose>\n    </after>\n\n    <!-- Add default header CSS in case we have no option. -->\n    <after css:theme-children=\"html head\" css:if-not-content=\"#PLONE_THEMING_HEADER_OPTION\">\n      <!-- CSS Header -->\n      <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/headers/header-v1.css\" />\n    </after>\n\n\nFooter Option\n#############\n\nYou can select one of the available footer options which are provided by the theme, e.g. ``footer-v1`` and ``footer-v2``.\nIf no option is selected, the theme might render a default footer.\nThe selected footer option will be available as content with the CSS id ``PLONE_THEMING_FOOTER_OPTION``.\nThe theme should set all available footer options using the ``spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_footer_options`` registry key.\n\nDiazo example::\n\n    <!-- Define this variable in your main rules.xml file. -->\n    <xsl:variable name=\"footer\" css:select=\"#PLONE_THEMING_FOOTER_OPTION\"></xsl:variable>\n\n    ...\n\n    <!-- Add selected footer CSS from spirit.plone.theming. -->\n    <after css:theme-children=\"html head\" css:if-content=\"#PLONE_THEMING_FOOTER_OPTION\">\n      <!-- CSS Footer -->\n      <xsl:choose>\n        <xsl:when test=\"starts-with($footer, 'footer-v1')\">\n          <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/footers/footer-v1.css\" />\n        </xsl:when>\n        <xsl:when test=\"starts-with($footer, 'footer-v2')\">\n          <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/footers/footer-v2.css\" />\n        </xsl:when>\n        <xsl:otherwise>\n          <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/footers/footer-v1.css\" />\n        </xsl:otherwise>\n      </xsl:choose>\n    </after>\n\n    <!-- Add default footer CSS in case we have no option. -->\n    <after css:theme-children=\"html head\" css:if-not-content=\"#PLONE_THEMING_FOOTER_OPTION\">\n      <!-- CSS Footer -->\n      <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/footers/footer-v1.css\" />\n    </after>\n\n\nColor Option\n############\n\nYou can select one of the available color options which are provided by the theme, e.g. ``blue`` and ``red``.\nIf no option is selected, the theme might use a default color.\nThe selected color option will be available as content with the CSS id ``PLONE_THEMING_COLOR_OPTION``.\nThe theme should set all available color options using the ``spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_color_options`` registry key.\n\nDiazo example::\n\n    <!-- Add selected theme color option from spirit.plone.theming. -->\n    <after css:theme-children=\"html head\" css:if-content=\"#PLONE_THEMING_COLOR_OPTION\">\n      <xsl:variable name=\"color\" css:select=\"#PLONE_THEMING_COLOR_OPTION\"></xsl:variable>\n      <link rel=\"stylesheet\" href=\"{$portal_url}/++theme++mytheme/assets/css/{$color}.css\" type=\"text/css\" />\n    </after>\n\n    <!-- Add default theme color in case we have no option. -->\n    <after css:theme-children=\"html head\" css:if-not-content=\"#PLONE_THEMING_COLOR_OPTION\">\n      <link rel=\"stylesheet\" href=\"{$portal_url}/++theme++mytheme/assets/css/blue.css\" type=\"text/css\" />\n    </after>\n\n\nPattern Option\n##############\n\nYou can select one of the available background pattern options which are provided by the theme, e.g. ``diagonal-noise`` and ``fabric-plaid``.\nIf no option is selected, the theme might use a default pattern.\nThe selected pattern option will be available as content with the CSS id ``PLONE_THEMING_PATTERN_OPTION``.\nThe theme should set all available pattern options using the ``spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_pattern_options`` registry key.\n\nThis option could also be used to switch between color modes, e.g. ``light`` and ``dark``, if no patterns are available in the theme.\n\nDiazo example::\n\n    <!-- Define this variable in your main rules.xml file. -->\n    <xsl:variable name=\"pattern\" css:select=\"#PLONE_THEMING_PATTERN_OPTION\"></xsl:variable>\n\n    ...\n\n    <!-- Add selected pattern option from spirit.plone.theming. -->\n    <after css:theme-children=\"head\" css:if-content=\"#PLONE_THEMING_PATTERN_OPTION\">\n      <!-- CSS Theme -->\n      <xsl:choose>\n        <xsl:when test=\"$pattern='dark'\">\n          <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/theme-skins/dark.css\" type=\"text/css\" />\n        </xsl:when>\n      </xsl:choose>\n    </after>\n\n\nLayout Option\n#############\n\nYou can select one of the available layout options which are provided by the theme, e.g. ``wide`` and ``boxed``.\nIf no option is selected, the theme might use a default layout.\nThe selected layout option will be available as content with the CSS id ``PLONE_THEMING_LAYOUT_OPTION``.\nThe theme should set all available layout options using the ``spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_layout_options`` registry key.\n\nDiazo example::\n\n    <!-- Define this variable in your main rules.xml file. -->\n    <xsl:variable name=\"layout\" css:select=\"#PLONE_THEMING_LAYOUT_OPTION\"></xsl:variable>\n\n    ...\n\n    <!-- Add required CSS classes to body tag based on spirit.plone.theming settings. -->\n    <before theme-children=\"html/body\">\n      <xsl:attribute name=\"class\"><xsl:value-of select=\"/html/body/@class\" />\n\n        <!-- Add selected layout classes from spirit.plone.theming to body tag. -->\n        <xsl:choose>\n          <xsl:when test=\"$layout='boxed'\">\n            <xsl:value-of select=\"' boxed-layout container'\" />\n          </xsl:when>\n        </xsl:choose>\n\n        ...\n\n      </xsl:attribute>\n    </before>\n\n\nSlogan\n######\n\nAdd a slogan for your website (HTML is supported).\nThe slogan will be available as content with the CSS id ``PLONE_THEMING_SLOGAN``.\n\nDiazo example::\n\n    <replace css:content=\"#PLONE_THEMING_SLOGAN\" css:theme=\"#header-headline\" />\n    <drop css:if-not-content=\"#PLONE_THEMING_SLOGAN\" css:theme=\"#header-headline\" />\n\n\nPhone number\n############\n\nAdd a phone number for your primary website contact.\nThe phone number will be available as content with the CSS id ``PLONE_THEMING_PHONE_NUMBER`` and ``PLONE_THEMING_PHONE_NUMBER_RAW`` (all non-number characters removed).\n\nDiazo example::\n\n    <replace css:content=\"#PLONE_THEMING_PHONE_NUMBER\" css:theme=\".site-social-links .phone\" />\n    <drop css:if-not-content=\"#PLONE_THEMING_PHONE_NUMBER\" css:theme=\".site-social-links .phone\" />\n\n\nE-Mail Address\n##############\n\nAdd a valid email address.\nThe email address will be available as content with the CSS id ``PLONE_THEMING_EMAIL``.\n\nDiazo example::\n\n    <replace css:content=\"#PLONE_THEMING_EMAIL\" css:theme=\".site-social-links .email\" />\n    <drop css:if-not-content=\"#PLONE_THEMING_EMAIL\" css:theme=\".site-social-links .email\" />\n\n\nHide Search Box\n###############\n\nIf enabled, the search box (available in the header part) will be removed in the theme.\nThe searchbox option will be available as content with the CSS id ``PLONE_THEMING_HIDE_SEARCHBOX`` if enabled.\n\nDiazo example::\n\n    <replace css:if-not-content=\"#PLONE_THEMING_HIDE_SEARCHBOX\" css:theme=\".site-search\">\n      <xsl:for-each css:select=\"#portal-searchbox form\">\n        <form><xsl:copy-of select=\"attribute::*[not(name()='class')]\" /><xsl:attribute name=\"class\">site-search <xsl:value-of select=\"@class\" /></xsl:attribute>\n          <div class=\"input-append\">\n            <xsl:copy-of css:select=\"#searchGadget\" />\n            <xsl:for-each select=\"//input[@class='searchButton']\">\n              <button><xsl:copy-of select=\"attribute::*[not(name()='class')]\" /><xsl:attribute name=\"class\">btn <xsl:value-of select=\"@class\" /></xsl:attribute>\n                <i class=\"icon-search\"></i>\n              </button>\n            </xsl:for-each>\n          </div>\n        </form>\n      </xsl:for-each>\n    </replace>\n    <drop css:theme=\".site-search\" css:if-content=\"#PLONE_THEMING_HIDE_SEARCHBOX\" />\n\n\nSlideshow Fullscreen Mode\n#########################\n\nIf enabled, a slideshow (if available) will be rendered in fullscreen mode.\nDepending on the theme, this might be above the main menu or as header background.\nIf disabled, the slideshow is visible within the content area.\nThe slideshow fullscreen mode will be available as content with the CSS id ``PLONE_THEMING_SLIDESHOW_FULLSCREEN`` if enabled.\n\nDiazo example::\n\n    <rules css:if-content=\"#PLONE_THEMING_SLIDESHOW_FULLSCREEN\">\n      <replace css:theme-children=\"#slideshow_fs\">\n        <xsl:for-each css:select=\".carousel\">\n          <div class=\"row\">\n            <div><xsl:copy-of select=\"attribute::*\" />\n              <xsl:apply-templates />\n            </div>\n          </div>\n        </xsl:for-each>\n      </replace>\n      <drop css:content=\".carousel\" />\n    </rules>\n    <drop css:theme=\"#slideshow_fs\" css:if-not-content=\"#PLONE_THEMING_SLIDESHOW_FULLSCREEN\" />\n\n\nCustom Footer Text\n##################\n\nAdd your custom footer text (HTML is supported).\nThe footer text will be available as content with the CSS id ``PLONE_THEMING_FOOTER_TEXT``.\nYou can also add the following variables:\n\n- ``{portal_url}``\n- ``{year}``\n\nExample::\n\n     <p>&copy; Copyright 2009-{year} Your Company Name.</p>\n\nDiazo example (Plone 5)::\n\n    <!-- Replace footer information with Plone version. -->\n    <replace\n        css:if-not-content=\"#PLONE_THEMING_FOOTER_TEXT\"\n        css:theme-children=\".footer-copyright p\"\n        css:content-children=\"#portal-footer-wrapper #portal-footer-signature .portletContent\"\n        />\n\n    <replace\n        css:if-content=\"#PLONE_THEMING_FOOTER_TEXT\"\n        css:theme-children=\".footer-copyright\"\n        css:content-children=\"#PLONE_THEMING_FOOTER_TEXT\"\n        />\n\n\nHide Footer Text\n################\n\nIf enabled, the footer text (available in the footer part) will be removed in the theme.\nThe footer option will be available as content with the CSS id ``PLONE_THEMING_HIDE_FOOTER`` if enabled.\n\nDiazo example::\n\n    <rules css:if-not-content=\"#PLONE_THEMING_HIDE_FOOTER\">\n      ...\n    </rules>\n    <drop css:theme-children=\".footer-copyright\" css:if-content=\"#PLONE_THEMING_HIDE_FOOTER\" />\n\n\nCustom Colophon Text\n####################\n\nAdd your custom colophon text (HTML is supported).\nThe colophon text will be available as content with the CSS id ``PLONE_THEMING_COLOPHON_TEXT``.\nYou can also add the following variables:\n\n- ``{portal_url}``\n- ``{year}``\n\nExample::\n\n     <p>Powered by Plone, Python & <a href=\"{portal_url}\">Your Company Name</a></p>\n\n\nDiazo example (Plone 5)::\n\n    <!-- Replace colophon information with Plone version. -->\n    <replace\n        css:if-not-content=\"#PLONE_THEMING_COLOPHON_TEXT\"\n        css:theme-children=\".footer-colophon p\"\n        css:content-children=\"#portal-footer-wrapper #portal-colophon .portletContent\"\n        />\n\n    <replace\n        css:if-content=\"#PLONE_THEMING_COLOPHON_TEXT\"\n        css:theme-children=\".footer-colophon\"\n        css:content-children=\"#PLONE_THEMING_COLOPHON_TEXT\"\n        />\n\n\nHide Colophon Text\n##################\n\nIf enabled, the colophon text (available in the footer part) will be removed in the theme.\nThe colophon option will be available as content with the CSS id ``PLONE_THEMING_HIDE_COLOPHON`` if enabled.\n\nDiazo example::\n\n    <rules css:if-not-content=\"#PLONE_THEMING_HIDE_COLOPHON\">\n      ...\n    </rules>\n    <drop css:theme-children=\".footer-colophon\" css:if-content=\"#PLONE_THEMING_HIDE_COLOPHON\" />\n\n\nAdditional available snippets\n-----------------------------\n\nThe following snippets are always available, as soon as the add-on is activated.\n\nplone_version\n#############\n\nIt will show the currently used Plone major version number.\nIt will be available as content with the CSS id ``PLONE_THEMING_PLONE_VERSION_${plone_version}``, e.g. ``PLONE_THEMING_PLONE_VERSION_4`` for Plone 4.\n\nDiazo example::\n\n    <rules css:if-content=\"#PLONE_THEMING_PLONE_VERSION_4\">\n      <!-- Do some Plone 4 specific stuff -->\n    </rules>\n\n    <rules css:if-content=\"#PLONE_THEMING_PLONE_VERSION_5\">\n      <!-- Do some Plone 5 specific stuff -->\n    </rules>\n\n\nAdding available options from within a Diazo Theme\n--------------------------------------------------\n\nBy default, the available options for header, footer, color and layout are empty.\nBut a theme can add it's options to the list of available items by adding elements to the ``plone.registry`` based record values.\nThe values are then provided as a vocabulary to the theming settings.\nThe records are defined in ``spirit.plone.theming.interfaces.IPloneThemingVocabularies``.\nCurrently the following records are available:\n\n- ``available_header_options``\n- ``available_footer_options``\n- ``available_color_options``\n- ``available_layout_options``\n\nA theme could add the records on installation time using the ``registry.xml`` GenersicSetup import step::\n\n    <registry>\n      <record field=\"available_color_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_color_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value>\n          <element>color-1</element>\n          <element>color-2</element>\n        </value>\n      </record>\n      <record field=\"available_footer_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_footer_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value>\n          <element>footer-default</element>\n          <element>footer-v1</element>\n          <element>footer-v2</element>\n        </value>\n      </record>\n      <record field=\"available_header_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_header_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value>\n          <element>header-default</element>\n          <element>header-v1</element>\n          <element>header-v2</element>\n        </value>\n      </record>\n      <record field=\"available_layout_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_layout_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value>\n          <element>boxed</element>\n          <element>wide</element>\n        </value>\n      </record>\n      <record field=\"available_pattern_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_pattern_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value>\n          <element>diagonal-noise</element>\n          <element>fabric-plaid</element>\n        </value>\n      </record>\n    </registry>\n\nWhen the theme gets uninstalled, the entries should be removed.\nTo do this, add a ``registry.xml`` file to your uninstall profile with the following content::\n\n    <registry>\n      <record field=\"available_color_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_color_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value />\n      </record>\n      <record field=\"available_footer_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_footer_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value />\n      </record>\n      <record field=\"available_header_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_header_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value />\n      </record>\n      <record field=\"available_layout_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_layout_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value />\n      </record>\n      <record field=\"available_pattern_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_pattern_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value />\n      </record>\n    </registry>\n\n``spirit.plone.theming`` has a dependency to `collective.themesitesetup`_, which allows the embedding of GenericSetup import and export steps into zipped theme packages.\nTo enable this, add the following lines to your theme's manifest.cfg::\n\n  [theme:genericsetup]\n  install = install\n  uninstall = uninstall\n\nAdd the two folders ``install`` and ``uninstall`` next to your manifest.cfg and copy over the ``registry.xml`` files from above.\n\n\n.. note::\n\n    Themes created with `spirit.bob`_'s ``diazo_theme`` template already include the dependency to ``spirit.plone.theming`` and the required ``registry.xml`` files.\n\n.. _`Plone`: https://plone.org\n.. _`collective.themesitesetup`: https://github.com/collective/collective.themesitesetup\n.. _`spirit.bob`: https://github.com/it-spirit/spirit.bob\n\nContributors\n------------\n\n- Thomas Massmann, thomas.massmann@it-spir.it\n\nChangelog\n=========\n\n\n0.5 (2017-05-18)\n----------------\n\n- Instead of providing a diazo snippet for the logo, provide a custom logo viewlet.\n\n\n0.4 (2017-05-18)\n----------------\n\n- Load collective.monkeypatcher, if available, to prevent ConfigurationError.\n- Add ``site_logo`` option to upload a custom site logo (Plone 4 only).\n\n\n0.3 (2017-01-24)\n----------------\n\n- Add option to hide footer and colophon texts completely.\n- Update installation docs and documentation images.\n\n\n0.2 (2017-01-12)\n----------------\n\n- Add ``site_favicon`` option to upload a custom favicon.\n- Update documentation.\n\n\n0.1 (2016-12-20)\n----------------\n\n- Initial release.",
    "docs_url": null,
    "download_url": "http://pypi.python.org/pypi/spirit.plone.theming",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/it-spirit/spirit.plone.theming",
    "keywords": "plone zope theming",
    "license": "GPL version 2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spirit.plone.theming",
    "platform": "",
    "project_url": "https://pypi.org/project/spirit.plone.theming/",
    "release_url": "https://pypi.org/project/spirit.plone.theming/0.5/",
    "requires_python": "",
    "summary": "Theming extensions for Plone Websites.",
    "version": "0.5"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b203d8aeda4a71a5bd9a23f899fa588c",
          "sha256": "7dfd34375c5f817bbbcdb167b58a7a37e34f65db324d8360ce124fe2fa621447"
        },
        "downloads": 71,
        "filename": "spirit.plone.theming-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b203d8aeda4a71a5bd9a23f899fa588c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 44112,
        "upload_time": "2016-12-20T20:39:12",
        "url": "https://files.pythonhosted.org/packages/b1/11/a4f780fe0121555a7cc156760ad7078ec6dd18c3fad3cc29754a9d903104/spirit.plone.theming-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "43d0a57f2142f96cda8a7e4271bd3fc9",
          "sha256": "4d862224550b8d931ffdedcdfb4aa6f56b44ea2243846ff7e431530d8fd82458"
        },
        "downloads": 10,
        "filename": "spirit.plone.theming-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "43d0a57f2142f96cda8a7e4271bd3fc9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 496898,
        "upload_time": "2017-01-12T09:29:20",
        "url": "https://files.pythonhosted.org/packages/7b/12/e34d32182cba20a9f1d30e116898150c3c42a799450190dd2d76a51cb42b/spirit.plone.theming-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "36ab823d0ef46090ad571a4c3deaf8b5",
          "sha256": "68373b08e3d14dbe3f21c8e4a19326554166c583ca931e4dd2f88ae11a7e2155"
        },
        "downloads": 11,
        "filename": "spirit.plone.theming-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "36ab823d0ef46090ad571a4c3deaf8b5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 637137,
        "upload_time": "2017-01-24T12:04:08",
        "url": "https://files.pythonhosted.org/packages/1d/ff/fa31c2e20882ef73a035831442e2ba7c7d144bbeb941874ef654d21a1487/spirit.plone.theming-0.3.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b49cb907cec63a435c7e11fbfc73feea",
          "sha256": "6df98ba829ba8af92b0c0e78a8ccaaf98f4f1c2a7668510769dc68e5701cc32a"
        },
        "downloads": 0,
        "filename": "spirit.plone.theming-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b49cb907cec63a435c7e11fbfc73feea",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 638132,
        "upload_time": "2017-05-18T10:35:01",
        "url": "https://files.pythonhosted.org/packages/82/a4/2264a5eb1ba40989e2c0fb17151c0edd6ab29de2ebbae0ec3fdb4408c062/spirit.plone.theming-0.4.tar.gz"
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "19e31c026df61e5dd0ccf1fe5cff68ab",
          "sha256": "6fda03a7a644118ca9d4f24d90bd924c0e5bde99b20485c9eacfb01a5337a161"
        },
        "downloads": 0,
        "filename": "spirit.plone.theming-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "19e31c026df61e5dd0ccf1fe5cff68ab",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 642338,
        "upload_time": "2017-05-18T12:33:29",
        "url": "https://files.pythonhosted.org/packages/6f/b5/619a7d96c8ebf00966ae3b08a4e996622a66ec2306df8d7e54186a6ed74a/spirit.plone.theming-0.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "19e31c026df61e5dd0ccf1fe5cff68ab",
        "sha256": "6fda03a7a644118ca9d4f24d90bd924c0e5bde99b20485c9eacfb01a5337a161"
      },
      "downloads": 0,
      "filename": "spirit.plone.theming-0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "19e31c026df61e5dd0ccf1fe5cff68ab",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 642338,
      "upload_time": "2017-05-18T12:33:29",
      "url": "https://files.pythonhosted.org/packages/6f/b5/619a7d96c8ebf00966ae3b08a4e996622a66ec2306df8d7e54186a6ed74a/spirit.plone.theming-0.5.tar.gz"
    }
  ]
}