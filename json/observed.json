{
  "info": {
    "author": "Daniel Sank",
    "author_email": "sank.daniel@gmail.com",
    "bugtrack_url": "",
    "classifiers": [],
    "description": "**observed** allows you to to sign up functions or methods to \"observe\"\r\nother functions or methods:\r\n\r\n.. code:: python\r\n\r\n    from observed import event\r\n    \r\n    @event\r\n    def observed_func(arg):\r\n        print(\"observed_func: %s\"%(arg,))\r\n    \r\n    def observer_func(arg):\r\n        print(\"observer_func: %s\"%(arg,))\r\n    \r\n    observed_func.add_observer(observer_func)\r\n    observed_func('banana')\r\n    \r\n    >>> observed_func: banana\r\n    >>> observer_func: banana\r\n\r\nYou can also register observers for bound methods:\r\n\r\n.. code:: python\r\n\r\n    from observed import event\r\n    \r\n    class Foo(object):\r\n        def __init__(self, name):\r\n            self.name = name\r\n        \r\n        @event\r\n        def bar(self, arg):\r\n            print(\"Object %s invoked bar with arg='%s'\"%(self.name,arg))\r\n    \r\n    def callback(arg):\r\n        print(\"callback was invoked with arg='%s'\"%(arg,))\r\n    \r\n    a = Foo('a')\r\n    b = Foo('b')\r\n    # Sign up b.bar and callback to \"observe\" a.bar\r\n    a.bar.add_observer(b.bar)\r\n    a.bar.add_observer(callback)\r\n    # Now when we call a.bar, b.bar and callback will be invoked with\r\n    # the same arguments\r\n    a.bar('baz')\r\n    \r\n    >>> Object a invoked bar with arg='baz'\r\n    >>> Object b invoked bar with arg='baz'\r\n    >>> callback was invoked with arg='baz'\r\n\r\nThis example is included in ./observed/example.py.\r\n\r\nYou can ask that the observed object pass itself as the first argument\r\nwhenever it calls observers:\r\n\r\n.. code:: python\r\n\r\n    from observed import event\r\n\r\n    @event\r\n    def observed_func():\r\n        print(\"observed_func: I was called\")\r\n\r\n    def observer_func(observed):\r\n        print(\"observer_func: %s called me\"%(observed.__name__,))\r\n\r\n    observed_func.add_observer(observer_func, identify_observed=True)\r\n    observed_func()\r\n\r\n    >>> observed_func: I was called\r\n    >>> observer_func: observed_func called me\r\n\r\nNotable features include:\r\n\r\n* A function or bound method is not kept alive just because it is\r\n  observing something else. This is because the observed object does\r\n  not keep any strong references to the observing objects.\r\n* The @event decorator can be used on methods in classes which are\r\n  unhashable types, and can be used on an arbitrary number of\r\n  methods in each class.\r\n* Tests included :)\r\n\r\n\r\nInstallation\r\n============\r\n\r\n**observed** exists on the python package index, so you can do\r\n``pip install observed`` to install it. Alternatively, you can\r\ndownload the source distribution and in the root directory of the\r\ndistribution do\r\n\r\n``$ python setup.py install``.\r\n\r\n\r\nNews\r\n====\r\n\r\nSee the file NEWS for the user-visible changes from previous releases.\r\n\r\n\r\nLicense\r\n=======\r\n\r\nobserved is free (as in beer) software.  See the LICENSE file.\r\n\r\n\r\nDownloading\r\n===========\r\n\r\nobserved can be obtained from the python package index\r\n\r\n`https://pypi.python.org/pypi/observed <https://pypi.python.org/pypi/observed/>`_\r\n\r\nor via git\r\n\r\n`https://github.com/DanielSank/observed.git <https://github.com/DanielSank/observed.git/>`_\r\n\r\n\r\nDocumentation\r\n=============\r\n\r\nBasic usage is illustrated at the top of this file. Further examples are\r\ngiven in ./observed/example.py\r\n\r\nThe source code is documented. Docstrings are required in contributions.\r\n\r\n\r\nDevelopment\r\n===========\r\n\r\nobserved development is hosted on github. The current working repository\r\nis given in the Downloading section above.\r\n\r\n\r\nBug Reporting\r\n=============\r\n\r\nPlease submit bug tickets on the github tracking system\r\n\r\n`https://github.com/DanielSank/observed/issues <https://github.com/DanielSank/observed/issues/>`_\r\n",
    "docs_url": null,
    "download_url": "https://github.com/DanielSank/observed/tarball/0.4",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/DanielSank/observed",
    "keywords": "observer,event,callback",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "observed",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/observed/",
    "release_url": "https://pypi.org/project/observed/0.4/",
    "requires_python": null,
    "summary": "Observer pattern for functions and bound methods",
    "version": "0.4"
  },
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ff3824ee50b2aa678a8e7740eb958bfb",
          "sha256": "b8fc55a5b6d35f48261728688dd51faf53249bc32a6a9145fb50c0de1f0780ae"
        },
        "downloads": 1530,
        "filename": "observed-0.2.2.zip",
        "has_sig": false,
        "md5_digest": "ff3824ee50b2aa678a8e7740eb958bfb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6473,
        "upload_time": "2014-05-25T06:42:10",
        "url": "https://files.pythonhosted.org/packages/19/17/51a639be7478b2cbfec4958b14ef1e043064d575fe2a80490aaed0f06132/observed-0.2.2.zip"
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0dd57b505604c82dbc451003263513ea",
          "sha256": "f3c819a9e00b151156e2b3363b58e2a6b9a2a04dc5cf926707587a504466b4ba"
        },
        "downloads": 1554,
        "filename": "observed-0.2.4.zip",
        "has_sig": false,
        "md5_digest": "0dd57b505604c82dbc451003263513ea",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7828,
        "upload_time": "2014-05-26T02:28:44",
        "url": "https://files.pythonhosted.org/packages/e4/08/2afd9ac17bd0b6d64d150d8171bccc48a9498d1d8507a8b9d8acffd43efe/observed-0.2.4.zip"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e05f2fcc85f513c0708436676f6dee19",
          "sha256": "b2bec7af5454a117ca0b9daed01a4ff47fa24d1afd737ed3c9080f2150333422"
        },
        "downloads": 1872,
        "filename": "observed-0.3.zip",
        "has_sig": false,
        "md5_digest": "e05f2fcc85f513c0708436676f6dee19",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8089,
        "upload_time": "2014-05-26T04:41:50",
        "url": "https://files.pythonhosted.org/packages/95/af/075f17f73e7cedc612fd3baf2ac81261ed146b2b775fe974f935d72b189c/observed-0.3.zip"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dff1001306a810ab87c294a98780ee9e",
          "sha256": "bee8923936886bf6a43140cfa69d51cf1832b1afd3ec14eb56bb60c4b26b168c"
        },
        "downloads": 1834,
        "filename": "observed-0.4.zip",
        "has_sig": false,
        "md5_digest": "dff1001306a810ab87c294a98780ee9e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8124,
        "upload_time": "2014-05-29T15:33:05",
        "url": "https://files.pythonhosted.org/packages/04/79/6991825db7d7fe97e2875dda594b0f76e7a2eb0463bdd6bdcce3e3eb2e22/observed-0.4.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "dff1001306a810ab87c294a98780ee9e",
        "sha256": "bee8923936886bf6a43140cfa69d51cf1832b1afd3ec14eb56bb60c4b26b168c"
      },
      "downloads": 1834,
      "filename": "observed-0.4.zip",
      "has_sig": false,
      "md5_digest": "dff1001306a810ab87c294a98780ee9e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8124,
      "upload_time": "2014-05-29T15:33:05",
      "url": "https://files.pythonhosted.org/packages/04/79/6991825db7d7fe97e2875dda594b0f76e7a2eb0463bdd6bdcce3e3eb2e22/observed-0.4.zip"
    }
  ]
}