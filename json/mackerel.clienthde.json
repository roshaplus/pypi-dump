{
  "info": {
    "author": "Shinya Ohyanagi, Iskandar Setiadi",
    "author_email": "iskandarsetiadi@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "mackerel.clienthde\n==================\n.. image:: https://travis-ci.org/HDE/py-mackerel-client.svg?branch=hde-dev\n    :target: https://travis-ci.org/HDE/py-mackerel-client\n\n.. image:: https://coveralls.io/repos/github/HDE/py-mackerel-client/badge.svg?branch=hde-dev\n    :target: https://coveralls.io/github/HDE/py-mackerel-client?branch=hde-dev\n\nmackerel.clienthde is a python library to access Mackerel (https://mackerel.io/).\n\nThis project is forked from `heavenshell/py-mackerel-client <https://github.com/heavenshell/py-mackerel-client>`_, which is initially ported from `mackerel-client-ruby <https://github.com/mackerelio/mackerel-client-ruby>`_.\n\nInstall\n-------\n\n.. code:: shell\n\n  $ pip install mackerel.clienthde\n\n\nDependency\n----------\n\nmackerel.clienthde use `requests <http://docs.python-requests.org/en/latest/>`_, `simplejson <https://github.com/simplejson/simplejson>`_ and `click <http://click.pocoo.org/3/>`_.\n\nUsage\n-----\nGet hosts\n~~~~~~~~~\n\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  hosts = client.get_hosts()\n\n\nGet host\n~~~~~~~~\n\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  host = client.get_host('<hostId>')\n\n\nUpdate host status\n~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  # Poweroff.\n  self.client.update_host_status('<hostId>', 'poweroff')\n  # Standby.\n  self.client.update_host_status('<hostId>', 'standby')\n  # Working.\n  self.client.update_host_status('<hostId>', 'working')\n  # Maintenance.\n  self.client.update_host_status('<hostId>', 'maintenance')\n\nRetire host\n~~~~~~~~~~~\n\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  self.client.retire_host('<hostId>')\n\n\nGet latest metrics\n~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  # Get hostId A's and hostId B's loadavg5, memory.free value.\n  metrics = self.client.get_latest_metrics(['<hostId A>', '<hostId B>'],\n                                           ['loadavg5', 'memory.free'])\n\n\n\nPost metrics\n~~~~~~~~~~~~\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key>')\n  metrics = [\n      {\n          'hostId': '<hostId>', 'name': 'custom.metrics.loadavg',\n          'time': 1401537844, 'value': 1.4\n      },\n      {\n          'hostId': '<hostId>', 'name': 'custom.metrics.uptime',\n          'time': 1401537844, 'value': 500\n      }\n\n  ]\n  # Post `custom.metrics.loadavg` and `custom.metrics.uptime` to `hostId`.\n  client.post_metrics(metrics)\n\n\nPost service metrics\n~~~~~~~~~~~~~~~~~~~~\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key>')\n  metrics = [\n      {\n          'name': 'custom.metrics.latency',\n          'time': 1401537844, 'value': 0.5\n      },\n      {\n          'name': 'custom.metrics.uptime',\n          'time': 1401537844, 'value': 500\n      }\n  ]\n  # Post 'custom.metrics.latency' and 'custom.metrics.uptime' to `service_name`.\n  self.client.post_service_metrics('service_name', metrics)\n\n\nGet monitors [NEW in this forked version]\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  monitors = client.get_monitors()  # list all Monitors\n  # Specify list of ids to search, return a dict with id as key\n  monitor_targets = client.get_monitors(ids=['1ABCDabcde1'])\n\n\nCreate monitor [NEW in this forked version]\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  # Create monitor as specified in https://mackerel.io/api-docs/entry/monitors#create\n  params = {\n      'type': 'service',\n      'name': 'ConsumedReadCapacityUnits.table-name',\n      'service': 'HDE',\n      'duration': 1,\n      'metric': 'ConsumedReadCapacityUnits.table-name',\n      'operator': '>',\n      'warning': 700,\n      'critical': 900\n  }\n  # Post params to Mackerel\n  # result['id'] will give Monitor id if create operation succeeded\n  result = client.create_monitor(params)\n\n\nUpdate monitor [NEW in this forked version]\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  # Since update Monitor requires all fields to be specified,\n  # it is suggested to retrieve the latest value first\n  monitor_id = '1ABCDabcde1'\n  monitors = client.get_monitors(ids=[monitor_id])\n  monitor = monitors[monitor_id]\n  # In this example, we assume Monitor is class of MonitorService\n  monitor.warning = 800\n  monitor.critical = 1000\n  # Update params to Mackerel\n  result = client.update_monitor(\n      monitor_id=monitor_id,\n      monitor_params=monitor._to_post_params_dict()\n  )\n\n\nDelete monitor [NEW in this forked version]\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  # Delete Monitor\n  result = client.delete_monitor(monitor_id='1ABCDabcde1')\n\n\nCLI\n---\n\nGet host(s) information from hostname or service, role.\n\n.. code:: shell\n\n  $ mkr.py info [--name foo] [--service service] [--role role]\n\nSet status of a host.\n\n.. code:: shell\n\n  $ mkr.py status --host-id foo --status working\n\nRetire a host.\n\n.. code:: shell\n\n  $ mkr.py retire --host-id foo\n\nGet status of a host.\n\n.. code:: shell\n\n  $ mkr.py status --host-id foo\n\nAuthentication\n--------------\n\n.. code:: shell\n\n  $ export MACKEREL_APIKEY=foobar\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/HDE/py-mackerel-client",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mackerel.clienthde",
    "platform": "any",
    "project_url": "https://pypi.org/project/mackerel.clienthde/",
    "release_url": "https://pypi.org/project/mackerel.clienthde/0.0.4/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Mackerel client implemented by Python.",
    "version": "0.0.4"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ef9240a7704525c5ab49d63c5e48fb62",
          "sha256": "5fd15bdc4bf95ad5030d84323a1c949abac4868989ac948fb6ec31c8ff577ba4"
        },
        "downloads": -1,
        "filename": "mackerel.clienthde-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ef9240a7704525c5ab49d63c5e48fb62",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6096,
        "upload_time": "2016-07-08T07:15:18",
        "url": "https://files.pythonhosted.org/packages/cf/99/4b6c10c0f955789ffd7112ab961570cef5a258a0022b37112ea8490e139e/mackerel.clienthde-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "098c8dd9e0a5fd4b23a04b54ccccb2ef",
          "sha256": "3405be22c34f209fa61775011fd3f5d8b741514e686d07ffee35868e79d8c521"
        },
        "downloads": -1,
        "filename": "mackerel.clienthde-0.0.2.zip",
        "has_sig": false,
        "md5_digest": "098c8dd9e0a5fd4b23a04b54ccccb2ef",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13934,
        "upload_time": "2016-07-08T11:44:37",
        "url": "https://files.pythonhosted.org/packages/99/c5/3cf8e840b8b9a4ce8d96cc0b067c721c37605a35563d3fe62b23d08ee787/mackerel.clienthde-0.0.2.zip"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "11e1c892a752fe45727c6670a06b839b",
          "sha256": "d8d4231b01b53ceca4f8f37e75600db759e2196d440510b4baf3778c81eed0ae"
        },
        "downloads": -1,
        "filename": "mackerel.clienthde-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "11e1c892a752fe45727c6670a06b839b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9018,
        "upload_time": "2016-07-13T07:22:47",
        "url": "https://files.pythonhosted.org/packages/be/d7/efcfa7a1dc446b5b716c50497b73b85adf41beeb8d0cc0ac8fd1f4009e7c/mackerel.clienthde-0.0.3.tar.gz"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a736eec46d6370314dfc2082e8b8f51f",
          "sha256": "463b0c25a2c85ff4d231156e14f9588fde77a0f939ce3bb0bd21554708989ff8"
        },
        "downloads": -1,
        "filename": "mackerel.clienthde-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a736eec46d6370314dfc2082e8b8f51f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9187,
        "upload_time": "2017-11-06T02:42:31",
        "url": "https://files.pythonhosted.org/packages/07/75/a5a9280c65113b9208171dd6408eb8f4f344fc5228d84995b4b60d963dd3/mackerel.clienthde-0.0.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a736eec46d6370314dfc2082e8b8f51f",
        "sha256": "463b0c25a2c85ff4d231156e14f9588fde77a0f939ce3bb0bd21554708989ff8"
      },
      "downloads": -1,
      "filename": "mackerel.clienthde-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "a736eec46d6370314dfc2082e8b8f51f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9187,
      "upload_time": "2017-11-06T02:42:31",
      "url": "https://files.pythonhosted.org/packages/07/75/a5a9280c65113b9208171dd6408eb8f4f344fc5228d84995b4b60d963dd3/mackerel.clienthde-0.0.4.tar.gz"
    }
  ]
}