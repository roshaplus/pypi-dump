{
  "info": {
    "author": "Wibowo Arindrarto",
    "author_email": "bow@bow.web.id",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Testing",
      "Topic :: Utilities"
    ],
    "description": "Crimson\n=======\n\n.. image:: https://travis-ci.org/bow/crimson.svg?branch=master\n    :target: https://travis-ci.org/bow/crimson\n\n.. image:: https://coveralls.io/repos/bow/crimson/badge.svg?branch=master&service=github\n    :target: https://coveralls.io/github/bow/crimson?branch=master\n\n.. image:: https://badge.fury.io/py/crimson.svg\n    :target: http://badge.fury.io/py/crimson\n\nCrimson converts non-standard bioinformatics tool outputs to JSON or YAML.\n\nCurrently it accepts outputs of the following programs:\n\n* `FastQC <http://www.bioinformatics.babraham.ac.uk/projects/fastqc/>`_ (``fastqc``)\n* `FusionCatcher <https://github.com/ndaniel/fusioncatcher>`_ (``fusioncatcher``)\n* `samtools <http://www.htslib.org/doc/samtools.html>`_ flagstat (``flagstat``)\n* `Picard <https://broadinstitute.github.io/picard/>`_ metrics tools (``picard``)\n* `STAR <https://github.com/alexdobin/STAR>`_ log file (``star``)\n* `STAR-Fusion <https://github.com/STAR-Fusion/STAR-Fusion>`_ hits table (``star-fusion``)\n* `Variant Effect Predictor <http://www.ensembl.org/info/docs/tools/vep/index.html>`_ plain text output (``vep``)\n\nFrom those, you can convert the respective output files into JSON (the default) or YAML. You can also use ``crimson``\nin your scripts by importing the parser functions themselves.\n\nInstallation\n------------\n\nCrimson is available via the Python Package Index and you can install it via ``pip``:\n\n.. code-block:: bash\n\n    $ pip install crimson\n\nIt is tested on Python 2.7, Python 3.3, and Python 3.4, Python 3.5, and against the following bioinformatics tools:\n\n* FastQC (version 0.10.1)\n* FusionCatcher (version 0.99.5a)\n* samtools (version 0.19.1, 1.1)\n* Picard (version 1.124)\n* STAR (version 2.3.0)\n* STAR-Fusion (version 0.6.0)\n* VEP (version 77)\n\nUsage\n-----\n\nCommand-line\n^^^^^^^^^^^^\n\nThe general command is ``crimson {program_name}`` and by default the output is written to ``stdout``. For example,\nto use the ``picard`` parser, you would execute:\n\n.. code-block:: bash\n\n    $ crimson picard /path/to/a/picard.metrics\n\nYou can also specify a file name directly to write to a file. The following command will write the output to a file\nnamed ``converted.json``:\n\n.. code-block:: bash\n\n    $ crimson picard /path/to/a/picard.metrics converted.json\n\nSome parsers may also accept additional input format. The FastQC parser, for example, also works if you give it a\npath to the FastQC output directory:\n\n.. code-block:: bash\n\n    $ crimson fastqc /path/to/a/fastqc/dir\n\nWhen in doubt, use the ``--help`` flag:\n\n.. code-block:: bash\n\n    $ crimson --help            # for the general help\n    $ crimson fastqc --help     # for parser-specific (FastQC) help\n\nPython Module\n^^^^^^^^^^^^^\n\nThe function to import is located at ``crimson.{program_name}.parser``. So to use the ``picard`` parser in your script,\nyou can do this:\n\n.. code-block:: python\n\n    from crimson import picard\n\n    # You can supply the file name as string ...\n    parsed = picard.parse(\"/path/to/a/picard.metrics\")\n\n    # ... or a file handle directly\n    with open(\"/path/to/a/picard.metrics\") as src:\n        parsed = picard.parse(src)\n\nWhy?\n----\n\n* Not enough tools use standard output formats.\n* I got tired of writing and re-writing the same parsers across different scripts.\n\n\nContributing\n============\n\nIf you are interested, Crimson accepts the following types contribution:\n\n* Documentation additions (if anything seems unclear, feel free to open an issue)\n* Bug reports\n* Support for tools' outputs which can be converted to JSON or YAML.\n\nFor any of these, feel free to open an issue in the\n`issue tracker <https://github.com/bow/crimson/issues>`_ or submitt a pull request.\n\n\nLicense\n=======\n\nCrimson is BSD-licensed. Refer to the ``LICENSE`` file for the full license.\n\n\nHistory\n=======\n\nVersion 0.3\n-----------\n\nRelease 0.3.0\n^^^^^^^^^^^^^\n\n`release date: 19 May 2016`\n\n* Adds support for parsing FusionCatcher final fusion genes file.\n\n\nVersion 0.2\n-----------\n\nRelease 0.2.0\n^^^^^^^^^^^^^\n\n`release date: 13 April 2016`\n\n* Adds support for parsing STAR-Fusion hits table output.\n* Adds support for parsing STAR alignment log output.\n* Adds support for parsing VEP plain text output.\n\n\nVersions 0.1\n------------\n\nRelease 0.1.1\n^^^^^^^^^^^^^\n\n`release date: 2 February 2016`\n\n* Minor release that loosens the wheel dependency version, updates some\n  development dependencies, and fixes some typos.\n\nRelease 0.1.0\n^^^^^^^^^^^^^\n\n`release date: 27 July 2015`\n\n* First release.\n* Support for parsing FastQC, samtools flagstat, and Picard.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://bow.web.id",
    "keywords": "crimson bioinformatics json yaml samtools picard fastqc",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "Crimson",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/Crimson/",
    "release_url": "https://pypi.org/project/Crimson/0.3.0/",
    "requires_python": null,
    "summary": "Bioinformatics tool outputs converter to JSON or YAML.",
    "version": "0.3.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "436c4137d822980f5ed95f3a30c4f951",
          "sha256": "3ead40da4905fd0195ebb950a83d5ab65cc810bcd6b27f1848d68702361bda70"
        },
        "downloads": 1886,
        "filename": "Crimson-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "436c4137d822980f5ed95f3a30c4f951",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 12766,
        "upload_time": "2015-07-27T15:52:37",
        "url": "https://files.pythonhosted.org/packages/e2/02/102ff58946cf26dd7355467ae835ebcc5a53b40b7b072fb5f683a90e17ca/Crimson-0.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9061bf25ee8e0011d855ac6197b3eca6",
          "sha256": "9cccb71ae4c5bd20eb2d593ca0b66b58be37cb6e6545ddc555783ce0201e05f3"
        },
        "downloads": 1024,
        "filename": "Crimson-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9061bf25ee8e0011d855ac6197b3eca6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9466,
        "upload_time": "2015-07-27T15:52:40",
        "url": "https://files.pythonhosted.org/packages/2f/55/29c8d5a3772e00755e027d56f763348a57b0e0d11904ed19ba04603efaa9/Crimson-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "52d760c05ecf0ae86afcdd8b5a8164ae",
          "sha256": "fe198c66314a29ac3ef69ae4015b5d1ae46a2c27bebf0e6aa3c85d549e94f64d"
        },
        "downloads": 287,
        "filename": "Crimson-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "52d760c05ecf0ae86afcdd8b5a8164ae",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10406,
        "upload_time": "2016-02-02T22:23:12",
        "url": "https://files.pythonhosted.org/packages/8d/60/7702440ff0b666f4ee4b501d54b9215afe66e15310e84298281c52b42f7a/Crimson-0.1.1.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "924f0798392484e1279d4d061f447b94",
          "sha256": "4a168831e6c0d44bb8a4dfdde3adb73c571df0ed1dce6c7854a4e2003eb792af"
        },
        "downloads": 191,
        "filename": "Crimson-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "924f0798392484e1279d4d061f447b94",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14532,
        "upload_time": "2016-04-13T16:15:56",
        "url": "https://files.pythonhosted.org/packages/d0/10/0707757587a83d7eafb7c60201d948b0ce19228db1addd3156a45ec22503/Crimson-0.2.0.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2087a80794c3d579058bbe4a93a6d39a",
          "sha256": "7f78aca574cc9be93ca61baa91873867b40254441b77dddf86099b9071623a9b"
        },
        "downloads": 237,
        "filename": "Crimson-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2087a80794c3d579058bbe4a93a6d39a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15437,
        "upload_time": "2016-05-20T09:31:44",
        "url": "https://files.pythonhosted.org/packages/bf/8e/cdddc397f92fc1199195f01446bd3407dcb6f6ab8983f32a5e8798348809/Crimson-0.3.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2087a80794c3d579058bbe4a93a6d39a",
        "sha256": "7f78aca574cc9be93ca61baa91873867b40254441b77dddf86099b9071623a9b"
      },
      "downloads": 237,
      "filename": "Crimson-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2087a80794c3d579058bbe4a93a6d39a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15437,
      "upload_time": "2016-05-20T09:31:44",
      "url": "https://files.pythonhosted.org/packages/bf/8e/cdddc397f92fc1199195f01446bd3407dcb6f6ab8983f32a5e8798348809/Crimson-0.3.0.tar.gz"
    }
  ]
}