{
  "info": {
    "author": "Pawel",
    "author_email": "inne.poczta@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# **PyYADL** (Yet Another Distributed Lock)\n\n## description\nThis is yet another distributed lock for Python with interface compatible with standard Lock/RLock class (only constructor parameters are different and release method has one optional parameter _force_)\n\nCurrently there is only one implementation, based on Redis, but it's very easy to extend base class and adapt it to any other distributed storage (like Etcd, databases - both relational and NoSQL, distributed file systems etc.)\n\n## Redis lock\n### usage\n\n#### examples:\n\n**Create lock object**\n```python\nfrom PyYADL.redis_lock import RedisLock\nlock = RedisLock(name='test_lock', prefix='my_app', ttl=60, existing_connection_pool=None, redis_host='127.0.0.1', redis_port=6379, redis_password='secret', redis_db=0)\n```\nParameters meaning:\n* **name** - each resource should have unique lock name, which would be shared across all systems. `Required`\n* **prefix** - prefix useful to avoid conflicts in names. `Optional`\n* **ttl** - how many seconds lock will be active. If ttl <= 0, lock will be valid until release. `Optional` `Default: -1`\n* **existing_connection_pool** already established connection pool `Optional`\n* **redis_host** `Optional` `Default: localhost`\n* **redis_port** `Optional` `Default: 6379`\n* **redis_password** `Optional`\n* **redis_db** `Optional` `Default: 0`\n\n**Basic usage**\n```python\nfrom PyYADL.redis_lock import RedisLock\n\nlock = RedisLock('test_lock')\nlock.acquire()\nlock.release()\n```\nBasic lock and release operations. If lock already acquired, will wait for release or ttl expire\n\n```python\nfrom PyYADL.redis_lock import RedisLock\n\nlock = RedisLock('test_lock')\nwith lock:\n    # do some tasks\n    pass\n```\nLock and release using context manager\n\n```python\nfrom PyYADL.redis_lock import RedisLock\n\nlock1 = RedisLock('test_lock')\nlock2 = RedisLock('test_lock')\nlock1.acquire()\nlock2.release()\n```\nWill raise RuntimeError (because lock is owned by other instance)\n\n```python\nfrom PyYADL.redis_lock import RedisLock\n\nlock1 = RedisLock('test_lock')\nlock2 = RedisLock('test_lock')\nlock1.acquire()\nlock2.release(force=True)\n```\nWill release lock, because force parameter is set to True\n\n```python\nfrom PyYADL.redis_lock import RedisLock\n\nlock = RedisLock('test_lock')\nstatus = lock.acquire(blocking=False)\n```\nWill acquire lock and return True, if lock released, otherwise return False without waiting\n\n```python\nfrom PyYADL.redis_lock import RedisLock\n\nlock = RedisLock('test_lock')\nstatus = lock.acquire(timeout=12)\n```\nWill try to acquire lock for 12 seconds. In case of success will return True, otherwise return False\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/PawelJ-PL/PyYADL",
    "keywords": "distributed lock Redis implementation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyYADL",
    "platform": "",
    "project_url": "https://pypi.org/project/PyYADL/",
    "release_url": "https://pypi.org/project/PyYADL/0.1.1/",
    "requires_dist": [
      "coverage; extra == 'test'",
      "redis"
    ],
    "requires_python": ">=3",
    "summary": "Yet another distributed lock for python",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "60f1035dca9f86f7eafd7bb9860b3fcc",
          "sha256": "b501fb9b6b01810cdb59af27bb2678b37e74643b582668f1274cd01118e672e9"
        },
        "downloads": 0,
        "filename": "PyYADL-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "60f1035dca9f86f7eafd7bb9860b3fcc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4104,
        "upload_time": "2017-09-09T09:44:05",
        "url": "https://files.pythonhosted.org/packages/b4/56/fefde739534865938e980cd70309178082e1e993be6a0631273ca8159843/PyYADL-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "75ea194de68a42551ecae3fb809cffb2",
          "sha256": "0ef3d402a9c4b6156d08be16136bd480fa86f5b769e40b04c964528e6b146d6c"
        },
        "downloads": 0,
        "filename": "PyYADL-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "75ea194de68a42551ecae3fb809cffb2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 7077,
        "upload_time": "2017-09-09T09:52:01",
        "url": "https://files.pythonhosted.org/packages/c4/64/1e23323238a49de28b463648f03acc19a6d75443a70d6cd1b8a0dec601e1/PyYADL-0.1.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8d776a9822e0d76c3cdc1581be3139d5",
          "sha256": "2a44adc36ea956ada43e8e9b30dabbbaa2833ddf8143e03620256bf6702a812e"
        },
        "downloads": 0,
        "filename": "PyYADL-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8d776a9822e0d76c3cdc1581be3139d5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5049,
        "upload_time": "2017-09-09T09:52:02",
        "url": "https://files.pythonhosted.org/packages/9f/59/059e8b802ca99806f3e1987dce5edfd6a8e5bc4b4c55b8a6a531aa115fb1/PyYADL-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "75ea194de68a42551ecae3fb809cffb2",
        "sha256": "0ef3d402a9c4b6156d08be16136bd480fa86f5b769e40b04c964528e6b146d6c"
      },
      "downloads": 0,
      "filename": "PyYADL-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "75ea194de68a42551ecae3fb809cffb2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 7077,
      "upload_time": "2017-09-09T09:52:01",
      "url": "https://files.pythonhosted.org/packages/c4/64/1e23323238a49de28b463648f03acc19a6d75443a70d6cd1b8a0dec601e1/PyYADL-0.1.1-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "8d776a9822e0d76c3cdc1581be3139d5",
        "sha256": "2a44adc36ea956ada43e8e9b30dabbbaa2833ddf8143e03620256bf6702a812e"
      },
      "downloads": 0,
      "filename": "PyYADL-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8d776a9822e0d76c3cdc1581be3139d5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5049,
      "upload_time": "2017-09-09T09:52:02",
      "url": "https://files.pythonhosted.org/packages/9f/59/059e8b802ca99806f3e1987dce5edfd6a8e5bc4b4c55b8a6a531aa115fb1/PyYADL-0.1.1.tar.gz"
    }
  ]
}