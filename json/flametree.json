{
  "info": {
    "author": "Zulko",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. image:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/Flametree/master/docs/logo.png\n   :alt: [logo]\n   :align: center\n   :width: 600px\n\nFlametree - Python file operations made easy\n==============================================\n\n.. image:: https://travis-ci.org/Edinburgh-Genome-Foundry/Flametree.svg?branch=master\n   :target: https://travis-ci.org/Edinburgh-Genome-Foundry/Flametree\n   :alt: Travis CI build status\n\nFlametree is a Python library which provides a simple syntax for handling files and folders\n(no ``os.path.join``, ``os.listdir`` etc.), and works the same way for different file systems.\n\nWrite a Flametree program to read/write files in disk folders, and your code will also be\nable to read/write in zip archives and virtual (in-memory) archives - which is particularly\nuseful on web servers.\n\nAs an illustration, here is how to use Flametree to read a file ``texts/poems/the_raven.txt``, replace all\noccurences of the word \"raven\" by \"seagull\" in the text, and write the result to a new\nfile ``the_seagull.txt`` in the same folder:\n\n.. code:: python\n\n     from flametree import file_tree\n\n     with file_tree(\"texts\") as root:\n         poem_text = root.poems.the_raven_txt.read()\n         new_text = poem_text.replace(\"raven\", \"seagull\")\n         root.poems._file(\"the_seagull.txt\").write(new_text)\n\nEven in this very simple use case, the syntax is clearer than the ``os`` way,\nwhich would write as follows:\n\n.. code:: python\n\n    import os\n\n    with open(os.path.join(\"poems\", \"the_raven.txt\"), \"r\") as f:\n        poem_text = f.read()\n    new_text = poem_text.replace(\"raven\", \"seagull\")\n    with open(os.path.join(\"poems\", \"the_seagull.txt\"), \"w\") as f:\n        content = f.write(new_text)\n\nMoreover, the same Flametree code also works for files inside a zip archive:\n\n.. code:: python\n\n     with file_tree(\"my_archive.zip\") as root:\n         poem_text = root.poems.the_raven_txt.read()\n         new_text = poem_text.replace(\"raven\", \"seagull\")\n         root.poems._file(\"the_seagull.txt\").write(new_text)\n\nNow in hard mode: suppose that your server receives binary zip data of an\narchive containing ``poems/the_raven.txt``, and must return back a new zip\ncontaining a file ``poems/the_seagull.txt``. Here again, the syntax of the core\noperations is the same:\n\n.. code:: python\n\n     destination_zip = file_tree(\"@memory\") # Create a new virtual zip\n     with file_tree(the_raven_zip_data) as root:\n         poem_text = root.poems.the_raven_txt.read()\n         new_text = poem_text.replace(\"raven\", \"seagull\")\n         destination_zip._dir(\"poems\")._file(\"the_seagull.txt\").write(new_text)\n     destination_zip_data = destination_zip._close()\n     # Now send the data to the client\n\nSee section *Usage* below for more examples and features.\n\nInstallation\n-------------\n\nFlametree should work on Windows/Max/Linux, with Python 2 and 3, and has no external dependency.\n\nIt can be installed by unzipping the source code in one directory and using this command: ::\n\n    sudo python setup.py install\n\nYou can also install it directly from the Python Package Index with this command: ::\n\n    sudo pip install flametree\n\n\nContribute\n-----------\n\nFlametree is an open-source software originally written by Zulko_ and released on Github_\nunder the MIT licence (\u00a2 Edinburgh Genome Foundry). Everyone is welcome to contribute !\nIn particular if you have ideas of new kinds of file systems to add to Flametree.\n\n\nUsage\n-------\n\nOpening a file tree\n~~~~~~~~~~~~~~~~~~~~\n\nHere is how you open different kinds of file systems:\n\n.. code:: python\n\n     from flametree import file_tree\n\n     # Open a directory from the disk's file system:\n     root = file_tree(\"my_folder/\")\n\n     # Open a zip archive on the disk:\n     root = file_tree(\"my_archive.zip\")\n\n     # Connect to a file-like object (file handle, StringIO...) of a zip:\n     root = file_tree(file_like_object)\n\n     # Create a virtual 'in-memory' zip file:\n     root = file_tree(\"@memory\")\n\n     # Open some data string representing a zip to read\n     root = file_tree(some_big_zip_data_string)\n\n\n\nIn the two first examples, if ``my_folder`` or ``my_archive.zip`` do not exist, they\nwill be automatically created. If they do exist, it is possible to completely overwrite\nthem with the option ``replace=True``.\n\nExploring a file tree:\n~~~~~~~~~~~~~~~~~~~~~~\n\nOnce you have created the ``root`` element with one of the methods above, you can display the whole\nfile tree with ``root._tree_view()`` :\n\n.. code::\n\n    >>> print (root._tree_view())\n    texts/\n      poems/\n        dover_beach.txt\n        the_raven.txt\n        the_tyger.txt\n      todo_list.txt\n    figures/\n      figure1.png\n      figure2.png\n    Readme.md\n\n\nThe attributes of a directory like ``root`` are its files and subdirectories.\nFor instance to print the content of ``dover_beach.txt`` you would write:\n\n.. code:: python\n\n  print( root.texts.poems.dover_beach_txt.read() )\n\nor even simpler:\n\n.. code:: python\n\n    root.texts.poems.dover_beach_txt.print_content()\n\nNotice that the ``.`` before ``txt`` was replaced by ``_`` so as to form a valid\n attribute name.\n\nThis syntactic sugar is particularly useful to explore a file tree in\nIPython Notebooks or other editors offering auto-completion:\n\n\n.. image:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/Flametree/master/docs/autocomplete.png\n   :alt: [illustration]\n   :align: center\n\nAlternatively, you can access files and directories using dictionary calls:\n\n.. code:: python\n\n    root[\"texts\"][\"poems\"][\"dover_beach.txt\"]\n\nTo iterate through the subdirectories of a directory, use the ``_dirs`` attribute:\n\n.. code:: python\n\n    for subdirectory in root._dirs:\n        print (subdirectory._name) # Will print 'texts' and 'figures'\n\nTo iterate through the files of a directory, use the ``_files`` attribute:\n\n.. code:: python\n\n    for f in root.figures._files:\n        print (f._name) # Will print 'figure1.png' and 'figure2.png'\n\nFinally, use ``_all_files`` to iterate through all files nested in a directory.\nThe snippet below prints the content of all ``.txt`` files in the file tree:\n\n.. code:: python\n\n    for f in root._all_files:\n        if f._name.endswith(\".txt\"):\n            f.print_content()\n\nCreating files and folders\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo create a new subdirectory use ``_dir``:\n\n.. code:: python\n\n    root._dir(\"data\") # create a 'data' folder at the root\n    root.data._dir(\"reports\") # create a 'reports' folder under `root/data`\n\nTo create a new file use ``_file``:\n\n.. code:: python\n\n    root._file(\"joke.txt\") # create a 'joke.txt' file at the root.\n    root.texts._file(\"hello.txt\") # create 'hello.txt' in `root/texts`.\n\nTo write content in a file, use ``.write``:\n\n.. code:: python\n\n    root.joke_txt.write(\"A plateau is the highest form of flattery.\")\n\nWriting to a file will use mode ``a`` (append) by default. To overwrite\nthe file set the write mode to ``\"w\"``. Let's erase and rewrite that ``joke.txt``:\n\n.. code:: python\n\n    root.joke_txt.write(\"'DNA' stands for National Dyslexic Association.\", \"w\")\n\nFile and directory creation commands can be chained.\nLet us create some new folders ``data/`` and ``data/test_1/``, and\nwrite to file ``data/test_1/values.csv``, all in a single line:\n\n.. code:: python\n\n    root._dir(\"data\")._dir(\"test_1\")._file(\"values.csv\").write(\"1, 15, 25\")\n\nBeware that ``._dir`` and ``._file`` **overwrite their target by default**, which means that if you write:\n\n.. code:: python\n\n    root._dir(\"data\")._file(\"values_1.csv\").write(\"1, 4, 7\")\n    root._dir(\"data\")._file(\"values_2.csv\").write(\"2, 9, 7\")\n\nThe directory ``data`` will only contain ``values_2.csv``, because the second\nline's ``_dir(\"data\")`` erases the ``data`` directory and starts a new one. To avoid this,\neither use ``root.data`` in the second line:\n\n.. code:: python\n\n    root._dir(\"data\")._file(\"values_1.csv\").write(\"1, 4, 7\")\n    root.data._file(\"values_2.csv\").write(\"2, 9, 7\")\n\nOr use ``replace=False`` in ``_dir``:\n\n.. code:: python\n\n    root._dir(\"data\")._file(\"values_1.csv\").write(\"1, 4, 7\")\n    root._dir(\"data\", replace=False)._file(\"values_2.csv\").write(\"2, 9, 7\")\n\n\nOther operations\n~~~~~~~~~~~~~~~~~~\n\nYou can move, copy, and delete a file with ``.move(folder)``, ``.copy(folder)``,\n``.delete()``, and a directory with ``._move(folder)``, ``._copy(folder)``,\n``._delete()``.\n\n.. code:: python\n\n    root.data.values1_csv.delete() # delete file 'values1.csv'\n    root.data._delete() # delete directory 'data'\n    # Move folder `plots` from `root/figures` to `other_root/figures`\n    root.figures.plots._move(other_root.figures)\n    # Move file `fig.png` from `root/figures` to `other_root/figures`\n    root.figures.fig_png.move(other_root.figures)\n\nSpecial rules for ZIP archives\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt is not currently possible to modify/delete a file that is already zipped\ninto an archive (because zips are not really made for that, it would\nbe doable but would certainly be a hack).\n\nWhen creating files and folders in a zip with Flametree, the changes in the actual zip\nwill only be performed by closing the ``root`` with ``root._close()``\n(after which the ``root`` can't be used any more). If it is an in-memory zip, ``root._close()``\nreturns the value of the zip content as a string (Python 2) or bytes (Python 3).\n\nHere are a few examples:\n\n.. code:: python\n\n    root = file_tree(\"archive.zip\")\n    root._file(\"hello.txt\").write(\"Hi there !\")\n    root._close()\n\n    # Equivalent to the previous, using `with`:\n    with file_tree(\"archive.zip\") as root:\n        root._file(\"hello.txt\").write(\"Hi there !\")\n\n    # Getting binary data of an in-memory zip file:\n    root = file_tree(\"@memory\")\n    root._file(\"hello.txt\").write(\"Hi there !\")\n    binary_data = root._close()\n\n\nUsing file writers from other libraries\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSome libraries have file-generating methods which expect a file name or a file\nobject to write too.\nYou can also feed Flametree files to these functions. for instance here is\nhow to use Weasyprint to create a PDF ``pdfs/report.pdf``\n\n.. code:: python\n\n    import weasyprint\n    from flametree import file_tree\n    root = file_tree(\".\") # or 'archive.zip' to write in an archive.\n    html = weasyprint.HTML(string=\"<b>Hello</b> world!\", base_url='.')\n    html.write_pdf(root._dir(\"pdfs\")._file(\"test.pdf\"))\n\nAnd here is how you would save a Matplotlib figure in a zip archive:\n\n.. code:: python\n\n    import matplotlib.pyplot as plt\n    from flametree import file_tree\n    fig, ax = plt.subplots(1)\n    ax.plot([1, 2, 3], [3, 1, 2])\n    with file_tree(\"archive.zip\") as root:\n        fig.savefig(root._dir(\"plots\")._file(\"figure.png\"), format=\"png\")\n\nThat's all folks !\n\n\n.. _Zulko: https://github.com/Zulko/\n.. _Github: https://github.com/Edinburgh-Genome-Foundry/flametree\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "file system",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flametree",
    "platform": "",
    "project_url": "https://pypi.org/project/flametree/",
    "release_url": "https://pypi.org/project/flametree/0.1.6/",
    "requires_python": "",
    "summary": "Python file and zip operations made easy",
    "version": "0.1.6"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "224604b7ca57b3100b685ae1da9ec49b",
          "sha256": "4a9852613d4262343f622e3bde10452f9433cb299b4bc3ee0abc3c32d1dc58ec"
        },
        "downloads": 12,
        "filename": "flametree-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "224604b7ca57b3100b685ae1da9ec49b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11042,
        "upload_time": "2017-02-03T19:56:17",
        "url": "https://files.pythonhosted.org/packages/4a/97/c78edddb477d8095f84a1dc0405f858121c9b78ea5962eb579841e462926/flametree-0.1.0.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "62845f44c97461f89f5f576d68b55add",
          "sha256": "ceab6a3489c2e1d7b49890b6885035dbe6e0bd39dfc1be35eab1d94e2343d60f"
        },
        "downloads": 11,
        "filename": "flametree-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "62845f44c97461f89f5f576d68b55add",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12268,
        "upload_time": "2017-02-04T21:18:31",
        "url": "https://files.pythonhosted.org/packages/e4/f6/4159524fd741f90b93efc840de882eba8d704f31c1def16d40d5c82b1d36/flametree-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5277df30607e87f803f2fb10e2cd7338",
          "sha256": "6be515873f69636ef6e52ddfd80e33f48424915443f5666975fd73458144c80d"
        },
        "downloads": 13,
        "filename": "flametree-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5277df30607e87f803f2fb10e2cd7338",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12238,
        "upload_time": "2017-02-04T21:41:23",
        "url": "https://files.pythonhosted.org/packages/2a/57/6ca4e9f694662faf5bf5fe27533c62780fa0a4de907628e321a6e5960c93/flametree-0.1.3.tar.gz"
      }
    ],
    "0.1.3b0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "954864bc31a1b3836f8cf8463ed55f99",
          "sha256": "c59e376bbb67ea4b796b2f19c4bf654bd61f6ca61ee50395cca90e42ba8194b9"
        },
        "downloads": 12,
        "filename": "flametree-0.1.3b0.tar.gz",
        "has_sig": false,
        "md5_digest": "954864bc31a1b3836f8cf8463ed55f99",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12492,
        "upload_time": "2017-02-06T10:14:10",
        "url": "https://files.pythonhosted.org/packages/94/5f/ddea0ea1fda77adda2cac63e27c2a250266e5dfbbbcac98f28f520c5e775/flametree-0.1.3b0.tar.gz"
      }
    ],
    "0.1.3rc0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ee7a9d42141ada6877d29ce6121a2505",
          "sha256": "e661221561a1bde7819e0563d996fa0c7219fcd2f83760b25931306b1c3e4895"
        },
        "downloads": 14,
        "filename": "flametree-0.1.3rc0.tar.gz",
        "has_sig": false,
        "md5_digest": "ee7a9d42141ada6877d29ce6121a2505",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12970,
        "upload_time": "2017-02-07T00:10:11",
        "url": "https://files.pythonhosted.org/packages/d3/94/7945e7059a70f1fad9c9737fe2a3178071d34f00d3b45e40d450ff0a4893/flametree-0.1.3rc0.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "66e27bb1b35363a5c41d27a1f303a0aa",
          "sha256": "23f701d8e74a411328dfdac77912e506dea77ab5902ec775ccef4a2c026408e5"
        },
        "downloads": 13,
        "filename": "flametree-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "66e27bb1b35363a5c41d27a1f303a0aa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12971,
        "upload_time": "2017-02-07T10:20:55",
        "url": "https://files.pythonhosted.org/packages/8c/39/628162223fa4a38339a6c4feb29dc56cdd26bb9606104acf15fdb40f07e2/flametree-0.1.4.tar.gz"
      }
    ],
    "0.1.4a0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "15e907772b97a52becf28bf69d72f998",
          "sha256": "825b01204b674df3952f8d5ec5e4088b72edb3fc3bc6e3ec6ee3ff5fa4cf4291"
        },
        "downloads": 9,
        "filename": "flametree-0.1.4a0.tar.gz",
        "has_sig": false,
        "md5_digest": "15e907772b97a52becf28bf69d72f998",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13244,
        "upload_time": "2017-02-07T16:25:13",
        "url": "https://files.pythonhosted.org/packages/08/d5/62874220abbbe3ff2d682893516817eb898152c00eb5e1ad14db2f90724c/flametree-0.1.4a0.tar.gz"
      }
    ],
    "0.1.4b0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "396433da3952e9fa12ceec6439205a44",
          "sha256": "21136409367e5d6d00286f56700de5af184fc5d2dfe73c8296c2c6374922fbf3"
        },
        "downloads": 10,
        "filename": "flametree-0.1.4b0.tar.gz",
        "has_sig": false,
        "md5_digest": "396433da3952e9fa12ceec6439205a44",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13289,
        "upload_time": "2017-02-07T16:56:01",
        "url": "https://files.pythonhosted.org/packages/2f/fb/4f23739976c2b4f016dd079d10fb0a7b028ca67795d5e3f49e0c3d6c6ebc/flametree-0.1.4b0.tar.gz"
      }
    ],
    "0.1.4rc0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4d8893380c1c0052ccfee3824951229f",
          "sha256": "d4b4bba97e0012b86f1ffb1b822f4c2e3c6da90a7ab370bec70e48fbe4f1798d"
        },
        "downloads": 12,
        "filename": "flametree-0.1.4rc0.tar.gz",
        "has_sig": false,
        "md5_digest": "4d8893380c1c0052ccfee3824951229f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13287,
        "upload_time": "2017-02-07T17:08:35",
        "url": "https://files.pythonhosted.org/packages/27/3b/0bfe637b1f094917c57d97e02ba4d038e75d5a41ac77ff46d11c3ccdbfac/flametree-0.1.4rc0.tar.gz"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ceb9658b8e4a1a8e8f5db02dcbdc3424",
          "sha256": "6bc7d300a11276fa2009bbd0229a8ffac7779a5a5762be3eb3cae2808255f3b6"
        },
        "downloads": 11,
        "filename": "flametree-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ceb9658b8e4a1a8e8f5db02dcbdc3424",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13783,
        "upload_time": "2017-02-15T16:15:31",
        "url": "https://files.pythonhosted.org/packages/06/3d/69a5bce1fed5b60ec887102a5610f7793f18d155e60b4d0d6a923aba427d/flametree-0.1.5.tar.gz"
      }
    ],
    "0.1.5a0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "68a4abf7ef889a47b45559cb8e88c23a",
          "sha256": "8067e12781446de825f9c652465577fdebc5c14515e5c83218580000794e4e89"
        },
        "downloads": 13,
        "filename": "flametree-0.1.5a0.tar.gz",
        "has_sig": false,
        "md5_digest": "68a4abf7ef889a47b45559cb8e88c23a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13841,
        "upload_time": "2017-03-02T18:09:37",
        "url": "https://files.pythonhosted.org/packages/da/ff/1689412200f90c247c17be9934811f624e37d2e512dc5529b965e4bf204a/flametree-0.1.5a0.tar.gz"
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2aca77d4120c22357dfa1c359189fd20",
          "sha256": "b19da8045c9121e1b7f752317b9e630bb32490bf06deb7dbf22282f3e9ccbb34"
        },
        "downloads": 0,
        "filename": "flametree-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "2aca77d4120c22357dfa1c359189fd20",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42388,
        "upload_time": "2017-05-19T16:56:19",
        "url": "https://files.pythonhosted.org/packages/e4/cf/69938b07ffe0a3a71b85fe92d8f0ccd9c8b1e37fa2dfe5f7c2e6f0a00073/flametree-0.1.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2aca77d4120c22357dfa1c359189fd20",
        "sha256": "b19da8045c9121e1b7f752317b9e630bb32490bf06deb7dbf22282f3e9ccbb34"
      },
      "downloads": 0,
      "filename": "flametree-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "2aca77d4120c22357dfa1c359189fd20",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 42388,
      "upload_time": "2017-05-19T16:56:19",
      "url": "https://files.pythonhosted.org/packages/e4/cf/69938b07ffe0a3a71b85fe92d8f0ccd9c8b1e37fa2dfe5f7c2e6f0a00073/flametree-0.1.6.tar.gz"
    }
  ]
}