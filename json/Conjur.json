{
  "info": {
    "author": "Jon Mason",
    "author_email": "jon@conjur.net",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "Conjur Python API Client\n========================\n\nA Python client for the Conjur API.\n\nInstallation\n------------\n\nThe Conjur Python API requires Python 2.7. While we love Python 3,\nPython 2.x is the priority because of its widespread use by DevOps tools\nsuch as Salt and Ansible.\n\nInstall from `PyPI <https://pypi.python.org/pypi/Conjur>`__\n\n::\n\n    pip install conjur\n\n**Note:** If you have the ``pandoc`` package installed you may need to\nuninstall it for the above command to work. You can do so with\n``pip uninstall pypandoc``.\n\nAPI Documentation\n-----------------\n\nSee the `API documentation <https://conjurinc.github.io/api-python>`__\nfor details of all classes and methods.\n\nUsage\n-----\n\nConfiguration\n~~~~~~~~~~~~~\n\n.. code:: python\n\n    # The `config` member of the conjur.config module is a \"global\" Configuration\n    # used by new API instances by default.\n    from conjur.config import config\n\n    # Set the conjur appliance url.  This can also be provided\n    # by the CONJUR_APPLIANCE_URL environment variable.\n    config.appliance_url = 'https://conjur.example.com/api'\n\n    # Set the (PEM) certificate file. This is also configurable with the\n    # CONJUR_CERT_FILE environment variable.\n    config.cert_file = '/path/to/conjur-account.pem'\n\nCreating and Using an API Instance\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    import conjur\n\n    # For God's sake, don't put passwords in your source code!\n    password = 'super-secret'\n    login = 'alice'\n\n    # Create an API instance that can perform actions as the user 'alice'\n    api = conjur.new_from_key(login, password)\n\n    # Use the API to fetch the value of a variable\n\n    secret = api.variable('my-secret').value()\n\n    print(\"The secret is '{}'\".format(secret))\n\n``new_from_key`` accepts a Conjur username and an api\\_key or password\n(`see the Conjur developer\ndocumentation <http://developer.conjur.net/reference/services/authentication/authenticate.html>`__\nfor details about the distinction). This is useful if your script is\nauthenticating as an particular Conjur identity rather than acting on\nbehalf of a user who has provided their token.\n\nWhen created using this method, the API will attempt to authenticate the\nfirst time a method requiring authorization is called. To force it to\nauthenticate immediately, you can use the ``authenticate()`` method. An\ninstance created with ``new_from_key`` will cache it's auth token\nindefinitely. Since Conjur auth tokens expire after 8 minutes, you can\nforce an api instance to update its token by calling\n``api.authenticate(cached=False)`` or by setting ``api.token = None``.\n\nOther Ways to Create an API Instance\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf the host running your application has been assigned a Conjur identity\n``new_from_netrc`` is the easiest way to create an API instance.\n\n.. code:: python\n\n    import conjur\n    from conjur.config import config\n\n    config.load('/etc/conjur.conf')\n    api = conjur.new_from_netrc('/etc/conjur.identity', config=config)\n\nIf you have an existing authentication token, for example when handling\nan HTTP request that contains an end user's token, use\n``new_from_token`` to create your API instance.\n\n.. code:: python\n\n    import conjur\n    # ... some web magic\n\n    api = conjur.new_from_token(request.get_json()['user_token'])\n    salesforce_apikey = api.variable('sales/salesforce/api_key')\n\nYAML file\n~~~~~~~~~\n\nConjurized hosts will have this file placed at ``/etc/conjur.conf``.\n\nRunning locally this will be your ``~/.conjurrc`` file.\n\n.. code:: python\n\n    from conjur.config import config\n\n    config.load('/etc/conjur.conf')\n\nVariables\n~~~~~~~~~\n\nYou can create, fetch and update variables like so:\n\n.. code:: python\n\n    import os\n    import conjur\n\n    api = conjur.new_from_key(login='danny', api_key=os.getenv('CONJUR_API_KEY'))\n\n    loggly_token = api.create_variable(\n        id='monitoring/loggly.com/api-token',\n        value='dEet7Hib1oSh9g'\n    )\n\n    gis_database_password = api.variable('gis/postgres/password')\n    print(gis_database_password.value())\n\n    gis_database_password.add_value('lij6det8eJ7pIx')\n\nIf no ``id`` is given, a unique id will be generated. If a value is\nprovided, it will be used to set the variable's initial value. When\nfetching a variable, you can pass a ``version`` keyword argument to\n``value()`` to retrieve a specific version.\n\nUsers\n~~~~~\n\nCreate a user ``alice`` with password ``super-secret``.\n\n.. code:: python\n\n    alice = api.create_user('alice', password='super-secret')\n\nCreate a user ``bob`` without a password, and save the API key. When\ncreating a Conjur user, the API is available in the response. However,\nretrieving the user in the future **will not** return the API key.\n\n.. code:: python\n\n    bob = api.create_user('bob')\n    bob_api_key = bob.api_key\n\n    print(\"Created user 'bob' with api key '{}'\".format(bob_api_key))\n\nFetch a user named 'otto', and check whether or not it was found:\n\n.. code:: python\n\n    if api.user('otto').exists():\n      print(\"Otto exists!\")\n    else:\n      print(\"Sorry, otto doesn't exist :-(\")\n\nGroups\n~~~~~~\n\nCreate a group named ``developers`` and add an existing user ``alice``\nto it.\n\n.. code:: python\n\n    devs = api.create_group('developers')\n\nDevelopment\n-----------\n\nClone this project and run:\n\n::\n\n    pip install -r requirements.txt -r requirements_dev.txt\n\nRun tests and linting with:\n\n::\n\n    ./jenkins.sh\n\nPyPi\n~~~~\n\nTo publish to PyPi, you will need to convert this document to\nrestructured text using pandoc:\n\n::\n\n    pandoc --from=markdown --to=rst --output=README.rst README.md\n\nFurthermore, you will likely need to have the ``pypandoc`` package\ninstalled for the markup to appear correctly on the PyPi site.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/conjurinc/api-python",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "Conjur",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/Conjur/",
    "release_url": "https://pypi.org/project/Conjur/0.4.4/",
    "requires_python": null,
    "summary": "Python client for the Conjur API",
    "version": "0.4.4"
  },
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "71cc7d83703d070c2cb7ec8cc875125e",
          "sha256": "9173860b37c5cf2d690143afc9fb88b69d43ae4ab8c2c8e267d923473fe58040"
        },
        "downloads": 1766,
        "filename": "Conjur-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "71cc7d83703d070c2cb7ec8cc875125e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7476,
        "upload_time": "2014-09-14T08:41:03",
        "url": "https://files.pythonhosted.org/packages/84/49/8c89b6df80b7d91d6e0a732c117430b6b8891076f37c864255bff440e3f9/Conjur-0.3.0.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5ebb9c4c9e972f83f4f5f8053292e27d",
          "sha256": "bdd21e5a2a7c3067506f9746ca3c6d45d65046ce7bd6be99442acaf012a29c5b"
        },
        "downloads": 1271,
        "filename": "Conjur-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5ebb9c4c9e972f83f4f5f8053292e27d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9579,
        "upload_time": "2015-02-13T16:17:50",
        "url": "https://files.pythonhosted.org/packages/24/10/b1febca5863a976bfc6fb3a4482e4d02e2e46269f9f385cae17bf88603b9/Conjur-0.3.1.tar.gz"
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "58dd7ef9de39daf0b392570530753514",
          "sha256": "cfa22825a0b756dff822d575426d30db730901b7946d97b45839700334c0dc7a"
        },
        "downloads": 2129,
        "filename": "Conjur-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "58dd7ef9de39daf0b392570530753514",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13228,
        "upload_time": "2015-02-19T23:03:42",
        "url": "https://files.pythonhosted.org/packages/7d/c9/75d47bccefce67fa37d6c7d764722e0b6aaba5e8b2673575aa8b684765ee/Conjur-0.3.2.tar.gz"
      }
    ],
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3615fc93bd877208b743edb145498639",
          "sha256": "61bfd6f343576da926da92400d394c3f7b9669196888e9949005b64736619680"
        },
        "downloads": 241,
        "filename": "Conjur-0.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3615fc93bd877208b743edb145498639",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22377,
        "upload_time": "2016-08-02T22:28:32",
        "url": "https://files.pythonhosted.org/packages/af/08/6271e8ff18ee37dfdfb4dc828810a6685bc2a2baf706085331989b193c47/Conjur-0.4.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "3615fc93bd877208b743edb145498639",
        "sha256": "61bfd6f343576da926da92400d394c3f7b9669196888e9949005b64736619680"
      },
      "downloads": 241,
      "filename": "Conjur-0.4.4.tar.gz",
      "has_sig": false,
      "md5_digest": "3615fc93bd877208b743edb145498639",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 22377,
      "upload_time": "2016-08-02T22:28:32",
      "url": "https://files.pythonhosted.org/packages/af/08/6271e8ff18ee37dfdfb4dc828810a6685bc2a2baf706085331989b193c47/Conjur-0.4.4.tar.gz"
    }
  ]
}