{
  "info": {
    "author": "Sam Kohn",
    "author_email": "skohn@lbl.gov",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "# larpix-control\n\nControl the LArPix chip\n\n[![Documentation Status](https://readthedocs.org/projects/larpix-control/badge/?version=latest)](http://larpix-control.readthedocs.io/en/latest/?badge=latest)\n\n## Setup and installation\n\nThis code is intended to work on both Python 2.7+ and Python 3.6+,\nbut it was designed in Python 3 and is not guaranteed to work in\nPython 2.\n\nInstall larpix-control from pip with\n\n```\npip install larpix-control\n```\n\nTo return your namespace to the pre-larpix state, just\nrun `pip uninstall larpix-control`. If you'd prefer to download the code\nyourself, you can. Just run `pip install .` from the root directory of\nthe repository.\n\n### Tests\n\nYou can run tests to convince yourself that the software works as\nexpected. After `pip install`ing this package, you can run the tests\nfrom the repository root directory with the simple command `pytest`.\n\nYou can read the tests to see examples of how to call all of the common\nfunctions. I imagine they will also come in handy when you're confused\nabout the bit order. (Also see the section on endian-ness below.)\n\n## Tutorial\n\nThis tutorial runs through how to use all of the main functionality of\nlarpix-control.\n\nTo access the package contents, use one of the two following `import`\nstatements:\n\n```python\nimport larpix.larpix as larpix  # use the larpix namespace\n# or ...\nfrom larpix.larpix import *  # import all larpix classes into the current namespace\n```\n\n### Endian-ness\n\nWe use the convention that the LSB is sent out first and read in first.\nThe location of the LSB in arrays and lists changes from object to\nobject based on the conventions of the other packages we interact with.\n\nIn particular, pyserial sends out index 0 first, so for `bytes` objects,\nindex 0 will generally have the LSB. On the other hand, bitstrings\ntreats the _last_ index as the LSB, which is also how numbers are\nusually displayed on screen, e.g. `0100` in binary means 4 not 2. So for\n`BitArray` and `Bits` objects, the LSB will generally be last.\n\nNote that this combination leads to the slightly awkward convention that\nthe least significant bit of a bytestring is the *last bit* of the\n*first byte*. For example, if bits[15:0] of a packet are\n`0000 0010 0000 0001` ( = 0x0201 = 513), then the bytes will be sent out as\n`b'\\x01\\x02'`.\n\n### Creating a LArPix Chip\n\nThe `Chip` object represents a single LArPix chip and knows about\neverything happening on the chip regarding configuration, data sent in,\nand data read out. To create a Chip, just provide the chip ID number\n(hard-wired into the PCB) and the index for the IO Chain (daisy chain)\nthat the chip is part of:\n\n```python\nmyChip = Chip(100, 0)\n```\n\nThe Chip object uses these ID values when it creates data packets to\nensure that the packet reaches the correct chip. And other objects use\nthe ID values to ensure that received data from the physical chip makes\nits way to the right Chip object.\n\nThe chip's configuration register is represented by the `myChip.config`\nattribute, which is an instance of the `Configuration` object.\n\n### The Configuration object\n\nThe `Configuration` object represents all of the options in the LArPix\nconfiguration register. Each row in the configuration table in the LArPix datasheet\nhas a corresponding attribute in the `Configuration` object. Per-channel\nattributes are stored in a list, and all other attributes are stored as\na simple integer. (This includes everything from single bits to values\nsuch as \"reset cycles,\" which spans 3 bytes.) **Warning**: there is\ncurrently no type checking or range checking on these values. Using\nvalues outside the expected range will lead to undefined behavior,\nincluding the possibility that Python will crash _or_ that LArPix will\nbe sent bad commands.\n\n`Configuration` objects also have some helper methods for enabling and\ndisabling per-channel settings (such as `csa_testpulse_enable` or\n`channel_mask`). The relevant methods are listed here and should be\nprefixed with either `enable_` or `disable_`:\n\n - `channels` enables/disables the `channel_mask` register\n - `external_trigger` enables/disables the `external_trigger_mask`\n    register\n - `testpulse` enables/disables the `csa_testpulse_enable` register\n - `analog_monitor` enables/disables the `csa_monitor_select` register\n\nMost of these methods accept an optional list of channels to enable or\ndisable (and with no list specified acts on all channels). The exception\nis `enable_analog_monitor` (and its `disable` counterpart): the `enable`\nmethod requires a particular channel to be specified, and the `disable`\nmethod does not require any argument at all. This is because at most one\nchannel is allowed to have the analog monitor enabled.\n\nThe machinery of the `Configuration` object ensures that each value is\nconverted to the appropriate set of bits when it comes time to send\nactual commands to the physical chip. Although this is not transparent\nto you as a user of this library, you might want to know that two sets of\nconfiguration options are always sent together in the same configuration\npacket:\n\n - `csa_gain`, `csa_bypass`, and `internal_bypass` are combined into a\n   single byte, so even though they have their own attributes, they must\n   be written to the physical chip together\n\n - `test_mode`, `cross_trigger_mode`, `periodic_reset`, and\n   `fifo_diagnostic` work the same way\n\nSimilarly, all of the per-channel options (except for the pixel trim\nthresholds) are sent in 4 groups of 8 channels.\n\nConfigurations can be loaded by importing `larpix.configs` and running\nthe `load` function. This function searches for a configuration with the\ngiven filename relative to the current directory before searching the\n\"system\" location (secretly it's in the larpix/configs/ folder). This is\nsimilar to `#include \"header.h\"` behavior in C.\n\nConfigurations can be saved by calling `chip.config.write` with the\ndesired filename.\n\nOnce the Chip object has been configured, the configuration must be sent\nto the physical chip. This is accomplished with the `Controller` object,\nwhich we'll discuss next.\n\n### Communicating with the physical LArPix chip\n\nCommunication between the computer and the physical LArPix chip is\nhandled by the `Controller` object and uses a Serial interface. (The\ninterface specification is given in the fpga\\_interface.txt file. It's\nbased on RS-232 8N1.) To initialize a Controller object, simply provide\nthe port you'd like to communicate over. For the envisioned normal\napplication (with an FTDI chip as USB-serial bridge), this will likely\nbe something like `/dev/ttyUSB0`.\n\n```python\ncontroller = Controller('/dev/ttyUSB0')\n```\n\nAn important attribute of the Controller object is `chips`, which is a\nlist of Chip objects controlled by the particular Controller. Add a\nsingle Chip object to the list with `controller.chips.append(myChip)`,\nor add a whole list with `controller.chips.extend(list_of_chips)`.\n\nYou might want to change the following\nattributes at some point, but their defaults should work in most cases:\n\n - `baudrate`: default = 1000000 baud. Controls the number of bits per\n   second, including RS-232 start and stop bits.\n - `timeout`: default = 1 second. Controls how long to wait before\n   ending a read command\n - `max_write`: default = 8192 bytes. Controls the maximum number of\n   bytes to send with a single write command. The limit is entirely due\n   to the buffer capacity of the FTDI chip.\n\n#### Sending data\n\nThe only data that LArPix can receive is configuration data. To send all\nof the configuration packets in write mode, simply call\n\n```python\nmyChip = Chip(chip_id, io_chain)\n# Edit the configuration\n# ...\nmyController = Controller('/dev/ttyUSB0')\nmyController.write_configuration(myChip)\n```\n\nTo send only a particular configuration register or list of\nconfiguration registers, pass the register or list of registers to the\nfunction:\n\n```python\nregister_to_update = 51\nmyController.write_configuration(myChip, register_to_update)\n# or pass a list ...\nregisters_to_update = [0, 5, 42]\nmyController.write_configuration(myChip, registers_to_update)\n```\n\nThere is currently not a way to specify which register to update by\npassing a string or other way of identifying the register by name.\n\nSimilar functionality exists to read the configuration data. This\nrequires both sending data to and receiving data from the LArPix chip.\nTo send the \"read configuration\" commands, call `read_configuration`\nexactly the same way you would call `write_configuration`. Read on to\nlearn about receiving data from LArPix in more detail.\n\n#### Receiving data\n\nThere are 3 reasons to receive data from LArPix: because it's real data\n(ADC counts, etc.), because it's configuration data that has been\nrequested, or because it's test data from either the UART test or the\nFIFO test.\n\nThe simplest way to receive data from LArPix is to just listen for a\ncertain amount of time and save all the packets received. This is\naccomplished with the `run` method:\n\n```python\nmyController.run(10)  # listens for 10 seconds\n```\n\nThis method makes sense for physics runs or any special runs that aren't\nprovided by the following other methods.\n\nTo read configuration data, call `read_configuration`, as mentioned\nearlier.\n\nTo make it easy to run tests, the following methods will configure the\nchip, run the test, and record the data received: `run_testpulse`,\n`run_fifo_test`, and `run_analog_monitor_test`.\n\n#### Accessing received data\n\nEvery method that reads data processes the data from a bytestream into a\nPacket object. The Packet objects are appended to the list stored in the\n`reads` attribute of the correct Chip object, as defined by the `chipid`\nreturned by the Packet. It's worth noting here that the Controller\nobject is only aware of Chip objects listed in the `controller.chips`\nattribute.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/samkohn/larpix-control",
    "keywords": "dune physics",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "larpix-control",
    "platform": "",
    "project_url": "https://pypi.org/project/larpix-control/",
    "release_url": "https://pypi.org/project/larpix-control/0.6.0/",
    "requires_dist": [
      "pytest",
      "pyserial",
      "bitstring"
    ],
    "requires_python": "",
    "summary": "Control the LArPix chip",
    "version": "0.6.0"
  },
  "releases": {
    "0.3.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "56763f48ceb590fab0e5708a63f13269",
          "sha256": "ca4c3edd762c05300e6fa50059c4393a8ff566d83ba3a3fa82bb0d848165422b"
        },
        "downloads": -1,
        "filename": "larpix_control-0.3.0.dev0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "56763f48ceb590fab0e5708a63f13269",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 14531,
        "upload_time": "2017-10-19T07:34:48",
        "url": "https://files.pythonhosted.org/packages/27/dd/b130258b0f15d85e5b4a0e8e953f1c4e61d1fcac3283c8099b29876109c6/larpix_control-0.3.0.dev0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1a1b9c2f1d034cc749c24981ed0eb8b4",
          "sha256": "790d9bc78a2431ec30adb385932a3fd0ae8bd540e7656569aa5fcf413054473c"
        },
        "downloads": -1,
        "filename": "larpix-control-0.3.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "1a1b9c2f1d034cc749c24981ed0eb8b4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13857,
        "upload_time": "2017-10-19T07:34:51",
        "url": "https://files.pythonhosted.org/packages/4d/11/4252d928592c66910822493fcd380eeef82924bc616efc9ef9f7db300431/larpix-control-0.3.0.dev0.tar.gz"
      }
    ],
    "0.3.1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "94288c6b238caac10a958bd92476f627",
          "sha256": "5c25657aa65e6624c7f5020b09409e860da8334853508dcf16f007d3cdeed5d6"
        },
        "downloads": -1,
        "filename": "larpix_control-0.3.1.dev0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94288c6b238caac10a958bd92476f627",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 16352,
        "upload_time": "2017-10-19T07:34:50",
        "url": "https://files.pythonhosted.org/packages/d3/4b/038afcaaf4e56932daed54d02228917ac1eae6385d1fdb2bc454eb22b00d/larpix_control-0.3.1.dev0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "90f4ef4e9ff3f1a180f5ebe5eb58ac7b",
          "sha256": "0bb6a5a740f451d1752e21dbe9efc8a946f46a4a2bfb162459341f03d9a3aac2"
        },
        "downloads": -1,
        "filename": "larpix-control-0.3.1.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "90f4ef4e9ff3f1a180f5ebe5eb58ac7b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17086,
        "upload_time": "2017-10-19T07:34:53",
        "url": "https://files.pythonhosted.org/packages/36/67/3369e299914c57610162497063b784f7a7b67c4537f97a9b8f10913068ba/larpix-control-0.3.1.dev0.tar.gz"
      }
    ],
    "0.4.1.dev1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "10b0717dbf265745ae69c4ca71434448",
          "sha256": "6c950deadf4223a9949cc63b9ac93c84990790f058b806737e830c44ce1c1277"
        },
        "downloads": -1,
        "filename": "larpix_control-0.4.1.dev1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10b0717dbf265745ae69c4ca71434448",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 21257,
        "upload_time": "2017-10-27T23:49:23",
        "url": "https://files.pythonhosted.org/packages/21/06/1ad0ac0602b69407d33321c0882850b649504ee849c975d88cd007e73539/larpix_control-0.4.1.dev1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7762464be777f8f6cda41b41996c56cb",
          "sha256": "db0d73600bf89d92139a92e9c58b3fad66df4bd56c93a2944c630b8a1ccfb4cd"
        },
        "downloads": -1,
        "filename": "larpix-control-0.4.1.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "7762464be777f8f6cda41b41996c56cb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23684,
        "upload_time": "2017-10-27T23:49:26",
        "url": "https://files.pythonhosted.org/packages/f6/40/baf15118f2b514e1aba29d01f0fc22d42c8e04b212579555476c1126879f/larpix-control-0.4.1.dev1.tar.gz"
      }
    ],
    "0.4.1.dev2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8bd942869bedb52489f885c3517a7672",
          "sha256": "a2c2d7a90d2d5965c9139b6738b91f4badb25474bcd3b02ce0d9d9e8da298dbb"
        },
        "downloads": -1,
        "filename": "larpix_control-0.4.1.dev2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8bd942869bedb52489f885c3517a7672",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 21300,
        "upload_time": "2017-10-28T00:20:57",
        "url": "https://files.pythonhosted.org/packages/df/d6/a07a22dc9763eff5a436bd0b29cb01cf1f00cc1da19492763b1ad3c2790b/larpix_control-0.4.1.dev2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "48023698ecc9cd8f1d19e570ce2b4f70",
          "sha256": "d751cbfb01af198d813affe189151df9f590c7de3e3696d5f049d71d3689900c"
        },
        "downloads": -1,
        "filename": "larpix-control-0.4.1.dev2.tar.gz",
        "has_sig": false,
        "md5_digest": "48023698ecc9cd8f1d19e570ce2b4f70",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23733,
        "upload_time": "2017-10-28T00:21:00",
        "url": "https://files.pythonhosted.org/packages/32/82/4a4111759bfb2309d186dec1b8a61d8a844df67d5b0036e46e63b32265d7/larpix-control-0.4.1.dev2.tar.gz"
      }
    ],
    "0.4.1.dev3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2738179295207cfce17ff39ba4d06707",
          "sha256": "9c52f586a598207c5542d401a58355fcb8dd71e2d6add6330c0af04db6a826e7"
        },
        "downloads": -1,
        "filename": "larpix_control-0.4.1.dev3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2738179295207cfce17ff39ba4d06707",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 21342,
        "upload_time": "2017-11-01T18:39:43",
        "url": "https://files.pythonhosted.org/packages/81/e8/14d6f501cac48b9d30260900dec8551d973120c4f32b5584ed9ae5466995/larpix_control-0.4.1.dev3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "edc947cb2ab49b5269166d879ec55fcd",
          "sha256": "f902660697fee053e8d008e9b1ff8b66d728c9ad812138bf89dcfcbfa8d0ee76"
        },
        "downloads": -1,
        "filename": "larpix-control-0.4.1.dev3.tar.gz",
        "has_sig": false,
        "md5_digest": "edc947cb2ab49b5269166d879ec55fcd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23750,
        "upload_time": "2017-11-01T18:39:46",
        "url": "https://files.pythonhosted.org/packages/05/00/a1754819da1d1ae2a0adc08c813c7809ab2958721a4da4f070a57bf8238c/larpix-control-0.4.1.dev3.tar.gz"
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "37738c7c395a364512787301b48542eb",
          "sha256": "06dc741ac0570e5d03fd427ccfde583ec39d00382ddf9fe51b4503c28fdd847d"
        },
        "downloads": -1,
        "filename": "larpix_control-0.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37738c7c395a364512787301b48542eb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 27213,
        "upload_time": "2017-11-14T18:34:45",
        "url": "https://files.pythonhosted.org/packages/4f/a7/3fa00b88a17ad95f891e6103a16cc8613a13d4a50c1341465aab69960d12/larpix_control-0.5.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e187cbe342e4a2b0aed1a83be939f995",
          "sha256": "4bbdac2321762b9bf6f17efc935fcec07a9c0f951b0e8a4debf005fda2c54b08"
        },
        "downloads": -1,
        "filename": "larpix-control-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e187cbe342e4a2b0aed1a83be939f995",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29045,
        "upload_time": "2017-11-14T18:34:50",
        "url": "https://files.pythonhosted.org/packages/ce/7e/5aa3fcca67d3b5d57f53e79149e08eef088e70465046bed2444a45e12ab3/larpix-control-0.5.0.tar.gz"
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cb74806355492f35ab2f34c9a8fa15d4",
          "sha256": "28f28bd4ea2e2e445f66173568bdcb120d31279ed55945079ed28643eddb0d85"
        },
        "downloads": -1,
        "filename": "larpix_control-0.5.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb74806355492f35ab2f34c9a8fa15d4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 27773,
        "upload_time": "2017-11-14T22:37:26",
        "url": "https://files.pythonhosted.org/packages/37/6b/0b5ecd8b775b3b64ccaca59539bc3cef847686ddc6e7e0ec03a8d260ed74/larpix_control-0.5.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ffe17040b61fcedfdefff4018639971e",
          "sha256": "1f9d83e8e63b36d9bf7e30016b34e19964c5e15cdfe233f4017bdeb1bc750d00"
        },
        "downloads": -1,
        "filename": "larpix-control-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ffe17040b61fcedfdefff4018639971e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29396,
        "upload_time": "2017-11-14T22:37:32",
        "url": "https://files.pythonhosted.org/packages/9b/e6/cccd0a164df63e2fba03bdb65b6619fc477ce9ee5402d4cea05ebef3321e/larpix-control-0.5.1.tar.gz"
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "69c97f9c08a27d42658cb266f205fd99",
          "sha256": "4fc7b217cf752bc1f00a8d39e906849b9bdceb82288f18453d10fc01aaf7679d"
        },
        "downloads": -1,
        "filename": "larpix_control-0.5.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69c97f9c08a27d42658cb266f205fd99",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 27772,
        "upload_time": "2017-11-14T22:43:27",
        "url": "https://files.pythonhosted.org/packages/c6/ce/bc3b8e8a164ad46fa3f3ff2f3f598da70413e8ed35824f491a89592aef10/larpix_control-0.5.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "70574add7ba5ed1b3e59e8688fc862a8",
          "sha256": "d8ed43c608c5547626212f01ab52590025437744ff16764ea30474fb4f8d7330"
        },
        "downloads": -1,
        "filename": "larpix-control-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "70574add7ba5ed1b3e59e8688fc862a8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29691,
        "upload_time": "2017-11-14T22:43:33",
        "url": "https://files.pythonhosted.org/packages/dd/a4/c0847b88b9866a249e676278c4c400e9a0794297da1354a6beb565484c32/larpix-control-0.5.2.tar.gz"
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1ff770a67ede9e024388556a5ac33966",
          "sha256": "5019d9e0dd53131029e97bb36d70eb1ca25b319b0af2f6b6131bf132ba75ebbd"
        },
        "downloads": -1,
        "filename": "larpix_control-0.6.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ff770a67ede9e024388556a5ac33966",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 28327,
        "upload_time": "2017-11-15T22:42:40",
        "url": "https://files.pythonhosted.org/packages/93/b0/b0296fdd128930f9776e3295d8b0084dc999b4a11a340de0a997712a0639/larpix_control-0.6.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e00ff9ef2abbccee6aaf77024c157c02",
          "sha256": "575d2a997e366e9b28af0e83531b5e0da0ee58192ce3de313f1559f57ec4e02a"
        },
        "downloads": -1,
        "filename": "larpix-control-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e00ff9ef2abbccee6aaf77024c157c02",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30234,
        "upload_time": "2017-11-15T22:42:46",
        "url": "https://files.pythonhosted.org/packages/4c/94/1380177da21b450f81d60252b033091c8d89954cc96124c10333e31da1e1/larpix-control-0.6.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "1ff770a67ede9e024388556a5ac33966",
        "sha256": "5019d9e0dd53131029e97bb36d70eb1ca25b319b0af2f6b6131bf132ba75ebbd"
      },
      "downloads": -1,
      "filename": "larpix_control-0.6.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1ff770a67ede9e024388556a5ac33966",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 28327,
      "upload_time": "2017-11-15T22:42:40",
      "url": "https://files.pythonhosted.org/packages/93/b0/b0296fdd128930f9776e3295d8b0084dc999b4a11a340de0a997712a0639/larpix_control-0.6.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "e00ff9ef2abbccee6aaf77024c157c02",
        "sha256": "575d2a997e366e9b28af0e83531b5e0da0ee58192ce3de313f1559f57ec4e02a"
      },
      "downloads": -1,
      "filename": "larpix-control-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e00ff9ef2abbccee6aaf77024c157c02",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 30234,
      "upload_time": "2017-11-15T22:42:46",
      "url": "https://files.pythonhosted.org/packages/4c/94/1380177da21b450f81d60252b033091c8d89954cc96124c10333e31da1e1/larpix-control-0.6.0.tar.gz"
    }
  ]
}