{
  "info": {
    "author": "Ralf Schlatterbeck",
    "author_email": "rsc@runtux.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "rsclib: Utility Routines\n========================\n\n:Author: Ralf Schlatterbeck <rsc@runtux.com>\n\nThe library includes various utility modules used in other projects.\n\n - ast_call: A simple call manager using asterisk: This can be used to\n   originate a call and log all event associated to that call. So you\n   can find out the status of the call and optionally the dialstatus.\n - ast_cdr: parser for CDR records in asterisk. We currently use\n   text-files only, this might be later extended for database use.\n - ast_probe: Methods for checking for running asterisk\n - Autosuper magic (originally from Guido van Rossums announcement of\n   Python 2.2): For refactoring it's a good idea that each class knows\n   its parents (that the parent is not hardcoded in the upcall),\n   achieved by adding a the __super attribute. Use as, e.g.,\n   self.__super.method for calling method in the parent.\n - base_pickler: Allow to specify a dictionary of pickle exceptions, if\n   the value in the dictionary is in __dict__ when pickle is called, the\n   value in __dict__ is replaced with the value in the exception\n   dictionary.\n - bero: A configurator for the `bero*fos`_ failover switch. See my\n   `blogpost`_ why I wrote that (short summary: to work around bugs in\n   the firmware of the device which are not addressed by the\n   configurator code that comes with the device).\n - Config_File for python-syntax configuration files used in several of\n   my projects.\n - crm: Tools for the cluster resource manager of the pacemaker high\n   availability project. We allow querying of nodes, resources and\n   errors for resources as well as resetting errors and migration of\n   resources.\n - execute: module for executing commands and handling IO, this also\n   has a Lock and a Log mixin. Now there is also a framework for\n   executing processes in a pipeline, there can be fork-points in the\n   pipeline where the output of one process feeds several pipelines.\n   See test_exec.py, test2_exec.py and test3_exec.py.\n - ETree: wrapper around ElementTree for pretty-printing and xml export.\n   This uses delegation (not inheritance) because we can't seem to\n   inherit from ElementTree.\n - Firstname: given a string-candidate of a first name, check with\n   popular web-site if it is really considered a first name. \n - Freshmeat: Get project and release information via the freshmeat.net\n   REST API. Also support submit of a new release. I'm now using this\n   for announcing new releases for my projects.\n - grepmime: search for pattern in email attachments (even if these are\n   encoded)\n - HTML_Parse for opening and parsing URLs. The class can be used to\n   write a parser to extract info from a web page. After extraction the\n   result can be pickled but we lose the ability to continue parsing\n   after reading from the pickled result.\n - inductance: Inductance calculation of air-cored cylindrical\n   flat-winded coil according to Robert Weaver\n   http://electronbunker.ca/CalcMethods3b.html\n - IP_Address: IP v4 and v6 Addresses with subnet masking\n - iter_recipes: magic with iterators\n - isdn: model the status of Asterisk ISDN lines, either Linux Call\n   Router (LCR) ISDN lines or lines managed by DAHDI. Special case for\n   Xorcom modules which provide more information using Xorcom-specific\n   files in /proc than native DAHDI modules.\n - ldap_lib: some routines for common ldap tasks including an iterator\n   for LDAP implementations that use paged search (notably active\n   directory).\n - Math implements Euclids algorithm for greatest common divisor and as\n   a by-product the least common multiple\n - nmap: A parser for output of nmap scans to (e.g. to generate tables\n   in TeX)\n - ocf: small framework for writing OCF scripts for the heartbeat\n   cluster resource manager (probably also usable for the newer version\n   called pacemaker but for now only tested with the version in Debian\n   stable aka lenny).\n - PDF_Parse for opening and parsing PDFs, needs pdftotext installed\n - PDF_Signature: experimental code for checking signatures on adobe PDF\n   documents\n - Phone: Parse phone numbers (Austria-specific)\n - PM_Value: Possibly missing value, encapsulate a number which may be\n   missing and associated arithmetics.\n - Rational: Implementation of Rational numbers\n - stateparser: Simple state-machine parser class, this is used for\n   writing line-based parsers using a state machine. For an example\n   usage see nmap. After parsing the result can be pickled but we lose\n   the ability to continue parsing after reading from the pickled\n   result.\n - sqlparser: Parse SQL dumps from postgreSQL and mysql\n - timeout: A simple timeout mechanism using SIGALRM\n - Tex_CSV_Writer: Write CVS files in a syntax that can be parsed by\n   TeX. Implements same interface as the csv module. Only implements\n   writing.\n - trafficshape: Simple traffic shaping configuration: Currently\n   generates Linux tc commands for a traffic shaping config using hfsc\n   for shaping and sfq or red for the leaf qdiscs. We also provide a\n   translator from iptables mangle rules (for traffic marking) to tc\n   commands for filtering. This is needed if we want to do inbound\n   shaping. The Linux kernel doesn't support inbound shaping, so we need\n   to redirect all traffic to an ifb device. On that device we do\n   *outbound* shaping. Unfortunately when sending traffic to an ifb\n   device with a tc filter + action mirred command this occurs *before*\n   the PREROUTING chain. This means packets are not yet marked. So we\n   provide a parser to translate mangle rules in the PREROUTING chain to\n   appropriate tc commands. For implementing this we mark packets (using\n   the tc action xt (formerly known as ipt used for iptables marking, a\n   backward-compatibility option can be used) in the original device and\n   then use the marked information in the ifb device to send the traffic\n   to appropriate qdiscs. This supports a two-level approach: Rules in\n   iptables that match on a packet mark (using --mark) are translated to\n   tc commands in the ifb device (they depend on the mark already\n   present). All other rules are translated to a tc action xt (using -j\n   MARK) and a tc action mirred redirect (for sending the traffic to the\n   ifb device) for the *original* device (e.g. eth0 redirecting to\n   ifb0). The PREROUTING commands by default are directly taken from the\n   running kernel by default (using \"iptables -t mangle -S -v\")\n\n.. _`bero*fos`: https://shop.beronet.com/product_info.php/cPath/56/products_id/159\n.. _`blogpost`: http://blog.runtux.com/2009/04/09/81/\n\nResources\n---------\n\nDownload the source at https://sourceforge.net/projects/rsclib/\nand install using the standard python setup, e.g.::\n\n python setup.py install --prefix=/usr/local\n\nAlternatively get it from pypi and/or install via pip.\n\n\nChanges\n-------\n\nVersion 0.48: Fixes for execute\n\n   - Now we really close all relevant ends of pipes in other processes\n     which avoids hangs\n   - Add logging to Process\n\nVersion 0.47: Fixes for IP_Address; pypi\n\n   - IP_Address: Relax inheritance checks when comparing IP_Address\n     instances\n   - Version uploaded to pypi and documented in README\n\nVersion 0.46: Additions to ast_probe; Bug-fix\n\n   - ast_probe now has methods for checking sip registry and reloading\n     the sip subsystem in asterisk\n   - Add a small script, ast_sip_check for checking sip registration on\n     an asterisk server and restart sip if some registrations are\n     missing.\n   - Config_File fixes the __getattr_ method to return an\n     AttributeError in case of failure\n\nVersion 0.45: Fix ISDN ports\n\nString reprentation had leading unicode 'u'\n\n   - Fix string representation in ISDN ports\n\nVersion 0.44: Make line-waiting for bero configurable\n\nFor cluster resource berofos we make waiting for the L1 and L2 of the\nISDN line configurable. The hard-coded default was too low.\n\n   - New config-item ISDN_WAIT_UP\n\nVersion 0.43: Support new berofos firmware\n\nThe new berofos (failover switch) firmware has some new low-level\ncommands which we now accept when getting the device status.\n\n  - Fix bero.py to accept new low-level commands\n  - Add some more documentation to bero.py\n  - Add description of ast_probe in this README\n\nVersion 0.42: Feature enhancements\n\nAdd crm for pacemaker cluster management, new ast_probe for checking of\nasterisk status. Fixes to ocf and ast_call.\n\n  - Add crm.py\n  - Add ast_probe.py\n  - Allow specification of parsed config (cfg) for Call_Manager in\n    ast_call.py\n  - Better resource monitoring for asterisk and dahdi in ocf.py\n  - fix ocf.py to use new classes in isdn.py\n  - isdn.py now doesn't probe asterisk for the isdn stack in use if it\n    finds a hint in the config-file\n\nVersion 0.41: Minor feature enhancements\n\nFixes to Freshmeat, pycompat, sql-dump parser.\n\n  - Fix parsing of escaped quotes in mysql dumps\n  - Freshmeat\n  - pycompat fixes\n\nVersion 0.40: Distribution bug-fix\n\nRenaming of README lead to the missing file README.rst in the distro.\n\n  - Fix MANIFEST.in\n\nVersion 0.39: Minor feature enhancements\n\nFixes to hexdump, unicode issues (elementtree wrapper, stateparser).\nAdd some fixes to IP_Address comparison. The nmap output has changed in\nrecent versions, adapt to new format.\n\n  - Make address in hexdump configurable\n  - Bug-fix with comparison of sub-classes in IP_Address\n  - Unicode support in ETree\n  - Unicode support in stateparser\n  - Fix for trailing empty attributes in CSV output of PostgreSQL dumps\n    in sqlparser\n  - Unicode support in sqlparser (uses stateparser)\n  - Parse new nmap format\n  - Fix for configurable Releasetools location\n\nVersion 0.38: Minor feature enhancements\n\nFix boolean conversion of IP6_Address (and IP4_Address).\n\n - IP6_Address would throw an error when trying a truth-test. Add\n   __nonzero__ (which always returns True even for the 0 Address)\n\nVersion 0.37: Minor feature enhancements\n\nChange sort-order of IP_Address, make IP_Address immutable, use\nmetaclass magic to allow copy-constructor semantics.\n\n - Sort order of IP_Address objects (both v4 and v6) now reverses the\n   order of the netmask: If the IP-Address part of the objects to\n   compare are the same, we used to sort by *inverse* netmask (putting\n   smaller networks with higher netmask first). We now reversed this to\n   be compatible with PostgrSQL cidr type objects.\n - All attributes of IP_Address objects are now implemented as\n   properties to return the '_' variant of the attribute. Thus\n   IP_Address objects are (when using the public interface) immutable.\n   Since we already had a __hash__ method this effectively fixes the\n   interface to not allow mutation of objects that are in a dictionary.\n - Allow calling the IP_Address constructors with another IP_Address\n   object. Since IP_Address objects are now immutable we use metaclass\n   trickery to return the passed object itself (instead of generating a\n   copy).\n\nVersion 0.36: Minor feature enhancements\n\nAllow auto-coercion of comparison parameters. Add parent property and\nis_sibling test.\n\n - Now comparison operators and 'in' do auto coercion.\n - Add parent property (next bigger network)\n - Add is_sibling test (same parent)\n\nVersion 0.35: Minor feature enhancements\n\nAdd 'mask_len' as an alias of 'mask' to IP_Address.\n\n - Need the network mask length (aka prefix length) sometimes as\n   mask_len (e.g. for FFM on github).\n\nVersion 0.34: Minor feature enhancements\n\nFix trafficshape to use new tc syntax. Add label to hexdump.\n\n - The tc command has renamed the ``ipt`` action to ``xt`` (Linux\n   introduced xtables as a refactoring of iptables), the old ``ipt`` is\n   still available in ``iproute2`` but we make ``xt`` the default now.\n   A backward-compatibility parameter can be used to get the old\n   behavior.\n - Add save-mark to iptables action parser.\n - The hexdump class now can generate labels.\n\nVersion 0.33: Minor feature enhancements\n\nMore fixes for ast_call.\n\n - Add parser for events from asterisk wireshark trace\n - Add fail.log for 'real' test\n - Don't double-register call with Call_Manager\n - Allow explicit matching by account-code\n\nVersion 0.32: Minor feature enhancements\n\nMore fixes for ast_call.\n\n - Regression test with pyst asterisk emulator\n - Fix case where OriginateResponse immediately returns Failure\n - Tests for cases where Hangup comes before or after the\n   OriginateResponse\n\nVersion 0.31: Minor feature enhancements\n\nFix ast_call for immediately failing calls. Fix dahdi channel\ncomputation in isdn.py.\n\n - Fix OriginateResponse handling in ast_call\n - Fix dahdi channel computation, can't directly use the span, use the\n   basechan attribute\n\nVersion 0.30: Minor feature enhancements\n\nFix how dahdi vs. mISDN interpret what is called an interface and what\nis called a port. In mISDN we can combine several ports (physical lines)\nto an interface. In dahdi both are the same (a port is a span in dahdi).\n\n - Remove parsing of B- and C- channels from dahdi isdn parser\n\nVersion 0.29: Minor feature enhancements\n\nThe lcr module is now named isdn. It can now handle isdn interfaces\nmanaged by Asterisk DAHDI in addition to Linux Call Router (LCR).\n\nVersion 0.28: Minor feature enhancements\n\nFix inductance formula of Robert Weaver, thanks Robert for pointing me\nto the correction you did on your new site! For most doctests in the\ninductance module the error was in the lower percentage points.\nAdd an xxrange iterator to the iter_recipes that can replace pythons\nnative xrange iterator but works with long integers. Needed for some\noperations on IPv6 addresses in the IP_Address module.\n\n - Fix inductance calculation according to patch from Robert Weaver\n - Add xxrange iterator to iter_recipes\n - Use new xxrange instead of xrange in IP_Address module, add a test\n   that failed with large numbers for IPv6\n\nVersion 0.27: Minor feature enhancements\n\nAdd pageurl and pageinfo attributes to HTML_Parser.Page_Tree, other\nenhancements to HTML_Parser. Add pickle support to parser classes.\nFix comparison of IP_Address classes.\n\n - Add pageurl and pageinfo attributes to HTML_Parser.Page_Tree storing\n   information retrieved via geturl and info calls from urllib2.\n - Parser classes in stateparser.py and HTML_Parse.py where not\n   pickleable, fixed by removing parser-specific attributes when calling\n   pickle. Note that the parsing cannot be continued after reading class\n   from a pickle.\n - Add base_pickler module to allow pickle exceptions\n - HTML_Parse: Make Parse_Error a ValueError\n - HTML_Parse: Raise line number with exception\n - HTML_Parse: Add a timeout\n - HTML_Parse: raise Retries_Exceeded with url\n - HTML_Parse: url parameter may now be None, not joined with site\n   parameter\n - Add pageurl and pageinfo to HTML_Parse\n - IP_Address: Fix comparison\n - Slight refactoring of NMAP_Parser class\n\nVersion 0.26: Minor feature enhancements\n\nFix double-utf-8-encoding option for sqlparser. Enhance stderr handling\nfor exec_pipe.\n\n - More detected broken encodings for fix_double_encode option\n - execute.py: add error message from executed command to message raised\n   by exec_pipe, make stderr output available in non-failing case.\n\nVersion 0.25: Minor feature enhancements\n\nAdd sqlparser for parsing SQL dumps of PostgreSQL and mysql, add Phone\nto parse phone numbers.\n\n - sqlparser added\n - Phone added for parsing phone numbers\n\nVersion 0.24: Minor feature enhancements\n\nBetter syntax checks and comparison operators for IP_Address, bug fixes\nfor parser and __str__ for IP_Address.IP6_Address\n\n - IP_Address better syntax checks\n - IP_Address __cmp__ and __eq__ improved for comparison with other types\n - more regression tests for IP6_Address\n - bug fixes in __str__ and parser of IP6_Address\n - support for strict checking of netmask (all bits at right of netmask\n   must be zero if strict_mask is True)\n\nVersion 0.23: Minor feature enhancements\n\nIP4_Address can now be put in a dict, add a subnets iterator for\nIP4_Address. Factor IP_Address and add IP6_Address\n\n - Add __hash__ for IP_Address\n - The new subnets iterator for IP_Address iterates over all IPs in a\n   subnet. Optionally a netmask can be specified.\n - Support for IPv6 addresses\n - rename IP4_Address to IP_Address\n\nVersion 0.22: Minor feature enhancements\n\nAllow unicode ip address input, hopefully make rsclib installable via pip.\n\n - Address given to IP4_Address constructor now may be unicode\n - Add download_url to setup.py to make installable via pip\n\nVersion 0.21: Minor feature enhancements\n\nFix autosuper: allow to inherit from non-autosuper classes, some small\nfixes to ast_call and lcr parser. Fix ETree pretty-printing. Update\nFreshmeat to new hostname. Add dotted netmaks parsing to IP4_Address.\n\n - Since python2.6 constructor of \"object\" do not allow parameters, so\n   we need to strip these when doing the upcall from autosuper. This\n   fails when e.g. inheriting from a non-autosuper enabled class, e.g.,\n   class (With_Autosuper, dict)\n   in that case dict would get empty parameters. New implementation\n   finds out if our upcall is to \"object\", only in that case strip\n   parameters.\n - ast_call now processes all queued unhandled events when a call is\n   matched.\n - update regression test for ast_call.Call\n - lcr parser: fix regex, port can have an empty name.\n - Optimize call matching in ast_call: mark call as closed once we are\n   sure about the uniqueid. Add matching of Account-Code.\n - Fix ETree pretty-printing: don't print unicode strings when arguments\n   are already converted\n - freshmeat.net now is freecode.com (and the API redirects there),\n   update Freshmeat.py to new hostname (including .netrc credentials\n   with compatibility for old name).\n - explicit mask paramter of IP4_Address can now be a dotted netmask.\n\nVersion 0.20: Not announced on freshmeat\n\nDatabase value output for ast_cdr, added inductance calculation.\n\n - ast_cdr: Add methods for database values of CDR records -- database\n   values of CDRs are different, they don't include start, end, answer\n   time-stamps but instead only a calldate, in addition the amaflags are\n   numerical in the database.\n - added inductance calculation\n\nVersion 0.19: Not announced on freshmeat\n\nExtend ETree with a walk method and implement small ldap library\n\n - ETree: add walk method to walk the tree and call an optional pre- and\n   post-hook function\n - ldap_lib: common ldap tasks for user and group search, and an\n   iterator for paged search (used with active directory).\n\nVersion 0.18: Not announced on freshmeat\n\nBugfix of ast_call and update for asterisk 1.6, small extension to\nIP4_Address.\n\n - ast_call: match calls via (unique) account code\n - ast_call: State vs ChannelState parameter in Newstate event\n - ast_call: handle immediate error from asterisk (e.g. Permission Denied)\n - IP4_Address: add netblk (start and end address for address with\n   netmask)\n\nVersion 0.17: Not announced on freshmeat\n\nFactor ETree (extended ElementTree) from HTML_Parse. New Freshmeat\nmodule to get project information and submit new releases via the new\nfreshmeat REST API. New simple hexdump module.\n\n - New ETree.py (extended ElementTree)\n - New Freshmeat.py\n - New hexdump.py\n - adapt lcr module to new version of Linux Call Router\n\nVersion 0.16: Not announced on freshmeat\n\nAdd an iptables to tc translator for translating mangle rules in the\niptables PREROUTING chain to appropriate tc commands (using an ipt\naction and mirred redirect actions).\n\n - Add iptables to tc translator to trafficshape.py\n\nVersion 0.15: Not announced on freshmeat\n\nAdd a framework for traffic shaping with linux iproute (tc). Minor\nupdates to iter_recipes.\n\n - Initial implementation of trafficshape.py\n - Add iter_recipes.combinations from python2.6 manpage of itertools\n   for backward compatibility\n\nVersion 0.14: Not announced on freshmeat\n\nAdd a framework for process pipeline execution, processes can either be\npython methods or external programs (with parameter list).  They can be\nconnected in a pipe and there may be T-points in the pipe, where the\npipe forks into two or more pipelines fed by the output of one process.\n\n - Add process pipeline framework\n - HTML_Parse now has an explicit translate hook for preprocessing the\n   html page before parsing it. This defaults to the old behaviour of\n   filtering out common characters in broken HTML.\n - Add nmap parser (e.g. to generate TeX tables from an nmap scan)\n - Fix Lock_Mixin in execute module to remove lockfile at exit,\n   this used to rely on __del__ which breaks in certain cases.\n - add file upload to HTML_Parse\n\nVersion 0.13: Not announced on freshmeat\n\nBug-Fix Release: Fix signal handler in timeout.py\n\n - fix signal handler timeout.py\n\nVersion 0.12: Not announced on freshmeat\n\nAdd a simple timeout mechanism using SIGALRM.\n\n - add timeout.py\n\nVersion 0.11: Not announced on freshmeat\n\nAdd a parser for CDR records in asterisk. We currently use text-files\nonly, this might be later extended for database use. Some fixes for\nast_call, make call-handling more robust (some race conditions would\nidentify events of other calls as belonging to our initiated call).\nAdd an execute module for executing commands and handling IO, this also\nhas a Lock and a Log mixin. Add ocf.py, a small framework for writing\nOCF scripts for the heartbeat cluster resource manager (probably also\nusable for the newer version called pacemaker but for now only tested\nwith the version in Debian stable aka lenny). Add lcr.py to model the\nstatus of Linux Call Router ISDN lines.\n\n - add ast_cdr.py\n - fix ast_call.py\n - fix up-chaining in stateparser.py\n - add execute.py\n - add ocf.py\n - add lcr.py\n\nVersion 0.10: Not announced on freshmeat\n\nadd ast_call for asterisk auto-dialling, small fixes to IP4_Address, add\nbero*fos configurator, experimental code for checking PDF signature\n\n - add ast_call.py\n - Firstname: don't look up names with len < 2\n - IP4_Address: some aliases for common functions\n - IP4_Address: add __cmp__\n - bero.py: bero*fos configurator\n - HTML_Parse updated for python 2.5\n - stateparser update: use self.matrix by default\n - PDF_Signature: experimental code for checking signatures on adobe PDF\n   documents\n - iter_recipes: some magic with iterators\n\nVersion 0.9: Not announced on freshmeat\n\nAdd binom to the Math package, add Firstname, Bug-Fix Release Rational\n\n - binom (n, m) computes the binomial coefficient of n, m.\n - Firstname: check if candidate is a first name candidate according to\n   popular web site.\n - Rational: On division we could get a negative denominator -- fixed\n - make Config_File a descendent of autosuper\n\nVersion 0.8: Not announced on freshmeat\n\nAdded more documentation.\nState-machine parser stateparser implemented. Rational number arithmetic\npackage added.\n\n - stateparser implemented (simple state-machine line-oriented\n   configurable parser)\n - usage-example of IP4_Address prints debian /etc/network/interfaces\n   entry.\n - Math added (Euclids algorithm, gcd, lcm)\n - Rational number arithmetics\n - cookie processing for HTML_Parse\n - basic HTML auth for HTML_Parse\n - HTML_Parse: move to urllib2\n\nVersion 0.7: Not announced on freshmeat\n\nSmall Python library with various things such as Configuration file\nparsing (in Python syntax), HTML and PDF parsing.\n\n - First Release version",
    "docs_url": null,
    "download_url": "http://downloads.sourceforge.net/project/rsclib/rsclib/0.48/rsclib-0.48.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://rsclib.sourceforge.net/",
    "keywords": null,
    "license": "GNU Library or Lesser General Public License (LGPL)",
    "maintainer": null,
    "maintainer_email": null,
    "name": "rsclib",
    "platform": "Any",
    "project_url": "https://pypi.org/project/rsclib/",
    "release_url": "https://pypi.org/project/rsclib/0.48/",
    "requires_python": null,
    "summary": "Misc. basic stuff needed by RSCs tools",
    "version": "0.48"
  },
  "releases": {
    "0.21.9310": [],
    "0.22.9670": [],
    "0.23.9706": [],
    "0.24.9714": [],
    "0.25.9747": [],
    "0.27.10243": [],
    "0.28.10251": [],
    "0.29.10330": [],
    "0.30.10510": [],
    "0.31.10517": [],
    "0.32.10528": [],
    "0.33.10540": [],
    "0.34.10653": [],
    "0.35.10687": [],
    "0.37.10730": [],
    "0.38.10748": [],
    "0.39": [],
    "0.40": [],
    "0.41": [],
    "0.42": [],
    "0.43": [],
    "0.44": [],
    "0.45": [],
    "0.46": [],
    "0.47": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c2d56099b5a4c4f2d5d1233000900d9e",
          "sha256": "9842b4ecaaafd7b9e4dfdcf4d750cec5ddad5bbaa0a5709b7d86630ada590c95"
        },
        "downloads": 122,
        "filename": "rsclib-0.47.tar.gz",
        "has_sig": false,
        "md5_digest": "c2d56099b5a4c4f2d5d1233000900d9e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 102987,
        "upload_time": "2016-06-06T11:23:57",
        "url": "https://files.pythonhosted.org/packages/b5/c9/8f27fd42c17728e238a7b14a35d7c18bb028830574669ae7329a4544b453/rsclib-0.47.tar.gz"
      }
    ],
    "0.48": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bd47d8aeb671e3adf070a488c0651f2e",
          "sha256": "c0db54b92ae7acb2dbb73a8825a72b5f0f91e7a0ee3346cb923673f2a391b72e"
        },
        "downloads": 520,
        "filename": "rsclib-0.48.tar.gz",
        "has_sig": false,
        "md5_digest": "bd47d8aeb671e3adf070a488c0651f2e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 103441,
        "upload_time": "2016-07-01T10:55:14",
        "url": "https://files.pythonhosted.org/packages/f9/54/ed1c039c2ee9e5bf98022d3956a79740fbb89ec9714fe02ac6a272ab914f/rsclib-0.48.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "bd47d8aeb671e3adf070a488c0651f2e",
        "sha256": "c0db54b92ae7acb2dbb73a8825a72b5f0f91e7a0ee3346cb923673f2a391b72e"
      },
      "downloads": 520,
      "filename": "rsclib-0.48.tar.gz",
      "has_sig": false,
      "md5_digest": "bd47d8aeb671e3adf070a488c0651f2e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 103441,
      "upload_time": "2016-07-01T10:55:14",
      "url": "https://files.pythonhosted.org/packages/f9/54/ed1c039c2ee9e5bf98022d3956a79740fbb89ec9714fe02ac6a272ab914f/rsclib-0.48.tar.gz"
    }
  ]
}