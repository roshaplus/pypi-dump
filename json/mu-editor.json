{
  "info": {
    "author": "Nicholas H.Tollervey",
    "author_email": "ntoll@ntoll.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: X11 Applications :: Qt",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3.3",
      "Topic :: Education",
      "Topic :: Software Development :: Embedded Systems"
    ],
    "description": "Mu - a \"micro\" editor\n=====================\n\n**This project works with Python 3 and the Qt UI library.**\n\nCurrently, the latest builds for Windows, OSX and Linux x86 can be found here:\n\nhttp://ardublockly-builds.s3-website-us-west-2.amazonaws.com/?prefix=microbit\n\nFor our project roadmap see the ``ROADMAP.rst`` file.\n\nInstallation\n------------\n\nYou could run Mu from source. Alternatively, go to the link above, choose the\ndirectory for your platform and download the latest build of the editor (HINT:\nthey're ordered by date).\n\nWindows\n+++++++\n\nYou only need to copy the downloaded .exe file somewhere handy and double-click\nit to launch. Once you've got past all the Windows induced warnings and\nprivilege requests you'll see the editor. Unfortunately, due to Windows more\nthan anything else, to be able to use the REPL you'll need to install a driver\nfor USB/serial connectivity to the BBC micro:bit. You can find the required\ndriver and detailed instructions for installing it on ARM's website:\n\nhttps://developer.mbed.org/handbook/Windows-serial-configuration\n\nWe're trying to find a way around this problem via Windows packaging.\n\nOS X\n++++\n\nOSX will probably ask you to confirm you want to run a program downloaded from\nthe internet. You may need to right-click on the file and select `open` to make\nit work first time. You do not need to install any drivers.\n\nLinux\n+++++\n\nJust make the file executable and run it! :-)\n\nWe're in the process of creating official packages for both Debian and Fedora\nbased flavours of Linux.\n\nRaspberry Pi (Raspbian)\n+++++++++++++++++++++++\n\nA package is available for Raspbian for mu can be installed using the following commands.\n\nOpen a Terminal (Menu > Accessories > Terminal):\n\n    sudo apt-get update\n\n    sudo apt-get install mu\n\nWhat?\n-----\n\nMu is a very simple code editor for kids, teachers and beginner programmers.\nIt's written in Python and works on Windows, OSX, Linux and Raspberry Pi.\n\nWhy?\n----\n\nThere isn't a cross platform Python code editor that is:\n\n* Easy to use;\n* Accessible to everyone;\n* Available on all major platforms;\n* Well documented (even for beginners);\n* Simply coded;\n* Currently maintained; and,\n* Thoroughly tested.\n\nMu addresses these needs.\n\nIn the Python world, teachers, students and other beginner programmers are\nforced to use one of the following options:\n\n* IDLE - the long-in-the-tooth, unmaintained and eccentric editor that comes with Python.\n* A third party IDE (integrated development environment) for teaching. If \"IDE\" sounds complicated, that's because it is.\n* A professional programmer's editor such as vi or emacs.\n\nSuch tools are fiddly, complicated and full of distracting \"features\". They\nare completely inappropriate for teaching and learning ~ complexity impedes a\nnovice programmer's first steps.\n\nHow?\n----\n\nMu's outlook is:\n\n* Less is more (remove all unnecessary distractions);\n* Keep it simple (so Mu is easy to understand);\n* Walk the path of least resistance (Mu should be easy);\n* Have fun (learning should be a positive experience).\n\nOur first iteration targets MicroPython on the BBC micro:bit.\n\nThe BBC's micro:bit project is aimed at 11-year old children. It consists of a\nsmall and simple programmable device. One option is the remarkable work of\nDamien George in the form of MicroPython, a full re-implementation of Python 3\nfor microcontrollers including the BBC micro:bit.\n\nThe BBC's \"blessed\" solution for programming this device is web-based. However,\nwe have observed that this doesn't provide the optimum experience for Python:\n\n* It requires you to use a web-browser as a text based code editor.\n* You need to download the .hex file to flash onto the device and then drag it to the device's mount point on the filesystem. A rather clunky multi-part process.\n* It doesn't allow you to connect to the device in order to live code in Python via the REPL.\n\nThe Mu editor addresses each of these problems: it is a native application\nspecifically designed as a text based coding environment. It makes it easy to\nflash your code onto the device (it's only a click of a button). It has a built\nin REPL client that automatically connects to the device.\n\nMu has been adapted from my previous work done with Damien George and Dan Pope\non the \"Puppy\" editor for kids. Mu is an ultra-slimmed down version of Puppy.\n\nThe code is simple and monolithic - it's commented and mostly found in a\na few obviously named Python files. This has been done on purpose: we want\nteachers and kids to take ownership of this project and organising the code in\nthis way aids the first steps required to get involved (everything you need to\nknow is in four obvious files).\n\nIn terms of features - it's a case of less is more:\n\n* Create a new Python script.\n* Load an existing Python script.\n* Save the existing Python script.\n* Flash the device with the current script.\n* Connect to the device via the REPL (will only work if a device is connected).\n* Zoom in/out.\n* Day / night (high contrast) modes.\n* Built in help (HTML).\n* Quit.\n\nThat's it!\n\nDevelopment\n-----------\n\nIf you only want to use Mu then please ignore this section. If you'd like to\ncontribute to the development of Mu read on...\n\nThe source code is hosted on GitHub. Please feel free to fork the repository.\nAssuming you have Git installed you can download the code from the canonical\nrepository with the following command::\n\n    $ git clone https://github.com/mu-editor/mu.git\n\nThe instructions below assume that you're working within a Python\nvirtual environment (aka \"venv\"). Versions of Python\n\nFor this to work you'll need to have Qt5 and at least Python 3.4 installed.\n\n* On Debian based systems this is covered by installing: python3-pyqt5,\n  python3-pyqt5.qsci and python3-pyqt5.qtserialport.\n\n* On Mac OS, first install PyQT5::\n\n    brew install pyqt5 --with-python3\n\n  Then install QScintilla using the recipe from the mu repository::\n\n    brew install https://raw.githubusercontent.com/mu-editor/mu/master/package/extras/qscintilla2.rb\n\n* On Windows::\n\n    Unless you want to build PyQt5 and its dependencies from scratch (a\n    non-trivial task) you'll almost certainly want to use the binaries\n    provided by Riverbank who provide the Python bindings for Qt. However,\n    they've recently switched from providing binary installers to providing\n    binary wheels. But they only provide wheels for the most recent versions\n    of Python. In addition, the MSI installer version interacts awkwardly\n    with virtual environments so you need to install PyQt5 globally and then\n    create the virtual environment with --system-site-packages.\n\n    ============== ============ =========\n    Python Version PyQt Version Installer\n    -------------- ------------ ---------\n    3.4            5.6          .msi\n    -------------- ------------ ---------\n    3.5            5.6          .whl\n    -------------- ------------ ---------\n    3.5            5.7          .whl\n    -------------- ------------ ---------\n    3.5            5.8          .whl\n    -------------- ------------ ---------\n    3.6            5.8          .whl\n    ============== ============ =========\n\n    If you can, use Python 3.5 or greater and install from within the\n    virtualenv using the wheels.\n\n\n.. note:: From this point onwards, the instructions assume that you're\n   using a virtual environment.\n\n   If you have an existing virtual environment it will not have\n   changed to add the new packages. The simplest thing to do is to create a\n   new virtual environment, remembering to use the\n   ``--system-site-packages`` switch so that installed libraries are\n   included. For instance::\n\n    $ virtualenv -p /usr/local/bin/python3 --system-site-packages ~/env/py3\n\n or::\n\n    $ mkvirtualenv -p /usr/local/bin/python3 --system-site-packages py3\n\nor::\n\n    c:\\dev\\mu> py -3.5 -mvenv .venv35\n\nEnsure you have the correct dependencies for development installed by creating\na virtualenv and running::\n\n    $ pip install -r requirements.txt\n\nIf your setup hasn't yet included installing PyQt5 (eg because you're using\nPython 3.5+ on Windows for which wheels are available from PyPI)::\n\n    (.venv35) c:\\dev\\mu> pip install PyQt5 QScintilla\n\nTo run the local development version of \"mu\", in the root of this repository\ntype::\n\n    $ python3 run.py\n\nor::\n\n    (.venv35) c:\\dev\\mu> python run.py\n\nThere is a Makefile that helps with most of the common workflows associated\nwith development. Typing \"make\" on its own will list the options thus::\n\n    $ make\n\n    There is no default Makefile target right now. Try:\n\n    make clean - reset the project and remove auto-generated assets.\n    make pyflakes - run the PyFlakes code checker.\n    make pep8 - run the PEP8 style checker.\n    make test - run the test suite.\n    make coverage - view a report on test coverage.\n    make check - run all the checkers and tests.\n    make docs - run sphinx to create project documentation.\n\nBefore contributing code please make sure you've read CONTRIBUTING.rst.\n\n\nRelease History\n---------------\n\n1.0.0.beta.13\n=============\n\n* Fix to solve problem when restoring CircuitPython session when device is not\n  connected.\n* Fix to solve \"data terminal ready\" (DTR) problem when CircuitPython expects\n  DTR to be set (and it isn't by default in Qt).\n* Added initial work on developer documentation found here: http://mu.rtfd.io/\n* Updates to USB PIDs for Adafruit boards.\n* Added functionally equivalent \"make.py\" for Windows based developers.\n* Major refactor of the micro:bit related \"files\" UI pane: it no longer blocks\n  the main UI thread.\n\n1.0.0.beta.12\n=============\n\n* Update \"save\" related behaviour so \"save as\" pops up when the filename in the tab is double clicked.\n* Update the debugger so the process stops at the end of the run.\n* Ensure the current working directory for the REPL is set to mu_mode.\n* Add additional documentation about Raspberry Pi related API.\n* Update micro:bit runtime to lates MicroPython beta.\n* Make a start on developer documentation.\n\n1.0.0.beta.11\n=============\n\n* Updated Python 3 REPL to make use of an out of process iPython kernel (to avoid problems with blocking Mu's UI).\n* Reverted Save related functionality to prior behaviour.\n* The \"Save As\" dialog for re-naming a file is launched when you click the filename in the tab associated with the code.\n\n1.0.0.beta.10\n=============\n\n* Ensured \"Save\" button prompts user to confirm (or replace) the filename of an existing file. Allows Mu to have something like \"Save As\".\n* Updated to latest microfs library for working with the micro:bit's filesystem.\n* Fixed three code quality warnings found by https://lgtm.com/projects/g/mu-editor/mu/alerts/?mode=list\n* Updated API generation so the output is ordered (helps when diffing the generated files).\n* Updated Makefile to create Python packages/wheels and deploy to PyPI.\n* Explicit versions for packages found within install_requires in setup.py. \n* Minor documentation changes.\n\n1.0.0.beta.9\n============\n\n* Debian related packaging updates.\n* Fixed a problem relating to how Windows stops the debug runner.\n* Fixed a problem relating to how Windows paths are expressed that was stopping the debug runner from starting.\n\n1.0.0.beta.8\n============\n\n* Updated splash image to reflect trademark usage of logos.\n* Refactored the way the Python runner executes so that it drops into the Python shell when it completes.\n* The debug runner now reports when it has finished running a script.\n\n1.0.0.beta.7\n============\n\n* Update PyInstaller icons.\n* Fix some tests that fail on older version of Python 3.\n* Add scripts to extract API information from Adafruit and Python 3.\n* Add generated API documentation to Mu so autosuggest and call tips have data.\n* Ensure translation files are distributed.\n\n1.0.0.beta.6\n============\n\n* Pip installable.\n* Updated theme handling: day, night and high-contrast (as per user feedback).\n* Keyboard shortcuts.\n\n1.0.0.beta.*\n============\n\n* Added modes to allow Mu to be a general Python editor. (Python3, Adafruit and micro:bit.)\n* Added simple visual debugger.\n* Added iPython based REPL for Python3 mode.\n* Many minor UI changes based on UX feedback.\n* Many bug fixes.\n\n0.9.13\n======\n\n* Add ability to change default Python directory in the settings file. Thanks to Zander Brown for the contribution. See #179.\n\n0.9.12\n======\n\n* Change the default Python directory from ``~/python`` to ``~/mu_code``. This fixes issue #126.\n* Add instructions for installing PyQt5 and QScintilla on Mac OS.\n* Update to latest version of uFlash.\n* Add highlighting of search mathes.\n* Check if the script produced is > 8k.\n* Use a settings file local to the Mu executable if available.\n* Fix bug with highlighting code errors in Windows.\n* Check to overwrite an existing file on the micro:bit FS.\n* Start changelog\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/mu-editor/mu",
    "keywords": "",
    "license": "GPL3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mu-editor",
    "platform": "",
    "project_url": "https://pypi.org/project/mu-editor/",
    "release_url": "https://pypi.org/project/mu-editor/1.0.0b13/",
    "requires_dist": [
      "qtconsole (==4.3.1)",
      "qscintilla (==2.10.1)",
      "pyserial (==3.4)",
      "pyqt5 (==5.9)",
      "pyflakes (==1.6.0)",
      "pycodestyle (==2.3.1)",
      "matplotlib (==2.0.2)"
    ],
    "requires_python": "",
    "summary": "A simple editor for beginner programmers.",
    "version": "1.0.0b13"
  },
  "releases": {
    "1.0.0b12": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ee0cdbf32da46abb52f0a849229494a4",
          "sha256": "6426e4a3e117575d47abbf589e68a697684039f83aa47a279664f778f814fa4a"
        },
        "downloads": -1,
        "filename": "mu_editor-1.0.0b12-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "ee0cdbf32da46abb52f0a849229494a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 1407839,
        "upload_time": "2017-10-20T16:00:30",
        "url": "https://files.pythonhosted.org/packages/93/7b/143f7d0b0fcdcced0c339cc3e208e8f133d71248ee03be59fd4723159b8a/mu_editor-1.0.0b12-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4f818eb10d131ff47e39645f57cfc3fa",
          "sha256": "0e77dea5397a78cc912b4855ec808f1ca0190e9d9157b2b0b1b6ca06652f930a"
        },
        "downloads": -1,
        "filename": "mu-editor-1.0.0b12.tar.gz",
        "has_sig": true,
        "md5_digest": "4f818eb10d131ff47e39645f57cfc3fa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1402114,
        "upload_time": "2017-10-20T16:00:34",
        "url": "https://files.pythonhosted.org/packages/2b/4c/f7f06426c59f830737f4d3205cf602e4febc5639a7463ed5559eb7e10669/mu-editor-1.0.0b12.tar.gz"
      }
    ],
    "1.0.0b13": [
      {
        "comment_text": "",
        "digests": {
          "md5": "817d89c6434153c450d672a97037dd21",
          "sha256": "22fff6113e50e3fb09c537d776a9e567d5f902f4762ea32877bccd490f23cb9f"
        },
        "downloads": -1,
        "filename": "mu_editor-1.0.0b13-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "817d89c6434153c450d672a97037dd21",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 1413890,
        "upload_time": "2017-12-23T13:24:58",
        "url": "https://files.pythonhosted.org/packages/ea/8c/5fb39655039bc5517632b181c736c19a3ce906ef3f0e6d512f7449c40e0b/mu_editor-1.0.0b13-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e74f5607653e1c92db67d60c90eb7478",
          "sha256": "d46f9452c2a4575ad1d0ff132dd82688e4ab31b374cf40da6fde385e5de48b5d"
        },
        "downloads": -1,
        "filename": "mu-editor-1.0.0b13.tar.gz",
        "has_sig": true,
        "md5_digest": "e74f5607653e1c92db67d60c90eb7478",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1410154,
        "upload_time": "2017-12-23T13:25:04",
        "url": "https://files.pythonhosted.org/packages/95/e5/9c5457eee7aa3e7300492cec3958afd9b9eb6599ce663079c64ccf5efd92/mu-editor-1.0.0b13.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "817d89c6434153c450d672a97037dd21",
        "sha256": "22fff6113e50e3fb09c537d776a9e567d5f902f4762ea32877bccd490f23cb9f"
      },
      "downloads": -1,
      "filename": "mu_editor-1.0.0b13-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "817d89c6434153c450d672a97037dd21",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 1413890,
      "upload_time": "2017-12-23T13:24:58",
      "url": "https://files.pythonhosted.org/packages/ea/8c/5fb39655039bc5517632b181c736c19a3ce906ef3f0e6d512f7449c40e0b/mu_editor-1.0.0b13-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "e74f5607653e1c92db67d60c90eb7478",
        "sha256": "d46f9452c2a4575ad1d0ff132dd82688e4ab31b374cf40da6fde385e5de48b5d"
      },
      "downloads": -1,
      "filename": "mu-editor-1.0.0b13.tar.gz",
      "has_sig": true,
      "md5_digest": "e74f5607653e1c92db67d60c90eb7478",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 1410154,
      "upload_time": "2017-12-23T13:25:04",
      "url": "https://files.pythonhosted.org/packages/95/e5/9c5457eee7aa3e7300492cec3958afd9b9eb6599ce663079c64ccf5efd92/mu-editor-1.0.0b13.tar.gz"
    }
  ]
}