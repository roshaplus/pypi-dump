{
  "info": {
    "author": "Simon Lars\u00e9n",
    "author_email": "slarse@kth.se",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "clanim - Command Line Animations\n*******************************************************\n\n`Docs`_\n\n.. image:: https://travis-ci.org/slarse/clanim.svg?branch=master\n    :target: https://travis-ci.org/slarse/clanim\n    :alt: Build Status\n.. image:: https://codecov.io/gh/slarse/clanim/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/slarse/clanim\n    :alt: Code Coverage\n.. image:: https://readthedocs.org/projects/clanim/badge/?version=latest\n    :target: http://clanim.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n.. image:: https://badge.fury.io/py/clanim.svg\n    :target: https://badge.fury.io/py/clanim\n    :alt: PyPi Version\n.. image:: https://img.shields.io/badge/python-3.6-blue.svg\n    :target: https://badge.fury.io/py/pdfebc\n    :alt: Supported Python Versions\n\n.. contents::\n\nOverview\n========\nThis package contains decorators for printing a command line animation while\nthe decorated function runs. It is very similar to the ``decorating`` package,\nwhich currently has way more features and probably serves you better then\n``clanim``. I wanted to create ``clanim`` anyway as a means of practicing\nwith decorators and command line animations. It doesn't seem like ``decorating`` \ncurrently supports async functions, so that's the one area where ``clanim`` \npotentially is superior at this time.\n\n.. important::\n    \n    The API and general functionality of ``clanim`` is likely to change\n    dramatically in the coming iterations. I have decided to change the purpose\n    of the project and make it more of a toolkit for creating animations, than a\n    ready-to-use animation library. I may split it into two packages, one with\n    ready-to-use animations, and one with the tools needed to easily create new\n    animations.\n\nRequirements\n============\nPython 3.6 or higher and the ``daiquiri`` package (used for development and\nwill probably be removed in a final release).\n\nQuickstart\n==========\nThe user API for clanim is contained wholly on the package level. That is to\nsay, only the imports available from ``clanim`` is intended for non-developers.\n``clanim`` works both for regular functions, as well as async functions.\nMost notably, there are the ``animate`` and ``annotate`` decorators. ``animate``\nis the core decorator used to animate functions, and ``annotate`` is used to\ndisplay messages before and/or after an animated function.\n\n.. DANGER::\n\n    Print statements inside of a functions annotated with ``animate`` will\n    interfere with the animation, so use ``annotate`` instead.\n\n.. DANGER::\n\n    Recursive functions are currently not supported! If you have a recursive\n    function, you may wrap it in another (and animated) function which simply\n    issues a call to the recursive function with the same arguments.\n\n.. important::\n\n    When using clanim to annotate async functions, it is very important that the\n    event loop is exited properly. For example, an unhandled keyboard interrupt\n    in the middle of an animated async function will cause the animation thread\n    to keep spinning forever. Therefore, always put the starting of the even\n    loop in a try block and make sure that the event loop is closed no matter\n    what.\n\nHere are som minimal examples:\n\n.. code:: python\n\n    import time\n    from clanim import animate, scrolling_text\n\n    # if no parameter is given, the default arrow animation is used\n    @animate\n    def slow(n):\n        time.sleep(n)\n\n    # scrolling_text is a large, scrolling text animation\n    # step determines the time between frames\n    @animate(animation=scrolling_text(\"Crunching numbers ...\"), step=0.05)\n    def fibo(n):\n        if n < 0:\n            raise ValueError(\"Undefined for n < 0\")\n        fibo_recursive(n)\n\n    def fibo_recursive(n):\n        if n == 0 or n == 1:\n            return n\n        return fibo(n-1) + fibo(n-2)\n\n\n\nThe biggest new addition to the 0.2.0 release is the ``scrolling_text``\nanimation, which is demonstrated below.\n\n.. image:: images/scrolling_text.gif\n    :alt: The scrolling_text animation\n\nInstall\n=======\nOption 1: Install from PyPi with ``pip``\n----------------------------------------\nThe latest release of ``clanim`` is on PyPi, and can thus be installed as usual\nwith ``pip``.  I strongly discourage system-wide ``pip`` installs (i.e. ``sudo\npip install <package>``), as this may land you with incompatible packages in a\nvery short amount of time. A per-user install can be done like this:\n\n1. Execute ``pip install --user clanim`` to install the package.\n2. Further steps to be added ...\n\nOption 2: Clone the repo and the install with ``pip``\n-----------------------------------------------------\nIf you want the dev version, you will need to clone the repo, as only release\nversions are uploaded to PyPi. Unless you are planning to work on this\nyourself, I suggest going with the release version.\n\n1. Clone the repo with ``git``:\n    - ``git clone https://github.com/slarse/clanim``\n2. ``cd`` into the project root directory and install with ``pip``.\n    - ``pip install --user .``, this will create a local install for the current user.\n    - Or just ``pip install .`` if you use ``virtualenv``.\n    - For development, use ``pip install -e .`` in a ``virtualenv``.\n3. Further steps to be added ...\n\nWanted improvements\n===================\n* Add more animations\n* Decouple animation update from rendering\n* Add support for recursive functions\n\nLicense\n=======\nThis software is licensed under the MIT License. See the `license file`_ file\nfor specifics.\n\nContributing\n============\nI will happily take contributions, especially in terms of new animations.\nSubmit a pull request if you have an idea, and let me approve the idea before\nyou put serious work into something I would not like in the project!\n\n.. _license file: LICENSE\n.. _setup.py: setup.py\n.. _requirements.txt: requirements.txt\n.. _Docs: https://clanim.readthedocs.io/en/latest/\n",
    "docs_url": null,
    "download_url": "https://github.com/slarse/clanim/archive/v0.2.0.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/slarse/clanim",
    "keywords": "",
    "license": "MIT License\n\nCopyright (c) 2017, Simon Lars\u00e9n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
    "maintainer": "",
    "maintainer_email": "",
    "name": "clanim",
    "platform": "",
    "project_url": "https://pypi.org/project/clanim/",
    "release_url": "https://pypi.org/project/clanim/0.2.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Function decorators that cause a command line animation to be run for the duration of the function.",
    "version": "0.2.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fbb83589e90cb537ad9d9b1be136b824",
          "sha256": "f559e660230c66c23f8cea76ed503e7551e35c30feb7691e4387296dfa7e4084"
        },
        "downloads": -1,
        "filename": "clanim-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fbb83589e90cb537ad9d9b1be136b824",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6574,
        "upload_time": "2017-08-04T11:14:39",
        "url": "https://files.pythonhosted.org/packages/90/60/cf7f6eff6c8eceb065b1b408112fdec2b1716b677e0e662960cd3f75d2ef/clanim-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "15cedca163762443bf5a51ad852fb1b9",
          "sha256": "579a1e189bad71d4319466967b5c2eff1be6c36bc665b69f1e20e34b79921805"
        },
        "downloads": -1,
        "filename": "clanim-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "15cedca163762443bf5a51ad852fb1b9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6590,
        "upload_time": "2017-08-04T11:22:36",
        "url": "https://files.pythonhosted.org/packages/f9/95/182de0b6f4e36af4855367482d857cec857c636f5e492710935e10c48c5a/clanim-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e07159fd5bcc15dd0215fa7c5537f029",
          "sha256": "cc711b31fc2c44291e571ababb6f9abc72bfe4c9373b1fa15626da23cd6fef0a"
        },
        "downloads": -1,
        "filename": "clanim-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e07159fd5bcc15dd0215fa7c5537f029",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6635,
        "upload_time": "2017-08-04T11:26:04",
        "url": "https://files.pythonhosted.org/packages/bb/f7/026b96672b0b424d7fb0dc306bb38094a6a151cff4a62b9adae2b49b091c/clanim-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1aff5268152f4c5b4e80190babfa4d9b",
          "sha256": "841699f5bea52c0d41b9cd9a0a68e082e2abb2401ec1d1305617121da67f2518"
        },
        "downloads": -1,
        "filename": "clanim-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1aff5268152f4c5b4e80190babfa4d9b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6623,
        "upload_time": "2017-08-04T11:31:28",
        "url": "https://files.pythonhosted.org/packages/d9/46/1f0ca9fa166cd2caf0d3daafe9c22f61bd99681f49ca2930a5b04f50af09/clanim-0.1.3.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5e17164850a2b863e255cb0beeab7dad",
          "sha256": "62f8d0e99253548cc18bc2f3bd4c12e68d0ffce12ccff523c84d068c82c0a22f"
        },
        "downloads": -1,
        "filename": "clanim-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5e17164850a2b863e255cb0beeab7dad",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11665,
        "upload_time": "2018-01-24T20:11:28",
        "url": "https://files.pythonhosted.org/packages/d9/4a/a47b12f3fa9666f9cb9582a91f760f5987d404c895a981431e88a7abb789/clanim-0.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5e17164850a2b863e255cb0beeab7dad",
        "sha256": "62f8d0e99253548cc18bc2f3bd4c12e68d0ffce12ccff523c84d068c82c0a22f"
      },
      "downloads": -1,
      "filename": "clanim-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5e17164850a2b863e255cb0beeab7dad",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 11665,
      "upload_time": "2018-01-24T20:11:28",
      "url": "https://files.pythonhosted.org/packages/d9/4a/a47b12f3fa9666f9cb9582a91f760f5987d404c895a981431e88a7abb789/clanim-0.2.0.tar.gz"
    }
  ]
}