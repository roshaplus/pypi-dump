{
  "info": {
    "author": "Chris Pappalardo",
    "author_email": "cpappalardo@alvarezandmarsal.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "# pynlai\n\n[![pypi](https://img.shields.io/pypi/v/pynlai.svg)](\nhttps://pypi.python.org/pypi/pynlai)\n\n[![tci](https://img.shields.io/travis/alvarezandmarsal/pynlai.svg)](\nhttps://travis-ci.org/alvarezandmarsal/pynlai)\n\n[![rtd](https://readthedocs.org/projects/pynlai/badge/?version=latest)](\nhttps://pynlai.readthedocs.io/en/latest/?badge=latest)\n\n[![git](https://pyup.io/repos/github/alvarezandmarsal/pynlai/shield.svg)](\nhttps://pyup.io/repos/github/alvarezandmarsal/pynlai/)\n\nPYthon Natural Language Application Interface library.\n\n* Free software: MIT license\n* Documentation: https://pynlai.readthedocs.io.\n\n## Why pynlai?\n\npynlai was created to provide a way for non-technical users to interact\nwith backend applications using natural language.  Developers can simply\nwrite an app and use pynlai to process text commands from any source\n(e.g. irc, slack, email, etc.) by decorating their functions with\nnatural language triggers.\n\n## Getting started\n\nTo get started with pynlai, you first need to have an idea of the types\nof command sentences you expect from your users and how those sentences\nwill be parsed by spaCy.\n\nFor example, let's say you have the following function in your app:\n\n```python\ndef nl_function(value):\n```\n\nAnd you expect a user might say:\n\n```\nTest the nl_function with value set to 1.\n```\n\nThe first step is to use pynlai's cli to test how spaCy will parse that\nsentence.\n\nClone the pynlai repo and build the docker dev containers\n(Note: you must have docker and docker-compose installed, see\n[installation instructions](https://docs.docker.com/compose/install/)):\n\n\n```shell\n$ docker-compose docker-compose-dev.yml build\n```\n\nParse sentences with the `parse` cli command:\n\n```shell\n$ docker-compose -f docker-compose-dev.yml run --rm pynlai \\\n      pynlai parse \"This is a test sentence.\"\n```\n\nTry to parse the sentence using the entire pynlai nl pipeline.  To see a\nlist of available options, use:\n\n```shell\n$ docker-compose docker-compose-dev.yml run --rm pynlai pynlai --help\n```\n\nLook for a pipeline function that isolates the command, usually the\ndependency object parser `--pipeline obj` which gives us the following\nfor our test sentence:\n\n```shell\n$ docker-compose -f docker-compose-dev.yml run --rm pynlai \\\n      pynlai --pipeline obj \\\n      parse \"Test the nl function with value set to 1.\"\n('to_obj',\n [OrderedDict([\n     ('orth_', 'function'),\n     ('lemma_', 'function'),\n     ('dep_', 'dobj'),\n     ('head.orth_', 'Test'),\n     ('head.lemma_', 'test'),\n     ('head.pos_', 'VERB')])])\n```\n\nAnd similarly for arguments:\n\n```shell\n$ docker-compose -f docker-compose-dev.yml run --rm pynlai \\\n      pynlai --pipeline nc \\\n      parse \"Test the nl function with value set to 1.\"\n('to_nc',\n [OrderedDict([\n     ('text', 'the nl function'),\n     ('root.orth_', 'function'),\n     ('root.lemma_', 'function'),\n     ('root.dep_', 'dobj'),\n     ('root.head.orth_', 'Test'),\n     ('root.head.lemma_', 'test'),\n     ('root.head.pos_', 'VERB')]),\n  OrderedDict([\n     ('text', 'value'),\n     ('root.orth_', 'value'),\n     ('root.lemma_', 'value'),\n     ('root.dep_', 'pobj'),\n     ('root.head.orth_', 'with'),\n     ('root.head.lemma_', 'with'),\n     ('root.head.pos_', 'ADP')])])\n```\n\nWe can then set up the pynlai triggers and decorate our app function\nas follows:\n\n```python\n\nfrom collections import OrderedDict\nimport sys\n\nimport en_core_web_sm as en\n\nimport pynlai\nfrom pynlai import core\nfrom pynlai import views\n\n\nnlp = en.load()\n\n\ntrigger = pynlai.Trigger(\n    core.to_obj,\n    views._DEP_TOKEN['HR'],\n    OrderedDict([\n        ('lemma_', 'nl_function'),\n        ('dep_', 'dobj'),\n        ('head.lemma_', 'test'),\n        ('head.pos_', 'VERB'),\n    ]),\n)\n\n\ndef arg_callback(sent):\n    ents = core.to_ent(doc=sent, nlp=nlp).pop()\n    view = core.create_view(ents, views._ENT_SPAN['HR'])\n    return dict([('value', view['text'])])\n\n\nargument = pynlai.Argument(\n    core.to_nc,\n    views._DEP_SPAN['HR'],\n    OrderedDict([\n        ('root.lemma_', 'value'),\n    ]),\n    arg_callback,\n)\n\n\n@pynlai.nl_function(\n    self.trigger,\n    self.argument,\n)\ndef nl_function(value):\n    return value\n```\n\nAnd then call our decorated command using a natural language sentence\nlike so:\n\n```python\nnl = 'Test the nl_function with value set to 1.'\npynlai.run(doc=nl, nlp=nlp, obj=sys.modules[__name__])  # returns 1\n```\n\n\nHistory\n=======\n\n0.1.0 (2017-06-23)\n------------------\n\n* First release\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/alvarezandmarsal/pynlai",
    "keywords": "pynlai",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pynlai",
    "platform": "",
    "project_url": "https://pypi.org/project/pynlai/",
    "release_url": "https://pypi.org/project/pynlai/0.1.0/",
    "requires_dist": [
      "spacy",
      "six",
      "click"
    ],
    "requires_python": "",
    "summary": "PYthon Natural Language Application Interface library.",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fe62efc98ca73f2c18bda5ddc03f377b",
          "sha256": "9b7a0f89771fe1ca2b2877e18c12385b2521fa64f6231683aa2d8f1ea1c8707b"
        },
        "downloads": 0,
        "filename": "pynlai-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe62efc98ca73f2c18bda5ddc03f377b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9758,
        "upload_time": "2017-07-15T15:28:24",
        "url": "https://files.pythonhosted.org/packages/90/c9/cfdeab11c8781e77b911488b9d8af17d7d5bde680195ebcd730b0a3b8ab5/pynlai-0.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9e9f1a8982dff90af2edd7eef4770450",
          "sha256": "7e6eaa12e42498128c1f6a70094a7005230e4a7880b10ac561893751946493d0"
        },
        "downloads": 0,
        "filename": "pynlai-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9e9f1a8982dff90af2edd7eef4770450",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17401,
        "upload_time": "2017-07-15T15:28:25",
        "url": "https://files.pythonhosted.org/packages/07/3b/27765199412938f0be010cf7467b49f618bfa0d08812f8b8ae27e315f2be/pynlai-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fe62efc98ca73f2c18bda5ddc03f377b",
        "sha256": "9b7a0f89771fe1ca2b2877e18c12385b2521fa64f6231683aa2d8f1ea1c8707b"
      },
      "downloads": 0,
      "filename": "pynlai-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fe62efc98ca73f2c18bda5ddc03f377b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 9758,
      "upload_time": "2017-07-15T15:28:24",
      "url": "https://files.pythonhosted.org/packages/90/c9/cfdeab11c8781e77b911488b9d8af17d7d5bde680195ebcd730b0a3b8ab5/pynlai-0.1.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "9e9f1a8982dff90af2edd7eef4770450",
        "sha256": "7e6eaa12e42498128c1f6a70094a7005230e4a7880b10ac561893751946493d0"
      },
      "downloads": 0,
      "filename": "pynlai-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9e9f1a8982dff90af2edd7eef4770450",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 17401,
      "upload_time": "2017-07-15T15:28:25",
      "url": "https://files.pythonhosted.org/packages/07/3b/27765199412938f0be010cf7467b49f618bfa0d08812f8b8ae27e315f2be/pynlai-0.1.0.tar.gz"
    }
  ]
}