{
  "info": {
    "author": "David Moreno-Garcia",
    "author_email": "david.mogar@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "cucco |Build Status| |codecov| |beerpay|\n========================================\n\nIs that... is that a cucco? Sure it is!\n\nCucco is here to help you to normalize those nasty texts. Removing extra whitespaces is not that hard, right? What about stop words? They're no good... oh, and don't even mention emojis!\n\nThis little friend will do the hard work for you. Just set it up and let it peck all over your text.\n\nOh please, shut up and show me where can I grab a cucco!\n--------------------------------------------------------\n\nThe easiest way to get a cucco is by using pip:\n\n::\n\n    $ pip install cucco\n\nBut sometimes... sometimes you want to go wild and get the biggest... No, the best!... No, THE MIGHTIEST cucco!\n\nTo do so, you may use Git. Clone the repository from Github and do it all the hard way:\n\n::\n\n    $ git clone https://github.com/davidmogar/cucco.git\n    $ cd cucco\n    $ python setup.py install\n\nGot it. How do I use it?\n------------------------\n\nNow that you have a cucco, I'll let it give you all the details.\n\n    Cucuco, cuco cuco cucucuco, CUCCO!\n\n    -- Cucco\n\nSo true... so true...[tears falling down my face]. Just allow me to add some insight.\n\nThere are two ways of using cucco. The first one is through its CLI. You can get more info on this by executing the next command:\n\n::\n\n    $ cucco --help\n\nThe next example code shows how to normalize a short text using cucco inside your code:\n\n.. code:: python\n\n    from cucco import Cucco\n\n    cucco = Cucco()\n    print(cucco.normalize('Who let the cucco out?'))\n\nThis would apply all normalizations to the text ``Who let the cucco out?``. The output for this normalizations would be the next one:\n\n::\n\n    cucco\n\nIt's also possible to send a list of normalizations to apply, which will be executed in order.\n\n.. code:: python\n\n    from cucco import Cucco\n\n    cucco = Cucco()\n\n    normalizations = [\n        'remove_extra_whitespaces',\n        ('replace_punctuation', {'replacement': ' '})\n    ]\n\n    print(cucco.normalize('Who    let   the cucco out?', normalizations))\n\nThis is the output:\n\n::\n\n    Who let the cucco out\n\nFor more information on how to use cucco you can `check its website <cucco.io>`_, which will be ready cucco-soon.\n\nSupported languages\n-------------------\n\nYou never know when a cucco will learn a new trick. Currently, they can remove stop words for 50 languages. The complete list can be `checked here <https://github.com/davidmogar/cucco/tree/master/cucco/data>`_. If you are looking for the source you can find it in this `GitHub repository <https://github.com/6/stopwords-json>`_ which uses `json` for the stop words files.\n\nCan I contribute?\n-----------------\n\nAre you a breeder? No? Don't worry, you can still help.\n\nMaybe you have a good new feature to add. Maybe is not even good. It doesn't matter! It is always good to share ideas, isn't it? Just go for it! Pull requests are warmly welcomed.\n\nNot in the mood to implement it yourself? You can still create an issue and comment about it there. Feedback is always great!\n\n.. |Build Status| image:: https://travis-ci.org/davidmogar/cucco.svg?branch=master\n   :target: https://travis-ci.org/davidmogar/cucco\n.. |codecov| image:: https://codecov.io/gh/davidmogar/cucco/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/davidmogar/cucco\n.. |beerpay| image:: https://beerpay.io/davidmogar/cucco/badge.svg?style=flat\n   :target: https://beerpay.io/davidmogar/cucco\n",
    "docs_url": null,
    "download_url": "https://github.com/davidmogar/cucco/tarball/2.1.0",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/davidmogar/cucco",
    "keywords": "normalization,language,text,manipulation",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "cucco",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/cucco/",
    "release_url": "https://pypi.org/project/cucco/2.1.0/",
    "requires_python": null,
    "summary": "Python library for text normalization",
    "version": "2.1.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fc45ac7b5a64fb455e3631a383aaf9c0",
          "sha256": "a80836ac2b2548dc9a410f4bbb091d4d0cffc1b6c052680256250e3fc4e6c551"
        },
        "downloads": 17,
        "filename": "cucco-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fc45ac7b5a64fb455e3631a383aaf9c0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21546,
        "upload_time": "2017-03-01T20:55:51",
        "url": "https://files.pythonhosted.org/packages/46/a5/e781da5a044971335dd476fca1bde29901118fe52dd0aa880eeb76759f47/cucco-1.0.0.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "655742801a2eab09229a23e899878312",
          "sha256": "bdb9d55e02e2c47fc145f80420de4d3d0a6addf838a4bd0726d90db5a43d6b1e"
        },
        "downloads": 0,
        "filename": "cucco-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "655742801a2eab09229a23e899878312",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 46816,
        "upload_time": "2017-05-15T11:00:08",
        "url": "https://files.pythonhosted.org/packages/58/b3/a68b143146ee1a3d9fa5a16bb8ccdd10bd99af0cede2e782ad4e1faa2fa5/cucco-1.1.0.tar.gz"
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "14186a21719ec2becdec268f28daf5aa",
          "sha256": "4cbb7eab52f6ddfc711cc01cee6ae9e799fd6685112be7cd396691c93a57d231"
        },
        "downloads": 0,
        "filename": "cucco-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "14186a21719ec2becdec268f28daf5aa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 50949,
        "upload_time": "2017-06-04T14:30:28",
        "url": "https://files.pythonhosted.org/packages/80/41/ec90796c2b7083bbc0bee02c83384f9ca1699526887b0f3aa556563fdee8/cucco-2.0.0.tar.gz"
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d4ed7937b5c903b62b03f1026dc25171",
          "sha256": "3b6425e92c881b9c70dfba8ca83b9a9479b29a1f8126379761f2c1e9a9bab3a2"
        },
        "downloads": 0,
        "filename": "cucco-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d4ed7937b5c903b62b03f1026dc25171",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 51239,
        "upload_time": "2017-06-09T22:21:15",
        "url": "https://files.pythonhosted.org/packages/cd/b4/82776e68c8e2e21f14c87bf8f3003a174049eeb616160e9e2b08d223fca3/cucco-2.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d4ed7937b5c903b62b03f1026dc25171",
        "sha256": "3b6425e92c881b9c70dfba8ca83b9a9479b29a1f8126379761f2c1e9a9bab3a2"
      },
      "downloads": 0,
      "filename": "cucco-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d4ed7937b5c903b62b03f1026dc25171",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 51239,
      "upload_time": "2017-06-09T22:21:15",
      "url": "https://files.pythonhosted.org/packages/cd/b4/82776e68c8e2e21f14c87bf8f3003a174049eeb616160e9e2b08d223fca3/cucco-2.1.0.tar.gz"
    }
  ]
}