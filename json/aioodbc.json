{
  "info": {
    "author": "Nikolay Novik",
    "author_email": "nickolainovik@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Topic :: Database",
      "Topic :: Database :: Front-Ends"
    ],
    "description": "aioodbc\n=======\n.. image:: https://travis-ci.org/aio-libs/aioodbc.svg?branch=master\n    :target: https://travis-ci.org/aio-libs/aioodbc\n.. image:: https://coveralls.io/repos/aio-libs/aioodbc/badge.svg?branch=master&service=github\n    :target: https://coveralls.io/github/aio-libs/aioodbc?branch=master\n\n**aioodbc** is Python 3.5+ module that makes possible accessing ODBC_ databases\nwith asyncio_. It is rely on awesome pyodbc_ library, preserve same look and\nfeel. *aioodbc* was written `async/await` syntax (PEP492_) thus not\ncompatible with Python older then 3.5. Internally *aioodbc* employ threads\nto avoid blocking the event loop, btw threads_ are not that bad as you think,\nother drivers like motor_ use same approach.\n\n**aioodbc** fully compatible and tested with uvloop_. Take a look on a test\nsuite, all tests are executed with both: default and uvloop_.\n\nSupported Databases\n-------------------\n\n**aioodbc** should work with all databases supported by pyodbc_. But for now\nlibrary have been tested with: **SQLite**, **MySQL** and **PostgreSQL**. Feel\nfree to add other databases to the test suite by submitting PR.\n\n\nCommunity\n---------\nMailing List: https://groups.google.com/forum/#!forum/aio-libs\n\nChat room: https://gitter.im/aio-libs/Lobby\n\n\nBasic Example\n-------------\n\n**aioodbc** based on pyodbc_ , and provides same api, you just need\nto use  ``yield from conn.f()`` or ``await conn.f()`` instead of just\ncall ``conn.f()`` for every method.\n\nProperties are unchanged, so ``conn.prop`` is correct as well as\n``conn.prop = val``.\n\n\n.. code:: python\n\n    import asyncio\n    import aioodbc\n\n\n    loop = asyncio.get_event_loop()\n\n\n    async def test_example():\n        dsn = 'Driver=SQLite;Database=sqlite.db'\n        conn = await aioodbc.connect(dsn=dsn, loop=loop)\n\n        cur = await conn.cursor()\n        await cur.execute(\"SELECT 42;\")\n        r = await cur.fetchall()\n        print(r)\n        await cur.close()\n        await conn.close()\n\n    loop.run_until_complete(test_example())\n\n\nConnection Pool\n---------------\nConnection pooling ported from aiopg_ and rely on PEP492_ features:\n\n.. code:: python\n\n    import asyncio\n    import aioodbc\n\n\n    loop = asyncio.get_event_loop()\n\n\n    async def test_pool():\n        dsn = 'Driver=SQLite;Database=sqlite.db'\n        pool = await aioodbc.create_pool(dsn=dsn, loop=loop)\n\n        async with pool.acquire() as conn:\n            cur = await conn.cursor()\n            await cur.execute(\"SELECT 42;\")\n            r = await cur.fetchall()\n            print(r)\n            await cur.close()\n            await conn.close()\n        pool.close()\n        await pool.wait_closed()\n\n    loop.run_until_complete(test_example())\n\n\nContext Managers\n----------------\n`Pool`, `Connection` and `Cursor` objects support context manager\nprotocol:\n\n.. code:: python\n\n    import asyncio\n    import aioodbc\n\n\n    loop = asyncio.get_event_loop()\n\n\n    async def test_example():\n        dsn = 'Driver=SQLite;Database=sqlite.db'\n\n        async with aioodbc.create_pool(dsn=dsn, loop=loop) as pool:\n            async with pool.acquire() as conn:\n                async with conn.cursor() as cur:\n                    await cur.execute('SELECT 42;')\n                    val = await cur.fetchone()\n                    print(val)\n\n    loop.run_until_complete(test_example())\n\n\nInstallation\n------------\n\nIn Linux environment pyodbc_ (hence *aioodbc*) requires unixODBC_ library.\nYou can install it using package manager from your OS distribution, for example::\n\n      $ sudo apt-get install unixodbc\n      $ sudo apt-get install unixodbc-dev\n\nthen::\n\n   pip install aioodbc\n\n\nRun tests\n---------\n\nFor testing purposes you need to install docker_ and development\nrequirements::\n\n    $ pip install -r requirements-dev.txt\n\nIn order to simplify development all tests and environment created inside\nseparate docker image, you do not need to install any database of system level\nlibraries, everything happens automatically inside container.\n\nThen just execute::\n\n    $ make docker_build\n    $ make docker_test\n\nTest will automatically pull images and build containers with\nrequired databases.\n\n\nOther SQL Drivers\n-----------------\n\n* aiopg_ - asyncio client for PostgreSQL\n* aiomysql_ - asyncio client form MySQL\n\n\nRequirements\n------------\n\n* Python_ 3.5+\n* pyodbc_\n* uvloop_ (optional)\n\n\n.. _Python: https://www.python.org\n.. _asyncio: http://docs.python.org/3.4/library/asyncio.html\n.. _pyodbc: https://github.com/mkleehammer/pyodbc\n.. _uvloop: https://github.com/MagicStack/uvloop\n.. _ODBC: https://en.wikipedia.org/wiki/Open_Database_Connectivity\n.. _aiopg: https://github.com/aio-libs/aiopg\n.. _aiomysql: https://github.com/aio-libs/aiomysql\n.. _PEP492: https://www.python.org/dev/peps/pep-0492/\n.. _unixODBC: http://www.unixodbc.org/\n.. _threads: http://techspot.zzzeek.org/2015/02/15/asynchronous-python-and-databases/\n.. _docker: https://docs.docker.com/engine/installation/\n.. _motor: https://emptysqua.re/blog/motor-0-7-beta/\n\nChanges\n-------\n0.1.0 (2017-04-30)\n^^^^^^^^^^^^^^^^^^\n* Fixed project version\n\n\n0.0.4 (2017-04-30)\n^^^^^^^^^^^^^^^^^^\n* Improved mysql testing\n\n\n0.0.3 (2016-07-05)\n^^^^^^^^^^^^^^^^^^\n* Dockerize tests, now we can add more DBs to tests using docker #15, #17, #19\n\n* Test suite executed with both default asyncio and uvloop #18\n\n\n0.0.2 (2016-01-01)\n^^^^^^^^^^^^^^^^^^\n* Improved pep 492 support.\n\n* pool.get method removed, use acquire instead.\n\n* Added tests against MySQL.\n\n* Added bunch of doc strings.\n\n\n0.0.1 (2015-10-12)\n^^^^^^^^^^^^^^^^^^\n\n* Initial release.",
    "docs_url": null,
    "download_url": "https://pypi.python.org/pypi/aioodbc",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/aio-libs/aioodbc",
    "keywords": "",
    "license": "Apache 2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aioodbc",
    "platform": "POSIX",
    "project_url": "https://pypi.org/project/aioodbc/",
    "release_url": "https://pypi.org/project/aioodbc/0.1.0/",
    "requires_python": "",
    "summary": "ODBC driver for asyncio.",
    "version": "0.1.0"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8e13d4a7158011c3dd6dbee6bdb002fc",
          "sha256": "837816d9646dd381915eaa339e27389fc4c3df4d546f0790b8d786ea37713b75"
        },
        "downloads": 1188,
        "filename": "aioodbc-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8e13d4a7158011c3dd6dbee6bdb002fc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17833,
        "upload_time": "2015-10-12T18:40:21",
        "url": "https://files.pythonhosted.org/packages/1c/b9/ace10eefe306eb25265189110b02d54bf9a397d2c9e472443fa23e569ee1/aioodbc-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c6f87ffcc3cdb0ddf2f5b581bab752fb",
          "sha256": "983a698e3a600f147ec68e77f41015e04a649565d2fa09e9707691e129f309aa"
        },
        "downloads": 505,
        "filename": "aioodbc-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c6f87ffcc3cdb0ddf2f5b581bab752fb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21032,
        "upload_time": "2016-01-01T11:00:53",
        "url": "https://files.pythonhosted.org/packages/57/25/c8ba50db50ba532e554534bfd8f8f2ac639cb52056597af4a316d7a57853/aioodbc-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f6120baeee36f86835c4a5f070bedc1a",
          "sha256": "f4a2e123c066f3d95922982349e9c6dfe169f87cd72689482e27c4cfbe6585a0"
        },
        "downloads": 349,
        "filename": "aioodbc-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f6120baeee36f86835c4a5f070bedc1a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16808,
        "upload_time": "2016-07-05T21:03:55",
        "url": "https://files.pythonhosted.org/packages/4b/ca/c7c9ff5b0153b8e41631dac37ecda641eb866a0a132f13709ae06cbd37e4/aioodbc-0.0.3.tar.gz"
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e42364ef8a967b04c45dfa7d1af155b5",
          "sha256": "898aa8299a12ae96f6ba8c2ae47c4b138cd95b66ab2f5d9170a2a3d3b183ce87"
        },
        "downloads": 0,
        "filename": "aioodbc-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e42364ef8a967b04c45dfa7d1af155b5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17297,
        "upload_time": "2017-04-30T19:09:43",
        "url": "https://files.pythonhosted.org/packages/9b/4a/dc87d3a051691accac50f22782bf1ab9dcd310f50c58118804e2ada24716/aioodbc-0.1.0.tar.gz"
      }
    ],
    "0.1.0a0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7582bcb70ed238a044bb64d81c514eae",
          "sha256": "88eba5012acbaeca4d8618f22c2ce5c7d412b9d254777ef5ee29007fdaed3546"
        },
        "downloads": 0,
        "filename": "aioodbc-0.1.0a0.tar.gz",
        "has_sig": false,
        "md5_digest": "7582bcb70ed238a044bb64d81c514eae",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17254,
        "upload_time": "2017-04-30T18:55:18",
        "url": "https://files.pythonhosted.org/packages/1e/7d/33d829151bc2fe124a422ce0eda861adfb9733728edb5308606f5cc36642/aioodbc-0.1.0a0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e42364ef8a967b04c45dfa7d1af155b5",
        "sha256": "898aa8299a12ae96f6ba8c2ae47c4b138cd95b66ab2f5d9170a2a3d3b183ce87"
      },
      "downloads": 0,
      "filename": "aioodbc-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e42364ef8a967b04c45dfa7d1af155b5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 17297,
      "upload_time": "2017-04-30T19:09:43",
      "url": "https://files.pythonhosted.org/packages/9b/4a/dc87d3a051691accac50f22782bf1ab9dcd310f50c58118804e2ada24716/aioodbc-0.1.0.tar.gz"
    }
  ]
}