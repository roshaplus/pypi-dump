{
  "info": {
    "author": "Thautwarm",
    "author_email": "twshere@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "\n\n# Incantation \n\n\nSee [codes in Here](https://github.com/thautwarm/Incantation/tree/master/incantation)\n\nThis library is written by `flowpython`(so it just support Python 3.6.x now...), which makes the codes much more readable.\n\n## A Simple Guide\n\nFirstly, import some modules, you can find out what they are at [Materialize-CSS](http://materializecss.com/)\n```python\nfrom incantation.Module.CSS.Grid import container, col, row, grid, section\nfrom incantation.Module.CSS.Color import Indigo \nfrom incantation.Module.CSS.Helpers import align, left_align, right_align, center_align\nfrom incantation.Module.CSS.Media import video_container\nfrom incantation.Module import abst\nfrom incantation.Module import blockquote\nfrom incantation.Module.CSS.Table import table\nfrom incantation.Module.abst import default_conf, gen_helper, Seq\nfrom incantation.template import Page\nfrom incantation.Module.Component.Badges import collections, dropdown, badge, collapsible\nfrom incantation.Module.Component.Icons import icon\nfrom incantation.Module.Component.Button import FAB, raised\nfrom incantation.Module.Component.Form import form, input_field\nfrom incantation.Module.Component.Navbar import navbar\n\n```\n\nThen create a HTML page(it wll be automatically rendered by materialize-css).\n\n```python\n# create a container\nmain  = container()\n\n# create a navbar. See more at http://materializecss.com/navbar.html.\nnav = navbar(\n       [dict(href = 'https://baidu.com',  name = 'link1'),\n        dict(href = 'https://google.com', name = 'link2')\n       ],\n       href = 'https://github.com/thautwarm', \n       name = 'Logo'\n       )\n\n# create collections. See more at http://materializecss.com/badges.html.\ncs = collections([badge(new = False,href = '#!', num = 1, name = 'Alan'),\n                  badge(new = True, href = '#!', num = 4, name = 'Alan'),\n                  badge(href = '#!', name = 'Alan'),\n                  badge(new = False,href = '#!', num = 14,name = 'Alan')\n                                ],\n                                )\n\n# create a dropdown. See more at http://materializecss.com/badges.html.\ndd = dropdown([badge(new = False,href = '#!', num = 1, name = 'Alan'),\n               badge(new = True, href = '#!', num = 4, name = 'Alan'),\n               badge(href = '#!', name = 'Alan'),\n               badge(new = False,href = '#!', num = 14,name = 'Alan')\n                                ],\n               name = 'a dropdown list', id = 'someid')\n\n# create a collapsible. See more at http://materializecss.com/badges.html.\ncollap = collapsible([(icon('filter_drama'),badge(href = '#!', name = \"First\") , \"<p>Lorem ipsum dolor sit amet.</p>\"),\n                      (icon('place'),       badge(href = '#!', name = \"Second\"), \"place\")\n                     ])\n\n# create 2 rows. See more at See http://materializecss.com/grid.html.\na_col = col(\"contents\", grid(s=6) )\na_row = row(Seq(a_col, a_col), name = \"test_row\")\nb_row = row(Seq(col(cs, grid(s=6)), col(cs, grid(s=6).loffset(s=0, m =6, l=8))))\ncenter_align(a_row)\n\n# create a table. See more at http://materializecss.com/table.html\na_table = table(\n        [\"name\", \"email\", \"phone number\"],\n        [\n         [\"thautwarm\", \"twshere@outlook.com\", None],\n         [\"person1\"  , \"email1\"             ,\"phone1\"], \n         [\"deep\"     , \"dark\"               ,\"fantasy\"],\n         [\"Ass\"      , \"Tol\"                ,\"Fo\"]\n        ],\n        action = \"somescirpt\"\n        ) \n\ntry_columns = blockquote(\"Columns\")\ntry_table   = blockquote(\"Tables\") \n\n# create a fixed action button. See more at http://materializecss.com/buttons.html.\nfab = FAB([dict(color = 'red',  icon = icon(\"insert_chart\"),  href = 'https://www.baidu.com'),\n           dict(color = 'blue', icon = icon(\"publish\"),       href = 'https://www.google.com'),\n          ], loc = 'fixed', color = 'purple', icon = icon(\"publish\"))\n\n# create a form. See more at http://materializecss.com/forms.html.\na_form = form(\n            Seq(\n            input_field(grid(s=12), field_name = 'Username', type = 'text',     icon = icon('mode_edit'), id = 'for-username'),\n            input_field(grid(s=12), field_name = 'Password', type = 'password', icon = icon('brightness_auto'),   id = 'for-password'),\n            input_field(grid(s=12), field_name = 'School',   type = 'text',     icon = icon('brightness_3'),   id = 'for-school'),\n            input_field(grid(s=12), field_name = 'submit',   type = 'submit',   icon = icon('publish'),   id = 'for-submit')->> right_align,\n            ),\n            action = 'script',\n            method = 'POST')\n            \n# let container contain a sequence of Incantation objects.\nmain.contains(Seq(try_columns, \n                  a_row, \n                  col(dd, grid(l = 12)),\n                  collap, \n                  b_row, \n                  try_table, \n                  a_table, \n                  cs, \n                  fab, \n                  raised(icon = icon('add_alarm'), name = \"YHZ\", href = 'https://www.baidu.com'),\n                  a_form\n                  ))\n# set indent recursively\nmain.setIndent(1)\n\n# create a page and write it to some path.\npage = Page( Seq(nav,main) )\npage.write(to = './test.html')\n\n```\n\nSee `test.html`\n![rendered-1](https://github.com/thautwarm/Incantation/raw/master/test/test-p1.png)\n![rendered-2](https://github.com/thautwarm/Incantation/raw/master/test/test-p2.png)\n![rendered-3](https://github.com/thautwarm/Incantation/raw/master/test/test-p3.png)",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/thautwarm/Incantation",
    "keywords": "website",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Incantation",
    "platform": "windows",
    "project_url": "https://pypi.org/project/Incantation/",
    "release_url": "https://pypi.org/project/Incantation/0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Python Object Design about Website. Make Developing websites like saying incantations.",
    "version": "0.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "878b90eb7750350d655769faab19cacb",
          "sha256": "3856886449c818fe2ecbb86413ebedd1b163ea88847def0401f3aeefe1b3a943"
        },
        "downloads": 0,
        "filename": "Incantation-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "878b90eb7750350d655769faab19cacb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1002458,
        "upload_time": "2017-09-01T09:04:34",
        "url": "https://files.pythonhosted.org/packages/4b/8d/11dd54f96bf4c649c700794df4d8a89495f4efd8ad6f6f09b04cd68ce906/Incantation-0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "878b90eb7750350d655769faab19cacb",
        "sha256": "3856886449c818fe2ecbb86413ebedd1b163ea88847def0401f3aeefe1b3a943"
      },
      "downloads": 0,
      "filename": "Incantation-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "878b90eb7750350d655769faab19cacb",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 1002458,
      "upload_time": "2017-09-01T09:04:34",
      "url": "https://files.pythonhosted.org/packages/4b/8d/11dd54f96bf4c649c700794df4d8a89495f4efd8ad6f6f09b04cd68ce906/Incantation-0.1.tar.gz"
    }
  ]
}