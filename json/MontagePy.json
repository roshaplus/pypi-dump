{
  "info": {
    "author": "John Good",
    "author_email": "jcg@ipac.caltech.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\n=========\nMontagePy\n=========\n\nMontage is a toolkit for mosaicking and visualizing astronomical images.\nIt contains dozens of routines for reprojecting FITS images and datacubes,\nmatching backgrounds for a collection of reprojected images, coadding with\nproper attention to weighting, and visualizing the results with a variety\nof overlays (source catalogs, image set metadata, coordinate grids).\n\nAll standard projections are available, plus a couple of specialized ones\n(HEALPix and WWT TOAST).  Focal plane distortion models are also supported\nusing the SAO WCS library.\n\n\nReprojecting\n============\nDifferent use cases are best served with customized approached to \nimage reprojection and Montage has four:\n\n* mProject, which handles all projections and is reliably flux conserving.\n  While the most flexible, it is also the slowest.\n\n* mProjectPP, which is also flux conserving and much faster but only\n  supports a few (tangent plane) projections.  However, since TAN is \n  by far the most commonly-used projection, it is commonly used.\n\n* mProjectQL is not 100% flux conserving but the fastest of the three.\n  It supports all projections and the algorithm is similar the that\n  used by the SWARP package.  While not flux conserving in theory, \n  all tests so far have found it's output to be indistinguishable from\n  the above routines.\n\n* mProjectCube is a variant of mProject extended and optimized for \n  image cubes (images with a third/fourth dimension).\n\n\nBackground Matching\n===================\nMontage relies on image data having been taken with overlaps between\nthe individual images for matching backgrounds.  The image-image \ndifferences are individually computed and fit (to get offset levels\nand optionally slopes), then a global relaxation technique is used to\ndetermine the best individual image offsets to apply to minimize the\noverall differences.\n\nVarious instrumental and observing anomolies (like persistence issues\nand transient airglow) in the individual images can compromise this\nprocess but it will still produce the best model available without\nthose artifacts being removed beforehand.\n\n\nCoaddition into Final Mosaic\n============================\nAll through the reprojection and correction process, individual \npixel weights are maintained.  This incudes any input weighting that\nmay have been given (the reprojection algorithms support this) and \nkeeping track of fractional pixel effects around the image edges and\nany \"holes\" in the images.\n\nThe final coaddition takes this weighting into account when coadding\nand the coadding process can take different forms (sum, average,\nmid-average or even just count), though the default is a simple \naveraging in the normal case where the image data represents flux \ndensity.\n\n\nVisualization\n=============\nThe main Montage visualization routine (mViewer) can produce PNG or\nJPEG images of either a single image (grayscale or psuedo-color) or\nthree image (red, green, blue) plus any number of overlays.\n\nSome ancillary Montage tools often used with mViewer include:\n\n* mSubimage, to cut out regions of a FITS image, either based on\n  sky location or pixel range.\n\n* mShrink, to shrink (or expand) a FITS image through (fractional)\n  pixel replication.\n\n* mHistogram, which can pre-generate a histogram used by mViewer.\n  mViewer can generate the same histogram on the fly for a single\n  image but with mHistogram the same stretch can be applied to a\n  set of images (e.g. tiles for display).\n\n\nAncillary Tools\n===============\nThere are a number of other support tools, mainly reflecting issues\nthat arose in the course of working with image sets:\n\n* mImgtbl, which scans directories/trees for FITS images with \n  WCS in the header.  Most commonly used on a structured collection\n  in a single subdirectory as part of the above processing.\n\n* mGetHdr/mPutHdr, for fixing errant FIT headers.  mGetHdr pulls \n  the entire FITS header out into an editable text files, then\n  mPutHdr can be used to create a new image from the old using\n  the edited text as a replacement header.\n\n* mFixNaN.  There is a lot of data where pixels that should be \n  \"blank\" (i.e. floating point NaN values) are stored as some \n  other value (frequently zero).  This routine can be used to \n  fix that.\n\n* Executives: Several steps in the mosaicking process involves \n  looping over an image list (reprojection, background analysis\n  and background correction).  Montage contains executive processes\n  (e.g. mProjExec) to simplify the process.\n\nAnd there is a growing list of other such routines.\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Caltech-IPAC/Montage",
    "keywords": "astronomy astronomical image reprojection mosaic visualization",
    "license": "LICENSE.txt",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MontagePy",
    "platform": "",
    "project_url": "https://pypi.org/project/MontagePy/",
    "release_url": "https://pypi.org/project/MontagePy/0.9.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Montage toolkit for reprojecting, mosaicking, and displaying astronomical images.",
    "version": "0.9.1"
  },
  "releases": {
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1e94256955606eb7b788d50c49426365",
          "sha256": "b472ac5d7e4e57ba44a739ae4b234b5b0592a743d716b3b0a33642925ff1b3d3"
        },
        "downloads": -1,
        "filename": "MontagePy-0.9-cp27-cp27m-macosx_10_6_x86_64.whl",
        "has_sig": false,
        "md5_digest": "1e94256955606eb7b788d50c49426365",
        "packagetype": "bdist_wheel",
        "python_version": "cp27",
        "size": 1480843,
        "upload_time": "2017-11-23T16:57:49",
        "url": "https://files.pythonhosted.org/packages/21/5d/660bfa9f25d7bed9b2e8b6c1b6d03808ba2b93a1c1050ccf5331560d3dd2/MontagePy-0.9-cp27-cp27m-macosx_10_6_x86_64.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ada2181bb12583fdc977f7292def6af1",
          "sha256": "86847eb8515633f306c0b5c1b56f5069b5096f5f14edfadf7e97f906d36b8430"
        },
        "downloads": -1,
        "filename": "MontagePy-0.9-cp27-cp27m-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "ada2181bb12583fdc977f7292def6af1",
        "packagetype": "bdist_wheel",
        "python_version": "cp27",
        "size": 5040318,
        "upload_time": "2017-11-23T16:58:18",
        "url": "https://files.pythonhosted.org/packages/93/8c/863ff5455150b8ea9f4427d43f467aa2e752fedca3ae547dba9cd4a0115a/MontagePy-0.9-cp27-cp27m-manylinux1_x86_64.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "05cbfb0b7c267408ba0e90e8f9daf454",
          "sha256": "cfe5e004d569936015fd6c88bcf918b73d6aa1aa5d5f961d09afc9862b0c6f55"
        },
        "downloads": -1,
        "filename": "MontagePy-0.9-cp36-cp36m-macosx_10_6_intel.whl",
        "has_sig": false,
        "md5_digest": "05cbfb0b7c267408ba0e90e8f9daf454",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "size": 1784075,
        "upload_time": "2017-11-23T16:58:06",
        "url": "https://files.pythonhosted.org/packages/4f/23/abb1b2fedf70e0b2917e190521390eec3a36bdf1738fcf100a067a5247a1/MontagePy-0.9-cp36-cp36m-macosx_10_6_intel.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "13ee98c3bbd2f1a87491a63edd38f2e9",
          "sha256": "3f2dcc1e41c99104003902cc37de2c00f7b718f55b44cc459707bf8db2a9b5aa"
        },
        "downloads": -1,
        "filename": "MontagePy-0.9-cp36-cp36m-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "13ee98c3bbd2f1a87491a63edd38f2e9",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "size": 5089149,
        "upload_time": "2017-11-23T16:58:33",
        "url": "https://files.pythonhosted.org/packages/31/60/6756f5f492b7b838ae457aa1e0a32c5740e55c2d6fe1cfa13201a0c2d830/MontagePy-0.9-cp36-cp36m-manylinux1_x86_64.whl"
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a1d9b901610302fe7f28bdf314f590ef",
          "sha256": "44fd2e97a58949b363d755594859118bedf6d8ffbbb7378eacd3460ae3df78eb"
        },
        "downloads": -1,
        "filename": "MontagePy-0.9.1-cp36-cp36m-macosx_10_6_intel.whl",
        "has_sig": false,
        "md5_digest": "a1d9b901610302fe7f28bdf314f590ef",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "size": 2039038,
        "upload_time": "2017-11-25T16:15:56",
        "url": "https://files.pythonhosted.org/packages/b5/d4/884e1d0fc7b13e1362e57159dbee5b32f5842e329fc9775054bedc2025eb/MontagePy-0.9.1-cp36-cp36m-macosx_10_6_intel.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a1d9b901610302fe7f28bdf314f590ef",
        "sha256": "44fd2e97a58949b363d755594859118bedf6d8ffbbb7378eacd3460ae3df78eb"
      },
      "downloads": -1,
      "filename": "MontagePy-0.9.1-cp36-cp36m-macosx_10_6_intel.whl",
      "has_sig": false,
      "md5_digest": "a1d9b901610302fe7f28bdf314f590ef",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "size": 2039038,
      "upload_time": "2017-11-25T16:15:56",
      "url": "https://files.pythonhosted.org/packages/b5/d4/884e1d0fc7b13e1362e57159dbee5b32f5842e329fc9775054bedc2025eb/MontagePy-0.9.1-cp36-cp36m-macosx_10_6_intel.whl"
    }
  ]
}