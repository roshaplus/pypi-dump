{
  "info": {
    "author": "Ashley Sommer",
    "author_email": "ashleysommer@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "#Sanic-Dispatcher\n###A Dispatcher extension for Sanic that also acts as a Sanic-to-WSGI adapter \n#\nAllows you to do this: *(seriously)*\n```python\nfrom sanic import Sanic, response\nfrom sanic_dispatcher import SanicDispatcherMiddlewareController\nfrom flask import Flask, make_response, current_app as flask_app\n\napp = Sanic(__name__)\n\ndispatcher = SanicDispatcherMiddlewareController(app)\n\nchild_sanic_app = Sanic(\"MyChildSanicApp\")\n\nchild_flask_app = Flask(\"MyChildFlaskApp\")\n\n@app.middleware(\"response\")\nasync def modify_response(request, response):\n    response.body = response.body + b\"\\nModified by Sanic Response middleware!\"\n    response.headers['Content-Length'] = len(response.body)\n    return response\n\n@app.route(\"/\")\nasync def index(request):\n    return response.text(\"Hello World from {}\".format(request.app.name))\n\n@child_sanic_app.route(\"/\")\nasync def index(request):\n    return response.text(\"Hello World from {}\".format(request.app.name))\n\n@child_flask_app.route(\"/\")\ndef index():\n    app = flask_app\n    return make_response(\"Hello World from {}\".format(app.import_name))\n\ndispatcher.register_sanic_application(child_sanic_app, '/sanicchild', apply_middleware=True)\ndispatcher.register_wsgi_application(child_flask_app.wsgi_app, '/flaskchild', apply_middleware=True)\n\nif __name__ == \"__main__\":\n    app.run(port=8001, debug=True)\n```\n#\n##How To Use\nFirst make a Sanic application the way you normally do:\n```python\nfrom sanic import Sanic\n\napp = Sanic(__name__) # This creates a sanic app\n```\n`app` becomes your 'base' or 'parent' sanic app which will accommodate the Dispatcher extension\n\nCreate a Dispatcher\n```python\nfrom sanic_dispatcher import SanicDispatcherMiddlewareController\n\ndispatcher = SanicDispatcherMiddlewareController(app)\n```\n`dispatcher` is your new dispatcher controller.\n*Note: This takes a reference to `app` as its first parameter, but it does not consume `app`, nor does it return `app`.*\n\n**I want to dispatch another Sanic App**\n```python\napp = Sanic(__name__)\n\ndispatcher = SanicDispatcherMiddlewareController(app)\n\notherapp = Sanic(\"MyChildApp\")\n\ndispatcher.register_sanic_application(otherapp, \"/childprefix\")\n\n@otherapp.route('/')\nasync def index(request):\n    return response.text(\"Hello World from Child App\")\n```\nBrowsing to url `/childprefix/` will invoke the `otherapp` App, and call the `/` route which displays \"Hello World from Child App\"\n\n**What if the other App is a Flask App?**\n```python\nfrom flask import Flask, make_response\n\napp = Sanic(__name__)\n\ndispatcher = SanicDispatcherMiddlewareController(app)\nflaskapp = Flask(\"MyFlaskApp\")\n\n# register the wsgi_app method from the flask app into the dispatcher\ndispatcher.register_wsgi_application(flaskapp.wsgi_app, \"/flaskprefix\")\n\n@flaskapp.route('/')\ndef index():\n    return make_response(\"Hello World from Flask App\")\n```\nBrowsing to url `/flaskprefix/` will invoke the Flask App, and call the `/` route which displays \"Hello World from Flask App\"\n\n**What if the other App is a Django App?**\n```python\nimport my_django_app\n\napp = Sanic(__name__)\n\ndispatcher = SanicDispatcherMiddlewareController(app)\n# register the django wsgi application into the dispatcher\ndispatcher.register_wsgi_application(my_django_app.wsgi.application,\n                                     \"/djangoprefix\")\n```\nBrowsing to url `/djangoprefix/` will invoke the Django App.\n\n**Can I run a default application?**\n\nThe Sanic App `app` you create at the start is also the default app.\n\nWhen you navigate to a URL that does not match a registered dispatch prefix, this Sanic app will handle the request itself as per normal.\n```python\napp = Sanic(__name__)\n\ndispatcher = SanicDispatcherMiddlewareController(app)\n\notherapp = Sanic(\"MyChildApp\")\n\ndispatcher.register_sanic_application(otherapp, \"/childprefix\")\n\n@app.route('/')\nasync def index(request):\n    return response.text(\"Hello World from Default App\")\n\n@otherapp.route('/')\nasync def index(request):\n    return response.text(\"Hello World from Child App\")\n```\nBrowsing to url `/` will *not* invoke any Dispatcher applications, so `app` will handle the request itself, resolving the `/` route which displays \"Hello World from Default App\"\n\n**I want to apply common middleware to the registered applications!**\n\nEasy!\n```python\nimport my_django_app\nfrom flask import Flask, make_response, current_app\n\napp = Sanic(__name__)\n\ndispatcher = SanicDispatcherMiddlewareController(app)\n\nchild_sanic_app = Sanic(\"MyChildSanicApp\")\n\nchild_flask_app = Flask(\"MyChildFlaskApp\")\n\n@app.middleware(\"request\")\nasync def modify_request(request):\n    request.headers['Content-Type'] = \"text/plain\"\n\n@app.middleware(\"response\")\nasync def modify_response(request, response):\n    response.body = response.body + b\"\\nModified by Sanic Response middleware!\"\n    response.headers['Content-Length'] = len(response.body)\n    return response\n\n@app.route(\"/\")\nasync def index(request):\n    return response.text(\"Hello World from {}\".format(request.app.name))\n\n@child_sanic_app.route(\"/\")\nasync def index(request):\n    return response.text(\"Hello World from {}\".format(request.app.name))\n\n@child_flask_app.route(\"/\")\ndef index():\n    app = current_app\n    return make_response(\"Hello World from {}\".format(app.import_name))\n\ndispatcher.register_sanic_application(child_sanic_app,\n                                      '/childprefix', apply_middleware=True)\ndispatcher.register_wsgi_application(my_django_app.wsgi.application,\n                                     '/djangoprefix', apply_middleware=True)\ndispatcher.register_wsgi_application(child_flask_app.wsgi_app,\n                                     '/flaskprefix', apply_middleware=True)\n```\nThe key here is passing `apply_middleware=True` to the relevant register application function. By default `apply_middleware` is set to `False` for all registered dispatcher applications.\n\nIn this example the Sanic Request Middleware `modify_request` will be applied to ALL requests, including those handled by applications registered on the dispatcher. The request middleware will be applied to the `request` *before* it is passed to any registered applications.\n\nIn this example the Sanic Response Middleware `modify_response` will be applied to ALL responses, including those which were generated by applications registered on the dispatcher. The response middleware will be applied to the `response` *after* it is processed by the registered application.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ashleysommer/sanic-dispatcher",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Sanic-Dispatcher",
    "platform": "any",
    "project_url": "https://pypi.org/project/Sanic-Dispatcher/",
    "release_url": "https://pypi.org/project/Sanic-Dispatcher/0.5.2.1/",
    "requires_python": "",
    "summary": "Multi-application dispatcher based on DispatcherMiddleware from the Werkzeug Project.",
    "version": "0.5.2.1"
  },
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1a4708447230c3136d21faff97191232",
          "sha256": "83f8e574fb1806ee79cc261caf585f318392168fb06866d525b52946a0d837d3"
        },
        "downloads": 0,
        "filename": "Sanic_Dispatcher-0.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a4708447230c3136d21faff97191232",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 8949,
        "upload_time": "2017-04-12T01:40:45",
        "url": "https://files.pythonhosted.org/packages/32/4b/4e03b0865cbd10a3922908bb134aa5e716214daaf21bb9560dd6fc414d86/Sanic_Dispatcher-0.5.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9234d2419af559efc977d72d04fb510c",
          "sha256": "2353927af4b5824f9b5c8732432d0c0aa27b8db3b928dcbc410e06f116dc22c8"
        },
        "downloads": 0,
        "filename": "Sanic_Dispatcher-0.5.0-py3.5.egg",
        "has_sig": false,
        "md5_digest": "9234d2419af559efc977d72d04fb510c",
        "packagetype": "bdist_egg",
        "python_version": "3.5",
        "size": 11217,
        "upload_time": "2017-04-12T01:40:48",
        "url": "https://files.pythonhosted.org/packages/58/a9/f9fdc22a14a4ea1ed0805955212767b3976f88848e95096fa21f3cc4aa22/Sanic_Dispatcher-0.5.0-py3.5.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0e9269a13acc6e92b683f8ea306da4a1",
          "sha256": "304903907facd752998fcbcc780c609f2725bb4ef33ef7f731bf4731fbea08c0"
        },
        "downloads": 0,
        "filename": "Sanic-Dispatcher-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0e9269a13acc6e92b683f8ea306da4a1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5697,
        "upload_time": "2017-04-12T01:40:46",
        "url": "https://files.pythonhosted.org/packages/93/16/a1cf6481e1b18c0c081a59b69622743494adcafb4bed990e936c9823c30e/Sanic-Dispatcher-0.5.0.tar.gz"
      }
    ],
    "0.5.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "175a65a83c68ca91eb8ed72d0c90d987",
          "sha256": "704f2079aa0bf8010293e9e0f2b736a93f5562a41bcae6853448605db7faf8f0"
        },
        "downloads": 0,
        "filename": "Sanic_Dispatcher-0.5.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "175a65a83c68ca91eb8ed72d0c90d987",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9495,
        "upload_time": "2017-04-12T05:50:09",
        "url": "https://files.pythonhosted.org/packages/64/5a/eea7e946a74abb42206a8a638a5b5ca550b3e9ffb9dc2621d3d98c1d229f/Sanic_Dispatcher-0.5.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c56102fbb9c28778020db0927cb520c9",
          "sha256": "ef7d243274bad5a28bc42fdf0ccd2d4e3dea157b2c29be474dc9f27a8ece3439"
        },
        "downloads": 0,
        "filename": "Sanic_Dispatcher-0.5.0.1-py3.5.egg",
        "has_sig": false,
        "md5_digest": "c56102fbb9c28778020db0927cb520c9",
        "packagetype": "bdist_egg",
        "python_version": "3.5",
        "size": 12365,
        "upload_time": "2017-04-12T05:50:13",
        "url": "https://files.pythonhosted.org/packages/38/d1/26f96b90d3300ca1587328176184ad91c04365bbdb06970bdf9e0327554e/Sanic_Dispatcher-0.5.0.1-py3.5.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "aa5b4c501d36cf098d3a9e42beea3619",
          "sha256": "47fc60533ad616dab432efc784db5b2227722cb2e55e4a9ee19593cb1d1f4541"
        },
        "downloads": 0,
        "filename": "Sanic-Dispatcher-0.5.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aa5b4c501d36cf098d3a9e42beea3619",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7266,
        "upload_time": "2017-04-12T05:50:11",
        "url": "https://files.pythonhosted.org/packages/3d/f9/b397c6dcaccdea65af14abc6b112513700cff2bd50b85e0bb1bf3b77d1c2/Sanic-Dispatcher-0.5.0.1.tar.gz"
      }
    ],
    "0.5.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0bfce232ba790f25e4ec6329e562e44c",
          "sha256": "5aa1abe5b7bf0cf33c82ff7d7cb286cc47c3079caeb67123c58bfa1a68f95158"
        },
        "downloads": 0,
        "filename": "Sanic_Dispatcher-0.5.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0bfce232ba790f25e4ec6329e562e44c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9495,
        "upload_time": "2017-04-17T23:24:28",
        "url": "https://files.pythonhosted.org/packages/79/ca/13642ca51fbd9d40f4f66bd41a86b6bacb41d63db03803dc3c60485b6fdc/Sanic_Dispatcher-0.5.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9aee19e1f5dbafae5fd2936fba66fe19",
          "sha256": "2bf72ae0c6394829094738e26766c8583c66e183345d14453dfdd84919db76c1"
        },
        "downloads": 0,
        "filename": "Sanic_Dispatcher-0.5.1.0-py3.5.egg",
        "has_sig": false,
        "md5_digest": "9aee19e1f5dbafae5fd2936fba66fe19",
        "packagetype": "bdist_egg",
        "python_version": "3.5",
        "size": 12363,
        "upload_time": "2017-04-17T23:24:32",
        "url": "https://files.pythonhosted.org/packages/3d/39/04d036b7e803c49759e6ce07a2c5173106995ce597b3721cb8b2d9ed65f9/Sanic_Dispatcher-0.5.1.0-py3.5.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "fbebff9ac9cfc0d4ebd2bc24dbec9f98",
          "sha256": "3d87f890ca6128cc825ee7fb8e70866e9d2248498fc39d7ba8c01738e57ebce7"
        },
        "downloads": 0,
        "filename": "Sanic-Dispatcher-0.5.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fbebff9ac9cfc0d4ebd2bc24dbec9f98",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7263,
        "upload_time": "2017-04-17T23:24:30",
        "url": "https://files.pythonhosted.org/packages/24/c1/9995a4850a8616527447354dc30a00ecafb35dbbe1f790c111b20a074ac5/Sanic-Dispatcher-0.5.1.0.tar.gz"
      }
    ],
    "0.5.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a31929231287ecd3f54c079676c6e5e1",
          "sha256": "31df5b8704fb0cf7cadd734f9b42f816733076c615a12d5bfe68dc50eb843de0"
        },
        "downloads": 0,
        "filename": "Sanic_Dispatcher-0.5.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a31929231287ecd3f54c079676c6e5e1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9781,
        "upload_time": "2017-04-28T02:37:44",
        "url": "https://files.pythonhosted.org/packages/39/c9/e96b04fd3961e902a388da7f520e51d9fc5d2878b9cc235d93ee22068a50/Sanic_Dispatcher-0.5.2.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "919400be2a182eff8d9a64a46da5b40c",
          "sha256": "061e3e23b73e93ac929bdc0a045c76b0187bbb481f1df8153f17194faacfb91a"
        },
        "downloads": 0,
        "filename": "Sanic_Dispatcher-0.5.2.0-py3.5.egg",
        "has_sig": false,
        "md5_digest": "919400be2a182eff8d9a64a46da5b40c",
        "packagetype": "bdist_egg",
        "python_version": "3.5",
        "size": 13106,
        "upload_time": "2017-04-28T02:37:48",
        "url": "https://files.pythonhosted.org/packages/94/b8/dcc77619a75e51c4718923b6392384813001bf35bf89320e99dbc4d468e6/Sanic_Dispatcher-0.5.2.0-py3.5.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ba8ab0fcb9fafacd27dd7c403ba47c2a",
          "sha256": "f88fa5d838995ed4c001f650d27615f91e9f604d2863a3159ea89f8b44c0596b"
        },
        "downloads": 0,
        "filename": "Sanic-Dispatcher-0.5.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ba8ab0fcb9fafacd27dd7c403ba47c2a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7686,
        "upload_time": "2017-04-28T02:37:46",
        "url": "https://files.pythonhosted.org/packages/16/80/ba2a7aee6fac2cd067e2d1c156d355be518601350e611a367b8a4453647a/Sanic-Dispatcher-0.5.2.0.tar.gz"
      }
    ],
    "0.5.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9dae77e8511bc9c152fef371b5150e2d",
          "sha256": "b6192efc1e08b98ccc59dc1391f6b0641f80407a0e3365611ef4208febe4342b"
        },
        "downloads": 0,
        "filename": "Sanic_Dispatcher-0.5.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9dae77e8511bc9c152fef371b5150e2d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10121,
        "upload_time": "2017-05-02T07:10:30",
        "url": "https://files.pythonhosted.org/packages/3c/61/331cb724bde8c72172a26cd7d05dd2b77a2fbdf62b58c57a7dc5c2c89035/Sanic_Dispatcher-0.5.2.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1808d1dd56253c3b28980aa99390fe5f",
          "sha256": "e1fb034b697900a427e0abe3d235024b1b8c6995e583590d6d07484190a9f8bf"
        },
        "downloads": 0,
        "filename": "Sanic_Dispatcher-0.5.2.1-py3.5.egg",
        "has_sig": false,
        "md5_digest": "1808d1dd56253c3b28980aa99390fe5f",
        "packagetype": "bdist_egg",
        "python_version": "3.5",
        "size": 13932,
        "upload_time": "2017-05-02T07:10:34",
        "url": "https://files.pythonhosted.org/packages/f8/68/f573ae15aa558bdda4f1487a47deeeebb8cd96e42e6c21a7240bd2845a95/Sanic_Dispatcher-0.5.2.1-py3.5.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4a3ca909aba374c425dd1db124a8741c",
          "sha256": "a9044605936d7b5b9da3345b95472128ef71b3fd3d3b0cec3a619cdf3b3454e3"
        },
        "downloads": 0,
        "filename": "Sanic-Dispatcher-0.5.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4a3ca909aba374c425dd1db124a8741c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8015,
        "upload_time": "2017-05-02T07:10:32",
        "url": "https://files.pythonhosted.org/packages/a9/07/55802d9e2304c13b97dd13b0bc829a92190e786a5d0130485ab897e3262f/Sanic-Dispatcher-0.5.2.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9dae77e8511bc9c152fef371b5150e2d",
        "sha256": "b6192efc1e08b98ccc59dc1391f6b0641f80407a0e3365611ef4208febe4342b"
      },
      "downloads": 0,
      "filename": "Sanic_Dispatcher-0.5.2.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9dae77e8511bc9c152fef371b5150e2d",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 10121,
      "upload_time": "2017-05-02T07:10:30",
      "url": "https://files.pythonhosted.org/packages/3c/61/331cb724bde8c72172a26cd7d05dd2b77a2fbdf62b58c57a7dc5c2c89035/Sanic_Dispatcher-0.5.2.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "1808d1dd56253c3b28980aa99390fe5f",
        "sha256": "e1fb034b697900a427e0abe3d235024b1b8c6995e583590d6d07484190a9f8bf"
      },
      "downloads": 0,
      "filename": "Sanic_Dispatcher-0.5.2.1-py3.5.egg",
      "has_sig": false,
      "md5_digest": "1808d1dd56253c3b28980aa99390fe5f",
      "packagetype": "bdist_egg",
      "python_version": "3.5",
      "size": 13932,
      "upload_time": "2017-05-02T07:10:34",
      "url": "https://files.pythonhosted.org/packages/f8/68/f573ae15aa558bdda4f1487a47deeeebb8cd96e42e6c21a7240bd2845a95/Sanic_Dispatcher-0.5.2.1-py3.5.egg"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "4a3ca909aba374c425dd1db124a8741c",
        "sha256": "a9044605936d7b5b9da3345b95472128ef71b3fd3d3b0cec3a619cdf3b3454e3"
      },
      "downloads": 0,
      "filename": "Sanic-Dispatcher-0.5.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4a3ca909aba374c425dd1db124a8741c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8015,
      "upload_time": "2017-05-02T07:10:32",
      "url": "https://files.pythonhosted.org/packages/a9/07/55802d9e2304c13b97dd13b0bc829a92190e786a5d0130485ab897e3262f/Sanic-Dispatcher-0.5.2.1.tar.gz"
    }
  ]
}