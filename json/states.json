{
  "info": {
    "author": "Lars van Gemerden",
    "author_email": "gemerden@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Topic :: Software Development"
    ],
    "description": ".. figure:: https://travis-ci.org/gemerden/statessvg?branch=master\r\n   :alt: Travis\r\n\r\n   Travis\r\n\r\nstatemachine\r\n============\r\n\r\nEasy to use state machine to manage the state of python objects.\r\n\r\nIntroduction\r\n------------\r\n\r\nThis state machine implementation is developed with the following goals\r\nin mind:\r\n\r\n-  Easy to use API, for configuration of the state machine and\r\n   triggering state transitions,\r\n-  Usable for any (almost, I'm sure) python class with a finite number\r\n   of states,\r\n-  Fully featured, including nested states, conditional transitions,\r\n   shorthand notations, many ways to configure callbacks,\r\n-  Simple state machines do not require advanced knowledge; complexity\r\n   of configuration scales with complexity of requirements,\r\n-  One state machine instance can manage the state of many stateful\r\n   objects; the objects only store their current state string,\r\n-  Reasonably fast.\r\n\r\nCode Example\r\n------------\r\n\r\nHere is a simple statemachine to give some idea of what the\r\nconfiguration looks like.\r\n\r\n.. code:: python\r\n\r\n    class LightSwitch(StatefulObject):\r\n\r\n        machine = state_machine(\r\n            states=[\r\n                {\"name\": \"on\"},\r\n                {\"name\": \"off\"},\r\n            ],\r\n            transitions=[\r\n                {\"old_state\": \"off\", \"new_state\": \"on\", \"triggers\": [\"flick\"]},  \r\n                {\"old_state\": \"on\", \"new_state\": \"off\", \"triggers\": [\"flick\"]},\r\n            ],\r\n        )\r\n\r\n\r\n    lightswitch = LightSwitch(initial=\"off\") \r\n    lightswitch.flick()                  \r\n\r\nLimitations\r\n-----------\r\n\r\nThe state machine module has been tested with python 2.7, if requested I\r\nwill definitely consider python 3 support, depending on time\r\nconstraints.\r\n\r\nDocumentation\r\n-------------\r\n\r\nTo learn more check the extensive\r\n`tutorial <https://github.com/gemerden/statemachine/blob/master/statemachine/docs/tutorial.md>`__.\r\n\r\nConcepts\r\n--------\r\n\r\nThe following basic state machine concepts are used\r\n\r\n-  *state*: state of an stateful object; objects can be in one state at\r\n   the time,\r\n-  *transition*: transition of the object from one state to another\r\n   resulting,\r\n-  *state machine*: system that manages the states of objects according\r\n   to predefined states and transitions,\r\n-  *trigger*: method called on an object that can result in a state\r\n   transition,\r\n-  *callbacks*: functions called on state transitions by the state\r\n   machine,\r\n-  *condition*: conditions for a specific state transition to take\r\n   place.\r\n\r\nFeatures\r\n--------\r\n\r\nThe module has the following basic and some more advanced features:\r\n\r\n-  trigger state transitions by setting trigger name in machine\r\n   configuration:\r\n\r\n   -  same trigger can be set for different transitions,\r\n   -  trigger method can pass arguments to callbacks like ``on_exit``\r\n      and ``on_entry``,\r\n\r\n-  conditions (also callbacks) can be set on states and transitions:\r\n\r\n   -  if a transition is triggered, but the condition is not met, the\r\n      transition does not take place\r\n\r\n-  switched transitions can be used to go from one state to another\r\n   depending on conditions\r\n\r\n   -  trigger can be used for conditional (switched) transition,\r\n   -  to do this, create multiple trasnitions from the same state to\r\n      different states and give them different conditions\r\n\r\n-  state transitions can be started by explicitly setting the state\r\n   (obj.state = \"some\\_state\"):\r\n\r\n   -  if a condition is set and not met on the transition an exception\r\n      is raised, because the callbacks would not be called,\r\n   -  if the callbacks function require extra arguments (apart from the\r\n      state managed object), this method will fail\r\n\r\n-  a number of callbacks can be installed for each state and transition,\r\n   with obj the state managed object and **args, **\\ \\*kwargs the\r\n   arguments passed via the trigger to the callback, in calling order:\r\n\r\n   -  StateMachine.prepare(self, obj. **args, **\\ \\*kwargs),\r\n   -  StateMachine.before\\_any\\_exit(self, obj. **args, **\\ \\*kwargs),\r\n   -  State.on\\_exit(self, obj. **args, **\\ \\*kwargs),\r\n   -  Transition.on\\_transfer(self, obj. **args, **\\ \\*kwargs), # after\r\n      this the state is changed on the object\r\n   -  State.on\\_entry(self, obj. **args, **\\ \\*kwargs),\r\n   -  StateMachine.after\\_any\\_entry(self, obj. **args, **\\ \\*kwargs)\r\n   -  note that if a condition is present and not met, none of these\r\n      functions are called, apart from prepare\r\n\r\n-  callbacks can be methods on the class of which the state is managed\r\n   by the machine:\r\n\r\n   -  This is the case when the calback is configured as a string (e.g.\r\n      \"on\\_entry\": \"do\\_callback\"),\r\n\r\n-  wildcards and listed states can be used to define multiple\r\n   transitions at once:\r\n\r\n   -  e.g. transition {\"old\\_state\": \"\\*\", \"new\\_state\": [\"A\", \"B\"]}\r\n      would create transitions from all states to both state A and B\r\n\r\n-  nested states can be used to better organize states and transitions,\r\n   states can be nested to any depth,\r\n-  context managers can be used to create a context for all callbacks,\r\n-  custom exceptions:\r\n\r\n   -  MachineError: raised in case of a misconfiguration of the state\r\n      machine,\r\n   -  TransitionError: raised in case of e.g. an attempt to trigger a\r\n      non-existing transition,\r\n\r\nRules (for the mathematically minded)\r\n-------------------------------------\r\n\r\nThe state machine in the module has the following rules for setting up\r\nstates and transitions:\r\n\r\n-  notation:\r\n\r\n   -  A, B, C : states of a state managed object (called 'object' from\r\n      now)\r\n   -  A(B, C) : state A with nested states B, C, with \\* indicating that\r\n      B is the default initial state\r\n   -  A.B : sub-state B of A; A.B is called a state path\r\n   -   : transition between state A and state B\r\n   -  : transition from A to B or C, depending on condition functions\r\n      (there is no 'and')\r\n   -  : shorthand for transitions and\r\n   -  : shorthand for all transitions from A to states in the same\r\n      machine\r\n\r\n-  an object cannot just be in state A if A has substates; given state\r\n   A(B, C), the object can be in A.B or A.C, not in A\r\n-  allowed transitions, given states A, B, C(E, F) and D(G, H):\r\n\r\n   -  : basic transition, configured as {\"old\\_state\": \"A\",\r\n      \"new\\_state\": \"B\"}\r\n   -  : transition from a state to itself\r\n   -  <C.E, A>: transition from a specific sub-state of C to A\r\n   -  : transition from any sub-state of C to specific state D.G\r\n   -  : transition from A to C.E, E being the initial state of C because\r\n      it was explicitly set or because it is the first state in E\r\n   -  <C.F, D.H>: transitioning from one sub-state in a state to another\r\n      sub-state in another state. Note that this would call (if present)\r\n      on\\_exit on F and C and on\\_entry on D and H in that order.\r\n\r\n-  non-allowed transitions:\r\n\r\n   -  <C.E, C.F>: inner transitions cannot be defined on the top level;\r\n      define in state C\r\n\r\n-  adding switched transitions, given transition :\r\n\r\n   -  B and C must have conditions attached in the transition, these\r\n      condition will be run though in order\r\n   -  D does not need to have a condition attached meaning it will\r\n      always be the next state if the conditions on the transition to B\r\n      and C fail\r\n\r\nAuthors\r\n-------\r\n\r\nLars van Gemerden (rational-it) - initial code and documentation.\r\n\r\nLicense\r\n-------\r\n\r\nThis project is licensed under the license in LICENSE.txt.\r\n\r\n\r\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "access data structure getter setter deleter iterator utility tool",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "states",
    "platform": "",
    "project_url": "https://pypi.org/project/states/",
    "release_url": "https://pypi.org/project/states/0.1.6/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "state machine for python classes",
    "version": "0.1.6"
  },
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b7b626605d86d96aa2daff8b0149c45c",
          "sha256": "056c8531f4fbb6c176661db2ea318b113b021f7d60315608d32da8b072723d60"
        },
        "downloads": 0,
        "filename": "states-0.1.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7b626605d86d96aa2daff8b0149c45c",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 16034,
        "upload_time": "2017-08-10T18:48:41",
        "url": "https://files.pythonhosted.org/packages/09/66/0a9a6251adbf5661c81de78b7997027209e7932c03c56ca34a2c4b2138a3/states-0.1.3-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e626aabd7c5c42dbd2d766050ebe92d2",
          "sha256": "f988fe1e1a88043a4a94dfe171e7d6053571dacfd5babbe6214c229a96170287"
        },
        "downloads": 0,
        "filename": "states-0.1.3.zip",
        "has_sig": false,
        "md5_digest": "e626aabd7c5c42dbd2d766050ebe92d2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16662,
        "upload_time": "2017-08-10T18:48:43",
        "url": "https://files.pythonhosted.org/packages/9e/12/3c352e460f289cef60f819a27d7e8a0c09a53cf6f43a9e10791ac0b917cc/states-0.1.3.zip"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "37bbf50cc75c7cc71e04c89c7a0b6eec",
          "sha256": "166f6b420273bbc826ee7affd236d2587c7be4729fb7880e27ad257de52d3415"
        },
        "downloads": 0,
        "filename": "states-0.1.4-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "37bbf50cc75c7cc71e04c89c7a0b6eec",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 16037,
        "upload_time": "2017-08-10T18:56:44",
        "url": "https://files.pythonhosted.org/packages/05/ce/294a2b52ac6b79e475b02162e9d578e8915a3513e4563a0d78ab42815d8a/states-0.1.4-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3e11ee0b7676eb4f28a98c04542de17c",
          "sha256": "19bb604b41e1dcdab40dbff1cf3dc9beef1f6a1c7366fc6a130e7e9e106da7f8"
        },
        "downloads": 0,
        "filename": "states-0.1.4.zip",
        "has_sig": false,
        "md5_digest": "3e11ee0b7676eb4f28a98c04542de17c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16665,
        "upload_time": "2017-08-10T18:56:46",
        "url": "https://files.pythonhosted.org/packages/d7/ca/25b00f64ba9c7eec3644dea254696b2efb43e86aa42cc22f3b9ee6df5f6d/states-0.1.4.zip"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dc25d921b05e688cb9bf20fcc0a24aad",
          "sha256": "4f828751ad52c6b13b915a3c536380589b6d2b01ae65672c82708ab00553c341"
        },
        "downloads": 0,
        "filename": "states-0.1.5-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc25d921b05e688cb9bf20fcc0a24aad",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 16425,
        "upload_time": "2017-08-10T20:27:04",
        "url": "https://files.pythonhosted.org/packages/49/23/3da3b0f841de0415863a95502efa93a73c7403aa63dc0ae4624fd14098d8/states-0.1.5-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d2d9935d3c531d810eeebe520da88510",
          "sha256": "5ec0b9e45ced9c4bc7fca3f0a3bc0b018146a72ae6605cdf5d3a9fdf23519449"
        },
        "downloads": 0,
        "filename": "states-0.1.5.zip",
        "has_sig": false,
        "md5_digest": "d2d9935d3c531d810eeebe520da88510",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17084,
        "upload_time": "2017-08-10T20:27:06",
        "url": "https://files.pythonhosted.org/packages/1f/16/dbffe0ebd0faef1defebfcd6c87417389b0e9c592a6a63b9df7de476b918/states-0.1.5.zip"
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "32357757aa28d1b8cbf1d778aece4b9c",
          "sha256": "0128098a027b8409de51a6d10f2e8baabc198bdfcf9b47c1fd53a3d330a07fa3"
        },
        "downloads": 0,
        "filename": "states-0.1.6-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "32357757aa28d1b8cbf1d778aece4b9c",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 16465,
        "upload_time": "2017-08-10T21:00:32",
        "url": "https://files.pythonhosted.org/packages/10/11/b99d575bb5c36eae587e4577644c764b4f69910e31e1bacf327cf710432c/states-0.1.6-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a9ff6c5e9ff906cf5172d3184a733a44",
          "sha256": "bb4b43b533f87552b539e82770040fa68d42af70fa3cff788c1dcf768719890e"
        },
        "downloads": 0,
        "filename": "states-0.1.6.zip",
        "has_sig": false,
        "md5_digest": "a9ff6c5e9ff906cf5172d3184a733a44",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17124,
        "upload_time": "2017-08-10T21:00:33",
        "url": "https://files.pythonhosted.org/packages/56/29/c92be8128f32a364a85e3cbd089e45d5013c5eedd110575afc66ca0b13e9/states-0.1.6.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "32357757aa28d1b8cbf1d778aece4b9c",
        "sha256": "0128098a027b8409de51a6d10f2e8baabc198bdfcf9b47c1fd53a3d330a07fa3"
      },
      "downloads": 0,
      "filename": "states-0.1.6-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "32357757aa28d1b8cbf1d778aece4b9c",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 16465,
      "upload_time": "2017-08-10T21:00:32",
      "url": "https://files.pythonhosted.org/packages/10/11/b99d575bb5c36eae587e4577644c764b4f69910e31e1bacf327cf710432c/states-0.1.6-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "a9ff6c5e9ff906cf5172d3184a733a44",
        "sha256": "bb4b43b533f87552b539e82770040fa68d42af70fa3cff788c1dcf768719890e"
      },
      "downloads": 0,
      "filename": "states-0.1.6.zip",
      "has_sig": false,
      "md5_digest": "a9ff6c5e9ff906cf5172d3184a733a44",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 17124,
      "upload_time": "2017-08-10T21:00:33",
      "url": "https://files.pythonhosted.org/packages/56/29/c92be8128f32a364a85e3cbd089e45d5013c5eedd110575afc66ca0b13e9/states-0.1.6.zip"
    }
  ]
}