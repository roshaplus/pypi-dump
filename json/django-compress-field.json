{
  "info": {
    "author": "valdergallo",
    "author_email": "valdergallo@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.4",
      "Framework :: Django :: 1.5",
      "Framework :: Django :: 1.6",
      "Framework :: Django :: 1.7",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Framework :: Pytest",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 2 :: Only",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.0",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Utilities"
    ],
    "description": "Django Compress Field\r\n=======================\r\n\r\n|Build Status| |Latest Version| |BSD License| |Pypi Download|\r\n\r\nCustom ZipFileField for Django that auto compact file uploaded\r\n\r\nInstall\r\n-------\r\n\r\n.. code:: bash\r\n\r\n        pip install django-compress-storage\r\n\r\nor by source code\r\n\r\n.. code:: bash\r\n\r\n        git clone https://github.com/valdergallo/django-compress-storage/\r\n        python setup.py install\r\n\r\nFeatures\r\n--------\r\n\r\n-  Compress FileUpload storage file with Zip\r\n-  Delete old file that was compressed on zip\r\n-  Support for South Migrations\r\n-  Support Django 1.2+\r\n-  Celery 2.5+ support - async compress file with Celery\r\n-  Windows Support\r\n-  Linux support\r\n-  OSx support\r\n-  Support for Python3\r\n-  Support for Python2.6+\r\n\r\nMotivation\r\n----------\r\n\r\nOn my job we need save all upload files for 5 year. Losing a lot space\r\non server with this files, because this I created this application.\r\n\r\nDjango Settings Configurations\r\n------------------------------\r\n\r\n.. code:: python\r\n\r\n\r\n    FILE_COMPRESS_DELETE_OLD_FILE = True # to delete old files after compressed\r\n    FILE_COMPRESS_DELETE_OLD_FILE = False # to not delete old files after compressed\r\n\r\n    # Feature only for version v9.0+\r\n    FILE_COMPRESS_QUEUE = 'Celery' # by default queue is Celery, but you can change this with this var on settings\r\n\r\n\r\n    INSTALLED_APPS = (\r\n        ...\r\n        ...\r\n        'compress_storage',\r\n    )\r\n\r\nUsage\r\n-----\r\n\r\n.. code:: python\r\n\r\n\r\n    # example model.py\r\n\r\n    from django.db import models\r\n    from compress_storage import ZipFileField\r\n\r\n    class MyContent(models.Model):\r\n        name = models.CharField(max_length=150)\r\n        create_date = models.DateTimeField(auto_now=True)\r\n        upload_file = ZipFileField(upload_to='mycontent/')\r\n\r\n        def __unicode__(self):\r\n            return self.name\r\n\r\nShell\r\n-----\r\n\r\n.. code:: python\r\n\r\n\r\n    >>> from example.core import MyContent\r\n    >>> m = MyContent.objects.get(id=2)\r\n    >>> m.upload_file\r\n    <ZipCompressFieldFile: mycontent/test.txt>\r\n    >>> m.upload_file.compress()\r\n    >>> m.upload_file\r\n    <ZipCompressFieldFile: mycontent/test.zip>\r\n\r\nUsing with Celery\r\n-----------------\r\n\r\nIf Celery are installed on Site Packages. You just need create one\r\npost\\_save on your model to use async compress.\r\n\r\n.. code:: python\r\n\r\n    # listeners.py file\r\n\r\n    from django.db.models.signals import post_save\r\n\r\n    def auto_compress_file_on_post_save(sender, instance, **kargs):\r\n        instance.upload_file.compress()\r\n\r\n    post_save.connect(auto_compress_file_on_post_save, sender=MyContent)\r\n\r\nIf you don\u00b4t wanna use Celery async compress:\r\n\r\n.. code:: python\r\n\r\n\r\n    def auto_compress_file_on_post_save(sender, instance, **kargs):\r\n        instance.upload_file.compress(async=False)\r\n\r\n    post_save.connect(auto_compress_file_on_post_save, sender=MyContent)\r\n\r\n\r\n\r\n.",
    "docs_url": null,
    "download_url": "https://github.com/valdergallo/django-compress-field/tarball/v0.9.9/",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/valdergallo/django-compress-field",
    "keywords": "django,compress,field,zip,tar,gzip",
    "license": "FREEBSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-compress-field",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-compress-field/",
    "release_url": "https://pypi.org/project/django-compress-field/0.9.9/",
    "requires_python": null,
    "summary": "Automantic compress files after upload",
    "version": "0.9.9"
  },
  "releases": {
    "0.9.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7e3bd2fa602f99f68d0e40b6735525a5",
          "sha256": "ba3589545dcb76dc9a5654cd3bfd025dd811b178109c139e4fa8895e74643fbf"
        },
        "downloads": 1112,
        "filename": "django-compress-field-0.9.8.tar.gz",
        "has_sig": false,
        "md5_digest": "7e3bd2fa602f99f68d0e40b6735525a5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4598,
        "upload_time": "2015-09-30T20:12:14",
        "url": "https://files.pythonhosted.org/packages/e7/23/e6e942395f6b62117917573978ac1fc9d4a9883eb5257dc720085c72d5a9/django-compress-field-0.9.8.tar.gz"
      }
    ],
    "0.9.9": []
  },
  "urls": []
}