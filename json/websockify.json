{
  "info": {
    "author": "Joel Martin",
    "author_email": "github@martintribe.org",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4"
    ],
    "description": "## websockify: WebSockets support for any application/server\n\nwebsockify was formerly named wsproxy and was part of the\n[noVNC](https://github.com/kanaka/noVNC) project.\n\nAt the most basic level, websockify just translates WebSockets traffic\nto normal socket traffic. Websockify accepts the WebSockets handshake,\nparses it, and then begins forwarding traffic between the client and\nthe target in both directions.\n\n### News/help/contact\n\nNotable commits, announcements and news are posted to\n<a href=\"http://www.twitter.com/noVNC\">@noVNC</a>\n\nIf you are a websockify developer/integrator/user (or want to be)\nplease join the <a\nhref=\"https://groups.google.com/forum/?fromgroups#!forum/novnc\">noVNC/websockify\ndiscussion group</a>\n\nBugs and feature requests can be submitted via [github\nissues](https://github.com/kanaka/websockify/issues).\n\nIf you want to show appreciation for websockify you could donate to a great\nnon-profits such as: [Compassion\nInternational](http://www.compassion.com/), [SIL](http://www.sil.org),\n[Habitat for Humanity](http://www.habitat.org), [Electronic Frontier\nFoundation](https://www.eff.org/), [Against Malaria\nFoundation](http://www.againstmalaria.com/), [Nothing But\nNets](http://www.nothingbutnets.net/), etc. Please tweet <a\nhref=\"http://www.twitter.com/noVNC\">@noVNC</a> if you do.\n\n### WebSockets binary data\n\nStarting with websockify 0.5.0, only the HyBi / IETF\n6455 WebSocket protocol is supported.\n\nWebsockify negotiates whether to base64 encode traffic to and from the\nclient via the subprotocol header (Sec-WebSocket-Protocol). The valid\nsubprotocol values are 'binary' and 'base64' and if the client sends\nboth then the server (the python implementation) will prefer 'binary'.\nThe 'binary' subprotocol indicates that the data will be sent raw\nusing binary WebSocket frames. Some HyBi clients (such as the Flash\nfallback and older Chrome and iOS versions) do not support binary data\nwhich is why the negotiation is necessary.\n\n\n### Encrypted WebSocket connections (wss://)\n\nTo encrypt the traffic using the WebSocket 'wss://' URI scheme you need to\ngenerate a certificate and key for Websockify to load. By default, Websockify\nloads a certificate file name `self.pem` but the `--cert=CERT` and `--key=KEY`\noptions can override the file name. You can generate a self-signed certificate\nusing openssl. When asked for the common name, use the hostname of the server\nwhere the proxy will be running:\n\n```\nopenssl req -new -x509 -days 365 -nodes -out self.pem -keyout self.pem\n```\n\nFor a self-signed certificate to work, you need to make your client/browser\nunderstand it. You can do this by installing it as accepted certificate, or by\nusing that same certificate for a HTTPS connection to which you navigate first\nand approve. Browsers generally don't give you the \"trust certificate?\" prompt\nby opening a WSS socket with invalid certificate, hence you need to have it\nacccept it by either of those two methods.\n\nIf you have a commercial/valid SSL certificate with one ore more intermediate\ncertificates, concat them into one file, server certificate first, then the\nintermediate(s) from the CA, etc. Point to this file with the `--cert` option\nand then also to the key with `--key`. Finally, use `--ssl-only` as needed.\n\n\n### Websock Javascript library\n\n\nThe `include/websock.js` Javascript library library provides a Websock\nobject that is similar to the standard WebSocket object but Websock\nenables communication with raw TCP sockets (i.e. the binary stream)\nvia websockify. This is accomplished by base64 encoding the data\nstream between Websock and websockify.\n\nWebsock has built-in receive queue buffering; the message event\ndoes not contain actual data but is simply a notification that\nthere is new data available. Several rQ* methods are available to\nread binary data off of the receive queue.\n\nThe Websock API is documented on the [websock.js API wiki page](https://github.com/kanaka/websockify/wiki/websock.js)\n\nSee the \"Wrap a Program\" section below for an example of using Websock\nand websockify as a browser telnet client (`wstelnet.html`).\n\n\n### Additional websockify features\n\nThese are not necessary for the basic operation.\n\n* Daemonizing: When the `-D` option is specified, websockify runs\n  in the background as a daemon process.\n\n* SSL (the wss:// WebSockets URI): This is detected automatically by\n  websockify by sniffing the first byte sent from the client and then\n  wrapping the socket if the data starts with '\\x16' or '\\x80'\n  (indicating SSL).\n\n* Flash security policy: websockify detects flash security policy\n  requests (again by sniffing the first packet) and answers with an\n  appropriate flash security policy response (and then closes the\n  port). This means no separate flash security policy server is needed\n  for supporting the flash WebSockets fallback emulator.\n\n* Session recording: This feature that allows recording of the traffic\n  sent and received from the client to a file using the `--record`\n  option.\n\n* Mini-webserver: websockify can detect and respond to normal web\n  requests on the same port as the WebSockets proxy and Flash security\n  policy. This functionality is activated with the `--web DIR` option\n  where DIR is the root of the web directory to serve.\n\n* Wrap a program: see the \"Wrap a Program\" section below.\n\n* Log files: websockify can save all logging information in a file.\n  This functionality is activated with the `--log-file FILE` option\n  where FILE is the file where the logs should be saved.\n\n### Implementations of websockify\n\nThe primary implementation of websockify is in python. There are\nseveral alternate implementations in other languages (C, Node.js,\nClojure, Ruby) in the `other/` subdirectory (with varying levels of\nfunctionality).\n\nIn addition there are several other external projects that implement\nthe websockify \"protocol\". See the alternate implementation [Feature\nMatrix](https://github.com/kanaka/websockify/wiki/Feature_Matrix) for\nmore information.\n\n\n### Wrap a Program\n\nIn addition to proxying from a source address to a target address\n(which may be on a different system), websockify has the ability to\nlaunch a program on the local system and proxy WebSockets traffic to\na normal TCP port owned/bound by the program.\n\nThe is accomplished with a small LD_PRELOAD library (`rebind.so`)\nwhich intercepts bind() system calls by the program. The specified\nport is moved to a new localhost/loopback free high port. websockify\nthen proxies WebSockets traffic directed to the original port to the\nnew (moved) port of the program.\n\nThe program wrap mode is invoked by replacing the target with `--`\nfollowed by the program command line to wrap.\n\n    `./run 2023 -- PROGRAM ARGS`\n\nThe `--wrap-mode` option can be used to indicate what action to take\nwhen the wrapped program exits or daemonizes.\n\nHere is an example of using websockify to wrap the vncserver command\n(which backgrounds itself) for use with\n[noVNC](https://github.com/kanaka/noVNC):\n\n    `./run 5901 --wrap-mode=ignore -- vncserver -geometry 1024x768 :1`\n\nHere is an example of wrapping telnetd (from krb5-telnetd). telnetd\nexits after the connection closes so the wrap mode is set to respawn\nthe command:\n\n    `sudo ./run 2023 --wrap-mode=respawn -- telnetd -debug 2023`\n\nThe `wstelnet.html` page demonstrates a simple WebSockets based telnet\nclient (use 'localhost' and '2023' for the host and port\nrespectively).\n\n\n### Building the Python ssl module (for python 2.5 and older)\n\n* Install the build dependencies. On Ubuntu use this command:\n\n    `sudo aptitude install python-dev bluetooth-dev`\n\n* At the top level of the websockify repostory, download, build and\n  symlink the ssl module:\n\n    `wget --no-check-certificate http://pypi.python.org/packages/source/s/ssl/ssl-1.15.tar.gz`\n\n    `tar xvzf ssl-1.15.tar.gz`\n\n    `cd ssl-1.15`\n\n    `make`\n\n    `cd ../`\n\n    `ln -sf ssl-1.15/build/lib.linux-*/ssl ssl`\n\n\nChanges\n=======\n\n0.8.0\n-----\n\n* Make websockify properly terminate children on SIGTERM (#226)\n* Remove logging in signal handlers (this can cause Python to hang under certain conditions) (#219)\n* Make it easier to log to a file (#205)\n* Add support for IPv6 addresses in tokens in the TokenFile token plugins (#197)\n* Improve auth plugin framework to enable better support for HTTP auth (#194, #201)\n* Fix bug in JSONTokenAPI token plugin (#192)\n* Fix a missing variable in the exception handler (#178)\n\n0.7.0\n-----\n\n* Python 3 support fixes (#140, #155, #159)\n* Generic token-parsing plugins support (#162)\n* Generic authentication plugins support (#172)\n* Fixed frame corruption on big-endian systems (#161)\n* Support heartbeats (via PING) and automatic responses to PONG (#169)\n* Automatically reject unmasked client frames by default (strict mode) (#174)\n* Automatically restart interrupted select calls (#175)\n* Make 'run' respect environment settings (including virtualenv) (#176)\n\n0.6.1 - May 11, 2015\n--------------------\n\n* **PATCH RELEASE**: Fixes a bug causing file_only to not be passed properly\n\n0.6.0 - Feb 18, 2014\n--------------------\n\n* **NOTE** : 0.6.0 will break existing code that sub-classes WebsocketProxy\n* Refactor to use standard SocketServer RequestHandler design\n* Fix zombie process bug on certain systems when using multiprocessing\n* Add better unit tests\n* Log information via python `logging` module\n\n0.5.1 - Jun 27, 2013\n--------------------\n\n * use upstream einaros/ws (>=0.4.27) with websockify.js\n * file_only and no_parent security options for WSRequestHandler\n * Update build of web-socket-js (c0855c6cae)\n * add include/web-socket-js-project submodule to gimite/web-socket-js\n   for DSFG compliance.\n * drop Hixie protocol support\n\n0.4.1 - Mar 12, 2013\n--------------------\n\n * ***NOTE*** : 0.5.0 will drop Hixie protocol support\n * add include/ directory and remove some dev files from source\n   distribution.\n\n0.4.0 - Mar 12, 2013\n--------------------\n\n * ***NOTE*** : 0.5.0 will drop Hixie protocol support\n * use Buffer base64 support in Node.js implementation\n\n0.3.0 - Jan 15, 2013\n--------------------\n\n * refactor into modules: websocket, websocketproxy\n * switch to web-socket-js that uses IETF 6455\n * change to MPL 2.0 license for include/*.js\n * fix session recording\n\n0.2.1 - Oct 15, 2012\n--------------------\n\n * re-released with updated version number\n\n0.2.0 - Sep 17, 2012\n--------------------\n\n * Binary data support in websock.js\n * Target config file/dir and multiple targets with token selector\n * IPv6 fixes\n * SSL target support\n * Proxy to/from unix socket\n\n\n0.1.0 - May 11, 2012\n--------------------\n\n * Initial versioned release.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/kanaka/websockify",
    "keywords": "noVNC websockify",
    "license": "LGPLv3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "websockify",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/websockify/",
    "release_url": "https://pypi.org/project/websockify/0.8.0/",
    "requires_python": null,
    "summary": "Websockify.",
    "version": "0.8.0"
  },
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "29b6549d3421907de4bbd881ecc2e1b1",
          "sha256": "e5af73e5d1edee91dbd28bf9fc710b5c23f4183de0e78d5f4fbe68525b53375b"
        },
        "downloads": 89110,
        "filename": "websockify-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "29b6549d3421907de4bbd881ecc2e1b1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20265,
        "upload_time": "2013-01-15T17:43:56",
        "url": "https://files.pythonhosted.org/packages/6a/19/631fa1629eaaf5b3a142da70194802f997a95d4ff3bac216a4dc6aaec420/websockify-0.3.0.tar.gz"
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d1c12a7cb3833ed383dff300aa873a0f",
          "sha256": "0369c1e668df850c7d60ff629e15258bc7ab796feb2e6c6ac6d65fcbe8b3faa1"
        },
        "downloads": 2052,
        "filename": "websockify-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d1c12a7cb3833ed383dff300aa873a0f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20371,
        "upload_time": "2013-03-12T18:18:36",
        "url": "https://files.pythonhosted.org/packages/7f/32/be3c4a1cfc290e6051371468cd8c69ff30b201200aa017def2bcd512547b/websockify-0.4.0.tar.gz"
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9ce7925ee9011967d810bdc688141b87",
          "sha256": "6f7095320b109c7f082c9db0dc0456469be5721caa06afb3c2473585aff533d0"
        },
        "downloads": 2800,
        "filename": "websockify-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9ce7925ee9011967d810bdc688141b87",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18294,
        "upload_time": "2013-03-12T18:49:49",
        "url": "https://files.pythonhosted.org/packages/48/25/542982599c5726896f5fcf8ea3fde4cd3104efbbd94a3e2feb5b48ad9164/websockify-0.4.1.tar.gz"
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cdee6d6754c85814e1e6dcdef18b9785",
          "sha256": "e48d5c790c9ce5ac938d76fd0a9019aad2a33401fb1702b6b84263959f64522b"
        },
        "downloads": 422604,
        "filename": "websockify-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cdee6d6754c85814e1e6dcdef18b9785",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 833809,
        "upload_time": "2013-06-27T21:38:37",
        "url": "https://files.pythonhosted.org/packages/ae/c1/b9c4c423376d37ce63aa65ac75dc582ce5dd3378d8d850b3d124d674f894/websockify-0.5.1.tar.gz"
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "673a70d007c1a2445c8ef5c7a3067c07",
          "sha256": "da4364f54fdcc5350059febe2e8fdf2b53d16cf04ee23c71315e561119f44529"
        },
        "downloads": 403109,
        "filename": "websockify-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "673a70d007c1a2445c8ef5c7a3067c07",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 223120,
        "upload_time": "2014-02-26T02:29:18",
        "url": "https://files.pythonhosted.org/packages/4a/c1/735203467e4866d260c895b27b99b549d41117f21a5af0acbd4b60159690/websockify-0.6.0.tar.gz"
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b16c07014b36f0e4fdffe61777b25a63",
          "sha256": "3eeeba51a38798186dae6202d6161ce795da3872c209bb0987e8423814cb3b2b"
        },
        "downloads": 246104,
        "filename": "websockify-0.6.1.zip",
        "has_sig": false,
        "md5_digest": "b16c07014b36f0e4fdffe61777b25a63",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 236298,
        "upload_time": "2015-05-12T01:12:03",
        "url": "https://files.pythonhosted.org/packages/a9/cd/de85a7010feee78cb98e6eba97d4285aa814cde0e968dae8087b4811430c/websockify-0.6.1.zip"
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d72fd7ffb9c0f4b8ad36be3dade9e248",
          "sha256": "0cb3c7b954c88cb1950617fd6e36e2addf6b04adaaaded4ae962e72babaad7ec"
        },
        "downloads": 392368,
        "filename": "websockify-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d72fd7ffb9c0f4b8ad36be3dade9e248",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 231838,
        "upload_time": "2015-07-24T01:16:51",
        "url": "https://files.pythonhosted.org/packages/4e/b4/57120ab913578feedce9aea809230eb56fa7fe4863cbc73584f48f8faec9/websockify-0.7.0.tar.gz"
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8fa547ca4de84a96aa3472d55fbcdd59",
          "sha256": "547d3d98c5081f2dc2872a2e4a3aef33e0ee5141d5f6209204aab2f4a41548d2"
        },
        "downloads": 129770,
        "filename": "websockify-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8fa547ca4de84a96aa3472d55fbcdd59",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 234450,
        "upload_time": "2016-02-18T19:13:07",
        "url": "https://files.pythonhosted.org/packages/66/48/2e35166c957639ddb4cb11ce9783ad3ee9bf96f220354ce2684ee95feeb7/websockify-0.8.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "8fa547ca4de84a96aa3472d55fbcdd59",
        "sha256": "547d3d98c5081f2dc2872a2e4a3aef33e0ee5141d5f6209204aab2f4a41548d2"
      },
      "downloads": 129770,
      "filename": "websockify-0.8.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8fa547ca4de84a96aa3472d55fbcdd59",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 234450,
      "upload_time": "2016-02-18T19:13:07",
      "url": "https://files.pythonhosted.org/packages/66/48/2e35166c957639ddb4cb11ce9783ad3ee9bf96f220354ce2684ee95feeb7/websockify-0.8.0.tar.gz"
    }
  ]
}