{
  "info": {
    "author": "Tammo Ippen",
    "author_email": "tammo.ippen@posteo.de",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Terminals"
    ],
    "description": "Plotille\n========\n\n|Build Status| |Coverage Status| |Tested CPython Versions| |Tested PyPy\nVersions| |PyPi version| |PyPi license|\n\nPlot, scatter plots and histograms in the terminal using braille dots,\nwith no external dependancies. For good visualization, use a font /\nterminal with monospaced braille characters.\n\nInstall:\n\n::\n\n    pipenv install plotille\n\nSimilar to other libraries:\n\n-  like `drawille <https://github.com/asciimoo/drawille>`__, but focused\n   on graphing only \u2013 plus X/Y-axis.\n-  like `termplot <https://github.com/justnoise/termplot>`__, but with\n   braille (finer dots), left to right histogram and linear\n   interpolation for plotting function.\n-  like `termgraph <https://github.com/sgeisler/termgraph>`__ (not on\n   pypi), but very different style.\n-  like `terminalplot <https://github.com/kressi/terminalplot>`__, but\n   with braille, X/Y-axis, histogram, linear interpolation.\n\nDocumentation\n-------------\n\n.. code:: python\n\n    In [1]: import plotille\n    In [2]: import numpy as np\n    In [3]: X = sorted(np.random.normal(size=1000))\n\n**Plot:**\n\n.. code:: python\n\n    In [4]: plotille.plot?\n    Signature: plot(X, Y, width=80, height=50, X_label='X', Y_label='Y', linesep='\\n', interp='linear')\n    Docstring:\n    Create plot with X , Y values and linear interpolation between points\n\n    Parameters:\n        X: List[float]         X values.\n        Y: List[float]         Y values. X and Y must have the same number of entries.\n        width: int             The number of characters for the width (columns) of the canvas.\n        hight: int             The number of characters for the hight (rows) of the canvas.\n        X_label: str           Label for X-axis.\n        Y_label: str           Label for Y-axis. max 8 characters.\n        interp: Optional[str]  Specify interpolation; values None, 'linear'\n    Returns:\n        str: plot over `X`, `Y`.\n\n    In [5]: print(plotille.plot(X, np.sin(X), height=50))\n\n.. figure:: https://github.com/tammoippen/plotille/blob/master/imgs/plot.png\n   :alt: Plot example\n\n   Plot example\n**Scatter:**\n\n.. code:: python\n\n    In [6]: plotille.scatter?\n    Signature: plotille.scatter(X, Y, width=80, height=50, X_label='X', Y_label='Y', linesep='\\n')\n    Docstring:\n    Create scatter plot with X , Y values\n\n    Parameters:\n        X: List[float]  X values.\n        Y: List[float]  Y values. X and Y must have the same number of entries.\n        width: int      The number of characters for the width (columns) of the canvas.\n        hight: int      The number of characters for the hight (rows) of the canvas.\n        X_label: str    Label for X-axis.\n        Y_label: str    Label for Y-axis. max 8 characters.\n\n    Returns:\n        str: scatter plot over `X`, `Y`.\n\n    In [7]: print(plotille.scatter(X, np.sin(X), height=50))\n\n.. figure:: https://github.com/tammoippen/plotille/blob/master/imgs/scatter.png\n   :alt: Plot example\n\n   Plot example\n**Histogram:**\n\nInspired by\n`crappyhist <http://kevinastraight.x10host.com/2013/12/28/python-histograms-from-the-console/>`__.\n\n.. code:: python\n\n    In [8]: plotille.hist?\n    Signature: plotille.hist(X, bins=50, width=80, log_scale=False, linesep='\\n')\n    Docstring:\n    Create histogram over `X`\n\n    Parameters:\n        X: List[float]  The items to count over.\n        bins: int       The number of bins to put X entries in (rows).\n        width: int      The number of characters for the width (columns).\n        log_scale: bool Scale the histogram with `log` function.\n\n    Returns:\n        str: histogram over `X` from left to right.\n\n    In [9]: print(plotille.hist(np.random.normal(size=10000)))\n\n.. figure:: https://github.com/tammoippen/plotille/blob/master/imgs/hist.png\n   :alt: Histogram example\n\n   Histogram example\n\n.. |Build Status| image:: https://travis-ci.org/tammoippen/plotille.svg?branch=master\n   :target: https://travis-ci.org/tammoippen/plotille\n.. |Coverage Status| image:: https://coveralls.io/repos/github/tammoippen/plotille/badge.svg?branch=master\n   :target: https://coveralls.io/github/tammoippen/plotille?branch=master\n.. |Tested CPython Versions| image:: https://img.shields.io/badge/cpython-2.7%2C%203.5%2C%203.6%2C%20nightly-brightgreen.svg\n   :target: https://img.shields.io/badge/cpython-2.7%2C%203.5%2C%203.6%2C%20nightly-brightgreen.svg\n.. |Tested PyPy Versions| image:: https://img.shields.io/badge/pypy-2.7--5.8.0%2C%203.5--5.8.0-brightgreen.svg\n   :target: https://img.shields.io/badge/pypy-2.7--5.8.0%2C%203.5--5.8.0-brightgreen.svg\n.. |PyPi version| image:: https://img.shields.io/pypi/v/plotille.svg\n   :target: https://pypi.python.org/pypi/plotille\n.. |PyPi license| image:: https://img.shields.io/pypi/l/plotille.svg\n   :target: https://pypi.python.org/pypi/plotille",
    "docs_url": null,
    "download_url": "https://github.com/tammoippen/plotille/archive/v1.3.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/tammoippen/plotille",
    "keywords": "plot,scatter,histogram,terminal,braille,unicode",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "plotille",
    "platform": "",
    "project_url": "https://pypi.org/project/plotille/",
    "release_url": "https://pypi.org/project/plotille/1.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Plot in the terminal using braille dots.",
    "version": "1.3"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "372337a32601d01bcc00e88bcf878426",
          "sha256": "9430a5742b2596fe2375a1a3aceb8a4bd7bdcc88a3a0bb357a361b76b8132e36"
        },
        "downloads": 0,
        "filename": "plotille-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "372337a32601d01bcc00e88bcf878426",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8593,
        "upload_time": "2017-09-27T14:26:39",
        "url": "https://files.pythonhosted.org/packages/a0/28/5e36201897aa6333bde1918b8b42a2a8bface7b18cdef4fc9bfd01ad5e0a/plotille-1.0.tar.gz"
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4ba807cfe0b7a9599189102b1cc69442",
          "sha256": "2e2e49a4977ff80f7e1c183b5bcc4c8a572c4f5db3ad132435fb89e7b2970502"
        },
        "downloads": 0,
        "filename": "plotille-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4ba807cfe0b7a9599189102b1cc69442",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15862,
        "upload_time": "2017-09-28T08:47:31",
        "url": "https://files.pythonhosted.org/packages/db/d8/c83495c72baea351ac5ee87bd26c5a69434f89af531098da8a98f2ada0b9/plotille-1.1.tar.gz"
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4ebae3d534cb1b5d1cfec2b19d07f1e9",
          "sha256": "6a307c5bc88744f1dbef1d1f2c373c15978c8ff5e45305d50f881ff308cac01d"
        },
        "downloads": 0,
        "filename": "plotille-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4ebae3d534cb1b5d1cfec2b19d07f1e9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15867,
        "upload_time": "2017-09-28T09:41:00",
        "url": "https://files.pythonhosted.org/packages/dd/ec/40070bf2c788361dd9eba775d4389caf103a76eb663f240e1177f0f9c585/plotille-1.2.tar.gz"
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "48e2ce3d489a6f687fe6820a88def541",
          "sha256": "5e18e6c77c7c073d1882f69c1f04dbb88a7df85e6e10476d2ba4b60039ac25f5"
        },
        "downloads": 0,
        "filename": "plotille-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "48e2ce3d489a6f687fe6820a88def541",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7495,
        "upload_time": "2017-10-04T09:57:59",
        "url": "https://files.pythonhosted.org/packages/f7/25/78be7ba03bc7fa63bde0c90c466e5334a1622884bac250d2ba2c3bc637fd/plotille-1.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "48e2ce3d489a6f687fe6820a88def541",
        "sha256": "5e18e6c77c7c073d1882f69c1f04dbb88a7df85e6e10476d2ba4b60039ac25f5"
      },
      "downloads": 0,
      "filename": "plotille-1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "48e2ce3d489a6f687fe6820a88def541",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7495,
      "upload_time": "2017-10-04T09:57:59",
      "url": "https://files.pythonhosted.org/packages/f7/25/78be7ba03bc7fa63bde0c90c466e5334a1622884bac250d2ba2c3bc637fd/plotille-1.3.tar.gz"
    }
  ]
}