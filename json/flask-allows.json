{
  "info": {
    "author": "Alec Nikolas Reiter",
    "author_email": "alecreiter@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Flask",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": ".. image:: https://travis-ci.org/justanr/flask-allows.svg?branch=master\n    :target: https://travis-ci.org/justanr/flask-allows\n\n\nflask-allows\n============\n\nAre you permissions making too much noise all the time? Are your permissions\nstomping all over your actual code? Are your permission decorators clawing\nat your line count all the time? Think there's no answer? There is! Flask-Allows.\n\n\nFlask-Allows is an authorization tool for Flask inspired by\n`django-rest-framework <https://github.com/tomchristie/django-rest-framework>`_'s\npermissioning system and `rest_condition <https://github.com/caxap/rest_condition>`_'s\nability to compose simple requirements into more complex ones.\n\nInstall\n-------\n\nJust yer standard `pip install flask-allows`\n\nFlask Allows supports 2.7, and 3.4+. Support for 3.3 was ended in the version 0.3 release\n\n\nQuickstart\n----------\n\nFlask-Allows provides a simple route decorator that accepts a list of requirements,\nwhich can be any callable that accept an identity and the current request.\n\n.. code:: Python\n\n    from flask_allows import Allows\n    from flask import g, request\n    from .myapp import app\n\n    allows = Allows(identity_loader=lambda: g.user)\n\n    def is_staff(ident, request):\n        return ident.permlevel == 'staff'\n\n    @app.route('/staff_only')\n    @allows.requires(is_staff)\n    def staff_only():\n        return \"Welcome to the staff lounge\"\n\nFlask-Allows also provides a Permission class that can act as either a boolean\nor a context manager. This depends on flask-allows being previously configured\non the current application.\n\n\n.. code:: Python\n\n    from flask import render_template\n    from flask_allows import Permission\n    from .myapp import app\n    from .requirements import is_staff\n\n    @app.route('/')\n    def index():\n        if Permission(is_staff):\n            return render_template('staff_index.html')\n        else:\n            return render_template('user_index.html')\n\n    @app.route('/do_stuff')\n    def do_stuff():\n        with Permission(is_staff):\n            do_staff_stuff()\n\nWhen using `Permission` as a context manager, if the loaded identity doesn't\nmeet the requirements, an exception is thrown immediately. However, when used\nas a boolean, it simply returns True or False.\n\n\nIt's also possible to provide an already loaded user to `Permission` by passing\nit via the `identity` keyword.\n\n\nMore Advanced Stuff\n------------------\n\nflask-allows provides a small toolkit for crafting more complex requirements.\nOne of these is the base `Requirement` class:\n\n.. code:: Python\n\n    from flask_allows import Requirement\n    from .models import Forum, Group\n\n    class CanAccessForum(Requirement):\n        def fulfill(self, identity, request):\n            forum_id = self.determine_forum_id(request)\n            user_group_ids = self.get_user_group_ids(user)\n\n            q = Forum.query.with_entities(Forum.id).filter(\n                Forum.id == forum_id, Forum.groups.any(Group.id.in_(user_group_ids))\n                ).first()\n\n            return q is not None\n\n        def determine_forum(self, request):\n            # do something complicated to determine the forum_id\n            return request.view_args['forum_id']\n\n        def user_group_ids(self, user):\n            if user.is_anonymous():\n                return [Group.get_guest_group().id]\n            else:\n                return [gr.id for gr in user.groups]\n\nWhen providing a class based requirement to be fulfilled, you must\ninstantiate it in case there's any setup that needs to be performed.\n\n.. code:: Python\n\n    #wrong!\n    @allows.requires(CanAccessForum)\n    def forum(forum_id):\n        ...\n\n    #right\n    @allows.requires(CanAccessForum())\n    def forum(forum_id):\n        ...\n\nOr if you have many simple requirements that need to be composed into a more\ncomplex requirement, this is provided as well:\n\n.. code:: Python\n\n    from flask_allows import And, Or Not\n    from .requirements import is_staff, read_only, is_member\n\n    @allows.requires(Or(is_staff, And(readonly, is_member)))\n    def something():\n        ...\n\n\nApplying To Class Based View\n----------------------------\n\nAdding permissions to your class based views (CBV) is easy, just include either the\n`allows.requires` or `requires` decorator in the `decorators` attribute of the CBV:\n\n.. code:: Python\n\n    from flask.views import View\n    from flask_allows.views import requires\n    from .requirements import MyRequirement\n\n\n    class SomeCBV(View):\n        decorators = [requires(MyRequirement())\n\n        def dispatch_request(self):\n            ...\n\n\nAlternatively, if you have a method view, and only need to apply permissions to some of the\nmethods, you can decorator those methods only:\n\n\n.. code:: Python\n\n    class SomeMethodView(MethodView):\n\n        def get(self):\n            pass\n\n        @requires(MyRequirement())\n        def post(self):\n            ...\n\n\nGet requests won't trigger the permission checking, but posts will.\n\n\nControlling Failure\n-------------------\n\nWhen used as a decorator or context manager, Allows will raise werkzeug's Forbidden exception\nby default. However, this exception can be configured to any exception you want:\n\n.. code:: Python\n\n    class MyForbidden(Exception):\n        pass\n\n    # Either at extension creation\n    allows = Allows(throws=MyForbidden)\n\n    # At decoration\n    # also applies to flask_allows.views.requires\n    @allows.requires(MyRequirement(), throws=MyForbidden)\n    def stub():\n        pass\n\n    # Or with Permission\n    perm = Permission(MyRequirement(), throws=MyForbidden)\n\n\nAdditionally, an `on_fail` value may be passed. When used with decoration, this value will be\nreturned instead of raising an exception. If a function is passed, then it will receive the\narguments passed to the route handler as well, and if a value is returned from the function,\nit will be returned to the caller instead of raising an exception.\n\nWhen used with `Permission`, `on_fail` will be called with no arguments and is only invoked when\nused as a context manager. This can be used to flash a message or record bad behavior, but not\nintercept the raised exception.\n\n\n.. code:: Python\n\n    # plain value, will be returned\n    Allows(on_fail=\"Uh oh, you're not allowed to do that\")\n\n    # propagate return from function\n    Allows(on_fail=lambda *a, **k: \"Someones been clicking the wrong links\")\n\n    # no value returned, exception will be raised\n    Allows(on_fail=lambda *a, **k: flash(\"Don't do that\"))\n\n\n`on_fail` may also be passed to any of `allows.requires`, `flask_allows.views.requires`, or\n`Permission`, in these cases this will take precedence over the `on_fail` configured on the\n`Allows` instance.\n\n\nWhy not Flask-Principal?\n------------------------\n\nI have nothing against Flask-Principal, I just found that it didn't work for\nwhat I needed without adding an extra layer around it.\n\n\nVersion 0.4 (Unreleased)\n========================\n\n* Clarify deprecation message for PermissionedView, will be removed in 0.6\n* Deprecate Permission.throw_type for 0.6 removak\n* Add optional on_fail for `allows.requires` and `requires` decoration\n* Fix coverage path problem with local testing\n\n\nVersion 0.3.1 (2017-08-20)\n==========================\n\n* Fix error that prevent sdist builds on 2.7\n\n\nVersion 0.3 (2017-08-20)\n========================\n\n* Drop official support for Python 3.3\n* Deprecate implicit decoration on class based views via the requirements attribute\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/justanr/flask-allows",
    "keywords": "flask,authorization",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flask-allows",
    "platform": "",
    "project_url": "https://pypi.org/project/flask-allows/",
    "release_url": "https://pypi.org/project/flask-allows/0.4/",
    "requires_dist": [
      "Flask"
    ],
    "requires_python": "",
    "summary": "Impose authorization requirements on Flask routes",
    "version": "0.4"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b6d9c7359d7ed34d755cda16877fe5cc",
          "sha256": "b0ef25097b5e469b339711c7907ed2bef7b520adfd6300ae0c6606a47acac29c"
        },
        "downloads": 1677,
        "filename": "flask-allows-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b6d9c7359d7ed34d755cda16877fe5cc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7737,
        "upload_time": "2015-08-20T16:48:50",
        "url": "https://files.pythonhosted.org/packages/72/7c/89500a9e3b3238b2c46f833ee622dda059170e8836401af33734b7742eb2/flask-allows-0.1.0.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fc6a10aae15ccb99fcaf01c73fdd939f",
          "sha256": "d4082accb9330b5c337457b94076a67a2c82c1a2eb16a3a847dac988ade416f3"
        },
        "downloads": 21,
        "filename": "flask-allows-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fc6a10aae15ccb99fcaf01c73fdd939f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8386,
        "upload_time": "2017-01-10T13:43:48",
        "url": "https://files.pythonhosted.org/packages/fe/ee/691079b07fa66e429a6f814801239ccf5bc24948364c4ee312b081b4ce2b/flask-allows-0.2.0.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "541f9cb71015bbd6b047ae01fb06843a",
          "sha256": "70a71d64ca404cadd8c7c61c8fb57d20ab7c658c018f8932eb166e5073fac8f2"
        },
        "downloads": 0,
        "filename": "flask_allows-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "541f9cb71015bbd6b047ae01fb06843a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10725,
        "upload_time": "2017-08-20T16:32:48",
        "url": "https://files.pythonhosted.org/packages/46/23/7aa7a66dbc11fc5ce2eec98647ac0f56264c6f307e3f4e8d485f5772bf24/flask_allows-0.3.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "65319ae05b932229fdc1864bb560fe58",
          "sha256": "59dc5ba7fc4618e5769f7b53a27696f381415222ada39876c3dee8a2fb476cda"
        },
        "downloads": 0,
        "filename": "flask-allows-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "65319ae05b932229fdc1864bb560fe58",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10833,
        "upload_time": "2017-08-20T16:33:42",
        "url": "https://files.pythonhosted.org/packages/8e/ed/8a98d3b37a6a7772b591277905b4ac2cdf36346b5513e34ede3ba96c3782/flask-allows-0.3.0.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "67f3b78f4826bc61ed45a84ff942aab6",
          "sha256": "fbba203215244f0f31cb2d091ad877dfc9e4a36dccb0a1b11fb404baba66f5bd"
        },
        "downloads": 0,
        "filename": "flask_allows-0.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "67f3b78f4826bc61ed45a84ff942aab6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10821,
        "upload_time": "2017-08-20T19:03:54",
        "url": "https://files.pythonhosted.org/packages/25/4c/3cc98e8238b60e38153b9e70c3fa9e9de3459e1257c271d00e478321ce24/flask_allows-0.3.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1b12511c74c1f71d6f967b3cabd5c283",
          "sha256": "d012693a27f76395dacc2c832025792bb6989c44061e63b6fe52cc675e565b30"
        },
        "downloads": 0,
        "filename": "flask-allows-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1b12511c74c1f71d6f967b3cabd5c283",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10905,
        "upload_time": "2017-08-20T19:03:56",
        "url": "https://files.pythonhosted.org/packages/a8/c6/37a3d3a876da2d105c81801a33b964dc5d9cf8c498c2f1b75aa59ce45d4c/flask-allows-0.3.1.tar.gz"
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4a0586da26a3a0076ac8a0bdb9b33990",
          "sha256": "063f2a3094cbd3df995d12909dd56f9d49ddae2c5979354c604ac28bc23375fb"
        },
        "downloads": 0,
        "filename": "flask_allows-0.3.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a0586da26a3a0076ac8a0bdb9b33990",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10822,
        "upload_time": "2017-08-29T04:15:48",
        "url": "https://files.pythonhosted.org/packages/64/69/d45c7a113c3a5bafc3ca47c31e188744a2668015c840635f84314ec3de0f/flask_allows-0.3.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0df4289774a927d076249fa132f2545d",
          "sha256": "7ca0c86aa91d1650ad5f0a2d5c7a430b99b413e2e9a22ceb6ed5b9db4cb85232"
        },
        "downloads": 0,
        "filename": "flask-allows-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0df4289774a927d076249fa132f2545d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11961,
        "upload_time": "2017-08-29T04:15:50",
        "url": "https://files.pythonhosted.org/packages/f5/eb/6d15835a3e0cb8636b51b6cf0986479a596e82f25c0ae1ec3b497ec8dc55/flask-allows-0.3.2.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2cb9de7aeebdc78374274c53b5418cc2",
          "sha256": "fbdf023063e76edee6758fa8ba9052489670d010d897f7f10e88493ac7c5ae3a"
        },
        "downloads": 0,
        "filename": "flask_allows-0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cb9de7aeebdc78374274c53b5418cc2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 13274,
        "upload_time": "2017-09-02T15:20:46",
        "url": "https://files.pythonhosted.org/packages/29/50/3cadf541e88c7eb90a0568803ace6f58d5cd12f4eedf450cc25ac4dd3f2b/flask_allows-0.4-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8163ab0882c85b62ef91fee31e7972ca",
          "sha256": "386d6535fd26fc610c4b000135ba66057fa743479ba6ef9d995de65c613c51a9"
        },
        "downloads": 0,
        "filename": "flask-allows-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8163ab0882c85b62ef91fee31e7972ca",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11278,
        "upload_time": "2017-09-02T15:20:47",
        "url": "https://files.pythonhosted.org/packages/d3/75/c22b6d8057e3aaef9ed6ce4a430708ea1edecc5e65c85f653e6ec8c85478/flask-allows-0.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2cb9de7aeebdc78374274c53b5418cc2",
        "sha256": "fbdf023063e76edee6758fa8ba9052489670d010d897f7f10e88493ac7c5ae3a"
      },
      "downloads": 0,
      "filename": "flask_allows-0.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2cb9de7aeebdc78374274c53b5418cc2",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 13274,
      "upload_time": "2017-09-02T15:20:46",
      "url": "https://files.pythonhosted.org/packages/29/50/3cadf541e88c7eb90a0568803ace6f58d5cd12f4eedf450cc25ac4dd3f2b/flask_allows-0.4-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "8163ab0882c85b62ef91fee31e7972ca",
        "sha256": "386d6535fd26fc610c4b000135ba66057fa743479ba6ef9d995de65c613c51a9"
      },
      "downloads": 0,
      "filename": "flask-allows-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "8163ab0882c85b62ef91fee31e7972ca",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 11278,
      "upload_time": "2017-09-02T15:20:47",
      "url": "https://files.pythonhosted.org/packages/d3/75/c22b6d8057e3aaef9ed6ce4a430708ea1edecc5e65c85f653e6ec8c85478/flask-allows-0.4.tar.gz"
    }
  ]
}