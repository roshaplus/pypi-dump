{
  "info": {
    "author": "Jacob Rief",
    "author_email": "jacob.rief@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "django-sass-processor\n=====================\n\nBeing annoyed having to run a Compass, Grunt or Gulp daemon while\ndeveloping Django projects?\n\nWell, then this app is for you! Compile SASS/SCSS files on the fly\nwithout having to manage third party services nor special IDE plugins.\n\n|Build Status| |PyPI| |PyPI version| |PyPI| |Twitter Follow|\n\n**django-sass-processor** converts ``*.scss`` or ``*.sass`` files into\n``*.css`` while rendering templates. For performance reasons this is\ndone only once, since the preprocessor keeps track on the timestamps and\nonly recompiles, if any of the imported SASS/SCSS files is younger than\nthe corresponding generated CSS file.\n\nIntroduction\n------------\n\nThis Django app provides a templatetag\n``{% sass_src 'path/to/file.scss' %}``, which can be used instead of the\nbuilt-in templatetag ``static``. This templatetag also works inside\nJinja2 templates.\n\nIf SASS/SCSS files shall be referenced through the ``Media`` class, or\n``media`` property, the SASS processor can be used directly.\n\nAdditionally, **django-sass-processor** is shipped with a management\ncommand, which can convert the content of all occurrences inside the\ntemplatetag ``sass_src`` as an offline operation. Hence the **libsass**\ncompiler is not required in a production environment.\n\nDuring development, a\n`sourcemap <https://developer.chrome.com/devtools/docs/css-preprocessors>`__\nis generated along side with the compiled ``*.css`` file. This allows to\ndebug style sheet errors much easier.\n\nWith this tool, you can safely remove your Ruby installations \"Compass\"\nand \"SASS\" from your Django projects. You neither need any directory\n\"watching\" daemons based on node.js.\n\nProject's Home\n--------------\n\nOn GitHub:\n\nhttps://github.com/jrief/django-sass-processor\n\nPlease use the issue tracker to report bugs or propose new features.\n\nInstallation\n------------\n\n::\n\n    pip install libsass django-compressor django-sass-processor\n\n``django-compressor`` is required only for offline compilation, when\nusing the command ``manage.py compilescss``.\n\n``libsass`` is not required on the production environment, if SASS/SCSS\nfiles have been precompiled and deployed using offline compilation.\n\nConfiguration\n-------------\n\nIn ``settings.py`` add to:\n\n.. code:: python\n\n    INSTALLED_APPS = [\n        ...\n        'sass_processor',\n        ...\n    ]\n\nOptionally, add a list of additional search paths, the SASS compiler may\nexamine when using the ``@import \"...\";`` statement in SASS/SCSS files:\n\n.. code:: python\n\n    import os\n\n    SASS_PROCESSOR_INCLUDE_DIRS = [\n        os.path.join(PROJECT_PATH, 'extra-styles/scss'),\n        os.path.join(PROJECT_PATH, 'node_modules'),\n    ]\n\nAdditionally, **django-sass-processor** will traverse all installed\nDjango apps (``INSTALLED_APPS``) and look into their static folders. If\nany of them contain a file matching the regular expression pattern\n``^_.+\\.(scss|sass)$`` (read: filename starts with an underscore and is\nof type ``scss`` or ``sass``), then that app specific static folder is\nadded to the **libsass** include dirs. This feature can be disabled in\nyour settings with:\n\n.. code:: python\n\n    SASS_PROCESSOR_AUTO_INCLUDE = False\n\nIf inside of your SASS/SCSS files, you also want to import (using\n``@import \"path/to/scssfile\";``) files which do not start with an\nunderscore, then you can configure another Regex pattern in your\nsettings, for instance:\n\n.. code:: python\n\n    SASS_PROCESSOR_INCLUDE_FILE_PATTERN = r'^.+\\.scss$'\n\nwill look for all files of type ``scss``. Remember that SASS/SCSS files\nwhich start with an underscore, are intended to be imported by other\nSASS/SCSS files, while files starting with a letter or number are\nintended to be included by the HTML tag\n``<link href=\"{% sass_src 'path/to/file.scss' %}\" ...>``.\n\nDuring development, or when ``SASS_PROCESSOR_ENABLED = True``, the\ncompiled file is placed into the folder referenced by\n``SASS_PROCESSOR_ROOT`` (if unset, this setting defaults to\n``STATIC_ROOT``). Having a location outside of the working directory\nprevents to pollute your local ``static/css/...`` directories with\nauto-generated files. Therefore assure, that this directory is writable\nby the Django runserver.\n\n**django-sass-processor** is shipped with a special finder, to locate\nthe generated ``*.css`` files in the directory referred by\n``SASS_PROCESSOR_ROOT`` (or, if unset ``STATIC_ROOT``). Just add it to\nyour ``settings.py``. If there is no ``STATICFILES_FINDERS`` in your\n``settings.py`` don't forget to include the **Django** `default\nfinders <https://docs.djangoproject.com/en/stable/ref/settings/#std:setting-STATICFILES_FINDERS>`__.\n\nIf the directory referred by ``SASS_PROCESSOR_ROOT`` does not exist,\nthen **django-sass-processor** creates it. This does does not apply, if\n``SASS_PROCESSOR_ROOT`` is unset and hence defaults to ``STATIC_ROOT``.\nTherefore it is a good idea to otherwise use\n``SASS_PROCESSOR_ROOT = STATIC_ROOT`` in your ``settings.py``.\n\n.. code:: python\n\n    STATICFILES_FINDERS = [\n        'django.contrib.staticfiles.finders.FileSystemFinder',\n        'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n        'sass_processor.finders.CssFinder',\n        ...\n    ]\n\nFine tune SASS compiler parameters in ``settings.py``.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nInteger ``SASS_PRECISION`` sets floating point precision for output css.\nlibsass' default is ``5``. Note: **bootstrap-sass** requires ``8``,\notherwise various layout problems *will* occur.\n\n.. code:: python\n\n    SASS_PRECISION = 8\n\n``SASS_OUTPUT_STYLE`` sets coding style of the compiled result, one of\n``compact``, ``compressed``, ``expanded``, or ``nested``. Default is\n``nested`` for ``DEBUG`` and ``compressed`` in production.\n\nNote: **libsass-python** 0.8.3 has `problem encoding result while saving\non Windows <https://github.com/dahlia/libsass-python/pull/82>`__, the\nissue is already fixed and will be included in future ``pip`` package\nrelease, in the meanwhile avoid ``compressed`` output style.\n\n.. code:: python\n\n    SASS_OUTPUT_STYLE = 'compact'\n\nJinja2 support\n~~~~~~~~~~~~~~\n\n``sass_processor.jinja2.ext.SassSrc`` is a Jinja2 extension. Add it to\nyour Jinja2 environment to enable the tag ``sass_src``, there is no need\nfor a ``load`` tag. Example of how to add your Jinja2 environment to\nDjango:\n\nIn ``settings.py``:\n\n.. code:: python\n\n    TEMPLATES = [{\n        'BACKEND': 'django.template.backends.jinja2.Jinja2',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'environment': 'yourapp.jinja2.environment'\n        },\n        ...\n    }]\n\nMake sure to add the default template backend, if you're still using\nDjango templates elsewhere. This is covered in the `Upgrading templates\ndocumentation <https://docs.djangoproject.com/en/stable/ref/templates/upgrading/>`__.\n\nIn ``yourapp/jinja2.py``:\n\n.. code:: python\n\n    # Include this for Python 2.\n    from __future__ import absolute_import\n\n    from jinja2 import Environment\n\n\n    def environment(**kwargs):\n        extensions = [] if 'extensions' not in kwargs else kwargs['extensions']\n        extensions.append('sass_processor.jinja2.ext.SassSrc')\n        kwargs['extensions'] = extensions\n\n        return Environment(**kwargs)\n\nIf you want to make use of the ``compilescss`` command, then you will\nalso have to add the following to your settings:\n\n.. code:: python\n\n    from yourapp.jinja2 import environment\n\n    COMPRESS_JINJA2_GET_ENVIRONMENT = environment\n\nUsage\n-----\n\nIn your Django templates\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: django\n\n    {% load sass_tags %}\n\n    <link href=\"{% sass_src 'myapp/css/mystyle.scss' %}\" rel=\"stylesheet\" type=\"text/css\" />\n\nThe above template code will be rendered as HTML\n\n.. code:: html\n\n    <link href=\"/static/myapp/css/mystyle.css\" rel=\"stylesheet\" type=\"text/css\" />\n\nYou can safely use this templatetag inside a Sekizai's\n``{% addtoblock \"css\" %}`` statement.\n\nIn Media classes or properties\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIn Python code, you can access the API of the SASS processor directly.\nThis for instance is useful in Django's admin or form framework.\n\n.. code:: python\n\n    from sass_processor.processor import sass_processor\n\n    class SomeAdminOrFormClass(...):\n        ...\n        class Media:\n             css = {\n                'all': [sass_processor('myapp/css/mystyle.scss')],\n            }\n\nOffline compilation\n-------------------\n\nIf you want to precompile all occurrences of your SASS/SCSS files for\nthe whole project, on the command line invoke:\n\n.. code:: shell\n\n    ./manage.py compilescss\n\nThis is useful for preparing production environments, where SASS/SCSS\nfiles can't be compiled on the fly.\n\nTo simplify the deployment, the compiled ``*.css`` files are stored\nside-by-side with their corresponding SASS/SCSS files. After compiling\nthe files run\n\n.. code:: shell\n\n    ./manage.py collectstatic\n\nas you would in a normal deployment.\n\nIn case you don't want to expose the SASS/SCSS files in a production\nenvironment, deploy with:\n\n.. code:: shell\n\n    ./manage.py collectstatic --ignore=*.scss\n\nTo get rid of the compiled ``*.css`` files in your local static\ndirectories, simply reverse the above command:\n\n.. code:: shell\n\n    ./manage.py compilescss --delete-files\n\nThis will remove all occurrences of previously generated ``*.css``\nfiles.\n\nOr you may compile results to the ``SASS_PROCESSOR_ROOT`` directory\ndirecty (if not specified - to ``STATIC_ROOT``):\n\n.. code:: shell\n\n    ./manage.py compilescss --use-processor-root\n\nCombine with ``--delete-files`` switch to purge results from there.\n\nIf you use an alternative templating engine set its name in ``--engine``\nargument. Currently ``django`` and ``jinja2`` are supported, see\n`django-compressor\ndocumentation <http://django-compressor.readthedocs.org/en/latest/>`__\non how to set up ``COMPRESS_JINJA2_GET_ENVIRONMENT`` to configure jinja2\nengine support.\n\nDuring offline compilation **django-sass-processor** parses all Python\nfiles and looks for invocations of\n``sass_processor('path/to/sassfile.scss')``. Therefore the string\nspecifying the filename must be hard coded and shall not be concatenated\nor being somehow generated.\n\nAlternative templates\n~~~~~~~~~~~~~~~~~~~~~\n\nBy default, **django-sass-processor** will locate SASS/SCSS files from\n.html templates, but you can extend or override this behavior in your\nsettings with:\n\n.. code:: python\n\n    SASS_TEMPLATE_EXTS = ['.html','.jade']\n\nConfigure SASS variables through settings.py\n--------------------------------------------\n\nIn SASS, a nasty problem is to set the correct include paths for icons\nand fonts. Normally this is done through a ``_variables.scss`` file, but\nthis inhibits a configuration through your projects ``settings.py``.\n\nTo avoid the need for duplicate configuration settings,\n**django-sass-processor** offers a SASS function to fetch any arbitrary\nconfiguration directive from the project's ``settings.py``. This is\nspecially handy to set the include path of your Glyphicons font\ndirectory. Assume, Bootstrap-SASS has been installed using:\n\n.. code:: shell\n\n    npm install bootstrap-sass\n\nthen locate the directory named ``node_modules`` and add it to your\nsettings, so that your fonts are accessible through the Django's\n``django.contrib.staticfiles.finders.FileSystemFinder``:\n\n.. code:: python\n\n    STATICFILES_DIRS = [\n        ...\n        ('node_modules', '/path/to/your/project/node_modules/'),\n        ...\n    ]\n\n    NODE_MODULES_URL = STATIC_URL + 'node_modules/'\n\nWith the SASS function ``get-setting``, it now is possible to override\nany SASS variable with a value configured in the project's\n``settings.py``. For the Glyphicons font search path, add this to your\n``_variables.scss``:\n\n::\n\n    $icon-font-path: unquote(get-setting(NODE_MODULES_URL) + \"bootstrap-sass/assets/fonts/bootstrap/\");\n\nand ``@import \"variables\";`` whenever you need Glyphicons. You then can\nsafely remove any font references, such as\n``<link href=\"/path/to/your/fonts/bootstrap/glyphicons-whatever.ttf\" ...>``\nfrom you HTML templates.\n\nDevelopment\n-----------\n\nTo run the tests locally, clone the repository, create a new virtualenv,\nactivate it and then run these commands:\n\n.. code:: shell\n\n    cd django-sass-processor\n    pip install tox\n    tox\n\nChangelog\n---------\n\n-  0.5.5\n-  Create directory ``SASS_PROCESSOR_ROOT`` if it does not exist.\n\n-  0.5.4\n-  Added unit tests and continuous integration to the project.\n\n-  0.5.3\n-  Fixed compilescss: Did not find calls of sass\\_processor within a\n   dict, list or tuple\n\n-  0.5.2\n-  Fixed Python 3 incompatibility. Open files as binaries, since they\n   may contain unicode characters.\n\n-  0.5.1\n-  Add ``APPS_INCLUDE_DIRS`` to the SASS include path.\n\n-  0.5.0\n-  SASS/SCSS files can also be referenced in pure Python files, for\n   instance in ``Media`` class or ``media`` property definitions.\n-  The SASS processor will look for potential include directories, so\n   that the ``@import \"...\"`` statement also works for SASS files\n   located in other Django apps.\n\n-  0.4.0 - 0.4.4\n-  Refactored the sass processor into a self-contained class\n   ``SassProcessor``, which can be accessed through an API, the Jinja2\n   template engine and the existing templatetag.\n\n-  0.3.5\n-  Added Jinja2 support, see `Jinja2 support <#jinja2-support>`__.\n\n-  0.3.4\n-  Fixed: ``get_template_sources()`` in Django-1.9 returns Objects\n   rather than strings.\n-  In command, use ``ArgumentParser`` rather than ``OptionParser``.\n\n-  0.3.1...0.3.3\n-  Changed the build process in ``setup.py``.\n\n-  0.3.0\n-  Compatible with Django 1.8+.\n-  bootstrap3-sass ready: appropriate floating point precision (8) can\n   be set in ``settings.py``.\n-  Offline compilation results may optionally be stored in\n   ``SASS_PROCESSOR_ROOT``.\n\n-  0.2.6\n-  Hotfix: added SASS function ``get-setting`` also to offline compiler.\n\n-  0.2.5\n-  Compatible with Python3\n-  Replaced ``SortedDict`` with ``OrderedDict`` to be prepared for\n   Django-1.9\n-  Raise a ``TemplateSyntax`` error, if a SASS ``@include \"...\"`` fails\n   to find the file.\n-  Added SASS function ``get-setting`` to fetch configuration directives\n   from ``settings.py``.\n\n-  0.2.4\n-  Forcing compiled unicode to bytes, since 'Font Awesome' uses Unicode\n   Private Use Area (PUA) and hence implicit conversion on\n   ``fh.write()`` failed.\n\n-  0.2.3\n-  Allow for setting template extensions and output style.\n-  Force Django to calculate template\\_source\\_loaders from\n   TEMPLATE\\_LOADERS settings, by asking to find a dummy template.\n\n-  0.2.0\n-  Removed dependency to **django-sekizai** and **django-classy-tags**.\n   It now can operate in stand-alone mode. Therefore the project has\n   been renamed to **django-sass-processor**.\n\n-  0.1.0\n-  Initial revision named **django-sekizai-processors**, based on a\n   preprocessor for the Sekizai template tags ``{% addtoblock %}``.\n\n.. |Build Status| image:: https://travis-ci.org/jrief/django-sass-processor.svg\n   :target: https://travis-ci.org/jrief/django-sass-processor\n.. |PyPI| image:: https://img.shields.io/pypi/pyversions/django-sass-processor.svg\n   :target: \n.. |PyPI version| image:: https://img.shields.io/pypi/v/django-sass-processor.svg\n   :target: https://https://pypi.python.org/pypi/django-sass-processor\n.. |PyPI| image:: https://img.shields.io/pypi/l/django-sass-processor.svg\n   :target: \n.. |Twitter Follow| image:: https://img.shields.io/twitter/follow/shields_io.svg?style=social&label=Follow&maxAge=2592000\n   :target: https://twitter.com/jacobrief\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jrief/django-sass-processor",
    "keywords": "",
    "license": "LICENSE-MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-sass-processor",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/django-sass-processor/",
    "release_url": "https://pypi.org/project/django-sass-processor/0.5.5/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "SASS processor to compile SCSS files into *.css, while rendering, or offline.",
    "version": "0.5.5"
  },
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b4b63aba46641c7718b03d29a644e296",
          "sha256": "e3cc9d4396151ee2cbfd01797ac4c51352642409ccccc7a58ed2a6f93158affe"
        },
        "downloads": 1354,
        "filename": "django-sass-processor-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b4b63aba46641c7718b03d29a644e296",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13333,
        "upload_time": "2015-02-16T00:04:17",
        "url": "https://files.pythonhosted.org/packages/eb/6a/378fef2f6329da698eec3b39495cb571e528fb037a80c60431aaa79d9779/django-sass-processor-0.2.2.tar.gz"
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b7cc7ba402fd0e9825555c931bbe0529",
          "sha256": "91a5c4cdf1f5e304613306d2b52f44b5417b50f3aa6994a12139722831dd00e4"
        },
        "downloads": 1140,
        "filename": "django-sass-processor-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b7cc7ba402fd0e9825555c931bbe0529",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13652,
        "upload_time": "2015-06-05T20:13:29",
        "url": "https://files.pythonhosted.org/packages/d4/38/e3dd1fbc90f6336f3cb40258a8e18c99eb748b119a7314adc000016deedf/django-sass-processor-0.2.3.tar.gz"
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "867a639925c1b0ccc8a419691f46d499",
          "sha256": "51ab03d0b61ecc8cde2583f80dabc3c669c6b2fe010bdbf7c333dfd8ba4e25d2"
        },
        "downloads": 4228,
        "filename": "django-sass-processor-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "867a639925c1b0ccc8a419691f46d499",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14000,
        "upload_time": "2015-06-16T09:50:28",
        "url": "https://files.pythonhosted.org/packages/07/7e/cc797f7fc2ade1531e14c3c21d17103a02b0197eb2c6a6e21476ca1b6bc1/django-sass-processor-0.2.4.tar.gz"
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5a2ee3a317fc7ca6e4309f8c6756797d",
          "sha256": "590c86f57ef45148d46e4cb901f475f71752df76bf58036a7bbd291374418b76"
        },
        "downloads": 676,
        "filename": "django-sass-processor-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5a2ee3a317fc7ca6e4309f8c6756797d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12502,
        "upload_time": "2015-10-13T08:35:56",
        "url": "https://files.pythonhosted.org/packages/ee/b8/71c05e37d8e405163e37598866ae2ac50c878dc6c7421e8469c8c70e8a8e/django-sass-processor-0.2.5.tar.gz"
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dd440ca2572fcb3c11ee3365894b6cc6",
          "sha256": "f704b384f3bc3fa0d89a618e89bfd61dea5b79c92b322f26d94a39ee0e7f879d"
        },
        "downloads": 695,
        "filename": "django-sass-processor-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "dd440ca2572fcb3c11ee3365894b6cc6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15364,
        "upload_time": "2015-10-17T16:27:54",
        "url": "https://files.pythonhosted.org/packages/ae/6a/3c1d4f6aaf0d8d03f3a63330bad6e4e3d0d1d1e2e46da76c7156f0079d81/django-sass-processor-0.2.6.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "43532852cdb380d7c3c87f006d12a1b8",
          "sha256": "6a807485f7693c943fc5a56ea8bdc0b5432e60700a31e4b760d767cfbc3a7979"
        },
        "downloads": 2437,
        "filename": "django-sass-processor-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "43532852cdb380d7c3c87f006d12a1b8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14964,
        "upload_time": "2015-11-06T07:50:43",
        "url": "https://files.pythonhosted.org/packages/48/66/3eea59c760ba9c44e70f24e2fba6351faa5858b1f7c96a3db7b7fec7f956/django-sass-processor-0.3.0.tar.gz"
      }
    ],
    "0.3.1": [],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bbd8f2b5c936bb32b93b6dc8f8353748",
          "sha256": "4c3a52e2a2363a8c2343138c60ab74c2be84fbfce32852bebbc1beba2ecc101d"
        },
        "downloads": 909,
        "filename": "django-sass-processor-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bbd8f2b5c936bb32b93b6dc8f8353748",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15121,
        "upload_time": "2015-12-18T09:03:59",
        "url": "https://files.pythonhosted.org/packages/05/98/ba2b5d60a41e85363d0590bedee1158b054498ff222059f3013b3ddb8364/django-sass-processor-0.3.2.tar.gz"
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f6d9c240c69d00c924e2bb6b2501d403",
          "sha256": "dd56d41826fca17f80c174592dd8da56151c67965bc2de5f06aa35a982df8b61"
        },
        "downloads": 1111,
        "filename": "django-sass-processor-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f6d9c240c69d00c924e2bb6b2501d403",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18166,
        "upload_time": "2015-12-25T18:17:24",
        "url": "https://files.pythonhosted.org/packages/ed/80/b945b1e02e69bdae08039518c4ba42be693b8ceb9515baf35d8ce4dc0d8e/django-sass-processor-0.3.3.tar.gz"
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b89a549ec1351bce8195b3cc60135e32",
          "sha256": "5554f38d6c4606b924728973248dd5080ab624c0278f5cb63071b18243f40946"
        },
        "downloads": 1489,
        "filename": "django-sass-processor-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b89a549ec1351bce8195b3cc60135e32",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19037,
        "upload_time": "2016-02-23T13:58:33",
        "url": "https://files.pythonhosted.org/packages/39/99/7f467dbc2882e25c42aac881a1ac5009517b4c8fafbd1c89178ddcfd3e46/django-sass-processor-0.3.4.tar.gz"
      }
    ],
    "0.3.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8d22b5ea357f2c0c9c75a53afa052657",
          "sha256": "93aadd7cf04198a8f8a906f29fc3def12a19f0ceb9a062b5bc5a32debf52997f"
        },
        "downloads": 795,
        "filename": "django-sass-processor-0.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8d22b5ea357f2c0c9c75a53afa052657",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13158,
        "upload_time": "2016-05-03T14:35:44",
        "url": "https://files.pythonhosted.org/packages/95/23/3318c9295571500c7ba273225ac048f740ab740be400cd7a3e672677b23d/django-sass-processor-0.3.5.tar.gz"
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "51762d908593a79931efb9132280df36",
          "sha256": "ed86ba9ebd7bc87ca45c1a9e8e9c23ac03b6e25c3575989d4bb18ad9483cb408"
        },
        "downloads": 425,
        "filename": "django-sass-processor-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "51762d908593a79931efb9132280df36",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17016,
        "upload_time": "2016-07-07T11:53:51",
        "url": "https://files.pythonhosted.org/packages/0e/97/09a22c98f9ccad7051e207a975a41a4459dcaf756892b7a92b2901b6f079/django-sass-processor-0.4.0.tar.gz"
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "570c1da76706490af242fd30d4d7f00d",
          "sha256": "da0334df772291e1e17d0afd11cb82ec050a472051a05831d078459129e9646b"
        },
        "downloads": 133,
        "filename": "django-sass-processor-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "570c1da76706490af242fd30d4d7f00d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16406,
        "upload_time": "2016-07-19T05:40:24",
        "url": "https://files.pythonhosted.org/packages/42/8e/a930dcc5c1e11dedcb284cb073b5668702e4c7fa6960657f3e63089c6d32/django-sass-processor-0.4.1.tar.gz"
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b820e78d15db06f81cf1fe9c8e94ffe0",
          "sha256": "4287ad22efdb8c690aa976203b30338198c28178a4b9a888fc151e76223d62e4"
        },
        "downloads": 134,
        "filename": "django-sass-processor-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b820e78d15db06f81cf1fe9c8e94ffe0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21251,
        "upload_time": "2016-07-20T07:28:25",
        "url": "https://files.pythonhosted.org/packages/0b/7d/0cdaa03c620294470aae2108b229768e59821379e86f1c70cb1b0feef91f/django-sass-processor-0.4.2.tar.gz"
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4ef85d1c8ffbc5c54cc3af9cb2e76084",
          "sha256": "88972d2970e20b2b8b32f3813805668187bbd01423cbc0571ef5555bc2f2d51d"
        },
        "downloads": 128,
        "filename": "django-sass-processor-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4ef85d1c8ffbc5c54cc3af9cb2e76084",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21205,
        "upload_time": "2016-07-21T08:22:00",
        "url": "https://files.pythonhosted.org/packages/d6/78/6872b216085e6a9127a1fa09f9075602a9d430035d8901a01e428f70dad5/django-sass-processor-0.4.3.tar.gz"
      }
    ],
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ec5ce9c4f01e48a384f806ce4b706351",
          "sha256": "44e1d112cdcc52435e221d14442ae75cae85639e3a95f9bc13f4340b7687732f"
        },
        "downloads": 388,
        "filename": "django-sass-processor-0.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ec5ce9c4f01e48a384f806ce4b706351",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21186,
        "upload_time": "2016-07-21T08:39:11",
        "url": "https://files.pythonhosted.org/packages/02/61/d7a463abf9f89edcbaa012dad0a37b46c9726db671f3b16e4c61ee45e03a/django-sass-processor-0.4.4.tar.gz"
      }
    ],
    "0.4.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cff97a1bb4684fbc84d383b77c8673e0",
          "sha256": "4e99b7a035123d7f15732b7879e981ea832d90c4cd8daa2dac742e94d1da9995"
        },
        "downloads": 130,
        "filename": "django-sass-processor-0.4.5.tar.gz",
        "has_sig": false,
        "md5_digest": "cff97a1bb4684fbc84d383b77c8673e0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16421,
        "upload_time": "2016-07-24T06:48:22",
        "url": "https://files.pythonhosted.org/packages/e9/a9/5176c21c64f82b519929e4cc40445f2576691e6e7f6e371bca89c0650b72/django-sass-processor-0.4.5.tar.gz"
      }
    ],
    "0.4.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "21027ece94c650a6e35a9e24283b8c3d",
          "sha256": "7e0dbac07475ad760cee6d3c392b8a7ab8dd20d3eac4fb0780c73826c8a93de8"
        },
        "downloads": 917,
        "filename": "django-sass-processor-0.4.6.tar.gz",
        "has_sig": false,
        "md5_digest": "21027ece94c650a6e35a9e24283b8c3d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21678,
        "upload_time": "2016-07-25T06:47:04",
        "url": "https://files.pythonhosted.org/packages/b3/69/d71969ae67497866fa9573cbb07d5d070b37c31044559776d0521dda4339/django-sass-processor-0.4.6.tar.gz"
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5b2ff1c41206b9f13ceb22a71878cf33",
          "sha256": "628673a5b81cb4b743c75935934b4263a5178ce89769707cc5030a44b5f62180"
        },
        "downloads": 95,
        "filename": "django-sass-processor-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5b2ff1c41206b9f13ceb22a71878cf33",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20751,
        "upload_time": "2016-09-29T15:33:51",
        "url": "https://files.pythonhosted.org/packages/1c/27/5c2534578589f8a7994c7be3b3e581ffa3f0b708bb678e212698cee49d6b/django-sass-processor-0.5.0.tar.gz"
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c4a17faa7eea73c8b7241a7b3949bb53",
          "sha256": "61295e92966d32cd8f5bd3686e0d0ddd6e07c6d2dd0a0ab90793d762eff77aad"
        },
        "downloads": 1068,
        "filename": "django-sass-processor-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c4a17faa7eea73c8b7241a7b3949bb53",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25056,
        "upload_time": "2016-09-29T16:04:32",
        "url": "https://files.pythonhosted.org/packages/e7/a9/06fd6dd3ed5a43951f942f6167f5f266c66403a833d95c4f48c19b1c46e4/django-sass-processor-0.5.1.tar.gz"
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "227644f4ffa642f58c67b328b2d511a0",
          "sha256": "b687347d3a8cb40b74f0129a88008c8a2ef32f7189e71ccf30defe7517e2b5f3"
        },
        "downloads": 184,
        "filename": "django-sass-processor-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "227644f4ffa642f58c67b328b2d511a0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25066,
        "upload_time": "2016-11-15T20:15:32",
        "url": "https://files.pythonhosted.org/packages/ad/a7/59748d35c9063c32d9d65aecaba01c40dd76bd5267b1f162235d1e4b243d/django-sass-processor-0.5.2.tar.gz"
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0818f5d11ea13afea4bba4d02e5fbd05",
          "sha256": "133018f02e99ace98a6f66d524e38b92a5f1ae395eea711076297a929163a7a0"
        },
        "downloads": 398,
        "filename": "django-sass-processor-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0818f5d11ea13afea4bba4d02e5fbd05",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25141,
        "upload_time": "2016-12-11T02:40:01",
        "url": "https://files.pythonhosted.org/packages/bc/b4/d2813cad51e6221db2cfff03e55c3db3d531bb1c1da2fe25044a4d6459d4/django-sass-processor-0.5.3.tar.gz"
      }
    ],
    "0.5.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0cb296d8b27a46a0113a09b568dd0d2f",
          "sha256": "e427831fdae0665cc5dc5d4f810cd3941f7d57d6d782274b307c914c62920d16"
        },
        "downloads": 224,
        "filename": "django-sass-processor-0.5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0cb296d8b27a46a0113a09b568dd0d2f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25164,
        "upload_time": "2017-02-23T13:12:02",
        "url": "https://files.pythonhosted.org/packages/44/5e/ef4cae1e8600f0517da129a6616dae3cb5a24c5ba4050382c219b2798be3/django-sass-processor-0.5.4.tar.gz"
      }
    ],
    "0.5.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ff09f3a7c63f31f6c9b89ccabe571086",
          "sha256": "09a8d9db466c7011a7ca6a61af527c96e13c701eab13e36a4499e29965daa0ad"
        },
        "downloads": 0,
        "filename": "django-sass-processor-0.5.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ff09f3a7c63f31f6c9b89ccabe571086",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18446,
        "upload_time": "2017-09-12T09:50:37",
        "url": "https://files.pythonhosted.org/packages/77/ca/757257e0e29f8ec9b7cabbfe4e43cbae39994f06927216ea03107ee0ba4a/django-sass-processor-0.5.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ff09f3a7c63f31f6c9b89ccabe571086",
        "sha256": "09a8d9db466c7011a7ca6a61af527c96e13c701eab13e36a4499e29965daa0ad"
      },
      "downloads": 0,
      "filename": "django-sass-processor-0.5.5.tar.gz",
      "has_sig": false,
      "md5_digest": "ff09f3a7c63f31f6c9b89ccabe571086",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 18446,
      "upload_time": "2017-09-12T09:50:37",
      "url": "https://files.pythonhosted.org/packages/77/ca/757257e0e29f8ec9b7cabbfe4e43cbae39994f06927216ea03107ee0ba4a/django-sass-processor-0.5.5.tar.gz"
    }
  ]
}