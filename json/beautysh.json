{
  "info": {
    "author": "Bernardo Meurer",
    "author_email": "meurerbernardo@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Text Processing :: Filters",
      "Topic :: Text Processing :: Linguistic",
      "Topic :: Utilities"
    ],
    "description": "Beautysh\r\n========\r\n\r\nThis program takes upon itself the hard task of beautifying Bash scripts\r\n(yeesh). Processing Bash scripts is not trivial, they aren't like C or\r\nJava programs \u2014 they have a lot of ambiguous syntax, and (shudder) you\r\ncan use keywords as variables. Years ago, while testing the first\r\nversion of this program, I encountered this example:\r\n\r\n.. code:: shell\r\n\r\n    done=3;echo done;done\r\n\r\nSame name, but three distinct meanings (sigh). The Bash interpreter can\r\nsort out this perversity, but I decided not to try to recreate the Bash\r\ninterpreter to beautify a script. This means there will be some border\r\ncases this Python program won't be able to process. But in tests with\r\nlarge Linux system Bash scripts, its error-free score was ~99%.\r\n\r\nInstallation\r\n------------\r\n\r\nIf you have ``pip`` set up you can do\r\n\r\n.. code:: shell\r\n\r\n    pip install beautysh\r\n\r\nor clone the repo and install:\r\n\r\n.. code:: shell\r\n\r\n    git clone https://github.com/bemeurer/beautysh\r\n    cd beautysh\r\n    python setup.py install\r\n\r\nUsage\r\n-----\r\n\r\nYou can call Beautysh from the command line such as\r\n\r\n.. code:: shell\r\n\r\n    beautysh.py -f file1.sh file2.sh file3.sh\r\n\r\nin which case it will beautify each one of the files.\r\n\r\nAvailable flags are:\r\n\r\n+---------------------+----------+-------------------------------------------+------------------------+\r\n| Flag                | Short    | Meaning                                   | Usage                  |\r\n+=====================+==========+===========================================+========================+\r\n| ``--files``         | ``-f``   | Files to beautify                         | ``-f foo.sh bar.sh``   |\r\n+---------------------+----------+-------------------------------------------+------------------------+\r\n| ``--indent-size``   | ``-i``   | Number of spaces to use as indentation    | ``-i 4``               |\r\n+---------------------+----------+-------------------------------------------+------------------------+\r\n| ``--backup``        | ``-b``   | Create a backup file before beautifying   | ``-b``                 |\r\n+---------------------+----------+-------------------------------------------+------------------------+\r\n| ``--tab``           | ``-t``   | Use tabs instead of spaces                | ``-t``                 |\r\n+---------------------+----------+-------------------------------------------+------------------------+\r\n\r\nYou can use ``-`` as an argument to ``-f`` and beautysh will use stdin\r\nas it's source and stdout as it's sink\r\n\r\n.. code:: shell\r\n\r\n    beautysh.py - < infile.sh > outfile.sh\r\n\r\nYou can also call beautysh as a module:\r\n\r\n.. code:: shell\r\n\r\n    #!/usr/bin/env python\r\n    # -*- coding: utf-8 -*-\r\n\r\n    from beautysh import Beautysh\r\n\r\n    [ ... ]\r\n\r\n    result,error = Beautysh().beautify_string(source)\r\n\r\nAs written, beautysh can beautify large numbers of Bash scripts when\r\ncalled from a variety of means,including a Bash script:\r\n\r\n.. code:: shell\r\n\r\n    #!/bin/sh\r\n\r\n    for path in `find /path -name '*.sh'`\r\n    do\r\n       beautysh.py -f $path\r\n    done\r\n\r\nAs well as the more obvious example:\r\n\r\n.. code:: shell\r\n\r\n    $ beautysh.py -f *.sh\r\n\r\n    **CAUTION**: Because Beautysh overwrites all the files submitted to\r\n    it, this could have disastrous consequences if the files include\r\n    some of the increasingly common Bash scripts that have appended\r\n    binary content (a regime where Beautysh has undefined behaviour ).\r\n    So please \u2014 back up your files, and don't treat Beautysh as a\r\n    harmless utility. Even if that is true most of the time.\r\n\r\nBeautysh handles Bash here-docs with care(and there are probably some\r\nborder cases it doesn't handle). The basic idea is that the originator\r\nknew what format he wanted in the here-doc, and a beautifier shouldn't\r\ntry to outguess him. So Beautysh does all it can to pass along the\r\nhere-doc content unchanged:\r\n\r\n.. code:: shell\r\n\r\n    if true\r\n    then\r\n\r\n       echo \"Before here-doc\"\r\n\r\n       # Insert 2 lines in file, then save.\r\n       #--------Begin here document-----------#\r\n    vi $TARGETFILE <<x23LimitStringx23\r\n    i\r\n    This is line 1 of the example file.\r\n    This is line 2 of the example file.\r\n    ^[\r\n    ZZ\r\n    x23LimitStringx23\r\n       #----------End here document-----------#\r\n\r\n       echo \"After here-doc\"\r\n\r\n    fi\r\n\r\nSpecial comments ``@formatter:off`` and ``@formatter:on`` are available\r\nto disable formatting around a block of statements.\r\n\r\n.. code:: shell\r\n\r\n    # @formatter:off\r\n    command \\\r\n        --option1 \\\r\n            --option2 \\\r\n                --option3 \\\r\n    # @formatter:on\r\n\r\nThis takes inspiration from the Eclipse feature.\r\n\r\n--------------\r\n\r\nOriginally written by `Paul\r\nLutus <http://arachnoid.com/python/beautify_bash_program.html>`__",
    "docs_url": null,
    "download_url": "https://github.com/bemeurer/beautysh/tarball/3.3",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/bemeurer/beautysh",
    "keywords": "beautify",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "beautysh",
    "platform": "",
    "project_url": "https://pypi.org/project/beautysh/",
    "release_url": "https://pypi.org/project/beautysh/3.3/",
    "requires_python": "",
    "summary": "A Bash beautifier for the masses.",
    "version": "3.3"
  },
  "releases": {
    "2.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "621ab0345629422131c66f664a402ab6",
          "sha256": "8477d1e94156b2d8d49372ec5a9965232ee9e47b0fab1773c4953f3517ce5dd6"
        },
        "downloads": 295,
        "filename": "beautysh-2.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "621ab0345629422131c66f664a402ab6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4844,
        "upload_time": "2016-02-02T03:59:03",
        "url": "https://files.pythonhosted.org/packages/f9/c1/2bf643e87bb4bf421d59bd44d8a5803610b4cdbde2a728c4ecfb52416a84/beautysh-2.2.2.tar.gz"
      }
    ],
    "3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "648d51d46f12cf81544375aab73afe26",
          "sha256": "84c5d9211d911595b169107f47fa4285182efe0301b22dd22c92f71fc69c4180"
        },
        "downloads": 93,
        "filename": "beautysh-3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "648d51d46f12cf81544375aab73afe26",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5127,
        "upload_time": "2016-09-27T02:02:05",
        "url": "https://files.pythonhosted.org/packages/d5/e1/100b9bd171c8632934a688e38e2b4de22b78c8ca1e4084850791a52e7296/beautysh-3.0.tar.gz"
      }
    ],
    "3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fa1a9498cbd0bafd2f39d2d870a580cc",
          "sha256": "0b2438e776f177f0b412aa002317fc3e0396aa907521b9289272f055bf39dd73"
        },
        "downloads": 260,
        "filename": "beautysh-3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fa1a9498cbd0bafd2f39d2d870a580cc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5156,
        "upload_time": "2016-09-27T02:32:45",
        "url": "https://files.pythonhosted.org/packages/55/c1/7153a46e1260a0c7bb1c6798a98fa1ac406f8b24f17f11888c1146b51f9b/beautysh-3.1.tar.gz"
      }
    ],
    "3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "35e3d69de90c7004beb159f93d093c86",
          "sha256": "f97cf15dac2ccd1a11b7fa748472229ea8d2e1f27dc1c23afa39cb8b94f3c7bb"
        },
        "downloads": 0,
        "filename": "beautysh-3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "35e3d69de90c7004beb159f93d093c86",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5190,
        "upload_time": "2017-06-12T15:42:10",
        "url": "https://files.pythonhosted.org/packages/a2/0d/eb95477c01b18c1f756904c11df40984685f3049fc0435509437090a8772/beautysh-3.2.tar.gz"
      }
    ],
    "3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cf63a40a573ad48428bcfd77b66d3b8a",
          "sha256": "52e4d49e2899f9c31b9d3e01b150dca4646afa8d862b0c24b56fe5208941fab6"
        },
        "downloads": 0,
        "filename": "beautysh-3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cf63a40a573ad48428bcfd77b66d3b8a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5394,
        "upload_time": "2017-06-13T13:47:21",
        "url": "https://files.pythonhosted.org/packages/d6/0c/f4f56578c974f84374a83b26df6a44b226adee93c36a0ba5149173971d20/beautysh-3.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "cf63a40a573ad48428bcfd77b66d3b8a",
        "sha256": "52e4d49e2899f9c31b9d3e01b150dca4646afa8d862b0c24b56fe5208941fab6"
      },
      "downloads": 0,
      "filename": "beautysh-3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "cf63a40a573ad48428bcfd77b66d3b8a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5394,
      "upload_time": "2017-06-13T13:47:21",
      "url": "https://files.pythonhosted.org/packages/d6/0c/f4f56578c974f84374a83b26df6a44b226adee93c36a0ba5149173971d20/beautysh-3.3.tar.gz"
    }
  ]
}