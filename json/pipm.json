{
  "info": {
    "author": "noortheen",
    "author_email": "jnoortheen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# pipm\n\nPython package management workflow using pip & requirements file as its metadata. (For the time being until `Pipfile` \nis mature enough or the `pipenv` is fast enough to use.)\n\n# Installation\n\nInstall from PyPI\n\n```\npip install pipm\n```\n\nOr Install directly from the GitHub\n\n```commandline\npip install -e git://github.com/jnoortheen/pipm.git@master#egg=pipm\n```\n\n# Usage\n\n1. install\n    - a wrapper around standard `pip install` command and accepts all the standard options\n    \n    Below are the things that `pipm` brings to the table\n    \n    1. Extra functionality\n        - when package names are given it will be saved to the requirements.txt file in the current directory.\n        If you have `requirements` directory structure with `base.txt` inside then that file will be used. Otherwise it \n        will create one in the current directory.\n        - when no package name is given then it is equivalent to `-r requirements.txt` and it will install all requirements\n        from the current directory\n    1. Additions options:\n        the below saves to file when package name given otherwise equivalent to passing requirements file name.\n        1. `--dev` - saves to development requirements\n        1. `--prod` - saves to production requirements\n        1. `--test` - saves to  testing requirements\n        1. `--env <name>` - if you have any special set of requirements that belong to a separate file you could pass the name here.\n        It will search for the matching one in the following pattern `<name>-requirements.txt` or \n        `requirements/<name>.txt` or `requirements-<name>.txt`\n\n1. uninstall \n    - a wrapper around standard `pip uninstall` command\n    - when uninstalling a package, this command also checks packages that are no longer required by any of the installed\n    packages and removes them\n    - ofcourse it removes the packages from `requirements` files\n\n1. update\n    - new command\n    - equivalent to calling `pip install` with `--upgrade` flag\n    - update a single package or the whole environment when no argument given.\n    \n    \n# Features\n\n1. Just a wrapper around the standard pip's `install` & `uninstall` command. So all the cli options will work\n1. Handles multiple `requirements` files\n \n# Testing\n\n- After installing `requirements` just run `fab test` from the root directory.\n\n``Note``: last tested with pip 9.0.1\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jnoortheen/pipm",
    "keywords": "easy_install distutils setuptools egg virtualenv requirements",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pipm",
    "platform": "",
    "project_url": "https://pypi.org/project/pipm/",
    "release_url": "https://pypi.org/project/pipm/0.6/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Wrapper around pip commands to auto save/delete requirements",
    "version": "0.6"
  },
  "releases": {
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9f601c120c38000a8ab2d58b76224a6c",
          "sha256": "d742b732ae5111bcc2c776ee8b58507c01af0e6be7964949f3dbe9cec33b5f85"
        },
        "downloads": 0,
        "filename": "pipm-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9f601c120c38000a8ab2d58b76224a6c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7307,
        "upload_time": "2017-09-14T17:44:52",
        "url": "https://files.pythonhosted.org/packages/fc/5b/0545aebd75275bfdaa161583d7a65ef3e8b436ad09caef2d2888773f18dc/pipm-0.5.tar.gz"
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "83fdfd3551b6cab04e5c30d352c151ee",
          "sha256": "5894c2e1c48d527e0181bd254bd8e150a1c740705dfbfe59e72f4a9e6dcb3d08"
        },
        "downloads": 0,
        "filename": "pipm-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "83fdfd3551b6cab04e5c30d352c151ee",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7324,
        "upload_time": "2017-09-14T18:39:51",
        "url": "https://files.pythonhosted.org/packages/00/9a/86903caba4517e3a4de82318dba9f358f153c313d4ed54de28232e34f3bc/pipm-0.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "83fdfd3551b6cab04e5c30d352c151ee",
        "sha256": "5894c2e1c48d527e0181bd254bd8e150a1c740705dfbfe59e72f4a9e6dcb3d08"
      },
      "downloads": 0,
      "filename": "pipm-0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "83fdfd3551b6cab04e5c30d352c151ee",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7324,
      "upload_time": "2017-09-14T18:39:51",
      "url": "https://files.pythonhosted.org/packages/00/9a/86903caba4517e3a4de82318dba9f358f153c313d4ed54de28232e34f3bc/pipm-0.6.tar.gz"
    }
  ]
}