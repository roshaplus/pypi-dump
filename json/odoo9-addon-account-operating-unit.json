{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Odoo",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Programming Language :: Python :: 2.7"
    ],
    "description": ".. image:: https://img.shields.io/badge/license-LGPLv3-blue.svg\n   :target: https://www.gnu.org/licenses/lgpl.html\n   :alt: License: LGPL-3\n\n===============================\nAccounting with Operating Units\n===============================\n\nThis module allows a company to manage the accounting based on Operating\nUnits (OU's).\n\n* The financial reports (Trial Balance, P&L, Balance Sheet), allow to report\n  the balances of one or more OU's.\n\n* If a company wishes to report Balance Sheet and P&L accounts based on\n  OU's, they should indicate at company level that the OU's are\n  self-balanced, and the corresponding Inter-Operating Unit clearing account.\n  The Chart of Accounts will always be balanced, for each Operating Unit.\n\n* A company considering Operating Unit as applicable to report only profits\n  and losses will not need to set the OU's as self-balanced.\n\n* The self-balancing of Operating Unit is ensured at the time of posting a\n  journal entry. In case that the journal involves posting of items in\n  separate Operating Units, new journal items will be created, using the\n  Inter-Operating Unit clearing account, to ensure that each OU is going to\n  be self-balanced for that journal entry.\n\n* Adds the Operating Unit (OU) to the invoice. A user can choose what OU to\n  create the invoice for.\n\n* Adds the Operating Unit (OU) to payments and payment methods. The operating\n  unit of a payment will be that of the payment method choosen.\n\n* Implements security rules at OU level to invoices, payments and journal\n  items.\n\n\nInstallation\n============\n\nNo specific installation requirements.\n\nConfiguration\n=============\n\nIf your company is required to generate a balanced balance sheet by\nOperating Unit you can specify at company level that Operating Units should\nbe self-balanced, and then indicate a self-balancing clearing account.\n\n1. Create an account \"Inter-OU Clearing\". It is a balance sheet account.\n\n2. Go to *Settings / Companies / Configuration* and Set the \"Operating Units\n   are self-balanced\" checkbox.\n\n   Then set the \"Inter-OU Clearing\"  account in \"Inter-Operating Unit\n   clearing account\" field.\n\n3. Go to *Accounting / Configuration / Accounting / Journals* and define, for\n   each Payment Method (journals of type cash or bank), the Operating Unit\n   that will be used in payments.\n\n\nUsage\n=====\n\n* Add the Operating Unit to invoices.\n\n* Report invoices by Operating Unit in *Accounting / Reporting*\n  *Business Intelligence / Invoices*\n\n* Add the Default Operating Unit to account move. Then all move lines will\n  by default adopt this Operating Unit.\n\n* Add Operating Units to the move lines.\n\n  If they differ across lines of the same move, and the OU's are\n  self-balanced, then additional move lines will be created so as to make\n  the move self-balanced from OU perspective.\n\n* In the menu *Accounting / Reporting / PDF Reports*, you can indicate the\n  Operating Units to report on, for the *Trial Balance*, *Balance Sheet*,\n  *Profit and Loss*, and *Financial Reports*.\n\n\n.. image:: https://odoo-community.org/website/image/ir.attachment/5784_f2813bd/datas\n   :alt: Try me on Runbot\n   :target: https://runbot.odoo-community.org/runbot/213/9.0\n\nKnown issues / Roadmap\n======================\n\n* The *General Ledger*, *Aged Partner Balance* reports do not support the\n  filter by Operating Unit. Basically due to lack of proper hooks in the\n  standard methods used by these reports, to introduce the ability to filter\n  by Operating Unit.\n\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues\n<https://github.com/OCA/operating-unit/issues>`_. In case of trouble, please\ncheck there if your issue has already been reported. If you spotted it first,\nhelp us smashing it by providing a detailed and welcomed feedback.\n\nCredits\n=======\n\nImages\n------\n\n* Odoo Community Association: `Icon <https://github.com/OCA/maintainer-tools/blob/master/template/module/static/description/icon.svg>`_.\n\nContributors\n------------\n\n* Eficent Business and IT Consulting Services S.L. <contact@eficent.com>\n* Jordi Ballester Alomar <jordi.ballester@eficent.com>\n* Aar\u00f3n Henr\u00edquez <ahenriquez@eficent.com>\n* Serpent Consulting Services Pvt. Ltd. <support@serpentcs.com>\n\nMaintainer\n----------\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nThis module is maintained by the OCA.\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\nTo contribute to this module, please visit https://odoo-community.org.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://www.eficent.com",
    "keywords": "",
    "license": "LGPL-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "odoo9-addon-account-operating-unit",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/odoo9-addon-account-operating-unit/",
    "release_url": "https://pypi.org/project/odoo9-addon-account-operating-unit/9.0.1.0.0.99.dev30/",
    "requires_python": "",
    "summary": "Introduces Operating Unit fields in invoices and Accounting Entries with clearing account",
    "version": "9.0.1.0.0.99.dev30"
  },
  "releases": {
    "9.0.1.0.0.99.dev30": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cef6071ab62ed5a26ab9e3825a39636c",
          "sha256": "7c8e9f1c599a9251629d27ff4f4fc9ccb19a1efd54c8cc2b29f063aa545a00c9"
        },
        "downloads": 0,
        "filename": "odoo9_addon_account_operating_unit-9.0.1.0.0.99.dev30-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "cef6071ab62ed5a26ab9e3825a39636c",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 43456,
        "upload_time": "2017-04-11T17:49:32",
        "url": "https://files.pythonhosted.org/packages/63/13/d75f3a09fea4e13514622c48bfcea22725eb4de076b7290aad2dae084157/odoo9_addon_account_operating_unit-9.0.1.0.0.99.dev30-py2-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "cef6071ab62ed5a26ab9e3825a39636c",
        "sha256": "7c8e9f1c599a9251629d27ff4f4fc9ccb19a1efd54c8cc2b29f063aa545a00c9"
      },
      "downloads": 0,
      "filename": "odoo9_addon_account_operating_unit-9.0.1.0.0.99.dev30-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "cef6071ab62ed5a26ab9e3825a39636c",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 43456,
      "upload_time": "2017-04-11T17:49:32",
      "url": "https://files.pythonhosted.org/packages/63/13/d75f3a09fea4e13514622c48bfcea22725eb4de076b7290aad2dae084157/odoo9_addon_account_operating_unit-9.0.1.0.0.99.dev30-py2-none-any.whl"
    }
  ]
}