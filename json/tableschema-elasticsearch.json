{
  "info": {
    "author": "Open Knowledge Foundation",
    "author_email": "info@okfn.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# tableschema-elasticsearch-py\n\n[![Travis](https://img.shields.io/travis/frictionlessdata/tableschema-elasticsearch-py/master.svg)](https://travis-ci.org/frictionlessdata/tableschema-elasticsearch-py)\n[![Coveralls](http://img.shields.io/coveralls/frictionlessdata/tableschema-elasticsearch-py/master.svg)](https://coveralls.io/r/frictionlessdata/tableschema-elasticsearch-py?branch=master)\n[![PyPi](https://img.shields.io/pypi/v/tableschema-elasticsearch-py.svg)](https://pypi.python.org/pypi/tableschema-elasticsearch-py)\n[![SemVer](https://img.shields.io/badge/versions-SemVer-brightgreen.svg)](http://semver.org/)\n[![Gitter](https://img.shields.io/gitter/room/frictionlessdata/chat.svg)](https://gitter.im/frictionlessdata/chat)\n\nGenerate and load ElasticSearch indexes based on JSON Table Schema descriptors.\n\n## Getting Started\n\n### Installation\n\n```bash\npip install tableschema-elasticsearch\n```\n\n### Storage\n\nPackage implements [Tabular Storage](https://github.com/frictionlessdata/jsontableschema-py#storage) interface.\n\n`elasticsearch` is used as the db wrapper. We can get storage this way:\n\n```python\nfrom elasticsearch import Elasticsearch\nfrom jsontableschema_sql import Storage\n\nengine = Elasticsearch()\nstorage = Storage(engine)\n```\n\nThen we could interact with storage ('buckets' are ElasticSearch indexes in this context):\n\n```python\nstorage.buckets # iterator over bucket names\nstorage.create('bucket', [(doc_type, descriptor)], \n               reindex=False,\n               always_recreate=False,\n               mapping_generator_cls=None)\n        # reindex will copy existing documents from an existing index with the same name (not implemented yet)\n        # always_recreate will always recreate an index, even if it already exists. default is to update mappings only.\n        # mapping_generator_cls allows customization of the generated mapping  \nstorage.delete('bucket')\nstorage.describe('bucket') # return descriptor, not implemented yet\nstorage.iter('bucket', doc_type=optional) # yield rows\nstorage.read('bucket', doc_type=optional) # return rows\nstorage.write('bucket', doc_type, rows, primary_key,\n              as_generator=False)\n        # primary_key is a list of field names which will be used to generate document ids \n```\n\nWhen creating indexes, we always create an index with a semi-random name and a matching alias that points to it. This allows us to decide whether to re-index documents whenever we're re-creating an index, or to discard the existing records.\n\n\n### Mappings\n\nWhen creating indexes, the tableschema types are converted to ES types and a mapping is generated for the index.\n\nSome special properties in the schema provide extra information for generating the mapping:\n - `array` types need also to have the `es:itemType` property which specifies the inner data type of array items.\n - `object` types need also to have the `es:schema` property which provides a tableschema for the inner document contained in that object (or have `es:enabled=false` to disable indexing of that field).\n\nExample:\n```json\n{\n  \"fields\": [\n    {\n      \"name\": \"my-number\", \n      \"type\": \"number\"\n    },\n    {\n      \"name\": \"my-array-of-dates\", \n      \"type\": \"array\",\n      \"es:itemType\": \"date\"\n    },\n    {\n      \"name\": \"my-person-object\", \n      \"type\": \"object\",\n      \"es:schema\": {\n        \"fields\": [\n          {\"name\": \"name\", \"type\": \"string\"},\n          {\"name\": \"surname\", \"type\": \"string\"},\n          {\"name\": \"age\", \"type\": \"integer\"},\n          {\"name\": \"date-of-birth\", \"type\": \"date\", \"format\": \"%Y-%m-%d\"}\n        ]\n      }\n    },\n    {\n      \"name\": \"my-library\", \n      \"type\": \"array\",\n      \"es:itemType\": \"object\",\n      \"es:schema\": {\n        \"fields\": [\n          {\"name\": \"title\", \"type\": \"string\"},\n          {\"name\": \"isbn\", \"type\": \"string\"},\n          {\"name\": \"num-of-pages\", \"type\": \"integer\"}\n        ]\n      }\n    },\n    {\n      \"name\": \"my-user-provded-object\", \n      \"type\": \"object\",\n      \"es:enabled\": false\n    }    \n  ]\n}\n```\n\n#### Custom mappings\nBy providing a custom mapping generator class (via `mapping_generator_cls`), inheriting from the MappingGenerator class you should be able\n\n\n### Drivers\n\n`elasticsearch-py` is used to access the ElasticSearch interface - [docs](https://elasticsearch-py.readthedocs.io/en/master/).\n\n## API Reference\n\n### Snapshot\n\nhttps://github.com/frictionlessdata/tableschema-elasticsearch-py#snapshot\n\n### Detailed\n\n- [Changelog](https://github.com/frictionlessdata/tableschema-elasticsearch-py/commits/master)\n\n## Contributing\n\nPlease read the contribution guideline:\n\n[How to Contribute](CONTRIBUTING.md)\n\nThanks!",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/frictionlessdata/tableschema-elasticsearch-py",
    "keywords": "frictionless data",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tableschema-elasticsearch",
    "platform": "",
    "project_url": "https://pypi.org/project/tableschema-elasticsearch/",
    "release_url": "https://pypi.org/project/tableschema-elasticsearch/0.1.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Generate ES Indexes, load and extract data, based on JSON Table Schema descriptors.",
    "version": "0.1.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "147532078f9bff78a821ab7fd14ef0d8",
          "sha256": "b6ff1bad0207c36a6b69253d6cb72512701db0ec9d96566c855b9c04956d7eb7"
        },
        "downloads": 0,
        "filename": "tableschema-elasticsearch-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "147532078f9bff78a821ab7fd14ef0d8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8094,
        "upload_time": "2017-08-03T09:41:22",
        "url": "https://files.pythonhosted.org/packages/0d/5d/06f3aecc11d29fbd2918a7b2635c65804679bad1895a522b1d8bc3f8b869/tableschema-elasticsearch-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "24414374acdea6602114e0ae4d490524",
          "sha256": "da94f9696255bd7e8e3c75e5bd17da159854a8227b07b7d1819da2182bb3cd7b"
        },
        "downloads": 0,
        "filename": "tableschema-elasticsearch-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "24414374acdea6602114e0ae4d490524",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8302,
        "upload_time": "2017-08-03T20:11:29",
        "url": "https://files.pythonhosted.org/packages/f9/26/17ac26bd605d7f140c19c1bf7b86c60b610d99542c077f9f2e1e647690c9/tableschema-elasticsearch-0.0.2.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "69e617ee1c1bdb05fa9f72db866b40ea",
          "sha256": "535fd42e3fb8404d58553f2ffc5763a055537c538f1c14fb90b62a2ad7e58c5a"
        },
        "downloads": 0,
        "filename": "tableschema-elasticsearch-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "69e617ee1c1bdb05fa9f72db866b40ea",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8303,
        "upload_time": "2017-09-10T15:57:19",
        "url": "https://files.pythonhosted.org/packages/c0/4f/099d50059e8912961e12350d49368cdb2333da11fc7cfdaa76097f20e198/tableschema-elasticsearch-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "69e617ee1c1bdb05fa9f72db866b40ea",
        "sha256": "535fd42e3fb8404d58553f2ffc5763a055537c538f1c14fb90b62a2ad7e58c5a"
      },
      "downloads": 0,
      "filename": "tableschema-elasticsearch-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "69e617ee1c1bdb05fa9f72db866b40ea",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8303,
      "upload_time": "2017-09-10T15:57:19",
      "url": "https://files.pythonhosted.org/packages/c0/4f/099d50059e8912961e12350d49368cdb2333da11fc7cfdaa76097f20e198/tableschema-elasticsearch-0.1.1.tar.gz"
    }
  ]
}