{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. image:: https://github.com/dnouri/skorch/blob/master/assets/skorch.svg\n   :width: 30%\n======\n\n|build| |coverage| |docs|\n\nA scikit-learn compatible neural network library that wraps PyTorch.\n\n.. |build| image:: https://travis-ci.org/dnouri/skorch.svg?branch=master\n    :alt: Build Status\n    :scale: 100%\n    :target: https://travis-ci.org/dnouri/skorch?branch=master\n\n.. |coverage| image:: https://github.com/dnouri/skorch/blob/master/assets/coverage.svg\n    :alt: Test Coverage\n    :scale: 100%\n\n.. |docs| image:: https://readthedocs.org/projects/skorch/badge/?version=latest\n    :alt: Documentation Status\n    :scale: 100%\n    :target: https://skorch.readthedocs.io/en/latest/?badge=latest\n\nResources:\n\n- `Documentation <https://skorch.readthedocs.io/en/latest/?badge=latest>`_\n- `Source Code <https://github.com/dnouri/skorch/>`_\n\nExample\n-------\n\nTo see a more elaborate example, look `here\n<https://github.com/dnouri/skorch/tree/master/notebooks/README.md>`__.\n\n.. code:: python\n\n    import numpy as np\n    from sklearn.datasets import make_classification\n    import torch\n    from torch import nn\n    import torch.nn.functional as F\n\n    from skorch.net import NeuralNetClassifier\n\n\n    X, y = make_classification(1000, 20, n_informative=10, random_state=0)\n    X = X.astype(np.float32)\n\n\n    class MyModule(nn.Module):\n        def __init__(self, num_units=10, nonlin=F.relu):\n            super(MyModule, self).__init__()\n\n            self.dense0 = nn.Linear(20, num_units)\n            self.nonlin = nonlin\n            self.dropout = nn.Dropout(0.5)\n            self.dense1 = nn.Linear(num_units, 10)\n            self.output = nn.Linear(10, 2)\n\n        def forward(self, X, **kwargs):\n            X = self.nonlin(self.dense0(X))\n            X = self.dropout(X)\n            X = F.relu(self.dense1(X))\n            X = F.softmax(self.output(X), dim=-1)\n            return X\n\n\n    net = NeuralNetClassifier(\n        MyModule,\n        max_epochs=10,\n        lr=0.1,\n    )\n\n    net.fit(X, y)\n    y_proba = net.predict_proba(X)\n\nIn an sklearn Pipeline:\n\n.. code:: python\n\n    from sklearn.pipeline import Pipeline\n    from sklearn.preprocessing import StandardScaler\n\n\n    pipe = Pipeline([\n        ('scale', StandardScaler()),\n        ('net', net),\n    ])\n\n    pipe.fit(X, y)\n    y_proba = pipe.predict_proba(X)\n\nWith grid search\n\n.. code:: python\n\n    from sklearn.model_selection import GridSearchCV\n\n\n    params = {\n        'lr': [0.01, 0.02],\n        'max_epochs': [10, 20],\n        'module__num_units': [10, 20],\n    }\n    gs = GridSearchCV(net, params, refit=False, cv=3, scoring='accuracy')\n\n    gs.fit(X, y)\n    print(gs.best_score_, gs.best_params_)\n\nInstallation\n------------\n\npip installation\n~~~~~~~~~~~~~~~~\n\nTo install with pip, run:\n\n.. code:: bash\n\n    pip install -U skorch\n\nWe recommend to use a virtual environment for this.\n\n>From source\n~~~~~~~~~~~\n\nIf you would like to use the must recent additions to skorch or\nhelp development, you should install skorch from source.\n\nUsing conda\n^^^^^^^^^^^\n\nYou need a working conda installation. Get the correct miniconda for\nyour system from `here <https://conda.io/miniconda.html>`__.\n\nIf you just want to use skorch, use:\n\n.. code:: bash\n\n    git clone https://github.com/dnouri/skorch.git\n    cd skorch\n    conda env create\n    source activate skorch\n    # install pytorch version for your system (see below)\n    python setup.py install\n\nIf you want to help developing, run:\n\n.. code:: bash\n\n    git clone https://github.com/dnouri/skorch.git\n    cd skorch\n    conda env create\n    source activate skorch\n    # install pytorch version for your system (see below)\n    conda install --file requirements-dev.txt\n    python setup.py develop\n\n    py.test  # unit tests\n    pylint skorch  # static code checks\n\nUsing pip\n^^^^^^^^^\n\nIf you just want to use skorch, use:\n\n.. code:: bash\n\n    git clone https://github.com/dnouri/skorch.git\n    cd skorch\n    # create and activate a virtual environment\n    pip install -r requirements.txt\n    # install pytorch version for your system (see below)\n    python setup.py install\n\nIf you want to help developing, run:\n\n.. code:: bash\n\n    git clone https://github.com/dnouri/skorch.git\n    cd skorch\n    # create and activate a virtual environment\n    pip install -r requirements.txt\n    # install pytorch version for your system (see below)\n    pip install -r requirements-dev.txt\n    python setup.py develop\n\n    py.test  # unit tests\n    pylint skorch  # static code checks\n\nPyTorch\n~~~~~~~\n\nPyTorch is not covered by the dependencies, since the PyTorch\nversion you need is dependent on your system. For installation\ninstructions for PyTorch, visit the `PyTorch website\n<http://pytorch.org/>`__.\n\nIn general, this should work (assuming CUDA 9):\n\n.. code:: bash\n\n    # using conda:\n    conda install pytorch cuda90 -c pytorch\n    # using pip\n    pip install http://download.pytorch.org/whl/cu90/torch-0.3.0.post4-cp36-cp36m-linux_x86_64.whl\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/dnouri/skorch",
    "keywords": "",
    "license": "new BSD 3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "skorch",
    "platform": "",
    "project_url": "https://pypi.org/project/skorch/",
    "release_url": "https://pypi.org/project/skorch/0.1.0.post1/",
    "requires_dist": [
      "pytest-cov; extra == 'testing'",
      "pytest; extra == 'testing'",
      "sphinx-rtd-theme; extra == 'docs'",
      "numpydoc; extra == 'docs'",
      "Sphinx; extra == 'docs'",
      "tqdm",
      "tabulate",
      "scipy",
      "scikit-learn (>=0.18)",
      "numpy"
    ],
    "requires_python": "",
    "summary": "scikit-learn compatible neural network library for pytorch",
    "version": "0.1.0.post1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "15a308a6baa1fae0a1216a4e937acc4e",
          "sha256": "413c66c26f1356637ebe67221da700a91d727b54f51cb2a6c4a3eeab44be56ac"
        },
        "downloads": -1,
        "filename": "skorch-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15a308a6baa1fae0a1216a4e937acc4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 38722,
        "upload_time": "2017-10-10T15:45:33",
        "url": "https://files.pythonhosted.org/packages/43/cd/293ef43ff57ccf9a860731c4fd00408ab0aa54e28456a7be227733232453/skorch-0.0.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e68384443a921698030777b783013a44",
          "sha256": "c35fb8c5d72e56f5b0ee4abfdc979d4b9647b030d0b3822208d09e5157ed03fa"
        },
        "downloads": -1,
        "filename": "skorch-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e68384443a921698030777b783013a44",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 33111,
        "upload_time": "2017-10-10T15:45:35",
        "url": "https://files.pythonhosted.org/packages/59/4a/39a844d1754550cf03580a3fdce2641dc41c27ddeb73b4a5b0fbf8e546e1/skorch-0.0.1.tar.gz"
      }
    ],
    "0.1.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "77fd6f5cdbe7bf648ab2597cb6e707e1",
          "sha256": "485d024fcb0131099b68c36205b50149fc1f0d7eeee8cdbc704cb2ee01f5a5ce"
        },
        "downloads": -1,
        "filename": "skorch-0.1.0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77fd6f5cdbe7bf648ab2597cb6e707e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 48379,
        "upload_time": "2017-12-08T14:11:46",
        "url": "https://files.pythonhosted.org/packages/f2/be/472f2b485404004fcf1924c92b2f1e6eddef56eb3b403978eb421051bb23/skorch-0.1.0.post1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8b86db94199cd08d68089a85a11a2f9e",
          "sha256": "d1903dbc621c4d39cee3708bb8b4c4fcc3d1ce769edf60f718780f6ddc9148c7"
        },
        "downloads": -1,
        "filename": "skorch-0.1.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "8b86db94199cd08d68089a85a11a2f9e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 41372,
        "upload_time": "2017-12-08T14:11:48",
        "url": "https://files.pythonhosted.org/packages/6e/14/eb6255b4a4e3472983b25ed21b5305b2d2d4c41dc3049d75286cbe0fd247/skorch-0.1.0.post1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "77fd6f5cdbe7bf648ab2597cb6e707e1",
        "sha256": "485d024fcb0131099b68c36205b50149fc1f0d7eeee8cdbc704cb2ee01f5a5ce"
      },
      "downloads": -1,
      "filename": "skorch-0.1.0.post1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "77fd6f5cdbe7bf648ab2597cb6e707e1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 48379,
      "upload_time": "2017-12-08T14:11:46",
      "url": "https://files.pythonhosted.org/packages/f2/be/472f2b485404004fcf1924c92b2f1e6eddef56eb3b403978eb421051bb23/skorch-0.1.0.post1-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "8b86db94199cd08d68089a85a11a2f9e",
        "sha256": "d1903dbc621c4d39cee3708bb8b4c4fcc3d1ce769edf60f718780f6ddc9148c7"
      },
      "downloads": -1,
      "filename": "skorch-0.1.0.post1.tar.gz",
      "has_sig": false,
      "md5_digest": "8b86db94199cd08d68089a85a11a2f9e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 41372,
      "upload_time": "2017-12-08T14:11:48",
      "url": "https://files.pythonhosted.org/packages/6e/14/eb6255b4a4e3472983b25ed21b5305b2d2d4c41dc3049d75286cbe0fd247/skorch-0.1.0.post1.tar.gz"
    }
  ]
}