{
  "info": {
    "author": "Konstantin Stadler",
    "author_email": "konstantin.stadler@ntnu.no",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Science/Research",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering",
      "Topic :: Utilities"
    ],
    "description": "country converter\n=================\n\nThe country converter (coco) is a Python package to convert country names between different classifications and between different naming versions. Internally it uses regular expressions to match country names.\n\n.. image:: https://travis-ci.org/konstantinstadler/country_converter.svg?branch=master\n    :target: https://travis-ci.org/konstantinstadler/country_converter\n\nInstallation\n------------\n\nCountry_converter is registered at PyPI. From the command line:\n\n::\n\n    pip install country_converter\n\nAlternatively, the source code is available on github_.\n\n.. _github: https://github.com/konstantinstadler/country_converter\n\nThe package depends on pandas_; for testing py.test_ is required.\n\n.. _pandas: http://pandas.pydata.org/\n\n.. _py.test: http://pytest.org/ \n\nUsage\n-----\n\nBasic usage\n^^^^^^^^^^^\n\nUse within python\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nConvert various country names to some standard names:\n\n::\n\n    import country_converter as coco\n    some_names = ['United Rep. of Tanzania', 'Cape Verde', 'Burma', 'Iran (Islamic Republic of)', 'Korea, Republic of', \"Dem. People's Rep. of Korea\"]\n    standard_names = coco.convert(names=some_names, to='name_short')\n    print(standard_names)\n\nWhich results in ['Tanzania', 'Cabo Verde', 'Myanmar', 'Iran', 'South Korea', 'North Korea'].\n\nIn case of multiple conversion, better performance can be achieved by\ninstantiating a single CountryConverter object for all conversions:\n\n::\n\n    import country_converter as coco\n    cc = coco.CountryConverter()\n\n    some_names = ['United Rep. of Tanzania', 'Cape Verde', 'Burma', 'Iran (Islamic Republic of)', 'Korea, Republic of', \"Dem. People's Rep. of Korea\"]\n\n    standard_names = cc.convert(names = some_names, src = 'regex', to = 'name_short') \n    UNmembership = cc.convert(names = some_names, src = 'regex', to = 'UNmember') \n    print(standard_names)\n    print(UNmembership)\n\n\nConvert between classification schemes:\n\n::\n\n    iso3_codes = ['USA', 'VUT', 'TKL', 'AUT' ]\n    iso2_codes = coco.convert(names = iso3_codes, src = 'ISO3', to = 'ISO2')\n    print(iso2_codes)\n\nWhich results in ['US', 'VU', 'TK', 'AT']\n\nInternally the data is stored in a pandas dataframe, which can be accessed directly. \nFor example, this can be used to filter countries for membership organisations (per year). \nNote: for this, an instance of CountryConverter is required.\n\n::\n\n    import country_converter as coco\n    cc = coco.CountryConverter()\n\n    some_countries = ['Australia', 'Belgium', 'Brazil', 'Bulgaria', 'Cyprus', 'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany', 'Greece', 'Hungary', 'India', 'Indonesia', 'Ireland', 'Italy', 'Japan', 'Latvia', 'Lithuania', 'Luxembourg', 'Malta', 'Romania', 'Russia',  'Turkey', 'United Kingdom', 'United States']\n\n    oecd_since_1995 = cc.data[(cc.data.OECD >= 1995) & cc.data.name_short.isin(some_countries)].name_short\n    eu_until_1980 = cc.data[(cc.data.EU <= 1980) & cc.data.name_short.isin(some_countries)].name_short\n    print(oecd_since_1995)\n    print(eu_until_1980)\n\nSome properties provide direct access to affiliations:\n\n::\n\n    cc.EU28\n    cc.OECD\n\n    cc.EU27in('ISO3')\n\nand the classification schemes available:\n\n::\n\n    cc.valid_class\n\n\nThe regular expressions can also be used to match any list of countries to any other. For example: \n\n::\n\n    match_these = ['norway', 'united_states', 'china', 'taiwan']\n    master_list = ['USA', 'The Swedish Kingdom', 'Norway is a Kingdom too', 'Peoples Republic of China', 'Republic of China' ]\n\n    matching_dict = coco.match(match_these, master_list)\n\n\nSee the IPython Notebook (country_converter_examples.ipynb_) for more information.\n\n.. _country_converter_examples.ipynb: http://nbviewer.ipython.org/github/konstantinstadler/country_converter/blob/master/doc/country_converter_examples.ipynb\n\nCommand line usage    \n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nThe country converter package also provides a command line interface\ncalled coco.\n\nMinimal example:\n\n:: \n    \n    coco Cyprus Denmark Estonia 'United Kingdom' \n\nConverts the given names to ISO3 codes based on regular expression matching.\nThe list of names must be separated by spaces, country names consisting of multiple words must be put in quotes ('').\n\nThe input classification can be specified with '--src' or '-s', the target classification with '--to' or '-t'.\n\nThe default output is a space separated list, this can be changed by passing a separator by '--output_sep' or '-o'.\n\nThus, to convert from ISO3 to UN number codes and receive the output as comma separated list use:\n\n::\n\n    coco AUT DEU VAT AUS -s ISO3 -t UNcode -o ', '\n    \n\nFor further information call the help by\n\n::\n\n    coco -h\n\n\nUse in matlab\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nNewer (tested in 2016a) versions from Matlab allow to directly call python\nfunctions and libaries.  This requires a python version >= 3.4 installed in the\nsytem path (e.g. through Anaconda).\n\nTo test, try this in matlab:\n\n::\n    \n    py.print(py.sys.version)\n    \nIf this works, you can also use coco after installing it through pip \n(at the windows commandline - see the installing instruction above):\n\n::\n    \n    pip install country_converter\n    \nAnd in matlab:\n\n::\n\n    coco = py.country_converter.CountryConverter()\n    countries = {'The Swedish Kingdom', 'Norway is a Kingdom too', 'Peoples Republic of China', 'Republic of China'};\n    ISO2_pythontype = coco.convert(countries, pyargs('to', 'ISO2'));\n    ISO2_cellarray = cellfun(@char,cell(ISO2_pythontype),'UniformOutput',false);\n    \n\nAlternativley, as a long oneliner:\n   \n::\n\n    short_names = cellfun(@char, cell(py.country_converter.convert({56, 276}, pyargs('src', 'UNcode', 'to', 'name_short'))), 'UniformOutput',false);\n\nAll properties of coco as explained above are also available in matlab:    \n\n::\n    \n    coco = py.country_converter.CountryConverter();\n    coco.EU27\n    EU27ISO3 = coco.EU27in('ISO3');\n\nThese functions return a pandas DataFrame. \nThe underlying values can be access with .values (e.g. \n\n::\n\n    EU27ISO3.values\n\nI leave it to professional matlab users to figure out how to further process them.\n    \n\nRefining and Extending\n^^^^^^^^^^^^^^^^^^^^^^\n\nThe underlying raw data is a tab-separated file (country_data.txt) which is read into a pandas dataframe (available as attribute .data in the main class).\nAny column added to this dataframe can be used for all conversions. The datafile is utf-8 encoded.\n\nThe included regular expressions were tested against names commonly found in various databases. In case the expression need to be updated rerun all tests (using the py.test_ package). \n\nThese tests check \n\n#) Do the short names uniquely match the regular expression?\n#) Do the official name uniquely match the regular expression?\n#) Do the alternative names tested so far still uniquely match the standard names?\n\nTo specify a new test set just add a tab-separated file with headers \"name_short\" and \"name_test\" and provide name (corresponding to the short name in the main classification file) and the alternative name which should be tested (one pair per row in the file). If the file name starts with \"test\\_regex\\_\" it will be automatically recognised by the test functions.\n\n\nClassification schemes\n----------------------\n\nCurrently the following classification schemes are available:\n\n#) ISO2 (ISO 3166-1 alpha-2)\n#) ISO3 (ISO 3166-1 alpha-3)\n#) ISO - numeric (ISO 3166-1 numeric)\n#) UN numeric code (which follows to a large extend ISO - numeric)\n#) A standard or short name\n#) The \"official\" name\n#) Continent\n#) UN region\n#) EXIOBASE 1 classification\n#) EXIOBASE 2 classification\n#) EXIOBASE 2 classification\n#) WIOD classification\n#) OECD membership (per year)\n#) UN membership (per year)\n#) EU membership (per year)\n\nData sources and further reading\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nMost of the underlying data can be found in Wikipedia.\nhttps://en.wikipedia.org/wiki/ISO_3166-1 is a good starting point.\nUN regions/codes are given on the United Nation Statistical Division (unstats_) web-page.\nEXIOBASE_ and WIOD_ classification were extracted from the respective databases.\nThe membership of OECD_, UN_ and EU_ can be found at the membership organisations webpages. \n\n.. _unstats: http://unstats.un.org/unsd/methods/m49/m49regin.htm\n.. _OECD: http://www.oecd.org/about/membersandpartners/list-oecd-member-countries.htm\n.. _UN: http://www.un.org/en/members/\n.. _EU: http://europa.eu/about-eu/countries/index_en.htm\n.. _EXIOBASE: http://exiobase.eu/ \n.. _WIOD: http://www.wiod.org/new_site/home.htm \n\nAcknowledgements\n----------------\n\nThis package was inspired by (and the regular expression are mostly based on) the R-package countrycode_ by Vincent_ Arel-Bundock and his (defunct) port to Python (pycountrycode).\n\n.. _Vincent: http://arelbundock.com/\n.. _countrycode: https://github.com/vincentarelbundock/countrycode",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/konstantinstadler/country_converter",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "country_converter",
    "platform": "",
    "project_url": "https://pypi.org/project/country_converter/",
    "release_url": "https://pypi.org/project/country_converter/0.3.3/",
    "requires_python": "",
    "summary": "The country converter (coco) - a Python package for converting country names between different classifications schemes.",
    "version": "0.3.3"
  },
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c08d03612460fc53cf92e77c59ebfc3a",
          "sha256": "f2328faeab2b7171074a1f6f26873569ab69212208df61fdf51d43447f78c48a"
        },
        "downloads": 0,
        "filename": "country_converter-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c08d03612460fc53cf92e77c59ebfc3a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28651,
        "upload_time": "2017-04-11T11:22:04",
        "url": "https://files.pythonhosted.org/packages/a8/30/a7dcbfc07d888e613bf0f0b9563c0998529a2ff62c7cb0c21a6f056c4a8b/country_converter-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2ab1692922fe4539f982cf383c359388",
          "sha256": "5968bb739c87ccb8f8475d2cab5058f79a0077f4154ce04b3e5cc7b4fb2277e9"
        },
        "downloads": 0,
        "filename": "country_converter-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2ab1692922fe4539f982cf383c359388",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28683,
        "upload_time": "2017-04-11T11:29:58",
        "url": "https://files.pythonhosted.org/packages/d3/8d/233a52c449460b564bbeafb26ee5a53c9cd27c9fb9ef45a44f7ffde705d5/country_converter-0.3.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "09d82b0b59e49c101608cda4bff3664a",
          "sha256": "d7e16ccb6cc02592cc4de9f7d989c31f737ad73ad4c7e8ebb4bb33bc16b5273c"
        },
        "downloads": 0,
        "filename": "country_converter-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "09d82b0b59e49c101608cda4bff3664a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28705,
        "upload_time": "2017-04-18T09:28:52",
        "url": "https://files.pythonhosted.org/packages/9d/46/e458501131d707e2cf97a17c4caf0c4ad41b832b038b676ed2ae0f1ace91/country_converter-0.3.1.tar.gz"
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "76818ffc5b0e8da1d6385fe4c8313ca4",
          "sha256": "4d0581cad65629c78690f55d789fe0350919d2dc331e99b5c2674f8182c882d7"
        },
        "downloads": 0,
        "filename": "country_converter-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "76818ffc5b0e8da1d6385fe4c8313ca4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28678,
        "upload_time": "2017-04-18T15:45:18",
        "url": "https://files.pythonhosted.org/packages/0f/d4/10f1100398e6fcc5c5a833959417da118489787fea1a4a1d3cec22367791/country_converter-0.3.2.tar.gz"
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "df77338dda0690aa917b592db90dc244",
          "sha256": "62aab6759096ba7676ce3f85904ac47f767b1badf4d5dc905c517a0f11ef782c"
        },
        "downloads": 0,
        "filename": "country_converter-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "df77338dda0690aa917b592db90dc244",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28677,
        "upload_time": "2017-04-18T15:56:44",
        "url": "https://files.pythonhosted.org/packages/3f/f4/e122ce7e4dede4f79086678bd8b0a4bd267eabb4ad74041cb2a12b704e81/country_converter-0.3.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "df77338dda0690aa917b592db90dc244",
        "sha256": "62aab6759096ba7676ce3f85904ac47f767b1badf4d5dc905c517a0f11ef782c"
      },
      "downloads": 0,
      "filename": "country_converter-0.3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "df77338dda0690aa917b592db90dc244",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 28677,
      "upload_time": "2017-04-18T15:56:44",
      "url": "https://files.pythonhosted.org/packages/3f/f4/e122ce7e4dede4f79086678bd8b0a4bd267eabb4ad74041cb2a12b704e81/country_converter-0.3.3.tar.gz"
    }
  ]
}