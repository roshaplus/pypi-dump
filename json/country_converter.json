{
  "info": {
    "author": "Konstantin Stadler",
    "author_email": "konstantin.stadler@ntnu.no",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Scientific/Engineering",
      "Topic :: Utilities"
    ],
    "description": "country converter\n=================\n\nThe country converter (coco) is a Python package to convert country names between different classifications and between different naming versions. Internally it uses regular expressions to match country names.\n\n.. image:: https://badge.fury.io/py/country_converter.svg\n    :target: https://badge.fury.io/py/country_converter\n.. image:: http://joss.theoj.org/papers/af694f2e5994b8aacbad119c4005e113/status.svg\n    :target: http://joss.theoj.org/papers/af694f2e5994b8aacbad119c4005e113\n.. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.838248.svg\n   :target: https://doi.org/10.5281/zenodo.838248\n.. image:: https://img.shields.io/badge/License-GPL%20v3-blue.svg\n    :target: https://www.gnu.org/licenses/gpl-3.0\n.. image:: https://travis-ci.org/konstantinstadler/country_converter.svg?branch=master\n    :target: https://travis-ci.org/konstantinstadler/country_converter\n\n|\n\n\n.. contents:: Table of Contents\n\nMotivation\n-----------\n\nTo date, there is no single standard of how to name or specify individual countries in a (meta) data description.\nWhile some data sources follow ISO 3166, this standard defines a two and a three letter code in addition to a numerical classification.\nTo further complicate the matter, instead of using one of the existing standards, many databases use unstandardised country names to classify countries.\n\nThe country converter (coco) automates the conversion from different standards and version of country names.\nInternally, coco is based on a table specifying the different ISO and UN standards per country together with the official name and a regular expression which aim to match all English versions of a specific country name.\nIn addition, coco includes classification based on UN-, EU-, OECD-membership, UN regions specifications, continents and various MRIO databases (see `Classification schemes`_ below).\n\nInstallation\n------------\n\nCountry_converter is registered at PyPI. From the command line:\n\n::\n\n    pip install country_converter --upgrade\n\nAlternatively, the source code is available on GitHub_.\n\n.. _GitHub: https://github.com/konstantinstadler/country_converter\n\nThe package depends on Pandas_; for testing py.test_ is required.\nFor further information on running the tests see `CONTRIBUTING.rst`_.\n\n.. _Pandas: http://pandas.pydata.org/\n\n.. _py.test: http://pytest.org/\n\nUsage\n-----\n\nBasic usage\n^^^^^^^^^^^\n\nUse within Python\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nConvert various country names to some standard names:\n\n.. code:: python\n\n    import country_converter as coco\n    some_names = ['United Rep. of Tanzania', 'DE', 'Cape Verde', '788', 'Burma', 'COG',\n                  'Iran (Islamic Republic of)', 'Korea, Republic of',\n                  \"Dem. People's Rep. of Korea\"]\n    standard_names = coco.convert(names=some_names, to='name_short')\n    print(standard_names)\n\nWhich results in ['Tanzania', 'Germany', 'Cabo Verde', 'Tunisia', 'Myanmar', 'Congo Republic', 'Iran', 'South Korea', 'North Korea'].\nThe input format is determined automatically, based on ISO two letter, ISO three letter, ISO numeric or regular expression matching.\nIn case of any ambiguity, the source format can be specified with the parameter 'src'.\n\nIn case of multiple conversion, better performance can be achieved by\ninstantiating a single CountryConverter object for all conversions:\n\n.. code:: python\n\n    import country_converter as coco\n    cc = coco.CountryConverter()\n\n    some_names = ['United Rep. of Tanzania', 'Cape Verde', 'Burma',\n                  'Iran (Islamic Republic of)', 'Korea, Republic of',\n                  \"Dem. People's Rep. of Korea\"]\n\n    standard_names = cc.convert(names = some_names, to = 'name_short')\n    UNmembership = cc.convert(names = some_names, to = 'UNmember')\n    print(standard_names)\n    print(UNmembership)\n\n\nConvert between classification schemes:\n\n.. code:: python\n\n    iso3_codes = ['USA', 'VUT', 'TKL', 'AUT', 'XXX' ]\n    iso2_codes = coco.convert(names=iso3_codes, to='ISO2')\n    print(iso2_codes)\n\nWhich results in ['US', 'VU', 'TK', 'AT', 'not found']\n\nThe not found indication can be specified (e.g. not_found = 'not there'),\nif None is passed for 'not_found', the original entry gets passed through:\n\n.. code:: python\n\n    iso2_codes = coco.convert(names=iso3_codes, to='ISO2', not_found=None)\n    print(iso2_codes)\n\nresults in ['US', 'VU', 'TK', 'AT', 'XXX']\n\n\nInternally the data is stored in a Pandas DataFrame, which can be accessed directly.\nFor example, this can be used to filter countries for membership organisations (per year).\nNote: for this, an instance of CountryConverter is required.\n\n.. code:: python\n\n    import country_converter as coco\n    cc = coco.CountryConverter()\n\n    some_countries = ['Australia', 'Belgium', 'Brazil', 'Bulgaria', 'Cyprus', 'Czech Republic',\n                      'Denmark', 'Estonia', 'Finland', 'France', 'Germany', 'Greece', 'Hungary',\n                      'India', 'Indonesia', 'Ireland', 'Italy', 'Japan', 'Latvia', 'Lithuania',\n                      'Luxembourg', 'Malta', 'Romania', 'Russia', 'Turkey', 'United Kingdom',\n                      'United States']\n\n    oecd_since_1995 = cc.data[(cc.data.OECD >= 1995) & cc.data.name_short.isin(some_countries)].name_short\n    eu_until_1980 = cc.data[(cc.data.EU <= 1980) & cc.data.name_short.isin(some_countries)].name_short\n    print(oecd_since_1995)\n    print(eu_until_1980)\n\nSome properties provide direct access to affiliations:\n\n.. code:: python\n\n    cc.EU28\n    cc.OECD\n\n    cc.EU27as('ISO3')\n\nand the classification schemes available:\n\n.. code:: python\n\n    cc.valid_class\n\n\nThe regular expressions can also be used to match any list of countries to any other. For example:\n\n.. code:: python\n\n    match_these = ['norway', 'united_states', 'china', 'taiwan']\n    master_list = ['USA', 'The Swedish Kingdom', 'Norway is a Kingdom too',\n                   'Peoples Republic of China', 'Republic of China' ]\n\n    matching_dict = coco.match(match_these, master_list)\n\n\nSee the IPython Notebook (country_converter_examples.ipynb_) for more information.\n\n.. _country_converter_examples.ipynb: http://nbviewer.ipython.org/github/konstantinstadler/country_converter/blob/master/doc/country_converter_examples.ipynb\n\nCommand line usage\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nThe country converter package also provides a command line interface\ncalled coco.\n\nMinimal example:\n\n::\n\n    coco Cyprus DE Denmark Estonia 4 'United Kingdom' AUT\n\nConverts the given names to ISO3 codes based on matching the input to ISO2, ISO3, ISOnumeric or regular expression matching.\nThe list of names must be separated by spaces, country names consisting of multiple words must be put in quotes ('').\n\nThe input classification can be specified with '--src' or '-s' (or will be determined automatically), the target classification with '--to' or '-t'.\n\nThe default output is a space separated list, this can be changed by passing a separator by '--output_sep' or '-o' (e.g -o '|').\n\nThus, to convert from ISO3 to UN number codes and receive the output as comma separated list use:\n\n::\n\n    coco AUT DEU VAT AUS -s ISO3 -t UNcode -o ', '\n\nThe command line tool also allows to specify the output for none found entries, including passing them through to the output by passing None:\n\n::\n\n    coco CAN Peru US Mexico Venezuela UK Arendelle --not_found=None\n\nand to specifiy an additional data file which will overwrite existing country matchings\n\n::\n\n    coco Congo --additional_data path/to/datafile.csv\n\nSee https://github.com/konstantinstadler/country_converter/tree/master/tests/custom_data_example.txt for an example of an additional datafile.\n\nFor further information call the help by\n\n::\n\n    coco -h\n\n\nUse in Matlab\n\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nNewer (tested in 2016a) versions of Matlab allow to directly call Python\nfunctions and libaries.  This requires a Python version >= 3.4 installed in the\nsytem path (e.g. through Anaconda).\n\nTo test, try this in Matlab:\n\n.. code:: matlab\n\n    py.print(py.sys.version)\n\nIf this works, you can also use coco after installing it through pip\n(at the windows commandline - see the installing instruction above):\n\n.. code:: matlab\n\n    pip install country_converter --upgrade\n\nAnd in matlab:\n\n.. code:: matlab\n\n    coco = py.country_converter.CountryConverter()\n    countries = {'The Swedish Kingdom', 'Norway is a Kingdom too', 'Peoples Republic of China', 'Republic of China'};\n    ISO2_pythontype = coco.convert(countries, pyargs('to', 'ISO2'));\n    ISO2_cellarray = cellfun(@char,cell(ISO2_pythontype),'UniformOutput',false);\n\n\nAlternativley, as a long oneliner:\n\n.. code:: matlab\n\n    short_names = cellfun(@char, cell(py.country_converter.convert({56, 276}, pyargs('src', 'UNcode', 'to', 'name_short'))), 'UniformOutput',false);\n\n\nAll properties of coco as explained above are also available in Matlab:\n\n.. code:: matlab\n\n    coco = py.country_converter.CountryConverter();\n    coco.EU27\n    EU27ISO3 = coco.EU27as('ISO3');\n\nThese functions return a Pandas DataFrame.\nThe underlying values can be access with .values (e.g.\n\n.. code:: matlab\n\n    EU27ISO3.values\n\nI leave it to professional Matlab users to figure out how to further process them.\n\nSee also IPython Notebook (country_converter_examples.ipynb_) for more\ninformation - all functions available in Python (for example passing additional\ndata files, specifying the output in case of missing data) work also in Matlab\nby passing arguments through the pyargs function.\n\n.. _Classifications:\n\nClassification schemes\n----------------------\n\nCurrently the following classification schemes are available:\n\n#) ISO2 (ISO 3166-1 alpha-2)\n#) ISO3 (ISO 3166-1 alpha-3)\n#) ISO - numeric (ISO 3166-1 numeric)\n#) UN numeric code (M.49 - follows to a large extend ISO-numeric)\n#) A standard or short name\n#) The \"official\" name\n#) Continent\n#) UN region\n#) EXIOBASE 1 classification\n#) EXIOBASE 2 classification\n#) EXIOBASE 2 classification\n#) WIOD classification\n#) OECD membership (per year)\n#) UN membership (per year)\n#) EU membership (per year)\n\n\nData sources and further reading\n--------------------------------\n\nMost of the underlying data can be found in Wikipedia.\nhttps://en.wikipedia.org/wiki/ISO_3166-1 is a good starting point.\nUN regions/codes are given on the United Nation Statistical Division (unstats_) webpage.\nFor the differences between the ISO numeric and UN (M.49) codes \nsee https://en.wikipedia.org/wiki/UN_M.49.\nEXIOBASE_ and WIOD_ classification were extracted from the respective databases.\nThe membership of OECD_, UN_ and EU_ can be found at the membership organisations' webpages.\n\n.. _unstats: http://unstats.un.org/unsd/methods/m49/m49regin.htm\n.. _OECD: http://www.oecd.org/about/membersandpartners/list-oecd-member-countries.htm\n.. _UN: http://www.un.org/en/members/\n.. _EU: http://europa.eu/about-eu/countries/index_en.htm\n.. _EXIOBASE: http://exiobase.eu/\n.. _WIOD: http://www.wiod.org/home\n\n\n\nCommunication, issues, bugs and enhancements\n--------------------------------------------\n\nPlease use the issue tracker for documenting bugs, proposing enhancements and all other communication related to coco.\n\nYou can follow me on twitter_ or mastodon_ to get the latest news about all my open-source and research projects (and occasionally some random retweets).\n\n.. _twitter: https://twitter.com/kst_stadler\n.. _mastodon: https://mastodon.rocks/@kstadler\n\nContributing\n---------------\n\nWant to contribute? Great!\nPlease check `CONTRIBUTING.rst`_ if you want to help to improve coco.\n\n\nRelated software\n-----------------\n\nThe package pycountry_ provides access to the official ISO databases for historic countries, country subdivisions, languages and currencies.\nIn case you need to convert non-English country names, countrynames_ includes an extensive database of country names in different languages and functions to convert them to the different ISO 3166 standards.\nPython-iso3166_ focuses on conversion between the two-letter, three-letter and three-digit codes defined in the ISO 3166 standard.\n\nIf you are using R, you should have a look at countrycode_.\n\n.. _pycountry: https://pypi.python.org/pypi/pycountry\n.. _Python-iso3166: https://github.com/deactivated/python-iso3166\n.. _countrynames: https://github.com/occrp/countrynames\n\nCiting the country converter   \n-------------------------------\n\nVersion 0.5 of the country converter was published in the `Journal of Open Source Software`_.\nTo cite the country converter in publication please use:\n\nStadler, K. (2017). The country converter coco - a Python package for converting country names between different classification schemes. The Journal of Open Source Software. doi: http://dx.doi.org/10.21105/joss.00332\n\nFor the full bibtex key see CITATION_\n\n.. _CITATION: CITATION\n\n\nAcknowledgements\n----------------\n\nThis package was inspired by (and the regular expression are mostly based on) the R-package countrycode_ by `Vincent Arel-Bundock`_ and his (defunct) port to Python (pycountrycode).\nMany thanks to `Robert Gieseke`_ for the review of the source code and paper for the publication in the `Journal of Open Source Software`_.\n\n.. _Vincent Arel-Bundock: http://arelbundock.com/\n.. _countrycode: https://github.com/vincentarelbundock/countrycode\n.. _Robert Gieseke: https://github.com/rgieseke\n.. _Journal of Open Source Software: http://joss.theoj.org/\n\n.. _CONTRIBUTING.rst: CONTRIBUTING.rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/konstantinstadler/country_converter",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "country_converter",
    "platform": "",
    "project_url": "https://pypi.org/project/country_converter/",
    "release_url": "https://pypi.org/project/country_converter/0.5.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "The country converter (coco) - a Python package for converting country names between different classifications schemes.",
    "version": "0.5.3"
  },
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c08d03612460fc53cf92e77c59ebfc3a",
          "sha256": "f2328faeab2b7171074a1f6f26873569ab69212208df61fdf51d43447f78c48a"
        },
        "downloads": 0,
        "filename": "country_converter-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c08d03612460fc53cf92e77c59ebfc3a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28651,
        "upload_time": "2017-04-11T11:22:04",
        "url": "https://files.pythonhosted.org/packages/a8/30/a7dcbfc07d888e613bf0f0b9563c0998529a2ff62c7cb0c21a6f056c4a8b/country_converter-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2ab1692922fe4539f982cf383c359388",
          "sha256": "5968bb739c87ccb8f8475d2cab5058f79a0077f4154ce04b3e5cc7b4fb2277e9"
        },
        "downloads": 0,
        "filename": "country_converter-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2ab1692922fe4539f982cf383c359388",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28683,
        "upload_time": "2017-04-11T11:29:58",
        "url": "https://files.pythonhosted.org/packages/d3/8d/233a52c449460b564bbeafb26ee5a53c9cd27c9fb9ef45a44f7ffde705d5/country_converter-0.3.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "09d82b0b59e49c101608cda4bff3664a",
          "sha256": "d7e16ccb6cc02592cc4de9f7d989c31f737ad73ad4c7e8ebb4bb33bc16b5273c"
        },
        "downloads": 0,
        "filename": "country_converter-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "09d82b0b59e49c101608cda4bff3664a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28705,
        "upload_time": "2017-04-18T09:28:52",
        "url": "https://files.pythonhosted.org/packages/9d/46/e458501131d707e2cf97a17c4caf0c4ad41b832b038b676ed2ae0f1ace91/country_converter-0.3.1.tar.gz"
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "76818ffc5b0e8da1d6385fe4c8313ca4",
          "sha256": "4d0581cad65629c78690f55d789fe0350919d2dc331e99b5c2674f8182c882d7"
        },
        "downloads": 0,
        "filename": "country_converter-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "76818ffc5b0e8da1d6385fe4c8313ca4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28678,
        "upload_time": "2017-04-18T15:45:18",
        "url": "https://files.pythonhosted.org/packages/0f/d4/10f1100398e6fcc5c5a833959417da118489787fea1a4a1d3cec22367791/country_converter-0.3.2.tar.gz"
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "df77338dda0690aa917b592db90dc244",
          "sha256": "62aab6759096ba7676ce3f85904ac47f767b1badf4d5dc905c517a0f11ef782c"
        },
        "downloads": 0,
        "filename": "country_converter-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "df77338dda0690aa917b592db90dc244",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28677,
        "upload_time": "2017-04-18T15:56:44",
        "url": "https://files.pythonhosted.org/packages/3f/f4/e122ce7e4dede4f79086678bd8b0a4bd267eabb4ad74041cb2a12b704e81/country_converter-0.3.3.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4b44b953f817f8e459fbecb1501087cb",
          "sha256": "816bdd768633cf29409cd9a0be470d3c093e2683c0b2b17581899a86719f1e79"
        },
        "downloads": 0,
        "filename": "country_converter-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4b44b953f817f8e459fbecb1501087cb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 31333,
        "upload_time": "2017-06-22T12:52:12",
        "url": "https://files.pythonhosted.org/packages/44/d0/7dbe92ec62d1115f9944f640f5324cbbb60ba24ad2c7937cf54f0db629ed/country_converter-0.4.tar.gz"
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8b9bb537ebb204ac91c403725f89b339",
          "sha256": "484b60df95b8f8ccf653e56bc4c2ea224c672f2febaac4d725f8b2d5c3b648a2"
        },
        "downloads": 0,
        "filename": "country_converter-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8b9bb537ebb204ac91c403725f89b339",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32513,
        "upload_time": "2017-08-02T15:48:55",
        "url": "https://files.pythonhosted.org/packages/c2/6f/234f6fc668e6fe9c2ef8c8710073ef1b661b26e0259e72c24f9e25a6e80b/country_converter-0.5.tar.gz"
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b9a8ef948cca645f354d870604da427d",
          "sha256": "afd3f9873a5d3266381f1b9948dab0182e1811e495bec6fdecf0a3a033ceb972"
        },
        "downloads": 0,
        "filename": "country_converter-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b9a8ef948cca645f354d870604da427d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32742,
        "upload_time": "2017-08-03T11:49:51",
        "url": "https://files.pythonhosted.org/packages/ab/ff/12ef7ed0b3a800fa1562713f3ecba2c704210c7f80615ba561d3117242e7/country_converter-0.5.1.tar.gz"
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1e214b3d3957b7a4fb646ce0a29b1b30",
          "sha256": "63b70e26a01d735e269a4ad59f3fc8b2661cc53b291fa827fd3f5a36e45fc89b"
        },
        "downloads": 0,
        "filename": "country_converter-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1e214b3d3957b7a4fb646ce0a29b1b30",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32741,
        "upload_time": "2017-08-07T08:02:29",
        "url": "https://files.pythonhosted.org/packages/78/2b/a74d5a7a438c8ca6993f1cf50e971f912556dbd506fb8cc37714bdbd2a14/country_converter-0.5.2.tar.gz"
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "406e00382146090d889a8194e71577ba",
          "sha256": "329c36b9bc9625526653194b3e0dd115e48ba151e23174c5f5ba36091f380394"
        },
        "downloads": 0,
        "filename": "country_converter-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "406e00382146090d889a8194e71577ba",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32853,
        "upload_time": "2017-08-11T10:01:13",
        "url": "https://files.pythonhosted.org/packages/95/9f/a524f0e2084ef294b320b21a77b31f0297050d5f1c15c05abb8432ff127b/country_converter-0.5.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "406e00382146090d889a8194e71577ba",
        "sha256": "329c36b9bc9625526653194b3e0dd115e48ba151e23174c5f5ba36091f380394"
      },
      "downloads": 0,
      "filename": "country_converter-0.5.3.tar.gz",
      "has_sig": false,
      "md5_digest": "406e00382146090d889a8194e71577ba",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 32853,
      "upload_time": "2017-08-11T10:01:13",
      "url": "https://files.pythonhosted.org/packages/95/9f/a524f0e2084ef294b320b21a77b31f0297050d5f1c15c05abb8432ff127b/country_converter-0.5.3.tar.gz"
    }
  ]
}