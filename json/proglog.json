{
  "info": {
    "author": "Zulko",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Proglog\n=========\n\n.. image:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/Proglog/master/logo.png\n    :align: center\n\nProglog is a progress logging system for Python. It allows to build complex\nlibraries while giving the user control on the management of logs, callbacks and progress bars.\n\n**What problems does it solve ?** Libraries like `tqdm <https://github.com/noamraph/tqdm>`_ or `progress <https://github.com/verigak/progress/>`_ are great for quickly adding progress bars to your scripts, but become difficult to manage when building larger projects.\n\nFor instance, you will need to write different code depending on whether you are displaying the progress in a console, a Jupyter notebook, or a website.\n\nSometimes you need to channel the progress logs of different components into a same logger, at which case you may also let the final user choose which progress bars they want to display or to mute, even when these are handled deep down in your programs.\n\n.. image:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/Proglog/master/docs/run_and_get_progress.png\n    :align: center\n\nYou may also want to log more than just progress bars, have specific callback fonctions, print the logs in human-readable format... Proglog provides all these features.\n\n\nUsage\n-------\n\nAssume that you are writing a library called ``my_library`` in which you define a routine as follows:\n\n.. code:: python\n\n    import time # for simulating computing time\n    from proglog import TqdmProgressBarLogger\n\n    def my_routine(iterations=10, logger='bars'):\n        \"\"\"Run several loops to showcase Proglog.\"\"\"\n        if logger == 'bars':\n            logger = TqdmProgressBarLogger()\n        for i in logger.iter_bar(iteration=range(iterations)):\n            for j in logger.iter_bar(animal=['dog', 'cat', 'rat', 'duck']):\n                time.sleep(0.1) # Simulate some computing time\n\nNow when the library users run a program in the console, they will get a console progress bar:\n\n.. code:: python\n\n    from my_library import my_routine\n    my_routine()\n\n.. image:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/Proglog/master/docs/console_bar.png\n    :align: center\n\nIf the users run the routine inside a Jupyter/IPython notebook, they only need to write ``proglog.notebook()`` at the beginning of the notebook to obtain HTML progress bars:\n\n.. code:: python\n\n    import proglog\n    proglog.notebook()\n\n    from my_library import my_routine\n    my_routine()\n\n.. image:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/Proglog/master/docs/notebook_bar.png\n    :align: center\n\nIf the user wishes to turn off all progress bars:\n\n.. code:: python\n\n    from my_library import my_routine\n    from proglog import MuteProgressBarLogger\n    my_routine(logger=MuteProgressBarLogger())\n\nIf the user is running the routine on a web server and would want to attach the\ndata to an asynchronous Python-RQ job, all they need is yet a different logger:\n\n.. code:: python\n    from proglog import RqWorkerBarLogger\n    from my_library import my_routine\n\n    logger = RqWorkerBarLogger(job=some_python_rq_job)\n    my_routine(logger=logger)\n\nThis allows to then display progress bars on the website such as these (see the `EGF CUBA <https://github.com/Edinburgh-Genome-Foundry/CUBA>`_ project for an example of website using Proglog):\n\n.. image:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/Proglog/master/docs/website_bar.png\n    :align: center\n\nThe user may also want a custom progress logger which selectively ignores the ``animals`` progress bar, and only updates its bars every second (to save computing time):\n\n.. code:: python\n\n    from proglog import TqdmProgressBarLogger\n    from my_library import my_routine\n\n    logger = TqdmProgressBarLogger(ignored_bars=('animal',),\n                                   min_time_interval=1.0)\n    my_routine(logger=logger)\n\nProglog loggers can be used for much more than just progress bars. They can in fact store any kind of data with a simple API:\n\n.. code:: python\n    logger(message='Now running the main program, be patient...')\n    logger(current_animal='cat')\n    logger(last_number_tried=1235)\n\nFor more complex customization, such as adding callback functions which will be executed every time the logger's state is updated, simply create a new logger class:\n\n.. code:: python\n\n    from proglog import ProgressBarLogger\n    from my_library import my_routine\n\n    class MyBarLogger(ProgressBarLogger):\n\n        def callback(self, **changes):\n            # Every time the logger is updated, this function is called with\n            # the `changes` dictionnary of the form `parameter: new value`.\n\n            for (parameter, new_value) in changes.items():\n                print ('Parameter %s is now %s' % (parameter, value))\n\n    logger = MyBarLogger()\n    my_routine(logger=logger)\n\nWhen writing libraries which all log progress and may depend on each other, simply pass the Proglog logger from one program to its dependencies, to obtain one logger keeping track of all progress across libraries at once: (this implies that not two librairies use the same variables or loop names, which can be avoided by attributing prefixes to these names):\n\n.. image:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/Proglog/master/docs/loggers_schema.png\n    :align: center\n\nInstallation\n-------------\n\nYou can install Proglog through PIP\n\n.. code:: shell\n\n    sudo pip install proglog\n\nAlternatively, you can unzip the sources in a folder and type\n\n.. code:: shell\n\n    sudo python setup.py install\n\nTo use the ``tqdm`` notebook-style progress bars you need to install and enable\niwidgets:\n\n.. code:: shell\n\n    sudo pip install ipywidgets\n    sudo jupyter nbextension enable --py --sys-prefix widgetsnbextension\n\n\nContribute !\n-------------\n\nProglog is an open-source software originally written at the `Edinburgh Genome Foundry\n<http://www.genomefoundry.io>`_ by `Zulko <https://github.com/Zulko>`_\nand `released on Github <https://github.com/Edinburgh-Genome-Foundry/DnaCauldron>`_ under\nthe MIT licence (copyright Edinburgh Genome Foundry).\n\nProglog was not written by loggology experts, it *just works* with our projects and we use it a lot. Everyone is welcome to contribute if you find bugs or limitations !\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "logger log progress bar",
    "license": "MIT - copyright Edinburgh Genome Foundry",
    "maintainer": "",
    "maintainer_email": "",
    "name": "proglog",
    "platform": "",
    "project_url": "https://pypi.org/project/proglog/",
    "release_url": "https://pypi.org/project/proglog/0.1.8/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Log and progress bar manager for console, notebooks, web...",
    "version": "0.1.8"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b0e756e6e5fba1923d8c7b008a44a182",
          "sha256": "791ef6ad12000c58bba2fd114eb323cbbd0c060b54d54f6eb7fc4eaf9c1e21c5"
        },
        "downloads": -1,
        "filename": "proglog-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b0e756e6e5fba1923d8c7b008a44a182",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5700,
        "upload_time": "2017-08-13T19:21:21",
        "url": "https://files.pythonhosted.org/packages/02/65/e21e39f4b8f14db2ce6e3c4c1a511caafc3140e0d6440469596c94a45f31/proglog-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "90651425184651ca2f6ed2be3c4bcdcf",
          "sha256": "22ed4ac9874ead4bb9d4f370f7b8f198f4c38c60c3666de76c50807b25529ca9"
        },
        "downloads": -1,
        "filename": "proglog-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "90651425184651ca2f6ed2be3c4bcdcf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8350,
        "upload_time": "2017-08-13T19:34:20",
        "url": "https://files.pythonhosted.org/packages/ff/fe/fd5e3efc2612c0b0c536b7512a20b6b08950558c386d58a034a4f513579a/proglog-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c20b05dca4d336ff5328a95f911fac75",
          "sha256": "0e23d5a29369f7e6302f6cd0a6846252a3b89ad772a41d5fb31fd757f3a43f0c"
        },
        "downloads": -1,
        "filename": "proglog-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c20b05dca4d336ff5328a95f911fac75",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8344,
        "upload_time": "2017-08-13T22:56:43",
        "url": "https://files.pythonhosted.org/packages/5b/71/2fa657e73bf70259e16b3d6c2dfc245a2e73dacc548b0e1c177e1c627060/proglog-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "72a217b362f691473bcee91f6bbcd676",
          "sha256": "5f91e82ab754282413b9988b59bee25a9393c901dc99df5a8e718cddd471f940"
        },
        "downloads": -1,
        "filename": "proglog-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "72a217b362f691473bcee91f6bbcd676",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8354,
        "upload_time": "2017-08-14T15:08:40",
        "url": "https://files.pythonhosted.org/packages/89/65/0cd2f0c473f95399974c84c389e02fd6d5c176b33a260d88a5bc7ce50bb0/proglog-0.1.3.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c99276df7d85c09d2842aee3d8a54f9c",
          "sha256": "142f3781914f9b2e65783e5e55462ac8780c924bb7dfd80aa3136182c46df59e"
        },
        "downloads": -1,
        "filename": "proglog-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c99276df7d85c09d2842aee3d8a54f9c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8433,
        "upload_time": "2017-08-15T18:03:46",
        "url": "https://files.pythonhosted.org/packages/fe/a4/b869acc892a483bd0959a85f88d29382510098e74e250c54a7b3b858839f/proglog-0.1.4.tar.gz"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "04acb4beaae8b5f697ca6ec18ab308a4",
          "sha256": "b9f9f3aa510a250e3c95e72762dac0a1e0ec72a85570991f2e235cb3e4594f0c"
        },
        "downloads": -1,
        "filename": "proglog-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "04acb4beaae8b5f697ca6ec18ab308a4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9021,
        "upload_time": "2017-09-07T15:34:37",
        "url": "https://files.pythonhosted.org/packages/0a/4a/83c59151df84e2f031109dc5c8b13551f6ee01dcc421545e6b15ca44b535/proglog-0.1.5.tar.gz"
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "59415d78cdd9ac0412084aaf2586c732",
          "sha256": "859eed3475a930d2212f51a286930b27f810f9fbb18992388e9bc07b958ffdc8"
        },
        "downloads": -1,
        "filename": "proglog-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "59415d78cdd9ac0412084aaf2586c732",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9318,
        "upload_time": "2017-11-08T18:12:51",
        "url": "https://files.pythonhosted.org/packages/9d/0f/dbed04e6e4c814fcd90467e9b5c3a582e0e907d5a8ab0225d4ab69927989/proglog-0.1.6.tar.gz"
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d8aa0d6ff374d4ed28b3eca93bcb6987",
          "sha256": "a01fe6ef63d96614523ff187e9f3853a7f257bdb1427cfedc2eef257d34eaa95"
        },
        "downloads": -1,
        "filename": "proglog-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "d8aa0d6ff374d4ed28b3eca93bcb6987",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9329,
        "upload_time": "2017-11-10T17:34:14",
        "url": "https://files.pythonhosted.org/packages/a0/cf/cc49499c63b81a31ba07bcbafd437f06d4c4587b8b920572d1509cbacc36/proglog-0.1.7.tar.gz"
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f13fe3bc6083fb1ee571d9b8255660e6",
          "sha256": "49a7832f18c1f48f19f9b0613b3a08f95d0ae0b9866ceb2bfc1e318ac516e3a7"
        },
        "downloads": -1,
        "filename": "proglog-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "f13fe3bc6083fb1ee571d9b8255660e6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11870,
        "upload_time": "2017-12-01T19:13:05",
        "url": "https://files.pythonhosted.org/packages/cf/da/750804a34b3acc90857ba20a3852caf81e5f0cfc804a7b6ada11fdb9e29b/proglog-0.1.8.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f13fe3bc6083fb1ee571d9b8255660e6",
        "sha256": "49a7832f18c1f48f19f9b0613b3a08f95d0ae0b9866ceb2bfc1e318ac516e3a7"
      },
      "downloads": -1,
      "filename": "proglog-0.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "f13fe3bc6083fb1ee571d9b8255660e6",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 11870,
      "upload_time": "2017-12-01T19:13:05",
      "url": "https://files.pythonhosted.org/packages/cf/da/750804a34b3acc90857ba20a3852caf81e5f0cfc804a7b6ada11fdb9e29b/proglog-0.1.8.tar.gz"
    }
  ]
}