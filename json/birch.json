{
  "info": {
    "author": "Shay Palachy",
    "author_email": "shay.palachy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "birch |birch_icon|\n##################\n|PyPI-Status| |PyPI-Versions| |Build-Status| |Codecov| |LICENCE|\n\nSimple hierarchical configuration for Python packages.\n\n.. |birch_icon| image:: https://github.com/shaypal5/birch/blob/cc5595bbb78f784a3174a07157083f755fc93172/birch.png\n   :height: 87\n   :width: 40 px\n   :scale: 50 %\n   \n.. .. image:: https://github.com/shaypal5/birch/blob/b10a19a28cb1fc41d0c596df5bcd8390e7c22ee7/birch.png\n\n.. code-block:: python\n\n  from birch import Birch\n  cfg = Birch('mypackage')\n  # read both the MYPACKAGE_SERVER_HOSTNAME environment variable\n  # and ~/.mypackage/cfg.json containing {'server': {'port': 55}}\n  connect(cfg['SERVER_HOSTNAME'], cfg['server']['port'])\n\n.. contents::\n\n.. section-numbering::\n\n\nInstallation\n============\n\n.. code-block:: bash\n\n  pip install birch\n\n\nFeatures\n========\n\n* Supported formats: JSON, YAML.\n* Pure python.\n* Supports Python 3.4+.\n* Fully tested.\n\n\nUse\n===\n\nBasic use\n---------\n\n``birch`` provides a simple way to read simple hierarchical configuration for your Python package or application from both environment variables and configuration files. \n\n``birch`` uses namespaces to manage configuration values. The access to each namespace is done via a ``Birch`` object initialized with that namespace. Though written with a specific use case in mind, where a single package uses a single namespace to manage its configuration, any number of namespaces can be used. For example:\n\n.. code-block:: python\n\n  from birch import Birch\n  zubat_cfg = Birch('zubat')\n  golbat_cfg = Birch('golbat')\n\n\nEach namespace encompasses all values set by either environment variables starting with ``<uppercase_namespace>_``, or defined within ``cfg`` files (of a supported format) located in the ``~/.<namespace>`` directory.\n\nFor example, the ``zubat`` namespace encompasses environment variables such as ``ZUBAT_HOSTNAME`` and ``ZUBAT_PORT``, and all mappings in the ``~/.zubat/cfg.json`` file (if it exists).\n\nOnce defined in such a way, the ``Birch`` object can be used to access the values of mappings of both types (with or without the namespace suffix; casing is also ignored). For example:\n\n.. code-block:: python\n\n  >>> os.environ['ZUBAT_SERVER_HOST'] = 'www.zubat.com'\n  >>> os.environ['ZUBAT_SERVER_PORT'] = '87'\n  >>> from birch import Birch\n  >>> zubat_cfg = Birch('zubat')\n  >>>> zubat_cfg['ZUBAT_SERVER_HOST']\n  'www.zubat.com'\n  >>> zubat_cfg['SERVER_PORT']\n  '87'\n  >>> zubat_cfg['server_port']\n  '87'\n\n\nHierarchical configuration\n--------------------------\n\n``birch`` supports a simple hierarchy between configuration mappings. The ``_`` character is used to signal a hierarchical mapping, so the ``ZUBAT_SERVER_PORT`` environment variable is equivalent to ``{'server': {'port': 55}}`` mapping given in a ``~/.zubat/cfg.json`` file, for example. It is also **partially** equivalent to the ``{'server_port': 55}`` mapping.\n\nAs such, hierarchical mapping can be accessed either using ``_`` to indicate a hierarchical path, or using dict-like item access:\n\n.. code-block:: python\n\n  >>> os.environ['ZUBAT_SERVER_HOST'] = 'www.zubat.com'\n  >>> from birch import Birch\n  >>> zubat_cfg = Birch('zubat')\n  >>>> zubat_cfg['SERVER_HOST']\n  'www.zubat.com'\n  >>>> zubat_cfg['SERVER']['HOST']\n  'www.zubat.com'\n\n\n**This is not true for non-hierarchical mappings**; so, ``{'server_port': 55}`` can only be accessed with ``zubat_cfg['SERVER_PORT']``, and not using ``zubat_cfg['SERVER']['PORT']``.\n\nAlso, **note that casing is not ignored for levels after the first**, so a mapping given by the ``ZUBAT_SERVER_PORT`` environment variable cannot be read with  ``zubat_cfg['server']['port']``, but only with\n``zubat_cfg['SERVER']['PORT']`` or ``zubat_cfg['server']['PORT']``.\n\nAs such, a good practice is to only use upper-case strings for mapping access, anf not use the ``_`` character within a name in configuration files.\n\n\nResolution order\n----------------\n\nA namespace is always loaded with matching environment variables **after** all configuration files has been loaded, and corresponding mappings will thus override their file-originating counterparts; e.g. the ``ZUBAT_SERVER_PORT`` environment variable will overwrite the value of the mapping ``{'server': {'port': 55}}`` given in a ``~/.zubat/cfg.json`` file. \n\nThe loading order of different files, while deterministic, is undefined and not part of the API. Thus, ``cfg`` files with different file extensions can not be relied upon to provide private-vs-shared configuration functionality.\n\n\nConfiguring birch\n-----------------\n\nConfiguration directories\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBy default ``birch`` looks for files only in the ``~/.<namespace>`` directory. You can set a different set of directories to read by populating the ``directories`` constructor parameter with a different directory path, or a list of paths.\n\n\nFile formats\n~~~~~~~~~~~~\n\nBy default, ``birch`` will only try to read ``cfg.json`` files. To dictate a different set of supported format, populate the ``supported_formats`` constructor parameter with the desired formats. \n\nFor example, ``Birch('zubat', supported_formats=['json', 'yaml'])`` will read both ``cfg.json`` and ``cfg.yaml`` files, while ``Birch('golbat', supported_formats='yaml')`` will ony read ``cfg.yaml`` (and ``cfg.yml``) files.\n\nCurrently supported formats are:\n\n* ``JSON`` - Looks for ``cfg.json`` files.\n* ``YAML`` - Looks for ``cfg.yaml`` and ``cfg.yml`` files.\n\n\nContributing\n============\n\nPackage author and current maintainer is Shay Palachy (shay.palachy@gmail.com); You are more than welcome to approach him for help. Contributions are very welcomed.\n\nInstalling for development\n----------------------------\n\nClone:\n\n.. code-block:: bash\n\n  git clone git@github.com:shaypal5/birch.git\n\n\nInstall in development mode, including test dependencies:\n\n.. code-block:: bash\n\n  cd birch\n  pip install -e '.[test]'\n\nOr, if you are using ``pipenv``, use the following command to create a ``pipenv`` Python virtual environment with development dependencies:\n\n.. code-block:: bash\n\n  cd birch\n  pipenv install --dev\n\n\nRunning the tests\n-----------------\n\nTo run the tests use:\n\n.. code-block:: bash\n\n  cd birch\n  pytest\n\nOr, if you are using ``pipenv``:\n\n.. code-block:: bash\n\n  cd birch\n  pipenv run pytest\n\n\nAdding documentation\n--------------------\n\nThe project is documented using the `numpy docstring conventions`_, which were chosen as they are perhaps the most widely-spread conventions that are both supported by common tools such as Sphinx and result in human-readable docstrings. When documenting code you add to this project, follow `these conventions`_.\n\n.. _`numpy docstring conventions`: https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt\n.. _`these conventions`: https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt\n\n\nCredits\n=======\n\nCreated by `Shay Palachy <http://www.shaypalachy.com/>`_ (shay.palachy@gmail.com).\n\n\n.. |PyPI-Status| image:: https://img.shields.io/pypi/v/birch.svg\n  :target: https://pypi.python.org/pypi/birch\n\n.. |PyPI-Versions| image:: https://img.shields.io/pypi/pyversions/birch.svg\n   :target: https://pypi.python.org/pypi/birch\n\n.. |Build-Status| image:: https://travis-ci.org/shaypal5/birch.svg?branch=master\n  :target: https://travis-ci.org/shaypal5/birch\n\n.. |LICENCE| image:: https://img.shields.io/github/license/shaypal5/birch.svg\n  :target: https://github.com/shaypal5/birch/blob/master/LICENSE\n\n.. |Codecov| image:: https://codecov.io/github/shaypal5/birch/coverage.svg?branch=master\n   :target: https://codecov.io/github/shaypal5/birch?branch=master\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/shaypal5/birch",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "birch",
    "platform": "",
    "project_url": "https://pypi.org/project/birch/",
    "release_url": "https://pypi.org/project/birch/0.0.4/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Utilities for pandas.",
    "version": "0.0.4"
  },
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f5bd1a4ff0e3851bbc5c2de073f842cb",
          "sha256": "cc9f415817cf5b9b1f9d803e7ec04659b888e401009d31aaf222a1f94d2e0434"
        },
        "downloads": -1,
        "filename": "birch-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5bd1a4ff0e3851bbc5c2de073f842cb",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 8125,
        "upload_time": "2018-02-11T11:25:04",
        "url": "https://files.pythonhosted.org/packages/12/64/c84b42163a6f4a0cde37f6cb6c8dcf9cbc220aaa5204dda085c7a560efd6/birch-0.0.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3cbf1b66c6df7c83f1a7625012b383b9",
          "sha256": "4a5f17655cb685328eb0ef8df6abcc9508e07e7bf9153250198e9e5281252e64"
        },
        "downloads": -1,
        "filename": "birch-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3cbf1b66c6df7c83f1a7625012b383b9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21345,
        "upload_time": "2018-02-11T11:25:01",
        "url": "https://files.pythonhosted.org/packages/9c/ba/78e1c6b1c64873dbf2e500599b48b07d7de24df3ebd20bf7fdfc7445f359/birch-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fd9fdff0565afaf6f5c603143fa9d83f",
          "sha256": "ce5c5eb3da60c7444a7e6a3599b598ed8852fcaa269d4d6517ef4993a8497bc7"
        },
        "downloads": -1,
        "filename": "birch-0.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd9fdff0565afaf6f5c603143fa9d83f",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 11792,
        "upload_time": "2018-02-11T15:03:12",
        "url": "https://files.pythonhosted.org/packages/ab/e2/384f32dfa14ca62a031f795aab5392828e96b5c1b7339b180c37c3a15d29/birch-0.0.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "faff4077c9c1e741b5c42c04a670d593",
          "sha256": "c694b2491bcb3367a2916506e00ba11ac782753c33ba1c9a92b2c042ba8e8c36"
        },
        "downloads": -1,
        "filename": "birch-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "faff4077c9c1e741b5c42c04a670d593",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23671,
        "upload_time": "2018-02-11T15:03:11",
        "url": "https://files.pythonhosted.org/packages/41/bb/48cc0b7d73e12ccdf124c1dec48ab217adfbab4b54fa9cba47dbeec1db79/birch-0.0.3.tar.gz"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "df33cd0ae880c3df210f6d8a35157047",
          "sha256": "0672eb568f735eb140ef84365471855a4aa7425ad2934a1941acdca48a55e473"
        },
        "downloads": -1,
        "filename": "birch-0.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df33cd0ae880c3df210f6d8a35157047",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 11836,
        "upload_time": "2018-02-11T15:20:45",
        "url": "https://files.pythonhosted.org/packages/0f/7f/18a6f7b399f6d56f9ab07fa78cfbac9ff9e712d37060b1a31f38628a147e/birch-0.0.4-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "86d40f45c85ff0a0de878cb5895dea5f",
          "sha256": "9545cc13e29620ab74abb414179249fe3053305a7f41f4367be6e4737d20d131"
        },
        "downloads": -1,
        "filename": "birch-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "86d40f45c85ff0a0de878cb5895dea5f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23758,
        "upload_time": "2018-02-11T15:20:43",
        "url": "https://files.pythonhosted.org/packages/ac/98/3ea4d6073dff2af89051d67408edc091dec0555337b53bf1e982f9051724/birch-0.0.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "df33cd0ae880c3df210f6d8a35157047",
        "sha256": "0672eb568f735eb140ef84365471855a4aa7425ad2934a1941acdca48a55e473"
      },
      "downloads": -1,
      "filename": "birch-0.0.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "df33cd0ae880c3df210f6d8a35157047",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 11836,
      "upload_time": "2018-02-11T15:20:45",
      "url": "https://files.pythonhosted.org/packages/0f/7f/18a6f7b399f6d56f9ab07fa78cfbac9ff9e712d37060b1a31f38628a147e/birch-0.0.4-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "86d40f45c85ff0a0de878cb5895dea5f",
        "sha256": "9545cc13e29620ab74abb414179249fe3053305a7f41f4367be6e4737d20d131"
      },
      "downloads": -1,
      "filename": "birch-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "86d40f45c85ff0a0de878cb5895dea5f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 23758,
      "upload_time": "2018-02-11T15:20:43",
      "url": "https://files.pythonhosted.org/packages/ac/98/3ea4d6073dff2af89051d67408edc091dec0555337b53bf1e982f9051724/birch-0.0.4.tar.gz"
    }
  ]
}