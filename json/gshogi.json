{
  "info": {
    "author": "John Cheetham",
    "author_email": "developer@johncheetham.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: X11 Applications :: GTK",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: C",
      "Programming Language :: Python",
      "Topic :: Games/Entertainment :: Board Games"
    ],
    "description": "gshogi - John Cheetham - http://www.johncheetham.com/projects/gshogi\n\nDescription\n-----------\ngshogi is a program to play Shogi (Japanese Chess). It has a builtin\nengine and can also use USI engines. It is written in python3/C and runs\non GTK3 (PyGI) desktops.\n\nIt's licensed under the GPL v3+ (see the file named LICENSE) and aimed mainly\nat Linux users.\n\nIt uses GTK3 for the gui and C for the engine code.\n\nSee the project homepage for more information on gshogi and USI engines.\n\n\nInstallation\n------------\nPython 3 is required. If you are using a system that uses python 2 as default\n(do python -V to check) then you need to use python3 for commands and package\nnames. For example the package name will be python3-cairo instead of\npython-cairo and the build command will be python3 setup.py build.\n\n\nYou need to install these packages first:\n\n    gcc python python-devel python-cairo python-gobject gtk3\n\n\nRunning gshogi from the Source Directory\n\n    You can run gshogi from the source directory without\n    doing the full install.\n\n    To do this:\n\n        Enter 'python setup.py build' to build it.\n\n        Then 'python run.py' to run it.\n\n\nInstalling on the system\n\n    Enter 'python setup.py build' to build it (as normal user).\n    Then 'python setup.py install' to install it (as root user).\n\n    Note:\n\n        You must run 'python setup.py build' first since this creates\n        the opening book (don't just run 'python setup.py install'\n        on it's own)\n\n        You can check the build step worked by looking for a file called\n        engine.so under the build directory.\n\n        gshogi should now be installed on your system. You can launch it from\n        the gnome menu (under games) or type 'gshogi' in any terminal window.\n\n        There is no uninstall (setuptools doesn't have one). If you need to\n        uninstall you have to make a note of the file names and then delete\n        them manually.\n\n        If running the build/install multiple times it's best to delete the\n        build folder each time.\n\nNote that the binary opening book (data/opening.bbk) has a different format\non 32 bit and 64 bit systems. You cannot use the 32 bit book on a 64 bit\nsystem and vice versa. For this reason the opening book is created during the\ninstall when you do 'python setup.py build'.\n\nHere is some help for installing on specific distros.\n\nFor Fedora 23:\n\n    Install packages (as root user)\n\n        dnf install gcc redhat-rpm-config python3 python3-devel python3-cairo python3-gobject\n\n    build (as normal user)\n\n        python3 setup.py build\n\n    run from the source directory\n\n        python3 run.py\n\n    Install on the system (as root user)\n\n        python3 setup.py install\n\n    run the installed version\n\n        gshogi\n    \n\nFor Debian 8 Jessie:\n\n    Install packages (as root user)\n\n        apt-get install gcc python3-dev python3-gi-cairo\n\n    build (as normal user)\n\n        python3 setup.py build\n\n    run from the source directory\n\n        python3 run.py\n\n    Install on the system (as root user)\n\n        python3 setup.py install\n\n    run the installed version\n\n        gshogi\n\nFor Arch:\n\n    Install packages (as root user)\n\n        pacman -S python python-gobject python-cairo gcc\n\n    build (as normal user)\n\n        python setup.py build\n\n    run from the source directory\n\n        python run.py\n\n    Install on the system (as root user)\n\n        python setup.py install\n\n    run the installed version\n\n        gshogi\n\n\nUsage\n-----\nYou play black (the pieces at the bottom of the board). The computer plays\nwhite (the pieces at the top of the board). Press the green go button to\nstart the clock. To move a piece click on it and then click on the square\nyou want to move it to (or drag it and drop it).\n\nAlso you can play one engine against another which is good for comparing\nUSI engines.\n\nSee http://en.wikipedia.org/wiki/Shogi for the rules of Shogi.\n\nIf you want to see the USI commands then start it from a terminal with:\n\n    gshogi -vusi     (or ./run.py -vusi if not installed)\n\nFor full debugging output use the command:\n\n        gshogi -v    (or ./run.py -v if not installed)\n\n\nFile Support\n------------\nYou can load/save games in PSN format or in gshog format.\nIt is recommended to use PSN format.\n\ngshogi can also read multi-game PSN files.\n\nUse gshog format for exchanging games with GNU Shogi.\n\n\nEdit Board Function\n-------------------\nWhen edting the board position you can increase the count of a piece in\nthe komadai by right-clicking on it. Left-click on it to decrease the\ncount.\n\nTo add a white piece to the main board right-click on the square you\nwant to add the piece to then select the piece from the pop-up menu.\nTo add a black piece left-click on the square.\n\n\nTime control/Level support\n--------------------------\nExamples of time controls that can be used with gshogi.\n\nThese were tested with the gse 0.1.4 engine.\nNote that not all USI engines will work with all time controls.\nMost engines work OK with byoyomi so use that if you have problems.\n\nNote that times on the go command are in milliseconds.\n\nbyoyomi\n\n    e.g. 60 minutes game time plus 30 seconds byoyomi\n    This means the player can make as many or as few moves as they like\n    in the 30 minutes and after that they will have 30 seconds per move.\n\n    go btime 3600000 wtime 3600000 byoyomi 30000\n\n    If you want a fixed time of 10 seconds per move:\n    go btime 0 wtime 0 byoyomi 10000\n\n    see http://en.wikipedia.org/wiki/Byoyomi\n\nclassical\n\n    e.g. 5 moves in 10 minutes\n\n    go btime 300000 wtime 300000 movestogo 40\n\nIncremental\n\n    e.g. 30 minutes game time and 10 seconds bonus time per move\n    This means the basic time for the game is 30 minutes and after\n    each move a bonus of 10 seconds is added to the clock.\n\n    go btime 1800000 wtime 1800000 binc 10000 winc 10000\n\nFixed Time Per Move\n\n    e.g. 20 seconds per move\n    go movetime 20000\n\nFixed Search Depth\n\n    e.g. Terminate the search when a depth of 8 is reached.\n\n    go depth 8\n\nInfinite search\n\n    The search will go on indefinitely and will only terminate if\n    a stop command (move now) is sent from the gui.\n\n    go infinite\n\nFixed No. of Nodes\n\n    The search will terminate after a fixed no. of nodes has been searched.\n\n    go nodes 10000000\n\n\nNote that byoyomi is not part of the original USI specification\n(See http://www.glaurungchess.com/shogi/usi.html) but it is\nsupported in most USI engines.\n\n\nCustom Pieces\n-------------\nYou can load custom pieces using the 'Load Custom Pieces' button on the\n'set pieces' menu.\n\nTo set up your own custom pieces you must provide images with these filenames.\nYou can use either png or svg files. If you use png change the file extension\nfrom svg to png.\n\n    Black Pieces:\n\n        =======================   ============\n        Piece                     Filename\n        =======================   ============\n        King                      kingB.svg\n        Rook                      rookB.svg\n        Bishop                    bishopB.svg\n        Gold General              goldB.svg\n        Silver General            silverB.svg\n        Knight                    knightB.svg\n        Lance                     lanceB.svg\n        Pawn                      pawnB.svg\n        Promoted Rook             rookPB.svg\n        Promoted Bishop           bishopPB.svg\n        Promoted Silver General   silverPB.svg\n        Promoted Knight           knightPB.svg\n        Promoted Lance            lancePB.svg\n        Promoted Pawn             pawnPB.svg\n        =======================   ============\n\nThe black piece images are mandatory. You can optionally provide images\nfor the white pieces as well. If you provide white piece images gshogi\nwill use them. If you don't it will use the black piece images and\nrotate them through 180 degress.\n\n    White Pieces:\n\n        =======================   ============\n        Piece                     Filename\n        =======================   ============\n        King                      kingW.svg\n        Rook                      rookW.svg\n        Bishop                    bishopW.svg\n        Gold General              goldW.svg\n        Silver General            silverW.svg\n        Knight                    knightW.svg\n        Lance                     lanceW.svg\n        Pawn                      pawnW.svg\n        Promoted Rook             rookPW.svg\n        Promoted Bishop           bishopPW.svg\n        Promoted Silver General   silverPW.svg\n        Promoted Knight           knightPW.svg\n        Promoted Lance            lancePW.svg\n        Promoted Pawn             pawnPW.svg\n        =======================   ============\n\nSee the project homepage to download an example.\n\n\nAcknowledgements\n----------------\ngshogi uses C engine code and includes some board pieces from\nGNU Shogi (version 1.3.2).",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://www.johncheetham.com/projects/gshogi/",
    "keywords": null,
    "license": "GPLv3+",
    "maintainer": null,
    "maintainer_email": null,
    "name": "gshogi",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/gshogi/",
    "release_url": "https://pypi.org/project/gshogi/0.5.0/",
    "requires_python": null,
    "summary": "A Shogi Program (Japanese Chess)",
    "version": "0.5.0"
  },
  "releases": {
    "0.4.5": [],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "02396b58beaecf95eff82a95f1d7065f",
          "sha256": "fabd3a5110f8f93b88cdcab559ece2a21fabe0404de4ff0c0ac10aa335701ee1"
        },
        "downloads": 474,
        "filename": "gshogi-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "02396b58beaecf95eff82a95f1d7065f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 671620,
        "upload_time": "2016-04-11T07:18:19",
        "url": "https://files.pythonhosted.org/packages/a8/f3/a5070327ced12f163afb61e3f3e6a00d0ea1a7aa320c3a95206c6063fc0f/gshogi-0.5.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "02396b58beaecf95eff82a95f1d7065f",
        "sha256": "fabd3a5110f8f93b88cdcab559ece2a21fabe0404de4ff0c0ac10aa335701ee1"
      },
      "downloads": 474,
      "filename": "gshogi-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "02396b58beaecf95eff82a95f1d7065f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 671620,
      "upload_time": "2016-04-11T07:18:19",
      "url": "https://files.pythonhosted.org/packages/a8/f3/a5070327ced12f163afb61e3f3e6a00d0ea1a7aa320c3a95206c6063fc0f/gshogi-0.5.0.tar.gz"
    }
  ]
}