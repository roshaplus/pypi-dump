{
  "info": {
    "author": "Gobierno Abierto Argentina",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: ISC License (ISCL)",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "data-cleaner\n===\n\n[![Coverage Status](https://coveralls.io/repos/gobabiertoAR/data-cleaner/badge.svg?branch=master)](https://coveralls.io/r/gobabiertoAR/data-cleaner?branch=master)\n[![Build Status](https://travis-ci.org/gobabiertoAR/data-cleaner.svg?branch=master)](https://travis-ci.org/gobabiertoAR/data-cleaner)\n[![PyPI](https://badge.fury.io/py/data-cleaner.svg)](http://badge.fury.io/py/data-cleaner)\n[![Stories in Ready](https://badge.waffle.io/gobabiertoAR/data-cleaner.png?label=ready&title=Ready)](https://waffle.io/gobabiertoAR/data-cleaner)\n[![Documentation Status](http://readthedocs.org/projects/data-cleaner/badge/?version=latest)](http://data-cleaner.readthedocs.org/en/latest/?badge=latest)\n\n\nPaquete para limpieza de datos, seg\u00fan los [est\u00e1ndares de limpieza de la SSIPyGA](https://github.com/gobabiertoAR/documentacion-estandares/tree/master/datos/limpieza) - Gobierno Abierto Argentina\n\n*Nota: Este paquete a\u00fan se encuentra en etapa temprana de desarrollo y la interface podr\u00eda sufrir modificaciones significativas.*\n\n* Para referencia detallada de este paquete leer la [documentaci\u00f3n] (http://data-cleaner.readthedocs.org/en/latest/) *\n\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**Table of Contents**  *generated with [DocToc](https://github.com/thlorenz/doctoc)*\n\n- [Instalaci\u00f3n](#instalaci%C3%B3n)\n- [Uso](#uso)\n- [Limpieza autom\u00e1tica](#limpieza-autom%C3%A1tica)\n- [Template de script de limpieza](#template-de-script-de-limpieza)\n- [Reglas de limpieza](#reglas-de-limpieza)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Instalaci\u00f3n\n\nRequiere tener **Python 2.7** instalado en el sistema. Si se va a instalar python desde cero, se recomienda instalar la distribuci\u00f3n de **Anaconda** con Python 2.7, ya que viene con varias librer\u00edas preinstaladas.\n\nPara uso simple:\n```\npip install data_cleaner\n```\n\nPara desarrollo:\n```\ncd package_directory\npip install -e .\n```\n\n## Uso\n\n### Lista de reglas\n\nSe puede limpiar un CSV a trav\u00e9s de una **lista de reglas**. El siguiente ejemplo toma un csv, capitaliza todos los strings en la columna \"dependencia\" y convierte todas las fechas de la columna \"fecha_completa_audiencia\" que sigan el formato *19-02-2016 09:11* al est\u00e1ndar ISO 8601 *2016-02-19T09:11:00-03:00*\n\n```python\nfrom data_cleaner import DataCleaner\n\ninput_path = \"samples/example.csv\"\noutput_path = \"samples/clean_example.csv\"\n\nrules = [\n    {\n        \"nombre_propio\": [\n            {\"field\": \"dependencia\"}\n        ]\n    },\n    {\n        \"fecha_completa\": [\n            {\"field\": \"fecha_completa_audiencia\",\n             \"time_format\": \"DD-MM-YYYY HH:mm\"}\n        ]\n    }\n]\n\ndc = DataCleaner(input_path)\ndc.clean_file(rules, output_path)\n```\n\nTambi\u00e9n se pueden limpiar los datos sin guardar el csv, para analizarlos en memoria.\n\n```python\ndc.clean(rules)\ndc.df  # accede al DataFrame donde est\u00e1n los datos\n```\n\n### M\u00e9todos de limpieza\n\nLas reglas de limpieza del cleaner tambi\u00e9n se pueden utilizar como m\u00e9todos individuales que devuelven una pandas.DataSeries o un pandas.DataFrame (en el caso en que el m\u00e9todo genere m\u00faltiples columnas nuevas).\n\n```python\ndependencia_clean = dc.nombre_propio(\"dependencia\")\n\nprint dependencia_clean\n\n0    Presidencia De La Naci\u00f3n\n1    Presidencia De La Naci\u00f3n\n2    Presidencia De La Naci\u00f3n\n3    Presidencia De La Naci\u00f3n\n4    Presidencia De La Naci\u00f3n\nName: dependencia, dtype: object\n```\n\nM\u00e9todo de limpieza con par\u00e1metros.\n\n```python\nfecha_audiencia_clean = dc.fecha_completa(\"fecha_audiencia\",\n                                          \"DD-MM-YYYY HH:mm\")\n\nprint fecha_audiencia_clean\n\n0    2013-11-12T10:00:00-03:00\n1    2014-12-13T10:50:00-03:00\n2                          NaN\n3                          NaN\n4                          NaN\nName: fecha_audiencia, dtype: object\n```\n\nSi se desea que la limpieza practicada perdure en el objeto, se debe especificar el keyword argument `inplace=True`.\n\n```python\ndc.nombre_propio(\"dependencia\", inplace=True)\n\nprint dc.df.dependencia\n\n0    Presidencia De La Naci\u00f3n\n1    Presidencia De La Naci\u00f3n\n2    Presidencia De La Naci\u00f3n\n3    Presidencia De La Naci\u00f3n\n4    Presidencia De La Naci\u00f3n\nName: dependencia, dtype: object\n```\n\nEn todo momento se puede acceder al pandas.DataFrame que contiene la tabla de datos, donde se ver\u00e1n reflejados los cambios luego de aplicar m\u00e9todos de limpieza con el par\u00e1metro `inplace=True`.\n\n```python\ndc.df  # accede al pandas.DataFrame del cleaner\n```\n\nPara guardar el pandas.DataFrame en cualquier momento, probablemente luego de probar y aplicar algunas transformaciones.\n\n```python\ndc.save(output_path)\n```\n\nEl m\u00e9todo `DataCleaner.save()` redirige al m\u00e9todo `pandas.DataFrame.to_csv()`, y por lo tanto tienen los mismos argumentos.\n\n### Encoding del input, y otros\n\nSe asume que el input es un csv encodeado en *utf-8*, separado por comas y que usa comillas dobles para el enclosing. Si alguno de estos par\u00e1metros (especialmente el enconding) es diferente, debe especificarse.\n\n```python\ndc = DataCleaner(\"ugly.csv\", encoding=\"latin1\", sep=\";\", quotechar=\"'\")\n```\n\n## Limpieza autom\u00e1tica\n\n### Formato del archivo limpio\n\nLuego de la limpieza los datos se guardan siempre en un archivo *CSV*, encodeado en *utf-8* separado por *\",\"* y usando *'\"'* como caracter de citas.\n\n### Nombres de los campos\n\nLos nombres de los campos se normalizan autom\u00e1ticamente. S\u00f3lo el uso de caracteres alfanum\u00e9ricos ASCII y \"_\" est\u00e1 permitido. Los campos deben nombrarse con palabras en min\u00fasculas separadas por gui\u00f3n bajo. Para esto el objeto:\n\n* Reemplaza espacios y \"-\" por \"_\"\n* Reemplaza todos los caracteres alfanum\u00e9ricos por su versi\u00f3n ASCII m\u00e1s pr\u00f3xima\n* Remueve todos los caracteres especiales que no sean \"_\"\n\n### Saltos de l\u00ednea\n\nNo se permiten saltos de l\u00ednea en los valores, al momento de crear un objeto DataCleaner se reemplazan todos los saltos de l\u00ednea que est\u00e9n dentro del caracter de enclosing (usualmente comillas dobles '\"') por un espacio \" \".\n\n## Template de script de limpieza\n\nPara realizar la limpieza de un archivo CSV de datos con `data-cleaner` se sugiere utilizar el [template de script de limpieza](templates/cleaning_script.py). Este permite correr la limpieza desde la l\u00ednea de comandos e implementar pasos de limpieza personalizados que exceden las funcionalidades del paquete.\n\n## Reglas de limpieza\n\nSon diccionarios cuyas *keys* son los nombres de las reglas de limpieza y cuyos *values* son (a) lista de columnas donde aplicar la regla -en el caso en que la regla no requiera otros par\u00e1metros- o (b) lista de par\u00e1metros que necesita la regla para funcionar -donde el primer par\u00e1metro es siempre el campo donde aplicar la regla-.\n\n### Renombrar columnas (*renombrar_columnas*)\nRenombra columnas de la tabla de datos. \n\n**Especificaci\u00f3n:**\n\n```python\n{\"renombrar_columnas\": [\n    {\"field\": \"columna_actual_1\", \"new_field\": \"columna_nueva_1\"},\n    {\"field\": \"columna_actual_2\", \"new_field\": \"columna_nueva_2\"},\n    {\"field\": \"columna_actual_3\", \"new_field\": \"columna_nueva_3\"}\n]}\n```\n\n**Ejemplo:**\n\n```python\n{\"renombrar_columnas\": [\n    {\"field\": \"aut_dependencia\", \"new_field\": \"dependencia\"},\n    {\"field\": \"sujeto_obligado_audiencia\", \"new_field\": \"sujeto_obligado\"}\n]}\n```\n\n### Remover columnas (*remover_columnas*)\nRemueve campos de la tabla de datos.\n\nEntre otras cosas, se puede utilizar para remover los campos originales -no recomendado- que dieron origen a m\u00faltiples campos nuevos cuando se utiliz\u00f3 alguna regla de *split*.\n\n**Especificaci\u00f3n:**\n\n```python\n{\"remover_columnas\": [\n    {\"field\": \"columna_a_remover_1\"},\n    {\"field\": \"columna_a_remover_2\"}\n]}\n```\n\n**Ejemplo:**\n\n```python\n{\"remover_columnas\": [\n    {\"field\": \"dependencia\"},\n    {\"field\": \"fecha_completa_audiencia\"}\n]}\n```\n\n### Capitalizar nombres propios (*nombre_propio*)\nNormaliza todas las palabras que encuentra poni\u00e9ndolas en min\u00fasculas y capitalizando la primera letra de cada una.\n\nSe aplica a todos aquellos campos de datos que tengan nombres de personas. En el caso de direcciones, ciudades, pa\u00edses, organismos e instituciones debe aplicarse con mucha cautela, existen casos donde esta regla de limpieza hace m\u00e1s mal que bien (ej.: las instituciones pueden tener siglas, que no corresponde capitalizar).\n\nArgumentos opcionales:\n\n* **keep_original**: True para conservar la columna original / False para removerla (Default: False)\n* **sufix**: Sufijo para agregar a la nueva columna limpia (Default: \"clean\")\n* **lower_words**: Lista de palabras que deben mantenerse en min\u00fasculas, sin aplicar capitalizaci\u00f3n (Default: [\"el\", \"los\", \"la\", \"las\", \"de\", \"del\", \"en\", \"y\"])\n\n**Especificaci\u00f3n:**\n\n```python\n{\"nombre_propio\": [\n    {\"field\": \"columna_1\"},\n    {\"field\": \"columna_2\", \"lower_words\": [\"lower_word1\", \"lower_word2\"]}\n]}\n```\n\n**Ejemplo:**\n\n```python\n{\"nombre_propio\": [\n    {\"field\": \"dependencia\", \"lower_words\": [\"en\", \"la\"]}\n    {\"field\": \"dependencia\", \"lower_words\": []}\n    {\"field\": \"dependencia\"}\n]}\n```\n\n### Dar formato a correo electronico (*mail_format*)\n\nParsea todas las direcciones de correo electr\u00f3nico en cada fila de una campo y les da el formato estandar definido. Es decir, las pasa todas a min\u00fasculas y las separa con comas.\n\nArgumentos opcionales:\n\n* **keep_original**: True para conservar la columna original / False para removerla (Default: False)\n* **sufix**: Sufijo para agregar a la nueva columna limpia (Default: \"clean\")\n\n**Especificaci\u00f3n:**\n\n```python\n{\"mail_format\": [\n    {\"field\": \"columna_1\"},\n    {\"field\": \"columna_2\"}\n]}\n```\n\n**Ejemplo:**\n\n```python\n{\"mail_format\": [\n    {\"field\": \"correo_electronico\"}\n]}\n```\n\n### Normalizar strings (*string*)\nUtiliza el algoritmo *Key Collision Fingerprint* para clusterizar strings con el mismo contenido, normalizando capitalizaci\u00f3n, acentos, caracteres especiales, etc. \n\nEste algoritmo busca unificar la forma de escribir strings que contienen id\u00e9nticas palabras (cadenas de caracteres alfanum\u00e9ricos separados por espacios) pero difieren en otros aspectos. [Para m\u00e1s detalle ver Key Collision Methods de OpenRefine](https://github.com/OpenRefine/OpenRefine/wiki/Clustering-In-Depth#key-collision-methods). La implementaci\u00f3n que se utiliza es una adaptaci\u00f3n de [esta](https://github.com/tweirick/okstate_bioinformatics_command_line_programs/blob/master/misc_programs/FingerprintKeyer.py), publicada en Github por Tyler Weirick.\n\nArgumentos opcionales:\n\n* **sort_tokens**: False (default) para no ordenar las palabras al crear el fingerprint de un string. Esto ubicar\u00e1 a \"Sol Geriatrico\" y \"Geriatrico Sol\" en clusters separados, sin unificar el string en un sentido o en otro. Si se especifica True, ambos strings se reescribir\u00edan de una de las dos maneras.\n* **remove_duplicates**: False (default) para evitar remover tokens duplicados. Esto ubicar\u00e1 a \"Sol Sol Geriatrico\" en un cluster distinto a \"Sol Geriatrico\", sin elegir una forma de escribir el string para ambos casos. Si se especifica True, ambos strings se escribir\u00edan de una de las dos maneras.\n* **keep_original**: True para conservar la columna original / False para removerla (Default: False)\n* **sufix**: Sufijo para agregar a la nueva columna limpia (Default: \"clean\")\n\n**Especificaci\u00f3n:**\n\n```python\n{\"string\": [\n    {\"field\": \"columna_1\"},\n    {\"field\": \"columna_2\"}\n]}\n```\n\n**Ejemplo:**\n\n```python\n{\"string\": [\n    {\"field\": \"dependencia\"},\n    {\"field\": \"lugar_audiencia\"},\n    {\"field\": \"sujeto_obligado\"},\n    {\"field\": \"solicitante\"}\n]}\n```\n\n### Reemplazar listas de strings por valores predefinidos (*reemplazar*)\nReemplaza listas de strings por un valor predefinido que el usuario decide que representa a todas. Solo sirve para reemplazar valores **completos**\n\nArgumentos opcionales:\n\n* **keep_original**: True para conservar la columna original / False para removerla (Default: False)\n* **sufix**: Sufijo para agregar a la nueva columna limpia (Default: \"clean\")\n\n**Especificaci\u00f3n:**\n\n```python\n{\"reemplazar\": [\n    {\n     \"field\": \"columna\",\n     \"replacements\": {\"Nuevo1\": [\"Viejo\"], \"Nuevo2\": [\"ViejoA\", \"ViejoB\"]}\n    }\n]}\n```\n\n**Ejemplo:**\n\n```python\n{\"reemplazar\": [\n    {\n    \"field\": \"tipo\",\n    \"replacements\": {\"Servicios\": [\"Serv\"], \"Otros\": [\"Otro\", \"Loc\"]}\n    }\n]}\n\n```\nEn este ejemplo si el campo *tipo* tuviese el valor \"Serv de venta\" no ser\u00eda reemplazado, mientras que si tuviese el valor \"Serv\" ser\u00eda reemplazado por \"Servicios\"\n\n\n### Reemplazar partes de valores (substrings) por otros (*reemplazar_string*)\nReemplaza listas de substrings por otro substring. A diferencia del m\u00e9todo *reemplazar* que reemplaza directamente valores completos, *reemplazar_string* hace reemplazos parciales. Es una versi\u00f3n m\u00e1s sencilla de *string_regex_substitute* que no permite evaluar expresiones regulares.\n\nArgumentos opcionales:\n\n* **keep_original**: True para conservar la columna original / False para removerla (Default: False)\n* **sufix**: Sufijo para agregar a la nueva columna limpia (Default: \"clean\")\n\n**Especificaci\u00f3n:**\n\n```python\n{\"reemplazar_string\": [\n    {\n     \"field\": \"columna\",\n     \"replacements\": {\"Nuevo1\": [\"Viejo\"], \"Nuevo2\": [\"ViejoA\", \"ViejoB\"]}\n    }\n]}\n```\n\n**Ejemplo:**\n\n```python\n{\"reemplazar_string\": [\n    {\n    \"field\": \"tipo\",\n    \"replacements\": {\"Servicios\": [\"Serv\"], \"Otros\": [\"Otro\", \"Loc\"]}\n    }\n]}\n```\n\nEn este ejemplo si el campo *tipo* tuviese el valor \"Serv de venta\" ser\u00eda reemplazado por \"Servicios de Venta\".\n\n### Normalizar fecha completa (*fecha_completa*)\nEstandariza un campo **con fecha y hora** a su representaci\u00f3n en el est\u00e1ndar ISO 8601 (**YYYY-MM-DDTHH:MM:SS[.mmmmmm][+HH:MM]**). \n\nEj.: **05-02-2016 14:53** a **2016-02-05T14:53:00-03:00**\n\nPara el parsing de fechas se utiliza la librer\u00eda [*arrow*](http://crsmithdev.com/arrow/). En la regla debe especificarse el formato temporal en que la fecha est\u00e1 expresada en la tabla de datos original. El resultado siempre se convertir\u00e1 a ISO 8601 cuando sea posible, ante cualquier error se dejar\u00e1 la celda vac\u00eda.\n\nArgumentos opcionales:\n\n* **keep_original**: True para conservar la columna original / False para removerla (Default: False)\n\n**Especificaci\u00f3n:**\n\n```python\n{\"fecha_completa\": [\n    {\"field\": \"columna\", \"time_format\": \"DD-MM-YYYY HH:mm\"}\n]}\n```\n\n**Ejemplo:**\n\n```python\n{\"fecha_completa\": [\n    {\"field\": \"fecha_completa_audiencia\", \"time_format\": \"DD-MM-YYYY HH:mm\"}\n]}\n```\n\n### Normalizar fecha simple (*fecha_simple*)\nEstandariza un campo sin hora, d\u00eda o mes a su representaci\u00f3n en el est\u00e1ndar ISO 8601, obviando aquella parte de la representaci\u00f3n ISO para la que no se cuenta con datos suficientes.\n\nEj.: **05-02-2016** a **2016-02-05**\nEj.: **02-2016** a **2016-02**\n\nArgumentos opcionales:\n\n* **keep_original**: True para conservar la columna original / False para removerla (Default: False)\n\n**Especificaci\u00f3n:**\n\n```python\n{\"fecha_simple\": [\n    {\"field\": \"columna1\", \"time_format\": \"DD-MM-YYYY\"},\n    {\"field\": \"columna2\", \"time_format\": \"MM-YYYY\"}\n]}\n```\n\n**Ejemplo:**\n\n```python\n{\"fecha_simple\": [\n    {\"field\": \"fecha\", \"time_format\": \"DD-MM-YYYY\"},\n    {\"field\": \"mes\", \"time_format\": \"MM-YYYY\"}\n]}\n```\n\n### Normalizar fecha separada en m\u00faltiples campos (*fecha_separada*)\nEstandariza una fecha completa donde distintos componentes de la misma est\u00e1n separados en varios campos, a su representaci\u00f3n en el est\u00e1ndar ISO 8601.\n\nArgumentos opcionales:\n\n* **keep_original**: True para conservar la columna original / False para removerla (Default: False)\n\n**Especificaci\u00f3n:**\n\n```python\n{\"fecha_separada\": [\n    {\"fields\": [[\"campo1\", \"DD-MM-YYYY\"], [\"campo2\", \"HH:mm\"]],\n     \"new_field_name\": \"audiencia\"}\n]}\n```\n\n**Ejemplo:**\n\n```python\n{\"fecha_separada\": [\n    {\"fields\": [[\"fecha_audiencia\", \"DD-MM-YYYY\"], [\"hora_audiencia\", \"HH:mm\"]], \"new_field_name\": \"audiencia\"}\n]}\n```\n\n### Separar campos mediante un separador simple (*string_simple_split*)\nSepara strings de un campo en m\u00faltiples campos, mediante separadores simples.\n\nArgumentos opcionales:\n\n* **keep_original**: True para conservar la columna original / False para removerla (Default: False)\n\n**Especificaci\u00f3n:**\n\n```python\n{\"string_simple_split\": [\n    {\"field\": \"campo\",\n    \"separators\": [\"separador_A\", \"separador_B\"],\n    \"new_field_names\": [\"sufijo_nuevo_campo_1\", \"sufijo_nuevo_campo_2\"]}\n]}\n```\n\n**Ejemplo:**\n\n```python\n{\"string_simple_split\": [\n    {\"field\": \"sujeto_obligado\",\n    \"separators\": [\", Cargo:\", \"Cargo:\"],\n    \"new_field_names\": [\"nombre\", \"cargo\"]}\n]}\n```\n\n### Separar campos mediante una expresi\u00f3n regular (*string_regex_split*)\n(NO IMPLEMENTADO)\n\n### Separar campos mediante una parsing expression grammar (*string_peg_split*)\nUtiliza parsing expression grammars para separar strings de un campo en m\u00faltiples campos.\n\nLas PEG son una forma de utilizar expresiones regulares de m\u00e1s alto nivel, que facilita la creaci\u00f3n de reglas bastante complejas. La librer\u00eda que se utiliza en este paquete es [**parsley**](http://parsley.readthedocs.org/en/latest/reference.html).\n\nTodas las PEG que se escriban para este paquete, deben contener una regla `values` cuyo output sea una lista de los valores que se quiere extraer. Cuando la PEG utilizada falle, el paquete dejar\u00e1 un valor nulo para esa celda.\n\nArgumentos opcionales:\n\n* **keep_original**: True para conservar la columna original / False para removerla (Default: False)\n\n**Especificaci\u00f3n:**\n\n```python\n{\"string_peg_split\": [\n    {\"field\": \"campo\",\n    \"grammar\": \"grammar\",\n    \"new_field_names\": [\"sufijo_nuevo_campo_1\", \"sufijo_nuevo_campo_2\"]}\n]}\n```\n\n**Ejemplo:**\n\n```python\n{\"string_peg_split\": [\n    {\n    \"field\": \"solicitante\",\n    \"grammar\": \"\"\"\n    allowed_char = anything:x ?(x not in '1234567890() ')\n    nombre = ~('DNI') <allowed_char+>:n ws -> n.strip()\n    number = <digit+>:num -> int(num)\n\n    nom_comp = <nombre+>:nc -> nc.strip()\n    cargo = '(' <nombre+>:c ')' -> c.strip()\n    dni = ','? ws 'DNI' ws number:num -> num\n\n    values = nom_comp:n ws cargo?:c ws dni?:d ws anything* -> [n, c, d]\n    \"\"\",\n    \"new_field_names\": [\"nombre\", \"cargo\", \"dni\"]\n    }\n]}\n```\n\n### Manipular y reemplazar contenido de campos mediante una expression regular (*string_regex_substitute*)\nEs an\u00e1logo al m\u00e9todo sub de la libreria de python [**re**](https://docs.python.org/2/library/re.html#re.sub).\n\nArgumentos opcionales:\n\n* **keep_original**: True para conservar la columna original / False para removerla (Default: False)\n* **sufix**: Sufijo para agregar a la nueva columna limpia (Default: \"clean\")\n\n**Especificaci\u00f3n:**\n\n```python\n{\"string_regex_substitute\":[\n\t{\"field\": \"campo1\",\n    \"regex_str_match\": \"str_regex_match1\",\n    \"regex_str_sub\": \"str_regex_replace1\"},\n    {\"field\": \"campo2\",\n    \"regex_str_match\": \"str_regex_match2\",\n    \"regex_str_sub\": \"str_regex_replace2\"}\n]}\n```\n\n**Ejemplos:**\n\n```python\nReemplaza punto y comas por comas:\n{\"string_regex_substitute\":[\n\t{\"field\": \"norma_competencias_objetivos\",\n    \"regex_str_match\": \";\",\n    \"regex_str_sub\": \",\"}\n]}\n\nCambia el orden de una cadena entre parentesis:\n{\"string_regex_substitute\":[\n\t{\"field\": \"nombre_cargo\",\n    \"regex_str_match\": \"(?P<cargo>\\(.+\\))(?P<nombre>.+)\",\n    \"regex_str_sub\": \"\\g<nombre> \\g<cargo>\"}\n]}\n\"(presidente)Juan Jose Perez.\"  pasar\u00eda a ser \"Juan Jose Perez. (presidente)\"\n```\n\n\n=======\nHistory\n=======\n\n0.1.18 (2016-4-30)\n------------------\n\n* Se agrega un par\u00e1metro opcional (`lower_words`) al m\u00e9todo `nombre_propio`, para especificar palabras que no se capitalizan.\n\n\n0.1.16 (2016-4-16)\n------------------\n\n* Se remueven los caracteres de salto de l\u00ednea de todos los valores.\n* Se detectan los fields con t\u00edtulos que usan la convencion upper CamelCase para interpretar que cada may\u00fascula comienza una palabra distinta\n\n0.1.15 (2016-3-7)\n------------------\n\n* Se arregla un bug en los m\u00e9todos que operan con strings que transformaba missings nan de pandas en strings \"nan\".\n* Se corrige capitalizer para evitar errores con cadenas de texto vac\u00edas.\n\n0.1.14 (2016-3-7)\n------------------\n\n* Se modifica la interfaz del algoritmo de clusterizaci\u00f3n de strings, agregando par\u00e1metros para sorting de tokens y remoci\u00f3n de duplicados de tokens. Ahora el algoritmo es extremadamente seguro, el default est\u00e1 en False en ambos casos con lo cual no reordena tokens ni elimina duplicados. \n* El m\u00e9todo clean no permite guardar un dataset en un CSV con formato que no sea el est\u00e1ndar.\n* Las columnas nuevas se agregan en orden, justo despu\u00e9s de las originales.\n* Nueva regla de limpieza: reemplazo simple de strings (*reemplazar_string*).\n\n0.1.13 (2016-2-25)\n------------------\n\n* Agrega m\u00e9todo de limpieza de e-mails\n\n0.1.12 (2016-2-23)\n------------------\n\n* Corrige varios problemas de encoding\n* Chequea que no haya campos repetidos antes de cargar un csv\n\n0.1.10 (2016-2-23)\n------------------\n\n* Corrige bug en capitalizer() cuando el input es un integer o float\n* Corrige bug en m\u00e9todos que parsean fechas, devuelven empty string \"\" en lugar de NaN\n\n0.1.8 (2016-2-22)\n------------------\n\n* Se mejora el capitalizer de la regla nombre_propio()\n* Se permite controlar al usuario si la o las columnas originales objeto de una limpieza se mantienen o se remueven\n\n0.1.7 (2016-2-22)\n------------------\n\n* Se agregan nuevos m\u00e9todos de limpieza.\n* Se modifica la interfaz de la lista de reglas.\n\n0.1.0 (2016-2-18)\n------------------\n\n* First release on PyPI.",
    "docs_url": "https://pythonhosted.org/data-cleaner/",
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/gobabiertoAR/data-cleaner",
    "keywords": "data-cleaner",
    "license": "ISCL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "data-cleaner",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/data-cleaner/",
    "release_url": "https://pypi.org/project/data-cleaner/0.1.18/",
    "requires_python": "",
    "summary": "Paquete para limpieza de datos, seg\u00fan est\u00e1ndares de la SSIPyGA - Gobierno Abierto Argentina",
    "version": "0.1.18"
  },
  "releases": {
    "0.1.0": [],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3a307eb2f54cc49d7f8b8f90de5328ad",
          "sha256": "09ad82fcae89f525c3348746b337b2e1a3feb747d4e4b8705a5d9dcea6e05431"
        },
        "downloads": 141,
        "filename": "data-cleaner-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3a307eb2f54cc49d7f8b8f90de5328ad",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26017,
        "upload_time": "2016-02-18T15:57:54",
        "url": "https://files.pythonhosted.org/packages/21/c8/132d14b58487599c5a79cbc2f28a5b1c0a85f81aad6da6a5ee0073dea08a/data-cleaner-0.1.1.tar.gz"
      }
    ],
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a761c97a5c978897b7f5d09fb985a25e",
          "sha256": "23e4dbd3ab8a2ca1ea32ee6de3355e22fd98ecd218c80cd2e0a2ef120c059323"
        },
        "downloads": 136,
        "filename": "data-cleaner-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "a761c97a5c978897b7f5d09fb985a25e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 37103,
        "upload_time": "2016-02-23T18:15:51",
        "url": "https://files.pythonhosted.org/packages/72/3f/452dd0f4bcfed78b4b47dd49069cb77359c1bb14fffb564351a6e9856bc5/data-cleaner-0.1.10.tar.gz"
      }
    ],
    "0.1.11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7104013cd77fc7d62f599c68c6ae7475",
          "sha256": "909857f8f89dd9c56a5303024375b2054040ed976981bb632dee09fde7a92d8e"
        },
        "downloads": 140,
        "filename": "data_cleaner-0.1.11-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "7104013cd77fc7d62f599c68c6ae7475",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 31377,
        "upload_time": "2016-02-23T19:10:00",
        "url": "https://files.pythonhosted.org/packages/e1/43/4367bc5356c08d74746c6538861ebb84c141c038004fdc92b4e3a284c95a/data_cleaner-0.1.11-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "dae20d05feaf126d0587d6a42a093c2d",
          "sha256": "88b9f09733a2c3faa4cfb4e97ac553df1fa70d5cd2bb8bb892c8d6223eaccdd3"
        },
        "downloads": 147,
        "filename": "data-cleaner-0.1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "dae20d05feaf126d0587d6a42a093c2d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 36809,
        "upload_time": "2016-02-23T19:10:16",
        "url": "https://files.pythonhosted.org/packages/d4/71/8bb2f045506c2984df21e88a4492533c2df6a3392bab49f8eca7bfa937be/data-cleaner-0.1.11.tar.gz"
      }
    ],
    "0.1.12": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c647775d7b230657fe98db26a2a76734",
          "sha256": "e3f23e6653435c63fda993c148401b68d202afe10e2b234dedc4e14f4933a21e"
        },
        "downloads": 134,
        "filename": "data_cleaner-0.1.12-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "c647775d7b230657fe98db26a2a76734",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 32280,
        "upload_time": "2016-02-23T22:50:44",
        "url": "https://files.pythonhosted.org/packages/a9/c3/ca1232b8a012040448cbccb770abf62c060e20438fdf95cee43ed0fda606/data_cleaner-0.1.12-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "980cf02870028879c42f91daa9952106",
          "sha256": "8699c7249747be655d207a4ecbb5a8f05c9c3d870fb711ac036f0429c3cff749"
        },
        "downloads": 481,
        "filename": "data-cleaner-0.1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "980cf02870028879c42f91daa9952106",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 37551,
        "upload_time": "2016-02-23T22:50:50",
        "url": "https://files.pythonhosted.org/packages/63/e8/ce4af76e57707207717db3cbe78d60bd6f24393e03188259c2bc484a5997/data-cleaner-0.1.12.tar.gz"
      }
    ],
    "0.1.13": [
      {
        "comment_text": "",
        "digests": {
          "md5": "eb9594a92e7cfe056fadf3104359be69",
          "sha256": "e02d5917ecec96215a105187a6e43f5308c4c4253df8ba7be7c61b91e6e5182d"
        },
        "downloads": 135,
        "filename": "data_cleaner-0.1.13-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb9594a92e7cfe056fadf3104359be69",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 33191,
        "upload_time": "2016-02-25T14:38:35",
        "url": "https://files.pythonhosted.org/packages/65/6e/3e71f1849ceb7d204aa831f14ab389e055f6dee80dc62229db5da758451c/data_cleaner-0.1.13-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "79f2ceb527d2d0a14e2d9970714a01bf",
          "sha256": "8264e2e7bd8575f446c7e1b41284814cbfdb6b3eda8e48cf6fc920300c19b456"
        },
        "downloads": 141,
        "filename": "data-cleaner-0.1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "79f2ceb527d2d0a14e2d9970714a01bf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 38072,
        "upload_time": "2016-02-25T14:38:42",
        "url": "https://files.pythonhosted.org/packages/f7/14/5fbb367b09413a706b2bad70c19ec7bddd6f97abac5f56350df0405affd1/data-cleaner-0.1.13.tar.gz"
      }
    ],
    "0.1.14": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b0f0024b7a8c41666f69532322aeef8b",
          "sha256": "ba7698fb5552988c4d6b2ef9d019eca18dbaa94f64f37643f945bc8829ad0e24"
        },
        "downloads": 126,
        "filename": "data_cleaner-0.1.14-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0f0024b7a8c41666f69532322aeef8b",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 36148,
        "upload_time": "2016-03-07T15:24:24",
        "url": "https://files.pythonhosted.org/packages/24/49/479b7f210b0ec0cd433fdf88d658b738c967ff89388e1c6c466e5b26ef51/data_cleaner-0.1.14-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "083ba13410db023c6c8f1e4e02f7c040",
          "sha256": "72508729d9a334fbe3231a9d9502192fe847e93ca5282dac643e323c4724a3e1"
        },
        "downloads": 132,
        "filename": "data-cleaner-0.1.14.tar.gz",
        "has_sig": false,
        "md5_digest": "083ba13410db023c6c8f1e4e02f7c040",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40846,
        "upload_time": "2016-03-07T15:24:40",
        "url": "https://files.pythonhosted.org/packages/d7/b5/c1b1d3dfa70261529ae1f43cf9650e4af52278c3966623e223e6f4eb5f88/data-cleaner-0.1.14.tar.gz"
      }
    ],
    "0.1.15": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3edb3bb568590253c22e1260669aa526",
          "sha256": "78aa10b763add56f5096ed962295a11bc58fc49953cc31830a2483f693bbb749"
        },
        "downloads": 137,
        "filename": "data_cleaner-0.1.15-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "3edb3bb568590253c22e1260669aa526",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 36380,
        "upload_time": "2016-03-07T20:22:27",
        "url": "https://files.pythonhosted.org/packages/53/0a/bd2d90991ccb24458e370a02d7e2ac5f22d6de013a9d90ecfe60fa0e70a6/data_cleaner-0.1.15-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f8d9b78218935405059415d8eb4e7023",
          "sha256": "627f79838f884cba083cab8b7047a8375b4a8c2f15b6def43ff32d59b42a628c"
        },
        "downloads": 138,
        "filename": "data-cleaner-0.1.15.tar.gz",
        "has_sig": false,
        "md5_digest": "f8d9b78218935405059415d8eb4e7023",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 41137,
        "upload_time": "2016-03-07T20:22:33",
        "url": "https://files.pythonhosted.org/packages/dd/b2/0b016c880e1e0121031adb5abe38f9e7d276d89211d6712e4ecd7133e3dc/data-cleaner-0.1.15.tar.gz"
      }
    ],
    "0.1.17": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b8e5f38557ed777c8e3bed09f3972a56",
          "sha256": "a185ec5f1d134beebde0c557f229b91dd0facea4ef12099b61f1f6cf975b1730"
        },
        "downloads": 126,
        "filename": "data_cleaner-0.1.17-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8e5f38557ed777c8e3bed09f3972a56",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 38175,
        "upload_time": "2016-04-18T20:28:34",
        "url": "https://files.pythonhosted.org/packages/0e/91/3f1dc3dd001e2143b6d42e20f57096e6313ab1c17672165b0dabf210760b/data_cleaner-0.1.17-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c8e95d07daec953432fc84eadf45cf32",
          "sha256": "f931f9212a56cb40ed0bba0951fd81758b9f50585392b3f5ee2353879d78946a"
        },
        "downloads": 136,
        "filename": "data-cleaner-0.1.17.tar.gz",
        "has_sig": false,
        "md5_digest": "c8e95d07daec953432fc84eadf45cf32",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42674,
        "upload_time": "2016-04-18T20:28:54",
        "url": "https://files.pythonhosted.org/packages/94/a2/d16ea31e2fe12685c2d4ffa7667fd972afd214297a403d16e272e6844a68/data-cleaner-0.1.17.tar.gz"
      }
    ],
    "0.1.18": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e6c05b429ebb0c341a1aeb565ccd7bd4",
          "sha256": "2492f98196b48a78a17cdf39543eec5fb243f7b1cee7e2641e9d1cd7556ec1a7"
        },
        "downloads": 146,
        "filename": "data_cleaner-0.1.18-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6c05b429ebb0c341a1aeb565ccd7bd4",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 38846,
        "upload_time": "2016-04-30T15:58:50",
        "url": "https://files.pythonhosted.org/packages/ec/1b/bb7a4778395749518dcaf9397b2fe7dde2c626287b2123af3d1ec8754286/data_cleaner-0.1.18-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6af53a7587323ff9cb8fddead94d0901",
          "sha256": "4e9cac1bea8671b6a0bb64aecbfcc4b3276873b3bd0fa2d7a67f87d102632489"
        },
        "downloads": 141,
        "filename": "data-cleaner-0.1.18.tar.gz",
        "has_sig": false,
        "md5_digest": "6af53a7587323ff9cb8fddead94d0901",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 43117,
        "upload_time": "2016-04-30T15:58:59",
        "url": "https://files.pythonhosted.org/packages/87/41/e4fe93373f2897bde6d5c8fe8036b08b96ad7e6307be29d8da22a63c7030/data-cleaner-0.1.18.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c6ef7ea645103e910322072666745f05",
          "sha256": "464def7762bfca3b2998bacc432a9e738ce73057c4742079fc28727c79ed6b55"
        },
        "downloads": 149,
        "filename": "data-cleaner-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c6ef7ea645103e910322072666745f05",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26111,
        "upload_time": "2016-02-18T16:04:57",
        "url": "https://files.pythonhosted.org/packages/4c/3e/7b98b8631d014127385e328c1277f6a1076c28e20a0df11d19d5c7e5c2f8/data-cleaner-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "08651f623d07dc2ea3d10dfb1726875d",
          "sha256": "d6926c704f2465741e3ef89c3eec87c13c757b90a07c1813bd360cfc54534411"
        },
        "downloads": 146,
        "filename": "data-cleaner-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "08651f623d07dc2ea3d10dfb1726875d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26504,
        "upload_time": "2016-02-18T20:56:19",
        "url": "https://files.pythonhosted.org/packages/b4/b6/56e1ce6492982236b08ea2a5a23bcbab6e4959d712e359ae7432786282ec/data-cleaner-0.1.3.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "097ab7a152ad7dd9b7272fb5bb36cfb2",
          "sha256": "c08791edf88a9c93fe7a9dd5211ea687e8f3ad50062972b23b2a05c5ee86c815"
        },
        "downloads": 142,
        "filename": "data-cleaner-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "097ab7a152ad7dd9b7272fb5bb36cfb2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28205,
        "upload_time": "2016-02-18T20:59:54",
        "url": "https://files.pythonhosted.org/packages/c0/72/f87ccd7beb7087d6849cb3476bc733c38412fc9d6b7a470425be9f337cb5/data-cleaner-0.1.4.tar.gz"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "db38d14f50b4ecc23bb55a8d397ac696",
          "sha256": "3e732fde3652837e9e3283ff87cd4cc02f561cb90a3740a59ff04b9b31ffb067"
        },
        "downloads": 148,
        "filename": "data-cleaner-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "db38d14f50b4ecc23bb55a8d397ac696",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29282,
        "upload_time": "2016-02-19T00:47:06",
        "url": "https://files.pythonhosted.org/packages/86/f8/b335c57d80e8bcb26e3363783b91156ec43978154b76990dee13cdcbb60a/data-cleaner-0.1.5.tar.gz"
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0e7616cd11042d3c9fec9ace9aaf330b",
          "sha256": "045fb176971f05beb1e7dc18def65d8845599a6a1b2fc458629dce82e06122d2"
        },
        "downloads": 132,
        "filename": "data-cleaner-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "0e7616cd11042d3c9fec9ace9aaf330b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 33269,
        "upload_time": "2016-02-19T16:40:07",
        "url": "https://files.pythonhosted.org/packages/a8/9b/e2a493a6078440ad982ea364750e6afe6c97e4fb0faca6c30fcaa8c0449a/data-cleaner-0.1.6.tar.gz"
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e9d5c0e359ca17499620c14ed94f1811",
          "sha256": "0ceec4146f56c4670d4de78f46173b0a409b2ec16fe18791cfdd83d1db8ce83b"
        },
        "downloads": 132,
        "filename": "data-cleaner-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "e9d5c0e359ca17499620c14ed94f1811",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 35681,
        "upload_time": "2016-02-22T20:10:17",
        "url": "https://files.pythonhosted.org/packages/7b/bd/14f42bafe5c1e4286157cf476234a9ed045f28b1ec0630c0619d5df4cfe3/data-cleaner-0.1.7.tar.gz"
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f516fd59e8fd69d7b24f877170e01018",
          "sha256": "e32e1a7b985a3f19f3617dd8a0980210b86a672cb75ffb584a166b8eb4c0cb4e"
        },
        "downloads": 131,
        "filename": "data-cleaner-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "f516fd59e8fd69d7b24f877170e01018",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 37025,
        "upload_time": "2016-02-22T21:42:58",
        "url": "https://files.pythonhosted.org/packages/89/cb/73a361cf1db2f17ec51fa92287d9035050b35facec33b48a5cbc8ee0cd99/data-cleaner-0.1.8.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e6c05b429ebb0c341a1aeb565ccd7bd4",
        "sha256": "2492f98196b48a78a17cdf39543eec5fb243f7b1cee7e2641e9d1cd7556ec1a7"
      },
      "downloads": 146,
      "filename": "data_cleaner-0.1.18-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "e6c05b429ebb0c341a1aeb565ccd7bd4",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 38846,
      "upload_time": "2016-04-30T15:58:50",
      "url": "https://files.pythonhosted.org/packages/ec/1b/bb7a4778395749518dcaf9397b2fe7dde2c626287b2123af3d1ec8754286/data_cleaner-0.1.18-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "6af53a7587323ff9cb8fddead94d0901",
        "sha256": "4e9cac1bea8671b6a0bb64aecbfcc4b3276873b3bd0fa2d7a67f87d102632489"
      },
      "downloads": 141,
      "filename": "data-cleaner-0.1.18.tar.gz",
      "has_sig": false,
      "md5_digest": "6af53a7587323ff9cb8fddead94d0901",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 43117,
      "upload_time": "2016-04-30T15:58:59",
      "url": "https://files.pythonhosted.org/packages/87/41/e4fe93373f2897bde6d5c8fe8036b08b96ad7e6307be29d8da22a63c7030/data-cleaner-0.1.18.tar.gz"
    }
  ]
}