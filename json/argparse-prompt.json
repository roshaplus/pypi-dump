{
  "info": {
    "author": "Michael Milton",
    "author_email": "michael.r.milton@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "ArgparsePrompt\n==============\n\nWrapper for the built-in Argparse, allowing missing command-line\narguments to be filled in by the user via interactive prompts\n\nInstallation\n============\n\nArgparsePrompt has not yet been published to PYPI, but in the meantime,\nyou can install it using pip+git:\n\n.. code:: bash\n\n    pip install git+https://github.com/MelbourneGenomics/ArgparsePrompt\n\nUsage\n=====\n\nBasic Usage\n-----------\n\nThe only public interface of this module is the ``PromptParser`` class,\nwhich is a subclass of Python's\n`ArgumentParser <https://docs.python.org/3/library/argparse.html>`__.\nUse this class in exactly the same way that you would use\nArgumentParser, except that, if any argument does not have a specified\n``default`` value, and a value is not provided for it on the\ncommandline, the ``PromptParser`` will prompt for a value for this\nargument using ``input()``, which is read from stdin.\n\nConsider the code below (taken from one of the unit tests):\n\n.. code:: python\n\n    from argparse_prompt import PromptParser\n\n    parser = PromptParser()\n    parser.add_argument('--argument', '-a', help='An argument you could provide', default='foo')\n    print(parser.parse_args().argument)\n\nIf you run this script with a value for ``argument``, the parsing will\nrun as normal:\n\n::\n\n    $ python test/default_parser.py --argument 12\n    12\n\nHowever if you don't specify a value for ``arg``, the parser will prompt\nyou for one\n\n::\n\n    $ python test/default_parser.py\n    argument: An argument you could provide\n    > (foo) car\n    car\n\nDefault Values\n--------------\n\nSince this argument has a default value, you can also just hit enter and\nthis value will be used automatically:\n\n::\n\n    python test/default_parser.py\n    argument: An argument you could provide\n    > (foo) \n    foo\n\nType Checking\n-------------\n\nYou can also specify a type for the argument in the normal way:\n\n.. code:: python\n\n    from argparse_prompt import PromptParser\n\n    parser = PromptParser()\n    parser.add_argument('--argument', '-a', help='An argument you could provide', type=int)\n    print(parser.parse_args().argument)\n\nIf you do, this type checking will be used for the value you enter at\nthe prompt:\n\n::\n\n    $ python test/typed_parser.py  \n    argument: An argument you could provide\n    abc\n    Argument \"argument\" was given a value not of type <class 'int'>\n\nSituationally Disabling the Prompt\n----------------------------------\n\nIf you use the ``prompt`` argument to ``add_argument``, parsing will be\ndisabled:\n\n.. code:: python\n\n    parser.add_argument('--argument', '-a', help='An argument you could provide', default='foo', prompt=False)\n\nAlso, if you want to disable all prompting (for an automated script, for\nexample), just set the ``ARGPARSE_PROMPT_AUTO`` to a truthy value:\n\n.. code:: bash\n\n    ARGPARSE_PROMPT_AUTO=1 python test/default_parser.py\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/MelbourneGenomics/ArgparsePrompt",
    "keywords": "argparse prompt interactive argument",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "argparse-prompt",
    "platform": "",
    "project_url": "https://pypi.org/project/argparse-prompt/",
    "release_url": "https://pypi.org/project/argparse-prompt/0.0.2/",
    "requires_python": "",
    "summary": "Wrapper for the built-in Argparse, allowing missing command-line arguments to be filled in by the user via interactive prompts",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7f95a4ece7683ce1ac512992f1fecc5f",
          "sha256": "aa77ae177fa0366f72c7185044eb3c76f1165624e4a31c35f1e44ded961b5bbc"
        },
        "downloads": 0,
        "filename": "argparse_prompt-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f95a4ece7683ce1ac512992f1fecc5f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 1700,
        "upload_time": "2017-05-25T06:36:57",
        "url": "https://files.pythonhosted.org/packages/fb/ec/9bcb1b0b30979002060e537f959dfae98dacddcc93a3a0861740c914ca8d/argparse_prompt-0.0.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4175a20d109faea19b4294d43c958acd",
          "sha256": "46a92fd40d5d00064883a15b173bdb88c2d5a7beb08bf76dbd2214d91637adbe"
        },
        "downloads": 0,
        "filename": "argparse_prompt-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4175a20d109faea19b4294d43c958acd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 650,
        "upload_time": "2017-05-25T06:36:59",
        "url": "https://files.pythonhosted.org/packages/b4/5d/f3d59da2e689a90843e82836cb5d02a756f152e2343bb9cb59f42b322d29/argparse_prompt-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ef67203ad971ad55db50c5132a63ac36",
          "sha256": "2bc062b164e4e25541d409ea38720093853832f26d1d40201906cfc49736b0ec"
        },
        "downloads": 0,
        "filename": "argparse_prompt-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef67203ad971ad55db50c5132a63ac36",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 5272,
        "upload_time": "2017-05-25T07:01:08",
        "url": "https://files.pythonhosted.org/packages/a7/d9/11fecc06f9cc80050ab73bcfb8f9a94a8e6b035daa24c6921b6dca7cd710/argparse_prompt-0.0.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ab1e6b5a78cfa51a66ba22dffdf70f77",
          "sha256": "a933e591ba0b2378bfe44a831c2f69b4193a3ab5054fef70c5798d20bed50e8f"
        },
        "downloads": 0,
        "filename": "argparse_prompt-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ab1e6b5a78cfa51a66ba22dffdf70f77",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2942,
        "upload_time": "2017-05-25T07:01:09",
        "url": "https://files.pythonhosted.org/packages/c8/0a/b704379340d0229707238ba32da50759c40432d92e0c1b832bbc407e3dab/argparse_prompt-0.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ef67203ad971ad55db50c5132a63ac36",
        "sha256": "2bc062b164e4e25541d409ea38720093853832f26d1d40201906cfc49736b0ec"
      },
      "downloads": 0,
      "filename": "argparse_prompt-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ef67203ad971ad55db50c5132a63ac36",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 5272,
      "upload_time": "2017-05-25T07:01:08",
      "url": "https://files.pythonhosted.org/packages/a7/d9/11fecc06f9cc80050ab73bcfb8f9a94a8e6b035daa24c6921b6dca7cd710/argparse_prompt-0.0.2-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "ab1e6b5a78cfa51a66ba22dffdf70f77",
        "sha256": "a933e591ba0b2378bfe44a831c2f69b4193a3ab5054fef70c5798d20bed50e8f"
      },
      "downloads": 0,
      "filename": "argparse_prompt-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ab1e6b5a78cfa51a66ba22dffdf70f77",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 2942,
      "upload_time": "2017-05-25T07:01:09",
      "url": "https://files.pythonhosted.org/packages/c8/0a/b704379340d0229707238ba32da50759c40432d92e0c1b832bbc407e3dab/argparse_prompt-0.0.2.tar.gz"
    }
  ]
}