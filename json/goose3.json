{
  "info": {
    "author": "Mahmoud Lababidi",
    "author_email": "lababidi+py@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "Python-Goose - Article Extractor |Build Status|\n===============================================\n\nIntro\n-----\n\nGoose was originally an article extractor written in Java that has most\nrecently (Aug2011) been converted to a `scala project <https://github.com/GravityLabs/goose>`_.\n\nThis is a complete rewrite in Python. The aim of the software is to\ntake any news article or article-type web page and not only extract what\nis the main body of the article but also all meta data and most probable\nimage candidate.\n\nGoose will try to extract the following information:\n\n-  Main text of an article\n-  Main image of article\n-  Any YouTube/Vimeo movies embedded in article\n-  Meta Description\n-  Meta tags\n\nThe Python version was rewritten by:\n\n-  Xavier Grangier\n\nLicensing\n---------\n\nIf you find Goose useful or have issues please drop me a line. I'd love\nto hear how you're using it or what features should be improved.\n\nGoose is licensed by Gravity.com under the Apache 2.0 license; see the\nLICENSE file for more details.\n\nSetup\n-----\n\n::\n\n    mkvirtualenv --no-site-packages goose\n    git clone https://github.com/grangier/python-goose.git\n    cd python-goose\n    pip install -r requirements.txt\n    python setup.py install\n\nTake it for a spin\n------------------\n\n::\n\n    >>> from goose import Goose\n    >>> url = 'http://edition.cnn.com/2012/02/22/world/europe/uk-occupy-london/index.html?hpt=ieu_c2'\n    >>> g = Goose()\n    >>> article = g.extract(url=url)\n    >>> article.title\n    u'Occupy London loses eviction fight'\n    >>> article.meta_description\n    \"Occupy London protesters who have been camped outside the landmark St. Paul's Cathedral for the past four months lost their court bid to avoid eviction Wednesday in a decision made by London's Court of Appeal.\"\n    >>> article.cleaned_text[:150]\n    (CNN) -- Occupy London protesters who have been camped outside the landmark St. Paul's Cathedral for the past four months lost their court bid to avoi\n    >>> article.top_image.src\n    http://i2.cdn.turner.com/cnn/dam/assets/111017024308-occupy-london-st-paul-s-cathedral-story-top.jpg\n\nConfiguration\n-------------\n\nThere are two ways to pass configuration to goose. The first one is to\npass goose a Configuration() object. The second one is to pass a\nconfiguration dict.\n\nFor instance, if you want to change the userAgent used by Goose just\npass:\n\n::\n\n    >>> g = Goose({'browser_user_agent': 'Mozilla'})\n\nSwitching parsers : Goose can now be used with lxml html parser or lxml\nsoup parser. By default the html parser is used. If you want to use the\nsoup parser pass it in the configuration dict :\n\n::\n\n    >>> g = Goose({'browser_user_agent': 'Mozilla', 'parser_class':'soup'})\n\nGoose is now language aware\n---------------------------\n\nFor example, scraping a Spanish content page with correct meta language\ntags:\n\n::\n\n    >>> from goose import Goose\n    >>> url = 'http://sociedad.elpais.com/sociedad/2012/10/27/actualidad/1351332873_157836.html'\n    >>> g = Goose()\n    >>> article = g.extract(url=url)\n    >>> article.title\n    u'Las listas de espera se agravan'\n    >>> article.cleaned_text[:150]\n    u'Los recortes pasan factura a los pacientes. De diciembre de 2010 a junio de 2012 las listas de espera para operarse aumentaron un 125%. Hay m\\xe1s ciudad'\n\nSome pages don't have correct meta language tags, you can force it using\nconfiguration :\n\n::\n\n    >>> from goose import Goose\n    >>> url = 'http://www.elmundo.es/elmundo/2012/10/28/espana/1351388909.html'\n    >>> g = Goose({'use_meta_language': False, 'target_language':'es'})\n    >>> article = g.extract(url=url)\n    >>> article.cleaned_text[:150]\n    u'Importante golpe a la banda terrorista ETA en Francia. La Guardia Civil ha detenido en un hotel de Macon, a 70 kil\\xf3metros de Lyon, a Izaskun Lesaka y '\n\nPassing {'use\\_meta\\_language': False, 'target\\_language':'es'} will\nforcibly select Spanish.\n\n\nVideo extraction\n----------------\n\n::\n\n    >>> import goose\n    >>> url = 'http://www.liberation.fr/politiques/2013/08/12/journee-de-jeux-pour-ayrault-dans-les-jardins-de-matignon_924350'\n    >>> g = goose.Goose({'target_language':'fr'})\n    >>> article = g.extract(url=url)\n    >>> article.movies\n    [<goose.videos.videos.Video object at 0x25f60d0>]\n    >>> article.movies[0].src\n    'http://sa.kewego.com/embed/vp/?language_code=fr&playerKey=1764a824c13c&configKey=dcc707ec373f&suffix=&sig=9bc77afb496s&autostart=false'\n    >>> article.movies[0].embed_code\n    '<iframe src=\"http://sa.kewego.com/embed/vp/?language_code=fr&amp;playerKey=1764a824c13c&amp;configKey=dcc707ec373f&amp;suffix=&amp;sig=9bc77afb496s&amp;autostart=false\" frameborder=\"0\" scrolling=\"no\" width=\"476\" height=\"357\"/>'\n    >>> article.movies[0].embed_type\n    'iframe'\n    >>> article.movies[0].width\n    '476'\n    >>> article.movies[0].height\n    '357'\n\n\nGoose in Chinese\n----------------\n\nSome users want to use Goose for Chinese content. Chinese word\nsegmentation is way more difficult to deal with than occidental\nlanguages. Chinese needs a dedicated StopWord analyser that need to be\npassed to the config object.\n\n::\n\n    >>> from goose import Goose\n    >>> from goose.text import StopWordsChinese\n    >>> url  = 'http://www.bbc.co.uk/zhongwen/simp/chinese_news/2012/12/121210_hongkong_politics.shtml'\n    >>> g = Goose({'stopwords_class': StopWordsChinese})\n    >>> article = g.extract(url=url)\n    >>> print article.cleaned_text[:150]\n    \u9999\u6e2f\u884c\u653f\u957f\u5b98\u6881\u632f\u82f1\u5728\u5404\u65b9\u538b\u529b\u4e0b\u5c31\u5176\u5927\u5b85\u7684\u8fdd\u7ae0\u5efa\u7b51\uff08\u50ed\u5efa\uff09\u95ee\u9898\u5230\u7acb\u6cd5\u4f1a\u63a5\u53d7\u8d28\u8be2\uff0c\u5e76\u5411\u9999\u6e2f\u6c11\u4f17\u9053\u6b49\u3002\n\n    \u6881\u632f\u82f1\u5728\u661f\u671f\u4e8c\uff0812\u670810\u65e5\uff09\u7684\u7b54\u95ee\u5927\u4f1a\u5f00\u59cb\u4e4b\u9645\u5728\u5176\u6f14\u8bf4\u4e2d\u9053\u6b49\uff0c\u4f46\u5f3a\u8c03\u4ed6\u5728\u8fdd\u7ae0\u5efa\u7b51\u95ee\u9898\u4e0a\u6ca1\u6709\u9690\u7792\u7684\u610f\u56fe\u548c\u52a8\u673a\u3002\n\n    \u4e00\u4e9b\u4eb2\u5317\u4eac\u9635\u8425\u8bae\u5458\u6b22\u8fce\u6881\u632f\u82f1\u9053\u6b49\uff0c\u4e14\u8ba4\u4e3a\u5e94\u80fd\u83b7\u5f97\u9999\u6e2f\u6c11\u4f17\u63a5\u53d7\uff0c\u4f46\u8fd9\u4e9b\u8bae\u5458\u4e5f\u8d28\u95ee\u6881\u632f\u82f1\u6709\n\nGoose in Arabic\n---------------\n\nIn order to use Goose in Arabic you have to use the StopWordsArabic\nclass.\n\n::\n\n    >>> from goose import Goose\n    >>> from goose.text import StopWordsArabic\n    >>> url = 'http://arabic.cnn.com/2013/middle_east/8/3/syria.clashes/index.html'\n    >>> g = Goose({'stopwords_class': StopWordsArabic})\n    >>> article = g.extract(url=url)\n    >>> print article.cleaned_text[:150]\n    \u062f\u0645\u0634\u0642\u060c \u0633\u0648\u0631\u064a\u0627 (CNN) -- \u0623\u0643\u062f\u062a \u062c\u0647\u0627\u062a \u0633\u0648\u0631\u064a\u0629 \u0645\u0639\u0627\u0631\u0636\u0629 \u0623\u0646 \u0641\u0635\u0627\u0626\u0644 \u0645\u0633\u0644\u062d\u0629 \u0645\u0639\u0627\u0631\u0636\u0629 \u0644\u0646\u0638\u0627\u0645 \u0627\u0644\u0631\u0626\u064a\u0633 \u0628\u0634\u0627\u0631 \u0627\u0644\u0623\u0633\u062f \u0648\u0639\u0644\u0649 \u0635\u0644\u0629 \u0628\u0640\"\u0627\u0644\u062c\u064a\u0634 \u0627\u0644\u062d\u0631\" \u062a\u0645\u0643\u0646\u062a \u0645\u0646 \u0627\u0644\u0633\u064a\u0637\u0631\u0629 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u062f\u0639\u0627\u062a \u0644\u0644\u0623\u0633\u0644\n\n\nGoose in Korean\n---------------\n\nIn order to use Goose in Korean you have to use the StopWordsKorean\nclass.\n\n::\n\n    >>> from goose import Goose\n    >>> from goose.text import StopWordsKorean\n    >>> url='http://news.donga.com/3/all/20131023/58406128/1'\n    >>> g = Goose({'stopwords_class':StopWordsKorean})\n    >>> article = g.extract(url=url)\n    >>> print article.cleaned_text[:150]\n    \uacbd\uae30\ub3c4 \uc6a9\uc778\uc5d0 \uc790\ub9ac \uc7a1\uc740 \ubbfc\uac04 \uc2dc\ud5d8\uc778\uc99d \uc804\ubb38\uae30\uc5c5 \u321c\ub514\uc9c0\ud138\uc774\uc5e0\uc528(www.digitalemc.com). \n    14\ub144\uc9f8 \uc138\uacc4 \uac01\uad6d\uc758 \ud1b5\uc2e0\u00b7\uc548\uc804\u00b7\uc804\ud30c \uaddc\uaca9 \uc2dc\ud5d8\uacfc \uc778\uc99d \ud55c \uc6b0\ubb3c\ub9cc \ud30c\uace0 \uc788\ub294 \uc774 \ud68c\uc0ac \ubc15\ucc44\uaddc \ub300\ud45c\uac00 \ub9cc\ub098\uae30\ub85c \ud55c \uc8fc\uc778\uacf5\uc774\ub2e4. \n    \uadf8\ub294 \uc804\uae30\uc804\uc790\u00b7\ubb34\uc120\ud1b5\uc2e0\u00b7\uc790\ub3d9\ucc28 \uc804\uc7a5\ud488 \ubd84\uc57c\uc5d0\n\nTODO\n----\n\n-  Video html5 tag extraction\n\n\n.. |Build Status| image:: https://travis-ci.org/grangier/python-goose.png?branch=develop   :target: https://travis-ci.org/grangier/python-goose\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/goose3/goose3",
    "keywords": "scrapping",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "goose3",
    "platform": "",
    "project_url": "https://pypi.org/project/goose3/",
    "release_url": "https://pypi.org/project/goose3/3.0.5/",
    "requires_python": "",
    "summary": "Html Content / Article Extractor, web scrapping for Python3",
    "version": "3.0.5"
  },
  "releases": {
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "304b9396c7f7ac618d945a6e244f4a6c",
          "sha256": "ca49ec862e89ba82df3c237a1fb97c9ee5441b923e76cd9e164c2ca3623d7ea7"
        },
        "downloads": 23,
        "filename": "goose3-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "304b9396c7f7ac618d945a6e244f4a6c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18894,
        "upload_time": "2017-03-13T18:18:29",
        "url": "https://files.pythonhosted.org/packages/b9/8a/29aa98dbb6b559ec75a53e9b8d34568fe9cfb6b64f2ab968eb1a26133edf/goose3-3.0.0.tar.gz"
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e8972f154cdec7204faaa3b22bde59c3",
          "sha256": "8207b1a0a47a67ecea79c91a22e7a284229c469a23c4eb9feec40d9051472a52"
        },
        "downloads": 12,
        "filename": "goose3-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e8972f154cdec7204faaa3b22bde59c3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 65868,
        "upload_time": "2017-03-24T16:27:21",
        "url": "https://files.pythonhosted.org/packages/8e/68/62066bc535bfb664513b77687b9eec990d32d060ecdceb6ed51c40f8fb03/goose3-3.0.1.tar.gz"
      }
    ],
    "3.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8d160f089b5f86f528ca9c2fb2ab6132",
          "sha256": "402a3d491427b2d25168c6a158318dcd169290ae2bf9e4f0c76473228acb42bf"
        },
        "downloads": 13,
        "filename": "goose3-3.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8d160f089b5f86f528ca9c2fb2ab6132",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 73722,
        "upload_time": "2017-03-28T19:35:49",
        "url": "https://files.pythonhosted.org/packages/d8/d3/65b8974ef13ba0e00ebf166e1951c854279ce3ea9e1e29595c94e26e1b78/goose3-3.0.2.tar.gz"
      }
    ],
    "3.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "35241511ff844120ed9c99d75e18c687",
          "sha256": "47e9144598af3b657c07ff301efbdf4118bd809287863c4359b2c363d81d309c"
        },
        "downloads": 13,
        "filename": "goose3-3.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "35241511ff844120ed9c99d75e18c687",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 73729,
        "upload_time": "2017-03-28T19:39:28",
        "url": "https://files.pythonhosted.org/packages/c7/0d/9d84f6bcdd2069226b986c98c7fd240a8451a5c30634471e049681df6e38/goose3-3.0.3.tar.gz"
      }
    ],
    "3.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "058cc45496567afd33351fa5d1277304",
          "sha256": "df05ba9d233ebc684e26855427b630b1514d32735c62959aa659195e1556e7f6"
        },
        "downloads": 16,
        "filename": "goose3-3.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "058cc45496567afd33351fa5d1277304",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 73730,
        "upload_time": "2017-03-30T18:37:42",
        "url": "https://files.pythonhosted.org/packages/e5/b4/54906ab24db7e1b59ad5eca8bcc8406f02edbcfc06bea623f49ab1704c26/goose3-3.0.4.tar.gz"
      }
    ],
    "3.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4eef31b9c09f44076f2b417283be13ea",
          "sha256": "606f3814a42ad7adffc31322f396a884d41b3d5605a7c7caa7dff19c027d48b0"
        },
        "downloads": 17,
        "filename": "goose3-3.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4eef31b9c09f44076f2b417283be13ea",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 73745,
        "upload_time": "2017-03-30T20:36:39",
        "url": "https://files.pythonhosted.org/packages/3c/05/7b51f4839ee9e322491d74118e684d9387a73aa18d487f2c811a49fb6ef8/goose3-3.0.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4eef31b9c09f44076f2b417283be13ea",
        "sha256": "606f3814a42ad7adffc31322f396a884d41b3d5605a7c7caa7dff19c027d48b0"
      },
      "downloads": 17,
      "filename": "goose3-3.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "4eef31b9c09f44076f2b417283be13ea",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 73745,
      "upload_time": "2017-03-30T20:36:39",
      "url": "https://files.pythonhosted.org/packages/3c/05/7b51f4839ee9e322491d74118e684d9387a73aa18d487f2c811a49fb6ef8/goose3-3.0.5.tar.gz"
    }
  ]
}