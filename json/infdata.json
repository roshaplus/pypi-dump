{
  "info": {
    "author": "Mindey I.",
    "author_email": "mindey@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: Public Domain",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Utilities"
    ],
    "description": "# infinity-data\n\nThis is a simple package that helps read Infinity data format and get data in such format.\n\n## Quick start\n\n### Get data\n\nJust `pip install infdata`, and start getting data.\n\nFor example,\n```\n$ inf install example.com/posts==crawler-1.0.0\n```\n\ninstalls records that are posts from `example.com`.\n\n### Publish data\n```\n$ int init # initiates folder .inf/\n\n$ inf login # saves token to .inf/config\n\n$ inf upload file.jsonl # uploads data to specified infinity server\n\n$ inf install==\n```\n\n**Note:** the tokens `['example.com/posts', 'crawler-1.0.0']` together define a unique `[source-specific, crawler-specific]` schema.\n\n# Infinity JSON\n\nInfinity JSON format includes a header line, which specifies schemas (`[S]`) and types (`[T]`) for its records. \n\nExample:\n\n```\n[\n  {'': [[S],[T], 'x': [[S],[T]], 'y': [{'': [[S],[T]], 'z': [[S],[T]]}]},\n  {'x': '1,330.98', 'y': [{'z': 1}, {'u': 2}]},\n  {'x': '2,011.19', 'y': [{'z': 4}, {'u': 3}]},\n]\n```\n\nThe schemas, types specification for the empty string key `''` specifies the schema and type for the records themselves (required in every level separated by curly braces), whereas the rest of keys specify schemas and types for the data accessible via the keys.\n\nThis way, if we want to specify, that the `x` must be casted to a `float`, and means the [elevation](https://www.wikidata.org/wiki/Q2633778), we can do:\n\n```\n[\n  {'': [], 'x': {'': [['str'],['https://www.wikidata.org/wiki/Q2633778']]}},\n  {'x': '1,330.98', 'y': [{'z': 1}, {'u': 2}]},\n  {'x': '2,011.19', 'y': [{'z': 4}, {'u': 3}]},\n]\n```\n\nIf you want to additionally, add conversion rules, you can include lambda expression after the final type:\n\n```\n[\n  {'': [], 'x': {'': [['float', \"lambda x: x.replace(',','')\"],['https://www.wikidata.org/wiki/Q2633778']]}},\n  {'x': '1,330.98', 'y': [{'z': 1}, {'u': 2}]},\n  {'x': '2,011.19', 'y': [{'z': 4}, {'u': 3}]},\n]\n```\n\nThis way, the final data becomes:\n\n```\nfrom inf import normalize\n\nnormalize(\n    [\n      {'x': [['float', \"lambda x: x.replace(',','')\"],['https://www.wikidata.org/wiki/Q2633778']]},\n      {'x': '1,330.98', 'y': [{'z': 1}, {'u': 2}]},\n      {'x': '2,011.19', 'y': [{'z': 4}, {'u': 3}]},\n    ]\n)\n```\n\nResult is:\n\n```\n[\n  {'Q2633778': 1330.98, 'y': [{'z': 1}, {'u': 2}]},\n  {'Q2633778': 2011.19, 'y': [{'z': 4}, {'u': 3}]},\n]\n```\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/infamily/infinity-data",
    "keywords": "inf",
    "license": "UNLICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "infdata",
    "platform": "",
    "project_url": "https://pypi.org/project/infdata/",
    "release_url": "https://pypi.org/project/infdata/1.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Package management command for data.",
    "version": "1.0.1"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "683497117f90fb2c92288627cd57bd07",
          "sha256": "e9050462c41e3e9ced839b811e5f6d479a98195ac1ed3f100d805ea8eea5b8a4"
        },
        "downloads": -1,
        "filename": "infdata-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "683497117f90fb2c92288627cd57bd07",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5879,
        "upload_time": "2018-01-30T13:08:37",
        "url": "https://files.pythonhosted.org/packages/c7/90/64bb009f6d0ca32c9210a58cb30aa919db2b1c0e8c0cf8c9fd756e9a5d65/infdata-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dafa0d46bf2767fe611c02c6c947d27f",
          "sha256": "83d122cb21c0853cb685ed60d134a63c4c6f4ac1b246d47ca0a4a5395d8444db"
        },
        "downloads": -1,
        "filename": "infdata-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dafa0d46bf2767fe611c02c6c947d27f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9445,
        "upload_time": "2018-02-03T13:06:33",
        "url": "https://files.pythonhosted.org/packages/52/4f/fb73f43f5862ee5194441aad702acab1bb06d79af09301093fd0abd86983/infdata-1.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "dafa0d46bf2767fe611c02c6c947d27f",
        "sha256": "83d122cb21c0853cb685ed60d134a63c4c6f4ac1b246d47ca0a4a5395d8444db"
      },
      "downloads": -1,
      "filename": "infdata-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "dafa0d46bf2767fe611c02c6c947d27f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9445,
      "upload_time": "2018-02-03T13:06:33",
      "url": "https://files.pythonhosted.org/packages/52/4f/fb73f43f5862ee5194441aad702acab1bb06d79af09301093fd0abd86983/infdata-1.0.1.tar.gz"
    }
  ]
}