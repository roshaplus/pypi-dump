{
  "info": {
    "author": "Victor Stinner",
    "author_email": "victor.stinner@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: C",
      "Programming Language :: Python",
      "Topic :: Security",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "pysandbox is a Python sandbox. By default, untrusted code executed in the\nsandbox cannot modify the environment (write a file, use print or import a\nmodule). But you can configure the sandbox to choose exactly which features are\nallowed or not, eg. import sys module and read /etc/issue file.\n\nWebsite: http://github.com/haypo/pysandbox/\n\n\nFeatures\n========\n\nBlocked Python functions (by default):\n\n * Deny access to the file system\n * Deny importing Python modules\n * Deny exiting Python\n * Deny access to stdin, stdout or stderr\n * Deny some builtins symbols like execfile(), reload() or KeyboardInterrupt\n * Deny execution of arbitrary bytecode (creation of arbitrary code object)\n\nYou can enable all of these features by setting the sandbox configuration.\n\nThe default recursion limit is 50 frames.\n\nProtection of the namespace:\n\n * Deny access to function closure, globals, defaults and code\n * Deny access to frame locals, globals and previous frame\n * Deny access to traceback frame\n * Deny access to types subclasses\n * __builtins__ is read only\n * Deny access to dict methods able to modify a dict, eg. dict.__setitem__.\n   But you can use \"d[key] = value\" and \"del d[key]\" instead\n\n\nLimitations\n===========\n\npysandbox is unable to limit the memory or the CPU of the sandbox process: you\nhave to use your own protection. Use for example a subprocess to run the\nuntrusted code and use the OS to limit resources (memory and CPU) of the\nsubprocess. Using a subprocess protects also the main process against crash in\nthe untrusted code.\n\npysandbox is a sandbox for the Python namespace, not a sandbox between Python\nand the operating system. It does not protect your system against Python\nsecurity vulnerabilities: vulnerabilities in modules/functions available in\nyour sandbox (depend on your sandbox configuration). By default, only few\nfunctions are exposed to the sandbox namespace which limits the attack surface.\n\nSee Lib/test/crashers/ directory in the CPython source code to see examples of\nknown bugs crashing the CPython interpreter.\n\n\nConfiguration\n=============\n\nUse SandboxConfig class to configure your sandbox. Features are the most simple\nway to configure it.\n\nFeatures\n--------\n\nTo enable a feature, use SandboxConfig('feature1', 'feature2', ...) or\nconfig.enable('feature'). Available features:\n\n - \"codecs\": codecs module\n - \"datetime\": datetime module\n - \"encodings\": encodings module with ascii, latin_1, utf_8, utf_16_be,\n   utf_32_be and rot_13 codecs (submodules). Enable codecs feature.\n - \"exit\": sys.exit(), BaseException, KeyboardInterrupt, SystemExit, quit()\n - \"future\": from __future__ import ...\n - \"hashlib\": hashlib module.\n - \"help\": pydoc.help(), use \"import pydoc\" outside the sandbox to use it. Enable regex feature.\n - \"interpreter\": give access to standard streams, enable traceback. Enable\n   encodings, exit, site, stdin, stdout, stderr and traceback features.\n - \"itertools\": itertools module\n - \"math\": math module\n - \"random\": random module. Enable hashlib and math features.\n - \"regex\": compile regex, match regex, search regex, etc. (re module)\n - \"site\": allow to read the license file\n - \"stdin\": sys.stdin, input() and raw_input()\n - \"stdout\", \"stderr\": sys.stdout and sys.stderr\n - \"time\": time module (except sleep, strptime and tzset functions)\n - \"unicodedata\": unicodedata module, required for u'\\N{ATOM SYMBOL}' syntax\n\n\nThe following features are unsafe: only use them if you really understand their\nimpact in term of security. Available unsafe features:\n\n - \"debug_sandbox\": allow to display a traceback of the sandbox. Enable\n   traceback feature.\n - \"traceback\": allow access to the frame.f_code attribute. Next calls to\n   allowModule() will add the module filename to the open() whitelist, so\n   Python can display a traceback with the source code.  This feature have to\n   be enabled before all other features.\n\nCPython restricted mode\n-----------------------\n\nWARNING: CPython restricted mode is unsafe because it is possible to execute\narbitrary bytecode.\n\nUse SandboxConfig(cpython_restricted=True) to enable CPython restricted mode.\nIn this mode, reading a file and modify a class are blocked. Some attributes\nare hidden (eg. method.__self__), other are read only (eg. func.__doc__).\n\nCPython restricted mode is disabled by default. The restricted mode is\nincompatible with SandboxConfig \"traceback\" feature and allowPath() method.\n\nThe restricted mode doesn't exist in Python3 anymore, it was removed with\nbastion and rexec modules:\n\n * http://svn.python.org/view?view=rev&revision=55301\n * http://hg.python.org/cpython/rev/f60c877d52c8/\n\nOther options\n-------------\n\n - config.allowPath(path) allows to read a file from the specified path\n - config.allowModule(name, symbol1, symbol2, ...) allows to import the\n   specified module, but give only access to the specified symbols\n\n\nExample\n=======\n\nWith call() method: ::\n\n    from sandbox import Sandbox\n\n    def func(a, b):\n        return a + b\n\n    sandbox = Sandbox()\n    print sandbox.call(func, 1, 2)\n\nWith execute() method: ::\n\n    from sandbox import Sandbox, SandboxConfig\n    sandbox = Sandbox(SandboxConfig('stdout'))\n    sandbox.execute('print(\"Code executed in the sandbox\")')\n\nexecute() with a local variable: ::\n\n    from sandbox import Sandbox, SandboxConfig\n    sandbox = Sandbox(SandboxConfig('stdout'))\n    sandbox.execute('print(data)', locals={'data': [1, 2, 3]})    # ok\n    sandbox.execute('data.append(4)', locals={'data': [1, 2, 3]}) # error\n\nObjects passed to .call() globals/locals and .execute() arguments are\nproxified: they are replaced by read-only views of the objects.\n\n\nStatus\n======\n\npysanbox is tested on Python 2.5 and 2.6 on Debian Sid.\n\nSee TODO file for the complete status.\n\n\nSee also\n========\n\nPython\n------\n\n * http://wiki.python.org/moin/SandboxedPython\n * tav CPython patches:\n   http://codereview.appspot.com/20051\n   http://codereview.appspot.com/21043\n * secure*.py in plexnet\n   http://github.com/tav/plexnet/tree/master/source/plexnet/util\n * Security in Python Wiki:\n   http://wiki.python.org/moin/Security\n * safelite.py:\n   http://tav.espians.com/a-challenge-to-break-python-security.html\n * Zope security:\n   http://pypi.python.org/pypi/RestrictedPython\n   http://svn.zope.org/zope.security/trunk/src/zope/security/\n * Brett Canon's \"objcap\" secured Python interpreter\n   http://mail.python.org/pipermail/python-dev/2006-June/066344.html\n   http://sayspy.blogspot.com/2007/05/i-have-finished-securing-python.html\n   http://svn.python.org/view/python/branches/bcannon-objcap/secure_python.c?revision=56111&view=markup\n * Python taint mode:\n   http://www.cats-muvva.net/software/\n * Controlling Access to Resources Within The Python Interpreter:\n   http://www.cs.ubc.ca/~drifty/papers/python_security.pdf\n * PyPy sandbox:\n   http://codespeak.net/pypy/dist/pypy/doc/sandbox.html\n * mxProxy:\n   http://www.egenix.com/products/python/mxBase/mxProxy/\n * Python 2.3: rexec and Bastion\n\nPython-dev mailing list\n-----------------------\n\n * \"Python jail: whitelist vs blacklist\"\n   Victor Stinner, Tue Feb 24 13:50:40 CET 2009\n   http://mail.python.org/pipermail/python-dev/2009-February/086444.html\n * \"Challenge: Please break this!\"\n   tav, Mon Feb 23 23:41:30 CET 2009\n   http://mail.python.org/pipermail/python-dev/2009-February/086401.html\n   http://mail.python.org/pipermail/python-dev/2009-February/086413.html\n   http://mail.python.org/pipermail/python-dev/2009-February/086439.html\n * \"Reviving restricted mode?\"\n   Guido van Rossum, Sun Feb 22 17:45:27 CET 2009\n   http://mail.python.org/pipermail/python-dev/2009-February/086352.html\n * \"object capability; func_closure; __subclasses__\"\n   tav, Thu Jun 28 03:04:42 CEST 2007\n   http://mail.python.org/pipermail/python-dev/2007-June/073724.html\n * \"Capabilities\"\n   Guido van Rossum, Fri, 07 Mar 2003 12:41:16 -0500\n   http://mail.python.org/pipermail/python-dev/2003-March/033820.html\n   http://mail.python.org/pipermail/python-dev/2003-March/033854.html\n   ...\n   (read the whole archive of march and april 2003)\n\nOther\n-----\n\n * http://lua-users.org/wiki/SandBoxes\n * \"Capability-based Financial Instruments\"\n   Mark S. Miller, Chip Morningstar and Bill Frantz, 2000\n   http://www.erights.org/elib/capability/ode/index.html",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/haypo/pysandbox/",
    "keywords": null,
    "license": "BSD (2-clause)",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pysandbox",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pysandbox/",
    "release_url": "https://pypi.org/project/pysandbox/1.5.1/",
    "requires_python": null,
    "summary": "Python sandbox",
    "version": "1.5.1"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9d4e76fd752984c4b90195d19e067136",
          "sha256": "d7dfbda2396d72aef1dbbf487f3ebd6d4630fbce8cef30b476718e79d70f9b01"
        },
        "downloads": 2378,
        "filename": "pysandbox-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9d4e76fd752984c4b90195d19e067136",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20787,
        "upload_time": "2010-06-29T00:31:44",
        "url": "https://files.pythonhosted.org/packages/40/cf/0d1173e38c69bb11a945d2cfcc48439315b073d40f339205cb92c55dd071/pysandbox-1.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "88852918e12af49787bebc9a82b5ca7e",
          "sha256": "a1bb6548989f94d476c3eb79934585ec266139c9727edd10206c0013fdbdbfc5"
        },
        "downloads": 2385,
        "filename": "pysandbox-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "88852918e12af49787bebc9a82b5ca7e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24301,
        "upload_time": "2010-07-26T02:48:08",
        "url": "https://files.pythonhosted.org/packages/78/87/d03ed09b3d1302bf10359cac678c85f1795abb3ceec444d8c1f93af4db0a/pysandbox-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4135abb9aaa16e579e4cd75fb24e0aa7",
          "sha256": "e8276f0608cfe8774966592f1a9050ccef7165a5c90e824d3c1816530f316564"
        },
        "downloads": 2345,
        "filename": "pysandbox-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4135abb9aaa16e579e4cd75fb24e0aa7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24426,
        "upload_time": "2010-09-15T03:44:09",
        "url": "https://files.pythonhosted.org/packages/30/71/c2c13291a1e0c19c565552c6d0824f8a08f912258a6366983493fe823b83/pysandbox-1.0.2.tar.gz"
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6bb34e202915ee8005c656d3f8b4b19a",
          "sha256": "9a197b8ced4bed440863622f575648931dd070dcd37485e61a1ebee4c8e1bcf1"
        },
        "downloads": 2660,
        "filename": "pysandbox-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6bb34e202915ee8005c656d3f8b4b19a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24579,
        "upload_time": "2010-09-16T13:11:43",
        "url": "https://files.pythonhosted.org/packages/99/f3/ad6ada8bd16f5133dd6979119eb7ae6df99c3f54c415eb2d780707137704/pysandbox-1.0.3.tar.gz"
      }
    ],
    "1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b5f2eb214de3b786b68a89c2ac35aec5",
          "sha256": "31074f552aace669264b9f1a1762403ca72e980d43653c691af8c01131ba7c61"
        },
        "downloads": 3688,
        "filename": "pysandbox-1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b5f2eb214de3b786b68a89c2ac35aec5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29570,
        "upload_time": "2012-03-20T13:05:14",
        "url": "https://files.pythonhosted.org/packages/0f/35/3f4a1d9ed77bbc926c84f839a3912814a782757830ead894c9ff93e42807/pysandbox-1.5.tar.gz"
      }
    ],
    "1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1990690616de34b43cd5c316323038e5",
          "sha256": "713c8c4f0ec2418a10ae5640630117ec83a44131370c7a8937fef1f42f983449"
        },
        "downloads": 3538,
        "filename": "pysandbox-1.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1990690616de34b43cd5c316323038e5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30706,
        "upload_time": "2013-11-12T20:52:42",
        "url": "https://files.pythonhosted.org/packages/20/d5/baa234649391ef369dd2203cd6fb2c20dba687d9370f19ba4a80e49c2e4c/pysandbox-1.5.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "1990690616de34b43cd5c316323038e5",
        "sha256": "713c8c4f0ec2418a10ae5640630117ec83a44131370c7a8937fef1f42f983449"
      },
      "downloads": 3538,
      "filename": "pysandbox-1.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1990690616de34b43cd5c316323038e5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 30706,
      "upload_time": "2013-11-12T20:52:42",
      "url": "https://files.pythonhosted.org/packages/20/d5/baa234649391ef369dd2203cd6fb2c20dba687d9370f19ba4a80e49c2e4c/pysandbox-1.5.1.tar.gz"
    }
  ]
}