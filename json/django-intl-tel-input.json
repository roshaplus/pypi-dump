{
  "info": {
    "author": "Benjamin Murden",
    "author_email": "benmurden@github.com",
    "bugtrack_url": "",
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "Django intl-tel-input\r\n=====================\r\n\r\n.. image:: https://travis-ci.org/benmurden/django-intl-tel-input.svg?branch=master\r\n  :target: https://travis-ci.org/benmurden/django-intl-tel-input\r\n.. image:: https://codecov.io/gh/benmurden/django-intl-tel-input/branch/master/graph/badge.svg\r\n  :target: https://codecov.io/gh/benmurden/django-intl-tel-input\r\n\r\nA Django form widget for international telephone numbers based on the jQuery plugin `intl-tel-input`_.\r\n\r\nThis is a new package, so it doesn't implement all the features of\r\nintl-tel-input. However, it is well tested, and has been stable in production.\r\n\r\nInstallation\r\n------------\r\n\r\nInstall from PyPI.\r\n\r\n.. code:: shell\r\n\r\n    pip install django-intl-tel-input\r\n\r\nAdd intl-tel-input to your INSTALLED\\_APPS, so Django can find the init\r\nscript.\r\n\r\n.. code:: python\r\n\r\n    ...\r\n    INSTALLED_APPS += ('intl_tel_input',)\r\n    ...\r\n\r\nUsage\r\n-----\r\n\r\nSimply add ``IntlTelInputWidget`` to your form field.\r\n\r\n.. code:: python\r\n\r\n    from intl_tel_input.widgets import IntlTelInputWidget\r\n\r\n    class MyForm(forms.ModelForm):\r\n        class Meta:\r\n            model = MyModel\r\n            fields = ['foo', 'bar']\r\n            widgets = {\r\n                'bar': IntlTelInputWidget()\r\n            }\r\n    ...\r\n\r\nWith a standard form:\r\n\r\n.. code:: python\r\n\r\n    class MyForm(forms.Form):\r\n        tel_number = forms.CharField(widget=IntlTelInputWidget())\r\n\r\n    ...\r\n\r\nForm media\r\n----------\r\n\r\nInclude ``{{ form.media.css }}`` in the ``<head>`` of your template. This will ensure all styles are parsed before the widget is displayed.\r\n\r\nIf you have included jQuery at the end of your document, then don't\r\nforget to update the template where this widget appears with a\r\n``{{ form.media.js }}``. Put it in a block that allows it to come after\r\njQuery.\r\n\r\nIf you're using `crispy-forms`_, the static content will be inserted automatically beside the input. To prevent this, be sure to set ``include_media = False`` on your form helper.\r\n\r\n.. code:: python\r\n\r\n    class MyForm(forms.Form):\r\n    ...\r\n        def __init__(self, *args, **kwargs):\r\n            self.helper = FormHelper()\r\n            self.helper.include_media = False\r\n    ...\r\n\r\nIf you need to load all JS in the head, you can make the ``init.js`` script\r\nwait for the document to be ready with the following snippet.\r\n\r\n.. code:: javascript\r\n\r\n    jQuery(document).ready(\r\n      {{ form.media.js }}\r\n    );\r\n\r\nAll this assumes your form context variable is called ``form``.\r\n\r\n.. _intl-tel-input: https://github.com/jackocnr/intl-tel-input\r\n.. _crispy-forms: https://github.com/django-crispy-forms/django-crispy-forms\r\n\r\nOptions\r\n-------\r\n\r\nThe widget can be invoked with keyword arguments which translate to the options\r\navailable in intl-tel-input.\r\n\r\nallow_dropdown\r\n  Shows the country dropdown.\r\n  Default: ``True``\r\n\r\ndefault_code\r\n  Country code selected by default. Overridden when using ``auto_geo_ip``.\r\n  Default: ``'us'``\r\n\r\nauto_geo_ip\r\n  When True, `freegeoip`_ will be used to autodetect the user's country via Ajax. There is a limit of 15,000 queries per hour, so it should not be used on high-traffic sites. Alternatively use `pygeoip`_, detect server-side, then set the ``default_code``.\r\n  Default: ``False``\r\n\r\n.. _freegeoip: https://freegeoip.net\r\n.. _pygeoip: https://pypi.python.org/pypi/pygeoip\r\n\r\n\r\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/benmurden/django-intl-tel-input",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-intl-tel-input",
    "platform": "",
    "project_url": "https://pypi.org/project/django-intl-tel-input/",
    "release_url": "https://pypi.org/project/django-intl-tel-input/0.1.3/",
    "requires_dist": [
      "Django (>=1.8)"
    ],
    "requires_python": "",
    "summary": "A Django form widget implementing intl-tel-input.",
    "version": "0.1.3"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c26da7bed2abe285cbf0dfe19bd5a960",
          "sha256": "6b7790d0023b599e855268cd2a3f9a369e401a821fe7301b60633b41ecc6ce91"
        },
        "downloads": 474,
        "filename": "django-intl-tel-input-0.1.0.zip",
        "has_sig": false,
        "md5_digest": "c26da7bed2abe285cbf0dfe19bd5a960",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7439,
        "upload_time": "2016-07-01T03:18:36",
        "url": "https://files.pythonhosted.org/packages/f9/85/7684465ae14adb07f99a0d1db2902e9aa0e5772d87603a795d01a4a92495/django-intl-tel-input-0.1.0.zip"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a2b56f87391827afbc71c774c2619752",
          "sha256": "0dc4ec0cdbca15b9f42ac47d66904d17e9b7798c2cb1f8c20fc3759366a244f5"
        },
        "downloads": 301,
        "filename": "django-intl-tel-input-0.1.1.zip",
        "has_sig": false,
        "md5_digest": "a2b56f87391827afbc71c774c2619752",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8714,
        "upload_time": "2016-09-22T12:24:39",
        "url": "https://files.pythonhosted.org/packages/84/09/a1622eee7f240609ce4e9ff5b000203f730680deabb27ccf378dc517459e/django-intl-tel-input-0.1.1.zip"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "73986dad702d1dc10caabc7ce0716807",
          "sha256": "9103a6f5a73d4bef924e10a3962197b8231b43ae8ccc210692b1ce0e49b9b842"
        },
        "downloads": 10,
        "filename": "django-intl-tel-input-0.1.2.zip",
        "has_sig": false,
        "md5_digest": "73986dad702d1dc10caabc7ce0716807",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9066,
        "upload_time": "2017-02-09T07:31:51",
        "url": "https://files.pythonhosted.org/packages/83/cc/4b232bade58de0dacb5ab12ff47475297b78e33b2a73722e04432c9160c0/django-intl-tel-input-0.1.2.zip"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "886451eb036ec64027ee8fbfb7b2a5eb",
          "sha256": "ec7392ad2f9241493d35371b21261533435103b1c73cd6adeb49249efae42a0a"
        },
        "downloads": 0,
        "filename": "django_intl_tel_input-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "886451eb036ec64027ee8fbfb7b2a5eb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 12622,
        "upload_time": "2017-08-03T03:38:29",
        "url": "https://files.pythonhosted.org/packages/79/b6/be9b2ba55db3e530b296eccf7dcda1eb29ca215936d23723d287d201f033/django_intl_tel_input-0.1.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "94db9ea4af89833361bb9414b2781974",
          "sha256": "4fdf9026ce2b12853817823063e32291b46a78031e6ab26105d92912046d40e7"
        },
        "downloads": 0,
        "filename": "django-intl-tel-input-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "94db9ea4af89833361bb9414b2781974",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8679,
        "upload_time": "2017-08-03T03:39:31",
        "url": "https://files.pythonhosted.org/packages/c0/91/7bad03c0d3cf67cf488a36f6960999c765c431b8171ae0a30f09728a989b/django-intl-tel-input-0.1.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "886451eb036ec64027ee8fbfb7b2a5eb",
        "sha256": "ec7392ad2f9241493d35371b21261533435103b1c73cd6adeb49249efae42a0a"
      },
      "downloads": 0,
      "filename": "django_intl_tel_input-0.1.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "886451eb036ec64027ee8fbfb7b2a5eb",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 12622,
      "upload_time": "2017-08-03T03:38:29",
      "url": "https://files.pythonhosted.org/packages/79/b6/be9b2ba55db3e530b296eccf7dcda1eb29ca215936d23723d287d201f033/django_intl_tel_input-0.1.3-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "94db9ea4af89833361bb9414b2781974",
        "sha256": "4fdf9026ce2b12853817823063e32291b46a78031e6ab26105d92912046d40e7"
      },
      "downloads": 0,
      "filename": "django-intl-tel-input-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "94db9ea4af89833361bb9414b2781974",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8679,
      "upload_time": "2017-08-03T03:39:31",
      "url": "https://files.pythonhosted.org/packages/c0/91/7bad03c0d3cf67cf488a36f6960999c765c431b8171ae0a30f09728a989b/django-intl-tel-input-0.1.3.tar.gz"
    }
  ]
}