{
  "info": {
    "author": "Andy Grabow",
    "author_email": "andy@freilandkiwis.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "PyPugJS |BuildStatus|_\n========================\n\n.. |BuildStatus| image:: https://travis-ci.org/kakulukia/pypugjs.svg\n.. _BuildStatus: https://travis-ci.org/kakulukia/pypugjs\n\n**PyPugJS is a fork of** `PyJade <http://github.com/syrusakbary/pyjade>`_\n**with the name Jade changed to** `PugsJS <https://github.com/pugjs/pug>`_.\n\n**Additional disclaimer:** Since the original pypugjs died i took the liberty to keep it alive, because\nsince starting to work with the jade compiler for node I hate writing HTML and want to continue using it in my Django projects.\nI will keep the existing non Django stuff inside the project, but I canot supportanything other since I'm not actively using it not will be in the foreseeable future. Tornado, Mako etc. support will be welcome tho!\n\nPyPugJS is a high performance port of PugJS for python, that converts any .pug source into different\nTemplate-languages (Django, Jinja2, Mako or Tornado).\n\nUTILITIES\n=========\nTo simply output the conversion to your console::\n\n    pypugjs [-c django|jinja|mako|tornado] input.pug [output.html]\n\n\nINSTALLATION\n============\n\nTo install pypugjs::\n\n    pip install pypugjs\n\nOr::\n\n    python setup.py install\n\nNow simply **name your templates with a `.pug` extension** and this PugJS compiler\nwill do the rest.  Any templates with other extensions will not be compiled\nwith the pypugjs compiler.\n\n\nDjango\n------\n\nIn `settings.py`, add a `loader` to `TEMPLATES` like so:\n\n.. code:: python\n\n    TEMPLATES = [\n        {\n            'BACKEND': 'django.template.backends.django.DjangoTemplates',\n            'DIRS': [\n                os.path.join(BASE_DIR, 'templates')\n            ],\n            'OPTIONS': {\n                'context_processors': [\n                    'django.template.context_processors.debug',\n                    'django.template.context_processors.request',\n                    'django.contrib.auth.context_processors.auth',\n                    'django.contrib.messages.context_processors.messages',\n                ],\n                'loaders': [\n                    # PyPugJS part:   ##############################\n                    ('pypugjs.ext.django.Loader', (\n                        'django.template.loaders.filesystem.Loader',\n                        'django.template.loaders.app_directories.Loader',\n                    ))\n                ],\n                'builtins': [\n                    'pypugjs.ext.django.templatetags',\n                ],\n            },\n        },\n    ]\n\nIn case you want to use Djangos translation feature, be sure to put this import statement at the top of your settings.py.\n\n    import pypugjs.ext.django  # noqa\n\n\nJinja2\n------\n\nJust add `pypugjs.ext.jinja.PyPugJSExtension` as extension\n\n.. code:: python\n\n    jinja_env = Environment(extensions=['pypugjs.ext.jinja.PyPugJSExtension'])\n\n\nMako\n----\n\nJust add  `pypugjs.ext.mako.preprocessor` as preprocessor\n\n.. code:: python\n\n    from pypugjs.ext.mako import preprocessor as mako_preprocessor\n    mako.template.Template(haml_source,\n        preprocessor=mako_preprocessor\n    )\n\n\nFlask\n-----\n\nJust add  `pypugjs.ext.jinja.PyPugJSExtension` as extension to the environment of the app\n\n.. code:: python\n\n    app.jinja_env.add_extension('pypugjs.ext.jinja.PyPugJSExtension')\n\n\nPyramid\n-------\n\nAdjust your \"your_project/__init__.py\" and add the following line somewhere to in the main() function\n\n.. code:: python\n\n    config.include('pypugjs.ext.pyramid')\n\n\nTornado Templates\n-----------------\n\nAppend this after importing tornado.template\n\n.. code:: python\n\n    from tornado import template\n    from pypugjs.ext.tornado import patch_tornado\n    patch_tornado()\n\n    (...)\n\n\nSyntax\n======\n\nGenerally the same as the PugJS Node.js module (except of cases and several other features, which are not implemented)\nhttps://github.com/pugjs/pug/blob/master/README.md\n\n\nExample\n-------\n\nThis code\n\n.. code:: jade\n\n    !!! 5\n    html(lang=\"en\")\n      head\n        title= pageTitle\n        script(type='text/javascript')\n          if (foo) {\n             bar()\n          }\n      body\n        h1.title PugJS - node template engine\n        #container\n          if youAreUsingPugJS\n            p You are amazing\n          else\n            p Get on it!\n\n\nConverts to\n\n.. code:: html\n\n    <!DOCTYPE html>\n    <html lang=\"en\">\n      <head>\n        <title>{{pageTitle}}</title>\n        <script type='text/javascript'>\n          if (foo) {\n             bar()\n          }\n        </script>\n      </head>\n      <body>\n        <h1 class=\"title\">PugJS - node template engine</h1>\n        <div id=\"container\">\n          {%if youAreUsingPugJS%}\n            <p>You are amazing</p>\n          {%else%}\n            <p>Get on it!</p>\n          {%endif%}\n        </div>\n      </body>\n    </html>\n\n\nRegister filters\n================\n\nIf you want to register a function as a filter, you only have to\ndecorate the function with ``pypugjs.register_filter(\"filter_name\")``\n\n.. code:: python\n\n    import pypugjs\n\n    @pypugjs.register_filter('capitalize')\n    def capitalize(text,ast):\n      return text.capitalize()\n\n\nNotable Features\n===================\n\nAdding conditional classes:\n\n    a(class={'active-class': True, 'another': False})\n\n\n\n\n\nTESTING\n=======\n\nYou must have `nose` package installed.\nYou can do the tests with::\n\n    ./test.sh\n\n\nTODOs and BUGS\n==============\nSee: https://github.com/kakulukia/pypugjs/issues\n\n\nChangeLog\n===========\n\n- conditional classes feature (thx to paradoxxxzero)\n\n\n",
    "docs_url": null,
    "download_url": "https://github.com/kakulukia/pypugjs/archive/5.1.0.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/kakulukia/pypugjs",
    "keywords": "pug pugjs template converter",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pypugjs",
    "platform": "",
    "project_url": "https://pypi.org/project/pypugjs/",
    "release_url": "https://pypi.org/project/pypugjs/5.1.0/",
    "requires_dist": [
      "six"
    ],
    "requires_python": "",
    "summary": "PugJS syntax template adapter for Django, Jinja2, Mako and Tornado templates - copy of PyJade with the name changed",
    "version": "5.1.0"
  },
  "releases": {
    "5.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3d07a1f03e8a56c330184f84163e1885",
          "sha256": "13934733348ea64afd8004e326911c3eb798c1aa5252e3535856968a1fedc0ba"
        },
        "downloads": -1,
        "filename": "pypugjs-5.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d07a1f03e8a56c330184f84163e1885",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 37099,
        "upload_time": "2018-01-11T20:18:12",
        "url": "https://files.pythonhosted.org/packages/21/35/7ea82a0b82e6f40dc35725d32f5608912c245d33d2ac38e2988883c67314/pypugjs-5.0.1-py3-none-any.whl"
      }
    ],
    "5.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "05b2a94935a2878f7e558748893ccd79",
          "sha256": "e5277dfd99029810af858960e8968f5d98a1ec858ae7011163ddbc7947659afd"
        },
        "downloads": -1,
        "filename": "pypugjs-5.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05b2a94935a2878f7e558748893ccd79",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 38128,
        "upload_time": "2018-01-13T21:53:00",
        "url": "https://files.pythonhosted.org/packages/58/e2/b92ea559cdc241fd97d4fe0f9617ae24e767ac15c52cbf7971a92d27c48c/pypugjs-5.1.0-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "05b2a94935a2878f7e558748893ccd79",
        "sha256": "e5277dfd99029810af858960e8968f5d98a1ec858ae7011163ddbc7947659afd"
      },
      "downloads": -1,
      "filename": "pypugjs-5.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "05b2a94935a2878f7e558748893ccd79",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 38128,
      "upload_time": "2018-01-13T21:53:00",
      "url": "https://files.pythonhosted.org/packages/58/e2/b92ea559cdc241fd97d4fe0f9617ae24e767ac15c52cbf7971a92d27c48c/pypugjs-5.1.0-py3-none-any.whl"
    }
  ]
}