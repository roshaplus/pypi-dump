{
  "info": {
    "author": "JL Peyret",
    "author_email": "jpeyret@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Database :: Front-Ends"
    ],
    "description": "Easier raw SQL, with or without an ORM.\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nThe Binder class\r\n----------------\r\n\r\nA Binder abstracts differences in the underlying database's bind variable syntax and also grabs bind variables\r\nfrom a list of arguments, using dict, then attribute lookup.\r\n\r\nUsing native database binds also helps to protect you against SQL injection attacks.\r\n\r\nsupported:  Postgresql, sqlite3, Oracle, MySQL\r\n\r\nSimple **sqlite3** example::\r\n\r\n    from pynoorm.binder import Binder\r\n    binder = Binder.factory(\"qmark\")\r\n\r\n    #just for test... assign a custid to binder for attribute lookup\r\n    binder.custid = \"AMAZON\"\r\n\r\n    query, parameters = binder(\"select * from orders where custid = %(custid)s\", dict(custid=\"ACME\"), binder)\r\n\r\n``query`` and ``parameters`` are now in the sqlite3/qmark format::\r\n\r\n\t>>> print(query)\r\n\tselect * from orders where custid = ?\r\n\t>>> print(parameters)\r\n\t('ACME',)\r\n\r\nOracle, with mutiple parameters?::\r\n\r\n    import cx_Oracle\r\n    binder_ora = Binder.factory(cx_Oracle.paramstyle)\r\n\r\n    tqry = \"select * from orders where custid = %(custid)s and has_shipped = %(shipped)s\"\r\n    query, parameters = binder_ora(tqry, dict(custid=\"ACME\", shipped=1), binder)\r\n\r\n    >>> print(query)\r\n    select * from orders where custid = :custid and has_shipped = :shipped\r\n    >>> print(parameters)\r\n    {'shipped': 1, 'custid': 'ACME'}\r\n\r\n\r\n\r\n=======\r\nHistory\r\n=======\r\n\r\n0.1.0 (2016-02-17)\r\n------------------\r\n\r\n* First release on github.\r\n\r\n0.1.1 (2016-02-22)\r\n------------------\r\n\r\n* Registered on PyPI\r\n\r\n0.2.0 (2016-04-12)\r\n------------------\r\n\r\n* Added support for Python 3.3+ and MySQL",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jpeyret/pynoorm",
    "keywords": "sql database multiplatform",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pynoorm",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pynoorm/",
    "release_url": "https://pypi.org/project/pynoorm/0.2.0/",
    "requires_python": null,
    "summary": "Easier raw SQL, with or without an ORM.",
    "version": "0.2.0"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b869e99cdc2307a4f8529eafea917e34",
          "sha256": "f02e7fb458de4a51303f1ed976b4a7a8f4f5226eb08bbf83e5b5d42043f50e5b"
        },
        "downloads": 441,
        "filename": "pynoorm-0.1.1.macosx-10.9-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "b869e99cdc2307a4f8529eafea917e34",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5968,
        "upload_time": "2016-02-23T04:35:21",
        "url": "https://files.pythonhosted.org/packages/81/01/8f8b31d62158c3b3f4cff8c181631d4e236097358b62792930981ba1b6e8/pynoorm-0.1.1.macosx-10.9-x86_64.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "cfdfb3287e53b0460e8b1c65fbcfc320",
          "sha256": "918b1cd1605a9d162e85f6df4a8ca3e765eb6f8bffe53133f5f89b137bf52574"
        },
        "downloads": 117,
        "filename": "pynoorm-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cfdfb3287e53b0460e8b1c65fbcfc320",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18617,
        "upload_time": "2016-02-23T04:35:27",
        "url": "https://files.pythonhosted.org/packages/a7/d9/847cdeb6bfe2bdab983c41858450efd8ce1038d39e9bc37e479ab52be09c/pynoorm-0.1.1.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4f1b701bd2bbb91d40be420e043e9248",
          "sha256": "771d15e0c0ecfd82bfbb0e8865a0b84f3defd15f967a571304432c4359193e55"
        },
        "downloads": 135,
        "filename": "pynoorm-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4f1b701bd2bbb91d40be420e043e9248",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19146,
        "upload_time": "2016-04-13T00:47:27",
        "url": "https://files.pythonhosted.org/packages/9b/87/f24a8c37f35b41c2a8b3bfd96422c36f9d75a7ea10b1bead60cbbdafe798/pynoorm-0.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4f1b701bd2bbb91d40be420e043e9248",
        "sha256": "771d15e0c0ecfd82bfbb0e8865a0b84f3defd15f967a571304432c4359193e55"
      },
      "downloads": 135,
      "filename": "pynoorm-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4f1b701bd2bbb91d40be420e043e9248",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 19146,
      "upload_time": "2016-04-13T00:47:27",
      "url": "https://files.pythonhosted.org/packages/9b/87/f24a8c37f35b41c2a8b3bfd96422c36f9d75a7ea10b1bead60cbbdafe798/pynoorm-0.2.0.tar.gz"
    }
  ]
}