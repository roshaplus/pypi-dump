{
  "info": {
    "author": "deadc0de6",
    "author_email": "deadc0de6@foo.bar",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "DOTDROP\n=======\n\n|Build Status| |License: GPL v3| |Coverage Status| |PyPI version|\n|Python|\n\n*Save your dotfiles once, deploy them everywhere*\n\nDotdrop makes the management of dotfiles between different hosts easy.\nIt allows to store your dotfiles on git and automagically deploy\ndifferent versions on different setups.\n\nFor example you can have a set of dotfiles for your home laptop and a\ndifferent set for your office desktop. Those sets may overlap and\ndifferent versions of the same dotfile can be deployed on different\npredefined *profiles*. Another use case is when you have a main set of\ndotfiles for your everyday\u2019s host and a sub-set you only need to deploy\nto temporary hosts (cloud VM, etc) that may be using a slightly\ndifferent version of some of the dotfiles.\n\nFeatures:\n\n-  Sync once every dotfile on git for different usages\n-  Allow dotfiles templating by leveraging\n   `jinja2 <http://jinja.pocoo.org/>`__\n-  Comparison between local and stored dotfiles\n-  Handling multiple profiles with different sets of dotfiles\n-  Easy import dotfiles\n-  Handle files and directories\n-  Associate an action to the deployment of specific dotfiles\n\nCheck the `blog post <https://deadc0de.re/articles/dotfiles.html>`__ and\nand the `example <#example>`__ for more.\n\nQuick start:\n\n.. code:: bash\n\n    mkdir dotfiles && cd dotfiles\n    git init\n    git submodule add https://github.com/deadc0de6/dotdrop.git\n    ./dotdrop/bootstrap.sh\n    ./dotdrop.sh --help\n\nWhy dotdrop ?\n-------------\n\nThere exist many tools to manage dotfiles however not many allow to\ndeploy different versions of the same dotfile on different hosts.\nMoreover dotdrop allows to specify the set of dotfiles that need to be\ndeployed on a specific profile.\n\nSee the `example <#example>`__ for a concrete example on why dotdrop\nrocks.\n\n--------------\n\n**Table of Contents**\n\n-  `Installation <#installation>`__\n-  `Usage <#usage>`__\n-  How to\n\n   -  `Install dotfiles <#install-dotfiles>`__\n   -  `Compare dotfiles <#compare-dotfiles>`__\n   -  `Import dotfiles <#import-dotfiles>`__\n   -  `List profiles <#list-profiles>`__\n   -  `List dotfiles <#list-dotfiles>`__\n   -  `Use actions <#use-actions>`__\n   -  `Use transformations <#use-transformations>`__\n   -  `Update dotdrop <#update-dotdrop>`__\n   -  `Update dotfiles <#update-dotfiles>`__\n   -  `Store sensitive dotfiles <#store-sensitive-dotfiles>`__\n\n-  `Config <#config>`__\n-  `Template <#template>`__\n-  `Example <#example>`__\n-  `People using dotdrop <#people-using-dotdrop>`__\n\nInstallation\n============\n\nThere\u2019s two ways of installing and using dotdrop, either `as a\nsubmodule <#as-a-submodule>`__ to your dotfiles git tree or system-wide\n`with pypi <#with-pypi>`__.\n\nHaving dotdrop as a submodule guarantees that anywhere your are cloning\nyour dotfiles git tree from you\u2019ll have dotdrop shipped with it. It is\nthe recommended way.\n\nDotdrop is also available on aur:\nhttps://aur.archlinux.org/packages/dotdrop/\n\nAs a submodule\n--------------\n\nThe following will create a repository for your dotfiles and keep\ndotdrop as a submodules:\n\n.. code:: bash\n\n    $ mkdir dotfiles; cd dotfiles\n    $ git init\n    $ git submodule add https://github.com/deadc0de6/dotdrop.git\n    $ sudo pip3 install -r dotdrop/requirements.txt\n    $ ./dotdrop/bootstrap.sh\n    $ ./dotdrop.sh --help\n\nInstall the requirements with:\n\n.. code:: bash\n\n    $ sudo pip3 install -r dotdrop/requirements.txt\n\nFor MacOS users, make sure to install ``realpath`` through homebrew\n(part of *coreutils*).\n\nUsing this solution will need you to work with dotdrop by using the\ngenerated script ``dotdrop.sh`` at the root of your dotfiles repository.\n\nFinally import your dotfiles as described `below <#usage>`__.\n\nWith pypi\n---------\n\nStart by installing dotdrop\n\n.. code:: bash\n\n    $ sudo pip3 install dotdrop\n\nAnd then create a repository for your dotfiles\n\n.. code:: bash\n\n    $ mkdir dotfiles; cd dotfiles\n    $ git init\n\nTo avoid the need to provide the config file path to dotdrop each time\nit is called, you can create an alias:\n\n::\n\n    alias dotdrop='dotdrop --cfg=<path-to-your-config.yaml>'\n\nReplace any call to ``dotdrop.sh`` in the documentation below by\n``dotdrop`` if using the pypi solution.\n\nFinally import your dotfiles as described `below <#usage>`__.\n\nUsage\n=====\n\nIf starting fresh, the ``import`` command of dotdrop allows to easily\nand quickly get a running setup.\n\nInstall dotdrop on one of your host and then import any dotfiles you\nwant dotdrop to manage (be it a file or a directory):\n\n.. code:: bash\n\n    $ dotdrop.sh import ~/.vimrc ~/.xinitrc\n\nDotdrop does two things:\n\n-  Copy the dotfiles in the *dotfiles* directory\n-  Create the entries in the *config.yaml* file\n\nCommit and push your changes.\n\nThen go to another host where your dotfiles need to be managed as well,\nclone the previously setup git tree and compare local dotfiles with the\nones stored by dotdrop:\n\n.. code:: bash\n\n    $ dotdrop.sh list\n    $ dotdrop.sh compare --profile=<other-host-profile>\n\nThen adapt any dotfile using the `template <#template>`__ feature and\nset a new profile for the current host by simply adding lines in the\nconfig files, for example:\n\n.. code:: yaml\n\n    ...\n    profiles:\n      host1:\n        dotfiles:\n        - f_vimrc\n        - f_xinitrc\n      host2:\n        dotfiles:\n        - f_vimrc\n    ...\n\nWhen done, you can install your dotfiles using\n\n.. code:: bash\n\n    $ dotdrop.sh install\n\nThat\u2019s it, a single repository with all your dotfiles for your different\nhosts.\n\nFor additional usage see the help:\n\n::\n\n    $ dotdrop.sh --help\n         _       _      _\n      __| | ___ | |_ __| |_ __ ___  _ __\n     / _` |/ _ \\| __/ _` | '__/ _ \\| '_ |\n     \\__,_|\\___/ \\__\\__,_|_|  \\___/| .__/\n                                   |_|\n\n    Usage:\n      dotdrop install   [-fndV] [-c <path>] [-p <profile>]\n      dotdrop import    [-ldV]  [-c <path>] [-p <profile>] <paths>...\n      dotdrop compare   [-V]    [-c <path>] [-p <profile>]\n                                [-o <opts>] [--files=<files>]\n      dotdrop listfiles [-V]    [-c <path>] [-p <profile>]\n      dotdrop list      [-V]    [-c <path>]\n      dotdrop --help\n      dotdrop --version\n\n    Options:\n      -p --profile=<profile>  Specify the profile to use [default: ilak].\n      -c --cfg=<path>         Path to the config [default: config.yaml].\n      --files=<files>         Comma separated list of files to compare.\n      -o --dopts=<opts>       Diff options [default: ].\n      -n --nodiff             Do not diff when installing.\n      -l --link               Import and link.\n      -f --force              Do not warn if exists.\n      -V --verbose            Be verbose.\n      -d --dry                Dry run.\n      -v --version            Show version.\n      -h --help               Show this screen.\n\nFor easy deployment the default profile used by dotdrop reflects the\nhostname of the host on which it runs.\n\nInstall dotfiles\n----------------\n\nSimply run\n\n.. code:: bash\n\n    $ dotdrop.sh install\n\nUse the ``--profile`` switch to specify a profile if not using the\nhost\u2019s hostname.\n\nCompare dotfiles\n----------------\n\nCompare local dotfiles with dotdrop\u2019s defined ones:\n\n.. code:: bash\n\n    $ dotdrop.sh compare\n\nThe diffing is done by diff in the backend, one can provide specific\noptions to diff using the ``-o`` switch.\n\nImport dotfiles\n---------------\n\nDotdrop allows to import dotfiles directly from the filesystem. It will\ncopy the dotfile and update the config file automatically.\n\nFor example to import ``~/.xinitrc``\n\n.. code:: bash\n\n    $ dotdrop.sh import ~/.xinitrc\n\nList profiles\n-------------\n\n.. code:: bash\n\n    $ dotdrop.sh list\n\nDotdrop allows to choose which profile to use with the *\u2013profile* switch\nif you use something else than the default (the hostname).\n\nList dotfiles\n-------------\n\nThe following command lists the different dotfiles configured for a\nspecific profile:\n\n.. code:: bash\n\n    $ dotdrop.sh listfiles --profile=<some-profile>\n\nFor example:\n\n::\n\n    Dotfile(s) for profile \"some-profile\":\n\n    f_vimrc (file: \"vimrc\", link: False)\n        -> ~/.vimrc\n    f_dunstrc (file: \"config/dunst/dunstrc\", link: False)\n        -> ~/.config/dunst/dunstrc\n\nUse actions\n-----------\n\nIt is sometimes useful to execute some kind of action when deploying a\ndotfile. For example let\u2019s consider\n`Vundle <https://github.com/VundleVim/Vundle.vim>`__ is used to manage\nvim\u2019s plugins, the following action could be set to update and install\nthe plugins when ``vimrc`` is deployed:\n\n.. code:: yaml\n\n    actions:\n      vundle: vim +VundleClean! +VundleInstall +VundleInstall! +qall\n    config:\n      backup: true\n      create: true\n      dotpath: dotfiles\n    dotfiles:\n      f_vimrc:\n        dst: ~/.vimrc\n        src: vimrc\n        actions:\n          - vundle\n    profiles:\n      home:\n        dotfiles:\n        - f_vimrc\n\nThus when ``f_vimrc`` is installed, the command\n``vim +VundleClean! +VundleInstall +VundleInstall! +qall`` will be\nexecuted.\n\nUse transformations\n-------------------\n\nTransformation actions are used to transform a dotfile before it is\ninstalled. They work like `actions <#use-actions>`__ but are executed\nbefore the dotfile is installed to transform the source.\n\nTransformation commands have two arguments:\n\n-  **{0}** will be replaced with the dotfile to process\n-  **{1}** will be replaced with a temporary file to store the result of\n   the transformation\n\nA typical use-case for transformations is when the dotfile needs to be\nstored encrypted.\n\nHere\u2019s an example of part of a config file to use gpg encrypted\ndotfiles:\n\n::\n\n    dotfiles:\n      f_secret:\n        dst: ~/.secret\n        src: secret\n        trans:\n          - gpg\n    trans:\n      gpg: gpg2 -q --for-your-eyes-only --no-tty -d {0} > {1}\n\nThe above config allows to store the dotfile ``~/.secret`` encrypted in\nthe *dotfiles* directory and uses gpg to decrypt it when install is run.\n\nHere\u2019s how to deploy the above solution:\n\n-  import the clear dotfile (creates the correct entries in the config\n   file)\n\n::\n\n    ./dotdrop.sh import ~/.secret\n\n-  encrypt the original dotfile\n\n::\n\n    <some-gpg-command> ~/.secret\n\n-  overwrite the dotfile with the encrypted version\n\n::\n\n    cp <encrypted-version-of-secret> dotfiles/secret\n\n-  edit the config file and add the transformation to the dotfile\n-  commit and push the changes\n\nUpdate dotdrop\n--------------\n\nIf used as a submodule, update it with\n\n.. code:: bash\n\n    $ git submodule foreach git pull origin master\n    $ git add dotdrop\n    $ git commit -m 'update dotdrop'\n    $ git push\n\nThrough pypi:\n\n.. code:: bash\n\n    $ sudo pip3 install dotdrop --upgrade\n\nUpdate dotfiles\n---------------\n\nDotfiles managed by dotdrop can be updated using the ``update`` command.\nThere are two cases:\n\n-  the dotfile doesn\u2019t use `templating <#template>`__: the new version\n   of the dotfile is copied to the *dotfiles* directory and overwrites\n   the old version. If git is used to version the dotfiles stored by\n   dotdrop, the git command ``diff`` can be used to view the changes.\n-  the dotfile uses `templating <#template>`__: the dotfile must be\n   manually updated, the use of the dotdrop command ``compare`` can be\n   helpful to identify the changes to apply to the template.\n\n::\n\n    $ dotdrop.sh update ~/.vimrc\n\nStore sensitive dotfiles\n------------------------\n\nTwo solutions exist, the first one using an unversioned file (see\n`Environment variables <#environment-variables>`__) and the second using\ntransformations (see `Transformations <#use-transformations>`__).\n\nConfig\n======\n\nThe config file (defaults to *config.yaml*) is a yaml file containing\nthe following entries:\n\n-  **config** entry: contains settings for the deployment\n\n   -  ``backup``: create a backup of the dotfile in case it differs from\n      the one that will be installed by dotdrop\n   -  ``create``: create directory hierarchy when installing dotfiles if\n      it doesn\u2019t exist\n   -  ``dotpath``: path to the directory containing the dotfiles to be\n      managed by dotdrop (absolute path or relative to the config file\n      location)\n\n-  **dotfiles** entry: a list of dotfiles\n\n   -  When ``link`` is true, dotdrop will create a symlink instead of\n      copying. Template generation (as in `template <#template>`__) is\n      not supported when ``link`` is true.\n   -  ``actions`` contains a list of action keys that need to be defined\n      in the **actions** entry below.\n   -  ``trans`` contains a list of transformation keys that need to be\n      defined in the **trans** entry below.\n\n   ::\n\n       <dotfile-key-name>:\n         dst: <where-this-file-is-deployed>\n         src: <filename-within-the-dotpath>\n         # Optional\n         link: <true|false>\n         actions:\n           - <action-key>\n         trans:\n           - <transformation-key>\n\n-  **profiles** entry: a list of profiles with the different dotfiles\n   that need to be managed\n\n   -  ``dotfiles``: the dotfiles associated to this profile\n   -  ``include``: include all dotfiles from another profile (optional)\n\n::\n\n      <some-name-usually-the-hostname>:\n        dotfiles:\n        - <some-dotfile-key-name-defined-above>\n        - <some-other-dotfile-key-name>\n        - ...\n        # Optional\n        include:\n        - <some-other-profile>\n        - ...\n\n-  **actions** entry: a list of action\n\n::\n\n      <action-key>: <command-to-execute>\n\n-  **trans** entry: a list of transformations\n\n::\n\n      <trans-key>: <command-to-execute>\n\nAll dotfiles for a profile\n--------------------------\n\nTo use all defined dotfiles for a profile, simply use the keyword\n``ALL``.\n\nFor example:\n\n.. code:: yaml\n\n    dotfiles:\n      f_xinitrc:\n        dst: ~/.xinitrc\n        src: xinitrc\n      f_vimrc:\n        dst: ~/.vimrc\n        src: vimrc\n    profiles:\n      host1:\n        dotfiles:\n        - ALL\n      host2:\n        dotfiles:\n        - f_vimrc\n\nInclude dotfiles from another profile\n-------------------------------------\n\nIf one profile is using the entire set of another profile, one can use\nthe ``include`` entry to avoid redundancy.\n\nFor example:\n\n.. code:: yaml\n\n    profiles:\n      host1:\n          dotfiles:\n            - f_xinitrc\n          include:\n            - host2\n      host2:\n          dotfiles:\n            - f_vimrc\n\nHere profile *host1* contains all the dotfiles defined for *host2* plus\n``f_xinitrc``.\n\nTemplate\n========\n\nDotdrop leverage the power of `jinja2 <http://jinja.pocoo.org/>`__ to\nhandle the templating of dotfiles. See `jinja2 template\ndoc <http://jinja.pocoo.org/docs/2.9/templates/>`__ or the `example\nsection <#example>`__ for more information on how to template your\ndotfiles.\n\nNote that dotdrop uses different delimiters than\n`jinja2 <http://jinja.pocoo.org/>`__\\ \u2019s defaults:\n\n-  block start = ``{%@@``\n-  block end = ``@@%}``\n-  variable start = ``{{@@``\n-  variable end = ``@@}}``\n-  comment start = ``{#@@``\n-  comment end = ``@@#}``\n\nAvailable variables\n-------------------\n\n-  ``{{@@ profile @@}}`` contains the profile provided to dotdrop.\n-  ``{{@@ env['MY_VAR'] @@}}`` contains environment variables (see\n   `Environment variables <#environment-variables>`__)\n\nEnvironment variables\n---------------------\n\nIt\u2019s possible to access environment variables inside the templates. This\nfeature can be used like this:\n\n::\n\n    {{@@ env['MY_VAR'] @@}}\n\nThis allows for storing host-specific properties and/or secrets in\nenvironment variables.\n\nYou can have an ``.env`` file in the directory where your\n``config.yaml`` lies:\n\n::\n\n    ## My variables for this host\n    var1=\"some value\"\n    var2=\"some other value\"\n\n    ## Some secrets\n    pass=\"verysecurepassword\"\n\nOf course, this file should not be tracked by git (put it in your\n``.gitignore``).\n\nThen you can invoke dotdrop with the help of an alias like that:\n\n::\n\n    ## when using dotdrop as a submodule\n    alias dotdrop='eval $(grep -v \"^#\" ~/dotfiles/.env) ~/dotfiles/dotdrop.sh'\n\n    ## when using dotdrop from pypi\n    alias dotdrop='eval $(grep -v \"^#\" ~/dotfiles/.env) dotdrop --cfg=~/dotfiles/config.yaml'\n\nThis loads all the variables from ``.env`` (while omitting lines\nstarting with ``#``) before calling dotdrop.\n\nExample\n=======\n\nLet\u2019s consider two hosts:\n\n-  **home**: home computer with hostname *home*\n-  **office**: office computer with hostname *office*\n\nThe home computer is running `awesomeWM <https://awesomewm.org/>`__ and\nthe office computer `bspwm <https://github.com/baskerville/bspwm>`__.\nThe *.xinitrc* file will therefore be different while still sharing some\nlines. Dotdrop allows to store only one single *.xinitrc* but to deploy\ndifferent versions depending on where it is run from.\n\nThe following file is the dotfile stored in dotdrop containing jinja2\ndirectives for the deployment based on the profile used.\n\nDotfile ``<dotpath>/xinitrc``:\n\n.. code:: bash\n\n    #!/bin/bash\n\n    # load Xresources\n    userresources=$HOME/.Xresources\n    if [ -f \"$userresources\" ]; then\n          xrdb -merge \"$userresources\" &\n    fi\n\n    # launch the wm\n    {%@@ if profile == \"home\" @@%}\n    exec awesome\n    {%@@ elif profile == \"office\" @@%}\n    exec bspwm\n    {%@@ endif @@%}\n\nThe *if branch* will define which part is deployed based on the hostname\nof the host on which dotdrop is run from.\n\nAnd here\u2019s how the config file looks like with this setup. Of course any\ncombination of the dotfiles (different sets) can be done if more\ndotfiles have to be deployed.\n\n``config.yaml`` file:\n\n.. code:: yaml\n\n    config:\n      backup: true\n      create: true\n      dotpath: dotfiles\n    dotfiles:\n      f_xinitrc:\n        dst: ~/.xinitrc\n        src: xinitrc\n    profiles:\n      home:\n        dotfiles:\n        - f_xinitrc\n      office:\n        dotfiles:\n        - f_xinitrc\n\nInstalling the dotfiles (the ``--profile`` switch is not needed if the\nhostname matches the entry in the config file):\n\n.. code:: bash\n\n    # on home computer\n    $ dotdrop.sh install --profile=home\n\n    # on office computer\n    $ dotdrop.sh install --profile=office\n\nComparing the dotfiles:\n\n.. code:: bash\n\n    # on home computer\n    $ dotdrop.sh compare\n\n    # on office computer\n    $ dotdrop.sh compare\n\nPeople using dotdrop\n====================\n\nFor more examples, see how people are using dotdrop:\n\n-  https://github.com/open-dynaMIX/dotfiles\n-  https://github.com/moyiz/dotfiles\n-  https://github.com/japorized/dotfiles\n\nRelated projects\n================\n\nThese are some dotfiles related projects that have inspired me for\ndotdrop:\n\n-  https://github.com/EvanPurkhiser/dots\n-  https://github.com/jaagr/dots\n-  https://github.com/anishathalye/dotbot\n-  https://github.com/tomjnixon/Dotfiles\n\nSee also `github does dotfiles <https://dotfiles.github.io/>`__\n\nMigrate from submodule\n======================\n\nInitially dotdrop was used as a submodule directly in the dotfiles git\ntree. That solution allows your dotfiles to be shipped along with the\ntool able to handle them. Dotdrop is however also directly available on\npypi.\n\nIf you want to keep it as a submodule (recommended), simply do the\nfollowing\n\n.. code:: bash\n\n    $ cd <dotfiles-directory>\n\n    ## get latest version of the submodule\n    $ git submodule foreach git pull origin master\n\n    ## and stage the changes\n    $ git add dotdrop\n    $ git commit -m 'update dotdrop'\n\n    ## update the bash script wrapper\n    $ ./dotdrop/bootstrap.sh\n\n    ## and stage the change to the dotdrop.sh script\n    $ git add dotdrop.sh\n    $ git commit -m 'update dotdrop.sh'\n\n    ## and finally push the changes upstream\n    $ git push\n\nOtherwise, simply install it from pypi as explained\n`above <#with-pypi>`__ and get rid of the submodule as shown below:\n\n-  move to the dotfiles directory where dotdrop is used as a submodule\n\n.. code:: bash\n\n    $ cd <dotfiles-repository>\n\n-  remove the entire ``submodule \"dotdrop\"`` section in ``.gitmodules``\n-  stage the changes\n\n.. code:: bash\n\n    $ git add .gitmodules\n\n-  remove the entire ``submodule \"dotdrop\"`` section in ``.git/config``\n-  remove the submodule\n\n.. code:: bash\n\n    $ git rm --cached dotdrop\n\n-  remove the submodule from .git\n\n.. code:: bash\n\n    $ rm -rf .git/modules/dotdrop\n\n-  commit the changes\n\n.. code:: bash\n\n    $ git commit -m 'removing dotdrop submodule'\n\n-  remove any remaining files from the dotdrop submodule\n\n.. code:: bash\n\n    $ rm -rf dotdrop\n\n-  remove ``dotdrop.sh``\n\n.. code:: bash\n\n    $ git rm dotdrop.sh\n    $ git commit -m 'remove dotdrop.sh script'\n\n-  push upstream\n\n.. code:: bash\n\n    $ git push\n\nContribution\n============\n\nIf you are having trouble installing or using dotdrop, open an issue.\n\nIf you want to contribute, feel free to do a PR (please follow PEP8).\n\nLicense\n=======\n\nThis project is licensed under the terms of the GPLv3 license.\n\n.. |Build Status| image:: https://travis-ci.org/deadc0de6/dotdrop.svg?branch=master\n   :target: https://travis-ci.org/deadc0de6/dotdrop\n.. |License: GPL v3| image:: https://img.shields.io/badge/License-GPL%20v3-blue.svg\n   :target: http://www.gnu.org/licenses/gpl-3.0\n.. |Coverage Status| image:: https://coveralls.io/repos/github/deadc0de6/dotdrop/badge.svg?branch=master\n   :target: https://coveralls.io/github/deadc0de6/dotdrop?branch=master\n.. |PyPI version| image:: https://badge.fury.io/py/dotdrop.svg\n   :target: https://badge.fury.io/py/dotdrop\n.. |Python| image:: https://img.shields.io/pypi/pyversions/dotdrop.svg\n   :target: https://pypi.python.org/pypi/dotdrop\n\n\n",
    "docs_url": null,
    "download_url": "https://github.com/deadc0de6/dotdrop/archive/v0.10.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/deadc0de6/dotdrop",
    "keywords": "dotfiles jinja2",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dotdrop",
    "platform": "",
    "project_url": "https://pypi.org/project/dotdrop/",
    "release_url": "https://pypi.org/project/dotdrop/0.10/",
    "requires_dist": [
      "pytest-cov; extra == 'test'",
      "pytest; extra == 'test'",
      "coverage; extra == 'test'",
      "check-manifest; extra == 'dev'",
      "PyYAML",
      "Jinja2",
      "docopt"
    ],
    "requires_python": "",
    "summary": "Save your dotfiles once, deploy them everywhere",
    "version": "0.10"
  },
  "releases": {
    "0.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9d76213760edf8a559fe7ab75b0a5c31",
          "sha256": "02e7ccef4ac4f971ad3c9edbd0e7949860fe8edf119a73b9f0a4b77cdc3e13a5"
        },
        "downloads": -1,
        "filename": "dotdrop-0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d76213760edf8a559fe7ab75b0a5c31",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 40189,
        "upload_time": "2018-02-07T16:22:55",
        "url": "https://files.pythonhosted.org/packages/57/05/5ecdc09f440b1deddd58d305813545edc30838456c38b3b08ef79dd3dcc7/dotdrop-0.10-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2f2213a781b80145197038140bed06be",
          "sha256": "24c336615683d024575fffe6cbd100c89ee019f29c9f2f04b06504ff6aa8bad8"
        },
        "downloads": -1,
        "filename": "dotdrop-0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "2f2213a781b80145197038140bed06be",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32707,
        "upload_time": "2018-02-07T16:23:10",
        "url": "https://files.pythonhosted.org/packages/f0/22/abf139c7aae11388ae49b612bc864f0670fe16f8534852a24eca6594ea8d/dotdrop-0.10.tar.gz"
      }
    ],
    "0.7.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2741f2cd1da4a53b4c8b521165de8f11",
          "sha256": "9c0f4c2bb875b45ed5357e3febd205ebf1d251d0111aa773fa838a62002bdaa5"
        },
        "downloads": -1,
        "filename": "dotdrop-0.7.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2741f2cd1da4a53b4c8b521165de8f11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 37432,
        "upload_time": "2017-12-23T21:22:39",
        "url": "https://files.pythonhosted.org/packages/9b/8e/e68387684aa366f4bbdecaed53a07565dda6e21bc5e76ecd23dba654ae11/dotdrop-0.7.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "852870df6ea6ea6d469a71cb66d91551",
          "sha256": "54b80ef11fc1dd7a3db6bbea8b7c4186f5a5d2677ee715ef9fadd2a5c7d38270"
        },
        "downloads": -1,
        "filename": "dotdrop-0.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "852870df6ea6ea6d469a71cb66d91551",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 35601,
        "upload_time": "2017-12-23T21:22:41",
        "url": "https://files.pythonhosted.org/packages/d6/1e/ef6d53c960e1f852b2ca5097bc201752e9b7ec0aaf9c2d83e862310ae399/dotdrop-0.7.2.tar.gz"
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "59003caa7fa132fb4e1055f3554d148f",
          "sha256": "a70c4b080d5f86db85b5b52f4c8ad4c0b7a7b336b9844285273b24f0469c65d1"
        },
        "downloads": -1,
        "filename": "dotdrop-0.8.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "59003caa7fa132fb4e1055f3554d148f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 37623,
        "upload_time": "2017-12-29T10:12:09",
        "url": "https://files.pythonhosted.org/packages/ff/ee/e4d37c0f56ed0be563144356f1588105f36f9d3c79dc238899f8bf26515c/dotdrop-0.8.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "cb8e18064d6c5c150cc1f38d3db59181",
          "sha256": "419b792883b9ba423878bf0bcbc543a4089adffc56a69af0297a1bad7662be76"
        },
        "downloads": -1,
        "filename": "dotdrop-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cb8e18064d6c5c150cc1f38d3db59181",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 36532,
        "upload_time": "2017-12-29T10:12:11",
        "url": "https://files.pythonhosted.org/packages/2c/70/40c13ac6b12cf40c29491fcc19267cf569ce4f072a3688ea3b045800e174/dotdrop-0.8.1.tar.gz"
      }
    ],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d3f44a9125b3d6178ed2cd2e1cd999fe",
          "sha256": "3788ee73d8159e97340caec9a9cf4c27d2b0d3fa7a3103f635b7e4852e9f8d52"
        },
        "downloads": -1,
        "filename": "dotdrop-0.8.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3f44a9125b3d6178ed2cd2e1cd999fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 37639,
        "upload_time": "2018-01-05T08:00:53",
        "url": "https://files.pythonhosted.org/packages/89/8b/361fecc3f3104c2f6a79c444c67ccd7990f02024b1a05e7034eb8e31f438/dotdrop-0.8.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "fb2884437c22ce396507dd54a395ae1b",
          "sha256": "e8cf4a9222bb156815d18022b8dba6013c0ab79af01f48616388524d74ed1ec7"
        },
        "downloads": -1,
        "filename": "dotdrop-0.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fb2884437c22ce396507dd54a395ae1b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 33570,
        "upload_time": "2018-01-05T08:00:55",
        "url": "https://files.pythonhosted.org/packages/a6/36/0137075ed548571a2cea26f85af4d98f34243669a4a026926cf54f12469a/dotdrop-0.8.2.tar.gz"
      }
    ],
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6c55072fa8644a4c8364ffc22ec298a8",
          "sha256": "c374aa9f3de0b1277d26ac21bda8a1ac9e752b1007624853002d1e4801cd5883"
        },
        "downloads": -1,
        "filename": "dotdrop-0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c55072fa8644a4c8364ffc22ec298a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 38379,
        "upload_time": "2018-01-16T07:22:04",
        "url": "https://files.pythonhosted.org/packages/38/3f/6ceb3a4a5c8df388779f8c9e4522438e980a09a59a3b8a59b638d0ab1208/dotdrop-0.9-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0f4adccf69da47d3486a7e52c86b63e1",
          "sha256": "c7654cb01f2d3a602560c9307c72f65887645abdfc891a46bd25720808c77a07"
        },
        "downloads": -1,
        "filename": "dotdrop-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "0f4adccf69da47d3486a7e52c86b63e1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 34295,
        "upload_time": "2018-01-16T07:22:05",
        "url": "https://files.pythonhosted.org/packages/d6/ae/923a366b9c37a106f1948c65d7cea471d209ed506b1a92848e5e3c9f6a3e/dotdrop-0.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9d76213760edf8a559fe7ab75b0a5c31",
        "sha256": "02e7ccef4ac4f971ad3c9edbd0e7949860fe8edf119a73b9f0a4b77cdc3e13a5"
      },
      "downloads": -1,
      "filename": "dotdrop-0.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9d76213760edf8a559fe7ab75b0a5c31",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 40189,
      "upload_time": "2018-02-07T16:22:55",
      "url": "https://files.pythonhosted.org/packages/57/05/5ecdc09f440b1deddd58d305813545edc30838456c38b3b08ef79dd3dcc7/dotdrop-0.10-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "2f2213a781b80145197038140bed06be",
        "sha256": "24c336615683d024575fffe6cbd100c89ee019f29c9f2f04b06504ff6aa8bad8"
      },
      "downloads": -1,
      "filename": "dotdrop-0.10.tar.gz",
      "has_sig": false,
      "md5_digest": "2f2213a781b80145197038140bed06be",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 32707,
      "upload_time": "2018-02-07T16:23:10",
      "url": "https://files.pythonhosted.org/packages/f0/22/abf139c7aae11388ae49b612bc864f0670fe16f8534852a24eca6594ea8d/dotdrop-0.10.tar.gz"
    }
  ]
}