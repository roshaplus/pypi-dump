{
  "info": {
    "author": "Rudolf Cardinal",
    "author_email": "rudolf@pobox.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: System :: Hardware",
      "Topic :: System :: Networking"
    ],
    "description": ".. For RST help, see http://www.sphinx-doc.org/en/stable/rest.html\n\n.. include:: doc/symbols/isonum.txt\n\n=======\nwhisker\n=======\n\nPython package for Whisker clients.\n\n- Whisker is a TCP/IP-based research control software suite.\n  See http://www.whiskercontrol.com/\n\nTL;DR\n=====\n\n-   :code:`pip install whisker`\n-   Fire up your Whisker server.\n-   Test with :code:`whisker_test_twisted --server localhost`\n    and :code:`whisker_test_rawsockets --server localhost`\n-   Copy/paste the demo config file and demo task under \"A complete simple\n    task\" at the end.\n\nAuthor/licensing\n================\n\nBy Rudolf Cardinal (rudolf@pobox.com).\nCopyright |copy| Rudolf Cardinal.\nLicensed under a permissive open-source license; see LICENSE.\n\nUsage\n=====\n\nThere are three styles of Whisker client available. Full worked exampes are\nshown below, along with a rationale for their use. The outlines, however,\nlook like these:\n\nTwisted client (preferred for simple interfaces)\n------------------------------------------------\n\n.. code:: python\n\n    from twisted.internet import reactor\n    from whisker.twistedclient import WhiskerTask\n\n    class MyWhiskerTask(WhiskerTask):\n        # ...\n\n    w = MyWhiskerTask()\n    w.connect(...)\n    reactor.run()\n\nQt client (preferred for GUI use)\n---------------------------------\n\nMore complex; see the Starfeeder project example.\n\nRaw socket client (deprecated)\n------------------------------\n\n.. code:: python\n\n    from whisker.rawsocketclient import Whisker\n\n    w = Whisker()\n    w.connect_both_ports(...)\n    # ...\n    for line in w.getlines_mainsocket():\n        # ...\n\n\nRationale\n=========\n\nApproaches to sockets and message passing\n-----------------------------------------\n\nWhisker allows a multitude of clients in a great many languages -- anything\nthat can \"speak\" down a TCP/IP port, such as C++, Visual Basic, Perl, and\nPython.\n\nWhisker uses two sockets, a \"main\" socket, through which the Whisker server\ncan send events unprompted, and an \"immediate\" socket, used for sending\ncommands/queries and receiving immediate replies with a one-to-one\nrelationship between commands (client |rarr| server) and responses (server |rarr|\nclient). Consequently, the client must deal with unpredictable events\ncoming from the server. It might also have to deal with some sort of user\ninterface (UI) code (and other faster things, like data storage).\n\nC++\n~~~\n\nIn C++/MFC, sockets get their own thread anyway, and the framework tries to\nhide this from you. So the GUI and sockets coexists fairly happily. Many\nWhisker tasks use C++, but it's not the easiest thing in the world.\n\nPerl\n~~~~\n\nIn Perl, I've used only a very basic approach with a manual message loop,\nlike this:\n\n.. include:: doc/whisker_client_snippet.pl\n    :code: perl\n\nPython\n~~~~~~\n\nIn Python, I've used the following approaches:\n\nManual event loop\n:::::::::::::::::\nYou can use base socket code, and poll the main\nsocket for input regularly. Simple. But you can forget about\nsimultaneous UI. Like this:\n\n.. include:: whisker/test_rawsockets.py\n    :code: python\n\nNon-threaded, event-driven\n::::::::::::::::::::::::::\n\nThe Twisted library is great for this (https://twistedmatrix.com/). However:\n\n-   Bits of it, like Tkinter integration, still don't support Python 3 fully\n    (as of 2015-12-23), though this is not a major problem (it's easy to\n    hack in relevant bits of Python 3 support).\n\n-   Though it will integrate its event loop (reactor) with several GUI\n    toolkits, e.g.\n    http://twistedmatrix.com/documents/current/core/howto/choosing-reactor.html\n    this can still fail; e.g. with Tkinter, if you open a system dialogue\n    (such as the standard \"Open File...\" or \"Save As...\" dialogues), the\n    Twisted reactor will stop and wait, which is no good.\n    This is a much bigger problem.\n    (More detail on this problem in my dev_notes.txt for the starfeeder\n    project.)\n\n-   So one could use Twisted with no user interaction during the task.\n\nIt looks, from the task writer's perspective, like this:\n\n.. include:: whisker/test_twisted.py\n    :code: python\n\nMultithreading\n::::::::::::::\n\nFor multithreading we can use Qt (with the PySide bindings). In this approach,\nthe Whisker task runs in separate threads from the UI. This works well,\nthough is not without some complexity. The Qt interface is nice, and\ncan be fairly fancy. You have to be careful with database access if\nusing SQLite (which is not always happy in a multithreaded context).\n\nVerdict for simple uses\n:::::::::::::::::::::::\n\nUse Twisted and avoid any UI code while the task is running.\n\n\nDatabase access\n---------------\n\nDatabase backend\n~~~~~~~~~~~~~~~~\n\nThere are distinct advantages to making SQLite the default, namely:\n\n-   It comes with everything (i.e. no installation required);\n\n-   Database can be copied around as single files.\n\nOn the downside, it doesn't cope with multithreading/multiuser access quite\nas well as \"bigger\" databases like MySQL.\n\nUsers will want simple textfile storage as well.\n\nFront end\n~~~~~~~~~\n\nThe options for SQLite access include direct access:\n\n    https://docs.python.org/3.4/library/sqlite3.html\n\nand SQLAlchemy:\n\n    http://www.sqlalchemy.org/\n\nGetting fancier, it's possible to manage database structure migrations with\ntools like Alembic (for SQLAlchemy), but this may be getting too complicated\nfor the target end user.\n\nHowever, the other very pleasantly simple front-end is dataset:\n\n    https://dataset.readthedocs.org/en/latest/\n\n\nUser interface\n--------------\n\nA GUI can consume a lot of programmer effort. Let's keep this minimal or\nabsent as the general rule; for more advanced coding, the coder can do\nhis/her own thing (a suggestion: Qt).\n\n\nTask configuration\n------------------\n\nMuch of the GUI is usually about configuration. So let's get rid of all\nthat, because we're aiming at very simple programming here. Let's just\nput config in a simple structure like JSON or YAML, and have the user edit it\nseparately.\n\nJSON\n~~~~\n\nAn example program:\n\n.. include:: doc/json_config_example.py\n    :code: python\n\nThe JSON looks like:\n\n.. include:: doc/json_config_demo.json\n    :code: json\n\nYAML with attrdict\n~~~~~~~~~~~~~~~~~~\n\nThis can be a bit fancier in terms of the object structure it can represent,\na bit cleaner in terms of the simplicity of the config file, and safer in terms\nof security from dodgy config files.\n\nUsing an AttrDict allows a cleaner syntax for reading/writing the Python\nobject.\n\n.. include:: doc/yaml_config_example.py\n    :code: python\n\nThe YAML looks like this:\n\n.. include:: doc/yaml_config_demo.yaml\n    :code: yaml\n\nA quick YAML tutorial\n:::::::::::::::::::::\n\nA key:value pair looks like:\n\n.. code:: yaml\n\n    key: value\n\nA list looks like:\n\n.. code:: yaml\n\n    list:\n        - value1\n        - value2\n        # ...\n\nA dictionary looks like:\n\n.. code:: yaml\n\n    dict:\n        key1: value1\n        key2: value2\n        # ...\n\n\nVerdict for simple uses\n~~~~~~~~~~~~~~~~~~~~~~~\n\nUse YAML with AttrDict.\n\nPackage distribution\n--------------------\n\nThis should be via PyPI, so users can just do:\n\n.. code:: python\n\n    pip3 install whisker\n\n    # ...\n\n    from whisker import ...\n\nA complete simple task\n======================\n\nHaving done :code:`pip install whisker`, you should be able to do this:\n\n.. include:: doc/demo_config.yaml\n    :code: yaml\n\n.. include:: doc/demo_simple_whisker_client.py\n    :code: python\n\nVersion history\n===============================================================================\n\n* 10 Feb 2016: moved to package format.\n* 25 Feb 2016: v0.2.0; \"colourlog\" renamed \"logsupport\".\n* 25 Nov 2016: v0.3.5\n    - Python type hints.\n    - Write \"exit_on_exception\" exceptions to log, not via print().\n    - WhiskerOwner offers new pingack_received signal.\n* 1 Dec 2016: v0.3.6\n    - Changed from PySide to PyQt5 (fewer bugs).\n* 23 Mar 2017: v0.3.6\n    - Removed annotations from alembic.py; alembic uses inspect.getargspec(),\n      which chokes with \"ValueError: Function has keyword-only arguments or\n      annotations...\".\n    - Support PyQt 5.8, including removing calls to QHeaderView.setClickable,\n      which has gone: https://doc.qt.io/qt-5/qheaderview.html\n\n\nKnown problems\n===============================================================================\n\n* 2016-11-25: Syntax check fails because PyCharm 2016.3 type hints go wrong for\n  generators:\n  https://youtrack.jetbrains.com/issue/PY-20657#tab=Linked%20Issues\n  https://youtrack.jetbrains.com/issue/PY-20709",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://www.whiskercontrol.com/",
    "keywords": "whisker research control",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "whisker",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/whisker/",
    "release_url": "https://pypi.org/project/whisker/0.3.10/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Whisker Python client library",
    "version": "0.3.10"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "487e82df334d7e15f97e5ab57b7023ec",
          "sha256": "adbcdbbfc720afac0a68d47c5dbbc15b54ca1e1169135db71575ae3aed0ae1d9"
        },
        "downloads": 185,
        "filename": "whisker-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "487e82df334d7e15f97e5ab57b7023ec",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26093,
        "upload_time": "2016-02-10T06:32:45",
        "url": "https://files.pythonhosted.org/packages/b2/cf/997f70a31dbd0ecf3436b64e0b915730f5c22e91fb6a1ec1bc40f220affe/whisker-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1d5f845bc415ec8e5ad89f2aec112b72",
          "sha256": "4e0f1be9b3b8b8f8d3dc4891099227f12f14a12aaaff4b5e22aca817bb2c7f9c"
        },
        "downloads": 187,
        "filename": "whisker-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1d5f845bc415ec8e5ad89f2aec112b72",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26240,
        "upload_time": "2016-02-10T06:38:49",
        "url": "https://files.pythonhosted.org/packages/6b/c2/4cc311b168181014410771525543dd901c84311c1c353a27ddb81d15308a/whisker-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ec47be2b94116c91aa3551b5de0ee7ce",
          "sha256": "ce46a97f264ddd5850c8d26ae3114b41daae740414735012769834cdffbd0f40"
        },
        "downloads": 184,
        "filename": "whisker-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ec47be2b94116c91aa3551b5de0ee7ce",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26240,
        "upload_time": "2016-02-10T06:41:18",
        "url": "https://files.pythonhosted.org/packages/95/a8/289461276f660996a2a91723d14af5003ee10defb290cf0f4e56955021ec/whisker-0.1.2.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5df565ac08ae40998fe6ddc8be11d5f2",
          "sha256": "7c167adb9b9e088893db2f56e3617b19d8198204f57a3ae39c26e0d9c1215352"
        },
        "downloads": 202,
        "filename": "whisker-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5df565ac08ae40998fe6ddc8be11d5f2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 44222,
        "upload_time": "2016-03-21T01:02:06",
        "url": "https://files.pythonhosted.org/packages/3d/69/6f6491197d6fdfd09002868735d46fb879a8b78badc404eaa4d7727193ed/whisker-0.2.0.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7d1d7d59d1396e7b44dff9e1637f4f3a",
          "sha256": "b13525414ea57b7616c82f4ab86661dea1f6544ba347e3f8b5434aacc875221e"
        },
        "downloads": 186,
        "filename": "whisker-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7d1d7d59d1396e7b44dff9e1637f4f3a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 45174,
        "upload_time": "2016-03-26T22:49:22",
        "url": "https://files.pythonhosted.org/packages/06/4e/a79dcceac3f909cc1ed60e57e7b181c912143aedc1e86bcf46245eba5e28/whisker-0.3.0.tar.gz"
      }
    ],
    "0.3.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4605cf5c874c9db0d4f018b48c879894",
          "sha256": "c8fe38ab38007c021163ad83112fb2c0496cf7d309fd979b366076c76b8ec301"
        },
        "downloads": 0,
        "filename": "whisker-0.3.10.tar.gz",
        "has_sig": false,
        "md5_digest": "4605cf5c874c9db0d4f018b48c879894",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 63479,
        "upload_time": "2017-06-24T14:10:18",
        "url": "https://files.pythonhosted.org/packages/2a/6c/787a89da2fe5e97b1c7b22e85723649a585a97c122cec895974bccddb5e7/whisker-0.3.10.tar.gz"
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7ce63a85e39641691cf046272d42b2c2",
          "sha256": "af453a491fe3baf42f837f77ad02330f8f8507ba212f7e7ba3b3d8a5188a0dac"
        },
        "downloads": 511,
        "filename": "whisker-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7ce63a85e39641691cf046272d42b2c2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 56068,
        "upload_time": "2016-04-08T18:51:41",
        "url": "https://files.pythonhosted.org/packages/91/74/5f77a9700c9a1261cff1417ba876bbe28a33a6394a1facc4a2189372457d/whisker-0.3.2.tar.gz"
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8acb9cdb761e9aa807cd239b1025b4d6",
          "sha256": "657841a8ba46ea54000e8a7b70bf981bd9a597a83c9c256ea4f34045a1868024"
        },
        "downloads": 203,
        "filename": "whisker-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8acb9cdb761e9aa807cd239b1025b4d6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 58029,
        "upload_time": "2016-04-12T16:12:18",
        "url": "https://files.pythonhosted.org/packages/4d/fb/22ba687cff63c9b9e6e158369970b252df00f6f8c900c134c04f531599b4/whisker-0.3.3.tar.gz"
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "893da9d1ca9a8b59db91577884ef7da7",
          "sha256": "64ed128f10e19329f602eb5034cb3597da6a021d38236becd1f7d1af019c6d25"
        },
        "downloads": 305,
        "filename": "whisker-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "893da9d1ca9a8b59db91577884ef7da7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 58479,
        "upload_time": "2016-11-23T23:45:02",
        "url": "https://files.pythonhosted.org/packages/3d/f0/f8b87eac42163635497f851af8d7822788952b3adf8ef946af89226fc4eb/whisker-0.3.4.tar.gz"
      }
    ],
    "0.3.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d46341716321af2a69d71aa7118b0d47",
          "sha256": "d866a60483e7e8005854308a6753b06879dc07ceaad7079aecd4327b4067973d"
        },
        "downloads": 33,
        "filename": "whisker-0.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d46341716321af2a69d71aa7118b0d47",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 62277,
        "upload_time": "2016-11-29T15:56:37",
        "url": "https://files.pythonhosted.org/packages/27/6b/0ff64f9483604343294f9b6f9c7d1516da313d2bf4ea8bc9775c82a6a223/whisker-0.3.5.tar.gz"
      }
    ],
    "0.3.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c424c7a2cf650c1eb6850c42d0e303e9",
          "sha256": "b7a0d0109682a1ab6266174acb553117eb766a5697220a46f37e1aa64c2d08a1"
        },
        "downloads": 40,
        "filename": "whisker-0.3.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c424c7a2cf650c1eb6850c42d0e303e9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 62713,
        "upload_time": "2016-12-01T10:50:07",
        "url": "https://files.pythonhosted.org/packages/ed/f9/d9fe90b51abe1c348e5e2b1aaf71e52f6285d2b5e7ab291eaddf93a86e76/whisker-0.3.6.tar.gz"
      }
    ],
    "0.3.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "318d16277b21f1e9647c2835c63aa250",
          "sha256": "26498c74375f2761761c0464dd52f6272eff74c79e46a269972c8eeeeb5b3509"
        },
        "downloads": 13,
        "filename": "whisker-0.3.7.tar.gz",
        "has_sig": false,
        "md5_digest": "318d16277b21f1e9647c2835c63aa250",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 62982,
        "upload_time": "2017-03-23T21:56:57",
        "url": "https://files.pythonhosted.org/packages/45/65/2d4510c9949be1c58dc76e607cce44d9b78c3a1bc4dd32ee3cf4e151914c/whisker-0.3.7.tar.gz"
      }
    ],
    "0.3.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f9fb2a3900b75da512addc11ffc763e9",
          "sha256": "2a3777ae103128c3896c32d1afaf335a4cb92ab384e2ae372d7cc74986f3a58e"
        },
        "downloads": 0,
        "filename": "whisker-0.3.8.tar.gz",
        "has_sig": false,
        "md5_digest": "f9fb2a3900b75da512addc11ffc763e9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 62993,
        "upload_time": "2017-06-22T22:47:40",
        "url": "https://files.pythonhosted.org/packages/7a/c4/a1cc7fd801e5f0850991ab9010b46dda420f57648013418fda7e0e02563c/whisker-0.3.8.tar.gz"
      }
    ],
    "0.3.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a8084e3804b93a7e5b3e8a202a637e76",
          "sha256": "bebe1b1505d6a11ce68068927804308c1bd2e071a6ce748804ed0468125bc601"
        },
        "downloads": 0,
        "filename": "whisker-0.3.9.tar.gz",
        "has_sig": false,
        "md5_digest": "a8084e3804b93a7e5b3e8a202a637e76",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 63058,
        "upload_time": "2017-06-23T12:46:02",
        "url": "https://files.pythonhosted.org/packages/16/71/6a2f8b29e88b15f51c8b646b317ca4cae9223ccb282da6baef33015edf38/whisker-0.3.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4605cf5c874c9db0d4f018b48c879894",
        "sha256": "c8fe38ab38007c021163ad83112fb2c0496cf7d309fd979b366076c76b8ec301"
      },
      "downloads": 0,
      "filename": "whisker-0.3.10.tar.gz",
      "has_sig": false,
      "md5_digest": "4605cf5c874c9db0d4f018b48c879894",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 63479,
      "upload_time": "2017-06-24T14:10:18",
      "url": "https://files.pythonhosted.org/packages/2a/6c/787a89da2fe5e97b1c7b22e85723649a585a97c122cec895974bccddb5e7/whisker-0.3.10.tar.gz"
    }
  ]
}