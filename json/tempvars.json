{
  "info": {
    "author": "Brian Skinn",
    "author_email": "bskinn@alum.mit.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development"
    ],
    "description": "tempvars\n--------\n\n*A context manager for handling temporary variables in Jupyter Notebook,\nIPython, etc.*\n\nA frustrating aspect of working with Jupyter notebooks\nis debugging a worksheet for half an hour\nand discovering a carried-over variable name was hanging around\nin the notebook namespace and causing\nthe misbehavior, or opening a notebook that \"worked fine\" the last\ntime it was used because of random variables lingering in the\nnamespace. The ``TempVars`` context manager avoids these pitfalls by\nclearing selected identifiers from the namespace for the duration of\nthe ``with`` suite, then restoring them afterwards (or not, if desired).\nFurther, any variables created within the managed context\nthat match the criteria passed to ``TempVars`` are removed from\nthe namespace upon exiting, ensuring these values do not spuriously\ncontribute to following code. For convenience, all variables\nthat were removed from the namespace at both entry and exit\nare stored with their values for later reference (see example code below).\n\n**NOTE:** Due to the way Python handles non-global variable scopes, ``TempVars``\ncan only be used at the global scope. *Any attempt\nto use* ``TempVars`` *in non-global contexts will\nresult in a* ``RuntimeError``. Viable use-cases include Jupyter notebooks,\nthe IPython and basic Python REPLs, and the outermost scope of executed and\nimported modules. Preliminary testing indicates it also works with\n`cauldron-notebook <https://github.com/sernst/cauldron>`__, though\nit may be less helpful there due to the step-local scoping paradigm used\n(shared values must be passed around via ``cauldron.shared``).\n\n**NOTE ALSO** that ``tempvars`` is *Python 3 only*.\n\nAfter installing with ``pip install tempvars``, import as:\n\n.. code:: python\n\n    from tempvars import TempVars\n\nExample Jupyter notebook input:\n\n.. code:: python\n\n    t_var1 = 5\n    t_var2 = 7\n    x = 15\n    y = 20\n    with TempVars(names=['x']) as tv1:\n        with TempVars(starts=['t_'], restore=False) as tv2:\n            print('      x present inside:  ' + str('x' in dir()))\n            print(' t_var1 present inside:  ' + str('t_var1' in dir()))\n            print(' t_var2 present inside:  ' + str('t_var2' in dir()))\n            print('        y value inside:  ' + str(y))\n            print('     tv1.stored_nsvars:  ' + str(tv1.stored_nsvars))\n            print('     tv2.stored_nsvars:  ' + str(tv2.stored_nsvars))\n            x = -3\n            t_var3 = -7\n            print(' (x, t_var3, y) inside:  ' + str((x, t_var3, y)))\n    print('   -------------------------------')\n    print('        (x, y) outside:  ' + str((x, y)))\n    print('t_var1 present outside:  ' + str('t_var1' in dir()))\n    print('t_var2 present outside:  ' + str('t_var2' in dir()))\n    print('t_var3 present outside:  ' + str('t_var3' in dir()))\n    print(' tv1.retained_tempvars:  ' + str(tv1.retained_tempvars))\n    print(' tv2.retained_tempvars:  ' + str(tv2.retained_tempvars))\n\nOutput::\n\n          x present inside:  False\n     t_var1 present inside:  False\n     t_var2 present inside:  False\n            y value inside:  20\n         tv1.stored_nsvars:  {'x': 15}\n         tv2.stored_nsvars:  {'t_var1': 5, 't_var2': 7}\n     (x, t_var3, y) inside:  (-3, -7, 20)\n       -------------------------------\n            (x, y) outside:  (15, 20)\n    t_var1 present outside:  False\n    t_var2 present outside:  False\n    t_var3 present outside:  False\n     tv1.retained_tempvars:  {'x': -3}\n     tv2.retained_tempvars:  {'t_var3': -7}\n\n\nAdministrative\n--------------\n\nBranches named with the prefix ``v.`` are volatile. The history there\nmay be rewritten dramatically, without warning.\n\nAvailable on PyPI: ``pip install tempvars``.\n\nSource on `GitHub <https://github.com/bskinn/tempvars>`__.\n\nFull documentation (pending) at `Read the Docs <http://tempvars.readthedocs.io>`__.\n\nCopyright (c) Brian Skinn 2017\n\nLicense: The MIT License. See `LICENSE.txt <https://github.com/bskinn/tempvars/blob/master/LICENSE.txt>`__\nfor full license terms.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://www.github.com/bskinn/tempvars",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tempvars",
    "platform": "",
    "project_url": "https://pypi.org/project/tempvars/",
    "release_url": "https://pypi.org/project/tempvars/1.0b2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Context manager for handling temporary variables in Jupyter Notebook, IPython, etc.",
    "version": "1.0b2"
  },
  "releases": {
    "1.0b1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "90a1619b1ad8b01f82e3d3de4b601bd1",
          "sha256": "1b5865421061d0624cbcd97108599e4b52c1ac528556fdd7c0b851a65aa1b20d"
        },
        "downloads": 0,
        "filename": "tempvars-1.0b1-py3.5.egg",
        "has_sig": false,
        "md5_digest": "90a1619b1ad8b01f82e3d3de4b601bd1",
        "packagetype": "bdist_egg",
        "python_version": "3.5",
        "size": 7307,
        "upload_time": "2017-09-19T17:49:44",
        "url": "https://files.pythonhosted.org/packages/89/7c/da9f031d111714f5889733ab4be9437642707429c4f982350969fcd42c6f/tempvars-1.0b1-py3.5.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "32115712d278124d5ee73c97ff8fa1af",
          "sha256": "969a7202cad41b0b383ea70f71b7a5624d92f6e4efa27264a0b6a31095c6aff5"
        },
        "downloads": 0,
        "filename": "tempvars-1.0b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32115712d278124d5ee73c97ff8fa1af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 7624,
        "upload_time": "2017-09-20T19:45:06",
        "url": "https://files.pythonhosted.org/packages/ff/29/89675be8d99dde1577fac1a7aa3b8a17afc5bbaf588497de754bfe647f6e/tempvars-1.0b1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "94081c59e82bbfe7305ddcc23411678c",
          "sha256": "ed8383ae182aaebcb2dd71967f83e7bde658251957375ec62a62a89da50799eb"
        },
        "downloads": 0,
        "filename": "tempvars-1.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "94081c59e82bbfe7305ddcc23411678c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6047,
        "upload_time": "2017-09-19T17:46:31",
        "url": "https://files.pythonhosted.org/packages/d8/ef/20d37a0c7d4597e184cc029d6c4cf07465ced0ff78c78dac4768456948ce/tempvars-1.0b1.tar.gz"
      }
    ],
    "1.0b2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "371a37b622393a1498a50e5469a320e3",
          "sha256": "64b47fbc6b434105fdc33cdfbcf7865c8ff8169e352c02e48b729e126261f2de"
        },
        "downloads": 0,
        "filename": "tempvars-1.0b2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "371a37b622393a1498a50e5469a320e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 8418,
        "upload_time": "2017-10-02T02:21:35",
        "url": "https://files.pythonhosted.org/packages/d4/4f/f160cc438089844f92c30f74db8a2351c6bd7b5d20af3ddbe296e4deca15/tempvars-1.0b2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9c07516b2a3ea881bc2949da1673a6ef",
          "sha256": "4b8513a734e33ce53c06442bb4a0cdb69547db6d3001fcac02ff29f64d8fcadb"
        },
        "downloads": 0,
        "filename": "tempvars-1.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "9c07516b2a3ea881bc2949da1673a6ef",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6932,
        "upload_time": "2017-10-02T02:21:24",
        "url": "https://files.pythonhosted.org/packages/94/ae/470b3a642f6f3bf6862b97b0a6e5869545c3088e46ef53a804fc6906d821/tempvars-1.0b2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "371a37b622393a1498a50e5469a320e3",
        "sha256": "64b47fbc6b434105fdc33cdfbcf7865c8ff8169e352c02e48b729e126261f2de"
      },
      "downloads": 0,
      "filename": "tempvars-1.0b2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "371a37b622393a1498a50e5469a320e3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 8418,
      "upload_time": "2017-10-02T02:21:35",
      "url": "https://files.pythonhosted.org/packages/d4/4f/f160cc438089844f92c30f74db8a2351c6bd7b5d20af3ddbe296e4deca15/tempvars-1.0b2-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "9c07516b2a3ea881bc2949da1673a6ef",
        "sha256": "4b8513a734e33ce53c06442bb4a0cdb69547db6d3001fcac02ff29f64d8fcadb"
      },
      "downloads": 0,
      "filename": "tempvars-1.0b2.tar.gz",
      "has_sig": false,
      "md5_digest": "9c07516b2a3ea881bc2949da1673a6ef",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6932,
      "upload_time": "2017-10-02T02:21:24",
      "url": "https://files.pythonhosted.org/packages/94/ae/470b3a642f6f3bf6862b97b0a6e5869545c3088e46ef53a804fc6906d821/tempvars-1.0b2.tar.gz"
    }
  ]
}