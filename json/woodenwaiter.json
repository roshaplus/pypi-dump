{
  "info": {
    "author": "zhanghaoran",
    "author_email": "haoranzeus@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "WoodenWaiter\n============\nPython producer-customer model based on redis\n\nExample Usage\n-------------\nA simple program that showing how to use WoodenWaiter\nas a customer and producer\n\ncustomer example:\n\n.. code-block:: python\n\n    import time\n\n    from woodenwaiter.woodenwaiter import WoodenWaiter\n    from woodenwaiter.woodenwaiter import WoodenCustomer\n    from woodenwaiter.woodenwaiter import WoodenManager\n\n    if __name__ == '__main__':\n        table1 = 'cmdb'\n        table2 = 'rbac'\n        dish1 = 'custom_sync'\n        dish2 = 'some_task'\n        waiter = WoodenWaiter()\n\n        def print_foods(foods):\n            print('custom foods')\n            print('foods is: {}'.format(foods))\n\n        customer1 = WoodenCustomer(\n                table=table1, dish=dish1, waiter=waiter,\n                process=print_foods, seconds=1)\n        customer2 = WoodenCustomer(\n                table=table2, dish=dish2, waiter=waiter,\n                process=print_foods, seconds=3)\n\n        manager = WoodenManager()\n        manager.add_customer(customer1)\n        manager.add_customer(customer2)\n        manager.launch()\n\n        while True:\n            time.sleep(1)\n\nproducer example:\n\n.. code-block:: python\n\n    import time\n    import random\n\n    from woodenwaiter.woodenwaiter import WoodenMenu\n    from woodenwaiter.woodenwaiter import WoodenWaiter\n    from woodenwaiter.woodenwaiter import WoodenCooker\n\n    if __name__ == '__main__':\n        table1 = 'cmdb'\n        table2 = 'rbac'\n        dish1 = 'custom_sync'\n        dish2 = 'some_task'\n        foods1 = {\n            \"action\": \"sync_custom_data\",\n            \"paras\": \"\"\n        }\n        foods2 = {\n            \"action\": \"some_action\",\n            \"paras\": {\n                \"para1\": \"value1\",\n                \"para2\": \"value2\"\n            }\n        }\n        menu1 = WoodenMenu(table=table1, dish=dish1, foods=foods1)\n        menu2 = WoodenMenu(table=table2, dish=dish2, foods=foods2)\n        waiter = WoodenWaiter()\n        cooker1 = WoodenCooker(menu=menu1, waiter=waiter)\n        cooker2 = WoodenCooker(menu=menu2, waiter=waiter)\n\n        def cook_sometime():\n            while True:\n                seconds = random.randint(3, 10)\n                time.sleep(seconds)\n                print('cookone after {} seconds'.format(seconds))\n                cooker1.cookone()\n                cooker2.cookone()\n\n        cooker_thread = threading.Thread(target=cook_sometime)\n        cooker_thread.start()\n\n        while True:\n            time.sleep(1)\n\nclasses introduce\n-----------------\nInteroduce Classes of WoodenWaiter\n\nWoodenMenu\n~~~~~~~~~~\nEach WoodenCooker cook **ONE** kind of food according to **ONE** WoodenMenu\ninstance. We create WoodenMenu instance by offer a table(maybe your program\nmodel), a dish(maybe one kinds of your task) and foods(some informations\nthe customer need)\n\nsuggested format of parameter 'foods':\n\n.. code-block:: python\n\n    foods = {\n        \"action\": \"\u8981\u6267\u884c\u7684\u4efb\u52a1\u5b57\u7b26\u4e32\",\n        \"paras\": {\"para1\": \"value1\", \"para2\": \"value2\"}\n    }\n\nWoodenWaiter\n~~~~~~~~~~~~\nEach WoodenWater connect **ONE** redis database. We use WoodenWaiter to create\nWoodenCooker instance and WoodenCustomer instance.\n\nWoodenWater take dish from WoodenCooker(push task to redis list) and serve dish\nto WoodenCustomer(pop task from redis).\n\nWoodenCooker\n~~~~~~~~~~~~\nCreating an WoodenCooker need a WoodenMenu and a WoodenWaiter.\n\nMethods:\n\nset_menu(self, menu) - set WoodenMenu\n\nset_waiter(self, waiter) - set WoodenWaiter\n\ncookone(self, menu=None) - push a task to redis\n\nWoodenCustomer\n~~~~~~~~~~~~~~\nWoodenCustomer take four parameters:\n\n- table: maybe your program model\n- dish: maybe one kind of your task\n- waiter: a WoodenWaiter instance\n- process: a function that accept a dictionary parameter. This function will be\n  call when waiter serve a dish of food(when pop a task from redis).\n- seconds: the seconds of the cycil that waiter check the redis.\n\nWoodenCustomer is inherented from threading.Thread. But start the thread yourself\nis not suggested. Please use WoodenManager instand.\n\nMethods:\n\ncall_waiter(self) - call waiter to check if foods is OK(if there is a task in redis)\n\ncall_waiter_cyclic(self, seconds) - call waiter cyclic\n\nWoodenManager\n~~~~~~~~~~~~~\nWoodenManager is used for WoodenCustomer centralized management. We add woodenCustomer\ninstance to it, and then launch the threads\n\nMethods:\n\nadd_customer(self, customer) - add WoodenCustomer instance\n\nlaunch(self) - launch all WoodenCustomer Threads\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/haoranzeus/woodenwaiter",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "woodenwaiter",
    "platform": "",
    "project_url": "https://pypi.org/project/woodenwaiter/",
    "release_url": "https://pypi.org/project/woodenwaiter/0.0.3/",
    "requires_dist": [
      "redis"
    ],
    "requires_python": "",
    "summary": "A producer-customer model based on redis",
    "version": "0.0.3"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c6568461138a375229ac3cc565059f29",
          "sha256": "e6955a198cf51982959342dfe9bd4d0a25888383ec70930ded71cb14c81c1bb9"
        },
        "downloads": 0,
        "filename": "woodenwaiter-0.0.1-py3.5.egg",
        "has_sig": false,
        "md5_digest": "c6568461138a375229ac3cc565059f29",
        "packagetype": "bdist_egg",
        "python_version": "3.5",
        "size": 7007,
        "upload_time": "2017-07-20T09:17:26",
        "url": "https://files.pythonhosted.org/packages/6c/9f/cc1c4217464a0ad249760f947b555dc1f2e62c365cbad32e2cb044bf1247/woodenwaiter-0.0.1-py3.5.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2a2c1f4e0466d0cd55c8d4ddc9ec8627",
          "sha256": "9e09388c5ce4fbe67290166c656d1170b6343f0eb559f7723ffe27eff7000dc5"
        },
        "downloads": 0,
        "filename": "woodenwaiter-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a2c1f4e0466d0cd55c8d4ddc9ec8627",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 4108,
        "upload_time": "2017-07-20T09:17:24",
        "url": "https://files.pythonhosted.org/packages/6d/72/7d6d77bd2a7dc2d1349e8888ac9f75834dc6394b67f24147ada3e6ebe398/woodenwaiter-0.0.1-py3-none-any.whl"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d232c93b199314388e694552b1369d94",
          "sha256": "62b6450ff9369598e93de961f99244eb2f4b86b00e79924b6471812220320c6a"
        },
        "downloads": 0,
        "filename": "woodenwaiter-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d232c93b199314388e694552b1369d94",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 4159,
        "upload_time": "2017-07-20T09:30:40",
        "url": "https://files.pythonhosted.org/packages/4d/eb/49d6accd047c5d940d280ecc719abb5a64dae17a9ba6ee0d5dd58ad48486/woodenwaiter-0.0.2-py3-none-any.whl"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a3c15a6f713419c11350cf6d1844785d",
          "sha256": "950d44e1de63062b142c484f82c1de1e4028ebedf43e768104ce6df5084baa2e"
        },
        "downloads": 0,
        "filename": "woodenwaiter-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3c15a6f713419c11350cf6d1844785d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 6949,
        "upload_time": "2017-07-20T09:41:23",
        "url": "https://files.pythonhosted.org/packages/5f/f6/1f36c04773a4b19ec672b679654ef7f66ce68e63963668b2dfbb0bc429ac/woodenwaiter-0.0.3-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ddd9bab67d9f1f505ff9cb656a7587fc",
          "sha256": "f75bb606fb337b7d77302dc3420123e452e8fa46b77185a9b4f67f1ff613c0ae"
        },
        "downloads": 0,
        "filename": "woodenwaiter-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ddd9bab67d9f1f505ff9cb656a7587fc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4430,
        "upload_time": "2017-07-20T09:41:25",
        "url": "https://files.pythonhosted.org/packages/fb/8c/511f30710db38042304ff4eda428b297d5f9a56090fc560d901e784053dd/woodenwaiter-0.0.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a3c15a6f713419c11350cf6d1844785d",
        "sha256": "950d44e1de63062b142c484f82c1de1e4028ebedf43e768104ce6df5084baa2e"
      },
      "downloads": 0,
      "filename": "woodenwaiter-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a3c15a6f713419c11350cf6d1844785d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 6949,
      "upload_time": "2017-07-20T09:41:23",
      "url": "https://files.pythonhosted.org/packages/5f/f6/1f36c04773a4b19ec672b679654ef7f66ce68e63963668b2dfbb0bc429ac/woodenwaiter-0.0.3-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "ddd9bab67d9f1f505ff9cb656a7587fc",
        "sha256": "f75bb606fb337b7d77302dc3420123e452e8fa46b77185a9b4f67f1ff613c0ae"
      },
      "downloads": 0,
      "filename": "woodenwaiter-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "ddd9bab67d9f1f505ff9cb656a7587fc",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4430,
      "upload_time": "2017-07-20T09:41:25",
      "url": "https://files.pythonhosted.org/packages/fb/8c/511f30710db38042304ff4eda428b297d5f9a56090fc560d901e784053dd/woodenwaiter-0.0.3.tar.gz"
    }
  ]
}