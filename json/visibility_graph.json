{
  "info": {
    "author": "Rodrigo Garcia",
    "author_email": "rgarcia@inmegen.gob.mx",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 2.7",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Information Analysis"
    ],
    "description": "Visibility Graph Algorithm\n==========================\n\nThis python package is an implementation of the algorithm described in\nthe article: `From time series to complex networks: The visibility graph`__.\n\n.. __: http://www.pnas.org/content/105/13/4972.full\n\n\nInstallation\n------------\n\nInstall library, perhaps within a virtualenv::\n\n    $ pip install visibility_graph\n\n\n\nApplication Programming Interface\n---------------------------------\n\nPass series as a list, visibility_graph will return a `networkX`__\nundirected graph. Nodes contain the magnitudes on their timepoints.::\n\n >>> from visibility_graph import visibility_graph\n >>> series = [0.87, 0.49, 0.36, 0.83, 0.87]\n >>> g = visibility_graph( series )\n >>> \n >>> g.nodes()\n [0, 1, 2, 3, 4]\n >>> g.edges()\n [(0, 1), (0, 3), (0, 4), (1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)]\n >>> \n >>> g.node[1]\n {'mag': 0.49}\n\n.. __: http://networkx.github.io/\n\n\n\nSeries to edgelist\n------------------\n\nA command line script is provided::\n    \n $ series2edgelist.py series.csv\n\nwhere **series.csv** is a file containing one time point per line. One\ncan specify more than one series file::\n\n $ series2edgelist.py series1.csv series2.csv seriesN.csv\n\nThe script will also read a series from the standard input::\n\n $ cat series.csv | series2edgelist.py\n\nEdgelist will be printed to the standard output. So it might be wise\nto::\n  \n $ cat series.csv | series2edgelist.py > series.edgelist\n\n  \nThe gist\n--------\n\n\"In this graph, every node corresponds, in the same order, to series data, and two nodes are connected if visibility exists between the corresponding data, that is to say, if there is a straight line that connects the series data, provided that this \u201cvisibility line\u201d does not intersect any intermediate data height.\"\n\n.. image:: http://www.pnas.org/content/105/13/4972/F1.medium.gif\n\n\"More formally, we can establish the following visibility criteria: two arbitrary data values (t a, y a) and (t b, y b) will have visibility, and consequently will become two connected nodes of the associated graph, if any other data (t c, y c) placed between them fulfills:\"\n\n.. image:: http://www.pnas.org/content/105/13/4972/embed/graphic-2.gif",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/CSB-IG/visibility_graph",
    "keywords": null,
    "license": "GPLv3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "visibility_graph",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/visibility_graph/",
    "release_url": "https://pypi.org/project/visibility_graph/0.4/",
    "requires_python": null,
    "summary": "From time series to graph thru visibility algorithm.",
    "version": "0.4"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "da5a563c9647764ab5a6d8ccf1007a62",
          "sha256": "72d4134d499931d3292605636f334962f1b2475922401078a1356792e8be6f0b"
        },
        "downloads": 2015,
        "filename": "visibility_graph-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "da5a563c9647764ab5a6d8ccf1007a62",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2494,
        "upload_time": "2015-03-30T02:48:16",
        "url": "https://files.pythonhosted.org/packages/bc/cc/80494aa89c03839f59c8527f48ababf5a3251e4323ef3a0dacc2e995b85a/visibility_graph-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a727f7ee443575f963bf7bc12e7c4ffc",
          "sha256": "78d8f1d409da1af04cd49df4bfc1de4f618a711a8c241c39e4d1a276d625f657"
        },
        "downloads": 935,
        "filename": "visibility_graph-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a727f7ee443575f963bf7bc12e7c4ffc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2767,
        "upload_time": "2015-03-30T03:04:08",
        "url": "https://files.pythonhosted.org/packages/c4/54/169da0f243fa62eaf6a752e781ab9c2f7021aafa16f1c7e846db5880718d/visibility_graph-0.2.tar.gz"
      }
    ],
    "0.3": [],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "81daa441377a33bbe86be6511c12f580",
          "sha256": "32676ac2fcd4ca866052e873eea358817e9e319f2abfb220f63b9c195857eb0d"
        },
        "downloads": 1107,
        "filename": "visibility_graph-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "81daa441377a33bbe86be6511c12f580",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3082,
        "upload_time": "2015-03-30T18:07:33",
        "url": "https://files.pythonhosted.org/packages/2c/27/d4a91a8cebdd18bd0238eeffc7a4476aa4f3219e59d7b9084655ca0ccbbd/visibility_graph-0.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "81daa441377a33bbe86be6511c12f580",
        "sha256": "32676ac2fcd4ca866052e873eea358817e9e319f2abfb220f63b9c195857eb0d"
      },
      "downloads": 1107,
      "filename": "visibility_graph-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "81daa441377a33bbe86be6511c12f580",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3082,
      "upload_time": "2015-03-30T18:07:33",
      "url": "https://files.pythonhosted.org/packages/2c/27/d4a91a8cebdd18bd0238eeffc7a4476aa4f3219e59d7b9084655ca0ccbbd/visibility_graph-0.4.tar.gz"
    }
  ]
}