{
  "info": {
    "author": "laughingman7743",
    "author_email": "laughingman7743@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Java",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Database :: Front-Ends"
    ],
    "description": ".. image:: https://img.shields.io/pypi/pyversions/PyAthenaJDBC.svg\n    :target: https://pypi.python.org/pypi/PyAthenaJDBC/\n\n.. image:: https://travis-ci.org/laughingman7743/PyAthenaJDBC.svg?branch=master\n    :target: https://travis-ci.org/laughingman7743/PyAthenaJDBC\n\n.. image:: https://codecov.io/gh/laughingman7743/PyAthenaJDBC/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/laughingman7743/PyAthenaJDBC\n\n.. image:: https://img.shields.io/pypi/l/PyAthenaJDBC.svg\n    :target: https://github.com/laughingman7743/PyAthenaJDBC/blob/master/LICENSE\n\n\nPyAthenaJDBC\n============\n\nPyAthenaJDBC is a Python `DB API 2.0 (PEP 249)`_ compliant wrapper for `Amazon Athena JDBC driver`_.\n\n.. _`DB API 2.0 (PEP 249)`: https://www.python.org/dev/peps/pep-0249/\n.. _`Amazon Athena JDBC driver`: http://docs.aws.amazon.com/athena/latest/ug/connect-with-jdbc.html\n\nRequirements\n------------\n\n* Python\n\n  - CPython 2,7, 3,4, 3.5, 3.6\n\n* Java\n\n  - Java >= 8\n\nInstallation\n------------\n\n.. code:: bash\n\n    $ pip install PyAthenaJDBC\n\nExtra packages:\n\n+---------------+------------------------------------------+----------+\n| Package       | Install command                          | Version  |\n+===============+==========================================+==========+\n| Pandas        | ``pip install PyAthenaJDBC[Pandas]``     | >=0.19.0 |\n+---------------+------------------------------------------+----------+\n| SQLAlchemy    | ``pip install PyAthenaJDBC[SQLAlchemy]`` | >=1.0.0  |\n+---------------+------------------------------------------+----------+\n\nUsage\n-----\n\nBasic usage\n~~~~~~~~~~~\n\n.. code:: python\n\n    from pyathenajdbc import connect\n\n    conn = connect(s3_staging_dir='s3://YOUR_S3_BUCKET/path/to/',\n                   region_name='us-west-2')\n    try:\n        with conn.cursor() as cursor:\n            cursor.execute(\"\"\"\n            SELECT * FROM one_row\n            \"\"\")\n            print(cursor.description)\n            print(cursor.fetchall())\n    finally:\n        conn.close()\n\nCursor iteration\n~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from pyathenajdbc import connect\n\n    conn = connect(s3_staging_dir='s3://YOUR_S3_BUCKET/path/to/',\n                   region_name='us-west-2')\n    try:\n        with conn.cursor() as cursor:\n            cursor.execute(\"\"\"\n            SELECT * FROM many_rows LIMIT 10\n            \"\"\")\n            for row in cursor:\n                print(row)\n    finally:\n        conn.close()\n\nQuery with parameter\n~~~~~~~~~~~~~~~~~~~~\n\nSupported `DB API paramstyle`_ is only ``PyFormat``.\n``PyFormat`` only supports `named placeholders`_ with old ``%`` operator style and parameters specify dictionary format.\n\n.. code:: python\n\n    from pyathenajdbc import connect\n\n    conn = connect(s3_staging_dir='s3://YOUR_S3_BUCKET/path/to/',\n                   region_name='us-west-2')\n    try:\n        with conn.cursor() as cursor:\n            cursor.execute(\"\"\"\n            SELECT col_string FROM one_row_complex\n            WHERE col_string = %(param)s\n            \"\"\", {'param': 'a string'})\n            print(cursor.fetchall())\n    finally:\n        conn.close()\n\nif ``%`` character is contained in your query, it must be escaped with ``%%`` like the following:\n\n.. code:: sql\n\n    SELECT col_string FROM one_row_complex\n    WHERE col_string = %(param)s OR col_string LIKE 'a%%'\n\n.. _`DB API paramstyle`: https://www.python.org/dev/peps/pep-0249/#paramstyle\n.. _`named placeholders`: https://pyformat.info/#named_placeholders\n\nJVM Options\n~~~~~~~~~~~\n\nIn the connect method or connection object, you can specify JVM options with a string array.\n\nYou can increase the JVM heap size like the following:\n\n.. code:: python\n\n    from pyathenajdbc import connect\n\n    conn = connect(s3_staging_dir='s3://YOUR_S3_BUCKET/path/to/',\n                   region_name='us-west-2',\n                   jvm_options=['-Xms1024m', '-Xmx4096m'])\n    try:\n        with conn.cursor() as cursor:\n            cursor.execute(\"\"\"\n            SELECT * FROM many_rows\n            \"\"\")\n            print(cursor.fetchall())\n    finally:\n        conn.close()\n\nSQLAlchemy\n~~~~~~~~~~\n\nInstall SQLAlchemy with ``pip install SQLAlchemy>=1.0.0`` or ``pip install PyAthenaJDBC[SQLAlchemy]``.\nSupported SQLAlchemy is 1.0.0 or higher.\n\n.. code:: python\n\n    import contextlib\n    from urllib.parse import quote_plus  # PY2: from urllib import quote_plus\n    from sqlalchemy.engine import create_engine\n    from sqlalchemy.sql.expression import select\n    from sqlalchemy.sql.functions import func\n    from sqlalchemy.sql.schema import Table, MetaData\n\n    conn_str = 'awsathena+jdbc://{access_key}:{secret_key}@athena.{region_name}.amazonaws.com:443/'\\\n               '{schema_name}?s3_staging_dir={s3_staging_dir}'\n    engine = create_engine(conn_str.format(\n        access_key=quote_plus('YOUR_ACCESS_KEY'),\n        secret_key=quote_plus('YOUR_SECRET_ACCESS_KEY'),\n        region_name='us-west-2',\n        schema_name='default',\n        s3_staging_dir=quote_plus('s3://YOUR_S3_BUCKET/path/to/')))\n    try:\n        with contextlib.closing(engine.connect()) as conn:\n            many_rows = Table('many_rows', MetaData(bind=engine), autoload=True)\n            print(select([func.count('*')], from_obj=many_rows).scalar())\n    finally:\n        engine.dispose()\n\nThe connection string has the following format:\n\n.. code:: python\n\n    awsathena+jdbc://{access_key}:{secret_key}@athena.{region_name}.amazonaws.com:443/{schema_name}?s3_staging_dir={s3_staging_dir}&driver_path={driver_path}&...\n\nNOTE: ``s3_staging_dir`` requires quote. If ``access_key``, ``secret_key`` and other parameter contain special characters, quote is also required.\n\nPandas\n~~~~~~\n\nMinimal example for Pandas DataFrame:\n\n.. code:: python\n\n    from pyathenajdbc import connect\n    import pandas as pd\n\n    conn = connect(access_key='YOUR_ACCESS_KEY_ID',\n                   secret_key='YOUR_SECRET_ACCESS_KEY',\n                   s3_staging_dir='s3://YOUR_S3_BUCKET/path/to/',\n                   region_name='us-west-2',\n                   jvm_path='/path/to/jvm')  # optional, as used by JPype\n    df = pd.read_sql(\"SELECT * FROM many_rows LIMIT 10\", conn)\n\nAs Pandas DataFrame:\n\n.. code:: python\n\n    import contextlib\n    from pyathenajdbc import connect\n    from pyathenajdbc.util import as_pandas\n\n    with contextlib.closing(\n            connect(s3_staging_dir='s3://YOUR_S3_BUCKET/path/to/'\n                    region_name='us-west-2'))) as conn:\n        with conn.cursor() as cursor:\n            cursor.execute(\"\"\"\n            SELECT * FROM many_rows\n            \"\"\")\n            df = as_pandas(cursor)\n    print(df.describe())\n\nExamples\n--------\n\nRedash_ query runner example\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSee `examples/redash/athena.py`_\n\n.. _Redash: https://github.com/getredash/redash\n.. _`examples/redash/athena.py`: examples/redash/athena.py\n\nCredential\n----------\n\nSupport `AWS CLI credentials`_, `Properties file credentials`_ and `AWS credentials provider chain`_.\n\n.. _`AWS CLI credentials`: http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html\n.. _`Properties file credentials`: http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/auth/PropertiesFileCredentialsProvider.html\n.. _`AWS credentials provider chain`: http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/auth/DefaultAWSCredentialsProviderChain.html\n\nCredential Files\n~~~~~~~~~~~~~~~~\n\n~/.aws/credentials\n\n.. code:: cfg\n\n    [default]\n    aws_access_key_id=YOUR_ACCESS_KEY_ID\n    aws_secret_access_key=YOUR_SECRET_ACCESS_KEY\n\n~/.aws/config\n\n.. code:: cfg\n\n    [default]\n    region=us-west-2\n    output=json\n\nEnvironment variables\n~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    $ export AWS_ACCESS_KEY_ID=YOUR_ACCESS_KEY_ID\n    $ export AWS_SECRET_ACCESS_KEY=YOUR_SECRET_ACCESS_KEY\n    $ export AWS_DEFAULT_REGION=us-west-2\n\nAdditional environment variable:\n\n.. code:: bash\n\n    $ export AWS_ATHENA_S3_STAGING_DIR=s3://YOUR_S3_BUCKET/path/to/\n\nProperties file credentials\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCreate a property file of the following format.\n\n/path/to/AWSCredentials.properties\n\n.. code:: properties\n\n    accessKeyId:YOUR_ACCESS_KEY_ID\n    secretKey:YOUR_SECRET_ACCESS_KEY\n\nSpecify the property file path with ``credential_file`` of the connect method or connection object.\n\n.. code:: python\n\n    from pyathenajdbc import connect\n\n    conn = connect(credential_file='/path/to/AWSCredentials.properties',\n                   s3_staging_dir='s3://YOUR_S3_BUCKET/path/to/',\n                   region_name='us-west-2')\n\nPyAthenaJDBC uses the property file to authenticate Amazon Athena.\n\nAWS credentials provider chain\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSee `AWS credentials provider chain`_\n\n    AWS credentials provider chain that looks for credentials in this order:\n\n        * Environment Variables - AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY (RECOMMENDED since they are recognized by all the AWS SDKs and CLI except for .NET), or AWS_ACCESS_KEY and AWS_SECRET_KEY (only recognized by Java SDK)\n        * Java System Properties - aws.accessKeyId and aws.secretKey\n        * Credential profiles file at the default location (~/.aws/credentials) shared by all AWS SDKs and the AWS CLI\n        * Credentials delivered through the Amazon EC2 container service if AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\" environment variable is set and security manager has permission to access the variable,\n        * Instance profile credentials delivered through the Amazon EC2 metadata service\n\nIn the connect method or connection object, you can connect by specifying at least ``s3_staging_dir`` and ``region_name``.\nIt is not necessary to specify ``access_key`` and ``secret_key``.\n\n.. code:: python\n\n    from pyathenajdbc import connect\n\n    conn = connect(s3_staging_dir='s3://YOUR_S3_BUCKET/path/to/',\n                   region_name='us-west-2')\n\nTerraform_ Instance profile example:\n\nSee `examples/terraform/`_\n\n.. _Terraform: https://github.com/hashicorp/terraform\n.. _`examples/terraform/`: examples/terraform/\n\n\nTesting\n-------\n\nDepends on the following environment variables:\n\n.. code:: bash\n\n    $ export AWS_ACCESS_KEY_ID=YOUR_ACCESS_KEY_ID\n    $ export AWS_SECRET_ACCESS_KEY=YOUR_SECRET_ACCESS_KEY\n    $ export AWS_DEFAULT_REGION=us-west-2\n    $ export AWS_ATHENA_S3_STAGING_DIR=s3://YOUR_S3_BUCKET/path/to/\n\nRun test\n~~~~~~~~\n\n.. code:: bash\n\n    $ pip install pytest awscli\n    $ scripts/test_data/upload_test_data.sh\n    $ py.test\n    $ scripts/test_data/delete_test_data.sh\n\nRun test multiple Python versions\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    $ pip install tox awscli\n    $ scripts/test_data/upload_test_data.sh\n    $ pyenv local 2.7.13 3.4.7 3.5.4 3.6.2\n    $ tox\n    $ scripts/test_data/delete_test_data.sh",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/laughingman7743/PyAthenaJDBC/",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyAthenaJDBC",
    "platform": "",
    "project_url": "https://pypi.org/project/PyAthenaJDBC/",
    "release_url": "https://pypi.org/project/PyAthenaJDBC/1.3.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Python DB API 2.0 (PEP 249) compliant wrapper for Amazon Athena JDBC driver",
    "version": "1.3.1"
  },
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "911dc2f1b26adb862745a7eb1cf016e9",
          "sha256": "7459c4d57561502fbc1f2a4e9dc364d9f2c860d6a8276b30ac91b08af2622eec"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "911dc2f1b26adb862745a7eb1cf016e9",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 8496383,
        "upload_time": "2017-01-04T13:57:42",
        "url": "https://files.pythonhosted.org/packages/0e/d2/5cf11307d09586eb630415c67c24c90ac3e8bd3bfb77c70ce8d17120f73c/PyAthenaJDBC-1.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5535126830165bd84425a71a65fbf033",
          "sha256": "9c20a8d6dcadd64dcda6ee692c6eeff48cd5a1308ee8c39218275a3112525028"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5535126830165bd84425a71a65fbf033",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10112,
        "upload_time": "2017-01-04T13:50:04",
        "url": "https://files.pythonhosted.org/packages/a2/38/1dd0a5daa37573e166478c8e46f6642404e5323f1a7a58be244d53352530/PyAthenaJDBC-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "873e7e1c15f28715a6e9a72d3cade8ed",
          "sha256": "27474bc2cdb0948b276f6b3c2bf8aef1afbcc4ba7ce40f95a13e32e090ccc771"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "873e7e1c15f28715a6e9a72d3cade8ed",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 8496665,
        "upload_time": "2017-01-09T14:03:06",
        "url": "https://files.pythonhosted.org/packages/87/e4/d49ba6e820b07dce83744a7787f61b24f819397dffc3be53560b3691d9e5/PyAthenaJDBC-1.0.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "431df1b44058ce1385f69acd2f6b118a",
          "sha256": "fac5c3cd8d15b423adc002dba25b263ddc1887b65fcb810d157b9b90f4967f84"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "431df1b44058ce1385f69acd2f6b118a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10483,
        "upload_time": "2017-01-09T13:23:52",
        "url": "https://files.pythonhosted.org/packages/73/7f/aaf502c3b5fbcde8f58b86963d009292139541d092754075a63249bf18c6/PyAthenaJDBC-1.0.2.tar.gz"
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9adcec09c1d0d586041256b23d506b99",
          "sha256": "a955350aadeffac60bf060ed13912fcb3c3500f104a965852837a1c0668017e3"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9adcec09c1d0d586041256b23d506b99",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 8496673,
        "upload_time": "2017-01-09T16:21:43",
        "url": "https://files.pythonhosted.org/packages/cc/5e/940a5e079a592243f6509b921bc5f6a303cb27d540544e541c24af419934/PyAthenaJDBC-1.0.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "14d66a4073d86be78655b156171849aa",
          "sha256": "0de344a03e2a76bfcf81993bac8a3d9882d18f89965b33b3cd2d00ea34178a2a"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "14d66a4073d86be78655b156171849aa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10496,
        "upload_time": "2017-01-09T16:20:52",
        "url": "https://files.pythonhosted.org/packages/6e/b3/49ed87ee52d2ead7e0670a8cd51842cac2cbcefff428fbe152356dd84c78/PyAthenaJDBC-1.0.3.tar.gz"
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a8029ab98b28c391495669533cae0b9a",
          "sha256": "4d9e835fa6baf565cdb04c8723930188c4580658a328c3b6399b360b866a3188"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8029ab98b28c391495669533cae0b9a",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 8496673,
        "upload_time": "2017-01-10T12:14:25",
        "url": "https://files.pythonhosted.org/packages/5f/34/c39b8a336d5bae197b8e8c0e17baa3536944e7f029bf5d9df882cd6d0524/PyAthenaJDBC-1.0.4-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ccfb5e40b80ac1c0c731621e6c3e22db",
          "sha256": "df7b70aa2612fa694e65214555231e26bb676c8a8e1b838bbb4cb888fbbfab35"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ccfb5e40b80ac1c0c731621e6c3e22db",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10488,
        "upload_time": "2017-01-10T12:10:11",
        "url": "https://files.pythonhosted.org/packages/70/ee/48c217a75aa25a5c10b5ed20df7d913c6f3aeb8a96a21a6e2a667fcfff0d/PyAthenaJDBC-1.0.4.tar.gz"
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cedfd3c9f91fa24c586cf5c15ee52ff1",
          "sha256": "96b15fe5ae029c3e7c0be8c25a7e1f5a12040c2c975c7f40f6e9afa80c9e5cd6"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cedfd3c9f91fa24c586cf5c15ee52ff1",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 8496741,
        "upload_time": "2017-01-11T14:45:24",
        "url": "https://files.pythonhosted.org/packages/0e/2e/d9d2e088bf8d2a3061ea70524d3e30c9561a249f56ba38ff91ec24e9db72/PyAthenaJDBC-1.0.5-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c010fcc01df0a313c15687f144b8de45",
          "sha256": "56ddd83f816bf375ddd080fd974596a51968cb0d5fe53c94a66e5fe125d75583"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c010fcc01df0a313c15687f144b8de45",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10556,
        "upload_time": "2017-01-11T14:42:43",
        "url": "https://files.pythonhosted.org/packages/6c/22/f6824fcfdd7def639d205ae1486c176e7345fc3a3065285645eb783c4470/PyAthenaJDBC-1.0.5.tar.gz"
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e198e53edfc2269ce0eabbb391f134d3",
          "sha256": "978b0592120d527819e2212cdfa5ef4b5c08b7ef698f1359a4f3defdc4308eea"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e198e53edfc2269ce0eabbb391f134d3",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 8496867,
        "upload_time": "2017-01-15T06:49:14",
        "url": "https://files.pythonhosted.org/packages/ae/2d/88027338dd70de6519ba956c146bdafe831f1df6b5a3097b60a33dcf70e2/PyAthenaJDBC-1.0.6-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9fe921d2333ab815a68b958178c6f2d9",
          "sha256": "b78245e86ec337fc08f75d0db8db45377073f99ae8037642ec5fc06f8cc7288a"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9fe921d2333ab815a68b958178c6f2d9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10680,
        "upload_time": "2017-01-15T06:48:07",
        "url": "https://files.pythonhosted.org/packages/58/09/c9ce028b5f5a937ebff2dd3b55b151ff0b03da2afdd5a9eb5f4a6d8468ea/PyAthenaJDBC-1.0.6.tar.gz"
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8ebd56f4f8bfacbe71863b7a5d6a01a0",
          "sha256": "24bdbf9e35802c7a85bb349d6c4528cdc3f19720fcb29083fa7c4a1a9e6b59ad"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ebd56f4f8bfacbe71863b7a5d6a01a0",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 8497222,
        "upload_time": "2017-03-05T14:39:25",
        "url": "https://files.pythonhosted.org/packages/b7/25/c8497652f19ba4c74b75046ccdcb0f342fc318aa40b36b4bf63505debe34/PyAthenaJDBC-1.0.7-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7ca2d4a0fc51482ac9a2ed3e19c4c428",
          "sha256": "a0d3b20ffa6b6e74821014bbe3bfa6e9615355846469ae685687564265fbeda7"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "7ca2d4a0fc51482ac9a2ed3e19c4c428",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10836,
        "upload_time": "2017-03-05T14:35:30",
        "url": "https://files.pythonhosted.org/packages/2e/32/81052c05969375fda936d0fcda4d99ef5eb0d652f4105b48267d2fdb6394/PyAthenaJDBC-1.0.7.tar.gz"
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f680717c8158372c773b0ddd1c6149ba",
          "sha256": "8a051f8d533f3410bab2a5564d3f894fb92e4271e0aced123a8ad1198f583077"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f680717c8158372c773b0ddd1c6149ba",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 8497652,
        "upload_time": "2017-03-20T04:14:17",
        "url": "https://files.pythonhosted.org/packages/da/01/75fdd69eef5858e91fad07c778444d56c25fc7b89f0d76a9b4c9b0415ae7/PyAthenaJDBC-1.0.8-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b9afd2ee13d0a4231dd4843231bdb840",
          "sha256": "2f2f82942b21f716c1834f363c334b90b89bfe423dce36c991e46ad055d332d3"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "b9afd2ee13d0a4231dd4843231bdb840",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11114,
        "upload_time": "2017-03-20T04:12:46",
        "url": "https://files.pythonhosted.org/packages/6c/67/1538ae45e9d2ce99e2f8852db554a7b3e2a68a5bd4851568dac55c921a79/PyAthenaJDBC-1.0.8.tar.gz"
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2baf5aecfb9b3dbe66ca601dc69c60b6",
          "sha256": "f399b6648cb30d17b55e3921702f4e1245c302e550ccb6b7bb6fe4b467849600"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2baf5aecfb9b3dbe66ca601dc69c60b6",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 8497686,
        "upload_time": "2017-03-27T14:45:16",
        "url": "https://files.pythonhosted.org/packages/95/ea/a8a218da3cc993acdc1bdfd5018f838f500e27528bb9d016aefc67692379/PyAthenaJDBC-1.0.9-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "874eec34e11ec11883bb1022d9f027f4",
          "sha256": "96993a2fb48189eb15f201df8d599b9ce53a30c8959c620e651255e7d20d925c"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "874eec34e11ec11883bb1022d9f027f4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11173,
        "upload_time": "2017-03-27T14:43:51",
        "url": "https://files.pythonhosted.org/packages/6e/a8/35a5c2b59ec4bf703bab13202bb5073839128b984336677f5edb021a56f1/PyAthenaJDBC-1.0.9.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1c001b5623e658f2acd704e480f7bbfb",
          "sha256": "a5a2556869dbb9de99586cc69b110df55e80dc93bd79fb942fd2e0335ad5423f"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c001b5623e658f2acd704e480f7bbfb",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 8502112,
        "upload_time": "2017-04-06T13:29:21",
        "url": "https://files.pythonhosted.org/packages/0a/78/1944ba5963cc73514288f629c05767c09c6de7347a645afb3bb200b05a62/PyAthenaJDBC-1.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ecfea211ebef9d43ab3571c814c31fac",
          "sha256": "8625c11c551bada9ad97e71bc570e3158c71316ff2894a5249d303c26e3a6c8d"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ecfea211ebef9d43ab3571c814c31fac",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15357,
        "upload_time": "2017-04-06T13:27:30",
        "url": "https://files.pythonhosted.org/packages/ab/f2/907d065c3150feed41b82c7381a9d0090a5d806c19ea9821c814a879d814/PyAthenaJDBC-1.1.0.tar.gz"
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "476404a2b786ee0177ad057a700e8f09",
          "sha256": "2321ee16c17102793832f9ebc49dedbfadc81ad9c0557f7b77cdbf1bd227b0db"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "476404a2b786ee0177ad057a700e8f09",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 17856251,
        "upload_time": "2017-04-08T10:33:01",
        "url": "https://files.pythonhosted.org/packages/89/6f/ef175144550d786f667d01378f51fac51b0a5ac7855dc15e1a298f1fa36d/PyAthenaJDBC-1.1.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5d5a4701b364da24f3ade8fa437a411f",
          "sha256": "78252f6f953d62dcbcd77a1ae966823899262d2318558f6c2932624cc3be7795"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5d5a4701b364da24f3ade8fa437a411f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15643,
        "upload_time": "2017-04-08T10:31:58",
        "url": "https://files.pythonhosted.org/packages/30/18/476ec77cf3b03ed50e82506ff201752cb85dc71e3542d7d04b470aa66330/PyAthenaJDBC-1.1.1.tar.gz"
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dc62acbbb15b72b67c7a87fd32830849",
          "sha256": "22c91b64c53984534d29639aeea9bd67ac874e2e614de4c5dd1ce056c270c45b"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc62acbbb15b72b67c7a87fd32830849",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9516677,
        "upload_time": "2017-06-10T07:12:39",
        "url": "https://files.pythonhosted.org/packages/e7/bd/649f6534e3b55c1266c0110993d43dc47adc295480e9246042a15f3be698/PyAthenaJDBC-1.1.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "79890ee3fed0a0d8919adbf8696c959c",
          "sha256": "09e7a1e138d7665cfcb9eb2f731b74734b5a704106dd4e8961c18764590a9e13"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "79890ee3fed0a0d8919adbf8696c959c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15526,
        "upload_time": "2017-06-10T07:11:42",
        "url": "https://files.pythonhosted.org/packages/50/97/c2e393a4aee9179a7b18f409e0775a37dff6308274f0df8b7f4fab1ac451/PyAthenaJDBC-1.1.2.tar.gz"
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "74561a1ddf46244bcca15cd94d2ef6fe",
          "sha256": "32430162c38861d7ac298b29b7099b0396d3bf5390e3b0e412ccb5fdb354f547"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74561a1ddf46244bcca15cd94d2ef6fe",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9517450,
        "upload_time": "2017-07-30T11:18:02",
        "url": "https://files.pythonhosted.org/packages/b5/5a/000340e77ac14e2c47486b071996d483cf606d4bbd0a4e27325a1009d5bc/PyAthenaJDBC-1.2.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e15e7ac51aadf2aeb8459d41b9361eb4",
          "sha256": "e8f14086466a013db471b610dd32f0ac0659fd9c9a46e1bb1315412fcd067417"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e15e7ac51aadf2aeb8459d41b9361eb4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16207,
        "upload_time": "2017-07-30T11:17:44",
        "url": "https://files.pythonhosted.org/packages/90/01/9bd7fba3340290b3dc7447a04e2301d6a29d280f138fdb86db37dc3cd447/PyAthenaJDBC-1.2.0.tar.gz"
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "41a8538df1ac279de2a6e60c115c262e",
          "sha256": "c372efc032aeafbb9f4cf15013debd4bd77525c350c9479f1c3cfd2037b17ecc"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41a8538df1ac279de2a6e60c115c262e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9517633,
        "upload_time": "2017-09-16T04:18:30",
        "url": "https://files.pythonhosted.org/packages/0a/40/e609a22c00fb535d103cb78da881f52de2da9c6cc0bd2adbf33589a0bd68/PyAthenaJDBC-1.3.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "23618e692e8148a06f1a9847a72e7425",
          "sha256": "6bb07f722b3a8bd55d002408e90322135fa0c6be29222ccf72908e7b24d5e375"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "23618e692e8148a06f1a9847a72e7425",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16302,
        "upload_time": "2017-09-16T04:18:01",
        "url": "https://files.pythonhosted.org/packages/b8/02/27d01e92f27ad7636c6e229886aded1de61c04cf4e14f7d3088d85d8a2b4/PyAthenaJDBC-1.3.0.tar.gz"
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "41d218a80529b76a4b3f5d4ed53fcc72",
          "sha256": "fcc67174334328fc677846b244a5a24773c55f1333b4c0f0482f72e03d732601"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41d218a80529b76a4b3f5d4ed53fcc72",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9517679,
        "upload_time": "2018-02-11T02:52:05",
        "url": "https://files.pythonhosted.org/packages/69/b4/ef0f6f35ed2f7794f396717bec8a57ced6a8e9b8209dc37e7be3684d25c5/PyAthenaJDBC-1.3.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8b2fe87d0d2dbc02a679e5b27dca727f",
          "sha256": "a8da59b459a610f223fac9bbf85efc31c1f75c74ac1f27dcda5354e2907e0921"
        },
        "downloads": -1,
        "filename": "PyAthenaJDBC-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8b2fe87d0d2dbc02a679e5b27dca727f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16383,
        "upload_time": "2018-02-11T02:51:50",
        "url": "https://files.pythonhosted.org/packages/35/42/e08906e7a341782bd4ef1880773171d51a6df987ad17482fa40ccbc1af8e/PyAthenaJDBC-1.3.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "41d218a80529b76a4b3f5d4ed53fcc72",
        "sha256": "fcc67174334328fc677846b244a5a24773c55f1333b4c0f0482f72e03d732601"
      },
      "downloads": -1,
      "filename": "PyAthenaJDBC-1.3.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "41d218a80529b76a4b3f5d4ed53fcc72",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 9517679,
      "upload_time": "2018-02-11T02:52:05",
      "url": "https://files.pythonhosted.org/packages/69/b4/ef0f6f35ed2f7794f396717bec8a57ced6a8e9b8209dc37e7be3684d25c5/PyAthenaJDBC-1.3.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "8b2fe87d0d2dbc02a679e5b27dca727f",
        "sha256": "a8da59b459a610f223fac9bbf85efc31c1f75c74ac1f27dcda5354e2907e0921"
      },
      "downloads": -1,
      "filename": "PyAthenaJDBC-1.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8b2fe87d0d2dbc02a679e5b27dca727f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 16383,
      "upload_time": "2018-02-11T02:51:50",
      "url": "https://files.pythonhosted.org/packages/35/42/e08906e7a341782bd4ef1880773171d51a6df987ad17482fa40ccbc1af8e/PyAthenaJDBC-1.3.1.tar.gz"
    }
  ]
}