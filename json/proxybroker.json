{
  "info": {
    "author": "Constverum",
    "author_email": "constverum@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: Proxy Servers",
      "Topic :: Internet :: WWW/HTTP :: Indexing/Search"
    ],
    "description": "ProxyBroker\n===========\n\n.. image:: https://img.shields.io/pypi/v/proxybroker.svg\n    :target: https://pypi.python.org/pypi/proxybroker/\n.. image:: https://img.shields.io/pypi/pyversions/proxybroker.svg\n    :target: https://pypi.python.org/pypi/proxybroker/\n.. image:: https://img.shields.io/travis/constverum/ProxyBroker.svg\n    :target: https://travis-ci.org/constverum/ProxyBroker\n.. image:: https://img.shields.io/pypi/wheel/proxybroker.svg\n    :target: https://pypi.python.org/pypi/proxybroker/\n.. image:: https://img.shields.io/pypi/dm/proxybroker.svg\n    :target: https://pypi.python.org/pypi/proxybroker/\n.. image:: https://img.shields.io/pypi/l/proxybroker.svg\n    :target: https://pypi.python.org/pypi/proxybroker/\n\n\nProxyBroker is an open source tool that asynchronously finds public proxies from multiple sources and concurrently checks them (type, level of anonymity, country). Supports HTTP(S) and SOCKS.\n\n.. image:: https://raw.githubusercontent.com/constverum/ProxyBroker/master/proxybroker/data/example.gif\n\n.. contents::\n   :depth: 3\n\nFeatures\n--------\n\n* Gathers proxies from 50+ sources, finds ~7000 HTTP(S) and ~500 SOCKS working proxies\n    Sources are the websites that publish free public proxy lists daily.\n    And much more: you can add custom sources - websites or a raw data.\n    Detects and recognize proxies in the text (no matter how dirty the data).\n* All protocols support\n    Proxies can be check for work by HTTP, HTTPS (via CONNECT), SOCKS4 and SOCSK5 protocols.\n* Checks proxies on the level of anonymity\n    Supports levels: Transparent, Anonymous, High. You can add your own judges.\n* Filter proxies by country\n    Determines location (country) of the proxy and checks only the specified.\n* Is asynchronous\n    That helps increase checking speed and decrease waiting time.\n    It's really fast: just in a minute, it will give you ~250 working HTTP proxies.\n* **Automatically removes duplicate proxies.**\n\n\nRequirements\n------------\n\n* Python **3.5** or higher\n* `aiohttp <https://pypi.python.org/pypi/aiohttp>`_\n* `aiodns <https://pypi.python.org/pypi/aiodns>`_\n* `maxminddb <https://pypi.python.org/pypi/maxminddb>`_\n\n\nInstallation\n------------\n\nTo install last stable release from pypi:\n\n.. code-block:: bash\n\n    $ pip install proxybroker\n\nIf you use Mac OSX (without XCode) or Microsoft Windows (without Visual Studio or Windows SDK)\nthere may be a problem with the compiling dependencies (pycares). Use this way:\n\n.. code-block:: bash\n\n    $ git clone https://github.com/constverum/ProxyBroker.git\n    $ cd ProxyBroker\n    $ pip install -r requirements.txt proxybroker -f proxybroker/data/wheels\n\nAnd you can install development version:\n\n.. code-block:: bash\n\n    $ git clone https://github.com/constverum/ProxyBroker.git\n    $ cd ProxyBroker\n    $ python setup.py install\n\n\nExamples\n--------\n\nBasic example\n\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n.. code-block:: python\n\n    import asyncio\n    from proxybroker import Broker\n\n    loop = asyncio.get_event_loop()\n\n    proxies = asyncio.Queue(loop=loop)\n    broker = Broker(proxies, loop=loop)\n\n    loop.run_until_complete(broker.find(limit=4))\n\n    while True:\n        proxy = proxies.get_nowait()\n        if proxy is None: break\n        print('Found proxy: %s' % proxy)\n\nAs the final result, we get the ``Proxy`` objects. And we can get all the information we need through `Proxy properties`_.\n\n.. code-block:: bash\n\n    Found proxy: <Proxy AU 0.72s [HTTP: Transparent] 1.1.1.1:80>\n    Found proxy: <Proxy FR 0.33s [HTTP: High, HTTPS] 2.2.2.2:3128>\n    Found proxy: <Proxy US 1.11s [HTTP: Anonymous, HTTPS] 3.3.3.3:8000>\n    Found proxy: <Proxy DE 0.45s [SOCKS4, SOCKS5] 4.4.4.4:1080>\n\nAdvanced example\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n.. code-block:: python\n\n    import asyncio\n    from proxybroker import Broker\n\n    async def use(proxies):\n        while True:\n            proxy = await proxies.get()\n            if proxy is None:\n                break\n            elif 'SOCKS5' in proxy.types:  # filter by type\n                print('Found SOCKS5 proxy: %s' % proxy)\n            else:\n                print('Found proxy: %s' % proxy)\n\n    async def find(proxies, loop):\n        broker = Broker(queue=proxies,\n                        timeout=8,\n                        attempts_conn=3,\n                        max_concurrent_conn=200,\n                        judges=['https://httpheader.net/', 'http://httpheader.net/'],\n                        providers=['http://www.proxylists.net/', 'http://fineproxy.org/eng/'],\n                        verify_ssl=False,\n                        loop=loop)\n\n        # only anonymous & high levels of anonymity for http protocol and high for others:\n        types = [('HTTP', ('Anonymous', 'High')), 'HTTPS', 'SOCKS4', 'SOCKS5']\n        countries = ['US', 'GB', 'DE']\n        limit = 10\n\n        await broker.find(types=types, countries=countries, limit=limit)\n\n    if __name__ == '__main__':\n        loop = asyncio.get_event_loop()\n        proxies = asyncio.Queue(loop=loop)\n        tasks = asyncio.gather(find(proxies, loop), use(proxies))\n        loop.run_until_complete(tasks)\n\nIn this example, we explicitly specify the parameters that directly affect on the speed of gathering and checking proxies (see `Broker parameters`_). In most cases it's redundant.\n\nUsually, we want to find:\n\n* a certain number of specific type of proxies\n* with a high level of anonymity\n* and from specific countries\n\nTo do this, we pass the parameters ``types``, ``countries``, and ``limit`` to the ``find`` method (see `Broker methods`_).\n\nWe use two asynchronous functions that execute in parallel:\n\n* ``find()`` - gather proxies from the providers, check and pass them to the async queue ``proxies``\n* ``use()`` - use the checked proxies from ``proxies`` without having to wait for the end of the gather\n\nNote: You can start to use the checked proxies for a couple of seconds after the start of the gather. Gather and check of new proxies will continue until the `limit` is reached or until we not visit all the providers and check all the proxies received from them.\n\n\nExample #3: find and check proxies from raw data\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n.. code-block::\n\n    # raw_data.txt\n    10.0.0.1:80\n    OK 10.0.0.2:   80 HTTP 200 OK 1.214\n    10.0.0.3;80;SOCKS5 check date 21-01-02\n    >>>10.0.0.4@80 HTTP HTTPS status OK\n\n.. code-block:: python\n\n    # example.py\n    # ...\n    broker = Broker(proxies, loop=loop)\n\n    with open('raw_data.txt', 'r') as f:\n        data = f.read()\n\n    await broker.find(data=data)\n    # ...\n\nAs a source of proxies, instead of the providers, you can use your own source data (it's usual local .txt file). Simply pass your data to the ``data`` parameter.\nNote: At the moment, information about the type of proxy in the raw data is ignored.\n\n\nExample #4: only gather proxies (without a check)\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n.. code-block:: python\n\n    # ...\n    await broker.grab(countries=['US'], limit=100)\n    # ...\n\nUse the ``grab`` method if you want only to gather proxies without a check.\nNote: The number of found proxies can reach over 40k.\n\n\nAPI\n---\n\n\nProxy properties\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n.. table::\n\n    +-------------+------+-----------------------------------------+----------------------------------------------------------+\n    | Property    | Type | Example                                 | Description                                              |\n    +=============+======+=========================================+==========================================================+\n    | host        | str  | '8.8.8.8'                               | IP address of the proxy                                  |\n    +-------------+------+-----------------------------------------+----------------------------------------------------------+\n    | port        | int  | 80                                      | Port of the proxy                                        |\n    +-------------+------+-----------------------------------------+----------------------------------------------------------+\n    | types       | dict | {'HTTP': 'Anonymous', 'HTTPS': None}    | Supported protocols and their levels of anonymity        |\n    +-------------+------+-----------------------------------------+----------------------------------------------------------+\n    | geo         | dict | {'code': 'US', 'name': 'United States'} | ISO code and the full name of the country proxy location |\n    +-------------+------+-----------------------------------------+----------------------------------------------------------+\n    | avgRespTime | str  | '1.11'                                  | Average response time of proxy                           |\n    +-------------+------+-----------------------------------------+----------------------------------------------------------+\n\n\nBroker parameters\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n.. table::\n\n    +---------------------+----------------------------------+--------------------------------------------------------------------------+\n    | Parameter           | Type [Default value]             | Description                                                              |\n    +=====================+==================================+==========================================================================+\n    | queue               | asyncio.Queue                    | Queue stores the checked proxies. **Required**                           |\n    +---------------------+----------------------------------+--------------------------------------------------------------------------+\n    | timeout             | int [8]                          | Timeout is set for almost all actions carried by the network. In seconds |\n    +---------------------+----------------------------------+--------------------------------------------------------------------------+\n    | attempts_conn       | int [3]                          | Limiting the maximum number of connection attempts                       |\n    +---------------------+----------------------------------+--------------------------------------------------------------------------+\n    | max_concurrent_conn | int or asyncio.Semaphore() [200] | Limiting the maximum number of concurrent connections                    |\n    +---------------------+----------------------------------+--------------------------------------------------------------------------+\n    | providers           | list of strings or ``Provider``  | List of the websites that publish free public proxy lists daily          |\n    |                     | objects [~50 websites]           |                                                                          |\n    +---------------------+----------------------------------+--------------------------------------------------------------------------+\n    | judges              | list of strings or ``Judge``     | List of the websites that show HTTP headers and IP address               |                       \n    |                     | objects [~10 websites]           |                                                                          |\n    +---------------------+----------------------------------+--------------------------------------------------------------------------+\n    | verify_ssl          | bool [False]                     | Check ssl certifications                                                 |\n    +---------------------+----------------------------------+--------------------------------------------------------------------------+\n    | loop                | asyncio event loop               | Event loop                                                               |\n    +---------------------+----------------------------------+--------------------------------------------------------------------------+\n\n\n\nBroker methods\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n.. table::\n\n    +-----------------+------------------------------------------------------------------------------------------------------+---------------------------+\n    | Method          | Optional parameters                                                                                  | Description               |\n    |                 +-------------+----------------------------------------------------------------------------------------+                           |\n    |                 | Parameter   | Description                                                                            |                           |\n    +=================+=============+========================================================================================+===========================+\n    | find            | data        | As a source of proxies can be specified your own source data. Instead of the providers | Gather and check proxies  |\n    |                 +-------------+----------------------------------------------------------------------------------------+ with specified parameters |\n    |                 | types       | List of types (protocols) which must be checked.                                       |                           |\n    |                 |             | Use a tuple if you want to specify the levels of anonymity: (Type, AnonLvl).           |                           |\n    |                 |             | By default: all types with any level of anonymity                                      |                           |\n    |                 +-------------+----------------------------------------------------------------------------------------+                           |\n    |                 | countries   | List of ISO country codes where should be located proxies                              |                           |\n    |                 +-------------+----------------------------------------------------------------------------------------+                           |\n    |                 | limit       | Maximum number of working proxies                                                      |                           |\n    +-----------------+-------------+----------------------------------------------------------------------------------------+---------------------------+\n    | grab            | countries   | List of ISO country codes where should be located proxies                              | Gather proxies            |\n    |                 +-------------+----------------------------------------------------------------------------------------+ without a check           |\n    |                 | limit       | Maximum number of working proxies                                                      |                           |\n    +-----------------+-------------+----------------------------------------------------------------------------------------+---------------------------+\n    | show_stats      | full        | If is False (by default) - will show a short version of stats (without proxieslog),    | Show stats of work        |\n    |                 |             | if is True - will show full version of stats (with proxies log)                        |                           |\n    +-----------------+-------------+----------------------------------------------------------------------------------------+---------------------------+\n\n\n\nTODO\n----\n\n* Check the ping, response time and speed of data transfer\n* Check on work with the Cookies/Referrer/POST\n* Check site access (Google, Twitter, etc) and even your own custom URL's\n* Check proxy on spam. Search proxy ip in spam databases (DNSBL)\n* Information about uptime\n* Checksum of data returned\n* Support for proxy authentication\n* Finding outgoing IP for cascading proxy\n* The ability to send mail. Check on open 25 port (SMTP)\n* The ability to specify the address of the proxy without port (try to connect on defaulted ports)\n* The ability to save working proxies to a file (text/json/xml)\n\n\nContributing\n------------\n\n* Fork it: https://github.com/constverum/ProxyBroker/fork\n* Create your feature branch: git checkout -b my-new-feature\n* Commit your changes: git commit -am 'Add some feature'\n* Push to the branch: git push origin my-new-feature\n* Submit a pull request!\n\n\nLicense\n-------\n\nLicensed under the Apache License, Version 2.0\n\n*This product includes GeoLite2 data created by MaxMind, available from* `http://www.maxmind.com <http://www.maxmind.com>`_.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/constverum/ProxyBroker",
    "keywords": "proxy finder grabber scraper parser graber scrapper checker broker async asynchronous http https connect socks socks4 socks5",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "proxybroker",
    "platform": "any",
    "project_url": "https://pypi.org/project/proxybroker/",
    "release_url": "https://pypi.org/project/proxybroker/0.1.4/",
    "requires_python": "",
    "summary": "[Finder/Grabber/Checker] Finds public proxies on multiple sources and concurrently checks them (type, anonymity, country). HTTP(S) & SOCKS",
    "version": "0.1.4"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2b40d2c8c45af103ea227fcf2134f077",
          "sha256": "85ac1c613349149a7b03fdde1b2ce9c62e95e920c1e4a1441796096ddd10eb17"
        },
        "downloads": 456,
        "filename": "proxybroker-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b40d2c8c45af103ea227fcf2134f077",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 1103456,
        "upload_time": "2016-02-23T15:29:47",
        "url": "https://files.pythonhosted.org/packages/e3/48/d2255df6141fba1b645f5d20ff004641cc6bfc55af1173ca13be41140f67/proxybroker-0.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "035d470617e39814236e948a2778d9b5",
          "sha256": "520e49028371db7e518f49bcd93e52d3317805b3395aa5f571703619fd524db0"
        },
        "downloads": 130,
        "filename": "proxybroker-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "035d470617e39814236e948a2778d9b5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1097344,
        "upload_time": "2016-02-23T15:29:53",
        "url": "https://files.pythonhosted.org/packages/af/05/8a5e592e777b82a0d921245a0ec77dc3717f83db1eb6dd8b560c3865bc4c/proxybroker-0.1.tar.gz"
      }
    ],
    "0.1.1": [],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "632c6894e2611427f6752f48b57c0549",
          "sha256": "8cfab1e5d8a81fc659bcdfe39668e4c241f04f0e9167c5a039dfef577d968292"
        },
        "downloads": 121,
        "filename": "proxybroker-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "632c6894e2611427f6752f48b57c0549",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 1103648,
        "upload_time": "2016-02-27T11:11:00",
        "url": "https://files.pythonhosted.org/packages/53/74/5b8b37f9025180a128d3eab4816ce1bf8f4f3e724ec8995aa281100760e9/proxybroker-0.1.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4bb418800afb8a2432b8027a40c9a522",
          "sha256": "ef8afbad9360ff7b95da337d290480c90f3dac5a6358b0a6e620adc2a776bd09"
        },
        "downloads": 117,
        "filename": "proxybroker-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4bb418800afb8a2432b8027a40c9a522",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1439726,
        "upload_time": "2016-02-27T11:11:07",
        "url": "https://files.pythonhosted.org/packages/07/45/db9024eef3227d0b73ff129942cc6fb9e42e9efeb3e933ae27e4c9669d13/proxybroker-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a1b1df7a04a482dc1256b070f7536fac",
          "sha256": "db857215acae6cc0879c30281b2ec397c62c359d529dc5d6e5bfa2eec5e01c0c"
        },
        "downloads": 126,
        "filename": "proxybroker-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a1b1df7a04a482dc1256b070f7536fac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 1447370,
        "upload_time": "2016-03-25T23:27:37",
        "url": "https://files.pythonhosted.org/packages/01/a1/91b7e2d60d2b664dfb9b13ab7cab892ed893ed0cf30ca7cb16acb52ea62b/proxybroker-0.1.3-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f09bdbd2ab72f5963e09b116411db9f5",
          "sha256": "85d0394c1e6a72a6ea7cb4996e94b0f88e0615c327f4d8a3519a8bc541147339"
        },
        "downloads": 141,
        "filename": "proxybroker-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f09bdbd2ab72f5963e09b116411db9f5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1442435,
        "upload_time": "2016-03-25T23:27:47",
        "url": "https://files.pythonhosted.org/packages/a9/af/5f1b2c3c371fbd3734dc5939554c01c6751bc14e51ce8d3224c448a2b941/proxybroker-0.1.3.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b02b81023263dfa1d8a800ffce7f4737",
          "sha256": "171e15639574d58ef5f748b11aea010b8b900a6ce2863991ec38e93ae9fb138f"
        },
        "downloads": 519,
        "filename": "proxybroker-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b02b81023263dfa1d8a800ffce7f4737",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 1447398,
        "upload_time": "2016-04-07T12:09:43",
        "url": "https://files.pythonhosted.org/packages/1c/d6/fb732c78529edef2ae4b0ccb4f4ca44b6654137aeb6e4d0ca7562ca28428/proxybroker-0.1.4-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d70e41ea923f5d737cb0739473542525",
          "sha256": "9fac03e7f1e2b8592c08dd830a6346ac79febbe7c1fc59e555f32149d30497bd"
        },
        "downloads": 497,
        "filename": "proxybroker-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d70e41ea923f5d737cb0739473542525",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1442523,
        "upload_time": "2016-04-07T12:09:49",
        "url": "https://files.pythonhosted.org/packages/e9/9c/67092acf7851c6f22e78e50b9b05c3475a4c4ea9e84aa6d50fc5cdf9d18b/proxybroker-0.1.4.tar.gz"
      }
    ],
    "0.1b4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3888fb2099e69daf4023c374a6d34b98",
          "sha256": "efa6dc5814fef3f7a3558681c0074894054690e6211a9f803f66fba9a5508f23"
        },
        "downloads": 277,
        "filename": "proxybroker-0.1b4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3888fb2099e69daf4023c374a6d34b98",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 1078370,
        "upload_time": "2016-01-20T22:41:25",
        "url": "https://files.pythonhosted.org/packages/59/c2/bac91c19deaf7598914a59b708ee65cb0b6224f3eac5c832921a923d4a50/proxybroker-0.1b4-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a5ab8f1c5be5250a26a64f9d432b802e",
          "sha256": "a8eb8592a5d73808568133af9af25a83ca9e04c4eb3c533d5007bed1123a9e92"
        },
        "downloads": 301,
        "filename": "proxybroker-0.1b4.tar.gz",
        "has_sig": false,
        "md5_digest": "a5ab8f1c5be5250a26a64f9d432b802e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1072007,
        "upload_time": "2016-01-20T22:41:32",
        "url": "https://files.pythonhosted.org/packages/cb/69/1715c27865a940619ea2cc198e20bb57eedbec92e5a7be030ea46903fd16/proxybroker-0.1b4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b02b81023263dfa1d8a800ffce7f4737",
        "sha256": "171e15639574d58ef5f748b11aea010b8b900a6ce2863991ec38e93ae9fb138f"
      },
      "downloads": 519,
      "filename": "proxybroker-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b02b81023263dfa1d8a800ffce7f4737",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 1447398,
      "upload_time": "2016-04-07T12:09:43",
      "url": "https://files.pythonhosted.org/packages/1c/d6/fb732c78529edef2ae4b0ccb4f4ca44b6654137aeb6e4d0ca7562ca28428/proxybroker-0.1.4-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "d70e41ea923f5d737cb0739473542525",
        "sha256": "9fac03e7f1e2b8592c08dd830a6346ac79febbe7c1fc59e555f32149d30497bd"
      },
      "downloads": 497,
      "filename": "proxybroker-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "d70e41ea923f5d737cb0739473542525",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 1442523,
      "upload_time": "2016-04-07T12:09:49",
      "url": "https://files.pythonhosted.org/packages/e9/9c/67092acf7851c6f22e78e50b9b05c3475a4c4ea9e84aa6d50fc5cdf9d18b/proxybroker-0.1.4.tar.gz"
    }
  ]
}