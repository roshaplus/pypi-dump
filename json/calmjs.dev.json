{
  "info": {
    "author": "Tommy Yu",
    "author_email": "tommy.yu@auckland.ac.nz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Framework :: Setuptools Plugin",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
      "Operating System :: OS Independent",
      "Programming Language :: JavaScript",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Testing"
    ],
    "description": "calmjs.dev\n==========\n\nPackage for aiding the development of JavaScript code to be provided as\npart of Python packages through integration with `Node.js`_ development\ntools into a Python environment via the `Calmjs framework`_.\n\n.. image:: https://travis-ci.org/calmjs/calmjs.dev.svg?branch=1.0.x\n    :target: https://travis-ci.org/calmjs/calmjs.dev\n.. image:: https://ci.appveyor.com/api/projects/status/0mxtiaf2j98w5fy6/branch/1.0.x?svg=true\n    :target: https://ci.appveyor.com/project/metatoaster/calmjs-dev/branch/1.0.x\n.. image:: https://coveralls.io/repos/github/calmjs/calmjs.dev/badge.svg?branch=1.0.x\n    :target: https://coveralls.io/github/calmjs/calmjs.dev?branch=1.0.x\n\n\nIntroduction\n------------\n\nPython packages can contain arbitrary resource files, which can include\nJavaScript sources.  This situation is commonly found in packages that\nprovide frontend functionalities that enhance user experience that\nrequire interactions with a related backend Python code running on the\nserver provided by the given package.  In order to facilitate the\ntesting of those JavaScript code from those Python packages, commonly\n`Node.js`_ packages and frameworks are often used to achieve this.\n\nTypically, for the management of this dependency, this often require two\nor more separate package management systems that are not properly aware\nof each other, resulting in often cumbersome linkage or needless\nduplication of packages installed on a given system.  Moreover, the\nconfigurations files for the Node.js/JavaScript package dependencies,\nalong with the building of artifacts and testing of the JavaScript\nprovided by those Python packages are very specific to the given project\nand generally not portable.  If multiple such packages are required for\na downstream Python project, the scripts and definition files for\nbuilding of artifacts and testing generally have to be manually\nmodified, which is often a very aggravating and error-prone process.\n\nThe Calmjs framework, however, provides the means for Python packages to\ndeclare the JavaScript modules they are to export, and this package,\n|calmjs.dev|, provides the means to consume those information such that\nthe JavaScript tests declared within those Python packages can be\nexecuted without having to manually construct and verify the paths to\nthe source and tests files, no matter where they are within the\nenvironment, provided they are properly declared through the Calmjs\nframework.  The tests can then run either against the JavaScript sources\nprovided by the Python package through the artifact generation\nframework, or against prebuilt artifacts that contain those\nfunctionalities.  Naturally, the support for the artifact generation\nframework requires integration with the Calmjs framework; currently, the\nsupport of AMD is implemented through the |calmjs.rjs|_ package.\n\n.. |calmjs| replace:: ``calmjs``\n.. |calmjs.dev| replace:: ``calmjs.dev``\n.. |calmjs.rjs| replace:: ``calmjs.rjs``\n.. |npm| replace:: ``npm``\n.. |setuptools| replace:: ``setuptools``\n.. _Calmjs framework: https://pypi.python.org/pypi/calmjs\n.. _calmjs: https://pypi.python.org/pypi/calmjs\n.. _calmjs.rjs: https://pypi.python.org/pypi/calmjs.rjs\n.. _Node.js: https://nodejs.org\n.. _setuptools: https://pypi.python.org/pypi/setuptools\n\n\nFeatures\n--------\n\n- Provides a set of commonly used development tools that are commonly\n  used for testing JavaScript code.  In brief, these include:\n\n  |karma|_\n      Test runner for running tests included with packages against the\n      JavaScript code contained there.\n  |mocha|_\n      A JavaScript test framework for writing unit tests for node.js or\n      the browser.\n  |phantomjs|_\n      A headless webkit with JavaScript API capable of interfacing with\n      karma; this enables the running of integration JavaScript tests.\n  |sinon|_\n      A set of spies, stubs and mocks for JavaScript, for working with\n      unit testing frameworks.\n\n  Plus other integration packages that get them to work with each other,\n  namely the various ``karma-*`` packages for integration with |karma|.\n  For full details on the environment that will be installed through the\n  |calmjs| framework, the command ``calmjs npm calmjs.dev`` can be\n  invoked to view the ``package.json`` once this package is installed\n  into a Python environment.  For installation, please refer to the\n  following section.\n\n- Through the use of the |calmjs| module registry system, Python\n  packages can declare JavaScript sources that can be passed through\n  specific toolchains that build them into deployable artifacts.  The\n  |calmjs.dev| package provide a common framework for the generation of\n  configuration files for the execution of tests through the karma test\n  runner.\n\n  The usage of this is typically through the |calmjs| runtime system.\n\n.. |karma| replace:: ``karma``\n.. |mocha| replace:: ``mocha``\n.. |phantomjs| replace:: ``phantomjs``\n.. |sinon| replace:: ``sinon``\n.. _karma: https://www.npmjs.com/package/karma\n.. _mocha: https://www.npmjs.com/package/mocha\n.. _phantomjs: https://www.npmjs.com/package/phantomjs-prebuilt\n.. _sinon: https://www.npmjs.com/package/sinon\n\n\nInstallation\n------------\n\nAs the goal of |calmjs.dev| is to integrate Node.js development tools\ninto a Python environment, both Node.js and |npm| are required to be\navailable within the target installation environment; if they are not\ninstalled please follow the installation steps for `Node.js`_\nappropriate for the target operating system/environment/platform.\n\nNaturally, since this is achieved through |calmjs|, it will need to be\navailable in the target installation environment; however, this is\nachieved simply by installing |calmjs.dev| through ``pip`` from PyPI.\n\n.. code:: sh\n\n    $ pip install calmjs.dev\n\nAlternative installation methods (for developers, advanced users)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDevelopment is still ongoing with |calmjs.dev|, for the latest features\nand bug fixes, the development version may be desirable; however, the\n|calmjs| package *must* be installed first, otherwise the metadata must\nbe regenerated after the installation, which can be achieved like so:\n\n.. code:: sh\n\n    $ pip install git+https://github.com/calmjs/calmjs.git#egg=calmjs\n\nAlternatively, the git repository can be cloned directly and execute\n``python setup.py develop`` while inside the root of the source\ndirectory.  Failure to do so will result in failure to install the\ndevelopment packages via |calmjs| from |npm|.  This failure can be\nverified by tests for this package failed to correctly execute, and the\nappearance of ``distribution option: 'package_json'`` warning message\nwhile installing this package.\n\nAs |calmjs| is declared as both a namespace and a package, mixing\ninstallation methods as described above when installing with other\n|calmjs| packages may result in the module importer being unable to look\nup the target files.  If such an error does arise please remove all\nmodules and only stick with a single installation method for all\npackages within the |calmjs| namespace.\n\nInstallation of Node.js external dependencies\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAs this package integrates a number of Node.js packages to achieve the\nintended functionality of integration with that environment, Node.js\npackages required by this package can be installed into the current\nworking directory through the |calmjs| executable with the included\n|npm| command:\n\n.. code:: sh\n\n    $ calmjs npm --install calmjs.dev\n\nTesting the installation\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nFinally, to verify for the successful installation of |calmjs.dev|, the\nincluded tests may be executed through this command:\n\n.. code:: sh\n\n    $ python -m unittest calmjs.dev.tests.make_suite\n\nHowever, if the steps to install external Node.js dependencies to the\ncurrent directory was followed, the current directory may be specified\nas the ``CALMJS_TEST_ENV`` environment variable.  Under POSIX compatible\nshells this may be executed instead from within that directory:\n\n.. code:: sh\n\n    $ CALMJS_TEST_ENV=. python -m unittest calmjs.dev.tests.make_suite\n\nDo note a number of failures during execution of Karma may appear; this\nis normal as these are tests that involve the simulation of failures to\nensure proper error handling on real test failures.\n\nUsage\n-----\n\nThe default tool is meant to provide an injectable runtime that sits\nbefore a |calmjs| toolchain runtime that is responsible for the\ngeneration of deployable artifacts, such as AMD bundles through\nRequireJS.  Currently, the standard way to use this package is to use it\nin conjunction of the |calmjs.rjs|_ package runtime.  For instance, one\nmight execute the ``r.js`` tool through |calmjs.rjs| like:\n\n.. code:: sh\n\n    $ calmjs rjs example.package\n\nThe above command would package all the JavaScript code provided by the\nPython package ``example.package`` into an AMD bundle artifact through\n``r.js``.  As the ``example.package`` may also provide tests for its\nJavaScript code (naturally written in JavaScript), it may be executed\nthrough the karma test runner provided by this package.  The command is\nas simple as adding ``karma`` before the toolchain runtime, like:\n\n.. code:: sh\n\n    $ calmjs karma rjs example.package\n\nThis would apply a test advice to the ``rjs`` toolchain and invoke it.\nNormally, before the bundling is done, the tests will be executed\nagainst the transpiled sources in the build directory.\n\nTo run tests against pre-generated artifact files, |calmjs.dev| provides\na surrogate toolchain runtime specific for the ``karma`` command that\nmay be used to achieve this purpose.  For example, if one wishes to run\ntests a bundle file ``bundle.js`` which they assumed to contain code\nfrom ``example.package``, they may wish to run tests defined for that\npackage by invoking:\n\n.. code:: sh\n\n    $ calmjs karma run \\\n        --artifact=bundle.js \\\n        --test-package=example.package\n\nHowever, for more complicated toolchains and packages this will probably\nnot work, as the generation of these artifacts typically involve extra\noptional advices that have been added.  To address that, one may apply\nthe ``--toolchain-package`` flag which serves a similar purpose as the\n``--optional-advice`` flag for certain toolchains.  For |calmjs.rjs|,\nthis is necessary.  The full command may be like so:\n\n.. code:: sh\n\n    $ calmjs karma run \\\n        --artifact=bundle.js \\\n        --test-package=example.package \\\n        --toolchain-package=calmjs.rjs\n\nAs with all |calmjs| tools, more help can be acquired by appending\n``-h`` or ``--help`` to each of the runtime commands, i.e. ``calmjs\nkarma -h`` or ``calmjs karma run -h``.  Replacing the ``-h`` flag with\n``-V`` will report the version information for the underlying packages\nassociated with the respective runtime used.\n\nMore on testing in conjunction with artifacts\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe ``--artifact`` flag can also be specified directly on the ``karma``\nrunner; this has the consequence of enabling the testing of limited or\nexplicitly mapped JavaScript sources exported by specific Python\nmodules.  What this means is that instead of building and testing all\nthe dependency modules along with a given module, all those dependencies\ncan be applied to the test environment as a separate, complete artifact.\nThis has the effect of removing the dependency sources from the build\ndirectory such that coverage report no longer shows up, with the bonus\nof also testing the artifact whether or not the it is compatible with\nthe sources being tested.  An example with the ``nunja.stock`` package\nwhich requires ``nunja``:\n\n.. code:: sh\n\n    $ calmjs rjs nunja\n    $ calmjs karma --cover-artifact --artifact=nunja.js --coverage \\\n        --cover-test rjs nunja.stock --source-map-method=explicit\n\nThe first command produces the artifact file ``nunja.js``, which is then\nimmediately used by the subsequent command which explicitly filters out\nall other sources not specified.  Otherwise, the standard way is that\nthe dependencies will also be included into the test and the resulting\nartifact file.\n\n\nTroubleshooting\n---------------\n\nThe following may be some issues that may be encountered with standard\nor typical usage of |calmjs.dev|.\n\nError: No provider for \"framework:mocha\"! (Resolving: framework:mocha)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe most likely cause of this error is that the |npm| dependencies\nspecified for this package is not available for the current Node.js\nenvironment.  Please ensure that is installed before trying again.  One\nmethod is to prepend |calmjs.dev| to the ``calmjs npm`` install command,\ne.g:\n\n.. code:: sh\n\n    $ calmjs npm --install calmjs.dev ...\n\nAlternatively, package developers can have extras that requires this\npackage, and instruct downstream users interested in the development of\nthat package to install and use the package with that extras flag\nenabled.  For instance, ``nunja`` has the support for that:\n\n.. code:: sh\n\n    $ calmjs npm --install nunja[dev]\n\nERROR [plugin]: \"karma-...\" plugin: ...\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nA message specific to some plugin may result in the test runner not\nbeing able to execute any test.  This is typically caused by certain\nversions of karma test runner not being able to cleanly deal with\nmisbehaving plugins that is available in the ``node_modules`` directory.\nIf the plugin shown inside the quote (starting with ``karma-``) is\nunnecessary for the execution of tests, it should be removed and the\ntest command should be executed again.\n\nUserWarning: Unknown distribution option: 'package_json'\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nInstallation using the development method will show the above message if\n|calmjs| was not already installed into the current environment.  Please\neither reinstall, or regenerate the metadata by running:\n\n.. code:: sh\n\n    $ python setup.py egg_info\n\nIn the root of the |calmjs.dev| source directory to ensure correct\nbehavior of this package.\n\n\nContribute\n----------\n\n- Issue Tracker: https://github.com/calmjs/calmjs.dev/issues\n- Source Code: https://github.com/calmjs/calmjs.dev\n\n\nLegal\n-----\n\nThe Calmjs project is copyright (c) 2016 Auckland Bioengineering\nInstitute, University of Auckland.  |calmjs.dev| is licensed under the\nterms of the GPLv2 or later.\n\nChangelog\n=========\n\n1.0.3 (2017-05-22)\n------------------\n\n- Move the ``--artifact`` and ``--cover-artifact`` flag up to the main\n  ``karma`` runtime to permit wider and more flexible usage for all\n  runners.\n- Correctly report the path of missing specified artifacts in the logs.\n\n1.0.2 (2017-01-27)\n------------------\n\n- Provide test prefix key and constant.\n\n1.0.1 (2016-11-30)\n------------------\n\n- Correct the inability to launch standard graphical browsers directly\n  via the runner under Windows.\n\n1.0.0 (2016-11-18)\n------------------\n\n- Initial release of the development support for the calmjs framework.\n- Include karma test runner integration as a calmjs runtime that can\n  accept calmjs toolchain runtimes to facilitate testing.\n- Generation of test coverage reports of JavaScript sources executed.\n- Leverage the toolchain advice system for adding the test runner and\n  also permit the modification of test configurations by toolchain\n  implementations that require specific instructions for a successful\n  execution of tests.\n- Permit integration with other packages for testing artifacts generated\n  by other systems.\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/calmjs/calmjs.dev",
    "keywords": "",
    "license": "gpl",
    "maintainer": "",
    "maintainer_email": "",
    "name": "calmjs.dev",
    "platform": "",
    "project_url": "https://pypi.org/project/calmjs.dev/",
    "release_url": "https://pypi.org/project/calmjs.dev/1.0.3/",
    "requires_python": "",
    "summary": "Package for aiding the development of JavaScript code to be provided as part of Python packages through integration with Node.js development tools into a Python environment via the Calmjs framework.",
    "version": "1.0.3"
  },
  "releases": {
    "0.0": [],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9b3c182f922ff563d4b54dd9c40dd4f4",
          "sha256": "7bcb1798e213c7bf8876ffc95049e4a2883eb410a74a8b1a96ff60c3c332c54d"
        },
        "downloads": 120,
        "filename": "calmjs.dev-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b3c182f922ff563d4b54dd9c40dd4f4",
        "packagetype": "bdist_wheel",
        "python_version": "3.4",
        "size": 33477,
        "upload_time": "2016-11-18T07:50:10",
        "url": "https://files.pythonhosted.org/packages/6b/2b/d6b1497f09aa79b16c688c5e955faf697437ee975050767cb1e9df2c5931/calmjs.dev-1.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f5dac3fa0813e12fb1726f453f1ce5da",
          "sha256": "791b22e260797bc1f25e03016899235a914ad567af9f220f4574c7f024fa7423"
        },
        "downloads": 68,
        "filename": "calmjs.dev-1.0.0.zip",
        "has_sig": false,
        "md5_digest": "f5dac3fa0813e12fb1726f453f1ce5da",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40445,
        "upload_time": "2016-11-18T07:50:07",
        "url": "https://files.pythonhosted.org/packages/59/0e/b9f0c9e70cc4a331b1edcbe1f0014d592c4d855898c52d9150766bdcd66e/calmjs.dev-1.0.0.zip"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "deb747b119251e9d944514de5b3f9736",
          "sha256": "a305a4ceb26557c59621aff773c0f78ce43d0df5a5303c5a916b492f67ae32c3"
        },
        "downloads": 50,
        "filename": "calmjs.dev-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "deb747b119251e9d944514de5b3f9736",
        "packagetype": "bdist_wheel",
        "python_version": "3.4",
        "size": 33919,
        "upload_time": "2016-11-30T02:32:07",
        "url": "https://files.pythonhosted.org/packages/da/16/b4532b9b20f7598ef06caeb6439f430586c9989571866536c6a21e1d335b/calmjs.dev-1.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d6000be10654ca4e51e5578b34d76356",
          "sha256": "7a35bdc6ee2d20e8aa991c145e31ec526922e322617e2d1512cf025e7de7215e"
        },
        "downloads": 48,
        "filename": "calmjs.dev-1.0.1.zip",
        "has_sig": false,
        "md5_digest": "d6000be10654ca4e51e5578b34d76356",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40954,
        "upload_time": "2016-11-30T02:32:04",
        "url": "https://files.pythonhosted.org/packages/28/ba/23a730562c29b1239321dc7811c168e14bffb7a3d28fb0dd6d99e9334142/calmjs.dev-1.0.1.zip"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "34d8ae59f1226acf5451bda3b13b1276",
          "sha256": "cdd04d2c0849dc20244af77fb58f7deeca5b6b0ba0b79b2e098fa99e8544b70e"
        },
        "downloads": 16,
        "filename": "calmjs.dev-1.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34d8ae59f1226acf5451bda3b13b1276",
        "packagetype": "bdist_wheel",
        "python_version": "3.4",
        "size": 34032,
        "upload_time": "2017-01-27T01:51:05",
        "url": "https://files.pythonhosted.org/packages/8c/23/d44cbb55a4448ac10de113512f96cb3ec33c0148621145344c0ef6f8485c/calmjs.dev-1.0.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f9d800b88b3db64ab7fcd529c7d718f4",
          "sha256": "38ec4396ab5f2fe0fcb9581f955cacd92cb981a3abe1cdfd78176735816bc318"
        },
        "downloads": 15,
        "filename": "calmjs.dev-1.0.2.zip",
        "has_sig": false,
        "md5_digest": "f9d800b88b3db64ab7fcd529c7d718f4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 41103,
        "upload_time": "2017-01-27T01:51:08",
        "url": "https://files.pythonhosted.org/packages/ed/8a/bc562230c0a4eb94e29cfcd4aaa655edf19bbcb1b33d47f60b359b7bcb6c/calmjs.dev-1.0.2.zip"
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "eb90f075c288da35aeedd6a8981e0f9a",
          "sha256": "568bc517f5380297485681ee66b68bf6804c06f25526bac8dce626ba194658b3"
        },
        "downloads": 0,
        "filename": "calmjs.dev-1.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb90f075c288da35aeedd6a8981e0f9a",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 36009,
        "upload_time": "2017-05-22T07:06:25",
        "url": "https://files.pythonhosted.org/packages/37/bd/08af61b47a2222ff809427fbb87b77957cd4c733155af6611af3822d5e50/calmjs.dev-1.0.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "003c62bc4efc72c3e28bfdca6e55bce0",
          "sha256": "2d1dd6fae4328d66ad2de0c7b8ccea7a7e48c6226aeb7d552c47376ff91dca9d"
        },
        "downloads": 0,
        "filename": "calmjs.dev-1.0.3.zip",
        "has_sig": false,
        "md5_digest": "003c62bc4efc72c3e28bfdca6e55bce0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 43863,
        "upload_time": "2017-05-22T07:06:23",
        "url": "https://files.pythonhosted.org/packages/22/28/0cd40ba477ff85a93669f50ae8893558125f9259349bc70d3c7d118d0cda/calmjs.dev-1.0.3.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "eb90f075c288da35aeedd6a8981e0f9a",
        "sha256": "568bc517f5380297485681ee66b68bf6804c06f25526bac8dce626ba194658b3"
      },
      "downloads": 0,
      "filename": "calmjs.dev-1.0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eb90f075c288da35aeedd6a8981e0f9a",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 36009,
      "upload_time": "2017-05-22T07:06:25",
      "url": "https://files.pythonhosted.org/packages/37/bd/08af61b47a2222ff809427fbb87b77957cd4c733155af6611af3822d5e50/calmjs.dev-1.0.3-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "003c62bc4efc72c3e28bfdca6e55bce0",
        "sha256": "2d1dd6fae4328d66ad2de0c7b8ccea7a7e48c6226aeb7d552c47376ff91dca9d"
      },
      "downloads": 0,
      "filename": "calmjs.dev-1.0.3.zip",
      "has_sig": false,
      "md5_digest": "003c62bc4efc72c3e28bfdca6e55bce0",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 43863,
      "upload_time": "2017-05-22T07:06:23",
      "url": "https://files.pythonhosted.org/packages/22/28/0cd40ba477ff85a93669f50ae8893558125f9259349bc70d3c7d118d0cda/calmjs.dev-1.0.3.zip"
    }
  ]
}