{
  "info": {
    "author": "Jon Betti",
    "author_email": "jonbetti@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# MDNS Repeater\n\nServices that broadcast themselves via MDNS are only available for DNS-SD on\nthe networks they are directly connected to. However, some network topologies\nallow devices on different subnets to route to each other and you may want\nservices to be discoverable across certain network boundaries.\n\nThis is a work in progress and there may be some ping-pong between\nbidirectionally mirrored networks. It also only supports service records right\nnow and that probably won't change unless there is some reason to support other\nrecord types.\n\n\n## Motivation\n\nThere are existing projects that enable this sort of functionality, namely\nAvahi in the open source world with its 'reflector' option. The main issue I\nhad with setting reflector=on was that Avahi would reflect every network\ninterface's services on every other network interface, which was a bit too\nbroad for my network. (My MacBook would switch WiFi networks and Avahi would\nadvertize a stale service from my MacBook from another subnet and everything\nwould catch fire.) The main motivation here was to provide similar\nfunctionality as reflector=on in a loosly scriptable fashion.\n\n\n## Examples\n\n###Scenario 1\n\nYou have a DMZ network and an internal network and you want services on the DMZ\nto be available to devices on the internal network. In this scenario, assume\nyou have a device with network interfaces `enDMZ` at `192.168.2.100` and\n`enInternal` at `192.168.1.100`.\n\n```python\nimport functools\nimport signal\nimport sys\nimport time\n\nfrom mdns_repeater import Repeater\n\n\nenInternal = Repeater('192.168.1.100')\nenDMZ      = Repeater('192.168.2.100')\n\nenDMZ.repeat_to(enInternal)\n\n\nif __name__ == '__main__' and not sys.flags.interactive:\n    @functools.partial(signal.signal, signal.SIGINT)\n    def boop(signum, stuff):\n        print('Exiting...')\n        sys.exit(0)\n    while True:\n        time.sleep(1.0)\n```\n\n###Scenario 2\n\nYou have two separate WiFi networks set up with different access permissions\nbut you still want services to advertize across both (think AppleTV or\nChromecast). In this scenario, assume you have a device with network interfaces\n`brWifiA` at `192.168.1.1` and `brWifiB` at `192.168.2.1`.\n\n```python\nimport functools\nimport signal\nimport sys\nimport time\n\nfrom mdns_repeater import Repeater\n\n\nwifiA = Repeater('192.168.1.1')\nwifiB = Repeater('192.168.2.1')\n\nwifiA.repeat_to(wifiB)\nwifiB.repeat_to(wifiA)\n\n\nif __name__ == '__main__' and not sys.flags.interactive:\n    @functools.partial(signal.signal, signal.SIGINT)\n    def boop(signum, stuff):\n        print('Exiting...')\n        sys.exit(0)\n    while True:\n        time.sleep(1.0)\n```",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "UNKNOWN",
    "keywords": null,
    "license": "### GNU LESSER GENERAL PUBLIC LICENSE\n\nVersion 3, 29 June 2007\n\nCopyright (C) 2007 Free Software Foundation, Inc.\n<http://fsf.org/>\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nThis version of the GNU Lesser General Public License incorporates the\nterms and conditions of version 3 of the GNU General Public License,\nsupplemented by the additional permissions listed below.\n\n#### 0. Additional Definitions.\n\nAs used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the\nGNU General Public License.\n\n\"The Library\" refers to a covered work governed by this License, other\nthan an Application or a Combined Work as defined below.\n\nAn \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\nA \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library. The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\nThe \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\nThe \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n#### 1. Exception to Section 3 of the GNU GPL.\n\nYou may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n#### 2. Conveying Modified Versions.\n\nIf you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n-   a) under this License, provided that you make a good faith effort\n    to ensure that, in the event an Application does not supply the\n    function or data, the facility still operates, and performs\n    whatever part of its purpose remains meaningful, or\n-   b) under the GNU GPL, with none of the additional permissions of\n    this License applicable to that copy.\n\n#### 3. Object Code Incorporating Material from Library Header Files.\n\nThe object code form of an Application may incorporate material from a\nheader file that is part of the Library. You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n-   a) Give prominent notice with each copy of the object code that\n    the Library is used in it and that the Library and its use are\n    covered by this License.\n-   b) Accompany the object code with a copy of the GNU GPL and this\n    license document.\n\n#### 4. Combined Works.\n\nYou may convey a Combined Work under terms of your choice that, taken\ntogether, effectively do not restrict modification of the portions of\nthe Library contained in the Combined Work and reverse engineering for\ndebugging such modifications, if you also do each of the following:\n\n-   a) Give prominent notice with each copy of the Combined Work that\n    the Library is used in it and that the Library and its use are\n    covered by this License.\n-   b) Accompany the Combined Work with a copy of the GNU GPL and this\n    license document.\n-   c) For a Combined Work that displays copyright notices during\n    execution, include the copyright notice for the Library among\n    these notices, as well as a reference directing the user to the\n    copies of the GNU GPL and this license document.\n-   d) Do one of the following:\n    -   0) Convey the Minimal Corresponding Source under the terms of\n        this License, and the Corresponding Application Code in a form\n        suitable for, and under terms that permit, the user to\n        recombine or relink the Application with a modified version of\n        the Linked Version to produce a modified Combined Work, in the\n        manner specified by section 6 of the GNU GPL for conveying\n        Corresponding Source.\n    -   1) Use a suitable shared library mechanism for linking with\n        the Library. A suitable mechanism is one that (a) uses at run\n        time a copy of the Library already present on the user's\n        computer system, and (b) will operate properly with a modified\n        version of the Library that is interface-compatible with the\n        Linked Version.\n-   e) Provide Installation Information, but only if you would\n    otherwise be required to provide such information under section 6\n    of the GNU GPL, and only to the extent that such information is\n    necessary to install and execute a modified version of the\n    Combined Work produced by recombining or relinking the Application\n    with a modified version of the Linked Version. (If you use option\n    4d0, the Installation Information must accompany the Minimal\n    Corresponding Source and Corresponding Application Code. If you\n    use option 4d1, you must provide the Installation Information in\n    the manner specified by section 6 of the GNU GPL for conveying\n    Corresponding Source.)\n\n#### 5. Combined Libraries.\n\nYou may place library facilities that are a work based on the Library\nside by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n-   a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities, conveyed under the terms of this License.\n-   b) Give prominent notice with the combined library that part of it\n    is a work based on the Library, and explaining where to find the\n    accompanying uncombined form of the same work.\n\n#### 6. Revised Versions of the GNU Lesser General Public License.\n\nThe Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number. If the Library\nas you received it specifies that a certain numbered version of the\nGNU Lesser General Public License \"or any later version\" applies to\nit, you have the option of following the terms and conditions either\nof that published version or of any later version published by the\nFree Software Foundation. If the Library as you received it does not\nspecify a version number of the GNU Lesser General Public License, you\nmay choose any version of the GNU Lesser General Public License ever\npublished by the Free Software Foundation.\n\nIf the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.",
    "maintainer": null,
    "maintainer_email": null,
    "name": "mdns_repeater",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/mdns_repeater/",
    "release_url": "https://pypi.org/project/mdns_repeater/0.1/",
    "requires_python": null,
    "summary": "Repeats MDNS entries across networks.",
    "version": "0.1"
  },
  "releases": {
    "0.1": []
  },
  "urls": []
}