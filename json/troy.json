{
  "info": {
    "author": "Andre Merzky",
    "author_email": "andre@merzky.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.5",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator",
      "Topic :: System :: Distributed Computing",
      "Topic :: Utilities"
    ],
    "description": "# Tired of Resource OverlaYs\n\n### Pointers\n\n* home page:     http://saga-project.github.io/troy/\n* documentation: http://saga-project.github.io/troy/docs/build/html/\n* wiki pages:    https://github.com/saga-project/troy/wiki/\n* issue tracker: https://github.com/saga-project/troy/issues/\n\n\n### Installation Notes\n\nAt this stage, the devel branches of saga-python, radical.utils, and bigjob should\nbe used with TROY.  (If these are not manually installed, the\nTROY installer may pull in non-devel versions.)\n\nTo set up the TROY environment, use \n\npip install .\n\nOr, to make extra-sure TROY is installed correctly with all trace\nof previous installations removed:\n\npip uninstall troy; rm -rf ./build; pip install .\n\n\n### Configuration\n\nYou can use a configuration file in the location \"~/.troy.cfg\".\nAn example is provided in `examples/troy.cfg`, you can copy\nthat to \"~/.troy.cfg\" and customize to your environment.\n\nAvailable configuration options are explained in more detailed \nin the Troy library documentation, and apply mostly to the Troy \nplugins.\n\n\n### Note to developers:\n\nThe development branch is `devel`, all developers should branch off 'devel' when\nimplementing new features.  Feature branches are named `feature/xyz`, and are\nonly merged into devel after coordinating with the other developers.\n\nReleases are tagged on the `master` branch -- only the release manager will merge\nfrom `devel` to `master`, to prepare for a release.\n\nAn usual development workflow should look like:\n\n```\ngit clone git@github.com:saga-project/troy.git # get repostory\ncd troy                                        # \ngit checkout devel                             # switch to devel branch\ngit checkout -b feature/world_domination       # create a feature branch from there\nvim troy/world_domination.py                   # do the deed...\nvim tests/test_world_domination.py             #\ngit commit -am 'we now dominate the world'     # commit your changes\ngit push origin feature/world_domination       # sync with github\n```\n\nThe last command will ensure that your (until then only locally existing) branch\nwill be mirrored in the central repository, and is available for other\ndevelopers.\n\nOnce the group agreed on merging, you would run:\n\n```\ngit checkout devel\ngit pull                               # get updates from github\ngit checkout feature/world_domination\ngit pull                               # get updates from github\ngit merge devel                        # make sure branch is in sync with devel\nrun_my_tests                           # do it!\ngit checkout devel\ngit merge feature/world_domination     # merge your feature branch\ngit push origin                        # sync with github\ngit branch -d feature/world_domination # remove feature branch\n```\n\nIf unsure about anything, ask Andre ;)",
    "docs_url": "https://pythonhosted.org/troy/",
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://saga-project.github.com/troy/",
    "keywords": "radical pilot job saga",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "troy",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/troy/",
    "release_url": "https://pypi.org/project/troy/0.0.3/",
    "requires_python": null,
    "summary": "Tiered Resource OverlaY",
    "version": "0.0.3"
  },
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e250027881f63b6e033911ba68113965",
          "sha256": "a6e56d2e82b4c644d70fa858a55422e402daea659a57ca3d6d4706f1d7185e06"
        },
        "downloads": 3432,
        "filename": "troy-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e250027881f63b6e033911ba68113965",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 215668,
        "upload_time": "2014-03-03T12:06:20",
        "url": "https://files.pythonhosted.org/packages/da/5c/467bb20d2ff1e0684a2acad2b4d0a38c231a623a7f60166212c56ab51f5f/troy-0.0.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e250027881f63b6e033911ba68113965",
        "sha256": "a6e56d2e82b4c644d70fa858a55422e402daea659a57ca3d6d4706f1d7185e06"
      },
      "downloads": 3432,
      "filename": "troy-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e250027881f63b6e033911ba68113965",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 215668,
      "upload_time": "2014-03-03T12:06:20",
      "url": "https://files.pythonhosted.org/packages/da/5c/467bb20d2ff1e0684a2acad2b4d0a38c231a623a7f60166212c56ab51f5f/troy-0.0.3.tar.gz"
    }
  ]
}