{
  "info": {
    "author": "Rob Story",
    "author_email": "wrobstory@gmail.com",
    "bugtrack_url": "",
    "classifiers": [],
    "description": "Permission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to\r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\nof the Software, and to permit persons to whom the Software is furnished to do\r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\nDescription: .. image:: https://badge.fury.io/py/folium.png\n           :target: http://badge.fury.io/py/folium\n        .. image:: https://api.travis-ci.org/python-visualization/folium.png?branch=master\n           :target: https://travis-ci.org/python-visualization/folium\n        .. image:: https://badges.gitter.im/Join%20Chat.svg\n           :target: https://gitter.im/python-visualization/folium?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n        .. image:: https://zenodo.org/badge/18669/python-visualization/folium.svg\n           :target: https://zenodo.org/badge/latestdoi/18669/python-visualization/folium\n        \n        Folium\n        ======\n        \n        |Folium|\n        \n        Python Data. Leaflet.js Maps.\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n        \n        Folium builds on the data wrangling strengths of the Python ecosystem\n        and the mapping strengths of the Leaflet.js library. Manipulate your\n        data in Python, then visualize it in on a Leaflet map via Folium.\n        \n        Concept\n        -------\n        \n        Folium makes it easy to visualize data that's been manipulated in Python\n        on an interactive Leaflet map. It enables both the binding of data to a\n        map for choropleth visualizations as well as passing Vincent/Vega\n        visualizations as markers on the map.\n        \n        The library has a number of built-in tilesets from OpenStreetMap,\n        Mapbox, and Stamen, and supports custom tilesets with Mapbox \n        or Cloudmade API keys. Folium supports both\n        GeoJSON and TopoJSON overlays, as well as the binding of data to those\n        overlays to create choropleth maps with color-brewer color schemes.\n        \n        Installation\n        ------------\n        \n        .. code:: bash\n        \n            $ pip install folium\n        \n        Getting Started\n        ---------------\n        \n        You can find most of the following examples in the notebook **folium_examples.ipynb** in the examples folder.\n        \n        To create a base map, simply pass your starting coordinates to Folium:\n        \n        .. code:: python\n        \n            import folium\n            map_osm = folium.Map(location=[45.5236, -122.6750])\n            map_osm.save('osm.html')\n        \n        |baseOSM|\n        \n        | Folium defaults to OpenStreetMap tiles, but Stamen Terrain, Stamen\n          Toner,\n        | Mapbox Bright, and Mapbox Control room tiles are built in:\n        \n        .. code:: python\n        \n            stamen = folium.Map(location=[45.5236, -122.6750], tiles='Stamen Toner',\n                                zoom_start=13)\n            stamen.save('stamen_toner.html')\n        \n        |stamen|\n        \n        Folium also supports Cloudmade and Mapbox custom tilesets- simply pass\n        your key to the ``API_key`` keyword:\n        \n        .. code:: python\n        \n            custom = folium.Map(location=[45.5236, -122.6750], tiles='Mapbox',\n                                API_key='wrobstory.map-12345678')\n        \n        Lastly, Folium supports passing any Leaflet.js compatible custom\n        tileset:\n        \n        .. code:: python\n        \n            tileset = r'http://{s}.tiles.yourtiles.com/{z}/{x}/{y}.png'\n            map = folium.Map(location=[45.372, -121.6972], zoom_start=12,\n                             tiles=tileset, attr='My Data Attribution')\n        \n        Markers\n        -------\n        \n        | Folium supports the plotting of numerous marker types, starting with a\n          simple Leaflet\n        | style location marker with popup text:\n        \n        .. code:: python\n        \n            map_1 = folium.Map(location=[45.372, -121.6972], zoom_start=12,\n                               tiles='Stamen Terrain')\n            folium.Marker([45.3288, -121.6625], popup='Mt. Hood Meadows').add_to(map_1)\n            folium.Marker([45.3311, -121.7113], popup='Timberline Lodge').add_to(map_1)\n            map_1.save('mthood.html')\n        \n        |hood|\n        \n        `Live example <http://bl.ocks.org/wrobstory/5609718>`__\n        \n        Folium supports colors and marker icon types (from bootstrap)\n        \n        .. code:: python\n        \n            map_1 = folium.Map(location=[45.372, -121.6972], zoom_start=12,tiles='Stamen Terrain')\n            folium.Marker([45.3288, -121.6625], popup='Mt. Hood Meadows',\n                               icon = folium.Icon(icon = 'cloud')).add_to(map_1)\n            folium.Marker([45.3311, -121.7113], popup='Timberline Lodge',\n                               icon = folium.Icon(color ='green')).add_to(map_1)\n            folium.Marker([45.3300, -121.6823], popup='Some Other Location',\n                               icon = folium.Icon(color ='red')).add_to(map_1)\n            map_1.save('iconTest.html')\n        \n        .. iconTest is broken, TODO: Link to the notebook directly.\n        \n        Folium also supports circle-style markers, with custom size and color:\n        \n        .. code:: python\n        \n            map_2 = folium.Map(location=[45.5236, -122.6750], tiles='Stamen Toner',\n                               zoom_start=13)\n            folium.Marker(location=[45.5244, -122.6699], popup='The Waterfront').add_to(map_2)\n            folium.CircleMarker(location=[45.5215, -122.6261], radius=50,\n                                popup='Laurelhurst Park', color='#3186cc',\n                                fill_color='#3186cc').add_to(map_2)\n            map_2.save('portland.html')\n        \n        |circle|\n        \n        `Live example <http://bl.ocks.org/wrobstory/5609747>`__\n        \n        Folium has a convenience function to enable lat/lng popovers:\n        \n        .. code:: python\n        \n            map_3 = folium.Map(location=[46.1991, -122.1889], tiles='Stamen Terrain',\n                               zoom_start=13)\n            folium.LatLngPopup().add_to(map_3)\n            map_3.save('sthelens.html')\n        \n        |latlng|\n        \n        `Live example <http://bl.ocks.org/wrobstory/5609756>`__\n        \n        Click-for-marker functionality will allow for on-the-fly placement of\n        markers:\n        \n        .. code:: python\n        \n            map_4 = folium.Map(location=[46.8527, -121.7649], tiles='Stamen Terrain',\n                               zoom_start=13)\n            folium.Marker(location=[46.8354, -121.7325], popup='Camp Muir').add_to(map_4)\n            folium.ClickForMarker(popup='Waypoint').add_to(map_4)\n            map_4.save('mtrainier.html')\n        \n        |waypoints|\n        \n        `Live example <http://bl.ocks.org/wrobstory/5609762>`__\n        \n        Folium also supports the Polygon marker set from the\n        `Leaflet-DVF <https://github.com/humangeo/leaflet-dvf>`__:\n        \n        .. code:: python\n        \n            map_5 = folium.Map(location=[45.5236, -122.6750], zoom_start=13)\n            folium.RegularPolygonMarker(location=[45.5012, -122.6655], popup='Ross Island Bridge',\n                               fill_color='#132b5e', number_of_sides=3, radius=10).add_to(map_5)\n            folium.RegularPolygonMarker(location=[45.5132, -122.6708], popup='Hawthorne Bridge',\n                               fill_color='#45647d', number_of_sides=4, radius=10).add_to(map_5)\n            folium.RegularPolygonMarker(location=[45.5275, -122.6692], popup='Steel Bridge',\n                               fill_color='#769d96', number_of_sides=6, radius=10).add_to(map_5)\n            folium.RegularPolygonMarker(location=[45.5318, -122.6745], popup='Broadway Bridge',\n                               fill_color='#769d96', number_of_sides=8, radius=10).add_to(map_5)\n            map_5.save('bridges.html')\n        \n        |polygon|\n        \n        `Live example <http://bl.ocks.org/wrobstory/5609786>`__\n        \n        Vincent/Vega Markers\n        --------------------\n        \n        Folium enables passing\n        `vincent <https://github.com/wrobstory/vincent>`__ visualizations to any\n        marker type, with the visualization as the popover:\n        \n        .. code:: python\n        \n            buoy_map = folium.Map(location=[46.3014, -123.7390], zoom_start=7,\n                                  tiles='Stamen Terrain')\n            popup1 = folium.Popup(max_width=800,\n                                 ).add_child(folium.Vega(vis1, width=500, height=250))\n            folium.RegularPolygonMarker([47.3489, -124.708],\n                                 fill_color='#43d9de', radius=12, popup=popup1).add_to(buoy_map)\n            popup2 = folium.Popup(max_width=800,\n                                 ).add_child(folium.Vega(vis2, width=500, height=250))\n            folium.RegularPolygonMarker([44.639, -124.5339],\n                                 fill_color='#43d9de', radius=12, popup=popup2).add_to(buoy_map)\n            popup3 = folium.Popup(max_width=800,\n                                 ).add_child(folium.Vega(vis3, width=500, height=250))\n            folium.RegularPolygonMarker([46.216, -124.1280],\n                                 fill_color='#43d9de', radius=12, popup=popup3).add_to(buoy_map)\n            buoy_map.save('NOAA_buoys.html')\n        \n        |vincent|\n        \n        `Live example <http://bl.ocks.org/wrobstory/5609803>`__\n        \n        GeoJSON/TopoJSON Overlays\n        -------------------------\n        \n        Both GeoJSON and TopoJSON layers can be passed to the map as an overlay,\n        and multiple layers can be visualized on the same map:\n        \n        .. code:: python\n        \n            geo_path = r'data/antarctic_ice_edge.json'\n            topo_path = r'data/antarctic_ice_shelf_topo.json'\n        \n            ice_map = folium.Map(location=[-59.1759, -11.6016],\n                               tiles='Mapbox Bright', zoom_start=2)\n            ice_map.choropleth(geo_path=geo_path)\n            ice_map.choropleth(geo_path=topo_path, topojson='objects.antarctic_ice_shelf')\n            ice_map.save('ice_map.html')\n        \n        |ice|\n        \n        `Live example <http://bl.ocks.org/wrobstory/5609811>`__\n        \n        Choropleth Maps\n        ---------------\n        \n        Folium allows for the binding of data between Pandas DataFrames/Series\n        and Geo/TopoJSON geometries. `Color Brewer <http://colorbrewer2.org/>`__\n        sequential color schemes are built-in to the library, and can be passed\n        to quickly visualize different combinations:\n        \n        .. code:: python\n        \n            import folium\n            import pandas as pd\n        \n            state_geo = r'data/us-states.json'\n            state_unemployment = r'data/US_Unemployment_Oct2012.csv'\n        \n            state_data = pd.read_csv(state_unemployment)\n        \n            #Let Folium determine the scale\n            map = folium.Map(location=[48, -102], zoom_start=3)\n            map.choropleth(geo_path=state_geo, data=state_data,\n                         columns=['State', 'Unemployment'],\n                         key_on='feature.id',\n                         fill_color='YlGn', fill_opacity=0.7, line_opacity=0.2,\n                         legend_name='Unemployment Rate (%)')\n            map.save('us_states.html')\n        \n        |states_1|\n        \n        `Live example <http://bl.ocks.org/wrobstory/5609830>`__\n        \n        Folium creates the legend on the upper right based on a D3 threshold\n        scale, and makes the best-guess at values via quantiles. Passing your\n        own threshold values is simple:\n        \n        .. code:: python\n        \n            map.choropleth(geo_path=state_geo, data=state_data,\n                         columns=['State', 'Unemployment'],\n                         threshold_scale=[5, 6, 7, 8, 9, 10],\n                         key_on='feature.id',\n                         fill_color='BuPu', fill_opacity=0.7, line_opacity=0.5,\n                         legend_name='Unemployment Rate (%)',\n                         reset=True)\n            map.save('us_states.html')\n        \n        |states_2|\n        \n        `Live example <http://bl.ocks.org/wrobstory/5609856>`__\n        \n        By binding data via the Pandas DataFrame, different datasets can be\n        quickly visualized. In the following example, the ``df`` DataFrame\n        contains six columns with different economic data, a few of which we\n        will visualize:\n        \n        .. code:: python\n        \n            #Number of employed with auto scale\n            map_1 = folium.Map(location=[48, -102], zoom_start=3)\n            map_1.choropleth(geo_path=county_geo, data_out='data1.json', data=df,\n                           columns=['GEO_ID', 'Employed_2011'],\n                           key_on='feature.id',\n                           fill_color='YlOrRd', fill_opacity=0.7, line_opacity=0.3,\n                           topojson='objects.us_counties_20m')\n            map_1.save('map_1.html')\n        \n        |counties_1|\n        \n        `Live example <http://bl.ocks.org/wrobstory/5609889>`__\n        \n        .. code:: python\n        \n            #Unemployment with custom defined scale\n            map_2 = folium.Map(location=[40, -99], zoom_start=4)\n            map_2.choropleth(geo_path=county_geo, data_out='data2.json', data=df,\n                           columns=['GEO_ID', 'Unemployment_rate_2011'],\n                           key_on='feature.id',\n                           threshold_scale=[0, 5, 7, 9, 11, 13],\n                           fill_color='YlGnBu', line_opacity=0.3,\n                           legend_name='Unemployment Rate 2011 (%)',\n                           topojson='objects.us_counties_20m')\n            map_2.save('map_2.html')\n        \n        |counties_2|\n        \n        `Live example <http://bl.ocks.org/wrobstory/5609934>`__\n        \n        .. code:: python\n        \n            #Median Household income\n            map_3 = folium.Map(location=[40, -99], zoom_start=4)\n            map_3.choropleth(geo_path=county_geo, data_out='data3.json', data=df,\n                           columns=['GEO_ID', 'Median_Household_Income_2011'],\n                           key_on='feature.id',\n                           fill_color='PuRd', line_opacity=0.3,\n                           legend_name='Median Household Income 2011 ($)',\n                           topojson='objects.us_counties_20m')\n            map_3.save('map_3.html')\n        \n        |counties_3|\n        \n        `Live example <http://bl.ocks.org/wrobstory/5609959>`__\n        \n        Dependencies\n        ------------\n        \n        Jinja2\n        \n        Pandas (Map Data Binding only)\n        \n        Numpy (Map Data Binding only)\n        \n        Vincent (Map Data Binding only)\n        \n        Status\n        ------\n        \n        Beta\n        \n        Docs\n        ----\n        \n        https://folium.readthedocs.org/\n        \n        .. |Folium| image:: http://farm3.staticflickr.com/2860/8754661081_c40e5a214c_o.jpg\n        .. |baseOSM| image:: http://farm6.staticflickr.com/5334/8754817259_de071db265_c.jpg\n        .. |stamen| image:: http://farm3.staticflickr.com/2883/8755937912_1d9ef78118_c.jpg\n        .. |hood| image:: http://farm4.staticflickr.com/3666/8755937936_d7efbc6dee_c.jpg\n        .. |iconTest| image:: http://cl.ly/image/2b0l1K0v370P/icon_test.png\n        .. |circle| image:: http://farm9.staticflickr.com/8280/8755938394_9f491ef79f_c.jpg\n        .. |latlng| image:: http://farm4.staticflickr.com/3698/8755938152_14bc024bde_c.jpg\n        .. |waypoints| image:: http://farm6.staticflickr.com/5343/8754817433_2ecde65790_c.jpg\n        .. |polygon| image:: http://farm8.staticflickr.com/7405/8754817131_24285bff5f_c.jpg\n        .. |vincent| image:: http://farm4.staticflickr.com/3699/8754817119_4a14ebc3fe_c.jpg\n        .. |ice| image:: http://farm8.staticflickr.com/7335/8754817253_f32155f902_c.jpg\n        .. |states_1| image:: http://farm3.staticflickr.com/2837/8755937872_ed5ec8e854_c.jpg\n        .. |states_2| image:: http://farm9.staticflickr.com/8542/8754816951_752b8a7867_c.jpg\n        .. |counties_1| image:: http://farm4.staticflickr.com/3792/8755938318_bc82a81c64_c.jpg\n        .. |counties_2| image:: http://farm9.staticflickr.com/8140/8754817355_2bfea43ff5_c.jpg\n        .. |counties_3| image:: http://farm4.staticflickr.com/3755/8755938218_06fdc51d40_c.jpg\n        \n        0.3.0\n        ~~~~~\n        \n        - Switched to `leaflet 1.0.1` (juoceano #531 and ocefpaf #535)\n        - Added `continuous_world`, `world_copy_jump`, and `no_wrap` options (ocefpaf #508)\n        - Update font-awesome to 4.6.3 (ocefpaf #478)\n        - Added text path (talespaiva #451 and ocefpaf #474)\n        - More options added to `LayerControl` (qingkaikong #473)\n        - More options added to `fullscreen` plugin (qingkaikong #468)\n        - Added `ColorLine` object (bibmartin #449)\n        - Added highlight function to `GeoJSON`, and `Chrorpleth` (JoshuaCano #341)\n        - Added `fullscreen` plugin (sanga #437)\n        - Added `smooth_factor `option to `GeoJSON`, `TopoJSON` and `Choropleth` (JamesGardiner #428)\n        - `Map` object now accepts Leaflet global switches (sgvandijk #424)\n        - Added weight option to CircleMarker (palewire #581)\n        \n        Bug Fixes\n        \n        - Fixed image order (juoceano #536)\n        - Fixed Icon rotation (juoceano #530 and sseemayer #527)\n        - Fixed MIME type (text/plain) is not executable (talespaiva #440)\n        - Update Travis-CI testing to incorporate branca and fix notebook tests (ocefpaf #436)\n        - Removed MultiPolyLine and MultiPolygon, both are handled by PolyLine and PolyLine in leaflet 1.0.* (ocefpaf #554)\n        - Removed deprecated MapQuest tiles (HashCode55 #562)\n        \n        0.2.1\n        ~~~~~\n        Bugfix release\n        \n        - TopoJson.get_bounds() returns [lon,lat] instead of [lat,lon] (eddies #383)\n        - HeatMap was not passing \"name\" argument (eddies #380)\n        - Fix heatmap.fit_bounds (same bug as #383) (BibMartin #384)\n        - Fix WMS rendering (ocefpaf #404)\n        - Change Leaflet.awesome-markers URL (BibMartin #393)\n        \n        0.2.0\n        ~~~~~\n        Major changes to the API with the new plugin system,\n        and several new features in this version. For more information check the docs:\n        http://python-visualization.github.io/folium/\n        \n        - Added control_scale (BibMartin and jelmelk #355)\n        - WMS styles (ocefpaf #348)\n        - Docs! (BibMartin #344, #337, #329)\n        - No tile option (ocefpaf #330)\n        - GeoJSON and TopoJSON `style_function` (BibMartin #317 and #266)\n        - Colormaps (BibMartin # 300)\n        - Map CRS (BibMartin #297)\n        - GeoPandas drawing (BibMartin #296)\n        - Div Icons (BibMartin #250)\n        - CustomIcon (BibMartin #230)\n        - HeatMap (BibMartin #213)\n        \n        And many bug fixes.\n        See https://github.com/python-visualization/folium/issues?&q=milestone:v0.2.0+is:closed+label:bug\n        \n        0.1.6\n        ~~~~~\n        - Added Image Overlay. (andrewgiessel b625613)\n        - All popups can take a `popup_width` keyword to adjust the width in\n          text/HTML (ocefpaf #157).\n        - CAVEAT! Backwards incompatibly change: the keyword `width` in popups is now\n          `popup_width` to avoid confusion with map `width`.\n        \n        \n        0.1.5\n        ~~~~~\n        - Popups on lines. (themiurgo #122)\n        - Map auto bounds. (themiurgo #134)\n        - GeoJSON popup. (ocefpaf 7aad5e0)\n        - Added cartodb positron and dark_matter tiles (ocefpaf d4daee7)\n        - Forcing HTTPS when available. (ocefpaf c69ac89)\n        - Added Stamen Watercolor tiles. (ocefpaf 8c1f837)\n        - Added non-pixel width and height. (ocefpaf a87a449)\n        - Default map size is defined as non-pixel and equal to 100% of the window.\n          (ocefpaf dcaf575)\n        \n        Bug Fixes\n        \n        - Draw GeoJSON first. (ocefpaf d92bdbe)\n        - Removed keyword unnecessary `popup_on`. (themiurgo 204d722)\n        - Fixed MapQuest Open Aerial URL. (ocefpaf 5e787fa)\n        \n        \n        0.1.4\n        ~~~~~\n        - Popups allow unicode. (Anand Patil 545315a)\n        - Loading javascript over https. (Anand Patil ac9a4d6)\n        - Added `width` keyword to simple_popup. (ocefpaf 95325c4)\n        - Support multi_polyline. (Younggun Kim efbd1db)\n        - Added max and min zoom keywords. (ocefpaf 4ca4c92)\n        \n        Bug Fixes\n        \n        - Remove margins from leaflet-tiles. (Lennart Fricke 3c11433)\n        - Fix #50 template not found on Windows OSes. (ocefpaf 101daee)\n        - Fixed `add_wms_layer` py3k bug. (ocefpaf 154f0a5)\n        \n        \n        0.1.3\n        ~~~~~\n        - Bootstrap glyphicon marker icons.  @birdage\n        - Cluster marker group, and simple markers . (birdage 801d91c)\n        - WMS tile. (birdage 26f9668)\n        - Expanded color support to 253 with colorbrewer. (Adam Pah 3ba39ae)\n        - Port to python 3. (Pavel Tysliatski 5093e1b)\n        - Update geojson_template to Leaflet.js 0.7. (Justin Duke a917551)\n        - Update fol_template to Leaflet.js 0.7. (Justin Duke b328cec)\n        - Add support for lines. (Jacob Wasserman e3be077)\n        - Allow rendering w/ custom template. (Samat K Jain 1a85841)\n        - MapQuest Open tilesets. (Samat K Jain d536949)\n        \n        Bug Fixes\n        \n        - Vincent popups take padding into account. (Kyle Corbitt 26556fe)\n        - Simple popups correctly escape internal quotes. (Kyle Corbitt 20c979f)\n        - Add encoding specification.  @jmduke\n        - Reverted change to mathchColor. (Roy Keyes 70d7f5c)\n        - Changed no-data fill to null/no-fill, rather than #fff. (Rob Story 6ff80a6)\n        - Fixed issue with counties TopoJSON. (Rob Story cddaab3)\n        \n        \n        0.1.2\n        ~~~~~\n        - TopoJSON functionality. (Rob Story 5566b71)\n        - Vincent/Vega charts as popups. (Rob Story 4b7e402)\n        - GeoJSON overlays added. (Rob Story b5d9081)\n        - Click to add markers, popover Lat/Lng functionality. (Rob Story 9c809f9)\n        - Simple and Circle markers added. (Rob Story 181ac51)\n        - Initial commit. (Rob Story 6a43874)\n        \nKeywords: data visualization\nPlatform: UNKNOWN\nClassifier: Programming Language :: Python :: 2.7\nClassifier: Programming Language :: Python :: 3.3\nClassifier: Programming Language :: Python :: 3.4\nClassifier: Programming Language :: Python :: 3.5\nClassifier: Topic :: Scientific/Engineering :: GIS\nClassifier: Topic :: Scientific/Engineering :: Visualization\nClassifier: License :: OSI Approved :: MIT License\nClassifier: Development Status :: 5 - Production/Stable\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/python-visualization/folium",
    "keywords": "",
    "license": "Copyright (C) 2013, Rob Story",
    "maintainer": "",
    "maintainer_email": "",
    "name": "folium",
    "platform": "",
    "project_url": "https://pypi.org/project/folium/",
    "release_url": "https://pypi.org/project/folium/0.3.0/",
    "requires_python": "",
    "summary": "Make beautiful maps with Leaflet.js & Python",
    "version": "0.3.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "39d09958395a009720f540ca94418be4",
          "sha256": "bbdac5ec3424ee55bde4128853536860ba40263e0aa94c66d35abe483423de53"
        },
        "downloads": 1988,
        "filename": "folium-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "39d09958395a009720f540ca94418be4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26609,
        "upload_time": "2013-05-20T02:22:08",
        "url": "https://files.pythonhosted.org/packages/a6/0e/f80a68cfae77786fa676708a485452f84d6402f716974bf54bef4abf89f3/folium-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0ea470775b4dbff54eb4f6feb4ffa149",
          "sha256": "2bef3ca757bcb8a45e5850803fbc10594828e31dd7fa45e723e28a4c9c7f448c"
        },
        "downloads": 1925,
        "filename": "folium-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0ea470775b4dbff54eb4f6feb4ffa149",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26597,
        "upload_time": "2013-05-20T02:30:04",
        "url": "https://files.pythonhosted.org/packages/1e/fe/f70994b8214ff243696392c1abce03391e7cae0883e691c621ebcddcb0b3/folium-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fabdbb84fc72f95bafb4154077588082",
          "sha256": "44c0a2ad562525eaec708a7330a434df06651067d2786a6e3923bc6a6d4fd327"
        },
        "downloads": 4776,
        "filename": "folium-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fabdbb84fc72f95bafb4154077588082",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26528,
        "upload_time": "2013-05-20T06:07:13",
        "url": "https://files.pythonhosted.org/packages/17/0e/66b5ad607c40229cfcc2501a5a63ff39f684156b9be98a4afc35ea5ac493/folium-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c8db7e684a69a7e9c714fcac93859a9f",
          "sha256": "81abf013067096e3818d7775e0853b8ea982ee2c710689db9b7946611c963465"
        },
        "downloads": 2208,
        "filename": "folium-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c8db7e684a69a7e9c714fcac93859a9f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 52169,
        "upload_time": "2014-12-04T18:29:09",
        "url": "https://files.pythonhosted.org/packages/75/cb/3c9bae9cc47aaa4b249b5dc49b923c6ab80666b7768d85145b21391c11a3/folium-0.1.3.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b5e0c8eac6f92e9806b91eced8586047",
          "sha256": "6733a6a5e2b4bab21bc9a5b3074f691f74174615050f8dc3aacb79073d393b1c"
        },
        "downloads": 3875,
        "filename": "folium-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b5e0c8eac6f92e9806b91eced8586047",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 60544,
        "upload_time": "2015-04-01T19:22:00",
        "url": "https://files.pythonhosted.org/packages/ff/39/82e9f77b6f03447d8df5eb5f496f259685d22d445a88bde0a24b69e0fe39/folium-0.1.4.tar.gz"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "64bfb417ce53638a3f57245bcaf38215",
          "sha256": "9840670aa9473a3b8f58e44000e7a763f5b41b2eb4c35ddfda8aac5ea7938a65"
        },
        "downloads": 8779,
        "filename": "folium-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "64bfb417ce53638a3f57245bcaf38215",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 41757,
        "upload_time": "2015-08-13T13:15:29",
        "url": "https://files.pythonhosted.org/packages/1a/61/39cf57df965026a1ed1f3e71b1363923408201ee53848134a1f4f8c787d5/folium-0.1.5.tar.gz"
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "96e76012d2517a376f2805a4860f8d1e",
          "sha256": "c5bda5e01e034d7967ed1f65e47379f6dd305e0f460e3f765a50aef1a7b8fc0a"
        },
        "downloads": 4758,
        "filename": "folium-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "96e76012d2517a376f2805a4860f8d1e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 61066,
        "upload_time": "2015-11-09T20:37:37",
        "url": "https://files.pythonhosted.org/packages/67/0d/4b3f029ab20859c67042c61e5e222f41139726d82b9317f562c543bf2301/folium-0.1.6.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8425c871cf781eca194672f830cc337f",
          "sha256": "42dfb418da8895584d5ca05e142c110ff08d60afd62b999a77feb377bd097914"
        },
        "downloads": 453,
        "filename": "folium-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8425c871cf781eca194672f830cc337f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 67125,
        "upload_time": "2016-02-14T22:15:45",
        "url": "https://files.pythonhosted.org/packages/49/3c/2df9418aa57c4db77fa0e1b3dc40cce5c25a7f40386fe2e9435b7be0bbf5/folium-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "af353f2613127bc4cf64a346e550506f",
          "sha256": "6b267b43e573b4f1d6317501f612e5aef92d6965c454ebe8ab73f259d9859107"
        },
        "downloads": 9660,
        "filename": "folium-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "af353f2613127bc4cf64a346e550506f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 69966,
        "upload_time": "2016-04-02T19:07:32",
        "url": "https://files.pythonhosted.org/packages/72/dd/75ced7437bfa7cb9a88b96ee0177953062803c3b4cde411a97d98c35adaf/folium-0.2.1.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b1402cf863667998dace35416adcbe38",
          "sha256": "9730d742c47a3b38745869600394fd28411a562ee576de719d538858ff8bca7e"
        },
        "downloads": 882,
        "filename": "folium-0.3.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1402cf863667998dace35416adcbe38",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 71678,
        "upload_time": "2017-03-06T16:00:12",
        "url": "https://files.pythonhosted.org/packages/3a/fb/6b68c169cc2d143794ad4ff033404ad9501d0f11aff8076134a925b61cb0/folium-0.3.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "829e6712e7d85b9b7c4e534178d15e43",
          "sha256": "0eee32b11fe0aaad147c9a66bcfa61fe28023b799d20e3d0e0c42b4f60235688"
        },
        "downloads": 437,
        "filename": "folium-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "829e6712e7d85b9b7c4e534178d15e43",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 71653,
        "upload_time": "2017-03-06T16:00:14",
        "url": "https://files.pythonhosted.org/packages/aa/c9/4854805b80ab6d6ff98e4603f8555c0c70c5ce15e8ba2e8918db39c949ed/folium-0.3.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0261beb52db0a4b3bf75d2c40cb7db45",
          "sha256": "7729ddd6766b9c5dab17b3709e2387935fd5c655872f1cbab7b7036474415217"
        },
        "downloads": 71,
        "filename": "folium-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0261beb52db0a4b3bf75d2c40cb7db45",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 735141,
        "upload_time": "2017-03-06T16:00:17",
        "url": "https://files.pythonhosted.org/packages/04/8c/ac997b674b82a715df65cb1c99f94493cdd31eb46dd4cfbcf47d70ddd083/folium-0.3.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b1402cf863667998dace35416adcbe38",
        "sha256": "9730d742c47a3b38745869600394fd28411a562ee576de719d538858ff8bca7e"
      },
      "downloads": 882,
      "filename": "folium-0.3.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "b1402cf863667998dace35416adcbe38",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 71678,
      "upload_time": "2017-03-06T16:00:12",
      "url": "https://files.pythonhosted.org/packages/3a/fb/6b68c169cc2d143794ad4ff033404ad9501d0f11aff8076134a925b61cb0/folium-0.3.0-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "829e6712e7d85b9b7c4e534178d15e43",
        "sha256": "0eee32b11fe0aaad147c9a66bcfa61fe28023b799d20e3d0e0c42b4f60235688"
      },
      "downloads": 437,
      "filename": "folium-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "829e6712e7d85b9b7c4e534178d15e43",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 71653,
      "upload_time": "2017-03-06T16:00:14",
      "url": "https://files.pythonhosted.org/packages/aa/c9/4854805b80ab6d6ff98e4603f8555c0c70c5ce15e8ba2e8918db39c949ed/folium-0.3.0-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "0261beb52db0a4b3bf75d2c40cb7db45",
        "sha256": "7729ddd6766b9c5dab17b3709e2387935fd5c655872f1cbab7b7036474415217"
      },
      "downloads": 71,
      "filename": "folium-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0261beb52db0a4b3bf75d2c40cb7db45",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 735141,
      "upload_time": "2017-03-06T16:00:17",
      "url": "https://files.pythonhosted.org/packages/04/8c/ac997b674b82a715df65cb1c99f94493cdd31eb46dd4cfbcf47d70ddd083/folium-0.3.0.tar.gz"
    }
  ]
}