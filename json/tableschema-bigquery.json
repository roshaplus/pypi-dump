{
  "info": {
    "author": "Open Knowledge Foundation",
    "author_email": "info@okfn.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "tableschema-bigquery-py\n=======================\n\n| |Travis|\n| |Coveralls|\n| |PyPi|\n| |Gitter|\n\nGenerate and load BigQuery tables based on `Table\nSchema <http://specs.frictionlessdata.io/table-schema/>`__ descriptors.\n\nFeatures\n--------\n\n-  implements ``tableschema.Storage`` interface\n\nGetting Started\n---------------\n\nInstallation\n~~~~~~~~~~~~\n\nThe package use semantic versioning. It means that major versions could\ninclude breaking changes. It's highly recommended to specify ``package``\nversion range in your ``setup/requirements`` file e.g.\n``package>=1.0,<2.0``.\n\n.. code:: bash\n\n    pip install tableschema-bigquery\n\nTo start using Google BigQuery service:\n\n-  Create a new project -\n   `link <https://console.developers.google.com/home/dashboard>`__\n-  Create a service key -\n   `link <https://console.developers.google.com/apis/credentials>`__\n-  Download json credentials and set ``GOOGLE_APPLICATION_CREDENTIALS``\n   environment variable\n\nExamples\n~~~~~~~~\n\nCode examples in this readme requires Python 3.3+ interpreter. You could\nsee even more example in\n`examples <https://github.com/frictionlessdata/tableschema-bigquery-py/tree/master/examples>`__\ndirectory.\n\n.. code:: python\n\n    import io\n    import os\n    import json\n    from tableschema import Table\n    from apiclient.discovery import build\n    from oauth2client.client import GoogleCredentials\n\n    # Prepare BigQuery credentials\n    os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = '.credentials.json'\n    credentials = GoogleCredentials.get_application_default()\n    service = build('bigquery', 'v2', credentials=credentials)\n    project = json.load(io.open('.credentials.json', encoding='utf-8'))['project_id']\n\n    # Load and save table to BigQuery\n    table = Table('data.csv', schema='schema.json')\n    table.save('data', storage='bigquery', service=service, project=project, dataset='dataset')\n\nStorage\n~~~~~~~\n\nPackage implements `Tabular\nStorage <https://github.com/frictionlessdata/tableschema-py#storage>`__\ninterface (see full documentation on the link):\n\n|Storage|\n\nThis driver provides an additional API:\n\n``Storage(service, project, dataset, prefix='')``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  ``service (object)`` - BigQuery ``Service`` object\n-  ``project (str)`` - BigQuery project name\n-  ``dataset (str)`` - BigQuery dataset name\n-  ``prefix (str)`` - prefix for all buckets\n\nContributing\n------------\n\nThe project follows the `Open Knowledge International coding\nstandards <https://github.com/okfn/coding-standards>`__.\n\n| Recommended way to get started is to create and activate a project\nvirtual environment.\n| To install package and development dependencies into active\nenvironment:\n\n::\n\n    $ make install\n\nTo run tests with linting and coverage:\n\n.. code:: bash\n\n    $ make test\n\n| For linting ``pylama`` configured in ``pylama.ini`` is used. On this\nstage it's already\n| installed into your environment and could be used separately with more\nfine-grained control\n| as described in documentation -\nhttps://pylama.readthedocs.io/en/latest/.\n\nFor example to sort results by error type:\n\n.. code:: bash\n\n    $ pylama --sort <path>\n\n| For testing ``tox`` configured in ``tox.ini`` is used.\n| It's already installed into your environment and could be used\nseparately with more fine-grained control as described in documentation\n- https://testrun.org/tox/latest/.\n\n| For example to check subset of tests against Python 2 environment with\nincreased verbosity.\n| All positional arguments and options after ``--`` will be passed to\n``py.test``:\n\n.. code:: bash\n\n    tox -e py27 -- -v tests/<path>\n\n| Under the hood ``tox`` uses ``pytest`` configured in ``pytest.ini``,\n``coverage``\n| and ``mock`` packages. This packages are available only in tox\nenvionments.\n\nChangelog\n---------\n\nHere described only breaking and the most important changes. The full\nchangelog and documentation for all released versions could be found in\nnicely formatted `commit\nhistory <https://github.com/frictionlessdata/tableschema-bigquery-py/commits/master>`__.\n\nv0.x\n~~~~\n\nInitial driver implementation.\n\n.. |Travis| image:: https://img.shields.io/travis/frictionlessdata/tableschema-bigquery-py/master.svg\n   :target: https://travis-ci.org/frictionlessdata/tableschema-bigquery-py\n.. |Coveralls| image:: http://img.shields.io/coveralls/frictionlessdata/tableschema-bigquery-py.svg?branch=master\n   :target: https://coveralls.io/r/frictionlessdata/tableschema-bigquery-py?branch=master\n.. |PyPi| image:: https://img.shields.io/pypi/v/tableschema-bigquery.svg\n   :target: https://pypi.python.org/pypi/tableschema-bigquery\n.. |Gitter| image:: https://img.shields.io/gitter/room/frictionlessdata/chat.svg\n   :target: https://gitter.im/frictionlessdata/chat\n.. |Storage| image:: https://raw.githubusercontent.com/frictionlessdata/tableschema-py/master/data/storage.png\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/frictionlessdata/jsontableschema-bigquery-py",
    "keywords": "frictionless data",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tableschema-bigquery",
    "platform": "",
    "project_url": "https://pypi.org/project/tableschema-bigquery/",
    "release_url": "https://pypi.org/project/tableschema-bigquery/0.6.0/",
    "requires_dist": [
      "tox; extra == 'develop'",
      "pylama; extra == 'develop'",
      "unicodecsv (>=0.14,<2.0)",
      "tabulator (<2.0,>=1.0)",
      "tableschema (<2.0,>=1.0)",
      "six (>=1.9,<2.0)",
      "python-slugify (<2.0,>=1.2)",
      "google-api-python-client (<2.0,>=1.5)"
    ],
    "requires_python": "",
    "summary": "Generate BigQuery tables, load and extract data, based on JSON Table Schema descriptors.",
    "version": "0.6.0"
  },
  "releases": {
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "326a7a73d1fe6cb1fefd833b7612f895",
          "sha256": "74eae4236e9a43b4235453e05fee0f29136b840428d203f367c9dabc08c9e9fb"
        },
        "downloads": 0,
        "filename": "tableschema_bigquery-0.6.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "326a7a73d1fe6cb1fefd833b7612f895",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 11099,
        "upload_time": "2017-09-26T13:40:27",
        "url": "https://files.pythonhosted.org/packages/cd/c4/9e4b7fdac97ebd900f247df38a1fc9068ba63430d06e6e6a81787472d389/tableschema_bigquery-0.6.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b22f76e45769c812a925692c163de3a9",
          "sha256": "95f0f1486a61c875d6e64be7b845dbb5ca7cbda3d8a2fe08e8c5a89f222b69f9"
        },
        "downloads": 0,
        "filename": "tableschema-bigquery-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b22f76e45769c812a925692c163de3a9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9200,
        "upload_time": "2017-09-26T13:40:28",
        "url": "https://files.pythonhosted.org/packages/cc/67/2c1970b78510ff7e42c330089e5801cb7783a8a76aefd4d30b88305fc4d4/tableschema-bigquery-0.6.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "326a7a73d1fe6cb1fefd833b7612f895",
        "sha256": "74eae4236e9a43b4235453e05fee0f29136b840428d203f367c9dabc08c9e9fb"
      },
      "downloads": 0,
      "filename": "tableschema_bigquery-0.6.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "326a7a73d1fe6cb1fefd833b7612f895",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 11099,
      "upload_time": "2017-09-26T13:40:27",
      "url": "https://files.pythonhosted.org/packages/cd/c4/9e4b7fdac97ebd900f247df38a1fc9068ba63430d06e6e6a81787472d389/tableschema_bigquery-0.6.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "b22f76e45769c812a925692c163de3a9",
        "sha256": "95f0f1486a61c875d6e64be7b845dbb5ca7cbda3d8a2fe08e8c5a89f222b69f9"
      },
      "downloads": 0,
      "filename": "tableschema-bigquery-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b22f76e45769c812a925692c163de3a9",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9200,
      "upload_time": "2017-09-26T13:40:28",
      "url": "https://files.pythonhosted.org/packages/cc/67/2c1970b78510ff7e42c330089e5801cb7783a8a76aefd4d30b88305fc4d4/tableschema-bigquery-0.6.0.tar.gz"
    }
  ]
}