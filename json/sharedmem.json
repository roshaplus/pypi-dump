{
  "info": {
    "author": "Yu Feng",
    "author_email": "rainwoodman@gmail.com",
    "bugtrack_url": "",
    "classifiers": [],
    "description": "Dispatch your trivially parallizable jobs with sharedmem.\n\n.. image:: https://api.travis-ci.org/rainwoodman/sharedmem.svg\n    :alt: Build Status\n    :target: https://travis-ci.org/rainwoodman/sharedmem/\n\nNow also supports Python 3.\n\n- sharedmem.empty creates numpy arrays shared by child processes.\n\n- sharedmem.MapReduce dispatches work to child processes, allowing work functions\n  defined in nested scopes.\n\n- sharedmem.MapReduce.ordered and sharedmem.MapReduce.critical implements\n  the equivelant concepts as OpenMP ordered and OpenMP critical sections.\n\n- Exceptions are properly handled, including unpicklable exceptions. Unexpected death\n  of child processes (Slaves) is handled in a graceful manner.\n\nFunctions and variables are inherited from a :code:`fork` syscall and the copy-on-write\nmechanism, except sharedmem variables which are writable from both child processes or the\nmain process.  Pickability of objects is not a concern. \n\nUsual limitations of :code:`fork` do apply. \nsharedmem.MapReduce is easier to use than multiprocessing.Pool, \nat the cost of not supporting Windows.\n\nFor documentation, please refer to http://rainwoodman.github.io/sharedmem .\n\nHere we provide two simple examples to illustrate the usage:\n\n.. code-block :: python\n\n    \"\"\" \n        Integrate [0, ... 1.0) with rectangle rule. \n        Compare results from \n        1. direct sum of 'xdx' (filled by subprocesses)\n        2. 'shmsum', cummulated by partial sums on each process\n        3. sum of partial sums from each process.\n\n    \"\"\"\n    xdx = sharedmem.empty(1024 * 1024 * 128, dtype='f8')\n    shmsum = sharedmem.empty((), dtype='f8')\n\n    shmsum[...] = 0.0\n\n    with sharedmem.MapReduce() as pool:\n\n        def work(i):\n            s = slice (i, i + chunksize)\n            start, end, step = s.indices(len(xdx))\n\n            dx = 1.0 / len(xdx)\n\n            myxdx = numpy.arange(start, end, step) \\\n                    * 1.0 / len(xdx) * dx\n\n            xdx[s] = myxdx\n\n            a = xdx[s].sum(dtype='f8')\n\n            with pool.critical:\n                shmsum[...] += a\n\n            return i, a\n\n        def reduce(i, a):\n            # print('chunk', i, 'done', 'local sum', a)\n            return a\n\n        chunksize = 1024 * 1024\n\n        r = pool.map(work, range(0, len(xdx), chunksize), reduce=reduce)\n\n    assert_almost_equal(numpy.sum(r, dtype='f8'), shmsum)\n    assert_almost_equal(numpy.sum(xdx, dtype='f8'), shmsum)\n\n.. code-block :: python\n\n    \"\"\" \n        An example word counting program. The parallelism is per line.\n\n        In reality, the parallelism shall be at least on a file level to\n        benefit from sharedmem / multiprocessing.\n        \n    \"\"\"\n    word_count = {\n            'sharedmem': 0,\n            'pool': 0,\n            }\n\n    with sharedmem.MapReduce() as pool:\n\n        def work(line):\n            # create a fresh local counter dictionary\n            my_word_count = dict([(word, 0) for word in word_count])\n\n            for word in line.replace('.', ' ').split():\n                if word in word_count:\n                    my_word_count[word] += 1\n\n            return my_word_count\n\n        def reduce(her_word_count):\n            for word in word_count:\n                word_count[word] += her_word_count[word]\n\n        pool.map(work, file(__file__, 'r').readlines(), reduce=reduce)\n\n        parallel_result = dict(word_count)\n\n        # establish the ground truth from the sequential counter\n        sharedmem.set_debug(True)\n\n        for word in word_count:\n            word_count[word] = 0\n\n        pool.map(work, file(__file__, 'r').readlines(), reduce=reduce)\n        sharedmem.set_debug(False)\n\n    for word in word_count:\n        assert word_count[word] == parallel_result[word]\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/rainwoodman/sharedmem",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sharedmem",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/sharedmem/",
    "release_url": "https://pypi.org/project/sharedmem/0.3.5/",
    "requires_python": "",
    "summary": "Dispatch your trivially parallizable jobs with sharedmem.",
    "version": "0.3.5"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "34d9e10b79619ba68ef9c5d62d1bcc46",
          "sha256": "638aa58d7ab6b2030c7aa2941faa00d298cb55480853f68bcdd49a9774646b1b"
        },
        "downloads": 1596,
        "filename": "sharedmem-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "34d9e10b79619ba68ef9c5d62d1bcc46",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13202,
        "upload_time": "2015-07-31T19:03:29",
        "url": "https://files.pythonhosted.org/packages/8f/72/4535d3b6ac0bc1b8e6556b65108f67ce1de0dea947b6a266fbb6eb5b4579/sharedmem-0.3.tar.gz"
      }
    ],
    "0.3": [],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f147d4f49f7d70d4e4aac0ccb5988b72",
          "sha256": "468d0c601b0fe5853563052f5e041c2f5d40987a59b67d94f91705619222068b"
        },
        "downloads": 696,
        "filename": "sharedmem-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f147d4f49f7d70d4e4aac0ccb5988b72",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13452,
        "upload_time": "2015-11-19T07:24:10",
        "url": "https://files.pythonhosted.org/packages/e0/40/eead5d2383e49edf319b884d9145c3fa89aea751094074f5456cb1c980ee/sharedmem-0.3.1.tar.gz"
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e7512bd7e7ebd72467cd754b6777a7cc",
          "sha256": "0f52ee5357d8ed566c2d33a5c1d2fba7d49dd79b4563a10e92465bb9e456ca7e"
        },
        "downloads": 915,
        "filename": "sharedmem-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e7512bd7e7ebd72467cd754b6777a7cc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13750,
        "upload_time": "2016-01-04T21:49:25",
        "url": "https://files.pythonhosted.org/packages/ca/83/6e1d335e460c3b9f8e7fc12689ce1a29aa2d279063a2998687e71d3c8669/sharedmem-0.3.2.tar.gz"
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5946fa07c5b1c5bdb1416726d8c8d1a9",
          "sha256": "d4a9e8c719f76fa6f1b1edcde6acd1eeee594c963b58cc06ff65d8782c418536"
        },
        "downloads": 454,
        "filename": "sharedmem-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5946fa07c5b1c5bdb1416726d8c8d1a9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14965,
        "upload_time": "2016-03-23T18:09:14",
        "url": "https://files.pythonhosted.org/packages/14/5e/8850001f6994e6aed605a3c65ad8d906861a557ed2b962d728d2efac2456/sharedmem-0.3.3.tar.gz"
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cc7b5c54484024f726cb5ae03451581c",
          "sha256": "a6f27e8b794fd949c2c46c39061c4bd5a38d0b82f019efb2b00a256af9e2f608"
        },
        "downloads": 217,
        "filename": "sharedmem-0.3.4-py2.7.egg",
        "has_sig": false,
        "md5_digest": "cc7b5c54484024f726cb5ae03451581c",
        "packagetype": "bdist_egg",
        "python_version": "2.7",
        "size": 36044,
        "upload_time": "2016-10-25T22:02:30",
        "url": "https://files.pythonhosted.org/packages/03/83/0ef9a4ef0e50d3786b1fba52ead19eece79b4e354e696f1ac6225bc65f1d/sharedmem-0.3.4-py2.7.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "281e3bf03fd9720aa2328e7a90ea36ae",
          "sha256": "68c01737ec7af8a3c70c3a718af2dafeba3687bbe86b78363e01caf2e32033d2"
        },
        "downloads": 221,
        "filename": "sharedmem-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "281e3bf03fd9720aa2328e7a90ea36ae",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15531,
        "upload_time": "2016-10-25T22:02:32",
        "url": "https://files.pythonhosted.org/packages/e4/cc/8fc6934a0bf25e292393d5657ea0c391121d44ae26e64d8bd4f6060c6c9b/sharedmem-0.3.4.tar.gz"
      }
    ],
    "0.3.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "227c441e104cd9ed89dcd7b6fa1878bb",
          "sha256": "852129b54d57a06c3354e67b4b1472104c4046823f6f76413d9db4a8ac4f4af6"
        },
        "downloads": 228,
        "filename": "sharedmem-0.3.5-py2.7.egg",
        "has_sig": false,
        "md5_digest": "227c441e104cd9ed89dcd7b6fa1878bb",
        "packagetype": "bdist_egg",
        "python_version": "2.7",
        "size": 36046,
        "upload_time": "2016-10-25T22:26:31",
        "url": "https://files.pythonhosted.org/packages/60/66/79909b93bacc8c2be74f7be650f00b5ea4d819c3f88524ce028e16c1f797/sharedmem-0.3.5-py2.7.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1c6341087ec9897daa5ac4e8418b86ed",
          "sha256": "81f89ccbdf7156d954538000180638bd51b321bba6fea919339255192a1a24f3"
        },
        "downloads": 402,
        "filename": "sharedmem-0.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1c6341087ec9897daa5ac4e8418b86ed",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15527,
        "upload_time": "2016-10-25T22:26:34",
        "url": "https://files.pythonhosted.org/packages/a4/cd/9e0ff25ba14e17682e4a474dfd480c3c454ef5edc885c7a9c16d2e9a3c3e/sharedmem-0.3.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "227c441e104cd9ed89dcd7b6fa1878bb",
        "sha256": "852129b54d57a06c3354e67b4b1472104c4046823f6f76413d9db4a8ac4f4af6"
      },
      "downloads": 228,
      "filename": "sharedmem-0.3.5-py2.7.egg",
      "has_sig": false,
      "md5_digest": "227c441e104cd9ed89dcd7b6fa1878bb",
      "packagetype": "bdist_egg",
      "python_version": "2.7",
      "size": 36046,
      "upload_time": "2016-10-25T22:26:31",
      "url": "https://files.pythonhosted.org/packages/60/66/79909b93bacc8c2be74f7be650f00b5ea4d819c3f88524ce028e16c1f797/sharedmem-0.3.5-py2.7.egg"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "1c6341087ec9897daa5ac4e8418b86ed",
        "sha256": "81f89ccbdf7156d954538000180638bd51b321bba6fea919339255192a1a24f3"
      },
      "downloads": 402,
      "filename": "sharedmem-0.3.5.tar.gz",
      "has_sig": false,
      "md5_digest": "1c6341087ec9897daa5ac4e8418b86ed",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15527,
      "upload_time": "2016-10-25T22:26:34",
      "url": "https://files.pythonhosted.org/packages/a4/cd/9e0ff25ba14e17682e4a474dfd480c3c454ef5edc885c7a9c16d2e9a3c3e/sharedmem-0.3.5.tar.gz"
    }
  ]
}