{
  "info": {
    "author": "Robbert Harms",
    "author_email": "robbert.harms@maastrichtuniversity.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Environment :: X11 Applications :: Qt",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering"
    ],
    "description": "############################\nMRI Coil-reconstruct Toolbox\n############################\nThe MRI Coil-reconstruct Toolbox, MCT, is a small toolbox for combining the channels of a multi-channel MRI acquisition.\nWhere possible, this toolbox uses GPU accelerated routines to speed-up the processing.\nFor example, the weights of the STARC (STAbility-weighted Rf-coil Combination) reconstruction model are fitted using the GPU or using multi-threaded CPU.\nAt the moment MCT supports rSoS (root Sum Of Squares), rCovSoS (same as SoS but than with additional usage of a noise covariance matrix) and STARC.\n\n\n**Beta version notice**\n\nPlease note that this software is still in beta and that the user interface may change over versions.\n\n\n*******\nSummary\n*******\n* features multiple coil combine / reconstruction methods\n* command line and python interface\n* GPU/multicore-CPU accelerated STARC\n* Free Open Source Software: LGPL v3 license\n* Python and OpenCL based\n* Full documentation: https://mct.readthedocs.io/\n* Project home: https://github.com/cbclab/MCT\n* Uses the `GitLab workflow <https://docs.gitlab.com/ee/workflow/gitlab_flow.html>`_\n* Tags: MRI, coil-reconstruct, image reconstruction, opencl, python\n\n\n*******************\nData reconstruction\n*******************\nThis software contains various reconstruction methods that can be used to combine your channels into one (or more) volumes.\nNot all reconstruction methods may be applicable to your data, for example the STARC [1] method only works when dealing with fMRI data.\n\nConsole\n=======\nTo reconstruct your data using the command line, after installation you can use:\n\n.. code-block:: console\n\n    $ mct-reconstruct <method> {0..15}.nii\n\nWhere method at the moment is one of \"rSoS\", \"rCovSoS\" or \"STARC\".\nSome methods require more information to combine the channels, please see the full documentation for this.\n\nIf you only want to use certain volumes of your data, use the \"--volumes\" or \"-v\" switch on the command line:\n\n.. code-block:: console\n\n    $ mct-reconstruct <method> {0..15}.nii -v odd\n\nTo use (for example) only the odd volumes. Available options are \"odd\", \"even\" or a list of indices, such as \"0 2 4 5\" (space separated).\n\n\nPython\n======\nIt is also possible to reconstruct your data using the Python API, for example:\n\n\n.. code-block:: python\n\n    from mct.reconstruction_methods import rSoS, rCovSoS, STARC\n\n    input_path = '/data/'\n    output_path = '/data/output/'\n    nmr_channels = 16\n    input_filenames = [input_path + str(ind)\n                       for ind in range(nmr_channels)]\n\n    method = rSoS(input_filenames)\n    method.reconstruct(output_path, volumes='odd')\n\nThis would reconstruct your data using rSoS using only the odd volumes.\n\n\nReferences:\n===========\n    1) Simple approach to improve time series fMRI stability: STAbility-weighted Rf-coil Combination (STARC), L. Huber et al. ISMRM 2017 abstract #0586.\n\n\n************************\nQuick installation guide\n************************\nThe basic requirements for MCT are:\n\n* Python 3.x (recommended) or Python 2.7\n* OpenCL 1.2 (or higher) support in GPU driver or CPU runtime\n\n\n**Linux**\n\nFor Ubuntu >= 16 you can use:\n\n* ``sudo add-apt-repository ppa:robbert-harms/cbclab``\n* ``sudo apt-get update``\n* ``sudo apt-get install python3-mct``\n\n\nFor Debian users and Ubuntu < 16 users, install MDT with:\n\n* ``sudo apt-get install python3 python3-pip python3-pyopencl python3-numpy python3-nibabel python3-pyqt5 python3-matplotlib python3-six python3-yaml python3-argcomplete libpng-dev libfreetype6-dev libxft-dev``\n* ``sudo pip3 install mct``\n\nNote that ``python3-nibabel`` may need NeuroDebian to be available on your machine. An alternative is to use ``pip3 install nibabel`` instead.\n\n\n**Windows**\n\nThe installation on Windows is a little bit more complex and the following is only a quick reference guide.\nTo save duplication of information and since this package depends on MDT and MOT, the complete install instructions can be copied from\n`the MDT documentation <https://maastrichtdiffusiontoolbox.readthedocs.org>`_.\nAfter following that guide, installation of MCT is simply done using ``pip install mct``.\nThe quick overview is:\n\n* Install Anaconda Python 3.5\n* Install MOT using the guide at https://mot.readthedocs.io\n* Open an Anaconda shell and type: ``pip install mct``\n\n\n**Mac**\n\n* Install Anaconda Python 3.5\n* Open a terminal and type: ``pip install mct``\n\nPlease note that Mac support is experimental due to the unstable nature of the OpenCL drivers in Mac, that is, users running MDT with the GPU as selected device may experience crashes.\nRunning MDT in the CPU seems to work though.\n\n\nFor more information and full installation instructions please see the documentation of the MDT package https://maastrichtdiffusiontoolbox.readthedocs.org\n\n\n*******\nRoadmap\n*******\n1) Add a few more reconstruction methods like:\n\n    * Roemer\n    * GRAPPA\n    * SENSE\n\n2) Improve the data handling and memory usage.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/robbert-harms/mct",
    "keywords": "mct",
    "license": "LGPL v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mct",
    "platform": "",
    "project_url": "https://pypi.org/project/mct/",
    "release_url": "https://pypi.org/project/mct/0.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "The MRI Coil-reconstruct Toolbox",
    "version": "0.2"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e2736db4301917fbd466874724f79930",
          "sha256": "3696861bd92a6a52e254da881309f98c499153c8926a48971c3039c6a620561d"
        },
        "downloads": 0,
        "filename": "mct-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2736db4301917fbd466874724f79930",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 23392,
        "upload_time": "2017-09-12T12:21:13",
        "url": "https://files.pythonhosted.org/packages/61/30/e7a5620fac3f48ff776e5b6548962e8822d3791e5784a7bbe5cda4750f67/mct-0.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "994ff2b69d13e679edfbca1fe90fff19",
          "sha256": "a539509a80ec5f79fd2084188d5385cb6d85f5f4eb63b68e69830cf3901f0552"
        },
        "downloads": 0,
        "filename": "mct-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "994ff2b69d13e679edfbca1fe90fff19",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25754,
        "upload_time": "2017-09-12T12:21:11",
        "url": "https://files.pythonhosted.org/packages/4b/18/71ffcc10e61ac352237425dff8a3191848e7c9627ed15f38c8842fbcb81f/mct-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9fff67df84d2783f76657f5d8992f933",
          "sha256": "e13a827228da00873804678b0633c679eb4dcb794dfa7853347ad10a623ee35d"
        },
        "downloads": 0,
        "filename": "mct-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9fff67df84d2783f76657f5d8992f933",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 24556,
        "upload_time": "2017-09-12T12:45:34",
        "url": "https://files.pythonhosted.org/packages/75/86/6c080b8c3a64589a1a1a9761b2f363ba8c93aeea329598375d100cbca4b1/mct-0.1.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3e017d5e3e99ba5c7bc527dc8363bc36",
          "sha256": "1cfb08c3b4487f308906b0946e0925c8d09531d4d174262302feeecf66171ed1"
        },
        "downloads": 0,
        "filename": "mct-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3e017d5e3e99ba5c7bc527dc8363bc36",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26324,
        "upload_time": "2017-09-12T12:45:31",
        "url": "https://files.pythonhosted.org/packages/9e/b1/60f82174f2feb24be6621f0e651c1471b6fb7811b7614fdd848579b34b4b/mct-0.1.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1610703485eb387aa548f6e834736e52",
          "sha256": "becee3c70f12711b175fe2f6ccfc8a0ad9b6aa8d8d4f75392336ad2893a582f3"
        },
        "downloads": 0,
        "filename": "mct-0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1610703485eb387aa548f6e834736e52",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 29193,
        "upload_time": "2017-09-22T19:07:15",
        "url": "https://files.pythonhosted.org/packages/72/0f/8df0558a4aa7b9e8dacf06dc3c8aa669c2d7f4c25a362ad8ccf51b199f0a/mct-0.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "80a8ce768a989550e82591698355b438",
          "sha256": "71d53f9e0a9ceffdb529a214e3aa8c33e8b2005302094ab9d57a711f72b2307a"
        },
        "downloads": 0,
        "filename": "mct-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "80a8ce768a989550e82591698355b438",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28388,
        "upload_time": "2017-09-22T19:07:13",
        "url": "https://files.pythonhosted.org/packages/15/8a/b04ef9372ef6bc5e095b62c7cde59d4c8fb1f74f62da6fde34acfcb659d6/mct-0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "1610703485eb387aa548f6e834736e52",
        "sha256": "becee3c70f12711b175fe2f6ccfc8a0ad9b6aa8d8d4f75392336ad2893a582f3"
      },
      "downloads": 0,
      "filename": "mct-0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1610703485eb387aa548f6e834736e52",
      "packagetype": "bdist_wheel",
      "python_version": "3.5",
      "size": 29193,
      "upload_time": "2017-09-22T19:07:15",
      "url": "https://files.pythonhosted.org/packages/72/0f/8df0558a4aa7b9e8dacf06dc3c8aa669c2d7f4c25a362ad8ccf51b199f0a/mct-0.2-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "80a8ce768a989550e82591698355b438",
        "sha256": "71d53f9e0a9ceffdb529a214e3aa8c33e8b2005302094ab9d57a711f72b2307a"
      },
      "downloads": 0,
      "filename": "mct-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "80a8ce768a989550e82591698355b438",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 28388,
      "upload_time": "2017-09-22T19:07:13",
      "url": "https://files.pythonhosted.org/packages/15/8a/b04ef9372ef6bc5e095b62c7cde59d4c8fb1f74f62da6fde34acfcb659d6/mct-0.2.tar.gz"
    }
  ]
}