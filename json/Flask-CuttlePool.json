{
  "info": {
    "author": "Spencer Mitchell",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "################\nFlask-CuttlePool\n################\n\nFlask-CuttlePool provides a convenient interface for using `CuttlePool\n<https://github.com/smitchell556/cuttlepool>`_ with Flask.\n\nHow-to Guide\n============\n\nIf you haven't read the `How-to Guide\n<https://github.com/smitchell556/cuttlepool#how-to-guide>`_ for CuttlePool, you\nreally should before going any further. ``FlaskCuttlePool``\n\n``FlaskCuttlePool`` should be subclassed in the same way. The only difference in\nuse is how the pool is initialized and how connections are returned to the\npool. ``FlaskCuttlePool`` accepts retains all the same ``__init__()``\nparameters as ``CuttlePool``. Assume we have the following pool class (and an\napp object of course) ::\n\n  import sqlite3\n\n  from flask import Flask\n  from flask_cuttlepool import FlaskCuttlePool\n\n  class SQLitePool(FlaskCuttlePool):\n       def normalize_connection(self, connection):\n           connection.row_factory = None\n       def ping(self, connection):\n           try:\n               rv = connection.execute('SELECT 1').fetchall()\n               return (1,) in rv\n           except sqlite3.Error:\n               return False\n\n  app = Flask(__name__)\n\n\nThere are two ways to set up a pool object. On pool initialization ::\n\n  pool = SQLitePool(sqlite3.connect, app=app, database='ricks_lab')\n\nor using ``init_app()`` explicitly ::\n\n  pool = SQLitePool(sqlite3.connect, database='ricks_lab')\n  pool.init_app(app)\n\n``init_app()`` also accepts connection arguments for the underlying SQL driver.\nSo if the database name was stored in ``app.config`` and ``app`` wasn't\ninstantiated until after ``SQLitePool``, set up would look like this ::\n\n  pool = SQLitePool(sqlite3.connect)\n  ...  # additional set up code\n  app = Flask(__name__)\n  app.from_pyfile('config.cfg')\n  pool.init_app(app, database=app.config['DATABASE'])\n\nNow the pool can be used as normal. Any calls to ``get_connection()`` will\nstore the connection in the application context and the connection will be\nreturned to the pool when the application context is torn down. If a connection\nis stored on the application context, calls to ``get_connection()`` will return\nthat connection. There is no need to call ``close()`` on the\n``PoolConnection()`` object, although it's ok if the connection is explicitly\nclosed.\n\nIf for some reason, you do not want to store the connection on the application\ncontext or you need multiple connections at the same time,\n``get_fresh_connection()`` will get a connection from the pool and won't store\nit on the application context. Any connection retrieved from\n``get_fresh_connection()`` should be explicitly closed.\n\nFAQ\n===\n\nThese questions are related to Flask-CuttlePool only, check the `FAQ\n<https://github.com/smitchell556/cuttlepool#faq>`_ for CuttlePool if you don't\nfind your answers here.\n\nHow do I install it?\n--------------------\n\n``pip install git+https://github.com/smitchell556/flask-cuttlepool.git``\n\nContributing\n------------\n\nIt's highly recommended to develop in a virtualenv.\n\nFork the repository.\n\nClone the repository::\n\n  git clone https://github.com/<your_username>/flask-cuttlepool.git\n\nInstall the package in editable mode::\n\n  cd flask-cuttlepool\n  pip install -e .[dev]\n\nNow you're set. See the next section for running tests.\n\nRunning the tests\n-----------------\n\nTests can be run with the command ``pytest``.\n\nWhere can I get help?\n---------------------\n\nIf you haven't read the How-to guide above, please do that first. Otherwise,\ncheck the `issue tracker\n<https://github.com/smitchell556/flask-cuttlepool/issues>`_. Your issue may be\naddressed there and if it isn't please file an issue :)\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/smitchell556/flask-cuttlepool",
    "keywords": "",
    "license": "BSD 3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Flask-CuttlePool",
    "platform": "any",
    "project_url": "https://pypi.org/project/Flask-CuttlePool/",
    "release_url": "https://pypi.org/project/Flask-CuttlePool/0.1.0/",
    "requires_dist": [
      "pytest; extra == 'dev'",
      "flask",
      "cuttlepool (>=0.5.1)"
    ],
    "requires_python": "",
    "summary": "A Flask extension for CuttlePool",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3f6b55eb0235e2f43aea38a02d17a835",
          "sha256": "e369305a9a092ad68572ef9db772b0025e2a654034696e6db716a3c3cf99475b"
        },
        "downloads": -1,
        "filename": "Flask_CuttlePool-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f6b55eb0235e2f43aea38a02d17a835",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 6958,
        "upload_time": "2018-01-16T02:14:29",
        "url": "https://files.pythonhosted.org/packages/d4/09/ac771a7a0cd54d8d84e11c1be3495da287506b36d8988d2c9bce45c7af90/Flask_CuttlePool-0.1.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5ad1db5fd1d01e58e6f808e98620353f",
          "sha256": "b03204734f641f01b1a67b7bf943ad49a1265aad1be16350f88417db2e85f2a6"
        },
        "downloads": -1,
        "filename": "Flask-CuttlePool-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5ad1db5fd1d01e58e6f808e98620353f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4569,
        "upload_time": "2018-01-16T02:14:55",
        "url": "https://files.pythonhosted.org/packages/c3/fd/e92deb665f8e05e78e9f6b0cbbee521f9e0cb7ad32314d586ed6eb90b47c/Flask-CuttlePool-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "3f6b55eb0235e2f43aea38a02d17a835",
        "sha256": "e369305a9a092ad68572ef9db772b0025e2a654034696e6db716a3c3cf99475b"
      },
      "downloads": -1,
      "filename": "Flask_CuttlePool-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3f6b55eb0235e2f43aea38a02d17a835",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 6958,
      "upload_time": "2018-01-16T02:14:29",
      "url": "https://files.pythonhosted.org/packages/d4/09/ac771a7a0cd54d8d84e11c1be3495da287506b36d8988d2c9bce45c7af90/Flask_CuttlePool-0.1.0-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "5ad1db5fd1d01e58e6f808e98620353f",
        "sha256": "b03204734f641f01b1a67b7bf943ad49a1265aad1be16350f88417db2e85f2a6"
      },
      "downloads": -1,
      "filename": "Flask-CuttlePool-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5ad1db5fd1d01e58e6f808e98620353f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4569,
      "upload_time": "2018-01-16T02:14:55",
      "url": "https://files.pythonhosted.org/packages/c3/fd/e92deb665f8e05e78e9f6b0cbbee521f9e0cb7ad32314d586ed6eb90b47c/Flask-CuttlePool-0.1.0.tar.gz"
    }
  ]
}