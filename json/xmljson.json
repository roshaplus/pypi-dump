{
  "info": {
    "author": "S Anand",
    "author_email": "root.node@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "===============================\r\nxmljson\r\n===============================\r\n\r\n.. image:: https://img.shields.io/travis/sanand0/xmljson.svg\r\n        :target: https://travis-ci.org/sanand0/xmljson\r\n\r\n.. image:: https://img.shields.io/pypi/v/xmljson.svg\r\n        :target: https://pypi.python.org/pypi/xmljson\r\n\r\n\r\nxmljson converts XML into Python dictionary structures (trees, like in JSON) and vice-versa.\r\n\r\nAbout\r\n-----\r\n\r\nXML can be converted to a data structure (such as JSON) and back. For example::\r\n\r\n    <employees>\r\n        <person>\r\n            <name value=\"Alice\"/>\r\n        </person>\r\n        <person>\r\n            <name value=\"Bob\"/>\r\n        </person>\r\n    </employees>\r\n\r\ncan be converted into this data structure (which also a valid JSON object)::\r\n\r\n    {\r\n        \"employees\": [{\r\n            \"person\": {\r\n                \"name\": {\r\n                    \"@value\": \"Alice\"\r\n                }\r\n            }\r\n        }, {\r\n            \"person\": {\r\n                \"name\": {\r\n                    \"@value\": \"Bob\"\r\n                }\r\n            }\r\n        }]\r\n    }\r\n\r\nThis uses the `BadgerFish`_ convention that prefixes attributes with ``@``.\r\nThe conventions supported by this library are:\r\n\r\n* `Abdera`_: Use ``\"attributes\"`` for attributes, ``\"children\"`` for nodes\r\n* `BadgerFish`_: Use ``\"$\"`` for text content, ``@`` to prefix attributes\r\n* `Cobra`_: Use ``\"attributes\"`` for sorted attributes (even when empty), ``\"children\"`` for nodes, values are strings\r\n* `GData`_: Use ``\"$t\"`` for text content, attributes added as-is\r\n* `Parker`_: Use tail nodes for text content, ignore attributes\r\n* `Yahoo`_ Use ``\"content\"`` for text content, attributes added as-is\r\n\r\n.. _Abdera: http://wiki.open311.org/JSON_and_XML_Conversion/#the-abdera-convention\r\n.. _BadgerFish: http://www.sklar.com/badgerfish/\r\n.. _Cobra: http://wiki.open311.org/JSON_and_XML_Conversion/#the-cobra-convention\r\n.. _GData: http://wiki.open311.org/JSON_and_XML_Conversion/#the-gdata-convention\r\n.. _Parker: https://developer.mozilla.org/en-US/docs/JXON#The_Parker_Convention\r\n.. _Yahoo: https://developer.yahoo.com/javascript/json.html#xml\r\n\r\n\r\nConvert data to XML\r\n-------------------\r\n\r\nTo convert from a data structure to XML using the BadgerFish convention::\r\n\r\n    >>> from xmljson import badgerfish as bf\r\n    >>> bf.etree({'p': {'@id': 'main', '$': 'Hello', 'b': 'bold'}})\r\n\r\nThis returns an **array** of `etree.Element`_ structures. In this case, the\r\nresult is identical to::\r\n\r\n    >>> from xml.etree.ElementTree import fromstring\r\n    >>> [fromstring('<p id=\"main\">Hello<b>bold</b></p>')]\r\n\r\n.. _etree.Element: http://effbot.org/zone/element-index.htm\r\n\r\nThe result can be inserted into any existing root `etree.Element`_::\r\n\r\n    >>> from xml.etree.ElementTree import Element, tostring\r\n    >>> result = bf.etree({'p': {'@id': 'main'}}, root=Element('root'))\r\n    >>> tostring(result)\r\n    '<root><p id=\"main\"/></root>'\r\n\r\nThis includes `lxml.html <http://lxml.de/lxmlhtml.html>`_ as well::\r\n\r\n    >>> from lxml.html import Element, tostring\r\n    >>> result = bf.etree({'p': {'@id': 'main'}}, root=Element('html'))\r\n    >>> tostring(result, doctype='<!DOCTYPE html>')\r\n    '<!DOCTYPE html>\\n<html><p id=\"main\"></p></html>'\r\n\r\nFor ease of use, strings are treated as node text. For example, both the\r\nfollowing are the same::\r\n\r\n    >>> bf.etree({'p': {'$': 'paragraph text'}})\r\n    >>> bf.etree({'p': 'paragraph text'})\r\n\r\nBy default, non-string values are converted to strings using Python's ``str``,\r\nexcept for booleans -- which are converted into ``true`` and ``false`` (lower\r\ncase). Override this behaviour using ``xml_fromstring``::\r\n\r\n    >>> tostring(bf.etree({'x': 1.23, 'y': True}, root=Element('root')))\r\n    '<root><y>true</y><x>1.23</x></root>'\r\n    >>> from xmljson import BadgerFish              # import the class\r\n    >>> bf_str = BadgerFish(xml_tostring=str)       # convert using str()\r\n    >>> tostring(bf_str.etree({'x': 1.23, 'y': True}, root=Element('root')))\r\n    '<root><y>True</y><x>1.23</x></root>'\r\n\r\n\r\nConvert XML to data\r\n-------------------\r\n\r\nTo convert from XML to a data structure using the BadgerFish convention::\r\n\r\n    >>> bf.data(fromstring('<p id=\"main\">Hello<b>bold</b></p>'))\r\n    {\"p\": {\"$\": \"Hello\", \"@id\": \"main\", \"b\": {\"$\": \"bold\"}}}\r\n\r\nTo convert this to JSON, use::\r\n\r\n    >>> from json import dumps\r\n    >>> dumps(bf.data(fromstring('<p id=\"main\">Hello<b>bold</b></p>')))\r\n    '{\"p\": {\"b\": {\"$\": \"bold\"}, \"@id\": \"main\", \"$\": \"Hello\"}}'\r\n\r\nTo preserve the order of attributes and children, specify the ``dict_type`` as\r\n``OrderedDict`` (or any other dictionary-like type) in the constructor::\r\n\r\n    >>> from collections import OrderedDict\r\n    >>> from xmljson import BadgerFish              # import the class\r\n    >>> bf = BadgerFish(dict_type=OrderedDict)      # pick dict class\r\n\r\nBy default, values are parsed into boolean, int or float where possible (except\r\nin the Yahoo method). Override this behaviour using ``xml_fromstring``::\r\n\r\n    >>> dumps(bf.data(fromstring('<x>1</x>')))\r\n    '{\"x\": {\"$\": 1}}'\r\n    >>> bf_str = BadgerFish(xml_fromstring=False)   # Keep XML values as strings\r\n    >>> dumps(bf_str.data(fromstring('<x>1</x>')))\r\n    '{\"x\": {\"$\": \"1\"}}'\r\n    >>> bf_str = BadgerFish(xml_fromstring=repr)    # Custom string parser\r\n    '{\"x\": {\"$\": \"\\'1\\'\"}}'\r\n\r\n``xml_fromstring`` can be any custom function that takes a string and returns a\r\nvalue. In the example below, only the integer ``1`` is converted to an integer.\r\nEverything else is retained as a float::\r\n\r\n    >>> def convert_only_int(val):\r\n    ...     return int(val) if val.isdigit() else val\r\n    >>> bf_int = BadgerFish(xml_fromstring=convert_only_int)\r\n    >>> dumps(bf_int.data(fromstring('<p><x>1</x><y>2.5</y><z>NaN</z></p>')))\r\n    '{\"p\": {\"x\": {\"$\": 1}, \"y\": {\"$\": \"2.5\"}, \"z\": {\"$\": \"NaN\"}}}'\r\n\r\n\r\nConventions\r\n-----------\r\n\r\nTo use a different conversion method, replace ``BadgerFish`` with one of the\r\nother classes. Currently, these are supported::\r\n\r\n    >>> from xmljson import abdera          # == xmljson.Abdera()\r\n    >>> from xmljson import badgerfish      # == xmljson.BadgerFish()\r\n    >>> from xmljson import cobra           # == xmljson.Cobra()\r\n    >>> from xmljson import gdata           # == xmljson.GData()\r\n    >>> from xmljson import parker          # == xmljson.Parker()\r\n    >>> from xmljson import yahoo           # == xmljson.Yahoo()\r\n\r\n\r\nOptions\r\n-------\r\n\r\nConventions may support additional options.\r\n\r\nThe `Parker`_ convention absorbs the root element by default.\r\n``parker.data(preserve_root=True)`` preserves the root instance::\r\n\r\n    >>> from xmljson import parker, Parker\r\n    >>> from xml.etree.ElementTree import fromstring\r\n    >>> from json import dumps\r\n    >>> dumps(parker.data(fromstring('<x><a>1</a><b>2</b></x>')))\r\n    '{\"a\": 1, \"b\": 2}'\r\n    >>> dumps(parker.data(fromstring('<x><a>1</a><b>2</b></x>'), preserve_root=True))\r\n    '{\"x\": {\"a\": 1, \"b\": 2}}'\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nThis is a pure-Python package built for Python 2.6+ and Python 3.0+. To set up::\r\n\r\n    pip install xmljson\r\n\r\nRoadmap\r\n-------\r\n\r\n* Test cases for Unicode\r\n* Support for namespaces and namespace prefixes\r\n\r\n\r\n\r\n\r\nHistory\r\n-------\r\n\r\n0.1.9 (1 Aug 2017)\r\n~~~~~~~~~~~~~~~~~~\r\n\r\n- Bugfix and test cases for multiple nested children in Abdera_ convention\r\n\r\nThanks to @mukultaneja\r\n\r\n0.1.8 (9 May 2017)\r\n~~~~~~~~~~~~~~~~~~\r\n\r\n- Add Abdera_ and Cobra_ conventions\r\n- Add ``Parker.data(preserve_root=True)`` option to preserve root element in\r\n  Parker convention.\r\n\r\nThanks to @dagwieers\r\n\r\n.. _Abdera: http://wiki.open311.org/JSON_and_XML_Conversion/#the-abdera-convention\r\n.. _Cobra: http://wiki.open311.org/JSON_and_XML_Conversion/#the-cobra-convention\r\n\r\n0.1.6 (18 Feb 2016)\r\n~~~~~~~~~~~~~~~~~~~\r\n\r\n- Add ``xml_fromstring=`` and ``xml_tostring=`` parameters to constructor to\r\n  customise string conversion from and to XML.\r\n\r\n\r\n0.1.5 (23 Sep 2015)\r\n~~~~~~~~~~~~~~~~~~~\r\n\r\n- Add the Yahoo_ XML to JSON conversion method.\r\n\r\n.. _Yahoo: https://developer.yahoo.com/javascript/json.html#xml\r\n\r\n0.1.4 (20 Sep 2015)\r\n~~~~~~~~~~~~~~~~~~~\r\n\r\n- Fix ``GData.etree()`` conversion of attributes. (They were ignored. They\r\n  should be added as-is.)\r\n\r\n0.1.3 (20 Sep 2015)\r\n~~~~~~~~~~~~~~~~~~~\r\n\r\n- Simplify ``{'p': {'$': 'text'}}`` to ``{'p': 'text'}`` in BadgerFish and GData\r\n  conventions.\r\n- Add test cases for ``.etree()`` -- mainly from the `MDN JXON article`_.\r\n- ``dict_type``/``list_type`` do not need to inherit from ``dict``/``list``\r\n\r\n.. _MDN JXON article: https://developer.mozilla.org/en-US/docs/JXON#In_summary\r\n\r\n0.1.2 (18 Sep 2015)\r\n~~~~~~~~~~~~~~~~~~~\r\n\r\n- Always use the ``dict_type`` class to create dictionaries (which defaults to\r\n  ``OrderedDict`` to preserve order of keys)\r\n- Update documentation, test cases\r\n- Remove support for Python 2.6 (since we need ``collections.Counter``)\r\n- Make the `Travis CI build`_ pass\r\n\r\n.. _Travis CI build: https://travis-ci.org/sanand0/xmljson\r\n\r\n0.1.1 (18 Sep 2015)\r\n~~~~~~~~~~~~~~~~~~~\r\n\r\n- Convert ``true``, ``false`` and numeric values from strings to Python types\r\n- ``xmljson.parker.data()`` is compliant with Parker convention (bugs resolved)\r\n\r\n0.1.0 (15 Sep 2015)\r\n~~~~~~~~~~~~~~~~~~~\r\n\r\n- Two-way conversions via BadgerFish, GData and Parker conventions.\r\n- First release on PyPI.\r\n\r\n\r\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/sanand0/xmljson",
    "keywords": "xmljson",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xmljson",
    "platform": "",
    "project_url": "https://pypi.org/project/xmljson/",
    "release_url": "https://pypi.org/project/xmljson/0.1.9/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Converts XML into JSON/Python dicts/arrays and vice-versa.",
    "version": "0.1.9"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9b60ec811f988217ca92e5b2eaf4fdae",
          "sha256": "77ee8f0284c5c130a882865f115903681511788d4927c3aa0d71827a058f91d1"
        },
        "downloads": 1003,
        "filename": "xmljson-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b60ec811f988217ca92e5b2eaf4fdae",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 6473,
        "upload_time": "2015-09-15T19:08:40",
        "url": "https://files.pythonhosted.org/packages/2b/52/8c71fc22b4586613c8831ad079802ad731c86627cd374010f2f9c1e795d3/xmljson-0.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ab16b65e01ef0c83072f1b252e688a52",
          "sha256": "35e4aa061154545f03b6c790959f617b7f579a360f9fec61876783c74708b45b"
        },
        "downloads": 572,
        "filename": "xmljson-0.1.0.zip",
        "has_sig": false,
        "md5_digest": "ab16b65e01ef0c83072f1b252e688a52",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22374,
        "upload_time": "2015-09-15T19:08:45",
        "url": "https://files.pythonhosted.org/packages/d8/1b/53ae61f550102900ced1e27d0f7a91de6626a305efbd5b7fe79a3fb2b0af/xmljson-0.1.0.zip"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5734e7bfa9489daaa9cf9bd75aedac83",
          "sha256": "7a5c691887619b152687a72ecaca000ffcf783d3a5cc31183d956e4f221c41ab"
        },
        "downloads": 566,
        "filename": "xmljson-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5734e7bfa9489daaa9cf9bd75aedac83",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 6772,
        "upload_time": "2015-09-18T02:31:31",
        "url": "https://files.pythonhosted.org/packages/0e/fd/33acdd3a88b7803a954a43260b682f75c979b5122f885483d9553105d821/xmljson-0.1.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7c5a87b778446dfd8d2a24d06138b2b5",
          "sha256": "f57de77c11408c398ce1ee612ab7e87ad97751729530c0273f25dceff944cc8a"
        },
        "downloads": 577,
        "filename": "xmljson-0.1.1.zip",
        "has_sig": false,
        "md5_digest": "7c5a87b778446dfd8d2a24d06138b2b5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23183,
        "upload_time": "2015-09-18T02:31:37",
        "url": "https://files.pythonhosted.org/packages/e1/49/2e24539c12712d5a26b68e37530d1cde35e5bd4052d3d1507dcc8660471d/xmljson-0.1.1.zip"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "101f3fc5d834f328fb83362478a3f4b9",
          "sha256": "e7f9b3ba33ed454bcf115ac5a9ea87040e94eeda43224ef3b1745631467ed82b"
        },
        "downloads": 546,
        "filename": "xmljson-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "101f3fc5d834f328fb83362478a3f4b9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7372,
        "upload_time": "2015-09-18T07:41:09",
        "url": "https://files.pythonhosted.org/packages/b8/bc/ec01549982c3011778822863cfec1eb098d5ecf9c5eaebb1ff5e9c3245cf/xmljson-0.1.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0d5ee41934d11db27b4117baaa8de374",
          "sha256": "ffbde2b134d43c365083ed1bf643b4c4664c0a87c9c481358a836bab0d1d9338"
        },
        "downloads": 565,
        "filename": "xmljson-0.1.2.zip",
        "has_sig": false,
        "md5_digest": "0d5ee41934d11db27b4117baaa8de374",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24739,
        "upload_time": "2015-09-18T07:41:15",
        "url": "https://files.pythonhosted.org/packages/b3/29/eecebc07d89acb8f1606e3d85f65e57094ac9e02a60d321b7348d8a1d1b0/xmljson-0.1.2.zip"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "85a375b143e494a9201f3d9670ad88ff",
          "sha256": "f77dc47f8195bafb60eb88b434111d29c3c5db69b73f971a99f7d39920ee7625"
        },
        "downloads": 543,
        "filename": "xmljson-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85a375b143e494a9201f3d9670ad88ff",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7779,
        "upload_time": "2015-09-20T05:56:28",
        "url": "https://files.pythonhosted.org/packages/6c/36/10e98c8c634f54515db9daa9f403652c2c0237873a885e84e88964c5b713/xmljson-0.1.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "12d1e09ab60e6908c66220c595720007",
          "sha256": "15bb53455d997d631ef6c9c379ab5e544f88e2e8232917748c4a5a8b871ad972"
        },
        "downloads": 554,
        "filename": "xmljson-0.1.3.zip",
        "has_sig": false,
        "md5_digest": "12d1e09ab60e6908c66220c595720007",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25679,
        "upload_time": "2015-09-20T05:56:34",
        "url": "https://files.pythonhosted.org/packages/07/ce/c60fb529a9d0993170a3cdef14a7572164986fc05efc408434c93e1e2ac0/xmljson-0.1.3.zip"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a417800ff8d4a05cc49e3ae4115821c3",
          "sha256": "1a4bf1a58856cd4c2fe1a06145425877271f323093d81e4c6a2cf5f8816d84d9"
        },
        "downloads": 548,
        "filename": "xmljson-0.1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a417800ff8d4a05cc49e3ae4115821c3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 8029,
        "upload_time": "2015-09-20T08:28:19",
        "url": "https://files.pythonhosted.org/packages/ab/dd/67769acaee4e0e684d0653f2092a6f9347af1862dd012ceceb3ec161e22c/xmljson-0.1.4-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7db9e019d35cf86d4f4c4e635c89c4fc",
          "sha256": "1795b72d6674f1f6a00495ef6b6d0a811b6b8f60eed6d89d54e745465e68e144"
        },
        "downloads": 558,
        "filename": "xmljson-0.1.4.zip",
        "has_sig": false,
        "md5_digest": "7db9e019d35cf86d4f4c4e635c89c4fc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26037,
        "upload_time": "2015-09-20T08:28:26",
        "url": "https://files.pythonhosted.org/packages/8b/b8/4b0e06814936ea1193bba4f463bac19a8a8ed4b43611d88abe6446171c7d/xmljson-0.1.4.zip"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d38f8cd329a8e9d84802ec44285d6211",
          "sha256": "c022baaf30059b683d91b9036dd18afc33954d1a6f90a6a75ce2b28b7c458373"
        },
        "downloads": 827,
        "filename": "xmljson-0.1.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d38f8cd329a8e9d84802ec44285d6211",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 8335,
        "upload_time": "2015-09-23T16:56:54",
        "url": "https://files.pythonhosted.org/packages/96/43/9e26cf91340333247584bcfe0e09fe8127b931689dd5b1abfab285208881/xmljson-0.1.5-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "db3cb1912b62fbe6b15a7a47433af63d",
          "sha256": "2536792d8503f4eea810dbb406450fcf3cb597f328d67a36dcf15885adc1128f"
        },
        "downloads": 675,
        "filename": "xmljson-0.1.5.zip",
        "has_sig": false,
        "md5_digest": "db3cb1912b62fbe6b15a7a47433af63d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26856,
        "upload_time": "2015-09-23T16:57:02",
        "url": "https://files.pythonhosted.org/packages/a0/3e/f30366ac243e2536b9436062b9cc85c97488c4676c7fe4842d109bf5de96/xmljson-0.1.5.zip"
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4e2a88a1adb44784c18c8ec96d0b339d",
          "sha256": "a2e1de7f5882ade200487c45880ffa62bd4ee5e8eea326967890eb9172ecd1fc"
        },
        "downloads": 1402,
        "filename": "xmljson-0.1.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e2a88a1adb44784c18c8ec96d0b339d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9348,
        "upload_time": "2016-02-18T03:11:13",
        "url": "https://files.pythonhosted.org/packages/f1/1e/d9b16679a7ba257aeb233c7347eb3defd599d8bb708058c4bb44479d6668/xmljson-0.1.6-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d269cf3ef9f83a54210baf2ee4f5c39f",
          "sha256": "79f8205bd626f502708f6a3075d1a643c466a09c9a33040615d7b131cc8365ea"
        },
        "downloads": 398,
        "filename": "xmljson-0.1.6.zip",
        "has_sig": false,
        "md5_digest": "d269cf3ef9f83a54210baf2ee4f5c39f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28613,
        "upload_time": "2016-02-18T03:11:21",
        "url": "https://files.pythonhosted.org/packages/aa/76/42497cb185cb2aafe9303e0cb6990ed1c52cc14e71601fccb4f35e2049fd/xmljson-0.1.6.zip"
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "981b8acb96669924c3d39cbbffb1c745",
          "sha256": "95e7b8e35d87686482c57adc35330bb0190cdb4a3b75c3f2020724b593b99e27"
        },
        "downloads": 2039,
        "filename": "xmljson-0.1.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "981b8acb96669924c3d39cbbffb1c745",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9952,
        "upload_time": "2016-09-13T03:06:44",
        "url": "https://files.pythonhosted.org/packages/23/58/f0efd7f31523fc3c9ea601dd13997b4ba71874f4d474b43915ce4c94f456/xmljson-0.1.7-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "94ea9858cc71bcb38053bfceea358d03",
          "sha256": "ca2bab88df415cc60b6b7e4d46aae9b3e1b5327422cf0ec3f2c25ebc0fa79780"
        },
        "downloads": 318,
        "filename": "xmljson-0.1.7.zip",
        "has_sig": false,
        "md5_digest": "94ea9858cc71bcb38053bfceea358d03",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28486,
        "upload_time": "2016-09-13T03:06:48",
        "url": "https://files.pythonhosted.org/packages/47/3e/325e05cf70ae2f631bdf89a2ec70a6bdae6faf718493dff9a2eeb5615325/xmljson-0.1.7.zip"
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bd77916e09f76532e635a29abc7f265d",
          "sha256": "12db9b258a907e1d72a1900e4e95ef2f7f9e11d049dfc6d157efe732e68bce9d"
        },
        "downloads": 0,
        "filename": "xmljson-0.1.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd77916e09f76532e635a29abc7f265d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 11584,
        "upload_time": "2017-05-09T13:34:23",
        "url": "https://files.pythonhosted.org/packages/a4/a7/9b7fbd164376e4d4224b1b75fea7e82e8d154af183f15ab753018fc936e3/xmljson-0.1.8-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "fa95866c055ac77add5903e8f8f82edf",
          "sha256": "e6d1094b0d8e18de68012dac7242f005e8b1e733afa542802100bf81b60ba772"
        },
        "downloads": 0,
        "filename": "xmljson-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "fa95866c055ac77add5903e8f8f82edf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23519,
        "upload_time": "2017-05-09T13:34:25",
        "url": "https://files.pythonhosted.org/packages/36/92/2aacaf270b2c52a235403bd30f2f3649ffee0ec13a1bab657154839c8ac9/xmljson-0.1.8.tar.gz"
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b1ad96e417998015b5087fdc164cf67f",
          "sha256": "5d7cfa700798319ae4144ed647c9ecc5ac8cadd61cce783b3dfa4acbf8f7cf14"
        },
        "downloads": 0,
        "filename": "xmljson-0.1.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1ad96e417998015b5087fdc164cf67f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 11660,
        "upload_time": "2017-08-01T08:55:12",
        "url": "https://files.pythonhosted.org/packages/af/ef/11413b59c848a060f6f8a37ef0b95a3b005e5cb5f6fc10f43b4b8a1e21b6/xmljson-0.1.9-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "801d8c018e83eb21f9929f9e780c745c",
          "sha256": "9ac7b985ca4fcf9a6f9c243c6274cdd72bbbde376439c884ee9f4124c19895e6"
        },
        "downloads": 0,
        "filename": "xmljson-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "801d8c018e83eb21f9929f9e780c745c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24910,
        "upload_time": "2017-08-01T08:55:13",
        "url": "https://files.pythonhosted.org/packages/5c/65/49eee4320a359a52d1b0669496e207d7ac4ab3082472d29eb1b5e03a2c51/xmljson-0.1.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b1ad96e417998015b5087fdc164cf67f",
        "sha256": "5d7cfa700798319ae4144ed647c9ecc5ac8cadd61cce783b3dfa4acbf8f7cf14"
      },
      "downloads": 0,
      "filename": "xmljson-0.1.9-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b1ad96e417998015b5087fdc164cf67f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 11660,
      "upload_time": "2017-08-01T08:55:12",
      "url": "https://files.pythonhosted.org/packages/af/ef/11413b59c848a060f6f8a37ef0b95a3b005e5cb5f6fc10f43b4b8a1e21b6/xmljson-0.1.9-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "801d8c018e83eb21f9929f9e780c745c",
        "sha256": "9ac7b985ca4fcf9a6f9c243c6274cdd72bbbde376439c884ee9f4124c19895e6"
      },
      "downloads": 0,
      "filename": "xmljson-0.1.9.tar.gz",
      "has_sig": false,
      "md5_digest": "801d8c018e83eb21f9929f9e780c745c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 24910,
      "upload_time": "2017-08-01T08:55:13",
      "url": "https://files.pythonhosted.org/packages/5c/65/49eee4320a359a52d1b0669496e207d7ac4ab3082472d29eb1b5e03a2c51/xmljson-0.1.9.tar.gz"
    }
  ]
}