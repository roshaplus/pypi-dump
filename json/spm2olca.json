{
  "info": {
    "author": "Michael Srocka",
    "author_email": "michael.srocka@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.5",
      "Topic :: Utilities"
    ],
    "description": "spm2olca\n========\nspm2olca is a simple command line tool that converts a SimaPro LCIA method files\nto a `olca-schema <https://github.com/GreenDelta/olca-schema>`_  (JSON-LD) package.\n\n\nInstallation\n------------\nThe installation of the package requires that Python >= 3.4 is \n`installed <https://docs.python.org/3/using/>`_ on your system and that the Python\n`Scripts` folder is in your system path. If this is the case you just need to\ninstall it from the command shell via:\n\n.. code-block:: bash\n\n    pip install spm2olca\n    \nAfter this you should be able to run the tool anywhere on your system. You can \ntest this by executing the following command:\n\n.. code-block:: bash\n\n    spm2olca -h\n    \nIf you want to modify or improve the tool you can download the source and create\nan egg-link with pip:\n \n.. code-block:: bash\n\n    git clone https://github.com/GreenDelta/spm2olca\n    cd spm2olca\n    pip install -e .\n\nThis will install the tool but with a link to this source code folder where you\ncan modify the respective functions.\n\n\nUsage\n-----\nJust type the `spm2olca` command followed by the SimaPro CSV file with LCIA\nmethods you want to convert:\n\n.. code-block:: bash\n \n    spm2olca <SimaPro CSV file with LCIA methods>\n\nThis will generate the `olca-schema` package which will have the same file name\nbut with a `.zip` extension. This file can be then imported into openLCA.\n\nTo see additional options use the help flag `-h`:\n\n.. code-block:: bash\n\n    spm2olca -h\n\nAdditional options:\n\n* `-out`: define the name of the output file\n* `-skip_unmapped`: LCIA factors with unmapped flows are not included\n* `-log`: define the log level (e.g. 'all' will log everything)\n\n\nUnit mappings\n-------------\nUnits are mapped by name to openLCA units and flow properties ...\n\n\nFlow mappings\n-------------\nThe SimaPro flows are mapped to openLCA reference flows with a CSV mapping file\nwith the following columns:\n\n==  =======================================================================\n0.  SimaPro name of the flow (string)\n1.  SimaPro compartment of the flow (string)\n2.  SimaPro sub-compartment of the flow (string)\n3.  SimaPro unit of the flow (string)\n4.  openLCA reference ID of the flow (UUID)\n5.  openLCA name of the flow (string)\n6.  openLCA reference ID of the reference flow property of the flow (UUID)\n7.  openLCA name of the reference flow property of the flow (string)\n8.  openLCA reference ID of the reference unit of the flow (UUID)\n9.  openLCA name of the reference unit of the flow (string)\n10. conversion factor: amount_simapro * factor = amount_openlca (double)\n==  =======================================================================\n\nThis is the same file as in the openLCA reference data. The conversion factor\n:math:`f` converts a flow amount from SimaPro :math:`a_s` in the SimaPro \nreference unit to the respective amount of the flow in the openLCA reference\nunit :math:`a_o`:\n\n.. math::\n\n    a_o = f * a_s\n\ne.g. \n    \n.. math::\n\n    a_o = [m3] = 0.001 * [kg] with a_s = [kg]\n    \nThus the value of an SimaPro LCIA factor is *divided* by the conversion factor\nfor such a mapped flow when converted to openLCA, e.g.:\n\n.. math::\n\n    lcia_o = 2000/[m3] = 2/(0.001*[kg]) with a_s = [kg]",
    "docs_url": null,
    "download_url": "https://github.com/GreenDelta/spm2olca/tarball/v0.0.1",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/GreenDelta/spm2olca",
    "keywords": "converter lca",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "spm2olca",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/spm2olca/",
    "release_url": "https://pypi.org/project/spm2olca/0.0.1/",
    "requires_python": null,
    "summary": "SimaPro Method File to olca-schema converter",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "120c91bb6b94a89bc0845a4a7083b125",
          "sha256": "02629d2be92cae5852afb4c66e04844cefb945c926d51dd836165b1852c4c505"
        },
        "downloads": 477,
        "filename": "spm2olca-0.0.1.zip",
        "has_sig": false,
        "md5_digest": "120c91bb6b94a89bc0845a4a7083b125",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 162878,
        "upload_time": "2016-06-03T16:52:45",
        "url": "https://files.pythonhosted.org/packages/28/77/e9b9d1bf1b5ace59a85a83ee5fec8f2491c4e2ee5b7f82765121f2dd11e3/spm2olca-0.0.1.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "120c91bb6b94a89bc0845a4a7083b125",
        "sha256": "02629d2be92cae5852afb4c66e04844cefb945c926d51dd836165b1852c4c505"
      },
      "downloads": 477,
      "filename": "spm2olca-0.0.1.zip",
      "has_sig": false,
      "md5_digest": "120c91bb6b94a89bc0845a4a7083b125",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 162878,
      "upload_time": "2016-06-03T16:52:45",
      "url": "https://files.pythonhosted.org/packages/28/77/e9b9d1bf1b5ace59a85a83ee5fec8f2491c4e2ee5b7f82765121f2dd11e3/spm2olca-0.0.1.zip"
    }
  ]
}