{
  "info": {
    "author": "Ran Aroussi",
    "author_email": "ran@aroussi.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "MultiTasking: Non-blocking Python methods using decorators\n==========================================================\n\n.. image:: https://img.shields.io/pypi/pyversions/multitasking.svg?maxAge=2592000\n    :target: https://pypi.python.org/pypi/multitasking\n    :alt: Python version\n\n.. image:: https://img.shields.io/travis/ranaroussi/multitasking/master.svg?\n    :target: https://travis-ci.org/ranaroussi/multitasking\n    :alt: Travis-CI build status\n\n.. image:: https://img.shields.io/pypi/v/multitasking.svg?maxAge=60\n    :target: https://pypi.python.org/pypi/multitasking\n    :alt: PyPi version\n\n.. image:: https://img.shields.io/pypi/status/multitasking.svg?maxAge=2592000\n    :target: https://pypi.python.org/pypi/multitasking\n    :alt: PyPi status\n\n.. image:: https://img.shields.io/github/stars/ranaroussi/multitasking.svg?style=social&label=Star&maxAge=60\n    :target: https://github.com/ranaroussi/multitasking\n    :alt: Star this repo\n\n.. image:: https://img.shields.io/twitter/follow/aroussi.svg?style=social&label=Follow%20Me&maxAge=60\n    :target: https://twitter.com/aroussi\n    :alt: Follow me on twitter\n\n\\\n\n**MultiTasking** is a tiny Python library lets you convert your Python methods into asynchronous,\nnon-blocking methods simply by using a decorator.\n\nExample\n--------------------\n.. code:: python\n\n    # example.py\n    import multitasking\n    import time\n    import random\n    import signal\n\n    # kill all tasks on ctrl-c\n    signal.signal(signal.SIGINT, multitasking.killall)\n\n    # or, wait for task to finish on ctrl-c:\n    # signal.signal(signal.SIGINT, multitasking.wait_for_tasks)\n\n    @multitasking.task # <== this is all it takes :-)\n    def hello(count):\n        sleep = random.randint(1,10)/2\n        print(\"Hello %s (sleeping for %ss)\" % (count, sleep))\n        time.sleep(sleep)\n        print(\"Goodbye %s (after for %ss)\" % (count, sleep))\n\n    if __name__ == \"__main__\":\n        for i in range(0, 10):\n            hello(i+1)\n\n\nThe output would look something like this:\n\n.. code:: bash\n\n    $ python example.py\n\n    Hello 1 (sleeping for 0.5s)\n    Hello 2 (sleeping for 1.0s)\n    Hello 3 (sleeping for 5.0s)\n    Hello 4 (sleeping for 0.5s)\n    Hello 5 (sleeping for 2.5s)\n    Hello 6 (sleeping for 3.0s)\n    Hello 7 (sleeping for 0.5s)\n    Hello 8 (sleeping for 4.0s)\n    Hello 9 (sleeping for 3.0s)\n    Hello 10 (sleeping for 1.0s)\n    Goodbye 1 (after for 0.5s)\n    Goodbye 4 (after for 0.5s)\n    Goodbye 7 (after for 0.5s)\n    Goodbye 2 (after for 1.0s)\n    Goodbye 10 (after for 1.0s)\n    Goodbye 5 (after for 2.5s)\n    Goodbye 6 (after for 3.0s)\n    Goodbye 9 (after for 3.0s)\n    Goodbye 8 (after for 4.0s)\n    Goodbye 3 (after for 5.0s)\n\n\nSettings\n========\n\nThe default maximum threads is equal to the # of CPU Cores.\n**This is just a rule of thumb!** The ``Thread`` module isn't actually using more than one core at a time.\n\nYou can change the default maximum number of threads using:\n\n.. code:: python\n\n    import multitasking\n    multitasking.set_max_threads(10)\n\n...or, if you want to set the maximum number of threads based on the number of CPU Cores, you can:\n\n.. code:: python\n\n    import multitasking\n    multitasking.set_max_threads(multitasking.__CPU_CORES__ * 5)\n\nFor applications that doesn't require access to shared resources,\nyou can set ``MultiTasking`` to use ``multiprocessing.Process()``\ninstead of the ``threading.Thread()``, thus avoiding some of the\n`GIL constraints <https://jeffknupp.com/blog/2013/06/30/pythons-hardest-problem-revisited/>`_.\n\n.. code:: python\n\n    import multitasking\n    multitasking.set_engine(\"process\") # \"process\" or \"thread\"\n\n\nInstallation\n============\n\nInstall multitasking using ``pip``:\n\n.. code:: bash\n\n    $ pip install multitasking --upgrade --no-cache-dir\n\n\nLegal Stuff\n===========\n\nMultiTasking is distributed under the **GNU Lesser General Public License v3.0**. See the `LICENSE.txt <./LICENSE.txt>`_ file in the release for details.\nMultiTasking is not a product of Interactive Brokers, nor is it affiliated with Interactive Brokers.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ranaroussi/multitasking",
    "keywords": "multitasking async multitask threading",
    "license": "LGPL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "multitasking",
    "platform": "any",
    "project_url": "https://pypi.org/project/multitasking/",
    "release_url": "https://pypi.org/project/multitasking/0.0.3/",
    "requires_python": null,
    "summary": "Simple async w/o async",
    "version": "0.0.3"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6008742767e6ff6855f817a8afbcf145",
          "sha256": "7c084bd009050453c624d9dab8a03fc744b91a58d0e03ed9d79ca75f1a7ee465"
        },
        "downloads": 91,
        "filename": "multitasking-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6008742767e6ff6855f817a8afbcf145",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5513,
        "upload_time": "2016-12-21T19:21:16",
        "url": "https://files.pythonhosted.org/packages/ac/77/0d788812253204f7fd914ee5b7b8e0a8da6267a47cbd5e4381b3a87133ef/multitasking-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "60fda86b42fa20629410469469024fe4",
          "sha256": "cd003884808db6293d547aa4fbc08e03ef3d903dba847d8a3b8e4abc67772a12"
        },
        "downloads": 31,
        "filename": "multitasking-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "60fda86b42fa20629410469469024fe4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6800,
        "upload_time": "2016-12-30T13:05:40",
        "url": "https://files.pythonhosted.org/packages/c4/6f/b1eca3240dce03425843045fe2609248a7a27e1707de32f66bb0aed6661b/multitasking-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fe1a7f06683ca449c212a2596f7df4f1",
          "sha256": "4ea363e455843f9406c2507bae99797eb653a27bdf840e707bdd768689985400"
        },
        "downloads": 47,
        "filename": "multitasking-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fe1a7f06683ca449c212a2596f7df4f1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7134,
        "upload_time": "2016-12-31T12:13:39",
        "url": "https://files.pythonhosted.org/packages/8e/39/c58f55cb9cb0eeade3a735d2bd20a881b010302e907a639fb92a21932caa/multitasking-0.0.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fe1a7f06683ca449c212a2596f7df4f1",
        "sha256": "4ea363e455843f9406c2507bae99797eb653a27bdf840e707bdd768689985400"
      },
      "downloads": 47,
      "filename": "multitasking-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "fe1a7f06683ca449c212a2596f7df4f1",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7134,
      "upload_time": "2016-12-31T12:13:39",
      "url": "https://files.pythonhosted.org/packages/8e/39/c58f55cb9cb0eeade3a735d2bd20a881b010302e907a639fb92a21932caa/multitasking-0.0.3.tar.gz"
    }
  ]
}