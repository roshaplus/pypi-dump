{
  "info": {
    "author": "S\u0142awek Ehlert",
    "author_email": "slafs@op.pl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Utilities"
    ],
    "description": "========================\ndjango-url-breadcrumbs\n========================\n\n.. image:: https://drone.io/bitbucket.org/slafs/django-url-breadcrumbs/status.png\n       :target: https://drone.io/bitbucket.org/slafs/django-url-breadcrumbs/latest\n\n\nAn app for generic breadcrumbs in Django (>= 1.4).\n\nThe idea is to make breadcrumbs out of parts of an url path. This application assumes that your url patterns are well structured. For example like this::\n\n    /                                               # root path\n    /application/                                   # root of an app/module\n    /application/object_type/                       # list of specific objects\n    /application/object_type/some_object/           # details of specific object\n    /application/object_type/some_object/edit/      # edit (or any other operations) of a specific object\n\n\nInstallation\n===============\n\n1. Install the package from PyPi. For example via pip::\n\n    pip install django-url-breadcrumbs\n\n2. Add ``urlbreadcrumbs`` to INSTALLED_APPS::\n\n    INSTALLED_APPS = (\n        ...\n        'urlbreadcrumbs',\n        ...\n    )\n\n3. Make sure you have a request context processor ``django.core.context_processors.request`` in your ``TEMPLATE_CONTEXT_PROCESSORS``.\n\n\nUsage\n==========\n\nLet's assume you have your urls in a form:\n\nin ``ROOT_URLCONF``::\n\n    from django.conf.urls import patterns, include, url\n    from myproject.views import some_view\n\n    urlpatterns = patterns('',\n        url(r'^$', some_view, {'template' : 'index.html'}, name='index'),\n        url(r'^test1/', include('test1.urls')),\n    )\n\n\n``urls.py`` in application called ``test1``::\n\n    from django.conf.urls import patterns, include, url\n    from test1.views import some_view\n\n    urlpatterns = patterns('',\n        url(r'^example/$', some_view, {'template' : 't1.html'}, name='t1home'),\n    )\n\n\nIn order to define your breadcrumbs you can make a mapping in ``settings.py`` like this::\n\n    URLBREADCRUMBS_NAME_MAPPING = {\n        'index'  : 'Home page',\n        't1home' : 'Index page of Test1',\n    }\n\n\nThen somwhere in your base template (lets call it ``base.html``) you can write this::\n\n    {% load urlbreadcrumbs_tags %}\n    {% render_breadcrumbs %}\n\nor you can specify your own template::\n\n    {% render_breadcrumbs \"test1/mybreadcrumbs_template.html\" %}\n\nAlso you can just include your breadcrumbs template::\n\n    {% include \"test1/mybreadcrumbs_template.html\" %}\n\nBut to use it like this make sure you've added a context procesor ``urlbreadcrumbs.context_processors.build_breadcrumbs``\nin your ``TEMPLATE_CONTEXT_PROCESSORS`` setting.\n\nIn your template you have one additional context variable called ``breadcrumbs``\nwhich is a list of two-tuples containing name and url of a breadcrumb.\nThe default template used by ``django-url-breadcrumbs`` (``urlbreadcrumbs/default.html``) looks like this::\n\n    {% for n,u in breadcrumbs %}\n        {% if not forloop.last %}\n            <a href=\"{{ u }}\">{{ n }}</a> &raquo;\n        {% else %}\n            {{ n }}\n        {% endif %}\n    {% endfor %}\n\nSo now, assuming template ``t1.html`` is extending ``base.html``, when viewing ``/test1/example/``\nyou should see something like this ``Home page \u00bb Index page of Test1``.\n\nAnother way of specyfing a name for a breadcrumb is to use a custom ``url`` function in your ``urls.py``.\nInstead of defining a mapping in ``URLBREADCRUMBS_NAME_MAPPING`` setting you can do this in ``urls.py`` of your ``ROOT_URLCONF`` and ``test1`` application::\n\n    from django.conf.urls import patterns, include, url\n    from urlbreadcrumbs import url as burl\n\n    urlpatterns = patterns('',\n        ...\n        burl(r'^test1/', include(test1_urls)),\n        ...\n    )\n\nand ::\n\n    from django.conf.urls import patterns, include, url\n    from test1.views import some_view\n    from urlbreadcrumbs import url as burl\n\n    urlpatterns = patterns('',\n        burl(r'^example/$', some_view, {'template' : 't1.html'}, name='t1home', verbose_name='Index page of Test1'),\n    )\n\nThis should work as in previous example.\n\nContext aware breadcrumbs\n=========================\n\nIf you want you can provide simple template strings in your mappings.\nThis only works if you render your breadcrumbs with a templatetag (``render_breadcrumbs``).\nFor example to have some attribute of your object as a part of your breadcrumb\nyou can provide something like this::\n\n    URLBREADCRUMBS_NAME_MAPPING = {\n        ...\n        'namespace:edit': 'Edit object {{ object.name }}',\n        ...\n    }\n\nAnd assuming your view that uses this breadcrumb will provide ``object`` in it's\ncontext and for example ``object.name`` is ``'foo'`` then you should see rendered\nbreadcrumb as ``Edit object foo``.\n\nOne important prerequisite for this to work properly is that every view \"below\"\nthe url ``namespace:edit`` **MUST** provide ``object`` in it's context. By \"below\"\nwe mean every url that starts with the same url that ``namespace:edit`` is configured to.\n\n\nDemo project\n============\n\nTo run a demo project that is using ``django-url-breadcrumbs`` try this::\n\n    pip install Django\n    export DJANGO_SETTINGS_MODULE=urlbreadcrumbs.tests.settings\n    django-admin.py runserver\n\nand then visit http://127.0.0.1:8000 in your browser.\n\nYou can find source code of this demo project in ``urlbreadcrumbs/tests``.\n\nDevelopment\n===============\n\nIdeas and/or bug reports are welcome. Consider reporting an issue on https://bitbucket.org/slafs/django-url-breadcrumbs/issues?status=new&status=open\n\nPull requests are also welcome ;).\n\nTo start working on this app get the source from Bitbucket::\n\n    hg clone https://bitbucket.org/slafs/django-url-breadcrumbs\n\nand in a newly created virtualenv do this::\n\n    pip install -r dev_requirements.txt\n    python setup.py test\n\nTesting\n-----------\n\ndjango-url-breadcrumbs uses `pytest`_ for running it's test suite and `tox`_ for checking it's compatibilty\nwith different Python and Django versions.\n\nIn order to perform tests with your current python and django installation do this::\n\n    python setup.py test\n\nTo test it with different python and django versions run this::\n\n    tox\n\n.. _tox: http://tox.readthedocs.org\n.. _pytest: http://pytest.org",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://bitbucket.org/slafs/django-url-breadcrumbs/",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-breadcrumbs_url",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-breadcrumbs_url/",
    "release_url": "https://pypi.org/project/django-breadcrumbs_url/0.3.4.dev0/",
    "requires_python": null,
    "summary": "a generic app to provide a simple breadcrumbs functionality in django projects",
    "version": "0.3.4.dev0"
  },
  "releases": {
    "0.3.4.dev0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7b6754477e0fa2da67d0d47283f68733",
          "sha256": "b2a2474e3882e934b2395b224997a98c894a6f7f47a43c75672aa51be74e433b"
        },
        "downloads": 14,
        "filename": "django-breadcrumbs_url-0.3.4.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "7b6754477e0fa2da67d0d47283f68733",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9293,
        "upload_time": "2017-02-07T20:54:02",
        "url": "https://files.pythonhosted.org/packages/ae/0d/f62aab062791e93446cc4c7205f93c1aff2cb3018e1968abd2b963d1797a/django-breadcrumbs_url-0.3.4.dev0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "7b6754477e0fa2da67d0d47283f68733",
        "sha256": "b2a2474e3882e934b2395b224997a98c894a6f7f47a43c75672aa51be74e433b"
      },
      "downloads": 14,
      "filename": "django-breadcrumbs_url-0.3.4.dev0.tar.gz",
      "has_sig": false,
      "md5_digest": "7b6754477e0fa2da67d0d47283f68733",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9293,
      "upload_time": "2017-02-07T20:54:02",
      "url": "https://files.pythonhosted.org/packages/ae/0d/f62aab062791e93446cc4c7205f93c1aff2cb3018e1968abd2b963d1797a/django-breadcrumbs_url-0.3.4.dev0.tar.gz"
    }
  ]
}