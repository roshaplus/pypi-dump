{
  "info": {
    "author": "Yupeng He",
    "author_email": "yupeng.he.bioinfo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "methylpy\n========\n\nWelcome to the home page of methylpy, a pyhton-based analysis pipeline\nfor\n\n-  (single-cell) (whole-genome) bisulfite sequencing data\n-  (single-cell) NOMe-seq data\n-  differential methylation analysis\n\nmethylpy is available at\n`github <https://github.com/yupenghe/methylpy>`__ and\n`PyPI <https://pypi.python.org/pypi/methylpy/>`__.\n\nNote\n====\n\n-  methylpy was initiated by and built on the work of `Mattew D.\n   Schultz <https://github.com/schultzmattd>`__\n-  `tutorial <https://github.com/yupenghe/methylpy/blob/methylpy/tutorial.md>`__\n   is being written\n-  In new version, allc files for one sample are no longer split and the\n   current allc format does not support header. Command\n   ``cat allc_SAMPLENAME_*.tsv |grep chr -v > allc_SAMPLENAME.tsv`` can\n   be used to change the older version of allc to the new version.\n-  Current version methylpy has major difference compared to previous\n   version. Please checkout this document and\n   `tutorial <https://github.com/yupenghe/methylpy/blob/methylpy/tutorial.md>`__\n   for details.\n\nWhat can methylpy do?\n=====================\n\nProcessing bisulfite sequencing data and NOMe-seq data\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  fast and flexible pipeline for both single-end and paired-end data\n-  all the way from raw reads (fastq) to methylation state and/or open\n   chromatin readouts\n-  also support getting readouts from alignment (BAM file)\n-  including options for read trimming, quality filter and PCR duplicate\n   removal\n-  accept compressed input and generate compressed output\n-  support post-bisulfite adaptor tagging (PBAT) data\n\nCalling differentially methylated regions (DMRs)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  DMR calling at single cytosine level\n-  support comparison across 2 or more samples/groups\n-  conservative and accurate\n-  useful feature for dealing with low-coverage data by combining data\n   of adjacent cytosines\n\nWhat you want to do\n===================\n\n-  `Install methylpy <#install-methylpy>`__\n-  `Test methylpy <#test-methylpy>`__\n-  `Process data <#process-data>`__\n-  `Call DMRs <#call-dmrs>`__\n-  `Additional functions for data\n   processing <#additional-functions-for-data-processing>`__\n-  `Cite methylpy <#cite-methylpy>`__\n\nrun ``methylpy -h`` to get a list of functions.\n\nInstall methylpy\n================\n\nStep 1 - Download methylpy\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nEasiest way of installing methylpy will be through PyPI by running\n``pip install methylpy``. The command ``pip install --upgrade methylpy``\nupdates methylpy to latest version. Alternatively, methylpy can be\ninstalled through github: enter the directory where you would like to\ninstall methylpy and run\n\n::\n\n    git clone https://github.com/yupenghe/methylpy.git\n    cd methylpy/\n    python setup.py install\n\nIf you would like to install methylpy in path of your choice, run\n``python setup.py install --prefix=/USER/PATH/``. Then, try ``methylpy``\nand if no error pops out, the setup is likely successful. See `Test\nmethylpy <#test-methylpy>`__ for more rigorious test. Last, processing\nlarge dataset will require large spare space for temporary files.\nUsually, the default directory for temporary files will not meet the\nneed. You may want to set the ``TMPDIR`` environmental variable to the\n(absolute) path of a directory on hard drive with sufficient space (e.g.\n``/YOUR/TMP/DIR/``). This can be done by adding the below command to\n``~/.bashrc file``: ``export TMPDIR=/YOUR/TMP/DIR/`` and run\n``source ~/.bashrc``.\n\nStep 2 - Install dependencies\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\npython is required for running methylpy. Both python2 (>=2.7.9) and\npython3 (>=3.6.2) will work. methylpy also depends on two python\nmodules, `numpy <http://www.numpy.org/>`__ and\n`scipy <https://www.scipy.org/>`__. The easiest way to get these\ndependencies is to install\n`anaconda <https://www.anaconda.com/download/>`__.\n\nIn addition, some features of methylpy depend on several publicly\navailable tools (not all of them are required if you only use a subset\nof methylpy functions). \\*\n`cutadapt <http://cutadapt.readthedocs.io/en/stable/installation.html>`__\n(>=1.9) for raw read trimming \\*\n`bowtie <http://bowtie-bio.sourceforge.net/index.shtml>`__ and/or\n`bowtie2 <http://bowtie-bio.sourceforge.net/bowtie2/index.shtml>`__ for\nalignment \\* `samtools <https://github.com/samtools/samtools>`__ (>=1.3)\nfor alignment result manipulation \\*\n`Picard <https://broadinstitute.github.io/picard/index.html>`__\n(>=2.10.8) for PCR duplicate removal \\* java for running Picard (its\npath needs to be included in ``PATH`` environment variable) . \\*\n`wigToBigWig <http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/wigToBigWig>`__\nfor converting methylpy output to bigwig format\n\nLastly, if paths to cutadapt, bowtie/bowtie2, samtools and wigToBigWig\nare included in ``PATH`` variable, methylpy can run these tools\ndirectly. Otherwise, the paths have to be passed to methylpy as\naugments. Path to Picard needs to be passed to methylpy as a parameter\nto run PCR duplicate removal.\n\nOptional step - Compile rms.cpp\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nDMR finding requires an executable\n``methylpy/methylpy/run_rms_tests.out``, which was compiled from C++\ncode ``methylpy/methylpy/rms.cpp``. In most cases, the precompiled file\ncan be used directly. To test this, simply run execute\n``methylpy/methylpy/run_rms_tests.out``. If help page shows, recompiling\nis not required. If error turns up, the executable needs to be\nregenerated by compiling ``rms.cpp`` and this step requires\n`GSL <https://www.gnu.org/software/gsl/>`__ installed correctly. In most\nlinux operating system, the below commands will do the job\n\n::\n\n    cd methylpy/methylpy/\n    g++ -O3 -l gsl -l gslcblas -o run_rms_tests.out rms.cpp\n\nIn Ubuntu (>=16.04), please try the below commands first.\n\n::\n\n    cd methylpy/methylpy/\n    g++ -o run_rms_tests.out rms.cpp `gsl-config --cflags \u2014libs`\n\nTest methylpy\n=============\n\nTo test whether methylpy and the dependencies are installed and set up\ncorrectly, run\n\n::\n\n    wget http://neomorph.salk.edu/yupeng/share/methylpy_test.tar.gz\n    tar -xf methylpy_test.tar.gz\n    cd methylpy_test/\n    python run_test.py\n\nThe test should take around 3 minutes, and progress will be printed on\nscreen. After the test is started, two files ``test_output_msg.txt`` and\n``test_error_msg.txt`` will be generated. The former contains more\ndetails about each test and the later stores error message (if any) as\nwell as additional information.\n\nIf test fails, please check ``test_error_msg.txt`` for the error\nmessage. If you decide to submit an issue regarding test failure to\nmethylpy github page, please include the error message in this file.\n\nProcess data\n============\n\nPlease see `methylpy\ntutorial <https://github.com/yupenghe/methylpy/blob/methylpy/tutorial.md>`__\nfor more details.\n\nStep 1 - Build converted genome reference\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nBuild bowtie/bowtie2 index for converted genome. Run\n``methylpy build-reference -h`` to get more information. An example of\nbuilding mm10 mouse reference index:\n\n::\n\n    methylpy build-reference \\\n        --input-files mm10_bt2/mm10.fa \\\n        --output-prefix mm10_bt2/mm10 \\\n        --bowtie2 True\n\nStep 2 - Process bisulfite sequencing and NOMe-seq data\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFunction ``single-end-pipeline`` is For processing single-end data. Run\n``methylpy single-end-pipeline -h`` to get help information. Below code\nis an example of using methylpy to process single-end bisulfite\nsequencing data. For processing NOMe-seq data, please use\n``num_upstr_bases=1`` to include one base upstream cytosine as part of\ncytosine sequence context, which can be used to tease out GC sites.\n\n::\n\n    methylpy single-end-pipeline \\\n        --read-files raw/mESC_R1.fastq.gz \\\n        --sample mESC \\\n        --forward-ref mm10_bt2/mm10_f \\\n        --reverse-ref mm10_bt2/mm10_r \\\n        --ref-fasta mm10_bt2/mm10.fa \\\n        --num-procs 8 \\\n        --remove-clonal True \\\n        --path-to-picard=\"picard/\"\n\nAn command example for processing paired-end data. Run\n``methylpy paired-end-pipeline -h`` to get more information.\n\n::\n\n    methylpy paired-end-pipeline \\\n        --read1-files raw/mESC_R1.fastq.gz \\\n        --read2-files raw/mESC_R2.fastq.gz \\\n        --sample mESC \\\n        --forward-ref mm10_bt2/mm10_f \\\n        --reverse-ref mm10_bt2/mm10_r \\\n        --ref-fasta mm10_bt2/mm10.fa \\\n        --num-procs 8 \\\n        --remove-clonal True \\\n        --path-to-picard=\"picard/\"\n\nIf you would like methylpy to perform binomial test for teasing out\nsites that show methylation above noise level (which is mainly due to\nsodium bisulfite non-conversion), please check options ``--binom-test``\nand ``--unmethylated-control``.\n\nOutput format\n^^^^^^^^^^^^^\n\nOutput file(s) are (compressed) tab-separated text file(s) in allc\nformat. \"allc\" stands for all cytosine (C). Each row in an allc file\ncorresponds to one cytosine in the genome. An allc file contain 7\nmandatory columns and no header. Two additional columns may be added\nwith ``--add-snp-info`` option when using ``single-end-pipeline``,\n``paired-end-pipeline`` or ``call-methylation-state`` methods.\n\n+---------+----------+----------+--------+\n| index   | column   | example  | note   |\n|         | name     |          |        |\n+=========+==========+==========+========+\n| 1       | chromoso | 12       | with   |\n|         | me       |          | no     |\n|         |          |          | \"chr\"  |\n+---------+----------+----------+--------+\n| 2       | position | 18283342 | 1-base |\n|         |          |          | d      |\n+---------+----------+----------+--------+\n| 3       | strand   | +        | either |\n|         |          |          | + or - |\n+---------+----------+----------+--------+\n| 4       | sequence | CGT      | can be |\n|         | context  |          | more   |\n|         |          |          | than 3 |\n|         |          |          | bases  |\n+---------+----------+----------+--------+\n| 5       | mc       | 18       | count  |\n|         |          |          | of     |\n|         |          |          | reads  |\n|         |          |          | suppor |\n|         |          |          | ting   |\n|         |          |          | methyl |\n|         |          |          | ation  |\n+---------+----------+----------+--------+\n| 6       | cov      | 21       | read   |\n|         |          |          | covera |\n|         |          |          | ge     |\n+---------+----------+----------+--------+\n| 7       | methylat | 1        | indica |\n|         | ed       |          | tor    |\n|         |          |          | of     |\n|         |          |          | signif |\n|         |          |          | icant  |\n|         |          |          | methyl |\n|         |          |          | ation  |\n|         |          |          | (1 if  |\n|         |          |          | no     |\n|         |          |          | test   |\n|         |          |          | is     |\n|         |          |          | perfor |\n|         |          |          | med)   |\n+---------+----------+----------+--------+\n| 8       | (optiona | 3,2,3    | number |\n|         | l)       |          | of     |\n|         | num\\_mat |          | match  |\n|         | ches     |          | baseca |\n|         |          |          | lls    |\n|         |          |          | at     |\n|         |          |          | contex |\n|         |          |          | t      |\n|         |          |          | nucleo |\n|         |          |          | tides  |\n+---------+----------+----------+--------+\n| 9       | (optiona | 0,1,0    | number |\n|         | l)       |          | of     |\n|         | num\\_mis |          | mismat |\n|         | matches  |          | ches   |\n|         |          |          | at     |\n|         |          |          | contex |\n|         |          |          | t      |\n|         |          |          | nucleo |\n|         |          |          | tides  |\n+---------+----------+----------+--------+\n\nCall DMRs\n=========\n\nThis function will take a list of compressed/uncompressed allc files\n(output files from methylpy pipeline) as input and look for DMRs. Help\ninformation of this function is available via running\n``methylpy DMRfind -h``.\n\nBelow is the code of an example of calling DMRs for CG methylation\nbetween two samples, ``AD_HT`` and ``AD_IT`` on chromosome 1 through 5\nusing 8 processors.\n\n::\n\n    methylpy DMRfind \\\n        --allc-files allc/allc_AD_HT.tsv.gz allc/allc_AD_IT.tsv.gz \\\n        --samples AD_HT AD_IT \\\n        --mc-type \"CGN\" \\\n        --chroms 1 2 3 4 5 \\\n        --num-procs 8 \\\n        --output-prefix DMR_HT_IT\n\nPlease see `methylpy\ntutorial <https://github.com/yupenghe/methylpy/blob/methylpy/tutorial.md>`__\nfor details.\n\nAdditional functions for data processing\n========================================\n\nExtract cytosine methylation state from BAM file\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe ``call-methylation-state`` function allows users to get cytosine\nmethylation state (allc file) from alignment file (BAM file). It is part\nof the data processing pipeline which is especially useful for getting\nthe allc file from alignment file from other methylation data pipelines\nlike bismark. Run ``methylpy call-methylation-state -h`` to get help\ninformation. Below is an example of running this function. Please make\nsure to remove ``--paired-end True`` or use ``--paired-end False`` for\nBAM file from single-end data.\n\n::\n\n    methylpy call-methylation-state \\\n        --input-file mESC_processed_reads_no_clonal.bam \\\n        --paired-end True \\\n        --sample mESC \\\n        --ref-fasta mm10_bt2/mm10.fa \\\n        --num-procs 8\n\nGet methylation level for genomic regions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nCalculating methylation level of certain genomic regions can give an\nestimate of the methylation abundance of these loci. This can be\nachieved using the ``add-methylation-level`` function. See\n``methylpy add-methylation-level -h`` for more details about the input\nformat and available options.\n\n::\n\n    methylpy add-methylation-level \\\n        --input-tsv-file DMR_AD_IT.tsv \\\n        --output-file DMR_AD_IT_with_level.tsv \\\n        --allc-files allc/allc_AD_HT_1.tsv.gz allc/allc_AD_HT_2.tsv.gz \\\n            allc/allc_AD_IT_1.tsv.gz allc/allc_AD_IT_2.tsv.gz \\\n        --samples AD_HT_1 AD_HT_2 AD_IT_1 AD_IT_2 \\\n        --mc-type CGN \\\n        --num-procs 4\n\nMerge allc files\n^^^^^^^^^^^^^^^^\n\nThe ``merge-allc`` function can merge multiple allc files into a single\nallc file. It is useful when separate allc files are generated for\nreplicates of a tissue or cell type, and one wants to get a single allc\nfile for that tissue/cell type. See ``methylpy merge-allc -h`` for more\ninformation.\n\n::\n\n    methylpy merge-allc \\\n        --allc-files allc/allc_AD_HT_1.tsv.gz allc/allc_AD_HT_2.tsv.gz \\\n        --output-file allc/allc_AD_HT.tsv.gz \\\n        --num-procs 1 \\\n        --compress-output True\n\nFilter allc files\n^^^^^^^^^^^^^^^^^\n\nThe ``filter-allc`` function is for filtering sites by cytosine context,\ncoverage etc. See ``methylpy filter-allc -h`` for more information.\n\n::\n\n    methylpy filter-allc \\\n        --allc-file allc/allc_AD_HT_1.tsv.gz \\\n        --output-file allc/allCG_AD_HT_1.tsv.gz \\\n        --mc-type CGN \\\n        --min-cov 2 \\\n        --compress-output True\n\nIndex allc files\n^^^^^^^^^^^^^^^^\n\nThe ``index-allc`` function allows creating index file for each allc\nfile. The index file can be used for speeding up allc file reading\nsimilar to the .fai file for .fasta file. See ``methylpy index-allc -h``\nfor more information.\n\n::\n\n    methylpy index-allc \\\n        --allc-files allc/allc_AD_HT_1.tsv.gz allc/allc_AD_HT_2.tsv.gz \\\n        --num-procs 2 \\\n        --no-reindex False\n\nConvert allc file to bigwig format\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe ``allc-to-bigwig`` function generates bigwig file from allc file.\nMethylation level will be calculated in equally divided non-overlapping\ngenomic bins and the output will be stored in a bigwig file. See\n``methylpy allc-to-bigwig -h`` for more information.\n\n::\n\n    methylpy allc-to-bigwig \\\n        --allc-file results/allc_mESC.tsv.gz \\\n        --output-file results/allc_mESC.bw \\\n        --ref-fasta mm10_bt2/mm10.fa \\\n        --mc-type CGN \\\n        --bin-size 100  \n\nQuality filter for bisulfite sequencing reads\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSometimes, we want to filter out reads that cannot be mapped confidently\nor are likely from under-converted DNA fragments. This can be done using\nthe ``bam-quality-filter`` function. See\n``methylpy bam-quality-filter -h`` for parameter inforamtion.\n\nFor example, below command can be used to filter out reads with less\nthan 30 MAPQ score (poor alignment) and with mCH level greater than 0.7\n(under-conversion) if the reads contain enough (at least 3) CH sites.\n\n::\n\n    methylpy bam-quality-filter \\\n        --input-file mESC_processed_reads_no_clonal.bam \\\n        --output-file mESC_processed_reads_no_clonal.filtered.bam \\\n        --ref-fasta mm10_bt2/mm10.fa \\\n        --min-mapq 30 \\\n        --min-num-ch 3 \\\n        --max-mch-level 0.7 \\\n        --buffer-line-number 100\n\nReidentify DMRs from existing result\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nmethylpy is able to reidentify-DMR based on the result of previous\nDMRfind run. This function is especially useful in picking out DMRs\nacross a subset of categories and/or with different filters. See\n``methylpy reidentify-DMR -h`` for details about the options.\n\n::\n\n    methylpy reidentify-DMR \\\n        --input-rms-file results/DMR_P0_FBvsHT_rms_results.tsv.gz \\\n        --output-file results/DMR_P0_FBvsHT_rms_results_recollapsed.tsv \\\n        --collapse-samples P0_FB_1 P0_FB_2 P0_HT_1 P0_HT_2 \\\n        --sample-category P0_FB P0_FB P0_HT P0_HT \\\n        --min-cluster 2\n\nCite methylpy\n=============\n\nIf you use methylpy, please cite >Matthew D. Schultz, Yupeng He, John\nW.Whitaker, Manoj Hariharan, Eran A. Mukamel, Danny Leung, Nisha\nRajagopal, Joseph R. Nery, Mark A. Urich, Huaming Chen, Shin Lin, Yiing\nLin, Bing Ren, Terrence J. Sejnowski, Wei Wang, Joseph R. Ecker. Human\nBody Epigenome Maps Reveal Noncanonical DNA Methylation Variation.\nNature. 523(7559):212-216, 2015 Jul.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://pypi.python.org/pypi/methylpy/",
    "keywords": "Bioinformatics pipeline,DNA methylation,Bisulfite sequencing data,Nome-seq data,Differential methylation,Calling DMRs,Epigenetics,Functional genomics",
    "license": "LICENSE.txt",
    "maintainer": "",
    "maintainer_email": "",
    "name": "methylpy",
    "platform": "",
    "project_url": "https://pypi.org/project/methylpy/",
    "release_url": "https://pypi.org/project/methylpy/1.2.4/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Bisulfite sequencing data processing and differential methylation analysis",
    "version": "1.2.4"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "09f31db410f4431358062e016e22b509",
          "sha256": "add28bf7f26efaaa78c9c44515ea82f7c2032dabcd761a1b33ec670e032e8974"
        },
        "downloads": -1,
        "filename": "methylpy-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "09f31db410f4431358062e016e22b509",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 85467,
        "upload_time": "2017-10-26T19:38:44",
        "url": "https://files.pythonhosted.org/packages/2d/27/6f11e552c816976f1d5cccfcfca08b38992ecb6b27130c857f23295df8bd/methylpy-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "627fb1092077fca794c13cd01920324b",
          "sha256": "ee716e8eb370c1fce838344443802962084b7257eaa9b46310164ac40afd8d13"
        },
        "downloads": -1,
        "filename": "methylpy-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "627fb1092077fca794c13cd01920324b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 85581,
        "upload_time": "2017-10-27T20:12:03",
        "url": "https://files.pythonhosted.org/packages/4b/a4/098705edd0edbba2db75ee9b5a42a4f7b4b7d9ddac192436b966c6674d4d/methylpy-1.0.1.tar.gz"
      }
    ],
    "1.0.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2f39471fe60c2e232aec4df554af4d30",
          "sha256": "fcad4d2ba969cf21dad2744606774f1281c35b5f5e28e33547d4e31b3db2d8d5"
        },
        "downloads": -1,
        "filename": "methylpy-1.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "2f39471fe60c2e232aec4df554af4d30",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 96154,
        "upload_time": "2017-11-09T22:06:14",
        "url": "https://files.pythonhosted.org/packages/d3/52/2376b81bd94abd1a8b21b5590e897b729dfb58f9895544c3f3147edd7c74/methylpy-1.0.10.tar.gz"
      }
    ],
    "1.0.11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "427eb7ad5a5372ef0f6aba50a748893f",
          "sha256": "f2d920e7d2fd1e7770bba5d3ff9e2ce212070325baeec79a19c074b63eb5b7ec"
        },
        "downloads": -1,
        "filename": "methylpy-1.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "427eb7ad5a5372ef0f6aba50a748893f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 95967,
        "upload_time": "2017-11-09T23:30:01",
        "url": "https://files.pythonhosted.org/packages/5e/38/f2933b592d0edf5ebdbc7221be10f6bbab23a5706ab071f790fa3754bee3/methylpy-1.0.11.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "18b2dc20e89e69db51240eb5418bc707",
          "sha256": "3c7bd20fda73b7f1eabe48667c1c304b67f08155deb11e10677bf410ca5d7c92"
        },
        "downloads": -1,
        "filename": "methylpy-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "18b2dc20e89e69db51240eb5418bc707",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 88383,
        "upload_time": "2017-10-27T21:07:02",
        "url": "https://files.pythonhosted.org/packages/d0/28/ff45aedf81b59d5752f0e60ff47e914ca7e96a3e88449c512af372e60ca4/methylpy-1.0.2.tar.gz"
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "be1aacec915cd46bf62c28512e700481",
          "sha256": "09ab99a065992782576be01302c12225b633edd582fb5d19e5682eb5642f3037"
        },
        "downloads": -1,
        "filename": "methylpy-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "be1aacec915cd46bf62c28512e700481",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 88387,
        "upload_time": "2017-10-27T21:11:34",
        "url": "https://files.pythonhosted.org/packages/d5/43/3b240bc5d7b8ad63a7eb41d6245e4bce941d8768c78a0401b6a283f0b057/methylpy-1.0.3.tar.gz"
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "08f211706cae878c54b10cfb9c3ae073",
          "sha256": "64302c741a691cbf9e3491f701d93f3ca70b475d10c4ddb2896eb9fd0fcb87e3"
        },
        "downloads": -1,
        "filename": "methylpy-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "08f211706cae878c54b10cfb9c3ae073",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 88349,
        "upload_time": "2017-10-28T05:21:33",
        "url": "https://files.pythonhosted.org/packages/e0/59/4fccdcb2c8584503f5bb48fd1f102a1d9e5894cb04c5b5e7bacc59b3681d/methylpy-1.0.4.tar.gz"
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "823c97b752a2c8f5c3dd2bb84a652cd5",
          "sha256": "f8676d81404263db55b59ff49a44433994a9434a37c174fb6786a9af83003aa0"
        },
        "downloads": -1,
        "filename": "methylpy-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "823c97b752a2c8f5c3dd2bb84a652cd5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 87252,
        "upload_time": "2017-10-28T05:24:57",
        "url": "https://files.pythonhosted.org/packages/9f/3d/1d728b568d7a9cfca4d8e9b17a0fda3192ca4f73b51c9a5756688b47e325/methylpy-1.0.5.tar.gz"
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b00b34b86cf4a1bb6348f14e059b49b5",
          "sha256": "5e2a89d754a0d680d81928618957a72a7efa86e10168ffb95fac9ba0982e633b"
        },
        "downloads": -1,
        "filename": "methylpy-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b00b34b86cf4a1bb6348f14e059b49b5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 87667,
        "upload_time": "2017-10-29T18:22:52",
        "url": "https://files.pythonhosted.org/packages/9e/84/cbb3db9fde0318051f4b9b7241cc7a9b36dbf210370a5c2f7aa1b63db3fb/methylpy-1.0.6.tar.gz"
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "587583ec674ebe0e06e9e1b7f9824e69",
          "sha256": "60a5c8aea333dcd04b257511d08c584ec5957c6571d6723d76798078f2925edf"
        },
        "downloads": -1,
        "filename": "methylpy-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "587583ec674ebe0e06e9e1b7f9824e69",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 87980,
        "upload_time": "2017-10-30T04:23:31",
        "url": "https://files.pythonhosted.org/packages/4e/40/a55b87eeefaa6188ce6b0a244a1247025c3a00dbacd28430700926446691/methylpy-1.0.7.tar.gz"
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8f70ccae942fda39057a01f9df21053a",
          "sha256": "d8b1e08ad695ae70eb9430242e0dc747449c95cf50651665f2186235f498f76d"
        },
        "downloads": -1,
        "filename": "methylpy-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "8f70ccae942fda39057a01f9df21053a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 88309,
        "upload_time": "2017-11-01T16:05:06",
        "url": "https://files.pythonhosted.org/packages/ed/a3/9487a188402838c9d9e04fd339cbd44846e6feae93850a94c223fa8cf393/methylpy-1.0.8.tar.gz"
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "58ae1573e47cd228946d5d2cce2566ae",
          "sha256": "7528a077e68c019c85c8249bde2d1667d773af29c4382674de5c67f20eea37bd"
        },
        "downloads": -1,
        "filename": "methylpy-1.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "58ae1573e47cd228946d5d2cce2566ae",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 94356,
        "upload_time": "2017-11-02T19:37:22",
        "url": "https://files.pythonhosted.org/packages/e8/9a/a7b6ebeac5e920d3f453f97f46583140588db3aa07eda4593516d9a763d5/methylpy-1.0.9.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d68f4944fc424865aa561a9286ce56bd",
          "sha256": "4cb3c18721b91c88cca3bf293dde0eb9dd0014ccd2be06ed0890bdfcb819450e"
        },
        "downloads": -1,
        "filename": "methylpy-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d68f4944fc424865aa561a9286ce56bd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 97204,
        "upload_time": "2017-11-12T18:23:48",
        "url": "https://files.pythonhosted.org/packages/59/3e/16b0968ea1b84224c127eface40b63009a04334deb1b20d6f8857792cefe/methylpy-1.1.0.tar.gz"
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "20ff3e7cfb8c1ce0fa6e7d809f0f6426",
          "sha256": "def2084fc9d227dafe14820e900059ef7d67580438cea94e4dfdf858f1dd53cf"
        },
        "downloads": -1,
        "filename": "methylpy-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "20ff3e7cfb8c1ce0fa6e7d809f0f6426",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 96172,
        "upload_time": "2017-11-13T22:35:52",
        "url": "https://files.pythonhosted.org/packages/50/4e/789d2754837c51de8334fe5804700219946efbf3c5822fd7a8ba04fef400/methylpy-1.1.1.tar.gz"
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b16b8259a4864a20e5e519379e264476",
          "sha256": "819e091f8b9757a565aa6c8e048906248597f58b886f36f9e52e414cf1efd725"
        },
        "downloads": -1,
        "filename": "methylpy-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b16b8259a4864a20e5e519379e264476",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 96522,
        "upload_time": "2017-11-16T07:12:57",
        "url": "https://files.pythonhosted.org/packages/6d/6c/ccd925b9c70891d87a4f0561db9ca67ca20b7a180469118283ef97c4edd3/methylpy-1.1.2.tar.gz"
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d0147952dc7404712b9873fa94b6fa72",
          "sha256": "846b198061bb2b6c69c51d879997d582fd1ef49522e933b89d890439340a33eb"
        },
        "downloads": -1,
        "filename": "methylpy-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d0147952dc7404712b9873fa94b6fa72",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 101199,
        "upload_time": "2017-11-16T07:18:52",
        "url": "https://files.pythonhosted.org/packages/e8/f8/8d875c1569a1921ce76a4f20adb1018d2c6de2675780ba7ea70e21c8fb95/methylpy-1.1.3.tar.gz"
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1e92eca9f365109a077ee7525836a3af",
          "sha256": "d7b8dc4f5e41420351ff441b10b8752d006d300692d87b27f980e92ab80980e8"
        },
        "downloads": -1,
        "filename": "methylpy-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1e92eca9f365109a077ee7525836a3af",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 101314,
        "upload_time": "2017-11-16T08:07:49",
        "url": "https://files.pythonhosted.org/packages/2c/f3/1de6c8f0dc27cef197d72418a5972681717f5cc2155fa0702dc3239bdf6d/methylpy-1.1.4.tar.gz"
      }
    ],
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "39e7f29cdfb8a43d30db186379aa6407",
          "sha256": "ece9e41f2b48ad05d20bee706ab247b51d917e7db5db8b37652cd821a7d3be24"
        },
        "downloads": -1,
        "filename": "methylpy-1.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "39e7f29cdfb8a43d30db186379aa6407",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 101233,
        "upload_time": "2017-11-16T21:47:03",
        "url": "https://files.pythonhosted.org/packages/bd/f1/0f4d6dadc200e19bd20ce5b366a7c1344583f443cf35ebfcf1bd7f09cb0e/methylpy-1.1.5.tar.gz"
      }
    ],
    "1.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c01e40087598c564f0a71e9d364e60ab",
          "sha256": "409ee3496a138d9b78918ea4a263cab7b3ea68cf1091175c6111c8e1da137a19"
        },
        "downloads": -1,
        "filename": "methylpy-1.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c01e40087598c564f0a71e9d364e60ab",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 103828,
        "upload_time": "2017-11-20T22:13:37",
        "url": "https://files.pythonhosted.org/packages/08/61/4c7b0ca7192f072fa7c1ac28b2c843de6fb690a6d3213206cf42a2f45a1a/methylpy-1.1.6.tar.gz"
      }
    ],
    "1.1.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a1a852b6494c3109a4f1cc40ed2e656e",
          "sha256": "74c2f20f0c08a22ab45b384eef045054775ae0aa432b9e0d3973f8b187d4831b"
        },
        "downloads": -1,
        "filename": "methylpy-1.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "a1a852b6494c3109a4f1cc40ed2e656e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 103854,
        "upload_time": "2017-11-21T17:56:56",
        "url": "https://files.pythonhosted.org/packages/d7/f8/b450f46f490b73103a226a952d59137aba7ac5d259b2fbbdbf5e9d1e5842/methylpy-1.1.7.tar.gz"
      }
    ],
    "1.1.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5b451149a120f0e953dcf4a27375bdde",
          "sha256": "9fe7436d472dcc51ef6c4dccb62f071e3a02278f9d7d0e52071dc9ef5f71e565"
        },
        "downloads": -1,
        "filename": "methylpy-1.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "5b451149a120f0e953dcf4a27375bdde",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 104248,
        "upload_time": "2017-11-25T05:58:25",
        "url": "https://files.pythonhosted.org/packages/06/82/6dbff4ee5a22114e89e960d6ff3f532232ca09fda9ba3f81bba9229e358b/methylpy-1.1.8.tar.gz"
      }
    ],
    "1.1.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "515769d6909d37d289e23cceab75b40a",
          "sha256": "0a4e1e504628dc3e0adc7a0f100d8eaaf4329493955b495fe3ce97ccd62460b0"
        },
        "downloads": -1,
        "filename": "methylpy-1.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "515769d6909d37d289e23cceab75b40a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 104238,
        "upload_time": "2017-11-25T15:07:06",
        "url": "https://files.pythonhosted.org/packages/a8/93/b20feda0088dda8e4e3ed04ce390f17c594ef43ef3b1c538c6b26602a808/methylpy-1.1.9.tar.gz"
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6103350d8a29187045c848c213f1fa92",
          "sha256": "b16d054de8049c6157136502cee138ba189a9d3265d1abae48d07e4690bac4b2"
        },
        "downloads": -1,
        "filename": "methylpy-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6103350d8a29187045c848c213f1fa92",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 105547,
        "upload_time": "2017-12-01T23:28:20",
        "url": "https://files.pythonhosted.org/packages/56/e5/f2690474b6ab3874ca341bcec84e0f1b333ff907eec7be5f28ae867d5564/methylpy-1.2.0.tar.gz"
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b07145e5aa05f6e701db7ecfac2c752b",
          "sha256": "92b9022e2c4c521ba90c1b5298f0e2e11baecbcdd51b5ba368e7501004467e71"
        },
        "downloads": -1,
        "filename": "methylpy-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b07145e5aa05f6e701db7ecfac2c752b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 105479,
        "upload_time": "2017-12-01T23:38:27",
        "url": "https://files.pythonhosted.org/packages/e5/fc/31654fa1eb560000e4ec6e1e092909be7d408ce9ad5af5ae6cd5b72ee807/methylpy-1.2.1.tar.gz"
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "30442967b68c4e12046f82f435b2687c",
          "sha256": "08240ca7fad86cb741a595b6019a32daa1ede41d565fa127b1b73f28dbce270a"
        },
        "downloads": -1,
        "filename": "methylpy-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "30442967b68c4e12046f82f435b2687c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 105519,
        "upload_time": "2017-12-02T22:53:21",
        "url": "https://files.pythonhosted.org/packages/d0/db/6913cef75b7735b6b0f17c5ba18117b4fcf8bb3eaa3eb2973b41e1a7bbcf/methylpy-1.2.2.tar.gz"
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "304a73cfb912b5491814171ead9bdb02",
          "sha256": "33a52ae2ec993f6919ae4ca2036dbce50a566adc3af3849adc8b0b8fcd3c4a2c"
        },
        "downloads": -1,
        "filename": "methylpy-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "304a73cfb912b5491814171ead9bdb02",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 105535,
        "upload_time": "2017-12-06T06:08:49",
        "url": "https://files.pythonhosted.org/packages/4b/9c/9a7f16a1490bb29f3e5d90f9cef932852006a47376c8d347fea15b352efb/methylpy-1.2.3.tar.gz"
      }
    ],
    "1.2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fd7528f992489a5f0430c4161e61b63a",
          "sha256": "c214a1ff7aa39651cd9f1b8cc0f0d695ae08ebb54ec171c7c592acceba8539d5"
        },
        "downloads": -1,
        "filename": "methylpy-1.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "fd7528f992489a5f0430c4161e61b63a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 106411,
        "upload_time": "2017-12-07T01:38:28",
        "url": "https://files.pythonhosted.org/packages/23/eb/81cc318b2bcb79a0df221d0ccc43c62c9e0f4b9e4d6f450b2b544685b812/methylpy-1.2.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fd7528f992489a5f0430c4161e61b63a",
        "sha256": "c214a1ff7aa39651cd9f1b8cc0f0d695ae08ebb54ec171c7c592acceba8539d5"
      },
      "downloads": -1,
      "filename": "methylpy-1.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "fd7528f992489a5f0430c4161e61b63a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 106411,
      "upload_time": "2017-12-07T01:38:28",
      "url": "https://files.pythonhosted.org/packages/23/eb/81cc318b2bcb79a0df221d0ccc43c62c9e0f4b9e4d6f450b2b544685b812/methylpy-1.2.4.tar.gz"
    }
  ]
}