{
  "info": {
    "author": "Naomi Most",
    "author_email": "naomi@nthmost.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "******************************************************\nMetaVariant\n******************************************************\n\nPython toolkit for parsing HGVS strings describing genetic variants (mutations)\ninto components and generating lexical synonyms of these descriptors.\n\nRequirements\n============\n\nYou'll need a UNIX-like environment to use this package. Both OS X and Linux have been confirmed to work.\n\nAdditionally, your system must contain the C development version of the client library\nfor Postgres 9.3 or later (needed to connect to UTA services). \n\nOn OS X using brew:\n\n.. code-block:: bash\n\n  $ brew install postgresql\n\nOn Linux using Ubuntu:\n\n.. code-block:: bash\n\n  $ apt-get install libpq-dev\n\nPython library dependencies for variant_lexicon are the following::\n\n  numpy\n  biopython\n  uta\n  hgvs\n\nThe above \"should\" be successfully installed by using setup.py and/or by installing\nthis package via pip.\n\n\nOptional but Recommended: IPython\n---------------------------------\n\nInstall ipython via pypi:\n\n.. code-block:: bash\n\n  $ pip install ipython\n  \nMore installation options and instructions are available on `the iPython installation page <http://ipython.org/ipython-doc/stable/install/install.html>`_.\n\nVariant: shortcut to SequenceVariant\n====================================\n\n`Variant` is an API shortcut to instantiating a SequenceVariant object from an HGVS string. It accepts\nboth gene-name-bearing and non-gene-name-bearing HGVS strings. \n\nSee [Human Genome Variation Society](http://www.hgvs.org/) for explanation of HGVS strings.\n\nExamples of valid HGVS strings::\n\n  NM_198056.2:c.4786T>A\n  NC_000023.10:g.32841489delT\n  NP_009225.1:p.Glu1000_Glu1001del\n  NM_001165963.1(SCN1A):c.384_1662dup\n  \n\nNote: some valid HGVS strings currently cannot be parsed by the hgvs library (as of 6/17/2016). Examples::\n\n  NC_000001.11:g.(?_215888426)_(215900905_?)del\n  NM_000251.2:c.212-?_366+?dup\n\nWhen an illogical or invalid HGVS string is provided to `Variant`, this function returns None. (Tune into \nthe \"metavariant\" logger at INFO level for information.)\n\n`Variant` will also accept a SequenceVariant object as its argument, returning the same variant (identity).\n\n\nVariantLVG: Lexical Variant Generation\n======================================\n\n`VariantLVG` takes an hgvs.SequenceVariant object or a plain HGVS string and uses the Universal Transcript\nArchive (UTA) to find as many related transcripts and sequence variants as possible that could be used as\n\"synonyms\" of the provided variant.\n\nThis class raises `CriticalHgvsError` upon instantiation if the supplied HGVS string fails to create a \nvalid SequenceVariant object.\n\nUsage example:\n\n.. code-block:: python\n\n  hgvs_text = 'NM_198056.2:c.4786T>A'\n  lex = VariantLVG(hgvs_text)\n\n  print(lex.variants)\n  print(lex.transcripts)\n  print(lex.gene_name)\n\nEnrichment\n----------\n\nVariantLVG provides for \"enrichment\" of lexical variant generation by allowing\nmore transcripts and variations to be supplied at instantiation. Just use the \nappropriate keyword for the type of information, remembering that the \"enrichment\"\nkeyword arguments are all lists.\n\nKeyword Arguments\n-----------------\n\n- transcripts (list): list of strings describing valid alternative transcripts for seqvar\n- seqvar_max_len (int): restrict posedit lengths to this number of characters (or fewer).  \n- hgvs_c (list): see Enrichment above\n- hgvs_g (list): see Enrichment above\n- hgvs_n (list): see Enrichment above\n- hgvs_p (list): see Enrichment above\n\nAttributes\n----------\n\n- hgvs_text: original hgvs string from instantiation\n- seqvar: original SequenceVariant from instantiation\n- transcripts: list of strings indicating related transcripts\n- variants: 2-level dictionary of shape { seqtype: { hgvs_text: seqvar } }\n\nProperties\n----------\n\n+ gene_name: returns HUGO gene-name if it can be ascertained using UTA. (Lazy-loaded attribute _gene_name.)\n+ hgvs_c: returns flat list of c.DNA hgvs strings from variants\n+ hgvs_g: returns flat list of g.DNA hgvs strings from variants\n+ hgvs_n: returns flat list of n.RNA hgvs strings from variants \n+ hgvs_p: returns flat list of protein hgvs strings from variants\n+ seqvars: returns flat list of SequenceVariant objects from variants\n\nMethods\n-------\n\n+ to_dict(): returns non-underscored attributes (seqvar, hgvs_text, transcripts, seqvars) as dictionary\n  \n\nVariantComponents: Parsing and \"Slang\"\n======================================\n\n`VariantComponents` allows instantiation in two different ways: using an hgvs.SequenceVariant object\nand using a set of components as keyword arguments.\n\nUsage starting from a SequenceVariant object::\n\n    comp = VariantComponents(seqvar)\n\nUsage starting from individual components::\n\n    comp = VariantComponents(seqtype='c', edittype='SUB', pos='322', ref='C', alt='T')\n\nIf no seqtype is supplied, VariantComponents tries to infer the sequence type heuristically (e.g. the presence\nof a \"U\" in the ref or the alt implies this is an RNA string).\n\nVariantComponents may raise a `RejectedSeqVar` exception during instantiation (see \"Exceptions\" below).\n\nA VariantComponents object provides access to the following attributes and properties::\n    \n   seqtype: the sequence type of this seqvar (one of 'c', 'g', 'g', 'n')\n   edittype: the type of mutation represented by this variant ('SUB', 'DEL', 'FS', etc)\n   pos: position of the edit\n   ref: reference sequence at given position (aka \"wildtype\")\n   alt: alternate (or \"mutant\") at given position\n\n   posedit: returns the HGVS \"official\" construction of this seqvar's position + edit information.\n   posedit_slang: returns a list of algorithmically generated \"slang\" for given seqvar's posedit.\n\n\nExceptions\n==========\n\nAll exceptions can be found and imported from metavariant.exceptions.\n\n`CriticalHgvsError`: raised when input HGVS string fails to instantiate a SequenceVariant object within the VariantLVG object.\n\n`RejectedSeqVar`: raised inside VariantComponents when input sequence components fail certain tests of completeness. For example, a protein seqvar will throw this Exception if the protein effect string is only a \"?\" (i.e. unknown protein effect).  A \"SUB\" (substitution) will fail the completeness test if an \"alt\" is not provided in the instantiated components.\n\n\nSetting UTA Server\n==================\n\nWhen you find yourself outgrowing the public UTA server, you may want to install your own UTA server. \nThe instructions can be found on the [biocommons/uta repository README](https://bitbucket.org/biocommons/uta). Both \"installing from database dumps\" \nand installing from docker have been tested working with metavariant.\n\n*How to Set UTA Host Variables*\n\nmetavariant connects to a UTA server as soon as it is imported, so reconfiguring which UTA server is used\nhappens at the environment variable level.  The relevant variables::\n\n    UTA_HOST (default: 'default')\n    UTA_PORT (default: 5432)\n    UTA_USER (default: 'uta_admin')\n    UTA_PASS (default: 'uta_admin')\n    UTA_SCHEMA (default: 'uta_20150903')\n    UTA_TIMEOUT (default: 3) -- how long to wait before giving up on a connection\n\nWhen you set up your own postgres server for the UTA database and you connect on the same server, the only\nenvironment variable you probably need to change is `UTA_HOST` (set it to \"localhost\").\n\nYou may have to do more postgres administration to get your preferred configuration going, which is outside the scope of this README.\n\n\nSupport and Maintenance\n=======================\n\nThis library was developed in-house at Text2Gene, LLC.\n\nIt is provided to the community free of charge by way of the Apache 2.0 License.\n\nYou are free to modify it for commercial and non-commercial uses; just don't try to sell it as-is.\n\nContributions, extensions, bug reports, suggestions, and swear words all happily accepted, \nin that order.\n\nnaomi@text2gene.com\n2016 and onwards\n\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "UNKNOWN",
    "keywords": null,
    "license": "Apache 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "metavariant",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/metavariant/",
    "release_url": "https://pypi.org/project/metavariant/0.0.3.2/",
    "requires_python": null,
    "summary": "a lexical manipulation toolkit for genetic variant descriptors (hgvs, etc)",
    "version": "0.0.3.2"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "56c271141ce2cb5363da2f9a0075fd62",
          "sha256": "f7e81155468b90f5acff9a7d1bcfaaabb55e3b02fc9f410a14d5dae10df14524"
        },
        "downloads": 233,
        "filename": "metavariant-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "56c271141ce2cb5363da2f9a0075fd62",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13026,
        "upload_time": "2016-06-13T23:10:11",
        "url": "https://files.pythonhosted.org/packages/89/f9/da43769ee90ec710c56a1494c1ae1829703776a29d205738893ebccf4b98/metavariant-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ccf0df9c2187577b89e716003f16aed7",
          "sha256": "62903571eb9dbdca180cbab7c50b3a26769bb0e14e419ebeb744ef45d3044a50"
        },
        "downloads": 129,
        "filename": "metavariant-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ccf0df9c2187577b89e716003f16aed7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14757,
        "upload_time": "2016-06-17T08:58:42",
        "url": "https://files.pythonhosted.org/packages/13/82/9591afaecbdb7e95c379df5ef062027163e79a35831d4641280fdc4d7908/metavariant-0.0.2.tar.gz"
      }
    ],
    "0.0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fe8259e581a1ab892c012fcde401485f",
          "sha256": "2c890a146cd4af90cb2718a4ba7ccb3d88db461d22134a5dbedaebe1584f84a5"
        },
        "downloads": 131,
        "filename": "metavariant-0.0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fe8259e581a1ab892c012fcde401485f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15033,
        "upload_time": "2016-06-17T23:31:26",
        "url": "https://files.pythonhosted.org/packages/b8/47/c66882d10f50698891327f4322e63ddddb84ff93dc7d4d63de73af3090a5/metavariant-0.0.2.1.tar.gz"
      }
    ],
    "0.0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d9a1b68d7b3d75893788a6b7b29cb23a",
          "sha256": "00724abd44b7e8dc2f78888c634952e4d9d02d004bf8158f4db9e02e547f18df"
        },
        "downloads": 170,
        "filename": "metavariant-0.0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d9a1b68d7b3d75893788a6b7b29cb23a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15036,
        "upload_time": "2016-06-18T06:21:31",
        "url": "https://files.pythonhosted.org/packages/26/df/439861dc7ce1b1dbbad4e0183b10040a155f940f02796c331da635ce6d0f/metavariant-0.0.2.2.tar.gz"
      }
    ],
    "0.0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c49c4f990857396906c55808666d8eea",
          "sha256": "e3e75b6c7a87a7e6229e1aaf1aab64d29c73e99eecd5c4a6a35b424039017650"
        },
        "downloads": 251,
        "filename": "metavariant-0.0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c49c4f990857396906c55808666d8eea",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15056,
        "upload_time": "2016-07-07T05:42:20",
        "url": "https://files.pythonhosted.org/packages/44/8c/a71def1f9ff0331b10c34bc2d663710ad77f62a5ef531cfb2164d2239d58/metavariant-0.0.2.3.tar.gz"
      }
    ],
    "0.0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "47eb4b78474d399c48820b4ce20a99fa",
          "sha256": "c0ac816c1a738dcfa18fc867c596b3ddde7c366f6b0c33748b501646c6a4fb35"
        },
        "downloads": 255,
        "filename": "metavariant-0.0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "47eb4b78474d399c48820b4ce20a99fa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15557,
        "upload_time": "2016-07-07T07:07:25",
        "url": "https://files.pythonhosted.org/packages/74/5f/3e3033ad31313954a37cfad8fe8ab018d562627436708f362e2f9f14585d/metavariant-0.0.2.4.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "52384fd835e225e21572e9bb9dce8c25",
          "sha256": "43c9eea3bff9cc4929660eccc451d47a958917bd3487ff4748c962612d29afe1"
        },
        "downloads": 99,
        "filename": "metavariant-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "52384fd835e225e21572e9bb9dce8c25",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18417,
        "upload_time": "2016-08-06T06:46:25",
        "url": "https://files.pythonhosted.org/packages/fd/35/7f3cb41327c16063b8d2a592c3553f16d88d6ac25944281d4245ea131e7a/metavariant-0.0.3.tar.gz"
      }
    ],
    "0.0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0dd5cdc4c581c27df1eb0fe84b7adcbc",
          "sha256": "29a05b80fabc599d802fe79cb10023aa6480959ba467ba3272173c6590b9bef5"
        },
        "downloads": 90,
        "filename": "metavariant-0.0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0dd5cdc4c581c27df1eb0fe84b7adcbc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19106,
        "upload_time": "2016-08-10T07:36:55",
        "url": "https://files.pythonhosted.org/packages/d7/4e/ec165d724c93426c00e29e7a2a5b61bd29703b5b9d56eef7117d06ea83c2/metavariant-0.0.3.1.tar.gz"
      }
    ],
    "0.0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9885172ff49ce9dcd696e00c25d6ddda",
          "sha256": "9667369296c35d7ad3af934492a607f4c5b2da919682ccf2bf56dce1e990edf0"
        },
        "downloads": 336,
        "filename": "metavariant-0.0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9885172ff49ce9dcd696e00c25d6ddda",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19186,
        "upload_time": "2016-08-13T04:53:11",
        "url": "https://files.pythonhosted.org/packages/b0/4b/87b203708ac06aca9dc51d54c8cb667a1ef68e9a9bbd43192d4dfe5cbd71/metavariant-0.0.3.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9885172ff49ce9dcd696e00c25d6ddda",
        "sha256": "9667369296c35d7ad3af934492a607f4c5b2da919682ccf2bf56dce1e990edf0"
      },
      "downloads": 336,
      "filename": "metavariant-0.0.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9885172ff49ce9dcd696e00c25d6ddda",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 19186,
      "upload_time": "2016-08-13T04:53:11",
      "url": "https://files.pythonhosted.org/packages/b0/4b/87b203708ac06aca9dc51d54c8cb667a1ef68e9a9bbd43192d4dfe5cbd71/metavariant-0.0.3.2.tar.gz"
    }
  ]
}