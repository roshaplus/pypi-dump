{
  "info": {
    "author": "hsz",
    "author_email": "hsz1273327@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Documentation :: Sphinx"
    ],
    "description": "\naioorm\n===============================\n\nversion: 0.0.2\n\nauthor: hsz\n\nemail: hsz1273327@gmail.com\n\n\n\n--------------------------------------------\n\nAsyncio interface for peewee_ modeled after torpeewee_\n\n\nFeature\n----------------------\n\n* support mysql and postgresql\n* database factory using database URL\n* use peewee's fields\n* ManyToManyField support\n* Shortcuts support\n* csv dump support\n\nInstall\n--------------------------------\n\n- ``python -m pip install aioorm``\n\nExample: GRUD\n-------------------------------\n\n.. code:: python\n\n    from aioorm import AioModel, AioMySQLDatabase\n    from peewee import CharField, TextField, DateTimeField\n    from peewee import ForeignKeyField, PrimaryKeyField\n\n\n    db = AioMySQLDatabase('test', host='127.0.0.1', port=3306,\n                         user='root', password='')\n\n\n    class User(AioModel):\n        username = CharField()\n\n        class Meta:\n            database = db\n\n\n    class Blog(AioModel):\n        user = ForeignKeyField(User)\n        title = CharField(max_length=25)\n        content = TextField(default='')\n        pub_date = DateTimeField(null=True)\n        pk = PrimaryKeyField()\n\n        class Meta:\n            database = db\n\n\n    # create connection pool\n    await db.connect(loop)\n\n    # count\n    await User.select().count()\n\n    # async iteration on select query\n    async for user in User.select():\n        print(user)\n\n    # fetch all records as a list from a query in one pass\n    users = await User.select()\n\n    # insert\n    user = await User.create(username='kszucs')\n\n    # modify\n    user.username = 'krisztian'\n    await user.save()\n\n    # async iteration on blog set\n    [b.title async for b in user.blog_set.order_by(Blog.title)]\n\n    # close connection pool\n    await db.close()\n\n    # see more in the tests\n\n\n\nExample: Many to many\n-------------------------------\n\nNote that `AioManyToManyField` must be used instead of `ManyToMany`.\n\n\n.. code:: python\n\n    from aioorm import AioManyToManyField\n\n\n    class User(AioModel):\n        username = CharField(unique=True)\n\n        class Meta:\n            database = db\n\n\n    class Note(AioModel):\n        text = TextField()\n        users = AioManyToManyField(User)\n\n        class Meta:\n            database = db\n\n\n    NoteUserThrough = Note.users.get_through_model()\n\n\n    async for user in note.users:\n        # do something with the users\n\n\nCurrently the only limitation I'm aware of immidiate setting of instance relation must be replaced with a method call:\n\n.. code:: python\n\n    # original, which is not supported\n    charlie.notes = [n2, n3]\n\n    # use instead\n    await charlie.notes.set([n2, n3])\n\n\nSerializing\n-----------\n\nConverting to dict requires the asyncified version of `model_to_dict`\n\n.. code:: python\n\n    from aioorm import model_to_dict\n\n    serialized = await model_to_dict(user)\n\nDump to csv\n-------------\n\ntables can be dump to a csv file.\n\n\n.. code:: python\n\n    from aioorm.utils import aiodump_csv\n    query = User.select().order_by(User_csv.id)\n    await aiodump_csv(query,str(filepath))\n\n\n\nDocumentation\n--------------------------------\n\n`Documentation on Readthedocs <https://github.com/Python-Tools/aioorm>`_.\n\n\n\nTODO\n-----------------------------------\n* async csv loader\n* async dataset support\n* more test\n\n\n\nLimitations\n-----------\n* untested transactions\n* only support mysql and postgresql\n\n.. _peewee: http://docs.peewee-orm.com/en/latest/\n.. _torpeewee: https://github.com/snower/torpeewee\n.. _aiopeewee: https://github.com/kszucs/aiopeewee\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Python-Tools/aioorm",
    "keywords": "orm",
    "license": "Mozilla",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aioorm",
    "platform": "",
    "project_url": "https://pypi.org/project/aioorm/",
    "release_url": "https://pypi.org/project/aioorm/0.0.2/",
    "requires_python": "",
    "summary": "a simple orm suport asyncio,fork of aiopeewee",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d3a66889dac4d40c1d865fb64f432ebf",
          "sha256": "92ffb733e2b38eb1f1e27a37c013d616c97bebf275c3ff0ca47ae82f96273d82"
        },
        "downloads": 0,
        "filename": "aioorm-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3a66889dac4d40c1d865fb64f432ebf",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 26893,
        "upload_time": "2017-06-21T16:02:38",
        "url": "https://files.pythonhosted.org/packages/c4/8b/2d10ad0a342d2d1f4f6e629ad9a4163333b6ddef2236989d692523d75fc9/aioorm-0.0.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0d7b92afb8f9fe99e6ba2009e47f6cce",
          "sha256": "6c5d42e07a52d1e9024dfd15a4c8762e3baa16c7aeab61168d365ffdb68fa65c"
        },
        "downloads": 0,
        "filename": "aioorm-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0d7b92afb8f9fe99e6ba2009e47f6cce",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 27973,
        "upload_time": "2017-06-21T16:02:09",
        "url": "https://files.pythonhosted.org/packages/80/f6/25206383e81fefb38eec0ca98f1812a9ccc9b4a1ebfb67423d61b8ffffb1/aioorm-0.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d3a66889dac4d40c1d865fb64f432ebf",
        "sha256": "92ffb733e2b38eb1f1e27a37c013d616c97bebf275c3ff0ca47ae82f96273d82"
      },
      "downloads": 0,
      "filename": "aioorm-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d3a66889dac4d40c1d865fb64f432ebf",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 26893,
      "upload_time": "2017-06-21T16:02:38",
      "url": "https://files.pythonhosted.org/packages/c4/8b/2d10ad0a342d2d1f4f6e629ad9a4163333b6ddef2236989d692523d75fc9/aioorm-0.0.2-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "0d7b92afb8f9fe99e6ba2009e47f6cce",
        "sha256": "6c5d42e07a52d1e9024dfd15a4c8762e3baa16c7aeab61168d365ffdb68fa65c"
      },
      "downloads": 0,
      "filename": "aioorm-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "0d7b92afb8f9fe99e6ba2009e47f6cce",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 27973,
      "upload_time": "2017-06-21T16:02:09",
      "url": "https://files.pythonhosted.org/packages/80/f6/25206383e81fefb38eec0ca98f1812a9ccc9b4a1ebfb67423d61b8ffffb1/aioorm-0.0.2.tar.gz"
    }
  ]
}