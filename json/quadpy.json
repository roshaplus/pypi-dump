{
  "info": {
    "author": "Nico Schl\u00f6mer",
    "author_email": "nico.schloemer@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "quadpy\n======\n\nYour one-stop shop for numerical integration in Python.\n\n|CircleCI| |codecov| |PyPi Version| |GitHub stars|\n\nHundreds of numerical integration schemes for line segments, circles,\ndisks, triangles, quadrilaterals, spheres, balls, tetrahedra, hexahedra,\nwedges, pyramids, n-spheres, n-balls, n-cubes, n-simplices, and the 2D\nplanes with weight functions exp(-r) and exp(-r2).\n\nTo numerically integrate any function over any given triangle, do\n\n.. code:: python\n\n    import numpy\n    import quadpy\n\n    def f(x):\n        return numpy.sin(x[0]) * numpy.sin(x[1])\n\n    triangle = numpy.array([[0.0, 0.0], [1.0, 0.0], [0.7, 0.5]])\n\n    val = quadpy.triangle.integrate(f, triangle, quadpy.triangle.Strang(9))\n\nThis uses Strang's rule of degree 6.\n\nquadpy is fully vectorized, so if you like to compute the integral of a\nfunction on many domains at once, you can provide them all in one\n``integrate()`` call, e.g.,\n\n.. code:: python\n\n    triangles = numpy.stack([\n        [[0.0, 0.0], [1.0, 0.0], [0.0, 1.0]],\n        [[1.2, 0.6], [1.3, 0.7], [1.4, 0.8]],\n        [[26.0, 31.0], [24.0, 27.0], [33.0, 28]],\n        [[0.1, 0.3], [0.4, 0.4], [0.7, 0.1]],\n        [[8.6, 6.0], [9.4, 5.6], [7.5, 7.4]]\n        ], axis=-2)\n\nThe same goes for functions with vectorized output, e.g.,\n\n.. code:: python\n\n    def f(x):\n        return [numpy.sin(x[0]), numpy.sin(x[1])]\n\nMore examples under\n`test/examples\\_test.py <https://github.com/nschloe/quadpy/blob/master/test/examples_test.py>`__.\n\nAdaptive quadrature\n~~~~~~~~~~~~~~~~~~~\n\nquadpy can do adaptive quadrature for certain domains. Again, everything\nis fully vectorized, so you can provide multiple intervals and\nvector-valued functions.\n\nLine segments\n^^^^^^^^^^^^^\n\n.. code:: python\n\n    val, error_estimate = quadpy.line_segment.adaptive_integrate(\n            lambda x: x * sin(5 * x),\n            [0.0, pi],\n            1.0e-10\n            )\n\nTriangles\n^^^^^^^^^\n\n.. code:: python\n\n    val, error_estimate = quadpy.triangle.adaptive_integrate(\n            lambda x: x[0] * sin(5 * x[1]),\n            [[0.0, 0.0], [1.0, 0.0], [0.0, 1.0]],\n            1.0e-10\n            )\n\n*ProTip:* You can provide many triangles that together form a domain to\nget an approximation of the integral over the domain.\n\nSchemes\n-------\n\nLine segment\n~~~~~~~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/line.png\n   :alt: \n   :width: 50.0%\n\n-  Chebyshev-Gauss (both variants, arbitrary degree)\n-  Clenshaw-Curtis (after\n   `Waldvogel <https://dx.doi.org/10.1007/s10543-006-0045-4>`__,\n   arbitrary degree)\n-  Fej\u00e9r-type-1 (after\n   `Waldvogel <https://dx.doi.org/10.1007/s10543-006-0045-4>`__,\n   arbitrary degree)\n-  Fej\u00e9r-type-2 (after\n   `Waldvogel <https://dx.doi.org/10.1007/s10543-006-0045-4>`__,\n   arbitrary degree)\n-  Gauss-Hermite (via\n   `NumPy <https://docs.scipy.org/doc/numpy/reference/generated/numpy.polynomial.hermite.hermgauss.html>`__,\n   arbitrary degree)\n-  Gauss-Laguerre (via\n   `NumPy <https://docs.scipy.org/doc/numpy/reference/generated/numpy.polynomial.laguerre.laggauss.html>`__,\n   arbitrary degree)\n-  Gauss-Legendre (via\n   `NumPy <https://docs.scipy.org/doc/numpy/reference/generated/numpy.polynomial.legendre.leggauss.html>`__,\n   arbitrary degree)\n-  Gauss-Lobatto (arbitrary degree)\n-  Gauss-Kronrod (after\n   `Laurie <https://doi.org/10.1090/S0025-5718-97-00861-2>`__, arbitrary\n   degree)\n-  `Gauss-Patterson <https://doi.org/10.1090/S0025-5718-68-99866-9>`__\n   (7 schemes up to degree 191)\n-  Gauss-Radau (arbitrary degree)\n-  closed Newton-Cotes (arbitrary degree)\n-  open Newton-Cotes (arbitrary degree)\n\nYou can use `orthopy <https://github.com/nschloe/orthopy>`__ to generate\nGauss formulas for your own weight functions.\n\nExample:\n\n.. code:: python\n\n    val = quadpy.line_segment.integrate(\n        lambda x: numpy.exp(x),\n        [0.0, 1.0],\n        quadpy.line_segment.GaussPatterson(5)\n        )\n\nCircle\n~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/circle.png\n   :alt: \n   :width: 25.0%\n\n-  `Krylov <https://books.google.de/books/about/Approximate_Calculation_of_Integrals.html?id=ELeRwR27IRIC&redir_esc=y>`__\n   (1959, arbitrary degree)\n\nExample:\n\n.. code:: python\n\n    val = quadpy.circle.integrate(\n        lambda x: numpy.exp(x[0]),\n        [0.0, 0.0], 1.0,\n        quadpy.circle.Krylov(7)\n        )\n\nTriangle\n~~~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/triangle.png\n   :alt: \n   :width: 25.0%\n\nApart from the classical centroid, vertex, and seven-point schemes we\nhave\n\n-  `Hammer-Marlowe-Stroud <https://doi.org/10.1090/S0025-5718-1956-0086389-6>`__\n   (1956, 5 schemes up to degree 5),\n-  `Hammer-Stroud <https://doi.org/10.1090/S0025-5718-1958-0102176-6>`__\n   (1958, 2 schemes up to degree 3)\n-  open and closed Newton-Cotes schemes (1970, after\n   `Silvester <https://doi.org/10.1090/S0025-5718-1970-0258283-6>`__,\n   arbitrary degree),\n-  via\n   `Stroud <https://books.google.de/books/about/Approximate_calculation_of_multiple_inte.html?id=L_tQAAAAMAAJ&redir_esc=y>`__\n   (1971):\n-  `Albrecht-Collatz <https://dx.doi.org/10.1002/zamm.19580380102>`__\n   (1958, degree 3)\n-  conical product scheme (degree 7)\n-  `Strang <http://bookstore.siam.org/wc08/>`__/`Cowper <https://dx.doi.org/10.1002/nme.1620070316>`__\n   (1973, 10 schemes up to degree 7),\n-  `Lyness-Jespersen <https://dx.doi.org/10.1093/imamat/15.1.19>`__\n   (1975, 21 schemes up to degree 11),\n-  `Lether <https://doi.org/10.1016/0771-050X(76)90008-5>`__ (1976,\n   degree 2n-2, arbitrary n, not symmetric)\n-  `Hillion <https://dx.doi.org/10.1002/nme.1620110504>`__ (1977, 8\n   schemes up to degree 3),\n-  `Grundmann-M\u00f6ller <http://dx.doi.org/10.1137/0715019>`__ (1978,\n   arbitrary degree),\n-  `Laursen-Gellert <https://dx.doi.org/10.1002/nme.1620120107>`__\n   (1978, 17 schemes up to degree 10),\n-  `CUBTRI <http://dl.acm.org/citation.cfm?id=356001>`__ (Laurie, 1982,\n   degree 8),\n-  `TRIEX <http://dl.acm.org/citation.cfm?id=356070>`__ (de\n   Doncker-Robinson, 1984, degrees 9 and 11),\n-  `Dunavant <https://dx.doi.org/10.1002/nme.1620210612>`__ (1985, 20\n   schemes up to degree 20),\n-  `Cools-Haegemans <https://lirias.kuleuven.be/handle/123456789/131869>`__\n   (1987, degrees 8 and 11),\n-  `Gatermann <https://dx.doi.org/10.1007/BF02251251>`__ (1988, degree\n   7)\n-  Berntsen-Espelid (1990, 4 schemes of degree 13, the first one being\n   `DCUTRI <http://dl.acm.org/citation.cfm?id=131772>`__),\n-  `Liu-Vinokur <https://dx.doi.org/10.1006/jcph.1998.5884>`__ (1998, 13\n   schemes up to degree 5),\n-  `Walkington <http://www.math.cmu.edu/~nw0z/publications/00-CNA-023/023abs/>`__\n   (2000, 5 schemes up to degree 5),\n-  `Wandzura-Xiao <https://dx.doi.org/10.1016/S0898-1221(03)90004-6>`__\n   (2003, 6 schemes up to degree 30),\n-  `Taylor-Wingate-Bos <https://arxiv.org/abs/math/0501496>`__ (2005, 5\n   schemes up to degree 14),\n-  `Zhang-Cui-Liu <http://www.jstor.org/stable/43693493>`__ (2009, 3\n   schemes up to degree 20),\n-  `Xiao-Gimbutas <http://dx.doi.org/10.1016/j.camwa.2009.10.027>`__\n   (2010, 50 schemes up to degree 50),\n-  `Vioreanu-Rokhlin <https://doi.org/10.1137/110860082>`__ (2014, 20\n   schemes up to degree 62),\n-  `Williams-Shunn-Jameson <https://doi.org/10.1016/j.cam.2014.01.007>`__\n   (2014, 8 schemes up to degree 12),\n-  `Witherden-Vincent <https://doi.org/10.1016/j.camwa.2015.03.017>`__\n   (2015, 19 schemes up to degree 20),\n-  `Papanicolopulos <https://doi.org/10.1016/j.cam.2015.08.001>`__\n   (2016, 27 schemes up to degree 25).\n\nExample:\n\n.. code:: python\n\n    val = quadpy.triangle.integrate(\n        lambda x: numpy.exp(x[0]),\n        [[0.0, 0.0], [1.0, 0.0], [0.5, 0.7]],\n        quadpy.triangle.XiaoGimbutas(5)\n        )\n\nDisk\n~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/disk.png\n   :alt: \n   :width: 25.0%\n\n-  `Peirce <http://www.jstor.org/stable/2098722>`__ (1957, arbitrary\n   degree)\n-  via\n   `Stroud <https://books.google.de/books/about/Approximate_calculation_of_multiple_inte.html?id=L_tQAAAAMAAJ&redir_esc=y>`__:\n-  `Radon <https://eudml.org/doc/176796>`__ (1948, degree 5)\n-  `Peirce <https://books.google.de/books/about/Numerical_integration_over_planar_region.html?id=WR9SAAAAMAAJ&redir_esc=y>`__\n   (1956, 3 schemes up to degree 11)\n-  `Albrecht-Collatz <https://dx.doi.org/10.1002/zamm.19580380102>`__\n   (1958, degree 3)\n-  `Hammer-Stroud <https://doi.org/10.1090/S0025-5718-1958-0102176-6>`__\n   (1958, 8 schemes up to degree 15)\n-  `Albrecht <https://dx.doi.org/10.1002/zamm.19600401014>`__ (1960, 8\n   schemes up to degree 17)\n-  Mysovskih (1964, 3 schemes up to degree 15)\n-  `Rabinowitz-Richter <https://dx.doi.org/10.2307/2004962>`__ (1969, 6\n   schemes up to degree 15)\n-  `Lether <http://www.jstor.org/stable/2949473>`__ (1971, arbitrary\n   degree)\n-  `Cools-Haegemans <https://lirias.kuleuven.be/handle/123456789/131870>`__\n   (1985, 3 schemes up to degree 9)\n-  `Wissmann-Becker <https://dx.doi.org/10.1137/0723043>`__ (1986, 3\n   schemes up to degree 8)\n-  `Cools-Kim <https://link.springer.com/article/10.1007/BF03012263>`__\n   (2000, 3 schemes up to degree 21)\n\nExample:\n\n.. code:: python\n\n    val = quadpy.disk.integrate(\n        lambda x: numpy.exp(x[0]),\n        [0.0, 0.0], 1.0,\n        quadpy.disk.Lether(6)\n        )\n\nQuadrilateral\n~~~~~~~~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/quad.png\n   :alt: \n   :width: 25.0%\n\n-  `Hammer-Stroud <https://doi.org/10.1090/S0025-5718-1958-0102176-6>`__\n   (1958, 3 schemes up to degree 7)\n-  via\n   `Stroud <https://books.google.de/books/about/Approximate_calculation_of_multiple_inte.html?id=L_tQAAAAMAAJ&redir_esc=y>`__\n   (1971, 15 schemes up to degree 15):\n-  `Maxwell <https://doi.org/10.1017/CBO9780511710377.061>`__ (1890,\n   degree 7)\n-  Burnside (1908, degree 5)\n-  `Irwin <https://books.google.de/books/about/On_quadrature_and_cubature.html?id=SuruAAAAMAAJ&redir_esc=y>`__\n   (1923, 3 schemes up to degree 5)\n-  `Tyler <https://dx.doi.org/10.4153/CJM-1953-044-1>`__ (1953, 3\n   schemes up to degree 7)\n-  `Albrecht-Collatz <https://dx.doi.org/10.1002/zamm.19580380102>`__\n   (1958, 4 schemes up to degree 5)\n-  `Miller <https://dx.doi.org/10.2307/2003163>`__ (1960, degree 1)\n-  `Meister <https://doi.org/10.1093/comjnl/8.4.368>`__ (1966, degree 7)\n-  `Phillips <https://doi.org/10.1093/comjnl/10.2.202>`__ (1967, degree\n   7)\n-  `Rabinowitz-Richter <https://dx.doi.org/10.2307/2004962>`__ (1969, 6\n   schemes up to degree 15)\n-  `Cools-Haegemans <https://lirias.kuleuven.be/handle/123456789/131870>`__\n   (1985, 3 schemes up to degree 13)\n-  `Dunavant <https://dx.doi.org/10.1002/nme.1620211004>`__ (1985, 11\n   schemes up to degree 19)\n-  `Morrow-Patterson <https://dx.doi.org/10.1137/0722071>`__ (1985, 2\n   schemes up to degree 20, single precision)\n-  `Wissmann-Becker <https://dx.doi.org/10.1137/0723043>`__ (1986, 6\n   schemes up to degree 8)\n-  `Cools-Haegemans <https://dx.doi.org/10.1007/BF02247942>`__ (1988, 2\n   schemes up to degree 13)\n-  products of line segment schemes\n-  all formulas from the n-cube\n\nExample:\n\n.. code:: python\n\n    val = quadpy.quadrilateral.integrate(\n        lambda x: numpy.exp(x[0]),\n        [[[0.0, 0.0], [1.0, 0.0]], [[0.0, 1.0], [1.0, 1.0]]],\n        quadpy.quadrilateral.Stroud('C2 7-2')\n        )\n\nThe points are specified in an array of shape (2, 2, ...) such that\n``arr[0][0]`` is the lower left corner, ``arr[1][1]`` the upper right.\nIf your quadrilateral has its sides aligned with the coordinate axes,\nyou can use the convenience function\n\n.. code:: python\n\n    quadpy.quadrilateral.rectangle_points([x0, x1], [y0, y1])\n\nto generate the array.\n\n2D plane with weight function exp(-r2)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/e2r2.png\n   :alt: \n   :width: 25.0%\n\n-  `Rabinowitz-Richter <https://dx.doi.org/10.2307/2004962>`__ (5\n   schemes up to degree 15)\n\nExample:\n\n.. code:: python\n\n    val = quadpy.e2r2.integrate(\n        lambda x: numpy.exp(x[0]),\n        quadpy.e2r2.RabinowitzRichter(3)\n        )\n\n2D plane with weight function exp(-r)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/e2r.png\n   :alt: \n   :width: 25.0%\n\n-  `Rabinowitz-Richter <https://dx.doi.org/10.2307/2004962>`__ (4\n   schemes up to degree 15)\n\nExample:\n\n.. code:: python\n\n    val = quadpy.e2r.integrate(\n        lambda x: numpy.exp(x[0]),\n        quadpy.e2r.RabinowitzRichter(5)\n        )\n\nSphere\n~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/sphere.png\n   :alt: \n   :width: 25.0%\n\n-  via:\n   `Stroud <https://books.google.de/books/about/Approximate_calculation_of_multiple_inte.html?id=L_tQAAAAMAAJ&redir_esc=y>`__\n   (1971):\n-  `Albrecht-Collatz <https://dx.doi.org/10.1002/zamm.19580380102>`__\n   (1958, 5 schemes up to degree 7)\n-  `McLaren <https://doi.org/10.1090/S0025-5718-1963-0159418-2>`__\n   (1963, 10 schemes up to degree 14)\n-  `Lebedev <https://en.wikipedia.org/wiki/Lebedev_quadrature>`__ (1976,\n   32 schemes up to degree 131)\n\nExample:\n\n.. code:: python\n\n    val = quadpy.sphere.integrate(\n        lambda x: numpy.exp(x[0]),\n        [0.0, 0.0, 0.0], 1.0,\n        quadpy.sphere.Lebedev(19)\n        )\n\nIntegration on the sphere can also be done for function defined in\nspherical coordinates:\n\n.. code:: python\n\n    val = quadpy.sphere.integrate_spherical(\n        lambda phi_theta: numpy.sin(phi_theta[0])**2 * numpy.sin(phi_theta[1]),\n        radius=1.0,\n        rule=quadpy.sphere.Lebedev(19)\n        )\n\nNote that ``phi_theta[0]`` is the azimuthal, ``phi_theta[1]`` the polar\nangle here.\n\nBall\n~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/ball.png\n   :alt: \n   :width: 25.0%\n\n-  `Hammer-Stroud <https://doi.org/10.1090/S0025-5718-1958-0102176-6>`__\n   (1958, 6 schemes up to degree 7)\n-  via:\n   `Stroud <https://books.google.de/books/about/Approximate_calculation_of_multiple_inte.html?id=L_tQAAAAMAAJ&redir_esc=y>`__\n   (1971):\n-  Ditkin (1948, 3 schemes up to degree 7)\n-  Mysovskih (1964, degree 7)\n-  2 schemes up to degree 14\n\nExample:\n\n.. code:: python\n\n    val = quadpy.ball.integrate(\n        lambda x: numpy.exp(x[0]),\n        [0.0, 0.0, 0.0], 1.0,\n        quadpy.ball.HammerStroud('14-3a')\n        )\n\nTetrahedron\n~~~~~~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/tet.png\n   :alt: \n   :width: 25.0%\n\n-  `Hammer-Marlowe-Stroud <https://doi.org/10.1090/S0025-5718-1956-0086389-6>`__\n   (1956, 3 schemes up to degree 3)\n-  `Hammer-Stroud <https://doi.org/10.1090/S0025-5718-1958-0102176-6>`__\n   (1958, 2 schemes up to degree 3)\n-  open and closed Newton-Cotes (1970, after\n   `Silvester <https://doi.org/10.1090/S0025-5718-1970-0258283-6>`__)\n   (arbitrary degree)\n-  `Stroud <https://cds.cern.ch/record/104291?ln=en>`__ (1971, degree 7)\n-  `Grundmann-M\u00f6ller <http://dx.doi.org/10.1137/0715019>`__ (1978,\n   arbitrary degree),\n-  `Yu <http://dx.doi.org/10.1016/0045-7825(84)90072-0>`__ (1984, 5\n   schemes up to degree 6)\n-  `Keast <http://dx.doi.org/10.1016/0045-7825(86)90059-9>`__ (1986, 11\n   schemes up to degree 8)\n-  `Beckers-Haegemans <https://lirias.kuleuven.be/handle/123456789/132648>`__\n   (1990, degrees 8 and 9)\n-  `Gatermann <https://dx.doi.org/10.1007/978-94-011-2646-5_2>`__ (1992,\n   degree 5)\n-  `Liu-Vinokur <http://dx.doi.org/10.1006/jcph.1998.5884>`__ (1998, 14\n   schemes up to degree 5)\n-  `Walkington <http://www.math.cmu.edu/~nw0z/publications/00-CNA-023/023abs/>`__\n   (2000, 6 schemes up to degree 7)\n-  `Zienkiewicz <http://www.sciencedirect.com/science/book/9780750664318>`__\n   (2005, 2 schemes up to degree 3)\n-  `Zhang-Cui-Liu <http://www.jstor.org/stable/43693493>`__ (2009, 2\n   schemes up to degree 14)\n-  `Xiao-Gimbutas <http://dx.doi.org/10.1016/j.camwa.2009.10.027>`__\n   (2010, 15 schemes up to degree 15)\n-  `Shunn-Ham <http://dx.doi.org/10.1016/j.cam.2012.03.032>`__ (2012, 6\n   schemes up to degree 7)\n-  `Vioreanu-Rokhlin <https://doi.org/10.1137/110860082>`__ (2014, 10\n   schemes up to degree 13)\n-  `Williams-Shunn-Jameson <https://doi.org/10.1016/j.cam.2014.01.007>`__\n   (2014, 1 scheme with degree 9)\n-  `Witherden-Vincent <https://doi.org/10.1016/j.camwa.2015.03.017>`__\n   (2015, 9 schemes up to degree 10)\n\nExample:\n\n.. code:: python\n\n    val = quadpy.tetrahedron.integrate(\n        lambda x: numpy.exp(x[0]),\n        [[0.0, 0.0, 0.0], [1.0, 0.0, 0.0], [0.5, 0.7, 0.0], [0.3, 0.9, 1.0]],\n        quadpy.tetrahedron.Keast(10)\n        )\n\nHexahedron\n~~~~~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/hexa.png\n   :alt: \n   :width: 25.0%\n\n-  Product schemes derived from line segment schemes\n-  via:\n   `Stroud <https://books.google.de/books/about/Approximate_calculation_of_multiple_inte.html?id=L_tQAAAAMAAJ&redir_esc=y>`__\n   (1971):\n-  `Sadowsky <https://dx.doi.org/10.2307/2303834>`__ (1940, degree 5)\n-  `Tyler <https://dx.doi.org/10.4153/CJM-1953-044-1>`__ (1953, 2\n   schemes up to degree 5)\n-  `Hammer-Wymore <https://doi.org/10.1090/S0025-5718-1957-0087220-6>`__\n   (1957, degree 7)\n-  `Albrecht-Collatz <https://dx.doi.org/10.1002/zamm.19580380102>`__\n   (1958, degree 3)\n-  `Hammer-Stroud <https://doi.org/10.1090/S0025-5718-1958-0102176-6>`__\n   (1958, 6 schemes up to degree 7)\n-  `Mustard-Lyness-Blatt <https://doi.org/10.1093/comjnl/6.1.75>`__\n   (1963, 6 schemes up to degree 5)\n-  `Stroud <https://dx.doi.org/10.1007/BF02162160>`__ (1967, degree 5)\n-  `Sarma-Stroud <https://dx.doi.org/10.2307/2004963>`__ (1969, degree\n   7)\n-  all formulas from the n-cube\n\nExample:\n\n.. code:: python\n\n    val = quadpy.hexahedron.integrate(\n        lambda x: numpy.exp(x[0]),\n        quadpy.hexahedron.cube_points([0.0, 1.0], [-0.3, 0.4], [1.0, 2.1]),\n        quadpy.hexahedron.Product(quadpy.line_segment.NewtonCotesClosed(3))\n        )\n\nPyramid\n~~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/pyra.png\n   :alt: \n   :width: 25.0%\n\n-  `Felippa <http://dx.doi.org/10.1108/02644400410554362>`__ (9 schemes\n   up to degree 5)\n\nExample:\n\n.. code:: python\n\n    val = quadpy.pyramid.integrate(\n        lambda x: numpy.exp(x[0]),\n        [\n          [0.0, 0.0, 0.0], [1.0, 0.0, 0.0], [0.5, 0.7, 0.0], [0.3, 0.9, 0.0],\n          [0.0, 0.1, 1.0],\n        ],\n        quadpy.pyramid.Felippa(5)\n        )\n\nWedge\n~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/wedge.png\n   :alt: \n   :width: 15.0%\n\n-  `Felippa <http://dx.doi.org/10.1108/02644400410554362>`__ (6 schemes\n   up to degree 6)\n\nExample:\n\n.. code:: python\n\n    val = quadpy.wedge.integrate(\n        lambda x: numpy.exp(x[0]),\n        [\n          [[0.0, 0.0, 0.0], [1.0, 0.0, 0.0], [0.5, 0.7, 0.0]],\n          [[0.0, 0.0, 1.0], [1.0, 0.0, 1.0], [0.5, 0.7, 1.0]],\n        ],\n        quadpy.wedge.Felippa(3)\n        )\n\nn-Simplex\n~~~~~~~~~\n\n-  via\n   `Stroud <https://books.google.de/books/about/Approximate_calculation_of_multiple_inte.html?id=L_tQAAAAMAAJ&redir_esc=y>`__:\n-  `Lauffer <https://doi.org/10.1007/BF01900222>`__ (1955, 5 schemes up\n   to degree 5)\n-  `Hammer-Stroud <https://doi.org/10.2307/2002484>`__ (1956, 3 schemes\n   up to degree 3)\n-  `Stroud <https://doi.org/10.1007/BF02165227>`__ (1966, 7 schemes of\n   degree 3)\n-  `Stroud <https://doi.org/10.1137/0706009>`__ (1969, degree 5)\n-  `Grundmann-M\u00f6ller <http://dx.doi.org/10.1137/0715019>`__ (1978,\n   arbitrary degree)\n-  `Walkington <http://www.math.cmu.edu/~nw0z/publications/00-CNA-023/023abs/>`__\n   (2000, 5 schemes up to degree 7)\n\nExample:\n\n.. code:: python\n\n    dim = 4\n    val = quadpy.simplex.integrate(\n        lambda x: numpy.exp(x[0]),\n        numpy.array([\n            [0.0, 0.0, 0.0, 0.0],\n            [1.0, 2.0, 0.0, 0.0],\n            [0.0, 1.0, 0.0, 0.0],\n            [0.0, 3.0, 1.0, 0.0],\n            [0.0, 0.0, 4.0, 1.0],\n            ]),\n        quadpy.simplex.GrundmannMoeller(dim, 3)\n        )\n\nn-Sphere\n~~~~~~~~\n\n-  via\n   `Stroud <https://books.google.de/books/about/Approximate_calculation_of_multiple_inte.html?id=L_tQAAAAMAAJ&redir_esc=y>`__\n   (1971):\n-  `Stroud <https://doi.org/10.1137/0704004>`__ (1967, degree 7)\n-  `Stroud <https://doi.org/10.1137/0706009>`__ (1969, 3 <= n <= 16,\n   degree 11)\n-  6 schemes up to degree 5\n-  `Dobrodeev <https://doi.org/10.1016/0041-5553(70)90084-4>`__ (1978, n\n   >= 2, degree 5)\n\nExample:\n\n.. code:: python\n\n    dim = 4\n    quadpy.nsphere.integrate(\n        lambda x: numpy.exp(x[0]),\n        numpy.zeros(dim), 1.0,\n        quadpy.nsphere.Dobrodeev1978(dim)\n        )\n\nn-Ball\n~~~~~~\n\n-  `Dobrodeev <https://doi.org/10.1016/0041-5553(70)90084-4>`__ (1970, n\n   >= 3, degree 7)\n-  via\n   `Stroud <https://books.google.de/books/about/Approximate_calculation_of_multiple_inte.html?id=L_tQAAAAMAAJ&redir_esc=y>`__\n   (1971):\n-  `Stroud <https://dx.doi.org/10.2307/2001945>`__ (1957, degree 2)\n-  `Hammer-Stroud <https://doi.org/10.1090/S0025-5718-1958-0102176-6>`__\n   (1958, 2 schemes up to degree 5)\n-  `Stroud <https://doi.org/10.1090/S0025-5718-1966-0191094-8>`__ (1966,\n   4 schemes of degree 5)\n-  `Stroud <https://dx.doi.org/10.1007/BF02162160>`__ (1967, 4 <= n <=\n   7, 2 schemes of degree 5)\n-  `Stroud <https://doi.org/10.1137/0704004>`__ (1967, n >= 3, 3 schemes\n   of degree 7)\n-  `Stenger <https://www.jstor.org/stable/2004361>`__ (1967, 6 schemes\n   up to degree 11)\n-  `Dobrodeev <https://doi.org/10.1016/0041-5553(70)90084-4>`__ (1978, 2\n   <= n <= 20, degree 5)\n\nExample:\n\n.. code:: python\n\n    dim = 4\n    quadpy.nball.integrate(\n        lambda x: numpy.exp(x[0]),\n        numpy.zeros(dim), 1.0,\n        quadpy.nball.Dobrodeev1970(dim)\n        )\n\nn-Cube\n~~~~~~\n\n-  `Dobrodeev <https://doi.org/10.1016/0041-5553(70)90084-4>`__ (1970, n\n   >= 5, degree 7)\n-  via\n   `Stroud <https://books.google.de/books/about/Approximate_calculation_of_multiple_inte.html?id=L_tQAAAAMAAJ&redir_esc=y>`__\n   (1971):\n\n   -  `Ewing <https://dx.doi.org/dx.doi.org/10.2307/2303604>`__ (1941,\n      degree 3)\n   -  `Tyler <https://dx.doi.org/10.4153/CJM-1953-044-1>`__ (1953,\n      degree 3)\n   -  `Stroud <https://dx.doi.org/10.2307/2001945>`__ (1957, 2 schemes\n      up to degree 3)\n   -  `Hammer-Stroud <https://doi.org/10.1090/S0025-5718-1958-0102176-6>`__\n      (1958, degree 5)\n   -  `Mustard-Lyness-Blatt <https://doi.org/10.1093/comjnl/6.1.75>`__\n      (1963, degree 5)\n   -  `Thacher <https://dx.doi.org/10.1145/363872.363897>`__ (1964,\n      degree 2)\n   -  `Stroud <https://doi.org/10.1090/S0025-5718-1966-0191094-8>`__\n      (1966, 4 schemes of degree 5)\n   -  `Phillips <https://doi.org/10.1093/comjnl/10.3.297>`__ (1967,\n      degree 7, single precision)\n   -  `Stroud <https://dx.doi.org/10.2307/2004655>`__ (1968, degree 5)\n\n-  `Dobrodeev <https://doi.org/10.1016/0041-5553(70)90084-4>`__ (1978, n\n   >= 2, degree 5)\n\nExample:\n\n.. code:: python\n\n    dim = 4\n    quadpy.ncube.integrate(\n        lambda x: numpy.exp(x[0]),\n        quadpy.ncube.ncube_points(\n            [0.0, 1.0], [0.1, 0.9], [-1.0, 1.0], [-1.0, -0.5]\n            ),\n        quadpy.ncube.Stroud(dim, 'Cn 3-3')\n        )\n\nInstallation\n~~~~~~~~~~~~\n\nquadpy is `available from the Python Package\nIndex <https://pypi.python.org/pypi/quadpy/>`__, so with\n\n::\n\n    pip install -U quadpy\n\nyou can install/upgrade.\n\nTesting\n~~~~~~~\n\nTo run the tests, just check out this repository and type\n\n::\n\n    MPLBACKEND=Agg pytest\n\nDistribution\n~~~~~~~~~~~~\n\nTo create a new release\n\n1. bump the ``__version__`` number,\n\n2. publish to PyPi and GitHub:\n\n   ::\n\n       $ make publish\n\nLicense\n~~~~~~~\n\nquadpy is published under the `MIT\nlicense <https://en.wikipedia.org/wiki/MIT_License>`__.\n\n.. |CircleCI| image:: https://img.shields.io/circleci/project/github/nschloe/quadpy/master.svg\n   :target: https://circleci.com/gh/nschloe/quadpy/tree/master\n.. |codecov| image:: https://codecov.io/gh/nschloe/quadpy/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/nschloe/quadpy\n.. |PyPi Version| image:: https://img.shields.io/pypi/v/quadpy.svg\n   :target: https://pypi.python.org/pypi/quadpy\n.. |GitHub stars| image:: https://img.shields.io/github/stars/nschloe/quadpy.svg?style=social&label=Stars&maxAge=2592000\n   :target: https://github.com/nschloe/quadpy\n\n\n",
    "docs_url": null,
    "download_url": "https://pypi.python.org/pypi/quadpy",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/nschloe/quadpy",
    "keywords": "",
    "license": "License :: OSI Approved :: MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "quadpy",
    "platform": "",
    "project_url": "https://pypi.org/project/quadpy/",
    "release_url": "https://pypi.org/project/quadpy/0.10.3/",
    "requires_dist": [
      "sympy",
      "scipy",
      "pipdate",
      "orthopy",
      "numpy",
      "matplotlib"
    ],
    "requires_python": "",
    "summary": "numerical integration, quadrature for various shapes",
    "version": "0.10.3"
  },
  "releases": {
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3f5eae389dd0f32ddf71de5127b48ecf",
          "sha256": "335d2bf8ff90b7ba43492cf18a2d3f35dbcd174fce1882514b112cceea5851b3"
        },
        "downloads": 0,
        "filename": "quadpy-0.10.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "3f5eae389dd0f32ddf71de5127b48ecf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 329261,
        "upload_time": "2017-08-08T08:50:19",
        "url": "https://files.pythonhosted.org/packages/ba/7c/d935b5d53eecc5b0b451113f866e50d3654541bc7e494b938a6f132caee0/quadpy-0.10.0-py2.py3-none-any.whl"
      }
    ],
    "0.10.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fa14fe5ea0b27b0a9a3dc025ef0ce105",
          "sha256": "0a9e1422ee2bfb430e2a0b225b92ac6bb6a87650b312bc586396a4750ca6b01f"
        },
        "downloads": 0,
        "filename": "quadpy-0.10.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "fa14fe5ea0b27b0a9a3dc025ef0ce105",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 373069,
        "upload_time": "2017-08-16T10:45:31",
        "url": "https://files.pythonhosted.org/packages/43/a9/a9d1035b074d8737f874b8f7a030b4599eadbffde901bd26a219ac694093/quadpy-0.10.1-py2.py3-none-any.whl"
      }
    ],
    "0.10.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4b3bfb15f47bb2e6409e9d0a67be4425",
          "sha256": "96b999f979abe6f0afd700eacfda7b41dcc0476ba72590dcdf6f9f923d964444"
        },
        "downloads": 0,
        "filename": "quadpy-0.10.2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "4b3bfb15f47bb2e6409e9d0a67be4425",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 394502,
        "upload_time": "2017-08-18T16:44:27",
        "url": "https://files.pythonhosted.org/packages/a2/0b/bfdbeb2e0446495257c3623002dea165e6ea3cf98373e7cd7a678eab9976/quadpy-0.10.2-py2.py3-none-any.whl"
      }
    ],
    "0.10.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c6ce961a327beaf5630db9459b928b82",
          "sha256": "dd29b8fd463fd86f36b66b2e9cb7ca47da7fb3e5abbb3980cf03a1218e02247a"
        },
        "downloads": 0,
        "filename": "quadpy-0.10.3-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "c6ce961a327beaf5630db9459b928b82",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 403031,
        "upload_time": "2017-08-28T11:27:59",
        "url": "https://files.pythonhosted.org/packages/9e/1e/136cfaa7369751c11b62eb0f8fdca6ed03485cf3ff23a24615960d872167/quadpy-0.10.3-py2.py3-none-any.whl"
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c25c291c5570fe642febeccd6796b1f1",
          "sha256": "efb165428f481c526205740b4604b0a026df430887862173d0335123c60cb495"
        },
        "downloads": 9,
        "filename": "quadpy-0.4.0.tar.gz",
        "has_sig": true,
        "md5_digest": "c25c291c5570fe642febeccd6796b1f1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 220468,
        "upload_time": "2017-02-17T22:45:12",
        "url": "https://files.pythonhosted.org/packages/c7/9c/a8bcfd05d93b9136e8714ad0bf1620d25ca1f091b3db0630b3564da91ff6/quadpy-0.4.0.tar.gz"
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f9975a3b5e529e83f1d72eb28da1c45b",
          "sha256": "e2b1d691b0074cb38751c20ae42b0ed13a5bf5474a09a44e972a16946e1d9ba2"
        },
        "downloads": 13,
        "filename": "quadpy-0.4.1.tar.gz",
        "has_sig": true,
        "md5_digest": "f9975a3b5e529e83f1d72eb28da1c45b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 220484,
        "upload_time": "2017-02-17T22:59:53",
        "url": "https://files.pythonhosted.org/packages/13/73/ed4423f79be41a1cf77b0ed9555f1971a21258bf85b94fbe402f69222314/quadpy-0.4.1.tar.gz"
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "390099276f60180f81f2c9c4e4b92baa",
          "sha256": "5cf37477c6b5fe1a3a4cd599f5e9a68f6131c5a997c69d0a52c0eba347e8397c"
        },
        "downloads": 23,
        "filename": "quadpy-0.4.2.tar.gz",
        "has_sig": true,
        "md5_digest": "390099276f60180f81f2c9c4e4b92baa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 221115,
        "upload_time": "2017-03-15T14:39:30",
        "url": "https://files.pythonhosted.org/packages/a3/9a/59c5e496262cf851a0c7ce2ba36602d4666006e781ba8772398aaae6497c/quadpy-0.4.2.tar.gz"
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5524ce4c9a601e1f0ddf9907bc42cdb2",
          "sha256": "7b23020cc62a3b2158dd841e92233eb014a2531a68d1012c1c7356423c7b12a2"
        },
        "downloads": 48,
        "filename": "quadpy-0.5.0.tar.gz",
        "has_sig": true,
        "md5_digest": "5524ce4c9a601e1f0ddf9907bc42cdb2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 221779,
        "upload_time": "2017-03-16T11:09:46",
        "url": "https://files.pythonhosted.org/packages/a4/e2/8262655d249bb0f458a6d4623770560f2c1ea16b0564b11597587dc2f640/quadpy-0.5.0.tar.gz"
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6ad8d65fb150a28693f024c9d3343aa1",
          "sha256": "2e45d4be450a99a32fe3a6a529d44feb61d498dfc841490fa335eb1360888936"
        },
        "downloads": 47,
        "filename": "quadpy-0.5.1.tar.gz",
        "has_sig": true,
        "md5_digest": "6ad8d65fb150a28693f024c9d3343aa1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 221814,
        "upload_time": "2017-03-16T13:14:31",
        "url": "https://files.pythonhosted.org/packages/eb/81/771808f990d6727caa9709d9a1a464fe628b37e09f4c26ec7e54678e9b26/quadpy-0.5.1.tar.gz"
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c03b37f34632ef8fb68b2a5e5b0ec842",
          "sha256": "f80f445501233e8aa603b201e5ded0841ae274cc7f1fe9cdfd7dcda14b87cf49"
        },
        "downloads": 119,
        "filename": "quadpy-0.5.2.tar.gz",
        "has_sig": true,
        "md5_digest": "c03b37f34632ef8fb68b2a5e5b0ec842",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 220765,
        "upload_time": "2017-03-17T14:23:53",
        "url": "https://files.pythonhosted.org/packages/c1/24/40d34b9d45c2319abf4f3a8584346f11eba18e8c46961d875ee3f0bb66d3/quadpy-0.5.2.tar.gz"
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "38a0a4a7524287be735853dca9881e91",
          "sha256": "79e730ebd713bbbf68c09fa93161b80f75af0c14c192594918322a95e288375a"
        },
        "downloads": 135,
        "filename": "quadpy-0.5.3.tar.gz",
        "has_sig": true,
        "md5_digest": "38a0a4a7524287be735853dca9881e91",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 226801,
        "upload_time": "2017-03-17T20:23:53",
        "url": "https://files.pythonhosted.org/packages/e5/9c/a384186ed8cea0f1a2723c11dabf128c55501032870c61cc22e291af3be3/quadpy-0.5.3.tar.gz"
      }
    ],
    "0.5.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1c24119615f1cf32f36fc8793b33482a",
          "sha256": "61736e356ad3c968f4833ec45ed6de05cab7a12857f4de9f3243598c3ee7e8f1"
        },
        "downloads": 12,
        "filename": "quadpy-0.5.4.tar.gz",
        "has_sig": true,
        "md5_digest": "1c24119615f1cf32f36fc8793b33482a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 226949,
        "upload_time": "2017-03-20T08:52:56",
        "url": "https://files.pythonhosted.org/packages/56/85/ebb55c3a42e4bef4e85c9236f6905037f2d8a8ea4630e41df2b510141617/quadpy-0.5.4.tar.gz"
      }
    ],
    "0.5.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b4c0cc71222ed20aef68404c8672183e",
          "sha256": "81aaa51efc89279dd63f682b56265c52155d6a0955dcb9817506005157910fcd"
        },
        "downloads": 14,
        "filename": "quadpy-0.5.5.tar.gz",
        "has_sig": true,
        "md5_digest": "b4c0cc71222ed20aef68404c8672183e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 221722,
        "upload_time": "2017-03-22T08:52:01",
        "url": "https://files.pythonhosted.org/packages/bb/20/4a514bbc6d35e81b1deb3c69e4d35f6b433b3286bee7357e9eeb93ae3976/quadpy-0.5.5.tar.gz"
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ead1115239fb06843df2c4b8452bda67",
          "sha256": "4ecb0746fe18861aff0b3b7a3f7a24f9db7a8355f827b513dbbd8169a49cbcd0"
        },
        "downloads": 214,
        "filename": "quadpy-0.6.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "ead1115239fb06843df2c4b8452bda67",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 296124,
        "upload_time": "2017-04-06T13:36:14",
        "url": "https://files.pythonhosted.org/packages/b1/b6/5bae252017ad2e2ec12930570add25831503d0419ecd34e10ceb30957b7f/quadpy-0.6.0-py2.py3-none-any.whl"
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "49df87e4ce9a9926fd58f47e8ceb9f84",
          "sha256": "d8535dd2a7bc159e2a1ed7f7796d0dfe322403e74bfb19c5e56664874ff15c54"
        },
        "downloads": 0,
        "filename": "quadpy-0.6.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "49df87e4ce9a9926fd58f47e8ceb9f84",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 299388,
        "upload_time": "2017-04-26T11:20:27",
        "url": "https://files.pythonhosted.org/packages/c8/bc/e732d3821e924100e0f5d0c8bb6372bef5ddcbcc8692c2b2572a6e0b69aa/quadpy-0.6.1-py2.py3-none-any.whl"
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d69e2161c95ede59beff410f32cf3039",
          "sha256": "1b90e77c466b3ba98a4a74fc7436546ba6dc7031614f90c3c818099556d119c8"
        },
        "downloads": 0,
        "filename": "quadpy-0.7.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "d69e2161c95ede59beff410f32cf3039",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 253045,
        "upload_time": "2017-07-13T18:14:17",
        "url": "https://files.pythonhosted.org/packages/9b/bc/3147a2818003947679bb7f74a7c0d4280d86902c3e8f6829add609ed3baf/quadpy-0.7.0-py2.py3-none-any.whl"
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f2894dae99742bb8ac9881c965bfcad5",
          "sha256": "10d0c17e3b9435910b81bc2e5b96f1ea4c8635edf540d34e9ba74f49308c786a"
        },
        "downloads": 0,
        "filename": "quadpy-0.7.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "f2894dae99742bb8ac9881c965bfcad5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 259925,
        "upload_time": "2017-07-14T10:26:30",
        "url": "https://files.pythonhosted.org/packages/64/16/513911e54d744f72eb07db9f50ba2cbb5795d737ee8186a75183618bbe3e/quadpy-0.7.1-py2.py3-none-any.whl"
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e2ff93482b2053f44d966b9ec4e2d3cd",
          "sha256": "845e895a322f833052636b58a89483ab4cc6e3d6ef9ed5a2c434416931a3d6f4"
        },
        "downloads": 0,
        "filename": "quadpy-0.8.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "e2ff93482b2053f44d966b9ec4e2d3cd",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 289580,
        "upload_time": "2017-07-18T15:49:22",
        "url": "https://files.pythonhosted.org/packages/01/37/7e6c5e92cc8a394cc1b00de435ef8711a68cf0c84e931cdc14cdca3897eb/quadpy-0.8.0-py2.py3-none-any.whl"
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "479055313135db9d4ec31b168f79ddad",
          "sha256": "b42fd875359279d5bf5be379063311de618e834a73df10f883b3fb69bb3ada2d"
        },
        "downloads": 0,
        "filename": "quadpy-0.8.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "479055313135db9d4ec31b168f79ddad",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 292769,
        "upload_time": "2017-07-24T17:03:24",
        "url": "https://files.pythonhosted.org/packages/fd/b6/02ee3c870f46f13e068a3a626b4283e3e1a349d6419408496e8f76c0cdff/quadpy-0.8.1-py2.py3-none-any.whl"
      }
    ],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "620641d2c3a3ff429e4ce2d3ea6452b4",
          "sha256": "1ee7cc36f66d6e29f59bcfd6164d227f6bfde722501aa26083334a15bf1f6e9b"
        },
        "downloads": 0,
        "filename": "quadpy-0.8.2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "620641d2c3a3ff429e4ce2d3ea6452b4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 298069,
        "upload_time": "2017-07-24T21:55:21",
        "url": "https://files.pythonhosted.org/packages/44/c5/d5040731c3ec4f44fd01d6ceaa891569f4cac843a94229522ff43473492a/quadpy-0.8.2-py2.py3-none-any.whl"
      }
    ],
    "0.8.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "05d5b7c405c518e886a8c743df4b74dc",
          "sha256": "563f046d3365bfac4e63e08532339960bc743785883374168cacd35003d89ed0"
        },
        "downloads": 0,
        "filename": "quadpy-0.8.3-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "05d5b7c405c518e886a8c743df4b74dc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 304188,
        "upload_time": "2017-07-25T17:25:28",
        "url": "https://files.pythonhosted.org/packages/e9/3b/f007ec2343b7362fa7bcb1ff2ddd83df07c67abc508a6232029dadb87a7e/quadpy-0.8.3-py2.py3-none-any.whl"
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6cd379f403d604249adbc665da2da722",
          "sha256": "3cf08b28e85029ee7d168af738ad6a03a7329ad93a4751367dbea539b187ac50"
        },
        "downloads": 0,
        "filename": "quadpy-0.9.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "6cd379f403d604249adbc665da2da722",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 306160,
        "upload_time": "2017-07-28T17:55:16",
        "url": "https://files.pythonhosted.org/packages/ff/4d/7f468b07a4bc8916a57ea795e3192c6cfb76e0b6ab63e11439f87f475340/quadpy-0.9.0-py2.py3-none-any.whl"
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dc5f9a296660755cf7ecb0a869074e12",
          "sha256": "c2e79bbe9e1ed3a5c35addda8afccef1cee144845c1a5d0933720bf15de9fedb"
        },
        "downloads": 0,
        "filename": "quadpy-0.9.2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "dc5f9a296660755cf7ecb0a869074e12",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 363394,
        "upload_time": "2017-08-02T07:02:21",
        "url": "https://files.pythonhosted.org/packages/16/82/42ae1508660b49128fa86ef3fcbaaa91a6143b069529febc9dc20528b9ff/quadpy-0.9.2-py2.py3-none-any.whl"
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bb9c4fe79e4dff053ae63f1fd2283c21",
          "sha256": "26337b65cde7b613fb5659bcde4dc7083db08b644be58229e75d2d97814c33ed"
        },
        "downloads": 0,
        "filename": "quadpy-0.9.3-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "bb9c4fe79e4dff053ae63f1fd2283c21",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 364125,
        "upload_time": "2017-08-02T15:51:09",
        "url": "https://files.pythonhosted.org/packages/73/58/70e21695702f71178c14795b61a866a012d883e4cc4563c128dd7fa85bfe/quadpy-0.9.3-py2.py3-none-any.whl"
      }
    ],
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4451c7d2617d2e26928069ffd58ae185",
          "sha256": "cb73648632754df01d1a8b0867b5e787ee36a6108a85b74d02405ecca781e5c5"
        },
        "downloads": 0,
        "filename": "quadpy-0.9.4-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "4451c7d2617d2e26928069ffd58ae185",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 315334,
        "upload_time": "2017-08-04T18:08:52",
        "url": "https://files.pythonhosted.org/packages/7e/3c/7f7feb3e40b6d62f37c34dc944c54d875399bba347a44704771142a3ece4/quadpy-0.9.4-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c6ce961a327beaf5630db9459b928b82",
        "sha256": "dd29b8fd463fd86f36b66b2e9cb7ca47da7fb3e5abbb3980cf03a1218e02247a"
      },
      "downloads": 0,
      "filename": "quadpy-0.10.3-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "c6ce961a327beaf5630db9459b928b82",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 403031,
      "upload_time": "2017-08-28T11:27:59",
      "url": "https://files.pythonhosted.org/packages/9e/1e/136cfaa7369751c11b62eb0f8fdca6ed03485cf3ff23a24615960d872167/quadpy-0.10.3-py2.py3-none-any.whl"
    }
  ]
}