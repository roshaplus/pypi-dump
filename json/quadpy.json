{
  "info": {
    "author": "Nico Schl\u00f6mer",
    "author_email": "nico.schloemer@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "quadpy\n======\n\nYour one-stop shop for numerical integration in Python.\n\n|Build Status| |codecov| |PyPi Version| |GitHub stars|\n\nHundreds of numerical integration schemes for line segments, circles,\ndisks, triangles, quadrilaterals, spheres, tetrahedra, hexahedra,\nwedges, pyramids.\n\nTo numerically integrate any function over any given triangle, do\n\n.. code:: python\n\n    import numpy\n    import quadpy\n\n    def f(x):\n        return numpy.sin(x[0]) * numpy.sin(x[1])\n\n    triangle = numpy.array([[0.0, 0.0], [1.0, 0.0], [0.7, 0.5]])\n\n    val = quadpy.triangle.integrate(f, triangle, quadpy.triangle.Strang(9))\n\nThis uses Strang's rule of degree 6.\n\nquadpy is fully vectorized, so if you like to compute the integral of a\nfunction on many domains at once, you can provide them all in one\n``integrate()`` call, e.g.,\n\n.. code:: python\n\n    triangles = numpy.array([\n        [[0.0, 0.0], [1.2, 0.6], [26.0, 31.0], [0.1, 0.3], [8.6, 6.0]],\n        [[1.0, 0.0], [1.3, 0.7], [24.0, 27.0], [0.4, 0.4], [9.4, 5.6]],\n        [[0.0, 1.0], [1.4, 0.8], [33.0, 28.0], [0.7, 0.1], [7.5, 7.4]],\n        ])\n\nThe same goes for functions with vectorized output, e.g.,\n\n.. code:: python\n\n    def f(x):\n        return [numpy.sin(x[0]), numpy.sin(x[1])]\n\nMore examples under\n`test/examples\\_test.py <https://github.com/nschloe/quadpy/blob/master/test/examples_test.py>`__.\n\nAdaptive quadrature\n~~~~~~~~~~~~~~~~~~~\n\nquadpy can do adaptive quadrature for certain domains. Again, everything\nis fully vectorized, so you can provide multiple intervals and\nvector-valued functions.\n\nLine segments\n^^^^^^^^^^^^^\n\n.. code:: python\n\n    val, error_estimate = quadpy.line_segment.adaptive_integrate(\n            lambda x: x * sin(5 * x),\n            [0.0, pi],\n            1.0e-10\n            )\n\nTriangles\n^^^^^^^^^\n\n.. code:: python\n\n    val, error_estimate = quadpy.triangle.adaptive_integrate(\n            lambda x: x[0] * sin(5 * x[1]),\n            [[0.0, 0.0], [1.0, 0.0], [0.0, 1.0]],\n            1.0e-10\n            )\n\n*ProTip:* You can provide many triangles that together form a domain to\nget an approximation of the integral over the domain.\n\nSchemes\n-------\n\nLine segment\n~~~~~~~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/line.png\n   :alt: \n   :width: 50.0%\n\n-  Chebyshev-Gauss (both variants, arbitrary degree)\n-  Clenshaw-Curtis (after\n   `Waldvogel <https://dx.doi.org/10.1007/s10543-006-0045-4>`__,\n   arbitrary degree)\n-  Fej\u00e9r-type-1 (after\n   `Waldvogel <https://dx.doi.org/10.1007/s10543-006-0045-4>`__,\n   arbitrary degree)\n-  Fej\u00e9r-type-2 (after\n   `Waldvogel <https://dx.doi.org/10.1007/s10543-006-0045-4>`__,\n   arbitrary degree)\n-  Gauss-Hermite (via\n   `NumPy <https://docs.scipy.org/doc/numpy/reference/generated/numpy.polynomial.hermite.hermgauss.html>`__,\n   arbitrary degree)\n-  Gauss-Laguerre (via\n   `NumPy <https://docs.scipy.org/doc/numpy/reference/generated/numpy.polynomial.laguerre.laggauss.html>`__,\n   arbitrary degree)\n-  Gauss-Legendre (via\n   `NumPy <https://docs.scipy.org/doc/numpy/reference/generated/numpy.polynomial.legendre.leggauss.html>`__,\n   arbitrary degree)\n-  Gauss-Lobatto (arbitrary degree)\n-  Gauss-Kronrod (after\n   `Laurie <https://doi.org/10.1090/S0025-5718-97-00861-2>`__, arbitrary\n   degree)\n-  `Gauss-Patterson <https://doi.org/10.1090/S0025-5718-68-99866-9>`__\n   (7 schemes up to degree 191)\n-  Gauss-Radau (arbitrary degree)\n-  closed Newton-Cotes (arbitrary degree)\n-  open Newton-Cotes (arbitrary degree)\n\nExample:\n\n.. code:: python\n\n    val = quadpy.line_segment.integrate(\n        lambda x: numpy.exp(x),\n        [0.0, 1.0],\n        quadpy.line_segment.GaussPatterson(5)\n        )\n\nCircle\n~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/circle.png\n   :alt: \n   :width: 25.0%\n\n-  equidistant points\n\nExample:\n\n.. code:: python\n\n    val = quadpy.circle.integrate(\n        lambda x: numpy.exp(x[0]),\n        [0.0, 0.0], 1.0,\n        quadpy.circle.Equidistant(7)\n        )\n\nTriangle\n~~~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/triangle.png\n   :alt: \n   :width: 25.0%\n\nApart from the classical centroid, vertex, and seven-point schemes we\nhave\n\n-  `Hammer-Marlowe-Stroud <https://doi.org/10.1090/S0025-5718-1956-0086389-6>`__\n   (1956, 5 schemes up to degree 5),\n-  open and closed Newton-Cotes schemes (1970, after\n   `Silvester <https://doi.org/10.1090/S0025-5718-1970-0258283-6>`__,\n   arbitrary degree),\n-  `Strang <http://bookstore.siam.org/wc08/>`__/`Cowper <https://dx.doi.org/10.1002/nme.1620070316>`__\n   (1973, 10 schemes up to degree 7),\n-  `Lyness-Jespersen <https://dx.doi.org/10.1093/imamat/15.1.19>`__\n   (1975, 21 schemes up to degree 11),\n-  `Hillion <https://dx.doi.org/10.1002/nme.1620110504>`__ (1977),\n-  `Laursen-Gellert <https://dx.doi.org/10.1002/nme.1620120107>`__\n   (1978, 17 schemes up to degree 10),\n-  `CUBTRI <http://dl.acm.org/citation.cfm?id=356001>`__ (1982, degree\n   8),\n-  `TRIEX <http://dl.acm.org/citation.cfm?id=356070>`__ (1984, degrees 9\n   and 11),\n-  `Dunavant <https://dx.doi.org/10.1002/nme.1620210612>`__ (1985, 20\n   schemes up to degree 20),\n-  `Cools-Haegemans <https://lirias.kuleuven.be/handle/123456789/131869>`__\n   (1987, degrees 8 and 11),\n-  Berntsen-Espelid (1990, 4 schemes of degree 13, the first one being\n   `DCUTRI <http://dl.acm.org/citation.cfm?id=131772>`__),\n-  `Liu-Vinokur <https://dx.doi.org/10.1006/jcph.1998.5884>`__ (1998, 13\n   schemes up to degree 5),\n-  `Wandzura-Xiao <https://dx.doi.org/10.1016/S0898-1221(03)90004-6>`__\n   (2003, 6 schemes up to degree 30),\n-  `Taylor-Wingate-Bos <https://arxiv.org/abs/math/0501496>`__ (2005, 5\n   schemes up to degree 14),\n-  `Zhang-Cui-Liu <http://www.jstor.org/stable/43693493>`__ (2009, 3\n   schemes up to degree 20),\n-  `Xiao-Gimbutas <http://dx.doi.org/10.1016/j.camwa.2009.10.027>`__\n   (2010, 50 schemes up to degree 50),\n-  `Willams-Shunn-Jameson <https://doi.org/10.1016/j.cam.2014.01.007>`__\n   (2014, 8 schemes up to degree 12).\n\nExample:\n\n.. code:: python\n\n    val = quadpy.triangle.integrate(\n        lambda x: numpy.exp(x[0]),\n        [[0.0, 0.0], [1.0, 0.0], [0.5, 0.7]],\n        quadpy.triangle.XiaoGimbutas(5)\n        )\n\nDisk\n~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/disk.png\n   :alt: \n   :width: 25.0%\n\n-  `Peirce <http://www.jstor.org/stable/2098722>`__ (1957, arbitrary\n   degree)\n-  `Lether <http://www.jstor.org/stable/2949473>`__ (1971, arbitrary\n   degree)\n-  `Cools-Haegemans <https://lirias.kuleuven.be/handle/123456789/131870>`__\n   (1985, 3 schemes up to degree 9)\n\nExample:\n\n.. code:: python\n\n    val = quadpy.disk.integrate(\n        lambda x: numpy.exp(x[0]),\n        [0.0, 0.0], 1.0,\n        quadpy.disk.Lether(6)\n        )\n\nQuadrilateral\n~~~~~~~~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/quad.png\n   :alt: \n   :width: 25.0%\n\n-  Product schemes derived from line segment schemes\n-  `Stroud <https://books.google.de/books/about/Approximate_calculation_of_multiple_inte.html?id=L_tQAAAAMAAJ&redir_esc=y>`__\n   (1971, 6 schemes up to degree 15)\n-  `Cools-Haegemans <https://lirias.kuleuven.be/handle/123456789/131870>`__\n   (1985, 3 schemes up to degree 13)\n\nExample:\n\n.. code:: python\n\n    val = quadpy.quadrilateral.integrate(\n        lambda x: numpy.exp(x[0]),\n        [[0.0, 0.0], [1.0, 0.0], [0.5, 0.7], [0.3, 0.9]],\n        quadpy.quadrilateral.Stroud(6)\n        )\n\nTetrahedron\n~~~~~~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/tet.png\n   :alt: \n   :width: 25.0%\n\n-  `Hammer-Marlowe-Stroud <https://doi.org/10.1090/S0025-5718-1956-0086389-6>`__\n   (1956, 3 schemes up to degree 3)\n-  open and closed Newton-Cotes (1970, after\n   `Silvester <https://doi.org/10.1090/S0025-5718-1970-0258283-6>`__)\n   (arbitrary degree)\n-  `Yu <http://dx.doi.org/10.1016/0045-7825(84)90072-0>`__ (1984, 5\n   schemes up to degree 6)\n-  `Keast <http://dx.doi.org/10.1016/0045-7825(86)90059-9>`__ (1986, 11\n   schemes up to degree 8)\n-  `Liu-Vinokur <http://dx.doi.org/10.1006/jcph.1998.5884>`__ (1998, 14\n   schemes up to degree 5)\n-  `Zienkiewicz <http://www.sciencedirect.com/science/book/9780750664318>`__\n   (2005, 2 schemes up to degree 3)\n-  `Zhang-Cui-Liu <http://www.jstor.org/stable/43693493>`__ (2009, 2\n   schemes up to degree 14)\n-  `Xiao-Gimbutas <http://dx.doi.org/10.1016/j.camwa.2009.10.027>`__\n   (2010, 15 schemes up to degree 15)\n-  `Shunn-Ham <http://dx.doi.org/10.1016/j.cam.2012.03.032>`__ (2012, 6\n   schemes up to degree 7)\n-  `Willams-Shunn-Jameson <https://doi.org/10.1016/j.cam.2014.01.007>`__\n   (2014, 1 scheme with degree 9)\n\nExample:\n\n.. code:: python\n\n    val = quadpy.tetrahedron.integrate(\n        lambda x: numpy.exp(x[0]),\n        [[0.0, 0.0, 0.0], [1.0, 0.0, 0.0], [0.5, 0.7, 0.0], [0.3, 0.9, 1.0]],\n        quadpy.tetrahedron.Keast(10)\n        )\n\nHexahedron\n~~~~~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/hexa.png\n   :alt: \n   :width: 25.0%\n\n-  Product schemes derived from line segment schemes\n\nExample:\n\n.. code:: python\n\n    val = quadpy.hexahedron.integrate(\n        lambda x: numpy.exp(x[0]),\n        [\n          [0.0, 0.0, 0.0], [1.0, 0.0, 0.0], [0.5, 0.7, 0.0], [0.3, 0.9, 0.0],\n          [0.0, 0.1, 1.0], [0.7, 0.1, 1.0], [0.4, 0.6, 1.0], [0.2, 1.0, 1.0],\n        ],\n        quadpy.hexahedron.Product(quadpy.line_segment.NewtonCotesClosed(3))\n        )\n\nPyramid\n~~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/pyra.png\n   :alt: \n   :width: 25.0%\n\n-  `Felippa's schemes <http://dx.doi.org/10.1108/02644400410554362>`__\n   (9 schemes up to degree 5)\n\nExample:\n\n.. code:: python\n\n    val = quadpy.pyramid.integrate(\n        lambda x: numpy.exp(x[0]),\n        [\n          [0.0, 0.0, 0.0], [1.0, 0.0, 0.0], [0.5, 0.7, 0.0], [0.3, 0.9, 0.0],\n          [0.0, 0.1, 1.0],\n        ],\n        quadpy.pyramid.Felippa(5)\n        )\n\nWedge\n~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/wedge.png\n   :alt: \n   :width: 15.0%\n\n-  `Felippa's schemes <http://dx.doi.org/10.1108/02644400410554362>`__\n   (6 schemes up to degree 6)\n\nExample:\n\n.. code:: python\n\n    val = quadpy.wedge.integrate(\n        lambda x: numpy.exp(x[0]),\n        [\n          [0.0, 0.0, 0.0], [1.0, 0.0, 0.0], [0.5, 0.7, 0.0],\n          [0.0, 0.0, 1.0], [1.0, 0.0, 1.0], [0.5, 0.7, 1.0],\n        ],\n        quadpy.wedge.Felippa(3)\n        )\n\nSphere\n~~~~~~\n\n.. figure:: https://nschloe.github.io/quadpy/sphere.png\n   :alt: \n   :width: 25.0%\n\n-  `Lebedev's schemes <https://en.wikipedia.org/wiki/Lebedev_quadpy>`__\n   (32 schemes up to degree 131)\n\nExample:\n\n.. code:: python\n\n    val = quadpy.sphere.integrate(\n        lambda x: numpy.exp(x[0]),\n        [0.0, 0.0, 0.0], 1.0,\n        quadpy.sphere.Lebedev(19)\n        )\n\nInstallation\n~~~~~~~~~~~~\n\nquadpy is `available from the Python Package\nIndex <https://pypi.python.org/pypi/quadpy/>`__, so with\n\n::\n\n    pip install -U quadpy\n\nyou can install/upgrade.\n\nTesting\n~~~~~~~\n\nTo run the tests, just check out this repository and type\n\n::\n\n    MPLBACKEND=Agg pytest\n\nDistribution\n~~~~~~~~~~~~\n\nTo create a new release\n\n1. bump the ``__version__`` number,\n\n2. publish to PyPi and GitHub:\n\n   ::\n\n       $ make publish\n\nLicense\n~~~~~~~\n\nquadpy is published under the `MIT\nlicense <https://en.wikipedia.org/wiki/MIT_License>`__.\n\n.. |Build Status| image:: https://travis-ci.org/nschloe/quadpy.svg?branch=master\n   :target: https://travis-ci.org/nschloe/quadpy\n.. |codecov| image:: https://codecov.io/gh/nschloe/quadpy/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/nschloe/quadpy\n.. |PyPi Version| image:: https://img.shields.io/pypi/v/quadpy.svg\n   :target: https://pypi.python.org/pypi/quadpy\n.. |GitHub stars| image:: https://img.shields.io/github/stars/nschloe/quadpy.svg?style=social&label=Stars&maxAge=2592000\n   :target: https://github.com/nschloe/quadpy\n\n\n",
    "docs_url": null,
    "download_url": "https://pypi.python.org/pypi/quadpy",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/nschloe/quadpy",
    "keywords": "",
    "license": "License :: OSI Approved :: MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "quadpy",
    "platform": "",
    "project_url": "https://pypi.org/project/quadpy/",
    "release_url": "https://pypi.org/project/quadpy/0.7.1/",
    "requires_dist": [
      "sympy",
      "scipy",
      "pipdated",
      "numpy",
      "matplotlib"
    ],
    "requires_python": "",
    "summary": "numerical integration, quadrature for various shapes",
    "version": "0.7.1"
  },
  "releases": {
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c25c291c5570fe642febeccd6796b1f1",
          "sha256": "efb165428f481c526205740b4604b0a026df430887862173d0335123c60cb495"
        },
        "downloads": 9,
        "filename": "quadpy-0.4.0.tar.gz",
        "has_sig": true,
        "md5_digest": "c25c291c5570fe642febeccd6796b1f1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 220468,
        "upload_time": "2017-02-17T22:45:12",
        "url": "https://files.pythonhosted.org/packages/c7/9c/a8bcfd05d93b9136e8714ad0bf1620d25ca1f091b3db0630b3564da91ff6/quadpy-0.4.0.tar.gz"
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f9975a3b5e529e83f1d72eb28da1c45b",
          "sha256": "e2b1d691b0074cb38751c20ae42b0ed13a5bf5474a09a44e972a16946e1d9ba2"
        },
        "downloads": 13,
        "filename": "quadpy-0.4.1.tar.gz",
        "has_sig": true,
        "md5_digest": "f9975a3b5e529e83f1d72eb28da1c45b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 220484,
        "upload_time": "2017-02-17T22:59:53",
        "url": "https://files.pythonhosted.org/packages/13/73/ed4423f79be41a1cf77b0ed9555f1971a21258bf85b94fbe402f69222314/quadpy-0.4.1.tar.gz"
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "390099276f60180f81f2c9c4e4b92baa",
          "sha256": "5cf37477c6b5fe1a3a4cd599f5e9a68f6131c5a997c69d0a52c0eba347e8397c"
        },
        "downloads": 23,
        "filename": "quadpy-0.4.2.tar.gz",
        "has_sig": true,
        "md5_digest": "390099276f60180f81f2c9c4e4b92baa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 221115,
        "upload_time": "2017-03-15T14:39:30",
        "url": "https://files.pythonhosted.org/packages/a3/9a/59c5e496262cf851a0c7ce2ba36602d4666006e781ba8772398aaae6497c/quadpy-0.4.2.tar.gz"
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5524ce4c9a601e1f0ddf9907bc42cdb2",
          "sha256": "7b23020cc62a3b2158dd841e92233eb014a2531a68d1012c1c7356423c7b12a2"
        },
        "downloads": 48,
        "filename": "quadpy-0.5.0.tar.gz",
        "has_sig": true,
        "md5_digest": "5524ce4c9a601e1f0ddf9907bc42cdb2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 221779,
        "upload_time": "2017-03-16T11:09:46",
        "url": "https://files.pythonhosted.org/packages/a4/e2/8262655d249bb0f458a6d4623770560f2c1ea16b0564b11597587dc2f640/quadpy-0.5.0.tar.gz"
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6ad8d65fb150a28693f024c9d3343aa1",
          "sha256": "2e45d4be450a99a32fe3a6a529d44feb61d498dfc841490fa335eb1360888936"
        },
        "downloads": 47,
        "filename": "quadpy-0.5.1.tar.gz",
        "has_sig": true,
        "md5_digest": "6ad8d65fb150a28693f024c9d3343aa1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 221814,
        "upload_time": "2017-03-16T13:14:31",
        "url": "https://files.pythonhosted.org/packages/eb/81/771808f990d6727caa9709d9a1a464fe628b37e09f4c26ec7e54678e9b26/quadpy-0.5.1.tar.gz"
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c03b37f34632ef8fb68b2a5e5b0ec842",
          "sha256": "f80f445501233e8aa603b201e5ded0841ae274cc7f1fe9cdfd7dcda14b87cf49"
        },
        "downloads": 119,
        "filename": "quadpy-0.5.2.tar.gz",
        "has_sig": true,
        "md5_digest": "c03b37f34632ef8fb68b2a5e5b0ec842",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 220765,
        "upload_time": "2017-03-17T14:23:53",
        "url": "https://files.pythonhosted.org/packages/c1/24/40d34b9d45c2319abf4f3a8584346f11eba18e8c46961d875ee3f0bb66d3/quadpy-0.5.2.tar.gz"
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "38a0a4a7524287be735853dca9881e91",
          "sha256": "79e730ebd713bbbf68c09fa93161b80f75af0c14c192594918322a95e288375a"
        },
        "downloads": 135,
        "filename": "quadpy-0.5.3.tar.gz",
        "has_sig": true,
        "md5_digest": "38a0a4a7524287be735853dca9881e91",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 226801,
        "upload_time": "2017-03-17T20:23:53",
        "url": "https://files.pythonhosted.org/packages/e5/9c/a384186ed8cea0f1a2723c11dabf128c55501032870c61cc22e291af3be3/quadpy-0.5.3.tar.gz"
      }
    ],
    "0.5.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1c24119615f1cf32f36fc8793b33482a",
          "sha256": "61736e356ad3c968f4833ec45ed6de05cab7a12857f4de9f3243598c3ee7e8f1"
        },
        "downloads": 12,
        "filename": "quadpy-0.5.4.tar.gz",
        "has_sig": true,
        "md5_digest": "1c24119615f1cf32f36fc8793b33482a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 226949,
        "upload_time": "2017-03-20T08:52:56",
        "url": "https://files.pythonhosted.org/packages/56/85/ebb55c3a42e4bef4e85c9236f6905037f2d8a8ea4630e41df2b510141617/quadpy-0.5.4.tar.gz"
      }
    ],
    "0.5.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b4c0cc71222ed20aef68404c8672183e",
          "sha256": "81aaa51efc89279dd63f682b56265c52155d6a0955dcb9817506005157910fcd"
        },
        "downloads": 14,
        "filename": "quadpy-0.5.5.tar.gz",
        "has_sig": true,
        "md5_digest": "b4c0cc71222ed20aef68404c8672183e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 221722,
        "upload_time": "2017-03-22T08:52:01",
        "url": "https://files.pythonhosted.org/packages/bb/20/4a514bbc6d35e81b1deb3c69e4d35f6b433b3286bee7357e9eeb93ae3976/quadpy-0.5.5.tar.gz"
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ead1115239fb06843df2c4b8452bda67",
          "sha256": "4ecb0746fe18861aff0b3b7a3f7a24f9db7a8355f827b513dbbd8169a49cbcd0"
        },
        "downloads": 214,
        "filename": "quadpy-0.6.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "ead1115239fb06843df2c4b8452bda67",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 296124,
        "upload_time": "2017-04-06T13:36:14",
        "url": "https://files.pythonhosted.org/packages/b1/b6/5bae252017ad2e2ec12930570add25831503d0419ecd34e10ceb30957b7f/quadpy-0.6.0-py2.py3-none-any.whl"
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "49df87e4ce9a9926fd58f47e8ceb9f84",
          "sha256": "d8535dd2a7bc159e2a1ed7f7796d0dfe322403e74bfb19c5e56664874ff15c54"
        },
        "downloads": 0,
        "filename": "quadpy-0.6.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "49df87e4ce9a9926fd58f47e8ceb9f84",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 299388,
        "upload_time": "2017-04-26T11:20:27",
        "url": "https://files.pythonhosted.org/packages/c8/bc/e732d3821e924100e0f5d0c8bb6372bef5ddcbcc8692c2b2572a6e0b69aa/quadpy-0.6.1-py2.py3-none-any.whl"
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d69e2161c95ede59beff410f32cf3039",
          "sha256": "1b90e77c466b3ba98a4a74fc7436546ba6dc7031614f90c3c818099556d119c8"
        },
        "downloads": 0,
        "filename": "quadpy-0.7.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "d69e2161c95ede59beff410f32cf3039",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 253045,
        "upload_time": "2017-07-13T18:14:17",
        "url": "https://files.pythonhosted.org/packages/9b/bc/3147a2818003947679bb7f74a7c0d4280d86902c3e8f6829add609ed3baf/quadpy-0.7.0-py2.py3-none-any.whl"
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f2894dae99742bb8ac9881c965bfcad5",
          "sha256": "10d0c17e3b9435910b81bc2e5b96f1ea4c8635edf540d34e9ba74f49308c786a"
        },
        "downloads": 0,
        "filename": "quadpy-0.7.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "f2894dae99742bb8ac9881c965bfcad5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 259925,
        "upload_time": "2017-07-14T10:26:30",
        "url": "https://files.pythonhosted.org/packages/64/16/513911e54d744f72eb07db9f50ba2cbb5795d737ee8186a75183618bbe3e/quadpy-0.7.1-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f2894dae99742bb8ac9881c965bfcad5",
        "sha256": "10d0c17e3b9435910b81bc2e5b96f1ea4c8635edf540d34e9ba74f49308c786a"
      },
      "downloads": 0,
      "filename": "quadpy-0.7.1-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "f2894dae99742bb8ac9881c965bfcad5",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 259925,
      "upload_time": "2017-07-14T10:26:30",
      "url": "https://files.pythonhosted.org/packages/64/16/513911e54d744f72eb07db9f50ba2cbb5795d737ee8186a75183618bbe3e/quadpy-0.7.1-py2.py3-none-any.whl"
    }
  ]
}