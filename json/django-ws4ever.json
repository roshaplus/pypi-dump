{
  "info": {
    "author": "turen",
    "author_email": "nb@turen.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "==============\ndjango-ws4ever\n==============\n\n\u63d0\u4f9b\u57fa\u4e8egevent\u7684websocket\u7684handler\n\nQuick start\n-----------\n1. Install::\n\n    pip install django_ws4ever\n\n\n2. Add \"ws4ever\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'ws4ever',\n    ]\n\n3. complete your own websocket handler class::\n\n    from ws4ever.views import BaseWebSocketApplication\n    class WebSocketClientApplication(BaseWebSocketApplication):\n        def __init__(self, ws):\n            pass\n\n        def handle_message(self, kind, payload=None):\n            pass\n\n4. set the websocket config path::\n\n    # ws4ever conf\n    WS4EVER = {\n      'ROUTES': { #websocket path and handler class\n          \"/ws\": \"django_ws4ever.views.WebSocketClientApplication\"\n      },\n      'MAX_IDLE': 30,  # seconds, interval to check zombie websocket connections\n      'BROADCAST_BACKEND': 'redis://:password@redis-host:redis_port'\n    }\n\n5. patch gevent in manage.py::\n    #prepend these code before any python code, possibly in line 2\n    from gevent import monkey;monkey.patch_all(thread=False)\n\n6. runserver\n    python manage.py runserver\n\n7. test websocket in js::\n\n    var ws = new WebSocket(\"ws://localhost:8000/ws\");\n    ws.onopen = function()\n    {\n       console.log(\"on open\");\n       ws.send(JSON.stringify({kind:'kind', payload:'payload'}));\n    };\n    ws.onmessage = function (evt)\n    {\n       var received_msg = evt.data;\n       console.log(\"receive message\", received_msg);\n    };\n    ws.onclose = function()\n    {\n       console.log(\"Connection is closed...\");\n    };\n\n8. [Optional] if you want to use wsgi to run websocket(ig.use gunicorn), config wsgi like that\n  8.1 config project wsgi.py::\n\n    #append to tail, must after  os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"xx.settings\")\n    # gunicorn \u7528\u7684 websocket wsgi\n    from geventwebsocket import Resource\n    from ws4ever.helpers import get_websocket_sources\n    ws_application = Resource(get_websocket_sources())\n\n  8.2 run gunicorn like::\n\n    #replace wsgi path to your own, replace your port\n    `gunicorn -k \"geventwebsocket.gunicorn.workers.GeventWebSocketWorker\"   django_ws4ever.wsgi:ws_application --bind 127.0.0.1:8001`\n\n9. [Optional/Advanced] broadcast and receive message\n  9.1 can send broadcast by::\n\n    from ws4ever.redis import publish_client_message\n    publish_client_message('kind', 'payload')\n\n  9.2 then can handle the messages in WebSocketClientApplication you created in step 3 above::\n\n    class WebSocketClientApplication(BaseWebSocketApplication):\n        ...\n\n        @classmethod\n        def on_redis_message(cls, kind, payload, **extra):\n            #add your handle code here",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-ws4ever",
    "platform": "",
    "project_url": "https://pypi.org/project/django-ws4ever/",
    "release_url": "https://pypi.org/project/django-ws4ever/0.1.8/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "websocket server for django",
    "version": "0.1.8"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fd7062a2ceba7fd49b84ee94dab6df82",
          "sha256": "862dbbde70c762c1eb0e42650635160554777af00c24bf14b0bdf5357e5d784e"
        },
        "downloads": 0,
        "filename": "django-ws4ever-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fd7062a2ceba7fd49b84ee94dab6df82",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8395,
        "upload_time": "2017-08-09T09:07:29",
        "url": "https://files.pythonhosted.org/packages/fd/94/f83d7589228013369bf679bb6007a439019e90de9129ae12659240141327/django-ws4ever-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "80bd4d6c12ac516476046787accb157c",
          "sha256": "114ddcf89d63eb71f5c0b81dcbab42010f07c01fe74764c20ef499c6ec30363c"
        },
        "downloads": 0,
        "filename": "django-ws4ever-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "80bd4d6c12ac516476046787accb157c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8523,
        "upload_time": "2017-08-10T01:40:38",
        "url": "https://files.pythonhosted.org/packages/aa/5b/ae470026c16b07de82a04c34f6979d128a18fc85f7dbbd30fc495916c58b/django-ws4ever-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4a0f040e564e050caf2c9feaba9ca56d",
          "sha256": "37493319e102c4749d3b5d8816502409b575b1b7a195cb08f1cbcc3b5006813b"
        },
        "downloads": 0,
        "filename": "django-ws4ever-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4a0f040e564e050caf2c9feaba9ca56d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9848,
        "upload_time": "2017-08-14T07:41:47",
        "url": "https://files.pythonhosted.org/packages/9d/b3/c38a68a1f1c4ddb3229d57583e523cdf15bc4573ca20b1a4293de2623cb7/django-ws4ever-0.1.2.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "739ba11294eea3e1928d8e7d421c2dd5",
          "sha256": "eca6f61eb8435bc71f98ef37e29147a06c5bc1d22b1fe7528d276791f304c689"
        },
        "downloads": 0,
        "filename": "django-ws4ever-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "739ba11294eea3e1928d8e7d421c2dd5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9780,
        "upload_time": "2017-08-15T02:24:06",
        "url": "https://files.pythonhosted.org/packages/70/b3/c734cf1e6e75dfa1b02319f154e4f09332113eb86fec620712b61dd5ce23/django-ws4ever-0.1.4.tar.gz"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ff20b32fabd90b9f3b2a40461c5a36bb",
          "sha256": "53bf8fc810581304b56301a37d6645bae164db8ac231df59752d75803685447c"
        },
        "downloads": 0,
        "filename": "django-ws4ever-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ff20b32fabd90b9f3b2a40461c5a36bb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9773,
        "upload_time": "2017-08-15T02:49:13",
        "url": "https://files.pythonhosted.org/packages/28/35/c25f5b995a459a09d1d2978d1a3309ac0adea17a8980780cf364d9e4cf95/django-ws4ever-0.1.5.tar.gz"
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a5ffd4bcee68b1f12c569e9be63d45e4",
          "sha256": "350e0d722151f11d05c4e240d1eb1116b6c8bcb7792237d19cc342327576af15"
        },
        "downloads": 0,
        "filename": "django-ws4ever-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "a5ffd4bcee68b1f12c569e9be63d45e4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9576,
        "upload_time": "2017-08-17T01:35:13",
        "url": "https://files.pythonhosted.org/packages/70/aa/1412b11ec5ebe769fbc2b0a2b5a8e735f49312930ac57fdb54cab3492cf9/django-ws4ever-0.1.6.tar.gz"
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "366383bf5dd856940016f632911efa9b",
          "sha256": "a276137000231ef8cea5179c3bd0d2b889a9fd08980771cc8d15f4c788916253"
        },
        "downloads": 0,
        "filename": "django-ws4ever-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "366383bf5dd856940016f632911efa9b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9512,
        "upload_time": "2017-08-17T06:18:02",
        "url": "https://files.pythonhosted.org/packages/8f/cf/4faafca7b954dae3fe67f6e1a6dbe026a6d6351a5008cc907a974a3ac2ee/django-ws4ever-0.1.7.tar.gz"
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fbe868374aa23b0f368f087c07f6ea91",
          "sha256": "d1d6da004a4bb4dc56fcf9289934dfe5c8c312a5125c2143ca2eb8c3fe564dca"
        },
        "downloads": 0,
        "filename": "django-ws4ever-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "fbe868374aa23b0f368f087c07f6ea91",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9501,
        "upload_time": "2017-08-17T06:36:58",
        "url": "https://files.pythonhosted.org/packages/2c/00/fd998fc9a9072604506ec0d79688c562de338257785db5c2ba107bed128e/django-ws4ever-0.1.8.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fbe868374aa23b0f368f087c07f6ea91",
        "sha256": "d1d6da004a4bb4dc56fcf9289934dfe5c8c312a5125c2143ca2eb8c3fe564dca"
      },
      "downloads": 0,
      "filename": "django-ws4ever-0.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "fbe868374aa23b0f368f087c07f6ea91",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9501,
      "upload_time": "2017-08-17T06:36:58",
      "url": "https://files.pythonhosted.org/packages/2c/00/fd998fc9a9072604506ec0d79688c562de338257785db5c2ba107bed128e/django-ws4ever-0.1.8.tar.gz"
    }
  ]
}