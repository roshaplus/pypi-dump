{
  "info": {
    "author": "Justin Karneges",
    "author_email": "justin@fanout.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "# Django EventStream\n\nDjango EventStream provides an API endpoint for your Django application that can push data to connected clients. It relies on Pushpin or Fanout Cloud to manage the connections. Data is sent using the Server-Sent Events protocol (SSE), in which data is streamed over a never-ending HTTP response.\n\nFor example, you could create an endpoint, `/events/`, that a client could connect to with a GET request:\n\n```http\nGET /events/?channel=test HTTP/1.1\nHost: api.example.com\nAccept: text/event-stream\n```\n\nThe client would receive a streaming HTTP response with content looking like this:\n\n```http\nHTTP/1.1 200 OK\nTransfer-Encoding: chunked\nConnection: Transfer-Encoding\nContent-Type: text/event-stream\n\nevent: stream-open\ndata:\n\nevent: message\nid: test:1\ndata: {\"foo\": \"bar\"}\n\nevent: message\nid: test:2\ndata: {\"bar\": \"baz\"}\n```\n\nFeatures:\n\n* Easy to consume from browsers or native applications.\n* Highly reliable. Events can be persisted to your database, so clients can recover if they get disconnected.\n* Set per-user channel permissions.\n* Clean API contract that could be exposed to third parties if desired.\n\n## Setup\n\nInstall this module:\n\n```sh\npip install django-eventstream\n```\n\nThen a few changes need to be made to `settings.py`.\n\nAdd the `GripMiddleware`:\n\n```py\nMIDDLEWARE = [\n    'django_grip.GripMiddleware',\n    ...\n]\n```\n\nSet `GRIP_URL` with your Pushpin or Fanout Cloud settings:\n\n```py\n# pushpin\nGRIP_URL = 'http://localhost:5561'\n```\n\n```py\n# fanout cloud\nGRIP_URL = 'http://api.fanout.io/realm/your-realm?iss=your-realm&key=base64:your-realm-key'\n```\n\nAdd the `django_eventstream` app:\n\n```py\nINSTALLED_APPS = [\n    ...\n    'django_eventstream',\n]\n```\n\nAdd an endpoint in `urls.py`:\n\n```py\nfrom django.conf.urls import url, include\nimport django_eventstream\n\nurlpatterns = [\n    ...\n    url(r'^events/', include(django_eventstream.urls)),\n]\n```\n\nThat's it! Clients can now connect to the `/events/` endpoint and get a stream.\n\nTo send data to clients, call `send_event`:\n\n```py\nfrom django_eventstream import send_event\n\nsend_event('test', 'message', {'text': 'hello world'})\n```\n\nThe first argument is the channel to send on, the second is the event type, and the third is the event data. The data will be JSON-encoded using `DjangoJSONEncoder`.\n\n## Local development\n\nIf you're developing locally and want to test with Fanout Cloud, we recommend using [ngrok](https://ngrok.com/) to register a public host that routes to your local instance.\n\nAs a convenience, this module comes with a Django command `runserver_ngrok` that acts like `runserver` except it additionally configures your Fanout Cloud realm to use a detected tunnel as the origin server.\n\nFrom a separate shell, run `ngrok`:\n\n```sh\nngrok http 8000\n```\n\nThen run the `runserver_ngrok` command:\n\n```sh\npython manage.py runserver_ngrok\n```\n\nYou should see output like this:\n\n```\nSetting ngrok tunnel 4f91f84e.ngrok.io as GRIP origin\n...\nStarting development server at http://127.0.0.1:8000/\nQuit the server with CONTROL-C.\n```\n\nNote that it may take a minute or so for the changes to take effect.\n\n## Event storage\n\nBy default, events aren't persisted anywhere, so if clients get disconnected or if your server fails to publish data to Pushpin or Fanout Cloud, then clients can miss messages. For reliable delivery, you'll want to enable event storage.\n\nFirst, set up the database tables:\n\n```sh\npython manage.py migrate\n```\n\nThen, set a storage class in `settings.py`:\n\n```py\nEVENTSTREAM_STORAGE_CLASS = 'django_eventstream.storage.DjangoModelStorage'\n```\n\nThat's all you need to do. When storage is enabled, events are written to the database before they are published, and they persist for 24 hours. If clients get disconnected, Pushpin or Fanout Cloud goes down, or your own server goes down or crashes at any time, even mid-publish, the stream will automatically be repaired.\n\n## Receiving in the browser\n\nInclude client libraries on the frontend:\n\n```html\n<script src=\"{% static 'django_eventstream/eventsource.min.js' %}\"></script>\n<script src=\"{% static 'django_eventstream/reconnecting-eventsource.js' %}\"></script>\n```\n\nListen for data:\n\n```js\nvar es = new ReconnectingEventSource('/events/?channel=test');\n\nes.addEventListener('message', function (e) {\n    console.log(e.data);\n}, false);\n\nes.addEventListener('stream-reset', function (e) {\n    // ... client fell behind, reinitialize ...\n}, false);\n```\n\n## Authorization\n\nDeclare authorizer class with your authorization logic:\n\n```py\nclass MyAuthorizer(object):\n    def can_read_channel(self, user, channel):\n        # require auth for prefixed channels\n        if channel.startswith('_') and user is None:\n            return False\n        return True\n```\n\nConfigure `settings.py` to use it:\n\n```py\nEVENTSTREAM_AUTHORIZER_CLASS = 'myapp.authorizer.MyAuthorizer'\n```\n\nWhenever permissions change, call `channel_permission_changed`. This will cause clients to be disconnected if they lost permission to the channel.\n\n```py\nfrom django_eventstream import channel_permission_changed\n\nchannel_permission_changed(user, '_mychannel')",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/fanout/django-eventstream",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-eventstream",
    "platform": "",
    "project_url": "https://pypi.org/project/django-eventstream/",
    "release_url": "https://pypi.org/project/django-eventstream/1.2.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Django EventStream library",
    "version": "1.2.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "087b5d157991ff19d9e8b8f1cb5db528",
          "sha256": "af726809ab15dabb7b3f66e96f773f2983d330b640676cb0760c269a1e71a7f8"
        },
        "downloads": 0,
        "filename": "django-eventstream-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "087b5d157991ff19d9e8b8f1cb5db528",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5702,
        "upload_time": "2017-07-12T01:01:41",
        "url": "https://files.pythonhosted.org/packages/40/3f/6327c6e1558a2d2e1134ad991c63016c24003289c3c74649675e133eb57d/django-eventstream-0.1.0.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "edc7116ec938c283a1cb218aaa51229c",
          "sha256": "857631a35d6a4dfee7f05a88714729cd14f4416497619021f5751e71a5badcf5"
        },
        "downloads": 0,
        "filename": "django-eventstream-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "edc7116ec938c283a1cb218aaa51229c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17977,
        "upload_time": "2017-07-13T23:11:19",
        "url": "https://files.pythonhosted.org/packages/cb/3b/46eb6d468062aab2155345e6064873fc4f1bd3a6f72f7508e5aa52011e0d/django-eventstream-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "585d324253547dbf08f61e03be55cdf9",
          "sha256": "82dbeaa26d38623e9c3ca986fa423cb3780888b61b852eacf8a67ee95ce95de3"
        },
        "downloads": 0,
        "filename": "django-eventstream-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "585d324253547dbf08f61e03be55cdf9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18985,
        "upload_time": "2017-07-13T23:22:51",
        "url": "https://files.pythonhosted.org/packages/a1/34/96bebee4cad1a9619a32526bc3f2fcf297c6c68e222801c615b9df3b41ae/django-eventstream-0.2.1.tar.gz"
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "89442532d15db37e2e085f1aa969f1c1",
          "sha256": "bd09a390470953b31cb288333c7d607ba6b8c8147fb41652f71c39352b1702c2"
        },
        "downloads": 0,
        "filename": "django-eventstream-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "89442532d15db37e2e085f1aa969f1c1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23169,
        "upload_time": "2017-08-04T01:36:24",
        "url": "https://files.pythonhosted.org/packages/fc/eb/11ce367e5248f65f8e598058cb65e8cce8d2971d3d003ad17a3556cf9fc1/django-eventstream-1.0.0.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ce685189655701253bb509faf154d9fa",
          "sha256": "37e6b842ff20db71f94a022e69bb37fb08c9320d2b4f3e4b551e7df22427b02a"
        },
        "downloads": 0,
        "filename": "django-eventstream-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ce685189655701253bb509faf154d9fa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23374,
        "upload_time": "2017-08-05T00:25:45",
        "url": "https://files.pythonhosted.org/packages/27/48/d7160ff445a660504898df36c526062c93fd123fb90f9b6e87ea096afe5d/django-eventstream-1.1.0.tar.gz"
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d311b14aa27f95f5dfddb868d2321135",
          "sha256": "578c385bcb8967157b1c26b7a9f79b0c6729dbc45a55a2772a3bf6284e4002b2"
        },
        "downloads": 0,
        "filename": "django-eventstream-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d311b14aa27f95f5dfddb868d2321135",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23452,
        "upload_time": "2017-08-10T19:04:06",
        "url": "https://files.pythonhosted.org/packages/37/18/45716aa776aaeb700919574108357d7e70b7d7e0dc8aa6c96bcbabed9af9/django-eventstream-1.1.1.tar.gz"
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "851195b10bad0d83fddc4b4cbb767833",
          "sha256": "8a13df50f3f5cc0331c0183af3daaf988861b307db0d9938f7e9234c1e22c779"
        },
        "downloads": 0,
        "filename": "django-eventstream-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "851195b10bad0d83fddc4b4cbb767833",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23608,
        "upload_time": "2017-08-18T03:01:12",
        "url": "https://files.pythonhosted.org/packages/f5/ee/eee8cb804788c99cf7cbeaaf8faf59e4200febec7e2a83237fc40454a9f8/django-eventstream-1.1.2.tar.gz"
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ace2d3a42aba28729eb3ec356887548c",
          "sha256": "2de4f00e5279c1e0e2fc00f9f5262bd160068392c0d975d543a993015fb8eb53"
        },
        "downloads": 0,
        "filename": "django-eventstream-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ace2d3a42aba28729eb3ec356887548c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23625,
        "upload_time": "2017-09-01T03:30:01",
        "url": "https://files.pythonhosted.org/packages/4b/25/ed24b63f867e397121fdc22e5e40009e6e430bf4098aa6fe94cd31e18d74/django-eventstream-1.1.3.tar.gz"
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a54e1320f2aa89042d3d20f19be41871",
          "sha256": "2e4c54d2f0e26d00e5c39c6eac7943e1852254ae7e7ea23909a5a01c30b9cdd6"
        },
        "downloads": 0,
        "filename": "django-eventstream-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a54e1320f2aa89042d3d20f19be41871",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23844,
        "upload_time": "2017-10-07T19:12:51",
        "url": "https://files.pythonhosted.org/packages/6e/0e/6933dae9614c7dae6e3fc539dfeb76a3ccd77ade326b052d5fe0fa6a8009/django-eventstream-1.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a54e1320f2aa89042d3d20f19be41871",
        "sha256": "2e4c54d2f0e26d00e5c39c6eac7943e1852254ae7e7ea23909a5a01c30b9cdd6"
      },
      "downloads": 0,
      "filename": "django-eventstream-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a54e1320f2aa89042d3d20f19be41871",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 23844,
      "upload_time": "2017-10-07T19:12:51",
      "url": "https://files.pythonhosted.org/packages/6e/0e/6933dae9614c7dae6e3fc539dfeb76a3ccd77ade326b052d5fe0fa6a8009/django-eventstream-1.2.0.tar.gz"
    }
  ]
}