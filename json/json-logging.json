{
  "info": {
    "author": "Bui Nguyen Thang (Bob)",
    "author_email": "bob.bui@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Flask",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Logging"
    ],
    "description": "json-logging\n============\n\nPython logging library to emit JSON log that can be easily indexed and\nsearchable by logging infrastructure such as\n`ELK <https://www.elastic.co/webinars/introduction-elk-stack>`_.\n\n| If you\u2019re using Cloud Foundry, it worth to check out the library\n  `SAP/cf-python-logging-support <https://github.com/SAP/cf-python-logging-support>`_\n  which I\u2019m also original author and contributor. \n\n1. Features\n===========\n\n1. Emit JSON logs (see format\n   detail in reference)\n2. Support **correlation-id**\n   `[1] <https://stackoverflow.com/questions/25433258/what-is-the-x-request-id-http-header>`_\n3. Lightweight, no dependencies, minimal configuration needed (1 LoC to\n   get it working)\n4. Fully compatible with Python **logging** module. Support both Python\n   2.7.x and 3.x\n5. Support HTTP request instrumentation. Built in support for\n   `Flask <http://flask.pocoo.org/>`_ &\n   `Sanic <https://github.com/channelcat/sanic>`_. Extensible to support other web\n   frameworks. PR welcome :smiley: .\n6. Support inject arbitrary extra properties to JSON log message.\n\n2. Usage\n========\n\nInstall by running this command: \n\n.. code:: python\n\n    pip install json-logging\n\nBy default log will be emitted in normal format to ease the local\ndevelopment. To enable it on production set either\n**json_logging.ENABLE_JSON_LOGGING** or **ENABLE_JSON_LOGGING\nenvironment variable** to true.\n\n| To configure, call **json_logging.init(framework_name)**. Once\n  configured library will try to configure all loggers (existing and\n  newly created) to emit log in JSON format.\n| See following use cases for more detail.\n\n| TODO: update guide on how to use ELK stack to view log\n\n\n2.1 Non-web application log\n---------------------------\n\nThis mode don\u2019t support **correlation-id**.\n\n.. code:: python\n\n    import json_logging, logging, sys\n\n    # log is initialized without a web framework name\n    json_logging.ENABLE_JSON_LOGGING = True\n    json_logging.init()\n\n    logger = logging.getLogger(\"test-logger\")\n    logger.setLevel(logging.DEBUG)\n    logger.addHandler(logging.StreamHandler(sys.stdout))\n\n    logger.info(\"test logging statement\")\n\n\n2.2 Web application log\n-----------------------\n\n\nFlask\n~~~~~\n\n.. code:: python\n\n    import datetime, logging, sys, json_logging, flask\n\n    app = flask.Flask(__name__)\n    json_logging.ENABLE_JSON_LOGGING = True\n    json_logging.init(framework_name='flask')\n    json_logging.init_request_instrument(app)\n\n    # init the logger as usual\n    logger = logging.getLogger(\"test-logger\")\n    logger.setLevel(logging.DEBUG)\n    logger.addHandler(logging.StreamHandler(sys.stdout))\n\n    @app.route('/')\n    def home():\n        logger.info(\"test log statement\")\n        return \"Hello world : \" + str(datetime.datetime.now())\n\n    if __name__ == \"__main__\":\n        app.run(host='0.0.0.0', port=int(5000), use_reloader=False)\n\n\nSanic\n~~~~~\n\n.. code:: python\n\n    import logging, sys, json_logging, sanic\n\n    app = sanic.Sanic()\n    json_logging.ENABLE_JSON_LOGGING = True\n    json_logging.init(framework_name='sanic')\n    json_logging.init_request_instrument(app)\n\n    # init the logger as usual\n    logger = logging.getLogger(\"sanic-integration-test-app\")\n    logger.setLevel(logging.DEBUG)\n    logger.addHandler(logging.StreamHandler(sys.stdout))\n\n    @app.route(\"/\")\n    async def home(request):\n        logger.info(\"test log statement\")\n        return sanic.response.text(\"hello world\")\n\n    if __name__ == \"__main__\":\n        app.run(host=\"0.0.0.0\", port=8000)\n\n\n2.3 Get current correlation-id\n------------------------------\n\nCurrent request correlation-id can be retrieved and pass to downstream\nservices call as follow:\n\n.. code:: python\n\n    correlation_id = json_logging.get_correlation_id()\n    # use correlation id for downstream service calls here\n\nIn request context, if one is not present, a new one might be generated\ndepends on CREATE_CORRELATION_ID_IF_NOT_EXISTS setting value.\n\n\n2.4 Log extra properties\n------------------------\n\nExtra property can be added to logging statement as follow:\n\n.. code:: python\n\n    logger.info(\"test log statement\", extra = {'props' : {'extra_property' : 'extra_value'}})\n\n\n2.5 Root logger\n---------------\n\nIf you want to use root logger as main logger to emit log. Made sure you\ncall **config_root_logger()** after initialize root logger (by\nlogging.basicConfig() or logging.getLogger(\u2018root\u2019))\n`[2] <#2-python-logging-propagate>`_\n\n.. code:: python\n\n    logging.basicConfig()\n    json_logging.config_root_logger()\n\n\n3. Configuration\n================\n\nlogging library can be configured by setting the value in json_logging\n\n+-------------------------------------+----------------------+----------------------+\n| Name                                | Description          | Default value        |\n+=====================================+======================+======================+\n| ENABLE_JSON_LOGGING                 | Whether to enable    | false                |\n|                                     | JSON logging         |                      |\n|                                     | mode.Can be set as   |                      |\n|                                     | an environment       |                      |\n|                                     | variable, enable     |                      |\n|                                     | when set to to       |                      |\n|                                     | either one in        |                      |\n|                                     | following list       |                      |\n|                                     | (case-insensitive)   |                      |\n|                                     | **[\u2018true\u2019, \u20181\u2019, \u2018y\u2019, |                      |\n|                                     | \u2018yes\u2019]**             |                      |\n+-------------------------------------+----------------------+----------------------+\n| ENABLE_JSON_LOGGING_DEBUG           | Whether to enable    | true                 |\n|                                     | debug logging for    |                      |\n|                                     | this library for     |                      |\n|                                     | development purpose. |                      |\n+-------------------------------------+----------------------+----------------------+\n| CORRELATION_ID_HEADERS              | List of HTTP headers | [\u2018X-Correlation-ID\u2019, |\n|                                     | that will be used to | \u2018X-Request-ID\u2019]      |\n|                                     | look for             |                      |\n|                                     | correlation-id       |                      |\n|                                     | value. HTTP headers  |                      |\n|                                     | will be searched one |                      |\n|                                     | by one according to  |                      |\n|                                     | list order           |                      |\n+-------------------------------------+----------------------+----------------------+\n| EMPTY_VALUE                         | Default value when a | \u2018-\u2019                  |\n|                                     | logging record       |                      |\n|                                     | property is None     |                      |\n+-------------------------------------+----------------------+----------------------+\n| CORRELATION_ID_GENERATOR            | function to generate | uuid.uuid1           |\n|                                     | unique               |                      |\n|                                     | correlation-id       |                      |\n+-------------------------------------+----------------------+----------------------+\n| JSON_SERIALIZER                     | function to encode   | json.dumps           |\n|                                     | object to JSON       |                      |\n+-------------------------------------+----------------------+----------------------+\n| COMPONENT_ID                        | Uniquely identifies  | EMPTY_VALUE          |\n|                                     | the software         |                      |\n|                                     | component that has   |                      |\n|                                     | processed the        |                      |\n|                                     | current request      |                      |\n+-------------------------------------+----------------------+----------------------+\n| COMPONENT_NAME                      | A human-friendly     | EMPTY_VALUE          |\n|                                     | name representing    |                      |\n|                                     | the software         |                      |\n|                                     | component            |                      |\n+-------------------------------------+----------------------+----------------------+\n| COMPONENT_INSTANCE_INDEX            | Instance\u2019s index of  | 0                    |\n|                                     | horizontally scaled  |                      |\n|                                     | service              |                      |\n+-------------------------------------+----------------------+----------------------+\n| CREATE_CORRELATION_ID_IF_NOT_EXISTS | Whether to generate  | True                 |\n|                                     | a new correlation-id |                      |\n|                                     | in case one is not   |                      |\n|                                     | present              |                      |\n+-------------------------------------+----------------------+----------------------+\n\n\n4. Python References\n====================\n\nTODO: update Python API docs on Github page\n\n\n5. Framework support plugin development\n=======================================\n\nTo add support for a new web framework, you need to extend following\nclasses in\n`**framework_base** <https://github.com/thangbn/json-logging-python/blob/master/json_logging/framework_base.py>`_ and\nregister support using\n`**json_logging.register_framework_support** <https://github.com/thangbn/json-logging-python/blob/master/json_logging/__init__.py#L38>`_\nmethod:\n\n+---------------------------------------+----------------------+----------------------+\n| Class                                 | Description          | Mandatory            |\n+=======================================+======================+======================+\n| RequestAdapter                        | Helper class help to | no                   |\n|                                       | extract              |                      |\n|                                       | logging-relevant     |                      |\n|                                       | information from     |                      |\n|                                       | HTTP request object  |                      |\n+---------------------------------------+----------------------+----------------------+\n| ResponseAdapter                       | Helper class help to | yes                  |\n|                                       | extract              |                      |\n|                                       | logging-relevant     |                      |\n|                                       | information from     |                      |\n|                                       | HTTP response object |                      |\n+---------------------------------------+----------------------+----------------------+\n| FrameworkConfigurator                 | Class to perform     | no                   |\n|                                       | logging              |                      |\n|                                       | configuration for    |                      |\n|                                       | given framework as   |                      |\n|                                       | needed               |                      |\n+---------------------------------------+----------------------+----------------------+\n| AppRequestInstrumentationConfigurator | Class to perform     | no                   |\n|                                       | request              |                      |\n|                                       | instrumentation      |                      |\n|                                       | logging              |                      |\n|                                       | configuration        |                      |\n+---------------------------------------+----------------------+----------------------+\n\nTake a look at\n`**json_logging/base_framework.py** <https://github.com/thangbn/json-logging-python/blob/master/json_logging/framework_base.py>`_,\n`**json_logging.flask** <https://github.com/thangbn/json-logging-python/tree/master/json_logging/framework/flask>`_\nand\n`**json_logging.sanic** <https://github.com/thangbn/json-logging-python/tree/master/json_logging/framework/sanic>`_\npackages for reference implementations.\n\n\n6. FAQ & Troubleshooting\n========================\n\n1. I configured everything, but no logs are printed out?\n\n   -  Forgot to add handlers to your logger?\n   -  Check whether logger is disabled.\n\n2. Same log statement is printed out multiple times.\n\n   -  Check whether the same handler is added to both parent and child\n      loggers [2]\n   -  If you using flask, by default option **use_reloader** is set to\n      **True** which will start 2 instances of web application. change\n      it to False to disable this behaviour\n      `[3] <#3-more-on-flask-use-reloader>`_\n\n3. Can not install Sanic on Windows?\n\nyou can install Sanic on windows by running these commands:\n\n::\n\n    git clone --branch 0.7.0 https://github.com/channelcat/sanic.git\n    set SANIC_NO_UVLOOP=true\n    set SANIC_NO_UJSON=true\n    pip3 install .\n\n\n7. References\n=============\n\n[0] Full logging format references\n----------------------------------\n\n2 types of logging statement will be emitted by this library: \n- Application log: normal logging statement e.g.:\n\n::\n\n    {\n        \"type\": \"log\",\n        \"written_at\": \"2017-12-23T16:55:37.280Z\",\n        \"written_ts\": 1514048137280721000,\n        \"component_id\": \"1d930c0xd-19-s3213\",\n        \"component_name\": \"ny-component_name\",\n        \"component_instance\": 0,\n        \"logger\": \"test logger\",\n        \"thread\": \"MainThread\",\n        \"level\": \"INFO\",\n        \"line_no\": 22,\n        \"correlation_id\": \"1975a02e-e802-11e7-8971-28b2bd90b19a\",\n        \"extra_property\": \"extra_value\"\n    }\n\n-  Request log: request instrumentation logging statement which recorded\n   request information such as response time, request size, etc.\n\n::\n\n    {\n        \"type\": \"request\",\n        \"written_at\": \"2017-12-23T16:55:37.280Z\",\n        \"written_ts\": 1514048137280721000,\n        \"component_id\": \"-\",\n        \"component_name\": \"-\",\n        \"component_instance\": 0,\n        \"correlation_id\": \"1975a02e-e802-11e7-8971-28b2bd90b19a\",\n        \"remote_user\": \"user_a\",\n        \"request\": \"/index.html\",\n        \"referer\": \"-\",\n        \"x_forwarded_for\": \"-\",\n        \"protocol\": \"HTTP/1.1\",\n        \"method\": \"GET\",\n        \"remote_ip\": \"127.0.0.1\",\n        \"request_size_b\": 1234,\n        \"remote_host\": \"127.0.0.1\",\n        \"remote_port\": 50160,\n        \"request_received_at\": \"2017-12-23T16:55:37.280Z\",\n        \"response_time_ms\": 0,\n        \"response_status\": 200,\n        \"response_size_b\": \"122\",\n        \"response_content_type\": \"text/html; charset=utf-8\",\n        \"response_sent_at\": \"2017-12-23T16:55:37.280Z\"\n    }\n\nSee following tables for detail format explanation: \n\n - Common field\n\n+-------------------+-----------------+-----------------+-----------------+\n| Field             | Description     | Format          | Example         |\n+===================+=================+=================+=================+\n| written_at        | The date when   | ISO 8601        | 2017-12-23T15:1 |\n|                   | this log        | YYYY-MM-DDTHH:M | 4:02.208Z       |\n|                   | message was     | M:SS.milliZ     |                 |\n|                   | written.        |                 |                 |\n+-------------------+-----------------+-----------------+-----------------+\n| written_ts        | The timestamp   | long number     | 145682055381684 |\n|                   | in nano-second  |                 | 9408            |\n|                   | precision when  |                 |                 |\n|                   | this request    |                 |                 |\n|                   | metric message  |                 |                 |\n|                   | was written.    |                 |                 |\n+-------------------+-----------------+-----------------+-----------------+\n| correlation_id    | The timestamp   | string          | db2d002e-2702-4 |\n|                   | in nano-second  |                 | 1ec-66f5-c002a8 |\n|                   | precision when  |                 | 0a3d3f          |\n|                   | this request    |                 |                 |\n|                   | metric message  |                 |                 |\n|                   | was written.    |                 |                 |\n+-------------------+-----------------+-----------------+-----------------+\n| type              | Type of         | string          |                 |\n|                   | logging. \u201clogs\u201d |                 |                 |\n|                   | or \u201crequest\u201d    |                 |                 |\n+-------------------+-----------------+-----------------+-----------------+\n| component_id      | Uniquely        | string          | 9e6f3ecf-def0-4 |\n|                   | identifies the  |                 | baf-8fac-9339e6 |\n|                   | software        |                 | 1d5645          |\n|                   | component that  |                 |                 |\n|                   | has processed   |                 |                 |\n|                   | the current     |                 |                 |\n|                   | request         |                 |                 |\n+-------------------+-----------------+-----------------+-----------------+\n| component_name    | A               | string          | my-component    |\n|                   | human-friendly  |                 |                 |\n|                   | name            |                 |                 |\n|                   | representing    |                 |                 |\n|                   | the software    |                 |                 |\n|                   | component       |                 |                 |\n+-------------------+-----------------+-----------------+-----------------+\n| component_instance| Instance\u2019s      | string          | 0               |\n|                   | index of        |                 |                 |\n|                   | horizontally    |                 |                 |\n|                   | scaled service  |                 |                 |\n+-------------------+-----------------+-----------------+-----------------+\n\n -  application logs\n\n+-----------------+-----------------+-----------------+-----------------+\n| Field           | Description     | Format          | Example         |\n+=================+=================+=================+=================+\n| msg             | The actual      | string          | This is a log   |\n|                 | message string  |                 | message         |\n|                 | passed to the   |                 |                 |\n|                 | logger.         |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| level           | The log \u201clevel\u201d | string          | INFO            |\n|                 | indicating the  |                 |                 |\n|                 | severity of the |                 |                 |\n|                 | log message.    |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| thread          | Identifies the  | string          | http-nio-4655   |\n|                 | execution       |                 |                 |\n|                 | thread in which |                 |                 |\n|                 | this log        |                 |                 |\n|                 | message has     |                 |                 |\n|                 | been written.   |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| logger          | The logger name |                 |                 |\n|                 | that emits the  |  string         |requests-logger  |\n|                 | log message.    |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n\n -  request logs:\n\n+-----------------+-----------------+-----------------+-----------------+\n| Field           | Description     | Format          | Example         |\n+=================+=================+=================+=================+\n| request         | request path    | string          | /get/api/v2     |\n|                 | that has been   |                 |                 |\n|                 | processed.      |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| request_receive | The date when   | ISO 8601        | 2015-01-24      |\n| d_at            | an incoming     | YYYY-MM-DDTHH:M | 14:06:05.071Z   |\n|                 | request was     | M:SS.milliZ     |                 |\n|                 | received by the | The precision   |                 |\n|                 | producer.       | is in           |                 |\n|                 |                 | milliseconds.   |                 |\n|                 |                 | The timezone is |                 |\n|                 |                 | UTC.            |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| response_sent_a | The date when   | ditto           | 2015-01-24      |\n| t               | the response to |                 | 14:06:05.071Z   |\n|                 | an incoming     |                 |                 |\n|                 | request was     |                 |                 |\n|                 | sent to the     |                 |                 |\n|                 | consumer.       |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| response_time_m | How many        | float           | 43.476          |\n| s               | milliseconds it |                 |                 |\n|                 | took the        |                 |                 |\n|                 | producer to     |                 |                 |\n|                 | prepare the     |                 |                 |\n|                 | response.       |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| protocol        | Which protocol  | string          | HTTP/1.1        |\n|                 | was used to     |                 |                 |\n|                 | issue a request |                 |                 |\n|                 | to a producer.  |                 |                 |\n|                 | In most cases,  |                 |                 |\n|                 | this will be    |                 |                 |\n|                 | HTTP (including |                 |                 |\n|                 | a version       |                 |                 |\n|                 | specifier), but |                 |                 |\n|                 | for outgoing    |                 |                 |\n|                 | requests        |                 |                 |\n|                 | reported by a   |                 |                 |\n|                 | producer, it    |                 |                 |\n|                 | may contain     |                 |                 |\n|                 | other values.   |                 |                 |\n|                 | E.g. a database |                 |                 |\n|                 | call via JDBC   |                 |                 |\n|                 | may report,     |                 |                 |\n|                 | e.g. \u201cJDBC/1.2\u201d |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| method          | The             | string          | GET             |\n|                 | corresponding   |                 |                 |\n|                 | protocol        |                 |                 |\n|                 | method.         |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| remote_ip       | IP address of   | string          | 192.168.0.1     |\n|                 | the consumer    |                 |                 |\n|                 | (might be a     |                 |                 |\n|                 | proxy, might be |                 |                 |\n|                 | the actual      |                 |                 |\n|                 | client)         |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| remote_host     | host name of    | string          | my.happy.host   |\n|                 | the consumer    |                 |                 |\n|                 | (might be a     |                 |                 |\n|                 | proxy, might be |                 |                 |\n|                 | the actual      |                 |                 |\n|                 | client)         |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| remote_port     | Which TCP port  | string          | 1234            |\n|                 | is used by the  |                 |                 |\n|                 | consumer to     |                 |                 |\n|                 | establish a     |                 |                 |\n|                 | connection to   |                 |                 |\n|                 | the remote      |                 |                 |\n|                 | producer.       |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| remote_user     | The username    | string          | user_name       |\n|                 | associated with |                 |                 |\n|                 | the request     |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| request_size_b  | The size in     | long            | 1234            |\n|                 | bytes of the    |                 |                 |\n|                 | requesting      |                 |                 |\n|                 | entity or       |                 |                 |\n|                 | \u201cbody\u201d (e.g.,   |                 |                 |\n|                 | in case of POST |                 |                 |\n|                 | requests).      |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| response_size_b | The size in     | long            | 1234            |\n|                 | bytes of the    |                 |                 |\n|                 | response entity |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| response_status | The status code | long            | 200             |\n|                 | of the          |                 |                 |\n|                 | response.       |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| response_conten | The MIME type   | long            | application/jso |\n| t_type          | associated with |                 | n               |\n|                 | the entity of   |                 |                 |\n|                 | the response if |                 |                 |\n|                 | available or    |                 |                 |\n|                 | specified       |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| referer         | For HTTP        | string          | /index.html     |\n|                 | requests,       |                 |                 |\n|                 | identifies the  |                 |                 |\n|                 | address of the  |                 |                 |\n|                 | webpage         |                 |                 |\n|                 | (i.e. the URI   |                 |                 |\n|                 | or IRI) that    |                 |                 |\n|                 | linked to the   |                 |                 |\n|                 | resource being  |                 |                 |\n|                 | requested.      |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n| x_forwarded_for | Comma-separated | string          | 192.0.2.60,10.1 |\n|                 | list of IP      |                 | 2.9.23          |\n|                 | addresses, the  |                 |                 |\n|                 | left-most being |                 |                 |\n|                 | the original    |                 |                 |\n|                 | client,         |                 |                 |\n|                 | followed by     |                 |                 |\n|                 | proxy server    |                 |                 |\n|                 | addresses that  |                 |                 |\n|                 | forwarded the   |                 |                 |\n|                 | client request. |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+\n\n[1] What is correlation-id/request id\n-------------------------------------\n\nhttps://stackoverflow.com/questions/25433258/what-is-the-x-request-id-http-header\n\n[2] Python logging propagate\n----------------------------\nhttps://docs.python.org/3/library/logging.html#logging.Logger.propagate\nhttps://docs.python.org/2/library/logging.html#logging.Logger.propagate\n\n[3] more on flask use_reloader\n------------------------------\n\nhttp://flask.pocoo.org/docs/0.12/errorhandling/#working-with-debuggers",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/thangbn/json-logging",
    "keywords": "json",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "json-logging",
    "platform": "any",
    "project_url": "https://pypi.org/project/json-logging/",
    "release_url": "https://pypi.org/project/json-logging/0.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "JSON Python Logging",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f60faad8ab5790755414a57570f74c64",
          "sha256": "070bfe98192104fe6aa8b50f771e1486ca22baae7b31bbce606aae926f43fe82"
        },
        "downloads": -1,
        "filename": "json_logging-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f60faad8ab5790755414a57570f74c64",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 28291,
        "upload_time": "2017-12-24T07:57:56",
        "url": "https://files.pythonhosted.org/packages/a6/78/06dbebadc8d77afd62404c2b1070928c70853b4cb4ebce40da6680f753f3/json_logging-0.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "89663f4ad5b21a831fc32f3110b59e43",
          "sha256": "61422c4fbd9ae056c3e00403bee8ae22f39378abce62b750b9dc3040d10836ab"
        },
        "downloads": -1,
        "filename": "json-logging-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "89663f4ad5b21a831fc32f3110b59e43",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30807,
        "upload_time": "2017-12-24T08:12:11",
        "url": "https://files.pythonhosted.org/packages/24/09/39a3447bd77a3c9055fd01e79cf7abed3ae1c8de5d049395324fb84eb520/json-logging-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f60faad8ab5790755414a57570f74c64",
        "sha256": "070bfe98192104fe6aa8b50f771e1486ca22baae7b31bbce606aae926f43fe82"
      },
      "downloads": -1,
      "filename": "json_logging-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f60faad8ab5790755414a57570f74c64",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 28291,
      "upload_time": "2017-12-24T07:57:56",
      "url": "https://files.pythonhosted.org/packages/a6/78/06dbebadc8d77afd62404c2b1070928c70853b4cb4ebce40da6680f753f3/json_logging-0.0.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "89663f4ad5b21a831fc32f3110b59e43",
        "sha256": "61422c4fbd9ae056c3e00403bee8ae22f39378abce62b750b9dc3040d10836ab"
      },
      "downloads": -1,
      "filename": "json-logging-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "89663f4ad5b21a831fc32f3110b59e43",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 30807,
      "upload_time": "2017-12-24T08:12:11",
      "url": "https://files.pythonhosted.org/packages/24/09/39a3447bd77a3c9055fd01e79cf7abed3ae1c8de5d049395324fb84eb520/json-logging-0.0.1.tar.gz"
    }
  ]
}