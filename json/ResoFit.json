{
  "info": {
    "author": "Yuxuan Zhang, Jean C. Bilheux",
    "author_email": "zhangy6@ornl.gov, bilheuxjm@ornl.gov",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "|pypi version| |Build Status| |codecov| |Documentation Status|\n\nResoFit\n=======\n\nAbstract\n~~~~~~~~\n\nHere we present an open-source Python library which focuses on\nsimulating the neutron resonance signal for neutron imaging\nmeasurements. In this package, by defining the sample information such\nas density, thickness in the neutron path and isotopic ratios of the\nelemental composition of the material, one can plot of expected\nresonance peaks for a selected neutron energy range. Various sample\ntypes such as layers of single elements (Ag, Co, etc. in solid form),\nchemical compounds (UO\\ :sub:`2`, Gd\\ :sub:`2`\\O\\ :sub:`3`, etc.), or even multiple layers of both\ntypes. Major plotting features include display of the\ntransmission/attenuation in wavelength/energy/time scale, show/hide\nelemental and isotopic contributions in the total resonance signal.\n\nThe energy dependent cross-section data used in this library are from\n`National Nuclear Data Center <http://www.nndc.bnl.gov/>`__, a published\nonline database. `Evaluated Nuclear Data File\n(ENDF/B) <http://www.nndc.bnl.gov/exfor/endf00.jsp>`__ [1] is currently\nsupported and more evaluated databases will be added in future.\n\nPython packages used are: SciPy [2], NumPy [3], Matplotlib [4], Pandas\n[5] and Periodictable [6].\n\nStatement of need\n~~~~~~~~~~~~~~~~~\n\nNeutron imaging is a powerful tool to characterize material\nnon-destructively. And based on the unique resonance features, it is\nfeasible to identify elements and/or isotopes which resonance with\nincident neutrons. However, a dedicated tool for resonance imaging is\nmissing, and **ResoFit** we presented here could fill this gap.\n\nInstallation instructions\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nInstall **ResoFit** by typing the following command in Terminal:\n\n``pip install ResoFit``\n\nor by typing the following command under downloaded directory in\nTerminal:\n\n``python setup.py``\n\nExample usage\n~~~~~~~~~~~~~\n\nExample of usage is presented in ``tutorial.ipynb`` under ``/notebooks``\ndirectory.\n\nCalculation algorithm\n~~~~~~~~~~~~~~~~~~~~~\n\nThe neutron transmission calculation algorithm of neutron transmission\n*T*\\ (*E*), is base on Beer-lambert law [7]-[9]:\n\n.. image:: documentation/source/_static/Beer_lambert_law_1.png\n    :width: 504px\n    :align: center\n    :height: 80px\n    :alt: Beer-lambert law 1\n\nN\\ :sub:`i` : number of atoms per unit volume of element *i*,\n\nd\\ :sub:`i` : effective thickness along the neutron path of element\u00a0*i*,\n\n\u03c3\\ :sub:`ij` (E) : energy-dependent neutron total cross-section for the isotope *j* of element *i*,\n\nA\\ :sub:`ij` : abundance for the isotope *j* of element *i*.\n\nFor solid materials the number of atoms per unit volume can be\ncalculated from:\n\n.. image:: documentation/source/_static/Beer_lambert_law_2.png\n    :width: 244px\n    :align: center\n    :height: 80px\n    :alt: Beer-lambert law 2\n\nN\\ :sub:`A` : Avogadro\u2019s number,\n\nC\\ :sub:`i` : molar concentration of element\u00a0*i*,\n\n\u03c1\\ :sub:`i` : density of the element *i*,\n\nm\\ :sub:`ij` : atomic mass values for the isotope *j* of element *i*.\n\nAcknowledgements\n~~~~~~~~~~~~~~~~\n\nThis work is sponsored by the Laboratory Directed Research and\nDevelopment Program of Oak Ridge National Laboratory, managed by\nUT-Battelle LLC, for DOE. Part of this research is supported by the U.S.\nDepartment of Energy, Office of Science, Office of Basic Energy\nSciences, User Facilities under contract number DE-AC05-00OR22725.\n\nReferences\n~~~~~~~~~~\n\n[1] M. B. Chadwick et al., \u201cENDF/B-VII.1 Nuclear Data for Science and\nTechnology: Cross Sections, Covariances, Fission Product Yields and\nDecay Data,\u201d Nuclear Data Sheets, vol. 112, no. 12, pp. 2887\u20132996, Dec.\n2011.\n\n[2] T. E. Oliphant, \u201cSciPy: Open Source Scientific Tools for Python,\u201d\nComputing in Science and Engineering, vol. 9. pp. 10\u201320, 2007.\n\n[3] S. van der Walt et al., \u201cThe NumPy Array: A Structure for Efficient\nNumerical Computation,\u201d Computing in Science & Engineering, vol. 13, no.\n2, pp. 22\u201330, Mar. 2011.\n\n[4] J. D. Hunter, \u201cMatplotlib: A 2D Graphics Environment,\u201d Computing in\nScience & Engineering, vol. 9, no. 3, pp. 90\u201395, May 2007.\n\n[5] W. McKinney, \u201cData Structures for Statistical Computing in Python,\u201d\nin Proceedings of the 9th Python in Science Conference, 2010, pp. 51\u201356.\n\n[6] P. A. Kienzle, \u201cPeriodictable V1.5.0,\u201d Journal of Open Source\nSoftware, Jan. 2017.\n\n[7] M. Ooi et al., \u201cNeutron Resonance Imaging of a Au-In-Cd Alloy for\nthe JSNS,\u201d Physics Procedia, vol. 43, pp. 337\u2013342, 2013.\n\n[8] A. S. Tremsin et al., \u201cNon-Contact Measurement of Partial Gas\nPressure and Distribution of Elemental Composition Using Energy-Resolved\nNeutron Imaging,\u201d AIP Advances, vol. 7, no. 1, p. 15315, 2017.\n\n[9] Y. Zhang et al., \u201cThe Nature of Electrochemical Delithiation of\nLi-Mg Alloy Electrodes: Neutron Computed Tomography and Analytical\nModeling of Li Diffusion and Delithiation Phenomenon,\u201d Journal of the\nElectrochemical Society, vol. 164, no. 2, pp. A28\u2013A38, 2017.\n\n.. |pypi version| image:: https://img.shields.io/pypi/v/resofit.svg\n   :target: https://pypi.python.org/pypi/ResoFit\n.. |Build Status| image:: https://travis-ci.org/ornlneutronimaging/ResoFit.svg?branch=master\n   :target: https://travis-ci.org/ornlneutronimaging/ResoFit\n.. |codecov| image:: https://codecov.io/gh/ornlneutronimaging/ResoFit/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/ornlneutronimaging/ResoFit\n.. |Documentation Status| image:: https://readthedocs.org/projects/resofit/badge/?version=latest\n   :target: http://resofit.readthedocs.io/en/latest/?badge=latest\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ornlneutronimaging/ResoFit.git",
    "keywords": "neutron,resonance,fitting,imaging",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ResoFit",
    "platform": "",
    "project_url": "https://pypi.org/project/ResoFit/",
    "release_url": "https://pypi.org/project/ResoFit/0.0.1/",
    "requires_dist": [
      "scipy",
      "pprint",
      "peakutils",
      "pandas",
      "numpy",
      "lmfit",
      "ImagingReso"
    ],
    "requires_python": "",
    "summary": "Fitting tool for neutron resonance imaging",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "eb672637264cd208326d1f6799dbab06",
          "sha256": "6381ffbb5b339d2abbf254161904a275549765f4e9f9e3d8aea47b5c080508b9"
        },
        "downloads": 0,
        "filename": "ResoFit-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb672637264cd208326d1f6799dbab06",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 17502,
        "upload_time": "2017-09-20T13:57:19",
        "url": "https://files.pythonhosted.org/packages/2e/5e/5a8c8a051ba7623b3d9a8b8317873888c05858a011d2281f228f51fb6e71/ResoFit-0.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6212cf3b981abdcbcba7b76bd3711e76",
          "sha256": "12d3c1feff48188bcb2ea8041ebd87c1405144f8492bc2b669832c4336379297"
        },
        "downloads": 0,
        "filename": "ResoFit-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6212cf3b981abdcbcba7b76bd3711e76",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11967,
        "upload_time": "2017-09-20T13:57:21",
        "url": "https://files.pythonhosted.org/packages/c9/88/591128c48c1eba604ec259694724d2b078d905a334c4607994aa40efa1b7/ResoFit-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "eb672637264cd208326d1f6799dbab06",
        "sha256": "6381ffbb5b339d2abbf254161904a275549765f4e9f9e3d8aea47b5c080508b9"
      },
      "downloads": 0,
      "filename": "ResoFit-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eb672637264cd208326d1f6799dbab06",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 17502,
      "upload_time": "2017-09-20T13:57:19",
      "url": "https://files.pythonhosted.org/packages/2e/5e/5a8c8a051ba7623b3d9a8b8317873888c05858a011d2281f228f51fb6e71/ResoFit-0.0.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "6212cf3b981abdcbcba7b76bd3711e76",
        "sha256": "12d3c1feff48188bcb2ea8041ebd87c1405144f8492bc2b669832c4336379297"
      },
      "downloads": 0,
      "filename": "ResoFit-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6212cf3b981abdcbcba7b76bd3711e76",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 11967,
      "upload_time": "2017-09-20T13:57:21",
      "url": "https://files.pythonhosted.org/packages/c9/88/591128c48c1eba604ec259694724d2b078d905a334c4607994aa40efa1b7/ResoFit-0.0.1.tar.gz"
    }
  ]
}