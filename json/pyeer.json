{
  "info": {
    "author": "Manuel Aguado Mart\u00ednez",
    "author_email": "manuelaguadomtz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "=====\nPyEER\n=====\n\n**PyEER** is a python package for biometric systems performance evaluation. Includes ROC, DET, FNMR and FMR curves\nplotting, scores distribution plotting, EER and operating points estimation. It can be also used to evaluate binary\nclassification systems.\n\nThe program provided within this package receive two files holding genuine match scores and impostor match scores [1].\nGenuine match scores are obtained by matching feature sets of the same class (same person), while impostor matching\nscores are obtained by matching feature sets of different classes (different persons). Using this scores the program \nplots ROC, DET, FNMR(t), FMR(t) curves and estimates Equal Error Rate Value and operating points for each system. EER values are reported as specified in [2]\n\nUtilities provided within this package can also be used to develop other scripts by importing the module **pyeer**.\n\n**PyEER** has been developed with the idea of providing researchers and the scientific community in general with a \ntool to correctly evaluate and report the performance of their systems.\n\nInstalling\n==========\n\n.. code:: sh\n\n    pip install pyeer\n\nInput file formats\n==================\nGenuine match scores must be provided in a file with one score per line. Each line can have any number of columns but\nthe scores must be in the last column. For impostor match scores the program can handle two different formats:\n\nHistogram format\n----------------\n\nAlthough the vast majority of the systems report scores normalized between 0 and 1, there are some that report\ninteger scores [3]. When computing a lot of impostor scores, millions of them, it can be computationally \nexpensive to read all those scores from a file. Therefore, in those cases may be worth it to use this format.\n\n**Restrictions:** Only integer scores are supported\n\n**File format:** Each line contains the number of scores equals to the index of the line in the file\n(starting from zero). For example, given a file:\n\n| 123\n| 12\n| 212\n| 321\n| ...\n| ...\n| ...\n|\n\nThe above file example indicates that there are 123 scores equals to 0, 12 scores equals to 1, 212 scores\nequals to 2, 321 scores equals to 3 and so on.\n\n**Recommendations:** Use this format for very large experiments (millions of scores).\n\n**Note:** Only impostor scores file can mimic this format.\n\nNon-Histogram format\n--------------------\n\n**Restrictions:** None. Integer and float scores are both supported.\n\n**File format:** All the scores one by line, just as the genuine match scores file format\n\nUsage\n=====\n\n**console cmd:** geteerinf\n\nExamples:\n---------\n\n\n**To print the script help**\n\n.. code:: sh\n\n    geteerinf -h\n\n**One experiment (Non-histogram format):**\n\n.. code:: sh\n\n    geteerinf -p \"example_files/non_hist/\" -i \"exp3_false.txt\" -g \"exp3_true.txt\" -e \"exp3\"\n\n**More than one experiment (Non-histogram format):**\n\n.. code:: sh\n\n    geteerinf -p \"example_files/non_hist/\" -i \"exp1_false.txt,exp2_false.txt\" -g \"exp1_true.txt,exp2_true.txt\" -e \"exp1,exp2\"\n\n**One experiment (Histogram format):**\n\n.. code:: sh\n\n    geteerinf -p \"example_files/hist/\" -i \"exp1_false.txt\" -g \"exp1_true.txt\" -e \"exp1\" -ht\n\nFor all the above examples a CSV file will be generated in the directory where the program was invoked. The file contains\na summary with the values of EER, operating points and area under the ROC curve for each experiment. To specify the \ndirectory where to saved it, you can use the \"-sp\" option.\n\n**Note:** To run the above examples you can download the score files from the project site\non Gitlab or extract them from inside the package installation\n\nContributing\n============\n\nDo you find **PyEER** useful? You can collaborate with us:\n\n`Link Gitlab <https://gitlab.com/manuelaguadomtz/pyeer>`_\n\nReferences\n==========\n\n[1] D. Maltoni et al., Handbook of Fingerprint Recognition, Springer-Verlag London Limited 2009\n\n[2] Maio D., Maltoni D., Cappelli R., Wayman J.L. and Jain A.K., \u201cFVC2000: Fingerprint verification\ncompetition,\u201d IEEE Transactions on Pattern Analysis Machine Intelligence, vol. 24, no. 3, pp. 402\u2013412, 2002\n\n[3] Hernandez-Palancar, J., Munoz-Briseno, A., & Gago-Alonso, A. (2014). Using a\ntriangular matching approach for latent fingerprint and palmprint identifica-\ntion. International Journal of Pattern Recognition and Artificial Intelligence, 28, 1460004.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://www.researchgate.net/profile/Manuel_Aguado_Martinez2",
    "keywords": "Equal Error Rate,False Match Rate,ROC,DET,False Non-Match Rate,EER,FMR,FNMR,ZeroFNMR,ZeroFMR,Biometric Systems",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyeer",
    "platform": "",
    "project_url": "https://pypi.org/project/pyeer/",
    "release_url": "https://pypi.org/project/pyeer/0.3.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A python package for biometric and binary classification systems performance evaluation",
    "version": "0.3.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c57e1bddd1badbfc575b8d7f4891aad9",
          "sha256": "d9f3a1936648eba8e945d82fff52eb0ab9cf7e3f57a84725efab37df1f4e2ba3"
        },
        "downloads": -1,
        "filename": "pyeer-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c57e1bddd1badbfc575b8d7f4891aad9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 78013,
        "upload_time": "2017-10-23T15:54:41",
        "url": "https://files.pythonhosted.org/packages/06/f9/743eb032366086a873f473e94b97dfffbf9cc5633cf1c84ce39f5d1aec37/pyeer-0.1.0.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f163d30a39abf979ebf3d4ca4391477f",
          "sha256": "be73f9999eca65ef2e2335c2c42fa4c96d81968ac2e276a39dd4457935972e84"
        },
        "downloads": -1,
        "filename": "pyeer-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f163d30a39abf979ebf3d4ca4391477f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 78370,
        "upload_time": "2017-10-23T19:19:30",
        "url": "https://files.pythonhosted.org/packages/87/4c/5f4571a7c1f41bf5eeb223516a50605ce30d18c87a849180a883986c3828/pyeer-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ade705c2775f31454fbd8920e258651d",
          "sha256": "4fc943fd38c90e4db4f67a0533cea9a68441d5db490285ad3c0c6d57096d666a"
        },
        "downloads": -1,
        "filename": "pyeer-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ade705c2775f31454fbd8920e258651d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 78536,
        "upload_time": "2017-11-01T13:33:11",
        "url": "https://files.pythonhosted.org/packages/a3/7b/625697677745559ead944bc50a09eeebd359bd3203b2ccc6798633c59239/pyeer-0.2.1.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "49a111215911346a04bd58663371892d",
          "sha256": "ca17d1003f8ac765f63ff32d32f716c58ebeeddb26c9d05344cdbfe1e2e68e0b"
        },
        "downloads": -1,
        "filename": "pyeer-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "49a111215911346a04bd58663371892d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 89952,
        "upload_time": "2017-11-07T16:43:33",
        "url": "https://files.pythonhosted.org/packages/62/76/13dfdeaae964946ba95f2bbbe17c9f82e14d19f00059334889db4f92da87/pyeer-0.3.0.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "81ab28c48d4c90cadc76d1b12847da59",
          "sha256": "dcf93606cba204e4b1d4d5ed7383ce08e8e0536de2e5deff7f66f81e077a15af"
        },
        "downloads": -1,
        "filename": "pyeer-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "81ab28c48d4c90cadc76d1b12847da59",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 89974,
        "upload_time": "2017-11-07T17:08:07",
        "url": "https://files.pythonhosted.org/packages/6e/02/08eb10ac414b3d3307b8dbb43f905310b929f09da48c062a381cfb097b47/pyeer-0.3.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "81ab28c48d4c90cadc76d1b12847da59",
        "sha256": "dcf93606cba204e4b1d4d5ed7383ce08e8e0536de2e5deff7f66f81e077a15af"
      },
      "downloads": -1,
      "filename": "pyeer-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "81ab28c48d4c90cadc76d1b12847da59",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 89974,
      "upload_time": "2017-11-07T17:08:07",
      "url": "https://files.pythonhosted.org/packages/6e/02/08eb10ac414b3d3307b8dbb43f905310b929f09da48c062a381cfb097b47/pyeer-0.3.1.tar.gz"
    }
  ]
}