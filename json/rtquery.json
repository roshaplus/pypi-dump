{
  "info": {
    "author": "Nickolas Fox",
    "author_email": "tarvitz@blacklibrary.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "\nRT Query\n========\n\n.. image:: https://travis-ci.org/tarvitz/rtquery.svg?branch=master\n    :target: https://travis-ci.org/tarvitz/rtquery\n\n.. image:: https://coveralls.io/repos/github/tarvitz/rtquery/badge.svg?branch=master\n  :target: https://coveralls.io/github/tarvitz/rtquery?branch=master\n\n.. image:: https://badge.fury.io/py/rtquery.svg\n    :target: https://badge.fury.io/py/rtquery\n\n.. contents::\n    :local:\n    :depth: 2\n\nAbstract\n--------\nSimplifies query interface for |rt_tracker|_'s rest-api lib |rt_lib|_.\nMain query interface has been take from |django|_ project\n\nRequirements\n------------\n\n- Python 3.4+\n- |rt_lib|_ (it's not dependency itself, but it uses in examples)\n\nUsage\n-----\n\n.. code-block:: python\n\n    import rt\n\n    client = rt.Rt('http://localhost/rt/REST/1.0/',\n                   basic_auth=('user', 'password'))\n    assert client.login()\n    #: rt filtering does not support `in` operation, so interface looks similar\n    #: to django querying, but it sticks to its limits.\n    query = Q(Subject__contains='[improvements]') | Q(Subject__contains='[enhancements]')\n    query &= Q(Queue='development', Status='sprint', Owner='User',\n               Priority__gt=80)\n    result = client.search(Queue=rt.ALL_QUEUES, raw_query=query.resolve())\n    print(result)\n    [{\n        \"id\": \"ticket/471147\",\n        \"Queue\": \"development\",\n        \"Owner\": \"User\",\n        \"Creator\": \"User\",\n        \"Subject\": \"[improvements] Implement Requests Tracker simple querying\",\n        \"Status\": \"sprint\",\n        \"Priority\": \"99\",\n        \"InitialPriority\": \"40\",\n        \"FinalPriority\": \"40\",\n        \"Requestors\": [\n            \"user@example.org.fake\"\n        ],\n        \"Created\": \"Thu Nov 02 19:26:40 2017\",\n        \"Starts\": \"Not set\",\n        \"Started\": \"Thu Nov 02 19:27:12 2017\",\n        \"Due\": \"Not set\",\n        \"Resolved\": \"Not set\",\n        \"Told\": \"Not set\",\n        \"LastUpdated\": \"Thu Nov 09 17:20:33 2017\",\n        \"TimeEstimated\": \"180 minutes\",\n        \"TimeWorked\": \"0\",\n        \"TimeLeft\": \"0\",\n        \"CF.{Tags}\": \"extra\",\n        \"CF.{Code Review}\": \"\",\n        \"CF.{Difficulty}\": \"\"\n    }]\n\n.. references\n\n.. |rt_tracker| replace:: Request Tracker\n.. _rt_tracker: https://bestpractical.com/request-tracker\n.. |rt_lib| replace:: RT Library\n.. _rt_lib: https://github.com/CZ-NIC/python-rt\n.. |django| replace:: Django Framework\n.. _django: https://www.djangoproject.com/\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/tarvitz/rtquery",
    "keywords": "request tracker query lib",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rtquery",
    "platform": "any",
    "project_url": "https://pypi.org/project/rtquery/",
    "release_url": "https://pypi.org/project/rtquery/0.9.1/",
    "requires_dist": [],
    "requires_python": ">=3",
    "summary": "Request Tracker Querying Library",
    "version": "0.9.1"
  },
  "releases": {
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0941e445518f69a67925ec625da89c94",
          "sha256": "6161e4cf4b17d6a0e27a869a7609f32fddb27a965517dfd5438801985c6c38c2"
        },
        "downloads": -1,
        "filename": "rtquery-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0941e445518f69a67925ec625da89c94",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 9199,
        "upload_time": "2017-11-13T20:03:00",
        "url": "https://files.pythonhosted.org/packages/70/c4/88f9efd7b839c2ae73cd7996fd94410ba92f6b493b256aeb51c740108ba2/rtquery-0.9.1-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "0941e445518f69a67925ec625da89c94",
        "sha256": "6161e4cf4b17d6a0e27a869a7609f32fddb27a965517dfd5438801985c6c38c2"
      },
      "downloads": -1,
      "filename": "rtquery-0.9.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0941e445518f69a67925ec625da89c94",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 9199,
      "upload_time": "2017-11-13T20:03:00",
      "url": "https://files.pythonhosted.org/packages/70/c4/88f9efd7b839c2ae73cd7996fd94410ba92f6b493b256aeb51c740108ba2/rtquery-0.9.1-py3-none-any.whl"
    }
  ]
}