{
  "info": {
    "author": "Oskar Maier",
    "author_email": "oskar.maier@googlemail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Healthcare Industry",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: C++",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Scientific/Engineering :: Image Recognition",
      "Topic :: Scientific/Engineering :: Medical Science Apps."
    ],
    "description": "=========\n  MedPy\n=========\n\n**MedPy** is a library and script collection for medical image processing in Python, providing basic functionalities for **reading**, **writing** and **manipulating** large images of **arbitrary dimensionality**.\nIts main contributions are n-dimensional versions of popular **image filters**, a collection of **image feature extractors**, ready to be used with `scikit-learn <http://scikit-learn.org/>`_, and an exhaustive n-dimensional **graph-cut** package.\n\n**Troubles?** Feel free to write me with any questions / comments / suggestions: oskar.maier@googlemail.com\n\n**Found a bug?** https://github.com/loli/medpy/issues\n\n**Too many depoendencies?** Try our docker images https://registry.hub.docker.com/u/loli/medpy/ (release) and https://registry.hub.docker.com/u/loli/medpy-autobuilds/ (development)\n\n\nInstalling MedPy the fast way (Ubuntu and derivatives)\n======================================================\nFirst::\n\n    sudo apt-get install python-pip python-numpy python-scipy libboost-python-dev build-essential\n    \nThen::\n\n    sudo pip install nibabel pydicom medpy\n \nDone. More installation instructions can be found in the `documentation <http://pythonhosted.org/MedPy/>`_.\n\nUsing Python 3?\n---------------\nTry::\n\n  sudo pip install nibabel pydicom\n  sudo pip install https://github.com/user/repository/archive/Release_0.3.0p3.zip\n\n\nGetting started with the library\n================================\nIf you already have one, whose format is support (see in the `documentation <http://pythonhosted.org/MedPy/>`_.), then good.\nOtherwise navigate to http://www.nitrc.org/projects/inia19, click on the *Download Now* button, unpack and look for the *inia19-t1.nii* file.\nOpen it in your favorite medical image viewer (I personally fancy `itksnap <http://www.itksnap.org>`_) and beware a the INIA19 primate brain atlas.\n\nLoad the image\n\n>>> from medpy.io import load\n>>> image_data, image_header = load('/path/to/image.xxx')\n\nThe data is stored in a numpy ndarray, the header is an object containing additional metadata, such as the voxel-spacing.\nNo lets take a look at some of the image metadata\n\n>>> image_data.shape\n(168, 206, 128)\n>>> image_data.dtype\ndtype(float32)\n\nAnd the header gives us\n\n>>> from medpy.io import header\n>>> header.get_pixel_spacing(image_header)\n(0.5, 0.5, 0.5)\n>>> header.get_offset(image_header)\n(0.0, 0.0, 0.0)\n\nNow lets apply one of the **MedPy** filter, more exactly the Otsu thresholding, which can be used for automatic background removal\n\n>>> from medpy.filter import otsu\n>>> threshold = otsu(image_data)\n>>> output_data = image_data > threshold\n\nAnd save the binary image, marking the foreground\n\n>>> from medpy.io import save\n>>> save(output_data, '/path/to/otsu.xxx', image_header)\n\nAfter taking a look at it, you might want to dive deeper with the `documentation <http://pythonhosted.org/MedPy/>`_.\n\n\nGetting started with the scripts\n================================\nGet an image as described above. Now::\n\n\tmedpy_info.py /path/to/image.xxx\n\t\nwill give you some details about the image. With::\n\n\tmedpy_diff.py /path/to/image1.xxx /path/to/image2.xxx\n\nyou can compare two image. And::\n\n\tmedpy_anisotropic_diffusion.py /path/to/image.xxx /path/to/output.xxx\n\t\nlets you apply an edge preserving anisotropic diffusion filter. For a list of all scripts, see the `documentation <http://pythonhosted.org/MedPy/>`_.\n\n\nRead/write support for medical image formats\n============================================\nMedPy builds on 3rd party modules to load and save images. Currently\nimplemented are the usages of\n\n* NiBabel\n* PyDicom\n* ITK\n\n, each of which supports the following formats.\n\n**NiBabel** enables support for:\n\n* NifTi - Neuroimaging Informatics Technology Initiative (.nii, nii.gz)\n* Analyze (plain, SPM99, SPM2) (.hdr/.img, .img.gz)\n* and some others more (http://nipy.sourceforge.net/nibabel/)\n\n**PyDicom** enables support for:\n\n* Dicom - Digital Imaging and Communications in Medicine (.dcm, .dicom)\n\n**ITK** enables support for:\n\n* NifTi - Neuroimaging Informatics Technology Initiative (.nii, nii.gz)\n* Analyze (plain, SPM99, SPM2) (.hdr/.img, .img.gz)\n* Dicom - Digital Imaging and Communications in Medicine (.dcm, .dicom)\n* Itk/Vtk MetaImage (.mhd, .mha/.raw)\n* Nrrd - Nearly Raw Raster Data (.nhdr, .nrrd)\n* and many others more (http://www.cmake.org/Wiki/ITK/File_Formats)\n\nFor some functionalities, which are collected in the *medpy.itkvtk* package **ITK** is also required.\n\n\nCode\n====\nYou can find our sources and single-click downloads:\n\n* `Main repository <https://github.com/loli/medpy>`_ on Github.\n* API documentation for all releases and current development tree can be created using `Sphinx <http://www.sphinx-doc.org>`_\n* Download as a zip file the `current trunk <https://github.com/loli/medpy/archive/master.zip>`_.\n\n\nTutorials and API Documentation\n===============================\nhttp://pythonhosted.org/MedPy \n\nRequirements\n============\nMedPy comes with a number of dependencies and optional functionality that can require you to install additional packages.\n\nDependencies\n------------\n\n* `scipy <http://www.scipy.org/>`_ >= 0.9.0\n* `numpy <http://www.numpy.org/>`_ >= 1.6.1\n* `nibabel <http://nipy.sourceforge.net/nibabel//>`_ >= 1.3.0 (enables support for NIfTI and Analyze image formats)\n* `pydicom <http://code.google.com/p/pydicom/>`_ >= 0.9.7 (enables support for DICOM image format)\n\nOptional functionalities\n------------------------\n* compilation with `max-flow/min-cut` (enables the GraphCut functionalities)\n* `itk <http://www.itk.org/>`_ >= 3.16.0 with `WrapITK <http://code.google.com/p/wrapitk/>`_ (enables support for a large number of image formats)\n\n\nLicense\n=======\nMedPy is distributed under the GNU General Public License, a version of which can be found in the LICENSE.txt file.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/loli/medpy",
    "keywords": "medical image processing dicom itk insight tool kit MRI CT US graph cut max-flow min-cut",
    "license": "LICENSE.txt",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MedPy",
    "platform": "",
    "project_url": "https://pypi.org/project/MedPy/",
    "release_url": "https://pypi.org/project/MedPy/0.3.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Medical image processing in Python",
    "version": "0.3.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "591a3fab0a75989efa38b83c7239d228",
          "sha256": "8d40cd11816a637fb12e5eb9cfbfcde7c549d3f98ab2030426fcd177b59be6d7"
        },
        "downloads": 3659,
        "filename": "MedPy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "591a3fab0a75989efa38b83c7239d228",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 123922,
        "upload_time": "2013-04-26T11:19:49",
        "url": "https://files.pythonhosted.org/packages/3c/58/2e9ff990bd45e9bd0ca0a0b074431f8f22a17ead90c9e14c12715edc757f/MedPy-0.1.0.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8590a14c2346a1a7b85b951a54c61469",
          "sha256": "512f6383d0568944f87c2f64891d8cabb444982395f016a6fcaa274484dbab33"
        },
        "downloads": 1702,
        "filename": "MedPy-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8590a14c2346a1a7b85b951a54c61469",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 151538,
        "upload_time": "2014-08-19T16:14:34",
        "url": "https://files.pythonhosted.org/packages/96/9f/d3601eb915080c5071628113bada52d2f358d0c7fb518dc92ad426aa3f53/MedPy-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e96d3e05359e4fed034c3cebcb9e074d",
          "sha256": "3a5abb6c20b6e12d0bbe9e671e827444396955ff6be20a0c28978e4fd568e6cd"
        },
        "downloads": 1783,
        "filename": "MedPy-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e96d3e05359e4fed034c3cebcb9e074d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 158147,
        "upload_time": "2014-08-19T16:37:08",
        "url": "https://files.pythonhosted.org/packages/46/9e/376b954e024f930f0e707ac114d91c3118c354c4a547db2846ff5870e650/MedPy-0.2.1.tar.gz"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ee90bd5f7bf10ce956ce66bbda679a06",
          "sha256": "99786e370440dd3d09b3b01181cffb06eb4509a66d7448197995f5dc84205728"
        },
        "downloads": 3576,
        "filename": "MedPy-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ee90bd5f7bf10ce956ce66bbda679a06",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 167088,
        "upload_time": "2014-09-19T14:59:06",
        "url": "https://files.pythonhosted.org/packages/5f/a1/68212f8c27610458796fd886a58f67715773071dfaa77dd4ccf4527ded42/MedPy-0.2.2.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c4cb984dc3478396a2e9989687432951",
          "sha256": "299d1be28df0b9c35e856177ada7555746d5b94a0f7af34dc3c3dd3671252a6a"
        },
        "downloads": 0,
        "filename": "MedPy-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c4cb984dc3478396a2e9989687432951",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 163480,
        "upload_time": "2017-09-20T16:18:56",
        "url": "https://files.pythonhosted.org/packages/23/62/b01a85e766a7d04cf1c93b6bc94aca1530c9fe038154d1a6095fcacc1be8/MedPy-0.3.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c4cb984dc3478396a2e9989687432951",
        "sha256": "299d1be28df0b9c35e856177ada7555746d5b94a0f7af34dc3c3dd3671252a6a"
      },
      "downloads": 0,
      "filename": "MedPy-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c4cb984dc3478396a2e9989687432951",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 163480,
      "upload_time": "2017-09-20T16:18:56",
      "url": "https://files.pythonhosted.org/packages/23/62/b01a85e766a7d04cf1c93b6bc94aca1530c9fe038154d1a6095fcacc1be8/MedPy-0.3.0.tar.gz"
    }
  ]
}