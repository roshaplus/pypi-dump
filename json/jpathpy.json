{
  "info": {
    "author": "Vladimir Saltykov",
    "author_email": "vowatchka@mail.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "Short about jpathpy\n===================\nPackage \"jpathpy\" contains all needed for selection JSON members from JSON by using JPath query.\n\nTerminology\n===========\nJPath query\n-----------\nEach of JPath queries based on JPath syntax.\n\nJPath query can to contain one or more JPath expressions unioned by operator \"|\". For example::\n\n\t$.\"store\".\"book\" | $.\"store\".\"bicycle\"\n\nIf JPath query contains only one JPath expresion, operator \"|\" don't used. Each of JPath expressions in JPath query **must starts** with root reference ($).\n\nJPath expression\n----------------\nJPath expression is some expression that defines which and how JSON members must be selected from JSON. All follow expressions are correct::\n\n\t$\n\t$.\"store\".\"book\"\n\t$.\"store\"..\"book\"\n\t$..\"book\"\n\t.\"book\"[*]\n\t..\"price\".isflt()\n\t.val()\n\nEach of JPath expressions can to contain one or more filtering expression, which enclose between square parentheses.\n\nFiltering Expression\n--------------------\nFiltering expression is expresion that can to contain different groups of arithmetic, comparation and logic operations. Available data types of each operations:\n\n\t* String\n\t* Integer\n\t* Float number\n\t* Null\n\t* Boolean\n\t* All data types which returns JPath functions or JPath expresions\n\t\nFor example, all of this filtering expressions is correct::\n\n\t1\n\t1.5\n\tTrue\n\t\"Hello world!\"\n\tnull\n\t..\"price\"[0].val()\n\t$.\"store\".\"book\"[*][0]\n\t1 + ..\"price\"[0].val() > 5 and $.\"book\".\"author\".contains(\"Orwell\")\n\t!$.\"store\".\"book\"\n\t\nArithmetic operators\n^^^^^^^^^^^^^^^^^^^^^\n\t* multiple (\\*)\n\t* divide (/)\n\t* modulation (%)\n\t* addition (+)\n\t* subtraction (-)\n\t\nComparation operators\n^^^^^^^^^^^^^^^^^^^^^^\n\t* equals (=)\n\t* not equals (!=)\n\t* less than (<)\n\t* less than or equal to (<=)\n\t* greater than (>)\n\t* greater than or equal to (>=)\n\t\nLogic operators\n^^^^^^^^^^^^^^^^\n\t* union (or)\n\t* intersection (and)\n\t\nOrder applying operators\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\t* \\*, /, %\n\t* +, -\n\t* =, !=, >, >=, <, <=\n\t* and, or\n\t\nJPath functions\n===============\nIt's all JPath functions\n\n+----------------------------------+\n| Function                         |\n+==================================+\n| *toint()*                        |\n+----------------------------------+\n| *toflt()*                        |\n+----------------------------------+\n| *tostr()*                        |\n+----------------------------------+\n| *val()*                          |\n+----------------------------------+\n| *length()*                       |\n+----------------------------------+\n| *isnum()*                        |\n+----------------------------------+\n| *isint()*                        |\n+----------------------------------+\n| *isflt()*                        |\n+----------------------------------+\n| *isbool()*                       |\n+----------------------------------+\n| *isstr()*                        |\n+----------------------------------+\n| *isnull()*                       |\n+----------------------------------+\n| *isarr()*                        |\n+----------------------------------+\n| *isobj()*                        |\n+----------------------------------+\n| *rnd(digits)*                    |\n+----------------------------------+\n| *strlen()*                       |\n+----------------------------------+\n| *substr(startIdx, length)*       |\n+----------------------------------+\n| *replace(template, replacement)* |\n+----------------------------------+\n| *isdigit()*                      |\n+----------------------------------+\n| *isalpha()*                      |\n+----------------------------------+\n| *isalnum()*                      |\n+----------------------------------+\n| *islower()*                      |\n+----------------------------------+\n| *isupper()*                      |\n+----------------------------------+\n| *isspace()*                      |\n+----------------------------------+\n| *istitle()*                      |\n+----------------------------------+\n| *lower()*                        |\n+----------------------------------+\n| *upper()*                        |\n+----------------------------------+\n| *startswith(template)*           |\n+----------------------------------+\n| *endswith(template)*             |\n+----------------------------------+\n| *capitalize()*                   |\n+----------------------------------+\n| *ltrim()*                        |\n+----------------------------------+\n| *rtrim()*                        |\n+----------------------------------+\n| *trim()*                         |\n+----------------------------------+\n| *title()*                        |\n+----------------------------------+\n| *contains(template)*             |\n+----------------------------------+\n| *normalize()*                    |\n+----------------------------------+\n| *count()*                        |\n+----------------------------------+\n| *all()*                          |\n+----------------------------------+\n| *any()*                          |\n+----------------------------------+",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "jpathpy python jpath json syntax member members",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jpathpy",
    "platform": "",
    "project_url": "https://pypi.org/project/jpathpy/",
    "release_url": "https://pypi.org/project/jpathpy/1.1.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Package for selection JSON members from JSON by using JPath query (changing docstrings)",
    "version": "1.1.2"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0792452d13b60ac9d6ead477ec6fa359",
          "sha256": "3d684a47f1f76928ec5a456c9d3719a8de2ae661cdbab014ec4d7a0dea98cd72"
        },
        "downloads": -1,
        "filename": "jpathpy-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0792452d13b60ac9d6ead477ec6fa359",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14104,
        "upload_time": "2017-12-05T12:52:55",
        "url": "https://files.pythonhosted.org/packages/74/34/9b21185ff9f3ba11136c07bd06f39884afee6a9b03d7fa562050e8450f02/jpathpy-1.0.0.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2a1b877542be39f78fb4f8496970900a",
          "sha256": "eb900070da789e58f13a3b7237dff2860be23b0aef3a8e14425cce4ad18e4ef9"
        },
        "downloads": -1,
        "filename": "jpathpy-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2a1b877542be39f78fb4f8496970900a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14438,
        "upload_time": "2017-12-06T14:00:32",
        "url": "https://files.pythonhosted.org/packages/2e/85/f166f7ce633c21de653da00ac5ff2a2cbf258b81c50d9d64b9f9a5728b65/jpathpy-1.1.0.tar.gz"
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "23de087f6660c21f1a0a71ef18476ec8",
          "sha256": "bfbbf9e0943f7368e79fd637903b21dde41a9cb0c518b0e2938cc783621dd866"
        },
        "downloads": -1,
        "filename": "jpathpy-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "23de087f6660c21f1a0a71ef18476ec8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14434,
        "upload_time": "2017-12-06T14:31:43",
        "url": "https://files.pythonhosted.org/packages/1f/56/6fc788e60f184076a92eca3122a6a8e27790b0ce7c32e9c45b9da9f3f91a/jpathpy-1.1.1.tar.gz"
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6d2c8060af21b32be1164f9317a36414",
          "sha256": "234f8b0566d8709abde29dd1f95b91427712b8c3883b09276bf0ad01ce8dcd72"
        },
        "downloads": -1,
        "filename": "jpathpy-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6d2c8060af21b32be1164f9317a36414",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14451,
        "upload_time": "2017-12-12T07:08:38",
        "url": "https://files.pythonhosted.org/packages/80/c8/f2ef9f15244a07468b4eec5acab6b2ce5d4b2c24da363e28f7e0de7830e3/jpathpy-1.1.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "6d2c8060af21b32be1164f9317a36414",
        "sha256": "234f8b0566d8709abde29dd1f95b91427712b8c3883b09276bf0ad01ce8dcd72"
      },
      "downloads": -1,
      "filename": "jpathpy-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6d2c8060af21b32be1164f9317a36414",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 14451,
      "upload_time": "2017-12-12T07:08:38",
      "url": "https://files.pythonhosted.org/packages/80/c8/f2ef9f15244a07468b4eec5acab6b2ce5d4b2c24da363e28f7e0de7830e3/jpathpy-1.1.2.tar.gz"
    }
  ]
}