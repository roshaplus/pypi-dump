{
  "info": {
    "author": "Robert A. McLeod",
    "author_email": "robbmcleod@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: BSD License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Multimedia :: Graphics :: 3D Modeling",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# PyFastNoiseSIMD\n\nPyFastNoiseSIMD is a wrapper around Jordan Peck's synthetic noise library [FastNoise SIMD](https://github.com/Auburns/FastNoise-SIMD) which has been accelerated with SIMD\ninstruction sets.  \n\nI have further accelerated it by multi-threading the generator.  The number of \nthreads used is set by (Defaults to the total number of virtual cores found on the \nsystem).\n\n    pyfastnoisesimd.setNumWorkers( N_workers )\n\nThere is generator function exposed `pyfastnoisesimd.generate` which works as \nfollows:\n\n    import pyfastnoisesimd as fns\n    N = [512,512,512]\n    seed = np.random.randint(2**31)\n    fns.setNumWorkers( fns.cpu_info['count'] )\n    cellular = fns.generate( size=N, start=[0,0,0], \n              seed=seed, freq=0.005, noiseType='Cellular', axisScales=[N[-1]/N[0],1.0,1.0], \n              fracType='FBM', fracOctaves=4, \n              fracLacunarity=3.0, fracGain=0.5, \n              cellReturnType='Distance', cellDistFunc='Euclidean',\n              cellNoiseLookup='Simplex', cellNoiseLookupFreq=0.2, \n              cellDist2Ind=[0,1], cellJitter=0.5,\n              perturbType='Gradient', perturbAmp=1.0, perturbFreq=0.7, perturbOctaves=5,\n              perturbLacunarity=2.0, perturbGain=0.5, perturbNormLen=1.0 )\n\nThe return is a `numpy.ndarray`.  A more extensive example is found in \n`example/test_fns.py`.\n\n###Benckmark single-threaded (1 core, i5-3570K @ 3.5 GHz)\n    array of shape [4,1024,1024]\n    Computed 4194304 voxels cellular noise in 0.2898170114122789 s\n        69.09776006037686 ns/voxel\n    Computed 4194304 voxels Perlin noise in 0.1920228191367772 s\n        45.78180769366675 ns/voxel\n\n###Benchmark multi-threaded (4 cores, i5-3570K @ 3.5 GHz)\n    array of shape [4,1024,1024]\n    Computed 4194304 voxels cellular noise in 0.079239338013734 s\n        18.89213037818289 ns/voxel\n    Computed 4194304 voxels Perlin noise in 0.0502796223675005 s\n        11.987596122622609 ns/voxel\n\nValid strings for `noiseType` and `cellNoiseLookup`:\n    [ 'Value', 'ValueFractal', 'Perlin', 'PerlinFractal', 'Simplex', 'SimplexFractal', 'WhiteNoise', 'Cellular', \n        'Cubic', 'CubicFractal' ]\n\nValid strings for `fractType`:\n    ['FBM', 'Billow', 'RigidMulti']\n\nValid strings for `perturbType`:\n    ['Gradient','GradientFractal', 'Normalise', 'Gradient_Normalise', 'GradientFractal_Normalise']\n\nValid strings for `cellReturnType`:\n    ['CellValue', 'Distance', 'Distance2', 'Distance2Add', 'Distance2Sub', 'Distance2Mul', 'Distance2Div', 'NoiseLookup', \n        'Distance2Cave' ]\n\nValid strings for `callDistFunc`:\n    ['Euclidean', 'Manhattan', 'Natural']\n\nIf you want a more direct interface with the underlying library you may use the\n`pyfastsimd._ext` module, which is a function-for-function mapping to the C++ \ncode.\n\nNote that `generate` releases the Python GIL.  In the future I will add a wrapper \naround `concurrent.futures` to mutli-thread the noise generation for large-ish \n3D arrays.  \n\n# C-Interface \n\nSee below:\n\n# FastNoise SIMD\nFastNoise SIMD is the SIMD implementation of my noise library [FastNoise](https://github.com/Auburns/FastNoise). It aims to provide faster performance through the use of intrinsic(SIMD) CPU functions. Vectorisation of the code allows noise functions to process data in sets of 4/8/16 increasing performance by 700% in some cases (Simplex).\n\nAfter releasing FastNoise I got in contact with the author of [FastNoise SIMD](https://github.com/jackmott/FastNoise-SIMD) (naming is coincidence) and was inspired to work with SIMD functions myself. Through his code and discussions with him I created my implementation with even more optimisation thanks to the removal of lookup tables. \n\nRuntime detection of highest supported instruction set ensures the fastest possible performance with only 1 compile needed. If no support is found it will fallback to standard types (float/int).\n\n## Features\n\n- Value Noise 3D\n- Perlin Noise 3D\n- Simplex Noise 3D\n- Cubic Noise 3D\n- Multiple fractal options for all of the above\n- White Noise 3D\n- Cellular Noise 3D\n- Perturb input coordinates in 3D space\n- Integrated up-sampling\n- Easy to use 3D cave noise\n\nCredit to [CubicNoise](https://github.com/jobtalle/CubicNoise) for the cubic noise algorithm\n\n## Supported Instruction Sets\n- ARM NEON\n- AVX512\n- AVX2 - FMA3\n- SSE4.1\n- SSE2\n\n## Tested Compilers\n- MSVC v120/v140\n- Intel 16.0\n- GCC 4.7 Linux\n- Clang MacOSX\n\n## Wiki\n[Docs](https://github.com/Auburns/FastNoiseSIMD/wiki)\n\n# FastNoise SIMD Preview\n\nI have written a compact testing application for all the features included in FastNoiseSIMD with a visual representation. I use this for development purposes and testing noise settings used in terrain generation. The fastest supported instruction set is also reported.\n\nDownload links can be found in the [Releases Section](https://github.com/Auburns/FastNoiseSIMD/releases).\n\n![Simplex Fractal](http://i.imgur.com/45JkT5j.png)\n\n# Performance Comparisons\nUsing default noise settings on FastNoise SIMD and matching those settings across the other libraries where possible.\n\nTimings below are x1000 ns to generate 32x32x32 points of noise on a single thread.\n\n- CPU: Intel Xeon Skylake @ 2.0Ghz\n- Compiler: Intel 17.0 x64\n\n| Noise Type  | AVX512 | AVX2 | SSE4.1 | SSE2 | FastNoise | LibNoise |\n|-------------|--------|------|--------|------|-----------|----------|\n| White Noise | 7      | 9    | 16     | 29   | 141       |          |\n| Value       | 92     | 152  | 324    | 436  | 642       |          |\n| Perlin      | 147    | 324  | 592    | 795  | 1002      | 1368     |\n| Simplex     | 129    | 294  | 548    | 604  | 1194      |          |\n| Cellular    | 851    | 1283 | 2679   | 2959 | 2979      | 58125    |\n| Cubic       | 615    | 952  | 1970   | 3516 | 2979      |          |\n\nComparision of fractals and sampling performance [here](https://github.com/Auburns/FastNoiseSIMD/wiki/In-depth-SIMD-level).\n\n# Examples\n### Cellular Noise\n![Cellular Noise](http://i.imgur.com/RshUkoe.png)\n\n![Cellular Noise](http://i.imgur.com/PjPYBXu.png)\n\n![Cellular Noise](http://i.imgur.com/hyKjIuH.png)\n\n[Cave noise example](https://www.youtube.com/watch?v=Df4Hidvq11M)\n\n### Fractal Noise\n![Simplex Fractal Billow](http://i.imgur.com/gURJtpc.png)\n\n![Perlin Fractal Billow](http://i.imgur.com/IcjbpYz.png)\n\n### Value Noise\n![Value Noise](http://i.imgur.com/Ss22zRs.png)\n\n### White Noise\n![White Noise](http://i.imgur.com/wcTlyek.png)\n\n### Perturb\n![Perturbed Cellular Noise](http://i.imgur.com/xBKGo1E.png)\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/robbmcleod/pyfastnoisesimd",
    "keywords": "",
    "license": "https://opensource.org/licenses/BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyfastnoisesimd",
    "platform": "any",
    "project_url": "https://pypi.org/project/pyfastnoisesimd/",
    "release_url": "https://pypi.org/project/pyfastnoisesimd/0.1.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "FastNoiseSIMD",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "43c669c7678c28eb4dda02a14a233154",
          "sha256": "444ce58acf607ec33970778850ae910f5441b86d117ec31299bf4180ce94eb22"
        },
        "downloads": 0,
        "filename": "pyfastnoisesimd-0.1.0.dev0-cp36-cp36m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "43c669c7678c28eb4dda02a14a233154",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 125756,
        "upload_time": "2017-08-20T02:32:24",
        "url": "https://files.pythonhosted.org/packages/23/06/df99e5a158931c68c6756beffa37e09684b5eae41d657cb1f287dab443d7/pyfastnoisesimd-0.1.0.dev0-cp36-cp36m-win_amd64.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4a4f91770422df8d065505735721ab85",
          "sha256": "408d40d6dc4cd386c34c4619f76e3ce1c74fc82a7eef0bc177202cfe55ebffee"
        },
        "downloads": 0,
        "filename": "pyfastnoisesimd-0.1.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "4a4f91770422df8d065505735721ab85",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 37722,
        "upload_time": "2017-08-20T02:32:16",
        "url": "https://files.pythonhosted.org/packages/6d/b5/fa01f63bf3004074fd8aa00e15552930fdd4b09cf9c0d01ef98e8031dc1b/pyfastnoisesimd-0.1.0.dev0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dd257aedeeefa3eb1f142cfbb82f72f0",
          "sha256": "14bbe063150bf6844ac233e9432c916a895d3678da5d7397d9c04ecf3ed3d1a7"
        },
        "downloads": 0,
        "filename": "pyfastnoisesimd-0.1.1-cp36-cp36m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "dd257aedeeefa3eb1f142cfbb82f72f0",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 130720,
        "upload_time": "2017-08-20T02:36:40",
        "url": "https://files.pythonhosted.org/packages/5e/db/fe9c48df4df5921fa4ca2e2537ac3eecdaa4a2bf9533bc312ccb759cc237/pyfastnoisesimd-0.1.1-cp36-cp36m-win_amd64.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a3f79b986a11bdda25c77b86ea8907b5",
          "sha256": "fc4438fe3caba26a9f35dcc15488c7c218e462ef3fe1c98c3458fbee5bf662f7"
        },
        "downloads": 0,
        "filename": "pyfastnoisesimd-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a3f79b986a11bdda25c77b86ea8907b5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42795,
        "upload_time": "2017-08-20T02:36:32",
        "url": "https://files.pythonhosted.org/packages/74/1e/d65759653e866c325f8efdf7942d264c4ea3d0393d656ca706ba0919878b/pyfastnoisesimd-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "dd257aedeeefa3eb1f142cfbb82f72f0",
        "sha256": "14bbe063150bf6844ac233e9432c916a895d3678da5d7397d9c04ecf3ed3d1a7"
      },
      "downloads": 0,
      "filename": "pyfastnoisesimd-0.1.1-cp36-cp36m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "dd257aedeeefa3eb1f142cfbb82f72f0",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 130720,
      "upload_time": "2017-08-20T02:36:40",
      "url": "https://files.pythonhosted.org/packages/5e/db/fe9c48df4df5921fa4ca2e2537ac3eecdaa4a2bf9533bc312ccb759cc237/pyfastnoisesimd-0.1.1-cp36-cp36m-win_amd64.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "a3f79b986a11bdda25c77b86ea8907b5",
        "sha256": "fc4438fe3caba26a9f35dcc15488c7c218e462ef3fe1c98c3458fbee5bf662f7"
      },
      "downloads": 0,
      "filename": "pyfastnoisesimd-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a3f79b986a11bdda25c77b86ea8907b5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 42795,
      "upload_time": "2017-08-20T02:36:32",
      "url": "https://files.pythonhosted.org/packages/74/1e/d65759653e866c325f8efdf7942d264c4ea3d0393d656ca706ba0919878b/pyfastnoisesimd-0.1.1.tar.gz"
    }
  ]
}