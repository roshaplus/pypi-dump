{
  "info": {
    "author": "Antonio Cuni",
    "author_email": "anto.cuni@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Utilities"
    ],
    "description": ".. -*- restructuredtext -*-\n\npdb++, a drop-in replacement for pdb\n====================================\n\nWhat is it?\n------------\n\nThis module is an extension of the pdb_ module of the standard library.  It is\nmeant to be fully compatible with its predecessor, yet it introduces a number\nof new features to make your debugging experience as nice as possible.\n\n.. image:: http://bitbucket.org/antocuni/pdb/raw/0c86c93cee41/screenshot.png\n\n``pdb++`` features include:\n\n  - colorful TAB completion of Python expressions (through fancycompleter_)\n\n  - optional syntax highlighting of code listings (through pygments_)\n\n  - `sticky mode`_\n\n  - several new commands to be used from the interactive ``(Pdb++)`` prompt\n\n  - `smart command parsing`_ (hint: have you ever typed ``r`` or ``c`` at the\n    prompt to print the value of some variable?)\n\n  - additional convenience functions in the ``pdb`` module, to be used from\n    your program\n\n``pdb++`` is meant to be a drop-in replacement for ``pdb``. If you find some\nunexpected behavior, please report it as a bug.\n\n.. _pdb: http://docs.python.org/library/pdb.html\n.. _fancycompleter: http://bitbucket.org/antocuni/fancycompleter\n.. _pygments: http://pygments.org/\n\nInstallation\n-------------\n\nSince ``pdb++`` is not a valid identifier for ``pip`` and ``easy_install``,\nyou have to install ``pdbpp`` instead::\n\n    $ pip install pdbpp\n\n    -- OR --\n\n    $ easy_install pdbpp\n\nAlternatively, you can just put ``pdb.py`` somewhere inside your\n``PYTHONPATH``.\n\nNote that the module is called ``pdb.py`` so that ``pdb++`` will automatically\nbe used in all places that do ``import pdb`` (e.g., ``py.test --pdb`` will\ngive you a ``pdb++`` prompt).  The old ``pdb`` module is still available by\ndoing e.g. ``import pdb; pdb.pdb.set_trace()``\n\nNew interactive commands\n------------------------\n\nThe following are new commands that you can use from the interative\n``(Pdb++)`` prompt.\n\n.. _`sticky mode`:\n\n``sticky [start end]``\n  Toggle **sticky mode**.  When in this mode, every time the current position\n  changes, the screen is repainted and the whole function shown.  Thus, when\n  doing step-by-step execution you can easily follow the flow of the\n  execution.  If ``start`` and ``end`` are given, sticky mode is enabled and\n  only lines within that range (extremes included) will be displayed.\n\n\n``longlist`` (``ll``)\n  List source code for the current function.  Different from the normal pdb\n  ``list`` command, ``longlist`` displays the whole function.  The current\n  line is marked with ``->``.  In case of post-mortem debugging, the line\n  which actually raised the exception is marked with ``>>``.  If the\n  ``highlight`` `config option`_ is set and pygments_ is installed, the source\n  code is highlighted.\n\n\n``interact``\n  Start an interative interpreter whose global namespace contains all the\n  names found in the current scope.\n\n\n``track EXPRESSION``\n  Display a graph showing which objects are the value of the expression refers\n  to and are referred by.  This command requires the ``pypy`` source code to\n  be importable.\n\n``display EXPRESSION``\n  Add an expression to the **display list**; expressions in this list are\n  evaluated at each step, and printed every time its value changes.\n  **WARNING**: since these expressions are evaluated multiple times, make sure\n  not to put expressions with side-effects in the display list.\n\n``undisplay EXPRESSION``:\n  Remove ``EXPRESSION`` from the display list.\n\n``source EXPRESSION``\n  Show the source code for the given function/method/class.\n\n``edit EXPRESSION``\n  Open the editor in the right position to edit the given\n  function/method/class.  The editor used is specified in a `config\n  option`_.\n\n``hf_unhide``, ``hf_hide``, ``hf_list``\n  Some frames might be marked as \"hidden\" by e.g. using the `@pdb.hideframe`_\n  function decorator.  By default, hidden frames are not shown in the stack\n  trace, and cannot be reached using ``up`` and ``down``.  You can use\n  ``hf_unhide`` to tell pdb to ignore the hidden status (i.e., to treat hidden\n  frames as normal ones), and ``hf_hide`` to hide them again.  ``hf_list``\n  prints a list of hidden frames.\n\n\nSmart command parsing\n----------------------\n\nBy default, pdb tries hard to interpret what you enter at the command prompt\nas one of its builtin commands.  However, this is inconvenient if you want to\njust print the value of a local variable which happens to have the same name\nas one of the commands. E.g.::\n\n    (Pdb) list\n      1\n      2     def fn():\n      3         c = 42\n      4         import pdb;pdb.set_trace()\n      5  ->     return c\n    (Pdb) c\n\nIn the example above, instead of printing 42 pdb interprets the input as the\ncommand ``continue``, and then you loose your prompt.  It's even worse than\nthat, because it happens even if you type e.g. ``c.__class__``.\n\npdb++ fixes this unfriendly (from the author's point of view, of course :-))\nbehavior by always prefering variable in scope, if it exists.  If you really\nwant to execute the corresponding command, you can prefix it with ``!!``.\nThus, the example above becomes::\n\n    (Pdb++) list\n      1\n      2     def fn():\n      3         c = 42\n      4         import pdb;pdb.set_trace()\n      5  ->     return c\n    (Pdb++) c\n    42\n    (Pdb++) !!c\n\nNote that the \"smart\" behavior takes place only when there is ambiguity, i.e.\nif there exists a variable with the same name as a command: in all other\ncases, everything works as usual.\n\nAdditional functions in the ``pdb`` module\n------------------------------------------\n\nThe ``pdb`` module that comes with pdb++ includes all the functions and\nclasses that are in the module from the standard library.  If you find any\ndifference, please report it as a bug.\n\nIn addition, there are some new convenience functions that are unique to\npdb++.\n\n``pdb.xpm()``\n  eXtended Post Mortem: it is equivalent to\n  ``pdb.post_mortem(sys.exc_info()[2])``.  If used inside an ``except``\n  clause, it will start a post-mortem pdb prompt from the line that raised the\n  exception being caught.\n\n``pdb.disable()``\n  Disable ``pdb.set_trace()``: any subsequent call to it will be ignored.\n\n``pdb.enable()``\n  Re-enable ``pdb.set_trace()``, in case it was disabled by ``pdb.disable()``.\n\n.. _`@pdb.hideframe`:\n\n``@pdb.hideframe``\n  A function decorator that tells pdb++ to hide the frame corresponding to the\n  function.  Hidden frames do not show up when using interactive commands such\n  as ``up``, ``down`` or ``where``, unless ``hf_unhide`` is invoked.\n\n``@pdb.break_on_setattr(attrname, condition=always)``\n\n  class decorator: break the execution of program every time the\n  attribute ``attrname`` is set on any instance of the class. ``condition`` is\n  a callable that takes the target object of the ``setattr`` and the actual value;\n  by default, it breaks every time the attribute is set. E.g.::\n\n      @break_on_setattr('bar')\n      class Foo(object):\n          pass\n      f = Foo()\n      f.bar = 42    # the program breaks here\n\n  If can be used even after the class has already been created, e.g. if we\n  want to break when some attribute of a particular object is set::\n\n      class Foo(object):\n          pass\n      a = Foo()\n      b = Foo()\n\n      def break_if_a(obj, value):\n          return obj is a\n\n      break_on_setattr('bar', condition=break_if_a)(Foo)\n      b.bar = 10   # no break\n      a.bar = 42   # the program breaks here\n\n\nConfiguration and customization\n-------------------------------\n\n.. _`config option`:\n\nTo customize pdb++, you can put a file named ``.pdbrc.py`` in your home\ndirectory.  The file must contain a class named ``Config`` inheriting from\n``pdb.DefaultConfig`` and override the desired values.\n\nThe following is a list of the options you can customize, together with their\ndefault value:\n\n``prompt = '(Pdb++) '``\n  The prompt to show when in interactive mode.\n\n``highlight = True``\n  Highlight line numbers and the current line when showing the ``longlist`` of\n  a function or when in **sticky mode**.\n\n``encoding = 'utf-8'``\n  File encoding. Useful when there are international characters in your string\n  literals or comments.\n\n``sticky_by_default = False``\n  Determine whether pdb++ starts in sticky mode or not.\n\n``line_number_color = Color.turquoise``\n  The color to use for line numbers.\n\n``filename_color = Color.yellow``\n  The color to use for file names when printing the stack entries.\n\n``current_line_color = 44``\n  The background color to use to highlight the current line; the background\n  color is set by using the ANSI escape sequence ``^[Xm`` where ``^`` is the\n  ESC character and ``X`` is the background color. 44 corresponds to \"blue\".\n\n``use_pygments = True``\n  If pygments_ is installed and ``highlight == True``, apply syntax highlight\n  to the source code when showing the ``longlist`` of a function or when in\n  **sticky mode**.\n\n``bg = 'dark'``\n  Passed directly to the ``pygments.formatters.TerminalFormatter`` constructor.\n  Selects the color scheme to use, depending on the background color of your\n  terminal. If you have a light background color, try to set it to\n  ``'light'``.\n\n``colorscheme = None``\n  Passed directly to the ``pygments.formatters.TerminalFormatter`` constructor.\n  It expects a dictionary that maps token types to (lightbg, darkbg) color names or\n  ``None`` (default: ``None`` = use builtin colorscheme).\n\n``editor = '${EDITOR:-vi}'``\n  The command to invoke when using the ``edit`` command. By default, it uses\n  ``$EDITOR`` if set, else ``vi``.  The command must support the standard\n  notation ``COMMAND +n filename`` to open filename at line ``n``. ``emacs``\n  and ``vi`` are known to support this.\n\n``truncate_long_lines = True``\n  Truncate lines which exceed the terminal width.\n\n``exec_if_unfocused = None``\n  Shell command to execute when starting the pdb prompt and the terminal\n  window is not focused.  Useful to e.g. play a sound to alert the user that\n  the execution of the program stopped. It requires the wmctrl_ module.\n\n``disable_pytest_capturing = True``\n  Old versions of `py.test`_ crash when you execute ``pdb.set_trace()`` in a\n  test, but the standard output is captured (i.e., without the ``-s`` option,\n  which is the default behavior).  When this option is on, the stdout\n  capturing is automatically disabled before showing the interactive prompt.\n\n``def setup(self, pdb): pass``\n  This method is called during the initialization of the ``Pdb`` class. Useful\n  to do complex setup.\n\n\n.. _wmctrl: http://bitbucket.org/antocuni/wmctrl\n.. _`py.test`: http://pytest.org\n\n\nCHANGELOG\n=========\n\nChanges between 0.8.2 and 0.8.3\n===============================\n\n- Make __pdbpp_path_hack work with Python 3\n\thttps://bitbucket.org/antocuni/pdb/pull-requests/41/make-__pdbpp_path_hack-work-with-python-3/diff\n\thttps://bitbucket.org/antocuni/pdb/issues/41/_pdbpp_path_hack-for-wheel-support-doesnt\n\nChanges between 0.8.1 and 0.8.2\n===============================\n\n- fix wheel packaging; see\n\thttps://bitbucket.org/antocuni/pdb/pull-request/38/support-pip-install-and-wheels-natively/diff\n\nChanges between 0.8 and 0.8.1\n=============================\n\n- fix issue 37: Doesn\u2019t install on OS X\n\t- Removed dependency on ``backports.inspect``\n\t- Made dependency on ``funcsigs`` optional.\n\t- (https://bitbucket.org/antocuni/pdb/issue/37/doesn-t-install-on-os-x)\n\t- (https://bitbucket.org/antocuni/pdb/pull-request/35/use-funcsigs-package-instead-of/diff)\n\nChanges between 0.7.2 and 0.8\n=============================\n\n- Python 3 compatibility\n- Optional support for 256 color formatting by setting\n  ``use_terminal256formatter = True`` in ``~/.pdbrc.py``\n  (https://bitbucket.org/antocuni/pdb/pull-request/30)\n- Make ``set_trace()`` in same program remember previous state\n  (https://bitbucket.org/antocuni/pdb/pull-request/33)\n- Append ``?`` and ``??`` to callable to get info a la IPython\n  (https://bitbucket.org/antocuni/pdb/pull-request/25)\n- Don't treat lines like ``r = 5`` or ``c = 6`` as commands\n  (https://bitbucket.org/antocuni/pdb/pull-request/11)\n\n- fix issue 20: support argument-free post mortem\n\nChanges between 0.7.1 and 0.7.2\n===============================\n\n- don't crash with newer versions of ``py.test``\n\nChanges between 0.7 and 0.7.1\n=============================\n\n- The ``pp`` (pretty print) command now uses the actual width of the terminal,\n  instead of hardcoding 80 columns\n\n- py.test and unittest internal frames are hidden by default (type ``help\n  hidden_frames`` for more info)\n\n- don't crash if ``py`` is installed but ``py.test`` is not",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://bitbucket.org/antocuni/pdb",
    "keywords": "pdb debugger tab color completion",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pdbpp",
    "platform": "unix,linux,osx,cygwin,win32",
    "project_url": "https://pypi.org/project/pdbpp/",
    "release_url": "https://pypi.org/project/pdbpp/0.8.3/",
    "requires_python": null,
    "summary": "pdb++, a drop-in replacement for pdb",
    "version": "0.8.3"
  },
  "releases": {
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e47eaf06036f894091b8be6150200d81",
          "sha256": "8b2527c5cd1f9a7f4cf7fb2899277f1b75f3dcbace4a0f5b19047ecc95499f86"
        },
        "downloads": 3131,
        "filename": "pdbpp-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "e47eaf06036f894091b8be6150200d81",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18996,
        "upload_time": "2010-12-10T19:25:56",
        "url": "https://files.pythonhosted.org/packages/2d/58/da9f08acdbdbc19603b4875dfd5d8bbb0530a12fc8a3f91f4db9bc8fbb7a/pdbpp-0.6.tar.gz"
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c8f982f01d42b93294289e6ca78122d8",
          "sha256": "36090be1690ad93c6187eaab6a93473495aa642f8d84abd41a2192a4d40a9f6d"
        },
        "downloads": 2887,
        "filename": "pdbpp-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "c8f982f01d42b93294289e6ca78122d8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17436,
        "upload_time": "2011-04-06T12:23:51",
        "url": "https://files.pythonhosted.org/packages/70/fc/e2d7c69f115cece5fef231f2628d11c618f1fd8e0bc50247500e992f04be/pdbpp-0.7.tar.gz"
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c1811ce6618f12ba6124748637c969e8",
          "sha256": "072383e06ea19eb79f0bdf634c0fb82ac401de3f6eb0bcabe38a2c8972689312"
        },
        "downloads": 2353,
        "filename": "pdbpp-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c1811ce6618f12ba6124748637c969e8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17681,
        "upload_time": "2011-07-12T13:28:15",
        "url": "https://files.pythonhosted.org/packages/c4/24/b046a163f3dd6f1c553ca193e2ccaf2ae0fb6ba005de669b652afe6a4ef1/pdbpp-0.7.1.tar.gz"
      }
    ],
    "0.7.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4a0ae0b820af607b44633d85963d00b0",
          "sha256": "cbe1f64afa5ca324e270f91cd9abb576ddd64520dd2b47376010ea9962af6be7"
        },
        "downloads": 43367,
        "filename": "pdbpp-0.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4a0ae0b820af607b44633d85963d00b0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17698,
        "upload_time": "2011-07-13T15:05:25",
        "url": "https://files.pythonhosted.org/packages/6f/2d/b48975ce8deaf6a3d69a98fdf24494efddb657665c740d809b9888147986/pdbpp-0.7.2.tar.gz"
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "92e1b8c947d8a8b9b0a9493aa4d81f63",
          "sha256": "83cc9cd1f81b91a40955a7e563aa7bf0fcf72ba29e0a3c7bdeca0a5b10c0349a"
        },
        "downloads": 2010,
        "filename": "pdbpp-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "92e1b8c947d8a8b9b0a9493aa4d81f63",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17182,
        "upload_time": "2015-02-26T22:41:25",
        "url": "https://files.pythonhosted.org/packages/e1/7d/ad860531eac925df95ecac6e73deccc56d02ba6fe1ee767762adf5cfec33/pdbpp-0.8.tar.gz"
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "92da6d78941c6556a6c98a11925e5651",
          "sha256": "de60034ae5a68d6d46b72b0ec4aaa591356d749330a3f6e4a8c25eb06aa03b03"
        },
        "downloads": 6607,
        "filename": "pdbpp-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "92da6d78941c6556a6c98a11925e5651",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17386,
        "upload_time": "2015-03-06T23:15:05",
        "url": "https://files.pythonhosted.org/packages/80/ff/80269e9ad1650fceda235d97ae500dab02cf6c3856db29c6e53f544ef81a/pdbpp-0.8.1.tar.gz"
      }
    ],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bb1c6f083644209922a1bc0c9c5ef9cb",
          "sha256": "41af587099303b21f0853c28eaee8e942c87242bc58808b28a3e031621310813"
        },
        "downloads": 12822,
        "filename": "pdbpp-0.8.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "bb1c6f083644209922a1bc0c9c5ef9cb",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 22711,
        "upload_time": "2015-03-08T17:26:47",
        "url": "https://files.pythonhosted.org/packages/cb/f4/9dcd046f8b71f6f934f956b8d0d474f036e2610716b9b2104853dd27f9fb/pdbpp-0.8.2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d1a70820b485c62d1172ac46b8839cf3",
          "sha256": "4925c5851084698f095c8b079ceb320af40afc9ca8435f903400b7b0794ec9ef"
        },
        "downloads": 2899,
        "filename": "pdbpp-0.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d1a70820b485c62d1172ac46b8839cf3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40616,
        "upload_time": "2015-03-08T17:25:57",
        "url": "https://files.pythonhosted.org/packages/10/82/581d75bd78137eff74dc77cbe5195b2ed644729b073ac1500a4d9e26c374/pdbpp-0.8.2.tar.gz"
      }
    ],
    "0.8.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3f427090b16eb6244c98822d54280160",
          "sha256": "c375e602666253f284c78fb77b35ef009fc47fab59ec0403fb3c3ac28e3c3b5a"
        },
        "downloads": 21447,
        "filename": "pdbpp-0.8.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f427090b16eb6244c98822d54280160",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 22963,
        "upload_time": "2015-09-17T20:02:06",
        "url": "https://files.pythonhosted.org/packages/cb/a4/bea35f958c5eaeef88bb032632c2e12fa52d1c6f5873fef4f3a063b9ac05/pdbpp-0.8.3-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c36d32cb9c96c52344d0d85c71afbd7e",
          "sha256": "b5daeaefebc8e940d696757365d3e15e57617936fd4fa93160dd36f1dd584516"
        },
        "downloads": 8216,
        "filename": "pdbpp-0.8.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c36d32cb9c96c52344d0d85c71afbd7e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40925,
        "upload_time": "2015-09-17T20:01:24",
        "url": "https://files.pythonhosted.org/packages/e8/1d/0f0617abc900986a2e011dda532fc1b219d99298643f81ee18c85a91a3cb/pdbpp-0.8.3.tar.gz"
      }
    ],
    "0.8.dev0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a9be9cc623898618b69478a59e71c5f7",
          "sha256": "47d162bcc1ae70cf470b1bc7dca1ac885e341e56f80c1277d2bd80d1e3e8f0e5"
        },
        "downloads": 1025,
        "filename": "pdbpp-0.8.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "a9be9cc623898618b69478a59e71c5f7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16595,
        "upload_time": "2015-02-23T22:00:44",
        "url": "https://files.pythonhosted.org/packages/06/29/3084388951f71c63dff38e7c3bfab9932e705aea4cb99b74a79d6118108d/pdbpp-0.8.dev0.tar.gz"
      }
    ],
    "0.8.dev1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e45691203588888eaf8c7e7974a4f0ba",
          "sha256": "ff0388ab26067900ed80ff895dbf9620fc86fc161a55949b20c2055d42747bc7"
        },
        "downloads": 1097,
        "filename": "pdbpp-0.8.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "e45691203588888eaf8c7e7974a4f0ba",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17181,
        "upload_time": "2015-02-23T22:05:42",
        "url": "https://files.pythonhosted.org/packages/ca/49/787e15b953caa9840179b7101d1a440dafbd6dd06c630c230e32d8aae21c/pdbpp-0.8.dev1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "3f427090b16eb6244c98822d54280160",
        "sha256": "c375e602666253f284c78fb77b35ef009fc47fab59ec0403fb3c3ac28e3c3b5a"
      },
      "downloads": 21447,
      "filename": "pdbpp-0.8.3-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "3f427090b16eb6244c98822d54280160",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "size": 22963,
      "upload_time": "2015-09-17T20:02:06",
      "url": "https://files.pythonhosted.org/packages/cb/a4/bea35f958c5eaeef88bb032632c2e12fa52d1c6f5873fef4f3a063b9ac05/pdbpp-0.8.3-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "c36d32cb9c96c52344d0d85c71afbd7e",
        "sha256": "b5daeaefebc8e940d696757365d3e15e57617936fd4fa93160dd36f1dd584516"
      },
      "downloads": 8216,
      "filename": "pdbpp-0.8.3.tar.gz",
      "has_sig": false,
      "md5_digest": "c36d32cb9c96c52344d0d85c71afbd7e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 40925,
      "upload_time": "2015-09-17T20:01:24",
      "url": "https://files.pythonhosted.org/packages/e8/1d/0f0617abc900986a2e011dda532fc1b219d99298643f81ee18c85a91a3cb/pdbpp-0.8.3.tar.gz"
    }
  ]
}