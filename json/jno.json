{
  "info": {
    "author": "Jedrzej Kosinski",
    "author_email": "kosinkadink1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Embedded Systems"
    ],
    "description": "# jno\nCommand line interface wrapper for Arduino IDE, inspired by ino.\n\n# Installation\nUsing PyPi, the package can be obtained using:\n\t\n\tpip install jno\n\nIf you prefer running the setup.py, then download repo, change working directory and do:\n\n\tmake install\n\n# Initialize\nTo begin using jno, change working directory to your project. Then, perform:\n\n\tjno init\n\nThis will initialize the basic directory structure and create a *jno.jno* file, which stores the local jno settings.\n\nBy default, jno does not know where your Arduino IDE is located - this is represented by EXEC_DIR in the config. There is a local and a global version of *jno.jno* files. The local *jno.jno* file overwrites the global version IF the parameters are not set to NULL or DEFAULT. To set up your EXEC_DIR, find your Arduino folder - say /home/pi/Documents/arduino-1.8.1. Perform:\n\n\tjno setglobal --EXEC_DIR=/home/pi/Documents/arduino-1.8.1\n\t\nOR\n\n\tjno setlocal --EXEC_DIR=/home/pi/Documents/arduino-1.8.1\n\ndepending on what you plan on doing - setglobal means a local .jno with EXEC_DIR set to NULL will use the global EXEC_DIR instead.\n\nOnce EXEC_DIR is set, jno is ready to go. You should change the global and local settings to your liking - the options are documented below.\n\n# Usage\nThe commands supported are:\n\n*jno build [parameters]*: compile the code, verifying that there are no errors\n\n*jno upload [parameters]*: compile + upload the code\n\n*jno serial [parameters]*: start a serial monitor\n\n*jno init*: initialize current working directory with lib/, sketch/, and *jno.jno* if they are not present\n\n*jno listmodels*: list the board models supported by your Arduino IDE\n\n*jno setlocal [setting]*: change setting in local *jno.jno*\n\n*jno setglobal [setting]*: change setting in global *jno.jno*\n\n## Settings (for setlocal and setglobal)\nThese settings are the same as those contained in *jno.jno* files. These settings WILL be saved locally or globally. Note that lower case inputs are equally as valid. Possible parameters are as follows:\n\n*--EXEC_DIR=/some/dir*: directory that contains the arduino executable file. NULL is the default value.\n\n*--EXEC_LIBS=/some/dir/libraries*: directory that Arduino IDE loads libraries from. By DEFAULT, this uses arduino's internal libraries/ directory, but this may be unsafe if your local lib/ contents have the same name as core libraries.\n\n*--BOARD=boardname*: board that code should be compiled for. Possible 'boardname' choices include *uno* and *mega*. For boardname options, use the *listmodels* command.\n\n*--PORT=/some/port*: port of arduino to upload code or start serial communication. On Linux, dmesg is useful in determining this.\n\n*--BAUDRATE=9600*: baudrate used for serial communication. Must be an integer.\n\n*--SKETCH_DIR=/some/dir*: directory of the local jno 'home'. Only mess with this if this *jno.jno* is meant to point to a deeper directory.\n\n## Parameters (for other commands)\nParameters are used only for the current invocation of the command and override local settings - they WILL NOT be saved. Possible settings are:\n\n*-b, --baud=9600*: see --BAUDRATE above. Only affects serial command.\n\n*-p, --port=/some/port*: see --PORT above. Affects the upload and serial commands.\n\n*--board=boardname*: see --BOARD above. Affects the build and upload commands.\n\n# jno Directory Structure\n\n A valid jno directory contains a *lib* directory, a *sketch* directory with a *sketch.ino* inside, and a *jno.jno* file. The *lib* directory should contain any libraries not included in your Arduino IDE. The structure looks like this:\n\n```\nmy_ard_proj\n    .\n    |-- lib         [directory containing dependencies]\n    |\n    |-- sketch\n    |   `-- sketch.ino\n    |\n    `-- jno.jno\n```",
    "docs_url": null,
    "download_url": "https://github.com/kosinkadink/jno/archive/0.2.2.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/kosinkadink/jno",
    "keywords": "arduino interface wrapper",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "jno",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/jno/",
    "release_url": "https://pypi.org/project/jno/0.2.2/",
    "requires_python": null,
    "summary": "Command line interface wrapper for Arduino IDE, inspired by ino",
    "version": "0.2.2"
  },
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "98c405c74142e75aa8546050326ca2fa",
          "sha256": "309e8b4264c25357b8475238052743848acded10560dd263c2ad1eaaa1b8ff4c"
        },
        "downloads": 14,
        "filename": "jno-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "98c405c74142e75aa8546050326ca2fa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6703,
        "upload_time": "2017-03-10T06:55:11",
        "url": "https://files.pythonhosted.org/packages/84/79/51dcba5e1fbf6cf7cfaefbdbbc6299b394397ca50f54098724fbd1a4e588/jno-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d767f5ff309ee6b7b234b0a5601259fc",
          "sha256": "a36c137fdcaec3352195d674b1d69f7def183aa35b9e851ab2e65e2f6be9480c"
        },
        "downloads": 16,
        "filename": "jno-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d767f5ff309ee6b7b234b0a5601259fc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7613,
        "upload_time": "2017-03-10T08:57:48",
        "url": "https://files.pythonhosted.org/packages/bb/a2/cbe428a881993558772502e2de3535569257b7880b36e3a2e3828cf25b5c/jno-0.1.3.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c3b86a44ff174ee351d79d2ebe351c50",
          "sha256": "1cc77b8846e82671d842951483fd154d7fcdfb97fc2e36ade7fce7bbcc869817"
        },
        "downloads": 8,
        "filename": "jno-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c3b86a44ff174ee351d79d2ebe351c50",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8111,
        "upload_time": "2017-03-21T19:15:41",
        "url": "https://files.pythonhosted.org/packages/db/4f/4f7eb6e54dc53e7d6a1f5e9ecbee47c5e2c47705616753afc9651efed6d7/jno-0.2.1.tar.gz"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "90d6d57ba968f540ac20ac7b2b7d9dc6",
          "sha256": "6031634168980a156468c4708b083bc6f93c7cc6ee980891ae6d00f2d56a63d4"
        },
        "downloads": 57,
        "filename": "jno-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "90d6d57ba968f540ac20ac7b2b7d9dc6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8158,
        "upload_time": "2017-04-05T07:19:13",
        "url": "https://files.pythonhosted.org/packages/e7/f9/3e75a3a556522cbdccf02a873df9460f65d53c97c6bbdff9b545985978fa/jno-0.2.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "90d6d57ba968f540ac20ac7b2b7d9dc6",
        "sha256": "6031634168980a156468c4708b083bc6f93c7cc6ee980891ae6d00f2d56a63d4"
      },
      "downloads": 57,
      "filename": "jno-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "90d6d57ba968f540ac20ac7b2b7d9dc6",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8158,
      "upload_time": "2017-04-05T07:19:13",
      "url": "https://files.pythonhosted.org/packages/e7/f9/3e75a3a556522cbdccf02a873df9460f65d53c97c6bbdff9b545985978fa/jno-0.2.2.tar.gz"
    }
  ]
}