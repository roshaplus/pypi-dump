{
  "info": {
    "author": "Clemens Rudert",
    "author_email": "clemens.rudert@bl.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Pyramid",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"
    ],
    "description": "pyramid\\_oereb (\u00d6REB-Server)\n============================\n\n|Build Status|\n\n*pyramid\\_oereb* is an open-source implementation of the server side\npart for the swiss `\"Cadastre of Public-law Restrictions on\nlandownership\"\n(PLR-cadastre) <https://www.cadastre.ch/en/oereb.html>`__.\n\nIt is written in Python and designed as a plugin for the `Pyramid Web\nFramework <http://docs.pylonsproject.org/projects/pyramid/en/latest/>`__.\nThis allows *pyramid\\_oereb* to be included in any Pyramid web\napplication.\n\nInstallation\n------------\n\n**Note:** Installing *pyramid\\_oereb* requires a running Pyramid web\napplication.\n\n1. If not already existent, set up a Pyramid web application.\n2. Install the Python package *pyramid\\_oereb* in the Python environment\n   of your application.\n\n   ::\n\n       pip install pyramid_oereb\n\n3. Include the Pyramid plugin in your application. Edit the\n   application's main method and add the following line:\n\n   .. code:: python\n\n       config.include('pyramid_oereb', route_prefix='oereb')\n\n   It is recommended to define a route prefix like \"oereb\" or something\n   similar (You are free to choose whatever prefix you like).\n4. Add your configuration as described in the following section.\n5. Restart your web server. The PLR webservice should now be available\n   under the specified route prefix.\n\nConfiguration\n-------------\n\nBasic idea\n~~~~~~~~~~\n\nYou are looking at a highly configurable piece of software. To get the\nright understanding of the server it is recommended to read this part\ncarefully.\n\nSince the confederations definition and the specification for the\nextract of OEREB data is really straight we had very narrow margins to\ndevelop the code. Using this pyramid plugin you will get a running\nserver instance which is able to provide the services with output\nsatisfying the specification of the confederation. But to get this\nextract you need to bind the data to this server. And this is basically\nwhat you need to configure.\n\nFor configuration we use the\n`YAML <http://www.yaml.org/spec/1.2/spec.html>`__ system. It is a handy\nway to separate config in a human and machine readable way in text\nfiles.\n\nSo the first goal for configuration is to have such a YAML file. To\npoint out which way you should go please follow this workflow sheet:\n\n.. figure:: doc/images/configuration_workflow.png\n   :alt: Screenshot\n\n   Screenshot\n\nAfter you know now what way you want to go you are probably curious what\nyou add as configuration content. This is simple: Mainly all content\nfrom the\n`pyramid\\_oereb.yaml <https://github.com/camptocamp/pyramid_oereb/blob/master/pyramid_oereb/standard/pyramid_oereb.yml>`__.\n\nIt contains the basic configuration which can be used as a start point.\n\nThe structure\n~~~~~~~~~~~~~\n\nWhen you open the `pyramid\\_oereb.yaml <pyramid_oereb.yml>`__ you see\n\"pyramid\\_oreb\" in the first line. This is the section. This is the\nentry point of the configuration. When ever you copy this config content\nto a own config file, take care that this section needs to be at the\nmost left (without spaces in front). This ensures that it will be\navailable by the oereb application.\n\nFor further information read the comments inside this file attentively.\n\nRunning development version locally and standalone\n--------------------------------------------------\n\nYou can checkout the current master and run *pyramid\\_oereb* locally,\nbut we cannot guarantee a working configuration as it is under\ndevelopment. We recommend to use a linux system but the application is\ntested and may also be used in a windows environment.\n\nRequirements: - git - python - virutalenv - docker - make\n\nAfter installing the listed requirements, clone the repository and enter\nits directory.\n\n::\n\n    git clone https://github.com/camptocamp/pyramid_oereb.git\n    cd pyramid_oereb\n\nYou can set up the virtual environment using ``make install`` and run\nthe unit tests using ``make checks``.\n\nTo start a local server run ``make serve``. It should be available unter\nhttp://localhost:6543/oereb/, e.g. http://localhost:6543/oereb/versions.\nTo stop the server, press ``CTRL + C``.\n\nRunning development version on a up and running already existing pyramid\\_server\n--------------------------------------------------------------------------------\n\nBefore you start whith the following instructions you should think about\ncreating a branch of your applications code to not mess things up.\n\n1.  In the setup.py add \"pyramid\\_oereb\" in the list of requirements\n    (often a python list stored in the variable \"requires\")\n2.  If you are using virtual environment enable it:\n    ``source <path_to_your_venv>/bin/activate``\n3.  run the following command (This will install all new requirements):\n    ``pip install -e .``\n4.  Now you have installed the pyramid oereb package\n5.  In the root folder of your pyramid app (the one where the setup.py\n    is stored too) run the command: ``create_standard_yaml``\n6.  You got a configuration file which contains all standard things (a\n    yaml, and two logo png files). **IMPORTANT:** There are several\n    places where database connections are defined. They all are defined\n    like this:\n    ``db_connection: postgresql://postgres:password@localhost/pyramid_oereb``,\n    you **MUST** adapt this to your database configuration. Note that\n    the database you specify here must exist and it must be able to\n    handle spacial data (postgis,...). **This connections are used later\n    to create/drop standard tables and fill database with standard\n    data.** HINT: Use *find and replace* of your favorite editor and\n    replace all connection definitions. In addition to the database\n    connection you can find a line with the content:\n    ``canton: YOUR_LOGO_HERE!``. Place a png file representing your\n    cantonal logo in this folder and replace 'YOUR\\_LOGO\\_HERE!' with\n    the name of your logo.\n7.  Open the development.ini file and add two lines to the end of the\n    \"[app:main]\" block\n\n    ::\n\n        pyramid_oereb.cfg.file = pyramid_oereb_standard.yml\n        pyramid_oereb.cfg.section = pyramid_oereb\n\n8.  Do the same in the production.ini file\n9.  In the **init** file of your application inside of the main method\n    add this line just before the config.scan() call.\n\n    ::\n\n        config.include('pyramid_oereb', route_prefix='oereb')\n\n10. execute the command in the folder where you created the\n    pyramid\\_oereb.yml to make sure having a clean database for start\n    (this should only influence the pyramid\\_oereb related data):\n\n    ::\n\n        drop_standard_tables -c pyramid_oereb_standard.yml\n\n11. execute the command in the folder where you created the\n    pyramid\\_oereb.yaml:\n\n    ::\n\n        create_standard_tables -c pyramid_oereb_standard.yml\n\n12. execute the command in the folder where you created the\n    pyramid\\_oereb.yaml (this will create a test data set):\n\n    ::\n\n        load_standard_sample_data -c pyramid_oereb_standard.yml\n\n13. Check with a tool of your choise that the structure was created\n    successfully in you desired database. You should find 17 database\n    schemas named (snake\\_case) by their code attribute from the yml\n    file. Plus one schema called \"pyramid\\_oereb\\_main\" containing the\n    app global stuff (addresses, municipalities, etc.). At least these\n    tables need to be filled up with your data with a tool of your\n    choise).\n14. Start your pyramid application (``pserve development.ini``).\n15. Point your browser to: /oereb/extract/embeddable/json/CH113928077734\n\nWINDOWS: Getting a development version running with a clean and basic pyramid app as base\n-----------------------------------------------------------------------------------------\n\n1. Creation of base directory for the project:\n\n   ::\n\n       mkdir oereb\n       cd oereb\n\n2. Prepare it for git:\n\n   ::\n\n       git init\n\n3. Install the virtual environnement (supposed you already have python\n   installed)\n\n   ::\n\n       virtualenv --setuptools --no-site-packages .build/venv\n\n4. Install a basic Pyramid component\\*\n\n(\\* if you are sure about what you do, you may activate venv with\n\n::\n\n    .build\\venv\\Scripts\\activate\n\nto further ommit the path to your venv, but otherwise leave it and enter\nthe complete path for each install command)\n\n::\n\n    .build\\venv\\Scripts\\pip install pyramid==1.7.4\n\n5. get one level up to create the empty project\n\n   ::\n\n       cd ..\n       oereb\\.build\\venv\\Scripts\\pcreate.exe -s alchemy oereb\n\n6. Delete unused files for this project:\n\n   ::\n\n       cd oereb\n       rm [filename]\n\n-  .coveragerc\n-  MANIFEST.in\n-  pytest.ini\n\n7. Maybe create an github project with this base structure and push it\n   but first create a .gitignore file with at least\n\n-  \\*.pyc\n-  /.build as content - other files will follow...\n\n   ::\n\n       git add .gitignore\n       git commit -m \"added .gitignore\"\n\nthen create your git repository and add is as remote to the local\ndirectory:\n\n::\n\n    git remote add upstream https://github.com/youraccount/oereb.git\n\n8.  collect complementary files created on github such as the README.md\n\n    ::\n\n        git fetch upstream\n        git merge upstream/master\n\n9.  Add your local files and push them to the repository to get an clean\n    initial version\n\n    ::\n\n        git add -A\n        git commit -m \"commit message\"\n        git push upstream master\n\n10. On windows there's a problem with the shapely dependencies, so\n    before installing all the other dependencies, one should manually\n    install shapely and psycopg2 wheels:\n\n    ::\n\n        .build\\venv\\Scripts\\pip install wheel [path to psycopg2-2.5.5-cp27-none-win32.whl or newer version]\n        .build\\venv\\Scripts\\pip install wheel [path to Shapely-1.5.13-cp27-none-win32.whl or newer version]\n\n11. Then install the pyramid\\_oereb egg and the dependencies\n\n    ::\n\n        .build\\venv\\Scripts\\pip install pyramid_oereb\n\n    In the setup.py add \"pyramid\\_oereb\" in the list of requirements\n    then run\n\n    ::\n\n        .build\\venv\\Scripts\\pip install -e .\n\n12. Create the standard parameters file by running:\n\n    ::\n\n        .build\\venv\\Scripts\\create_standard_yaml\n\n13. Now to the configuration - you could do a commit and push on git to\n    have a clean project before configuration... :) you want to add\n    \\*.egg-info/ in your .gitignore file first then add the new and\n    changed files, commit\n\n    ::\n\n        git add [files]\n        git commit -m \"clean unconfigured standard project\"\n        git push upstream [branch]\n\nWith this proper instance we start messing around: Create a\npyramid\\_oereb.yml file in the project root folder and copy the content\nof pyramid\\_oereb\\_standard.yml we created before in it and adapt the\nnecessary parameters to your environnement - p.ex db\\_connection and so\non in the development.ini and production.ini at the end of the\n[app:main] block add\n\n::\n\n    pyramid_oereb.cfg.file = pyramid_oereb_standard.yml\n    pyramid_oereb.cfg.section = pyramid_oereb\n\n14. Install all the standard test and db scripts in the project\n\n    ::\n\n        .build\\venv\\Scripts\\python setup.py develop\n\n15. Configure the database settings and install standard tables Make\n    sure (eg using pgAdmin) the configured database exists and has the\n    postgis extensions installed (create extension postgis) Set the db\n    parameters in your pyramid\\_oereb.yml config or use\n    pyramid\\_oereb\\_standard.yml for your test environnement then\n\n    ::\n\n        .build\\venv\\Scripts\\create_standard_tables.exe -c pyramid_oereb_standard.yml\n\n16. Load sample data in the standard db or connect your own PLR database\n    for standard sample data:\n\n    ::\n\n        .build\\venv\\Scripts\\load_standard_sample_data.exe -c pyramid_oereb_standard.yml\n\n17. Don't forget to include the configuration adding\n\n    ::\n\n        config.include('pyramid_oereb', route_prefix='oereb')\n\n    in :raw-latex:`\\oereb`\\_\\_init\\_\\_.py just befor the line\n    config.scan()\n\nFor testing start the local instance with:\n\n::\n\n    .build\\venv\\Scripts\\pserve --reload development.ini\n\n!! ATTENTION, on windows you may have an error message regarding\n'encoding' if that's the case, remove the --reload from the command:\n\n::\n\n    .build\\venv\\Scripts\\pserve development.ini\n\nAnd call a sample extract:\nhttp://localhost:6543/oereb/extract/embeddable/json/CH113928077734 or at\nleast http://localhost:6543/oereb/versions.json\n\nUpdate existing pyramid\\_oereb egg\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n-  Uninstall the existing egg\n\n   ::\n\n       .build\\venv\\Scripts\\pip uninstall pyramid_oereb\n\n-  Install the new version\n\n   ::\n\n       .build\\venv\\Scripts\\pip install pyramid_oereb\n\n   If for some reasons you need the latest version from git (master),\n   use\n\n   ::\n\n       .build\\venv\\Scripts\\pip install git+https://github.com/camptocamp/pyramid_oereb.git@master#egg=pyramid_oereb\n\n   then rebuild the app with\n\n   ::\n\n       .build\\venv\\Scripts\\python setup.py develop\n\nExternal link\n-------------\n\n-  `Documentation <https://camptocamp.github.io/pyramid_oereb/doc/>`__\n\n.. |Build Status| image:: https://travis-ci.com/camptocamp/pyramid_oereb.svg?token=oTUZsPVUPe1BYV5bzANE&branch=master\n   :target: https://travis-ci.com/camptocamp/pyramid_oereb\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/camptocamp/pyramid_oereb",
    "keywords": "pyramid oereb",
    "license": "GNU General Public License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyramid_oereb",
    "platform": "",
    "project_url": "https://pypi.org/project/pyramid_oereb/",
    "release_url": "https://pypi.org/project/pyramid_oereb/1.0.0a2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "pyramid_oereb, extension for pyramid web frame work to provide a basic server part for the oereb project",
    "version": "1.0.0a2"
  },
  "releases": {
    "1.0.0a1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "190470cb61699e0dac6c9a5245e178d8",
          "sha256": "f2772c48011ddf4630330a1c840960ce4510165d23e85267677684f71b392c1e"
        },
        "downloads": 0,
        "filename": "pyramid_oereb-1.0.0a1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "190470cb61699e0dac6c9a5245e178d8",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 2608311,
        "upload_time": "2017-05-08T06:46:22",
        "url": "https://files.pythonhosted.org/packages/44/4c/fb265f57651459edd05d74bed14a0fd9ac1617739ba863c79a9876868419/pyramid_oereb-1.0.0a1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4e161e5f4c83c8ec493487996271c1fc",
          "sha256": "5993d2aa67d9992fc590a2f6eb0e61cfb1133fce975c354222d77b9f5b081d45"
        },
        "downloads": 0,
        "filename": "pyramid_oereb-1.0.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "4e161e5f4c83c8ec493487996271c1fc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 239053,
        "upload_time": "2017-05-08T06:46:13",
        "url": "https://files.pythonhosted.org/packages/31/39/3153b5207983dd7945541cded8655b0daa1dd74f1578bddb0a80e07f87ea/pyramid_oereb-1.0.0a1.tar.gz"
      }
    ],
    "1.0.0a2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3b86eb0b32fc30c60ee52b1cb24b9160",
          "sha256": "95857e410c9baf734749977c1383ebeda47aa30728f854f6808645ea6f614bbe"
        },
        "downloads": 0,
        "filename": "pyramid_oereb-1.0.0a2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b86eb0b32fc30c60ee52b1cb24b9160",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 2757005,
        "upload_time": "2017-06-30T09:50:46",
        "url": "https://files.pythonhosted.org/packages/e5/81/f50bdc4627125732b185df05f1559d6a91417606746c4ad3592b39648787/pyramid_oereb-1.0.0a2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "22406bb7947806cf5c7a0de0f3720811",
          "sha256": "ab185b61bfbf9700968841114bea4fe442a1ee4f631fd70c4e5d4db83d1e87ab"
        },
        "downloads": 0,
        "filename": "pyramid_oereb-1.0.0a2.tar.gz",
        "has_sig": false,
        "md5_digest": "22406bb7947806cf5c7a0de0f3720811",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 282928,
        "upload_time": "2017-06-30T09:50:39",
        "url": "https://files.pythonhosted.org/packages/0f/46/0e58033f42c50aaf304e70b69378bc9bb289d7d8eaacf302f5666cce0c4a/pyramid_oereb-1.0.0a2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "3b86eb0b32fc30c60ee52b1cb24b9160",
        "sha256": "95857e410c9baf734749977c1383ebeda47aa30728f854f6808645ea6f614bbe"
      },
      "downloads": 0,
      "filename": "pyramid_oereb-1.0.0a2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3b86eb0b32fc30c60ee52b1cb24b9160",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "size": 2757005,
      "upload_time": "2017-06-30T09:50:46",
      "url": "https://files.pythonhosted.org/packages/e5/81/f50bdc4627125732b185df05f1559d6a91417606746c4ad3592b39648787/pyramid_oereb-1.0.0a2-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "22406bb7947806cf5c7a0de0f3720811",
        "sha256": "ab185b61bfbf9700968841114bea4fe442a1ee4f631fd70c4e5d4db83d1e87ab"
      },
      "downloads": 0,
      "filename": "pyramid_oereb-1.0.0a2.tar.gz",
      "has_sig": false,
      "md5_digest": "22406bb7947806cf5c7a0de0f3720811",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 282928,
      "upload_time": "2017-06-30T09:50:39",
      "url": "https://files.pythonhosted.org/packages/0f/46/0e58033f42c50aaf304e70b69378bc9bb289d7d8eaacf302f5666cce0c4a/pyramid_oereb-1.0.0a2.tar.gz"
    }
  ]
}