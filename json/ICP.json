{
  "info": {
    "author": "Avinash Kak",
    "author_email": "kak@purdue.edu",
    "bugtrack_url": "",
    "classifiers": [
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Topic :: Scientific/Engineering :: Image Recognition"
    ],
    "description": "**Version 2.0** is a Python 3.x compliant version of the ICP module.  This version should work with both Python 3.x and Python 2.7.\n\n**Version 1.3** is a major rewrite of the ICP module. While the previous\nversions of this module were useful primarily for binary images, the new\nversion should also work well for grayscale and color images.  The new\nmodule also contains improvements to the implementation code for the core\nICP algorithm.  It should be more forgiving should there exist no\ncorrespondents in one image for some of the pixels chosen for ICP\ncalculations in the other image.  Finally, this version gives you two\noptions for applying ICP to grayscale and color images: You can carry out\neither edge-based ICP or corner-pixels based ICP.\n\nAn application scenario would be the registration of an image recorded by a\nUAV-mounted camera flying over a terrain with an image extracted from a GIS\n(Geographical Information System) database.\n\nTypical usage syntax for a color or grayscale image when using edge-based\nICP:\n\n::\n\n        import ICP\n        icp = ICP.ICP(\n                   binary_or_color = \"color\",\n                   corners_or_edges = \"edges\",\n                   auto_select_model_and_data = 1,\n                   calculation_image_size = 200,\n                   max_num_of_pixels_used_for_icp = 300,\n                   pixel_correspondence_dist_threshold = 20,\n                   iterations = 24,\n                   model_image =  \"SydneyOpera.jpg\",\n                   data_image = \"SydneyOpera2.jpg\",\n                 )\n        icp.extract_pixels_from_color_image(\"model\")\n        icp.extract_pixels_from_color_image(\"data\")\n        icp.icp()\n        icp.display_images_used_for_edge_based_icp()\n        icp.display_results_as_movie()\n        icp.cleanup_directory()\n\n\nHere is example syntax for using corner-pixels based ICP:\n\n::\n\n        import ICP\n        icp = ICP.ICP(\n                   binary_or_color = \"color\",\n                   corners_or_edges = \"corners\",\n                   calculation_image_size = 200,\n                   image_polarity = -1,\n                   smoothing_low_medium_or_high = \"medium\",\n                   corner_detection_threshold = 0.2,\n                   pixel_correspondence_dist_threshold = 40,\n                   auto_select_model_and_data = 1,\n                   max_num_of_pixels_used_for_icp = 100,\n                   iterations = 16,\n                   model_image =  \"textured.jpg\",\n                   data_image = \"textured2.jpg\",\n                )\n        icp.extract_pixels_from_color_image(\"model\")\n        icp.extract_pixels_from_color_image(\"data\")\n        icp.icp()\n        icp.display_images_used_for_corner_based_icp()\n        icp.display_results_as_movie()\n        icp.cleanup_directory()\n\nYet another mode for using the module is for registering binary images. The\nExamples directory contains six canned scripts that illustrate the\ndifferent ways of using this module.",
    "docs_url": null,
    "download_url": "https://engineering.purdue.edu/kak/distICP/ICP-2.0.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://engineering.purdue.edu/kak/distICP/ICP-2.0.html",
    "keywords": "image processing,image registration,computer vision",
    "license": "Python Software Foundation License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "ICP",
    "platform": "All platforms",
    "project_url": "https://pypi.org/project/ICP/",
    "release_url": "https://pypi.org/project/ICP/2.0/",
    "requires_python": null,
    "summary": "A Python module for registering a photo with a database image of the same scene",
    "version": "2.0"
  },
  "releases": {
    "1.0": [],
    "1.1": [],
    "1.2": [],
    "1.3": [],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9147dea2d96afd3a0f0f7d48c03e9ab8",
          "sha256": "f8c145994f375513a8ed0e2fab874bafc8846b39e6910fd8466b7a0910ae519b"
        },
        "downloads": 1170,
        "filename": "ICP-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9147dea2d96afd3a0f0f7d48c03e9ab8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3766864,
        "upload_time": "2015-10-27T18:59:08",
        "url": "https://files.pythonhosted.org/packages/e3/b4/6c390096668195d75582e2e7f86b0374738565a73cae003f93205d9e426e/ICP-2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9147dea2d96afd3a0f0f7d48c03e9ab8",
        "sha256": "f8c145994f375513a8ed0e2fab874bafc8846b39e6910fd8466b7a0910ae519b"
      },
      "downloads": 1170,
      "filename": "ICP-2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9147dea2d96afd3a0f0f7d48c03e9ab8",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3766864,
      "upload_time": "2015-10-27T18:59:08",
      "url": "https://files.pythonhosted.org/packages/e3/b4/6c390096668195d75582e2e7f86b0374738565a73cae003f93205d9e426e/ICP-2.0.tar.gz"
    }
  ]
}