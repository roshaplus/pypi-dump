{
  "info": {
    "author": "Windson Yang",
    "author_email": "wiwindson@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "cherry\n=======================\n.. image:: https://api.travis-ci.org/Sunkist-Cherry/cherry.png?branch=master\n    :target: https://travis-ci.org/repositories/Sunkist-Cherry/cherry\n\n.. image:: https://img.shields.io/pypi/v/cherry.svg\n    :target: https://pypi.python.org/pypi/cherry\n\n.. image:: https://img.shields.io/pypi/l/cherry.svg\n    :target: https://pypi.python.org/pypi/cherry\n\n.. image:: https://img.shields.io/pypi/pyversions/cherry.svg\n    :target: https://pypi.python.org/pypi/cherry\n\n\n:Version: 0.1.8\n:Download: https://pypi.python.org/pypi/cherry/\n:Source: https://github.com/Sunkist-Cherry/cherry\n:Support: >=Python3.4\n:Keywords: spam, filter, python, native, bayes\n\n.. _`\u4e2d\u6587\u7248\u672c`:\n\u8fd9\u4e2a\u9879\u76ee\u76ee\u7684\u662f\u4f7f\u7528\u673a\u5668\u5b66\u4e60\uff0f\u4eba\u5de5\u667a\u80fd\u6765\u8fdb\u884c\u6570\u636e\u5206\u7c7b\n\n\u4f8b\u5b501\u4e2d\u7684\u5e94\u7528\u662f\u5224\u522b\u5783\u573e\u5185\u5bb9\uff0c\u73b0\u9636\u6bb5\u7528\u6237\u8f93\u5165\u53e5\u5b50\u4f1a\u5148\u7ecf\u8fc7\u5206\u8bcd\uff0c\u7136\u540e\u901a\u8fc7\u6734\u7d20\u8d1d\u53f6\u65af\u6a21\u578b\u5224\u522b\u6210\u6b63\u5e38\uff0c\u8272\u60c5\uff0c\u8d4c\u535a\uff0c\u653f\u6cbb\u654f\u611f\u56db\u4e2a\u7c7b\u522b\u3002\u73b0\u5728\u6bcf\u4e2a\u7c7b\u522b\u5404\u4f7f\u7528\u4e86100\u4e2a\u8bad\u7ec3\u6570\u636e\uff0c\u8fa8\u522b\u51c6\u786e\u7387\u5927\u7ea6\u4e3a93%\u3002\uff08\u6570\u636e\u5167\u5bb9\u8bf7\u52ff\u5206\u767c\uff0c\u4f20\u9605\uff0c\u51fa\u552e\uff0c\u51fa\u79df\u7ed9\u4ed6\u4eba\uff09\n\n\u7279\u70b9\n----\n- \u5f00\u7bb1\u5373\u7528\uff0c\u5feb\u901f\u4e0a\u624b\n\n  \u5185\u7f6e\u9884\u8bad\u7ec3\u6a21\u578b\u4ee5\u53ca\u6587\u4ef6\u7f13\u5b58\uff0c\u5f00\u7bb1\u5373\u7528\u3002\u540c\u65f6\u4f7f\u7528numpy\u5e93\u505a\u77e9\u9635\u8ba1\u7b97\uff0c\u5224\u65ad\u901f\u5ea6\u975e\u5e38\u5feb\n- \u51c6\u786e\u7387\u9ad8\n\n  \u73b0\u9636\u6bb5\u4f7f\u7528\u4e86400\u4e2a\u8bad\u7ec3\u6570\u636e\uff0c\u51c6\u786e\u7387\u8fbe\u523093.5%\u3002\u4e0b\u8f7d\u540e\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\n\n  .. code-block:: bash\n\n    python -m unittest tests.test_error_rate\n\n  \u5f97\u5230\u51c6\u786e\u7387\u6d4b\u8bd5\u7ed3\u679c\n\n  .. code-block:: bash\n\n    This may takes some time\n    Completed 0 tasks, 20 tasks left.\n    Completed 5 tasks, 15 tasks left.\n    Completed 10 tasks, 10 tasks left.\n    Completed 15 tasks, 5 tasks left.\n    The error rate is 6.42%\n\n    \u6d4b\u8bd520\u6b21\uff0c\u6bcf\u6b21\u4ece\u6570\u636e\u96c6\u968f\u673a\u53d6\u51fa20\u4e2a\u6570\u636e\u4f5c\u4e3a\u6d4b\u8bd5\u6570\u636e\uff0c\u5269\u4e0b\u7684\u4f5c\u4e3a\u8bad\u7ec3\u6570\u636e\u3002\u7136\u540e\u8ba1\u7b97\u5e73\u5747\u9519\u8bef\u7387\n\n- \u53ef\u5b9a\u5236\n\n  \u81ea\u5df1\u53ef\u4ee5\u6dfb\u52a0\u4fee\u6539\u6570\u636e\u6e90\uff0c\u589e\u52a0\u8bad\u7ec3\u6b63\u786e\u7387\n\n\u901a\u8fc7pip\u5b89\u88c5\uff1a\n-----------\n\n.. code-block:: bash\n\n   pip install cherry\n\n\u57fa\u672c\u4f7f\u7528:\n--------\n\n.. code-block:: python\n\n    >>> from classify import bayes\n    >>> test_bayes = bayes.Classify()\n    >>> test_bayes.bayes_classify(\n        '\u7f8e\u8054\u50a8\u5f53\u5929\u7ed3\u675f\u8d27\u5e01\u653f\u7b56\u4f8b\u4f1a\u540e\u53d1\u8868\u58f0\u660e\u8bf4\uff0c\n        \u81ea2017\u5e7412\u6708\u4ee5\u6765\uff0c\u7f8e\u56fd\u5c31\u4e1a\u5e02\u573a\u548c\u7ecf\u6d4e\u6d3b\u52a8\n        \u7ee7\u7eed\u4fdd\u6301\u7a33\u5065\u589e\u957f\uff0c\u5931\u4e1a\u7387\u7ee7\u7eed\u7ef4\u6301\u5728\u4f4e\u6c34\u5e73\u3002')\n    Building prefix dict from the default dictionary ...\n    Loading model from cache /var/folders/md/0251yy51045d6nknpkbn6dc80000gn/T/jieba.cache\n    Loading model cost 1.172 seconds.\n    Prefix dict has been built succesfully.\n    (\n        [\n            ('gamble.dat', 0.16622423300308523), ('normal.dat', 0.45184431202182884),\n            ('politics.dat', 0.20543346471119367), ('sex.dat', 0.17649799026389221)\n        ], \n        [\n            ('\u53d1\u8868\u58f0\u660e', 1.4632451832569382), ('12', 0.076950822137048291),\n            ('\u7ef4\u6301', 3.5426867249367744), ('\u7ecf\u6d4e', 4.1229218000749324),\n            ('\u7ee7\u7eed', 1.7757620767067532), ('\u6d3b\u52a8', 1.750927255708719),\n            ('\u7ed3\u675f', 0.36463289458882819), ('\u4ee5\u6765', -0.14619272917716231),\n            ('\u4fdd\u6301', -1.3093435389828434), ('\u589e\u957f', 1.4632451832569382),\n            ('2017', 1.4632451832569382), ('\u5e02\u573a', 1.9864933270214866),\n            ('\u7f8e\u56fd', 5.8843422794122686), ('\u5f53\u5929', 1.5810282189133229)\n        ]\n    )\n\u6211\u4eec\u4f7f\u7528\u4e86 `jieba`_ \u8fdb\u884c\u5206\u8bcd\uff0c\u4e0a\u9762\u76841.172\u79d2\u662f\u5206\u8bcd\u7684\u65f6\u95f4\uff08\u611f\u8c22fxsjy\u7ef4\u62a4\u5982\u6b64\u4f18\u79c0\u7684\u4e2d\u6587\u5206\u8bcd\u5e93\uff09\u3002\u7ed3\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2atuple\uff0c\u91cc\u9762\u5305\u542b\u4e86\u4e24\u4e2a\u5217\u8868\uff0c\u7b2c\u4e00\u4e2a\u5217\u8868\u5305\u542b\u7684\u662f\u5404\u4e2a\u7c7b\u522b\u7684\u6982\u7387\uff0c\u5982\u679c\u8981\u83b7\u53d6\u6700\u9ad8\u6982\u7387\u7684\u7c7b\u522b\u53ef\u4ee5\u7528sorted\u51fd\u6570\n\n.. _`jieba`: https://github.com/fxsjy/jieba\n\n\n\n.. code-block:: python\n\n    percentage_list, word_list = test_bayes.bayes_classify(\n        '\u7f8e\u8054\u50a8\u5f53\u5929\u7ed3\u675f\u8d27\u5e01\u653f\u7b56\u4f8b\u4f1a\u540e\u53d1\u8868\u58f0\u660e\u8bf4\uff0c\n        \u81ea2017\u5e7412\u6708\u4ee5\u6765\uff0c\u7f8e\u56fd\u5c31\u4e1a\u5e02\u573a\u548c\u7ecf\u6d4e\u6d3b\u52a8\u7ee7\u7eed\u4fdd\u6301\u7a33\u5065\u589e\u957f\uff0c\n        \u5931\u4e1a\u7387\u7ee7\u7eed\u7ef4\u6301\u5728\u4f4e\u6c34\u5e73\u3002')\n    result = sorted(\n        percentage_list, key=lambda x: x[1], reverse=True)[0][0]\n\n\u7b2c\u4e8c\u4e2a\u5217\u8868\u5305\u542b\u4e86\u8f93\u5165\u53e5\u5b50\u4e2d\u6240\u6709\u88ab\u5206\u8bcd\u7684\u8bcd\u8bed\u5bf9\u5e94\u6700\u9ad8\u6982\u7387\u5206\u7c7b\u7684\u6982\u7387\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\uff0c\u8fd9\u4e2a\u5217\u8868\u4e2d\u5305\u542b\u7684\u662f\u6bcf\u4e2a\u8bcd\u8bed\u5bf9\u53e5\u5b50\u88ab\u5224\u65ad\u4e3anormal.dat\u7684\u5f71\u54cd\u5ea6\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u7ecf\u6d4e\uff0c\u7f8e\u56fd\uff0c\u7ef4\u6301\u8fd9\u4e09\u4e2a\u8bcd\u8bed\u7684\u503c\u6700\u5927\uff0c\u5bf9\u53e5\u5b50\u7684\u5f71\u54cd\u4e5f\u6700\u5927\u3002\n\n\n\u9ed8\u8ba4\u4f7f\u7528\u5185\u7f6e\u7684\u8bad\u7ec3\u6a21\u578b\u7f13\u5b58\uff0c\u5982\u679c\u4f60\u4fee\u6539\u4e86\u6570\u636e\u6e90\u7684\u8bdd\uff0c\u9700\u8981\u66f4\u65b0\u7f13\u5b58\n\n.. code-block:: python\n\n    >>> from classify import bayes\n    >>> test_bayes = bayes.Classify(cache=False) # \u7f13\u5b58\u6587\u4ef6\u88ab\u66f4\u65b0\n    >>> test_bayes = bayes.Classify(\n        '\u7f8e\u8054\u50a8\u5f53\u5929\u7ed3\u675f\u8d27\u5e01\u653f\u7b56\u4f8b\u4f1a\u540e\u53d1\u8868\u58f0\u660e\u8bf4\uff0c\u81ea2017\u5e7412\u6708\u4ee5\u6765\uff0c\n        \u7f8e\u56fd\u5c31\u4e1a\u5e02\u573a\u548c\u7ecf\u6d4e\u6d3b\u52a8\u7ee7\u7eed\u4fdd\u6301\u7a33\u5065\u589e\u957f\uff0c\n        \u5931\u4e1a\u7387\u7ee7\u7eed\u7ef4\u6301\u5728\u4f4e\u6c34\u5e73\u3002') # \u5c06\u4f7f\u7528\u65b0\u6570\u636e\u6e90\u7684\u7f13\u5b58\n\n\u672a\u6765\u529f\u80fd\n-----\n\n- \u6dfb\u52a0\u82f1\u6587\u53e5\u5b50\u5206\u7c7b\u529f\u80fd\n- \u7e41\u4f53\u5b57\u8f6c\u6362\u6210\u7b80\u4f53\u5b57\u518d\u8bad\u7ec3\n- \u628a\u4e2d\u6587\u5206\u8bcd\u5e93\u5206\u79bb\uff0c\u8ba9\u7528\u6237\u53ef\u4ee5\u81ea\u5df1\u9009\u62e9\u5206\u8bcd\u65b9\u5f0f\n- \u5bf9\u957f\u6587\u672c\u589e\u52a0tf-idf\u8ba1\u7b97\u8bcd\u6743\u91cd\n- \u589e\u52a0SVM\u5206\u7c7b\u7b97\u6cd5\n- \u589e\u52a0HMM\u7b97\u6cd5\n\n\n.. _`english-version`:\nThis project uses Native Bayes algorithm to detect spam content, like normal, sex, gamble, political content. We use 400 Chinese sentences to train the algorithm and the correct rate is about 93.5%. Right now we only support Chinese spam content classify :<\n\nHow to use:\n\n.. code-block:: python\n\n    >>> from classify import bayes\n    >>> test_bayes = bayes.Classify()\n    >>> test_bayes.bayes_classify('\u7f8e\u8054\u50a8\u5f53\u5929\u7ed3\u675f\u8d27\u5e01\u653f\u7b56\u4f8b\u4f1a\u540e\u53d1\u8868\u58f0\u660e\u8bf4\uff0c\u81ea2017\u5e7412\u6708\u4ee5\u6765\uff0c\u7f8e\u56fd\u5c31\u4e1a\u5e02\u573a\u548c\u7ecf\u6d4e\u6d3b\u52a8\u7ee7\u7eed\u4fdd\u6301\u7a33\u5065\u589e\u957f\uff0c\u5931\u4e1a\u7387\u7ee7\u7eed\u7ef4\u6301\u5728\u4f4e\u6c34\u5e73\u3002')\n    Building prefix dict from the default dictionary ...\n    Loading model from cache /var/folders/md/0251yy51045d6nknpkbn6dc80000gn/T/jieba.cache\n    Loading model cost 1.172 seconds.\n    Prefix dict has been built succesfully.\n    (\n        [\n            ('gamble.dat', 0.16622423300308523), ('normal.dat', 0.45184431202182884),\n            ('politics.dat', 0.20543346471119367), ('sex.dat', 0.17649799026389221)\n        ], \n        [\n            ('\u53d1\u8868\u58f0\u660e', 1.4632451832569382), ('12', 0.076950822137048291),\n            ('\u7ef4\u6301', 3.5426867249367744), ('\u7ecf\u6d4e', 4.1229218000749324),\n            ('\u7ee7\u7eed', 1.7757620767067532), ('\u6d3b\u52a8', 1.750927255708719),\n            ('\u7ed3\u675f', 0.36463289458882819), ('\u4ee5\u6765', -0.14619272917716231),\n            ('\u4fdd\u6301', -1.3093435389828434), ('\u589e\u957f', 1.4632451832569382),\n            ('2017', 1.4632451832569382), ('\u5e02\u573a', 1.9864933270214866),\n            ('\u7f8e\u56fd', 5.8843422794122686), ('\u5f53\u5929', 1.5810282189133229)\n        ]\n    )\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Sunkist-Cherry/cherry",
    "keywords": "data classify content filter",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cherry",
    "platform": "",
    "project_url": "https://pypi.org/project/cherry/",
    "release_url": "https://pypi.org/project/cherry/0.2.2/",
    "requires_dist": [
      "numpy (>=1.13.3)",
      "jieba (>=0.39)"
    ],
    "requires_python": "",
    "summary": "classify data set",
    "version": "0.2.2"
  },
  "releases": {
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "debaa8ab2e2e3b4c7916331fc86dc7c5",
          "sha256": "c3f4f69cf969b737467c7d74e8e76a15eb19ef630f0fa215a0728dafe50cae18"
        },
        "downloads": -1,
        "filename": "cherry-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "debaa8ab2e2e3b4c7916331fc86dc7c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 97361,
        "upload_time": "2017-11-15T03:42:21",
        "url": "https://files.pythonhosted.org/packages/70/a3/236d7fce6938d8630ba6e58b801852345b909cdbdb3fd9c69f2788b4468a/cherry-0.1.8-py3-none-any.whl"
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "edea9a769b87d48a1fc787f1b7675842",
          "sha256": "734d3a35191ba3207d47c46f0c8dfbff2bc35238cb6e542b24edf5fbe406137c"
        },
        "downloads": -1,
        "filename": "cherry-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "edea9a769b87d48a1fc787f1b7675842",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 188233,
        "upload_time": "2017-11-23T04:01:10",
        "url": "https://files.pythonhosted.org/packages/46/ac/b49cca10bcec6a1bef1f0ea69504e5ef83119e5c7dae0d048909e15ae874/cherry-0.1.9-py3-none-any.whl"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "669cced19e5e2dfc6399a2093bb3de5e",
          "sha256": "5f33778fbd3c2a7f904fc3245144f6ec25aa776ef84816c0d82ba26f80dc8fec"
        },
        "downloads": -1,
        "filename": "cherry-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "669cced19e5e2dfc6399a2093bb3de5e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 188411,
        "upload_time": "2017-12-06T06:08:50",
        "url": "https://files.pythonhosted.org/packages/f5/f8/a0f988096bf0249b20278fb41313e00fa31d56e92a26a22da1c38eeed4d0/cherry-0.2.0-py3-none-any.whl"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9180628aecd13246f5e46ee6731d4d28",
          "sha256": "e9dd9d9cf532b7c9dae4f3deafe967fb75aa6300a2e69062ede551ea16607d66"
        },
        "downloads": -1,
        "filename": "cherry-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9180628aecd13246f5e46ee6731d4d28",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 10489,
        "upload_time": "2018-02-01T05:57:48",
        "url": "https://files.pythonhosted.org/packages/64/fc/a9d1441ab38647b2681661341056e62c46c97f4dd5cc7cb7e034d9986d2c/cherry-0.2.1-py3-none-any.whl"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "521205cfc9998028ca174786fb7b8c86",
          "sha256": "521f115ad08eceec3df997ca6e93136b3e40605d7f3765e495a255e71db7f136"
        },
        "downloads": -1,
        "filename": "cherry-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "521205cfc9998028ca174786fb7b8c86",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 108177,
        "upload_time": "2018-02-01T06:06:52",
        "url": "https://files.pythonhosted.org/packages/7a/91/ac3e09487b01de50965bf4ca6a06b8c8a29a07e3c5675a45260f1936757d/cherry-0.2.2-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "521205cfc9998028ca174786fb7b8c86",
        "sha256": "521f115ad08eceec3df997ca6e93136b3e40605d7f3765e495a255e71db7f136"
      },
      "downloads": -1,
      "filename": "cherry-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "521205cfc9998028ca174786fb7b8c86",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 108177,
      "upload_time": "2018-02-01T06:06:52",
      "url": "https://files.pythonhosted.org/packages/7a/91/ac3e09487b01de50965bf4ca6a06b8c8a29a07e3c5675a45260f1936757d/cherry-0.2.2-py3-none-any.whl"
    }
  ]
}