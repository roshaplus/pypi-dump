{
  "info": {
    "author": "Bitergia",
    "author_email": "dizquierdo@bitergia.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development"
    ],
    "description": "Generic Dashboards for GrimoireLab\n==================================\n\nEach of the files found in this directory are a JSON file that contains\nall of the information related to a Kibana dashboard. This usually has\ninformation about the following artifacts: \\* Original indexes where the\ninformation come from. \\* Searches on those indexes that provide a\nsub-set of the information. \\* Widgets either built on top of the\noriginal indexes or on top of the searches. \\* Final panels that are an\naggregation of several widgets.\n\nThere are Dashboards for Kibana 4 and Kibana 5 right now stored in: \\*\n``dashboards``: kibana 4 versions. \\* ``dashboards5``: kibana 5\nversions.\n\nPanels\n------\n\nA panel is composed by the several widgets this contains. So far the\npanels proposed as generic are a mix of the several data sources\navailable in a project. Those could be only focused on Git, but there\nare others such as review systems like Gerrit, IRC channels, mailing\nlists, etc.\n\nThe structure for naming files should be: \\* For data sources:\n\n::\n\n    <data_source>[-<panel_name>][-<filters>].json\n\n    Examples:\n    git-<filters>.json\n    gerrit-<filters>.json\n\n-  For other panels not focused on particular data sources we just use\n   the name of the panel: \\`\\`\\` [-].json\n\nExamples: about.json overview-.json\n\n::\n\n    Note: `<filters>` part is described in next section ([Filters Naming](#filters-naming))\n\n    To give some examples, below there is a list of some panels that can be found in this directory:\n    * git-'filters'.json: provides aggregated information about all of the gits in the analysis. Project/, repository, domains or organizations can be provided for filtering purposes.\n    * gerrit-'filters'.json: provides aggregated information from all of the gerrit projects. Project/, repository, domains or organizations can be provided for filtering purposes.\n    * gerrit-backlog-'filters'.json: provides specific widgets to track the backlog of the project with the addition of several filters per project or repository.\n    * mailinglists-'filters'.json: provides information about the discussions that take place in the several mailing lists.\n    * about.json: provides some widgets detailing this information and how to interact with the panels.\n    * overview-'filters'.json: provides a generic view of the dataset with some widgets that help to drill down the information from the whole list of data sources.\n\n    Filters Naming\n    --------------\n\n    Each panel may contain specific information in the name related to the available\n    filters. This is intended to help when automatically deploying those.\n\n    The current set of available filters are:\n    * organizations: this is a list or pie chart with information about organizations\n    * projects: this is a list or pie chart with information about projects\n\n    Some examples of file names:\n    * git-organizations-projects.json: this is a panel of Git containing information\n    about projects and organizations.\n    * git.json: this is a panel of Git containing basic filters about authors and\n    repositories\n    * git-organizations.json: this is a panel of Git containing organizations filters\n\n\n    Widgets Naming\n    --------------\n\n\\_\n\nExample: git\\_top\\_authors Example: git\\_authors\n\n::\n\n\n    Where data source could be git, gerrit, mbox, etc.\n\n    Widgets Title Naming\n    --------------------\n\n    In general, titles should follow the same naming scheme as the widget itself, substituting underscore characters by single spaces and adding capital letters. Nevertheless, **widgets title depends on the name of the panel** in which the widgets are located: \n\n    - **If the panel shows information for several data sources, then the name of the data source must be included**. For example, it's the case of Data Status Panel, because it contains the same information per data source, so using data source name in title is mandatory.  \n\n    - **If the name of the data source is included in the title of the panel, then the name of the data source shouldn't be included in widgets' title**, except in cases where it could help understand what the widget contains.\n\nExample: Same visualization for top authors would be named:\n\n-  'Top Authors' in 'Git' panel, as the panel is giving us context.\n-  'Git Top Authors' in 'Overview' panel where we could have similar\n   visualizations for other data sources. \\`\\`\\`\n\nSearches Naming\n---------------\n\n::\n\n    Search:_<field>:<search>\n\n    Example: Search:_pull_request:true\n\nIndexes Naming\n--------------\n\nRaw indexes should use suffix ``-raw``:\n\n::\n\n    <data_source>-raw\n\n    Example: git-raw\n    Example: gerrit-raw\n    Example: stackoverflow-raw\n    Example: jira-raw\n    Example: bugzilla-raw\n\nEnriched indexes should use just the name of the data source:\n\n::\n\n    <data_source>\n\n    Example: git\n    Example: gerrit\n    Example: stackoverflow\n    Example: jira\n    Example: bugzilla\n\nAliases Naming\n--------------\n\nFor each index there should be as many aliases as date fields stored in\nthat index. Each alias is intended to be used for building panels or\nvisualizations based on different time series. The name of an alias\nshould follow the following pattern:\n\n::\n\n    <data_source_name>_<field_name>\n\n    Example for git index and metadata__timestamp:\n    git_metadata__timestamp\n\n    Example for git index and metadata__updated_on:\n    git_metadata__updated_on\n\n    Example for jenkins and created_at field:\n    jenkins_created_at\n\nIndex Pattern Naming\n--------------------\n\nIndex patterns in Kibana should follow the same naming scheme as aliases\nin ES (see `Aliases Naming <#aliases-naming>`__ section). This way, is\neasy to know what alias is being used by a given index pattern. Besides,\nit makes easier to select index patterns from kibana, because their\nnames include the field configured for time series in that index\npattern.\n\nCommon Index Fields\n-------------------\n\nFollowing fields that should be included in any index pattern:\n\n-  id\n-  url\n-  metadata\\_\\_timestamp\n-  metadata\\_\\_updated\\_on\n-  author\\_bot\n-  author\\_name\n-  author\\_org\\_name\n-  author\\_uuid\n-  author\\_domain\n-  author\\_user\\_name\n-  origin\n-  grimoire\\_creation\\_date\n\nData model\n----------\n\nEach of the indexes are based on a previous definition. This is declared\nin CSV format with two columns: name and type.\n\nMore information at the `Schema README <schema/README.md>`__ file.\n\nHow this info was retrieved\n---------------------------\n\nThese json files were retrieved taking advantage of the toolchain\nprovided in the grimoirelab project in GitHub. Specifically the script\nGrimoireELK/utils/kidash.py.\n\nExample of how to run this:\n\n::\n\n\n     $ ./kidash.py -e https://<user>:<password>@<domain>:443/<path>/ --dashboard <dashboard_name> --export <export_path>/<file_name>.json\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/grimoirelab/panels",
    "keywords": "development repositories analytics",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "grimoirelab-panels",
    "platform": "",
    "project_url": "https://pypi.org/project/grimoirelab-panels/",
    "release_url": "https://pypi.org/project/grimoirelab-panels/0.0.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Panels and visualizations for GrimoireLab dashboards",
    "version": "0.0.3"
  },
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "29ed7b6d4a72700ca05a61b16d90bb14",
          "sha256": "8f7fdd0e84ddc82dbc82228aa2eac7ece428398a1e2d83754d2534417478381d"
        },
        "downloads": -1,
        "filename": "grimoirelab_panels-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "29ed7b6d4a72700ca05a61b16d90bb14",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 158659,
        "upload_time": "2017-11-14T19:10:40",
        "url": "https://files.pythonhosted.org/packages/a4/ed/96c6eeefcefec5a48c335fec0010070274b57677270ed9c17342520b64fc/grimoirelab_panels-0.0.3-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "074c5818874d6d3db99a394531aa0950",
          "sha256": "151e9d9c4212dab463e91480e1ccca87decd6c9dfc25cc257ba3ee1f13f323a1"
        },
        "downloads": -1,
        "filename": "grimoirelab-panels-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "074c5818874d6d3db99a394531aa0950",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 94118,
        "upload_time": "2017-11-14T19:10:42",
        "url": "https://files.pythonhosted.org/packages/4b/89/8a4ab67564ced4594306516e8c3edce527fa832ed8248e87556867963bd5/grimoirelab-panels-0.0.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "29ed7b6d4a72700ca05a61b16d90bb14",
        "sha256": "8f7fdd0e84ddc82dbc82228aa2eac7ece428398a1e2d83754d2534417478381d"
      },
      "downloads": -1,
      "filename": "grimoirelab_panels-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "29ed7b6d4a72700ca05a61b16d90bb14",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 158659,
      "upload_time": "2017-11-14T19:10:40",
      "url": "https://files.pythonhosted.org/packages/a4/ed/96c6eeefcefec5a48c335fec0010070274b57677270ed9c17342520b64fc/grimoirelab_panels-0.0.3-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "074c5818874d6d3db99a394531aa0950",
        "sha256": "151e9d9c4212dab463e91480e1ccca87decd6c9dfc25cc257ba3ee1f13f323a1"
      },
      "downloads": -1,
      "filename": "grimoirelab-panels-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "074c5818874d6d3db99a394531aa0950",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 94118,
      "upload_time": "2017-11-14T19:10:42",
      "url": "https://files.pythonhosted.org/packages/4b/89/8a4ab67564ced4594306516e8c3edce527fa832ed8248e87556867963bd5/grimoirelab-panels-0.0.3.tar.gz"
    }
  ]
}