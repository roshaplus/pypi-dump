{
  "info": {
    "author": "MyChoice2Pay",
    "author_email": "support@mychoice2pay.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# MyChoice2Pay Python\n\n\n# Overview\n\nMyChoice2Pay Python provides integration access to the MyChoice2Pay API.\n\n# Installation\n\nYou can install using `pip`:\n\n    pip install --upgrade mc2p-python\n    \nor `easy_install`\n\n    easy_install --upgrade mc2p-python\n\nor to install from source, run:\n\n    python setup.py install\n\n# Quick Start Example\n\n    from mc2p import MC2P\n    \n    mc2p = MC2PClient('KEY', 'SECRET_KEY')\n    \n    # Create transaction\n    transaction = mc2p.Transaction({\n        \"currency\": \"EUR\",\n        \"products\": [{\n            \"amount\": 1,\n            \"product\": {\n                \"name\": \"Product\",\n                \"price\": 5\n            }\n        }]\n    })\n    transaction.save()\n    transaction.pay_url # Send user to this url to pay\n\n    # Get plans\n    plans_paginator = mc2p.plan.list()\n    plans_paginator.count\n    plans_paginator.results # Application's plans\n    plans_paginator.get_next_list()\n    \n    # Get product, change and save\n    product = mc2p.Product({\n        \"id\": \"PRODUCT-ID\"\n    })\n    product.retrieve()\n    product.price = 10\n    product.save()\n    \n    # Create and delete tax\n    tax = mc2p.Tax({\n        \"name\": \"Tax\",\n        \"percent\": 5\n    })\n    tax.save()\n    tax.delete()\n    \n    # Check if transaction was paid\n    transaction = mc2p.Transaction({\n        \"id\": \"TRANSACTION-ID\"\n    })\n    transaction.retrieve()\n    transaction.status == 'D' # Paid\n    \n    # Create subscription\n    subscription = mc2p.Subscription({\n        \"currency\": \"EUR\",\n        \"plan_id\": \"PLAN-ID\",\n        \"note\": \"Note example\"\n    })\n    # or\n    subscription = mc2p.Subscription({\n        \"currency\": \"EUR\",\n        \"plan\": {\n            \"name\": \"Plan\",\n            \"price\": 5,\n            \"duration\": 1,\n            \"unit\": \"M\",\n            \"recurring\": true\n        },\n        \"note\": \"Note example\"\n    })\n    subscription.save()\n    subscription.pay_url # Send user to this url to pay\n\n# Exceptions\n    \n    from mc2p.errors import InvalidRequestError\n    \n    # Incorrect data\n    shipping = mc2p.Shipping({\n        \"name\": \"Normal shipping\",\n        \"price\": \"text\" # Price must be number\n    })\n    try:\n        shipping.save()\n    except InvalidRequestError as e:\n        e._message # Status code of error\n        e.json_body # Info from server\n        e.resource # Resource used to make the server request\n        e.resource_id # Resource id requested",
    "docs_url": null,
    "download_url": "https://github.com/mc2p/mc2p-python/archive/v0.0.2.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/mc2p/mc2p-python",
    "keywords": "mychoice2pay,payments",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "mc2p-python",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/mc2p-python/",
    "release_url": "https://pypi.org/project/mc2p-python/0.0.2/",
    "requires_python": null,
    "summary": "MyChoice2Pay Pythoni Bindings",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8d78501a6e8c82e364738aef5a6254e8",
          "sha256": "7181fb863e6673dc79f9d480efcf0a48de4a39e364355d2b2f878d6b2b0175b4"
        },
        "downloads": 0,
        "filename": "mc2p-python-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8d78501a6e8c82e364738aef5a6254e8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7273,
        "upload_time": "2017-05-24T10:09:39",
        "url": "https://files.pythonhosted.org/packages/6d/21/de1a8899d4053060c4b79a03cb0b1dac6397c1d2d95120eaa4c6aa3e5a46/mc2p-python-0.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "8d78501a6e8c82e364738aef5a6254e8",
        "sha256": "7181fb863e6673dc79f9d480efcf0a48de4a39e364355d2b2f878d6b2b0175b4"
      },
      "downloads": 0,
      "filename": "mc2p-python-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8d78501a6e8c82e364738aef5a6254e8",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7273,
      "upload_time": "2017-05-24T10:09:39",
      "url": "https://files.pythonhosted.org/packages/6d/21/de1a8899d4053060c4b79a03cb0b1dac6397c1d2d95120eaa4c6aa3e5a46/mc2p-python-0.0.2.tar.gz"
    }
  ]
}