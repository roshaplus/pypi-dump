{
  "info": {
    "author": "Shrikant Sharat & Trevor Bekolay",
    "author_email": "tbekolay@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "=================================\nti -- A silly simple time tracker\n=================================\n\n``ti`` is a small command line time tracking application.\nSimple basic usage looks like this::\n\n    $ ti on my-project\n    $ ti fin\n\nYou can also give it human-readable times::\n\n    $ ti on my-project 30mins ago\n\n``ti`` sports many other cool features. Read along to discover.\n\nWat?\n====\n\n``ti`` is a simple command line time tracker. It has been completely re-written in\npython (from being a bash script) and has (almost) complete test coverage. It is\ninspired by `timed <http://adeel.github.com/timed>`_, which is a nice project\nand you should check out if you don't like ``ti``. It also takes inspiration from\nthe simplicity of `t <http://stevelosh.com/projects/t/>`_.\n\nIf a time tracking tool makes me think for more than 3-5 seconds, I lose my line\nof thought and forget what I was doing. This is why I created ``ti``. With ``ti``,\nyou'll be as fast as you can type, which you should be good with anyway.\n\nThe most important part about ``ti`` is that it\nprovides just a few commands to manage your time tracking and gets out\nof your way. All data is saved in a JSON file (``~/.ti-sheet``, can be changed by\nsetting ``$SHEET_FILE``) for easy access to whatever you need to do. Some ideas,\n\n- Read your JSON file to generate beautiful html reports.\n- Build monthly statistics based on tags or the tasks themselves.\n- Read the currently working project and make it show up in your terminal\n  prompt. Maybe even with how long you've been on it. (!!!)\n\nIt's *your* data.\n\nOh and by the way, the source is a fairly small python script, so if you know\npython, you may want to skim over it to get a better feel of how it works.\n\n*Note*: If you have used the previous bash version of ``ti``, which was horribly\ntied up to only work on linux, you might notice the lack of *plugins* in this\npython version. I am not really missing them, so I might not add them. If anyone\nhas any interesting use cases for it, I'm willing to consider.\n\nUsage\n=====\n\nHere's the minimal usage style::\n\n    $ ti on my-project\n    Start working on my-project.\n\n    $ ti status\n    You have been working on my-project for less than a minute.\n\n    $ ti fin\n    So you stopped working on my-project.\n\n``on`` and ``fin`` can take a time (format described further down) at which to apply\nthe action::\n\n    $ ti on another-project 2 hours ago\n    Start working on another-project.\n\n    $ ti s\n    You have been working on another-project for about 2 hours.\n\n    $ ti fin 30 minutes ago\n    So you stopped working on another-project.\n\nAlso illustrating in the previous example is short aliases of all commands,\ntheir first letter. Like, ``s`` for ``status``, ``o`` for ``on``,\n``f`` for ``fin``, etc.\n\nPut brief notes on what you've been doing::\n\n    $ ti note waiting for Napoleon to take over the world\n    $ ti n another simple note for demo purposes\n\nTag your activities for fun and profit::\n\n    $ ti tag imp\n\nGet a log of all activities with the ``log`` (or ``l``) command::\n\n    $ ti log\n\nCommand reference\n=================\n\nRun ``ti -h`` (or ``--help`` or ``help`` or just ``h``)\nto get a short command summary of commands.\n\n``on``\n------\n\n- Short: ``o``\n- Syntax: ``ti (o|on) <name> [<time>...]``\n\nStart tracking time for the project/activity given by `<name>`. For example::\n\n    ti on conquest\n\ntells ``ti`` to start tracking for the activity ``conquest`` *now*.\nYou can optionally specify a relative time in the past like so::\n\n    ti on conquest 10mins ago\n\nThe format of the time is detailed further below.\n\n``fin``\n-------\n\n- Short: ``f``\n- Syntax: ``ti (f|fin) [<time>...]``\n\nEnd tracking for the current activity *now*. Just like with ``on`` command above,\nyou can give an optional time to the past. Example::\n\n    ti fin 10mins ago\n\ntells ``ti`` that you finished working on the current activity at, well, 10\nminutes ago.\n\n``status``\n----------\n\n- Short: ``s``\n- Syntax: ``ti (s|status)``\n\nGives short human readable message on the current status, i.e., whether anything\nis being tracked currently or not. Example::\n\n    $ ti on conqering-the-world\n    Start working on conqering-the-world.\n    $ ti status\n    You have been working on `conqering-the-world` for less than a minute.\n\n``tag``\n-------\n\n- Short: ``t``\n- Syntax: ``ti (t|tag) <tag>...``\n\nThis command adds the given tags to the current activity. Tags are not currently\nused within the ``ti`` time tracker, but they will be saved in the JSON data file.\nYou may use them for whatever purposes you like.\n\nFor example, if you have a script to generate a html report from your ``ti`` data,\nyou could tag some activities with a tag like ``red`` or ``important`` so that that\nactivity will appear in red in the final html report.\n\nUse it like::\n\n    ti tag red for-joe\n\nadds the tags ``red`` and ``for-joe`` to the current activitiy. You can specify any\nnumber of tags.\n\nTags are currently for your purpose. Use them as you see fit.\n\n``note``\n--------\n\n- Short: ``n``\n- Syntax: ``ti (n|note) <note-text>...``\n\nThis command adds a note on the current activity. Again, like tags, this has no\nsignificance with the time tracking aspect of ``ti``. This is for your own\nrecording purposes and for the scripts your write to process your ``ti`` data.\n\nUse it like::\n\n    ti note Discuss this with the other team.\n\nadds the note ``Discuss this with the other team.`` to the current activity.\n\n``log``\n-------\n\n- Short: ``l1``\n- Syntax: ``ti (l|log) [today]``\n\nGives a table like representation of all activities and total time spent on each\nof them.\n\nTime format\n===========\n\nCurrently only the following are recognized. If there is something that is not\nhandled, but should be, please open an issue about it or a pull request\n(function in question is ``parse_time``)\n\n- *n* seconds ago can be written as:\n    - *n* seconds ago\n    - *n* second ago\n    - *n* secs ago\n    - *n* sec ago\n    - *n* s ago\n    - ``a`` in place of *n* in all above cases, to mean 1 second.\n    - E.g., ``10s ago``, ``a sec ago`` ``25 seconds ago``, ``25seconds ago``.\n\n- *n* minutes ago can be written as:\n    - *n* minutes ago\n    - *n* minute ago\n    - *n* mins ago\n    - *n* min ago\n    - ``a`` in place of *n* in all above cases, to mean 1 minute.\n    - E.g., ``5mins ago``, ``a minute ago``, ``10 minutes ago``.\n\n- *n* hours ago can be written as:\n    - *n* hours ago\n    - *n* hour ago\n    - *n* hrs ago\n    - *n* hr ago\n    - ``a`` or ``an`` in place of *n* in all above cases, to mean 1 hour.\n    - E.g., ``an hour ago``, ``an hr ago``, ``2hrs ago``.\n\nWhere *n* is an arbitrary number and any number of spaces between *n* and the\ntime unit are allowed (including zero spaces).\n\nStatus\n======\n\nThe project is beta. If you find any bug or have any feedback, please do open an\nissue on `Github issues <https://github.com/sharat87/ti/issues>`_.\n\n\nGimme!\n======\n\nYou can download ``ti``\n`from the source on Github <https://raw.github.com/sharat87/ti/master/bin/ti>`_.\n\n- Put it somewhere in your ``$PATH`` and make sure it has executable permissions.\n- Install pyyaml using the command ``pip install --user pyyaml``.\n- Install colorama using the command ``pip install --user colorama``.\n\nAfter that, ``ti`` should be working fine.\n\nAlso, visit the `project page on Github <https://github.com/sharat87/ti>`_ for any\nfurther details.\n\nWho?\n====\n\nCreated and fed by Shrikant Sharat\n(`@sharat87 <https://twitter.com/#!sharat87>`_).\nTo get in touch, ping me on twitter or\n`email <mailto:shrikantsharat.k@gmail.com>`_.\n\nLicense\n=======\n\n`MIT License <http://mitl.sharats.me>`_.\n\n===============\nRelease History\n===============\n\n.. Changelog entries should follow this format:\n\n   version (release date)\n   ======================\n\n   **section**\n\n   - One-line description of change (link to Github issue/PR)\n\n.. Changes should be organized in one of several sections:\n\n   - Added\n   - Changed\n   - Removed\n   - Fixed\n\n0.1.1 (January 7, 2017)\n=======================\n\nThis release fixes a few bugs with command line handling.\nIf you run into any issues with this release, please\n`file an issue <https://github.com/tbekolay/ti/issues>`_!\n\n0.1.0 (June 27, 2016)\n=====================\n\nFirst release of ``ti`` on PyPI!\nThanks to all of the original authors,\nparticularly Shrikant Sharat,\nwho has turned over development of ``ti``\nto me, Trevor Bekolay.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://ti.sharats.me/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ti",
    "platform": "",
    "project_url": "https://pypi.org/project/ti/",
    "release_url": "https://pypi.org/project/ti/0.1.1/",
    "requires_python": "",
    "summary": "A silly simple time tracker",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "438616c4429f2d1b07c4edf15e7b699f",
          "sha256": "68df5d7e96dc33e2cf1f52a923bfc2e4e15d9101dd3581123f6370811902d988"
        },
        "downloads": 468,
        "filename": "ti-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "438616c4429f2d1b07c4edf15e7b699f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11561,
        "upload_time": "2016-06-27T20:33:33",
        "url": "https://files.pythonhosted.org/packages/6b/69/b04c712dd4bd09f938520f9343ea19d98e8312af336e11f1a5c704a5d6c8/ti-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "71a2a0cc822ae13663561bcf601173e3",
          "sha256": "f49b3fc2fcb8fa248379177432a5e14c8d4ce564f026b218988274b8bc14bf72"
        },
        "downloads": 12,
        "filename": "ti-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "71a2a0cc822ae13663561bcf601173e3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11822,
        "upload_time": "2017-01-07T17:26:56",
        "url": "https://files.pythonhosted.org/packages/ac/49/55769d2107ea70cabc1ceea33dfbf75468033d243de937c6d46ed6d733c5/ti-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "71a2a0cc822ae13663561bcf601173e3",
        "sha256": "f49b3fc2fcb8fa248379177432a5e14c8d4ce564f026b218988274b8bc14bf72"
      },
      "downloads": 12,
      "filename": "ti-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "71a2a0cc822ae13663561bcf601173e3",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 11822,
      "upload_time": "2017-01-07T17:26:56",
      "url": "https://files.pythonhosted.org/packages/ac/49/55769d2107ea70cabc1ceea33dfbf75468033d243de937c6d46ed6d733c5/ti-0.1.1.tar.gz"
    }
  ]
}