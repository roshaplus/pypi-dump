{
  "info": {
    "author": "Wargaming Team",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# aiohttp_prometheus_monitoring\n\nThis package allows to monitor availability of your aiohttp-application components and exports the metrics for prometheus scraper.\n\nIt can monitor:\n\n- external host HTTP status\n- postgres database status\n- redis availability\n- rabbit AMQP availability\n- whatever else, as can be extended easily\n\nIt periodically calls services, stores boolean result in Gauge metrics and exports the metrics via the /metrics endpoint.\n\nNo additional workers required, everything is built-in into your app.\n\nThen you can build graphs based on this data:\n \n![Graphs](graphs.png)\n\n## Install:\n\n    pip install aiohttp_prometheus_monitoring[amqp,redis,postgres]\n\n## Sample config:\n\n    MONITORING = {\n        'route_ping': '/ping',\n        'route_metrics': '/metrics',\n    \n        'metrics': [\n            {\n                'name': 'monitoring_http',\n                'description': 'Check HTTP status',\n                'module': 'aiohttp_prometheus_monitoring.metrics.http.HttpMetric',\n                'sleep_time': 300,\n                'params': {\n                    'url': 'http://localhost/my_ping/',\n                    'timeout': 1,\n                    'verify_ssl': True,\n                }\n            },\n            {\n                'name': 'monitoring_redis',\n                'description': 'Check redis connection',\n                'module': 'aiohttp_prometheus_monitoring.metrics.redis.RedisMetric',\n                'sleep_time': 60,\n                'params': {\n                    'host': 'localhost',\n                    'port': '6379',\n                }\n            },\n            {\n                'name': 'monitoring_mq',\n                'description': 'Check MQ connection',\n                'module': 'aiohttp_prometheus_monitoring.metrics.amqp.AmqpMetric',\n                'sleep_time': 60,\n                'params': {\n                    'host': 'localhost',\n                    'port': '5672',\n                    'user': 'root',\n                    'password': '123',\n                    'vhost': 'myvhost',\n                }\n            },\n            {\n                'name': 'monitoring_postgres',\n                'description': 'Check postgres connection',\n                'module': 'aiohttp_prometheus_monitoring.metrics.postgres.PostgresMetric',\n                'sleep_time': 60,\n                'params': {\n                    'database': 'core',\n                    'user': 'core',\n                    'password': 'core',\n                    'host': 'localhost',\n                    'port': 5433,\n                }\n            },\n        ]\n    }\n\n## Usage: \n\n    from aiohttp import web\n    from aiohttp_prometheus_monitoring import setup_monitoring\n    \n    \n    def create_app(loop=None):    \n        app = web.Application()\n        loop.run_until_complete(setup_monitoring(settings.MONITORING, app))\n        \n        return app\n\nCheck http://YOURAPP/ping and http://YOURAPP/metrics - /ping endpoint will respond \"pong\", /metrics endpoint will have metrics in prometheus format.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiohttp-prometheus-monitoring",
    "platform": "",
    "project_url": "https://pypi.org/project/aiohttp-prometheus-monitoring/",
    "release_url": "https://pypi.org/project/aiohttp-prometheus-monitoring/0.1.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f144271ee876a328f30b5aa9fd39bf55",
          "sha256": "c8bb5bbe856b7b4892538dd61df2eabb2e14c9ed57ba89af2d5f902f057dbfa1"
        },
        "downloads": -1,
        "filename": "aiohttp_prometheus_monitoring-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f144271ee876a328f30b5aa9fd39bf55",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5211,
        "upload_time": "2017-12-22T13:32:50",
        "url": "https://files.pythonhosted.org/packages/2f/82/9a69b205a8735ad470a5bcda0ecd363714011ef44f586e6dfacb7407fc55/aiohttp_prometheus_monitoring-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f144271ee876a328f30b5aa9fd39bf55",
        "sha256": "c8bb5bbe856b7b4892538dd61df2eabb2e14c9ed57ba89af2d5f902f057dbfa1"
      },
      "downloads": -1,
      "filename": "aiohttp_prometheus_monitoring-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f144271ee876a328f30b5aa9fd39bf55",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5211,
      "upload_time": "2017-12-22T13:32:50",
      "url": "https://files.pythonhosted.org/packages/2f/82/9a69b205a8735ad470a5bcda0ecd363714011ef44f586e6dfacb7407fc55/aiohttp_prometheus_monitoring-0.1.1.tar.gz"
    }
  ]
}