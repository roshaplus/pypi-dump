{
  "info": {
    "author": "orsinium",
    "author_email": "master_fess@mail.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Plugins",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Natural Language :: Russian",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Human Machine Interfaces"
    ],
    "description": "# \u041e\u0431\u0449\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f\n\n\u0414\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0438 \u0443\u043f\u0440\u043e\u0449\u0430\u044e\u0449\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u0443 \u0441 \u043d\u0438\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u0442\u044b \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0438\u0437 \u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0435.\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\n\n\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u043d\u0438\u0436\u0435 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u044b \u0434\u043b\u044f 2 \u0430\u043f\u0440\u0435\u043b\u044f 2017 \u0433\u043e\u0434\u0430.\n\n## \u0418\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u0442\u044b \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438\n\n```python\n>>> from timeparser import parse_time\n>>> parse_time('\u0437\u0430\u0432\u0442\u0440\u0430')\ndatetime.date(2017, 4, 3)\n>>> parse_time('\u0437\u0430\u0432\u0442\u0440\u0430 \u0443\u0442\u0440\u043e\u043c')\ndatetime.datetime(2017, 4, 3, 9, 0)\n>>> parse_time('\u041d\u0430\u043f\u043e\u043c\u043d\u0438 \u043c\u043d\u0435 \u0437\u0430\u0432\u0442\u0440\u0430 \u0443\u0442\u0440\u043e\u043c \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u0435\u043b.')\ndatetime.datetime(2017, 4, 3, 9, 0)\n```\n\n## \u0418\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0441\u0442\u0430, \u043d\u0435 \u043e\u0442\u043d\u043e\u0441\u044f\u0449\u0435\u0433\u043e\u0441\u044f \u043a \u0434\u0430\u0442\u0435 \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438\n\n```python\n>>> from timeparser import get_clear_text, get_last_clear_text\n>>> get_clear_text('\u041d\u0430\u043f\u043e\u043c\u043d\u0438 \u043c\u043d\u0435 \u0437\u0430\u0432\u0442\u0440\u0430 \u0443\u0442\u0440\u043e\u043c \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u0435\u043b.')\n'\u043d\u0430\u043f\u043e\u043c\u043d\u0438 \u043c\u043d\u0435 \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u0435\u043b'\n>>> get_last_clear_text('\u041d\u0430\u043f\u043e\u043c\u043d\u0438 \u043c\u043d\u0435 \u0437\u0430\u0432\u0442\u0440\u0430 \u0443\u0442\u0440\u043e\u043c \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u0435\u043b.')\n'\u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u0435\u043b'\n```\n\n# \u041d\u0435\u044f\u0432\u043d\u044b\u0435 \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u0438\n\n* `\u0443\u0442\u0440\u043e\u043c` - \u0432 09:00\n* `\u0434\u043d\u0451\u043c` - \u0432 15:00\n* `\u0432\u0435\u0447\u0435\u0440\u043e\u043c` - \u0432 21:00\n* `\u043d\u043e\u0447\u044c\u044e` - \u0432 03:00\n* `\u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043d\u0435\u0434\u0435\u043b\u0435` - \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043d\u0435\u0434\u0435\u043b\u0435 \u0432 \u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a.\n* `\u0447\u0435\u0440\u0435\u0437 \u043d\u0435\u0434\u0435\u043b\u044e` - \u0440\u043e\u0432\u043d\u043e \u0447\u0435\u0440\u0435\u0437 7 \u0441\u0443\u0442\u043e\u043a.\n* `\u0447\u0435\u0440\u0435\u0437 \u043d\u0435\u0434\u0435\u043b\u044e \u0443\u0442\u0440\u043e\u043c` - \u0447\u0435\u0440\u0435\u0437 7 \u0434\u043d\u0435\u0439 \u0443\u0442\u0440\u043e\u043c.\n* `\u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u043c\u0435\u0441\u044f\u0446\u0435` - 1 \u0447\u0438\u0441\u043b\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u043c\u0435\u0441\u044f\u0446\u0430.\n\n\u0411\u043e\u043b\u044c\u0448\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u0432 \u0432 [tests.py](tests.py)\n\n# API reference\n\n## timeparser.parse_time\n\n**\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f:**\n* datetime.date\n* datetime.datetime\n* None\n\n**\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f:**\n* `ValueError: day is out of range for month` - \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u0430 \u043d\u0435\u0432\u0435\u0440\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 30 \u0444\u0435\u0432\u0440\u0430\u043b\u044f).\n* `ValueError: Please, set text or words for TimeParser.` - \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u0430 \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430.\n\n## TODO\n\n* \u0421\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043a \u0431\u0430\u0437\u043e\u0432\u043e\u043c\u0443 \u043a\u043b\u0430\u0441\u0441\u0443\n* \u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043d\u0430 `pymorphy`\n* \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0443 AM/PM (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \"\u0432 \u0434\u0432\u0430 \u0447\u0430\u0441\u0430 \u0434\u043d\u044f\")",
    "docs_url": null,
    "download_url": "https://github.com/orsinium/rutimeparser/tarball/master",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/orsinium/rutimeparser",
    "keywords": "timeparser parse date time datetime russian text",
    "license": "GNU Lesser General Public License v3.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "rutimeparser",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/rutimeparser/",
    "release_url": "https://pypi.org/project/rutimeparser/1.0.0/",
    "requires_python": null,
    "summary": "Recognize date and time in russian text.",
    "version": "1.0.0"
  },
  "releases": {
    "1.0.0": []
  },
  "urls": []
}