{
  "info": {
    "author": "Alexander Oblovatniy",
    "author_email": "oblovatniy@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: Free for non-commercial use",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "IL-2 FB Events Parser\n=====================\n\n|PyPI package| |PyPI downloads| |License|\n\n|Build Status| |Coverage Status| |Code Review| |Health| |Quality| |Requirements|\n\nL10N state:\n\n|Translations|\n\n\n**Table of contents**\n\n.. contents::\n    :local:\n    :depth: 1\n    :backlinks: none\n\n\nSynopsis\n--------\n\nThis is a Python library which parses events from log file produced by\nIL-2 FB Dedicated Server. Resulting information about events is stored in\nspecial data structures.\n\n\nDemo\n----\n\nYou may see this library in action even if you do not understand its purpose.\n\nAll you need is just to `visit project's demo page`_.\n\nThat page allows you to test parser's ability to process some string. If you\ndo not know what to enter to the text area, you may ``Insert test data``\nand parse it.\n\nIf something goes wrong, you will be prompted to confirm automatic creation of\nbug report which will be\n`listed on this page <https://github.com/IL2HorusTeam/il2fb-events-parser/issues>`_.\n\n\nKnown events\n------------\n\nThis library supports the vast majority of events produced by dedicated\nserver.\n\nTo see their list, go to the `demo page`_ and click\n``See the list of supported events`` link.\n\nYou may find `definitions of datastructures here <https://github.com/IL2HorusTeam/il2fb-events-parser/blob/master/il2fb/parsers/events/structures/events.py>`_\nand you may `explore their internals here <https://github.com/IL2HorusTeam/il2fb-events-parser/blob/master/tests/test_events.py>`_.\n\n\nInstallation\n------------\n\nGet it from PyPI:\n\n.. code-block:: bash\n\n  pip install il2fb-events-parser\n\n\nUsage\n-----\n\nBasic usage\n~~~~~~~~~~~\n\nIf you need to be able to parse all events this library knows about, use\n``parse_string()``:\n\n.. code-block:: python\n\n  from il2fb.parsers.events import parse_string\n  event = parse_string(\"[8:33:05 PM] User0 has connected\")\n  print(event)\n  # <Event 'HumanHasConnected'>\n  event.time\n  # datetime.time(20, 33, 5)\n  event.callsign\n  # 'User0'\n  import pprint\n  pprint.pprint(event.to_primitive())\n  # {'callsign': 'User0',\n  #  'name': 'HumanHasConnected',\n  #  'time': '20:33:05',\n  #  'verbose_name': u'Human has connected'}\n\n\nPossible exceptions\n~~~~~~~~~~~~~~~~~~~\n\nCertain errors may be raised if you will try to parse unknown event or known\nevent with invalid data:\n\n.. code-block:: python\n\n  parse_string(\"foo bar\")\n  # Traceback (most recent call last):\n  # ...\n  # EventParsingError: No grammar was found for string \"foo bar\"\n  parse_string(\"[99:99:99 PM] Mission BEGIN\")\n  # Traceback (most recent call last):\n  # ...\n  # ValueError: time data '99:99:99 PM' does not match format '%I:%M:%S %p'\n\nCurrent list of supported events is rather full, but ``EventParsingError`` is\nquite possible, because server's events are undocumented and this library may\ndo not know all of them.\n\nIn case you need to catch this error, its full name is\n``il2fb.parsers.events.exceptions.EventParsingError``.\n\nOther errors such as ``ValueError`` are quite impossible if you are parsing log\ncreated by dedicated server.\n\n\nSafe usage\n~~~~~~~~~~\n\nYou may use ``parse_string_safely()`` if you don't care about any exceptions:\n\n.. code-block:: python\n\n  from il2fb.parsers.events import parse_string_safely\n  event = parse_string_safely(\"foo bar\")\n  event is None\n  # True\n\nAny error (except ``SystemExit`` and ``KeyboardInterrupt``) will be muted and\n``None`` will be returned.\n\n\nTweaks\n------\n\nEach event has own grammar rule for parsing strings. Each rule increases max\ntime of parsing of a single string.\n\nFor example, this time equals to ~10 ms for Python 2.7.8 running under\nLinux kernel 3.13 on Intel\u00ae Core\u2122 i3-2120. Therefore, in the worst case you\nwill be able to parse 100 events per second.\n\nThis may not be an issue for you, but if it is, you may skip some events to\nspeed up parsing process.\n\n\nExplicitly tell which events you are interested in\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou may explicitly tell which events you are interested in, if you are not\ninterested in the vast majority of events supported by this library.\n\nTo do so, you will need to use ``InclusiveEventsParser``:\n\n.. code-block:: python\n\n  from il2fb.parsers.events import InclusiveEventsParser\n  from il2fb.parsers.events import HumanHasConnected, HumanHasSelectedAirfield\n  parser = InclusiveEventsParser([\n      HumanHasConnected, HumanHasSelectedAirfield,\n  ])\n  parser.parse_string(\"[8:33:05 PM] User0 has connected\")\n  # <Event 'HumanHasConnected'>\n  parser.parse_string(\"[8:33:05 PM] User0 selected army Red at 100.0 200.99\")\n  # <Event 'HumanHasSelectedAirfield'>\n  parser.parse_string(\"[8:33:05 PM] User0 has disconnected\")\n  # None\n\nHere, ``parse_string()`` method of our parser will work same way as\n``parse_string_safely()`` function.\n\n\nExplicitly tell which events you are NOT interested in\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you are not interested only in some events, you can exclude them using\n``ExclusiveEventsParser``:\n\n\n.. code-block:: python\n\n  from il2fb.parsers.events import ExclusiveEventsParser\n  from il2fb.parsers.events import (\n      TreeWasDestroyed, TreeWasDestroyedByAIAircraft,\n      TreeWasDestroyedByHumanAircraft, TreeWasDestroyedByStatic,\n  )\n  parser = ExclusiveEventsParser([\n      TreeWasDestroyed, TreeWasDestroyedByAIAircraft,\n      TreeWasDestroyedByHumanAircraft, TreeWasDestroyedByStatic,\n  ])\n  parser.parse_string(\"[8:33:05 PM] User0 has connected\")\n  # <Event 'HumanHasConnected'>\n  parser.parse_string(\"[8:33:05 PM] 3do/Tree/Line_W/live.sim destroyed by User0:Pe-8 at 100.0 200.99\")\n  # None\n\nJust like in case of ``InclusiveEventsParser``, ``parse_string()`` will work\nsame way as ``parse_string_safely()`` function.\n\n\nIdeas for future\n~~~~~~~~~~~~~~~~\n\nAnother way to speed up parsing is to use LRU cache for grammar rules.\n\nHere, the key idea is that some types of events usually may come in sequence\nduring game flow. For example, user destroys a group of objects with bombs,\nuser changes seat in his aircraft rapidly, the whole crew bails out, etc.\n\nIt seems to be OK to use ``collections.deque`` to implement cache for such\nsituations.\n\nThe problem is that we need to preserve order of rules for events of similar\ntypes. To do so, first of all, we need to group all existing rules. Then we\nwill need combine a group of rules into a single rule. This must be done during\ninstantiation of parser, because list of events we are interested in may vary\n(see ``InclusiveEventsParser`` and ``ExclusiveEventsParser``).\n\nThis idea seems to be nice and useful, but maybe it's just a premature\noptimization.\n\n\n.. |Build Status| image:: http://img.shields.io/travis/IL2HorusTeam/il2fb-events-parser.svg?style=flat&branch=master\n   :target: https://travis-ci.org/IL2HorusTeam/il2fb-events-parser\n.. |Coverage Status| image:: http://img.shields.io/coveralls/IL2HorusTeam/il2fb-events-parser.svg?style=flat&branch=master\n   :target: https://coveralls.io/r/IL2HorusTeam/il2fb-events-parser?branch=master\n.. |PyPI package| image:: http://img.shields.io/pypi/v/il2fb-events-parser.svg?style=flat\n   :target: http://badge.fury.io/py/il2fb-events-parser/\n.. |PyPI downloads| image:: http://img.shields.io/pypi/dm/il2fb-events-parser.svg?style=flat\n   :target: https://crate.io/packages/il2fb-events-parser/\n.. |Docs| image:: https://readthedocs.org/projects/il2fb-events-parser/badge/?version=latest&style=flat\n   :target: `read the docs`_\n.. |License| image:: https://img.shields.io/badge/license-LGPLv3-brightgreen.svg?style=flat\n   :target: https://github.com/IL2HorusTeam/il2fb-events-parser/blob/master/LICENSE\n.. |Code Review| image:: https://www.codacy.com/project/badge/4c79f2cb39234620bce5d4c49a54be52\n    :target: https://www.codacy.com/public/IL2HorusTeam/il2fbmissionparser/dashboard\n    :alt: Codacy Code Review\n.. |Health| image:: https://landscape.io/github/IL2HorusTeam/il2fb-events-parser/master/landscape.png?style=flat\n   :target: https://landscape.io/github/IL2HorusTeam/il2fb-events-parser/master\n   :alt: Code Health\n.. |Quality| image:: https://scrutinizer-ci.com/g/IL2HorusTeam/il2fb-events-parser/badges/quality-score.png?b=master&style=flat\n   :target: https://scrutinizer-ci.com/g/IL2HorusTeam/il2fb-events-parser/?branch=master\n   :alt: Scrutinizer Code Quality\n.. |Requirements| image:: https://requires.io/github/IL2HorusTeam/il2fb-events-parser/requirements.svg?branch=master&style=flat\n    :target: https://requires.io/github/IL2HorusTeam/il2fb-events-parser/requirements/?branch=master\n    :alt: Requirements Status\n.. |Translations| image:: https://www.transifex.com/projects/p/il2fb-events-parser/resource/il2fb-events-parserpo/chart/image_png\n    :target: https://www.transifex.com/projects/p/il2fb-events-parser/\n    :alt: Status of translations\n\n.. _read the docs: http://il2fb-events-parser.readthedocs.org/\n\n.. _demo page: https://il2fb-events-parser-demo.herokuapp.com/\n.. _visit project's demo page: `demo page`_",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/IL2HorusTeam/il2fb-events-parser",
    "keywords": "il2,il-2,fb,forgotten battles,parser,events,server",
    "license": "LGPLv3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "il2fb-events-parser",
    "platform": "any",
    "project_url": "https://pypi.org/project/il2fb-events-parser/",
    "release_url": "https://pypi.org/project/il2fb-events-parser/0.11.0/",
    "requires_python": null,
    "summary": "Parse events from log produced by IL-2 FB Dedicated Server",
    "version": "0.11.0"
  },
  "releases": {
    "0.10.1": [],
    "0.11.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a83d4c3d8887f652f2361443eac87c16",
          "sha256": "4d12523fe20dbfba616ec996be662dc862cfa8308db5b0ad8aea0af9bda1a617"
        },
        "downloads": 1695,
        "filename": "il2fb-events-parser-0.11.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a83d4c3d8887f652f2361443eac87c16",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25134,
        "upload_time": "2015-01-17T17:36:48",
        "url": "https://files.pythonhosted.org/packages/33/0d/d975a2479045f484ae119f57d1e048543b2a12e2e8aeab0edbb6fb2e8ca2/il2fb-events-parser-0.11.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a83d4c3d8887f652f2361443eac87c16",
        "sha256": "4d12523fe20dbfba616ec996be662dc862cfa8308db5b0ad8aea0af9bda1a617"
      },
      "downloads": 1695,
      "filename": "il2fb-events-parser-0.11.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a83d4c3d8887f652f2361443eac87c16",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 25134,
      "upload_time": "2015-01-17T17:36:48",
      "url": "https://files.pythonhosted.org/packages/33/0d/d975a2479045f484ae119f57d1e048543b2a12e2e8aeab0edbb6fb2e8ca2/il2fb-events-parser-0.11.0.tar.gz"
    }
  ]
}