{
  "info": {
    "author": "Elliot Ford, Emma Flint",
    "author_email": "ef355@cam.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: English",
      "Topic :: Text Processing"
    ],
    "description": "A module for normalising text.\r\n\r\nIntroduction\r\n------------\r\n\r\nThis module takes a text as input, and returns it in a normalised form,\r\n*ie.* expands all word tokens deemed not to be of a standard type.\r\nNon-standard words (NSWs) are detected, classified and expanded.\r\nExamples of NSWs that are normalised include:\r\n\r\n-  Numbers - percentages, dates, currency amounts, ranges, telephone\r\n   numbers.\r\n-  Abbreviations and acronyms.\r\n-  Web addresses and hashtags.\r\n\r\nTable of Contents\r\n-----------------\r\n\r\n#. `Installation <#installation>`__\r\n#. `Usage <#usage>`__\r\n    2.1. `Customise to your variety`\r\n    \r\n    2.2. `Input your own abbreviation dictionary`\r\n\r\n    2.3. `Execute normalise from the command line`\r\n\r\n#. `Example <#example>`__\r\n#. `Authors <#authors>`__\r\n#. `License <#license>`__\r\n#. `Acknowledgements <#acknowledgements>`__\r\n\r\n1. Installation\r\n---------------\r\n\r\nnormalise requires Python 3.\r\n\r\nTo install the module (on Windows, Mac OS X, Linux, etc.) and to ensure\r\nthat you have the latest version of pip and setuptools:\r\n\r\n::\r\n\r\n    $ pip install --upgrade pip setuptools\r\n\r\n    $ pip install normalise\r\n\r\nIf ``pip`` installation fails, you can try ``easy_install normalise``.\r\n\r\n2. Usage\r\n--------\r\n\r\nYour input text can be a list of words, or a string.\r\n\r\nTo normalise your text, use the ``normalise`` function. This will return\r\nthe text with NSWs replaced by their expansions:\r\n\r\n.. code:: python\r\n\r\n    text = [\"On\", \"the\", \"28\", \"Apr.\", \"2010\", \",\", \"Dr.\", \"Banks\", \"bought\", \"a\", \"chair\", \"for\", \"\u00a335\", \".\"]\r\n\r\n    normalise(text, verbose=True)\r\n\r\n    Out:\r\n    ['On',\r\n     'the',\r\n     'twenty-eighth of',\r\n     'April',\r\n     'twenty ten',\r\n     ',',\r\n     'Doctor',\r\n     'Banks',\r\n     'bought',\r\n     'a',\r\n     'chair',\r\n     'for',\r\n     'thirty five pounds',\r\n     '.']\r\n\r\n``verbose=True`` displays the stages of the normalisation process, so\r\nyou can monitor its progress. To turn this off, use ``verbose=False``.\r\n\r\nIf your input is a string, you can use our basic tokenizer. For best\r\nresults, input your own custom tokenizer.\r\n\r\n.. code:: python\r\n\r\n    normalise(text, tokenizer=tokenize_basic, verbose=True)\r\n\r\nIn order to see a list of all NSWs in your text, along with their index,\r\ntags, and expansion, use the ``list_NSWs`` function:\r\n\r\n.. code:: python\r\n\r\n    list_NSWs(text)\r\n\r\n     Out:\r\n     ({3: ('Apr.', 'ALPHA', 'EXPN', 'April'),\r\n       6: ('Dr.', 'ALPHA', 'EXPN', 'Doctor')},\r\n      {2: ('28', 'NUMB', 'NORD', 'twenty-eighth of'),\r\n       4: ('2010', 'NUMB', 'NYER', 'twenty ten'),\r\n       12: ('\u00a335', 'NUMB', 'MONEY', 'thirty five pounds')}\r\n\r\n\r\n2.1. Customise to your variety\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nIn order to customise normalisation to your variety of English, use\r\n``variety=\"BrE\"`` for British English, or ``variety=\"AmE\"`` for American\r\nEnglish:\r\n\r\n.. code:: python\r\n\r\n    text = [\"On\", \"10/04\", \",\", \"he\", \"went\", \"to\", \"the\", \"seaside\", \".\"]\r\n\r\n    normalise(text, variety=\"BrE\")\r\n    Out: ['On', 'the tenth of April', ',', 'he', 'went', 'to', 'the', 'seaside', '.']\r\n\r\n    normalise(text, variety=\"AmE\")\r\n    Out: ['On', 'the fourth of October', ',', 'he', 'went', 'to', 'the', 'seaside', '.']\r\n\r\nIf a variety is not specified, our default is British English.\r\n\r\n2.2. Input your own abbreviation dictionary\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nAlthough our system aims to be domain-general, users can input their own\r\ndictionary of abbreviations in order to tailor to a specific domain.\r\nThis can be done using the keyword argument ``user_abbrevs={}``:\r\n\r\n.. code:: python\r\n\r\n    my_abbreviations = {\"bdrm\": \"bedroom\",\r\n                        \"KT\": \"kitchen\",\r\n                        \"wndw\": \"window\",\r\n                        \"ONO\": \"or near offer\"}\r\n\r\n    text = [\"4bdrm\", \"house\", \"for\", \"sale\", \",\", \"\u00a3459k\", \"ONO\"]\r\n\r\n    normalise(text, user_abbrevs=my_abbreviations)\r\n\r\n    Out:\r\n    ['four bedroom',\r\n     'house',\r\n     'for',\r\n     'sale',\r\n     ',',\r\n     'four hundred and fifty nine thousand pounds',\r\n     'or near offer']\r\n\r\n2.3. Execute normalise from the command line\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    From the command line, you can normalise text from a given .txt file. Use the command `normalise /path/to/your-file.txt`. This will print the normalised output, as well as save it to a separate file \"your-file_normalised.txt\" in the same directory as the original text.\r\n\r\n    To specify the variety as American English, use `--AmE` (default is British English). For a verbose output, use `--V`:\r\n\r\n``$ normalise /path/to/your\\_file.txt --AmE --V``\r\n\r\n\r\n3. Example\r\n----------\r\n\r\nA further example demonstrating the expansion of more types of NSW\r\n(including abbreviations, spelling mistakes, percentage ranges,\r\ncurrency):\r\n\r\n.. code:: python\r\n\r\n    text = [\"On\", \"the\", \"13\", \"Feb.\", \"2007\", \",\", \"Theresa\", \"May\",\r\n    \"MP\", \"announced\",\r\n    \"on\", \"ITV\", \"News\", \"that\", \"the\", \"rate\", \"of\", \"childhod\",\r\n    \"obesity\", \"had\", \"risen\",\r\n    \"from\", \"7.3-9.6%\", \"in\", \"just\", \"3\", \"years\", \",\", \"costing\", \"the\",\r\n    \"Gov.\", \"\u00a320m\", \".\"]\r\n\r\n    normalise(text, verbose=True)\r\n\r\n    Out:\r\n    ['On',\r\n     'the',\r\n     'thirteenth of',\r\n     'February',\r\n     'two thousand and seven',\r\n     'Theresa',\r\n     'May',\r\n     'M P',\r\n     'announced',\r\n     'on',\r\n     'I T V',\r\n     'News',\r\n     'that',\r\n     'the',\r\n     'rate',\r\n     'of',\r\n     'childhood',\r\n     'obesity',\r\n     'had',\r\n     'risen',\r\n     'from',\r\n     'seven point three to nine point six percent',\r\n     'in',\r\n     'just',\r\n     'three',\r\n     'years',\r\n     ',',\r\n     'costing',\r\n     'the',\r\n     'government',\r\n     'twenty million pounds',\r\n     '.']\r\n\r\n4. Authors\r\n----------\r\n\r\n-  **Elliot Ford** - `EFord36 <https://github.com/EFord36>`__\r\n-  **Emma Flint** - `emmaflint27 <https://github.com/emmaflint27>`__\r\n\r\nOur system is described in detail in Emma Flint, Elliot Ford, Olivia\r\nThomas, Andrew Caines & Paula Buttery (2016) - A Text Normalisation\r\nSystem for Non-Standard Words.\r\n\r\n5. License\r\n----------\r\n\r\nThis project is licensed under the terms of the GNU General Public\r\nLicense version 3.0 or later.\r\n\r\nPlease see\r\n`LICENSE.txt <https://github.com/EFord36/normalise/blob/master/LICENSE.txt>`__\r\nfor more information.\r\n\r\n6. Acknowledgements\r\n-------------------\r\n\r\nThis project builds on the work described in `Sproat et al\r\n(2001) <http://www.cs.toronto.edu/~gpenn/csc2518/sproatetal01.pdf>`__.\r\n\r\nWe would like to thank Andrew Caines and Paula Buttery for supervising\r\nus during this project.\r\n\r\n| The font used for the logo was Anita Semi-Square by Gustavo Paz.\r\n| License: `Attribution-ShareAlike 4.0 International (CC BY-SA\r\n  4.0) <http://creativecommons.org/licenses/by-sa/4.0/deed.en_US>`__\r\n\r\n.. |Title Logo| image:: logo.png\r\n",
    "docs_url": null,
    "download_url": "https://github.com/EFord36/normalise/tarball/0.1.6",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/EFord36/normalise",
    "keywords": "normalisation",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "normalise",
    "platform": "any",
    "project_url": "https://pypi.org/project/normalise/",
    "release_url": "https://pypi.org/project/normalise/0.1.6/",
    "requires_python": "",
    "summary": "A module to normalise non-standard words in text",
    "version": "0.1.6"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "254a85ea66e557001c5e67d4d43d9bcf",
          "sha256": "b00fd90aef5a87e614482d78c3fc9f6cfad7047cd79d0a9868636211ee4a317a"
        },
        "downloads": 132,
        "filename": "normalise-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "254a85ea66e557001c5e67d4d43d9bcf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 43712,
        "upload_time": "2016-09-29T16:07:02",
        "url": "https://files.pythonhosted.org/packages/96/27/1c0b34656382bbe4cc91c7cc6f73561fbfb8fc42450144b07d24024ea6ae/normalise-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "031ef37b14dabf88a3f7a8899e247cf4",
          "sha256": "423828ac72c50836956e062f0f7735afad5308712c5fee7e731acdfbaec2e766"
        },
        "downloads": 76,
        "filename": "normalise-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "031ef37b14dabf88a3f7a8899e247cf4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 43718,
        "upload_time": "2016-09-29T16:35:23",
        "url": "https://files.pythonhosted.org/packages/7f/e0/100953ae21d1d5d659e481ddb498275be3f1bde3d98292e8deaa2bbcd3f8/normalise-0.1.2.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2fb5221fda7bdcce6da9a8aa9f8ef266",
          "sha256": "9436c9d89c4ee2f5617e4d72b26d8d06ea94c055c229e8a82a0f5132ff2ed520"
        },
        "downloads": 80,
        "filename": "normalise-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2fb5221fda7bdcce6da9a8aa9f8ef266",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15214924,
        "upload_time": "2016-09-29T20:24:03",
        "url": "https://files.pythonhosted.org/packages/f7/ca/edbe7cb49c0ae2bfcc167cb4673e902709dde40dff76aa6d1cfd9725fc3e/normalise-0.1.4.tar.gz"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9ce0b946b17265665527979a3bbb4594",
          "sha256": "d3069c3fd6d5269ecff214b4706066a55c6234752d0416241d51c74f10426887"
        },
        "downloads": 77,
        "filename": "normalise-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9ce0b946b17265665527979a3bbb4594",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15214984,
        "upload_time": "2016-09-30T16:08:42",
        "url": "https://files.pythonhosted.org/packages/53/86/0e236d4cd7f1257ed9604be6716f5c881c18ff6381044c4a32b3013dce4b/normalise-0.1.5.tar.gz"
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2b82c54c17e5eafee96914ce3dcf1fa6",
          "sha256": "0ec00801a57a53a7fea787b04749ed92bf1e8d7f57ee64cc5a104e844b026600"
        },
        "downloads": 78,
        "filename": "normalise-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "2b82c54c17e5eafee96914ce3dcf1fa6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15215017,
        "upload_time": "2016-10-11T10:25:06",
        "url": "https://files.pythonhosted.org/packages/1a/c4/76677738b25930689db4c44c9a633a11abb231411258239dd9dfc1967d49/normalise-0.1.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2b82c54c17e5eafee96914ce3dcf1fa6",
        "sha256": "0ec00801a57a53a7fea787b04749ed92bf1e8d7f57ee64cc5a104e844b026600"
      },
      "downloads": 78,
      "filename": "normalise-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "2b82c54c17e5eafee96914ce3dcf1fa6",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15215017,
      "upload_time": "2016-10-11T10:25:06",
      "url": "https://files.pythonhosted.org/packages/1a/c4/76677738b25930689db4c44c9a633a11abb231411258239dd9dfc1967d49/normalise-0.1.6.tar.gz"
    }
  ]
}