{
  "info": {
    "author": "Jun Ding",
    "author_email": "jund@andrew.cmu.edu",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "::\r\n\r\n             ____  ____  ____  _  _____ _____\r\n            / ___\\/   _\\/  _ \\/ \\/    //    /\r\n            |    \\|  /  | | \\|| ||  __\\|  __\\\r\n            \\___ ||  \\__| |_/|| || |   | |   \r\n            \\____/\\____/\\____/\\_/\\_/   \\_/    \r\n\r\nINTRODUCTION\r\n============\r\n\r\nSCDIFF was designed to analyze the cell differentiation process using\r\ntime-series single cell RNA-seq data. It can be used to predict the\r\ntranscription factors, which regulate the cell differentiation process.\r\nIt also visualizes the differentiation process using a graph, in which\r\nnodes represent different sub-population cells and edges denote the\r\ndifferentiation paths.\r\n\r\n\r\n\r\n\r\nPREREQUISITES\r\n=============\r\n-  | python (python 2 and python 3 are both supported)\r\n   | It was installed by default for most Linux distribution and MAC If\r\n   | not, please check https://www.python.org/downloads/ for installation\r\n   | instructions.\r\n\r\n-  | Python packages dependencies:\r\n   | -- scikit-learn\r\n   | -- scipy\r\n   | -- numpy\r\n   | The python setup.py script will try to install these packages\r\n   | automatically. However, please install them manually if, by any\r\n   | reason, the automatic installation fails.\r\n\r\n-  If using Graphic User Interface(GUI), please instal the Tkinter\r\n   package. Please check\r\n   http://tkinter.unpythonic.net/wiki/How_to_install_Tkinter to install\r\n   Tkinter package.\r\n\r\nINSTALLATION\r\n============\r\n\r\ncd to the package root directory\r\n\r\n.. code:: shell\r\n\r\n    $cd scdiff\r\n\r\nrun python setup to install\r\n\r\n.. code:: shell\r\n\r\n    $python setup.py install\r\n\r\nLinux, Mac:\r\n\r\n.. code:: shell\r\n\r\n    $sudo python setup.py install \r\n\r\nUSAGE\r\n=====\r\n\r\n.. code:: shell\r\n\r\n    usage: scdiff [-h] -i INPUT -t TF_DNA -k CLUSTERS -o OUTPUT [-s SPEEDUP] [-l LargeType]\r\n\r\n      -h, --help            show this help message and exit\r\n      -i INPUT, --input INPUT\r\n                            input single cell RNA-seq expression data\r\n      -t TF_DNA, --tf_dna TF_DNA\r\n                            TF-DNA interactions used in the analysis\r\n      -k CLUSTERS, --clusters CLUSTERS\r\n                            how to learn the number of clusters for each time\r\n                            point? user-defined or auto? if user-defined, please\r\n                            specify the configuration file path\r\n      -o OUTPUT, --output OUTPUT\r\n                            output folder to store all results\r\n                            \r\n      -s SPEEDUP, --speedup SPEEDUP(1/0)\r\n                            speedup version with less stringent convergence\r\n                            criteria\r\n      -l LARGETYPE  --largetype LARGETYPE (1/0)\r\n\r\nMODULES & FUNCTIONS\r\n===================\r\n\r\nscdiff module\r\n-------------\r\n\r\nThis module is used to perform the single cell differentiation analysis\r\nand it builds a graph (differentiation) based on the analysis result.\r\n\r\n`scdiff.Graph(Cells, kc,largeType=None) <#graph>`__\r\n\r\n| This class defines the differentiation graph.\r\n\r\n**Parameters**:\r\n\r\n-  **Cells**: Cell instances\r\n   Please read `cell <#cell>`__ Class definition for details.\r\n-  **kc**: String\r\n   clustering config. It's a string with either 'auto' or clustering\r\n   configure file path (-k parameter).\r\n-  **largeType**: None(default) or String\r\n   whether the single cell is a 'largeType' (largeType denotes the\r\n   number of cells in datasets is very large (typically >2k cells). In\r\n   such case, the performance will be scarified to improve the running\r\n   efficiency (e.g. using K-means instead of spectral clustering). If\r\n   not set (**None**), the dataset will be regarded as normal, if set as\r\n   'True', the dataset will be treated as largeType.\r\n\r\n| **Output**:\r\n| A graph instance with all nodes and edges, which represents the\r\n| differentiation structure for given inputs.\r\n\r\n**Example**:\r\n\r\n.. code:: python\r\n\r\n    import scdiff\r\n    from scdiff import *\r\n    graph1=scdiff.Graph(Cells,'auto',None)  #Cells: List of Cell instances \r\n     \r\n\r\n| `scdiff.Cell(Cell\\_ID, TimePoint,Expression,typeLabel) <#cell>`__\\ \r\n| This class defines the cell.\r\n\r\n**Parameters**:\r\n\r\n-  **Cell\\_ID**: String\r\n   The ID of the cell.\r\n-  **TimePoint**: Integer\r\n   Measurement TimePoint of the cel, Integer.\r\n-  **Expression**: List of float\r\n   Expression of all genes.\r\n-  **Cell\\_Label**: String\r\n   The true label for the cell if available, 'NA' if not available.\r\n   (Note, we don't need this information for the model, but it's useful\r\n   when analyzing the result).\r\n\r\n| **Output**:\r\n| A Cell class instance (with all information regarding to a cell)\r\n\r\n**Example**:\r\n\r\n.. code:: python\r\n\r\n    import scdiff\r\n    from scdiff.scdiff import *\r\n    c1=Cell('C1',1,[0.1,4.2,....,3.6],'AT1')\r\n    c2=Cell('C2',1,[0.1,4.2,....,3.6],'AT1')\r\n    AllCells=[c1,c2]\r\n\r\n`scdiff.Clustering(Cells, kc,largeType=None) <#graph>`__\r\n\r\n**Parameters**:\r\n\r\n-  **Cells**: List of Cell Please read `Cell <#cell>`__ Class definition\r\n   for details.\r\n-  **kc**: String\r\n   clustering config. It's a string with either 'auto' or clustering\r\n   configure file path (-k parameter).\r\n-  **largeType**: None(default) or String\r\n   whether the single cell is a 'largeType' (largeType denotes the\r\n   number of cells in datasets is very large (typically >2k cells). In\r\n   such case, the performance will be scarified to improve the running\r\n   efficiency (e.g. using K-means instead of spectral clustering). If\r\n   not set (**None**), the dataset will be regarded as normal, if set as\r\n   'True', the dataset will be treated as largeType.\r\n\r\n| **Method**:\r\n| `getClusteringPars() <#clustering_getClusteringPars>`__  \r\n\r\n| This class represents the clustering.\r\n\r\n-  **Output**: Parameters needed for clustering-dCK and dBS. This\r\n   function can be used to learn the clustering parameters.\r\n-  | **dCK**: dictionary\r\n   | key\uff1atimePoint, value: K (number of clusters, Integer) , e.g {14:1,\r\n   | 16:2, 18:5}\r\n   | number of clusters for clustering at each time point.\r\n\r\n-  | **dBS**: dictionary\r\n   | key: timePoint, value: seed (Integer), e.g. {14:0, 16:0, 18:1}\r\n   | clustering seed for each time point\r\n\r\n-  **Example**:\r\n\r\n.. code:: python\r\n\r\n    import scdiff\r\n    from scdiff import *\r\n    Clustering_example=scdiff.Clustering(Cells,'auto',None)\r\n    [dCK,dBS]=Clustering_example.getClusteringPars()\r\n\r\n**Method**: `performClustering() <#clustering_performClustering>`__\r\n\r\n-  **Output**: Clusters instances (Clustering results), please check\r\n   `Cluster <#cluster>`__ for details. This function is used to cluster\r\n   all the nodes into clusters(Graph nodes).\r\n\r\n-  **Example**:\r\n\r\n.. code:: python\r\n\r\n    import scdiff \r\n    from scdiff import *\r\n    Clustering_example=scdiff.Clustering(Cells,'auto',None)\r\n    Clusters=Clustering_example.performClustering()\r\n\r\n| `scdiff.Cluster((Cells,TimePoint,Cluster\\_ID)) <#cluster>`__\\ \r\n| This class defines the node in the differentiation graph.\r\n\r\n**Parameters**:\r\n\r\n-  **Cells**: List of Cell `Cell <#cell>`__ instances.\r\n-  **TimePoint**: Integer\r\n   Initial Time Point for Cluster, it's the dominant measurement time\r\n   for all cells within the cluster.\r\n-  **Cluster\\_ID**: String\r\n   Cluster ID.\r\n\r\n**Method**: `getAvgEx() <#clusters_getAvgEx>`__:\r\n\r\n-  **Output**: List of float, this function calculates the average gene\r\n   expression of all cells in cluster.\r\n-  **Example**:\r\n\r\n.. code:: python\r\n\r\n    import scdiff \r\n    from scdiff import *\r\n    cluster1=scdiff.Cluster(Cells,14,'C1')\r\n    AvgEx=cluster1.getAvgEx()\r\n\r\n`scdiff.Path(fromNode,toNode,Nodes) <#path>`__\r\n\r\nThis class defines the edge in the differentiation graph.\r\n\r\n**Parameters**:\r\n\r\n-  | **fromNode**: Cluster\r\n   | The beginning end of an edge, Cluster instance\r\n\r\n-  **toNode**: Cluster The ending end of an edge, Cluster instance\r\n\r\n-  | **Nodes**: List of Cluster\r\n   | All Nodes in Graph.\r\n\r\n**Method**: `getFC() <#>`__:\r\n\r\n-  **Output**: Get the log fold change (2D List):\r\n   [[foldchange,geneIndex,fromEx,toEx],...] along the edge(Path), from\r\n   fromNode to toNode.\r\n\r\n**Method**: `getetf() <#>`__\r\n\r\n\r\n-  **Output**: Get the potential regulating TFs **[etf,dtf]** for given\r\n   edge (fromNode->toNode).\r\n-  **etf**: 2D List: [[p-value,TF\\_name],...], which represents the\r\n   regulating TFs and p-values for each edge\r\n-  **dtf**: 2D List: [[p-value,TF\\_name],...], sub-list of etf, which\r\n   represents the regulating TFs (and p-value) with different expression\r\n   for different differentiation paths.\r\n\r\n-  **example**:\r\n\r\n.. code:: python\r\n\r\n    import scdiff \r\n    from scdiff import *\r\n    C1=scdiff.Cluster(Cells_1,14,'C1')\r\n    C2=scdiff.Cluster(Cells_2,16,'C2')\r\n    AC=[C1,C2,...,Cn]\r\n    p1=scdiff.Path(C1,C2,AC)\r\n    fc=p1.getFC()\r\n    [etf,dtf]=p1.getetf()\r\n\r\nviz module\r\n----------\r\n\r\nThis module is designed to visualize the differentiation graph structure\r\nusing JavaScript.\r\n\r\n`viz.viz(exName,Graph,GeneNames,dTD,output) <#viz>`__\r\n\r\n**Parameters**:\r\n\r\n-  **exName**: String The name of the output visualization result.\r\n\r\n-  **Graph**: Graph Graph instance, please refer `Graph <#graph>`__.\r\n\r\n-  **GeneNames**: List of String\r\n\r\n-  **dTD**: Dictionary\r\n   Key: String, TF name.\r\n   Value: List of String, Gene name. e.g. {'NKX2-1':\r\n   ['SNX13','RAB30',...]}\r\n-  | **output**: String\r\n   | output directory name\r\n\r\n**Output**: a visualization folder with HTML page, JavaScript Code and\r\nGraph Structure in JSON format.\r\n\r\n**Example**:\r\n\r\n.. code:: python\r\n\r\n    import scdiff \r\n    from scdiff import *\r\n    exName='example'\r\n    output_directory='example_out'\r\n    GeneNames=['SNX13','RAB30',...]\r\n    dTD={'NKX2-1': ['SNX13','RAB30',...]}\r\n    g1=Graph(Cells,'auto',None)\r\n    viz.viz(exName,g1,GeneNames,dTD,output_directory)\r\n\r\nThen, you will find the visualized result page in HTML under\r\n'example\\_out' directory.\r\n\r\nEXAMPLES\r\n========\r\n\r\nRun scdiff on given time-series single cell RNA-seq data\r\n\r\n**1) Run with automatic config**\r\n\r\n.. code:: shell\r\n\r\n    $ scdiff -i <example.E> -t <example.tf_dna> -k auto -o <example_out>\r\n\r\n-  | **-i/--input**:\r\n   | **example.E** is the single cell RNA-seq dataset with following\r\n   | format (tab delimited)\r\n\r\n   ::\r\n\r\n       cell_ID time    cell_label  ex_gene1    ex_gene2    ... ex_geneN\r\n\r\n   -  cell\\_ID: ID of the cell.\r\n   -  time: measure time of the cell RNA-seq.\r\n   -  cell\\_lable: known label for the cell (if available) ,if not ,\r\n      denote as NA.\r\n   -  ex\\_genei: expression of gene i (log2 gene expression value). Gene\r\n      expression can be FPKM or RPM or any other acceptable gene\r\n      expression measurements.\r\n\r\n   Please read **example.E** for an example of acceptable time-series\r\n   single cell dataset format.\r\n\r\n-  | **-t/--tfdna**:\r\n   | **example.tf\\_dna** provides the TF-DNA interaction information\r\n   | used in this study (TF target inforamtion) with tab delimited format.\r\n\r\n   ::\r\n\r\n       TF  TF_target   Score\r\n\r\n   For example:\r\n\r\n   ::\r\n\r\n       ZNF238  TIMM8B  0.9\r\n       SOX9    TIMM8B  0.9\r\n       ZEB1    TIMM8B  0.9\r\n       GATA4   TIMM8B  0.9\r\n       CEBPA   RAB30   0.9\r\n       NKX2-1  RAB30   0.9\r\n       SRF RAB30   0.9\r\n       SOX5    RAB30   0.9\r\n       SRY RAB30   0.9\r\n       POU1F1  RAB30   0.9\r\n       POU2F1  RAB30   0.9\r\n       NFKB1   KRI1    0.9\r\n       E2F1    C11ORF35    0.9\r\n       DSP C11ORF35    0.9\r\n       ELSPBP1 C11ORF35    0.9\r\n       EGR2    C11ORF35    0.9\r\n       EGR1    C11ORF35    0.9\r\n       NR2F2   C11ORF35    0.9\r\n       LMO2    C11ORF35    0.9\r\n       ESR2    C11ORF35    0.9\r\n       HNF1A   C11ORF35    0.9\r\n       EGR3    C11ORF35    0.9\r\n\r\n   The TF-DNA directory provides the TF-DNA interaction file used in\r\n   this study.\r\n-  | **-k/--clusters**:\r\n   | This specifies the clustering parameter (String). It's need to be\r\n   | either 'auto' or path to the 'config' file. Here, 'auto' denotes the\r\n   | clustering parameters will be learned automatically.\r\n\r\n-  | **-o/--output**:\r\n   | **example\\_out** is the specified output directory.\r\n\r\n**2) Run with user-defined config**\r\n\r\n.. code:: shell\r\n\r\n    $scdiff -i <example.E>  -t <example.tf_dna> -k <example.config> -o <example_out>\r\n\r\nThe format of example.E and example.tf\\_dna are the same as described\r\nabove.\r\n\r\n**example.config** specifies the custom initial clustering parameters.\r\nThis was used when we have some prior knowledge. For example, if we know\r\nthey are how many sub-populations within each time, we can just directly\r\nspecify the clustering parameters using the example.config file, which\r\nprovides better performance.\r\n\r\nexample.config format(tab delimited)\r\n\r\n::\r\n\r\n    time    #_of_clusters\r\n\r\nFor example:\r\n\r\n::\r\n\r\n    14  1  \r\n    16  2  \r\n    18  5  \r\n\r\nHowever, if we don't have any prior knowledge about the sub-populations\r\nwithin each time point. We will just use the automatic initial\r\nclustering. :-k auto.\r\n\r\n**3) Run scdiff on large single cell dataset**\r\n\r\n.. code:: shell\r\n\r\n    $ scdiff -i <example.E> -t <example.tf_dna> -k auto -o <example_out> -l True -s True\r\n\r\n-i, -t, -k parameters were discussed above.\r\n\r\n-  | **-l/--large (optional)**\r\n   | String, if specified as 'True' or '1', scdiff will use LargeType\r\n   | mode to improve the running efficiency (both memory and time). The\r\n   | performance will be sacrificed to some extent. K-means will be used\r\n   | for Clustering instead of Spectral clustering.\r\n\r\n-  | **-s/--speedup (optional)**\r\n   | Speedup the convergence, it will reduce the running time\r\n   | significantly. This is highly recommended for large dataset. Based on\r\n   | testing on lung single cell dataset (Treutlein 2014), the speedup\r\n   | performance is just slightly worse (2 more cells were miss-assigned )\r\n\r\n**4) example running result**\r\n\r\n`example\\_out <http://www.cs.cmu.edu/~jund/scdiff/result/treutlein2014_lung/treutlein2014_lung.html>`__\r\n\r\n.. figure:: ./scdiff/img/example_out.jpg%20=1000x\r\n   :alt: example\\_out\\_fig\r\n\r\n\r\nCREDITS\r\n=======\r\n\r\n| This software was developed by ZIV-system biology group @ Carnegie Mellon University.\r\n| Implemented by Jun Ding\r\n\r\nLICENSE\r\n=======\r\n\r\n| This software is under MIT license.\r\n| see the LICENSE.txt file for details.\r\n\r\nCONTACT\r\n=======\r\n\r\n| zivbj at cs.cmu.edu\r\n| jund at cs.cmu.edu",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/phoenixding/scdiff/tree/master/scdiff",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scdiff",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/scdiff/",
    "release_url": "https://pypi.org/project/scdiff/1.1.4/",
    "requires_python": null,
    "summary": "Single Cell Differentiation Model package",
    "version": "1.1.4"
  },
  "releases": {
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "69929d79dca2ebf1dc815ad83f06a54b",
          "sha256": "449427d056bcb0a6ffc6f47c0246d663e5e4bb5656c6a0f5e682587f790bc11c"
        },
        "downloads": 0,
        "filename": "scdiff-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "69929d79dca2ebf1dc815ad83f06a54b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1107867,
        "upload_time": "2017-05-18T19:29:27",
        "url": "https://files.pythonhosted.org/packages/df/14/6fde5886af3557af1e35a9645e7f548ef8049809f764a8e325052751e032/scdiff-1.1.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "69929d79dca2ebf1dc815ad83f06a54b",
        "sha256": "449427d056bcb0a6ffc6f47c0246d663e5e4bb5656c6a0f5e682587f790bc11c"
      },
      "downloads": 0,
      "filename": "scdiff-1.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "69929d79dca2ebf1dc815ad83f06a54b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 1107867,
      "upload_time": "2017-05-18T19:29:27",
      "url": "https://files.pythonhosted.org/packages/df/14/6fde5886af3557af1e35a9645e7f548ef8049809f764a8e325052751e032/scdiff-1.1.4.tar.gz"
    }
  ]
}