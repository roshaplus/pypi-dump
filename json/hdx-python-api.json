{
  "info": {
    "author": "Michael Rans",
    "author_email": "rans@email.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "|Build_Status| |Coverage_Status|\n\n| The HDX Python Library is designed to enable you to easily develop\n  code that interacts with the Humanitarian Data Exchange platform. The\n  major goal of the library is to make pushing and pulling data from HDX\n  as simple as possible for the end user.\n| For more about the purpose and design philosophy, please visit `HDX\n  Python\n  Library <https://humanitarian.atlassian.net/wiki/display/HDX/HDX+Python+Library>`__.\n\n-  `Usage <#usage>`__\n-  `Getting Started <#getting-started>`__\n\n   -  `Obtaining your API Key <#obtaining-your-api-key>`__\n   -  `Installing the Library <#installing-the-library>`__\n   -  `Docker <#docker>`__\n   -  `A Quick Example <#a-quick-example>`__\n\n-  `Building a Project <#building-a-project>`__\n\n   -  `Default Configuration for\n      Facades <#default-configuration-for-facades>`__\n   -  `Facades <#facades>`__\n   -  `Customising the Configuration <#customising-the-configuration>`__\n   -  `Configuring Logging <#configuring-logging>`__\n   -  `Operations on HDX Objects <#operations-on-hdx-objects>`__\n   -  `Dataset Specific Operations <#dataset-specific-operations>`__\n\n      -  `Dataset Date <#dataset-date>`__\n      -  `Expected Update Frequency <#expected-update-frequency>`__\n      -  `Location <#location>`__\n      -  `Tags <#tags>`__\n      -  `Maintainer <#maintainer>`__\n      -  `Organization <#organization>`__\n\n   -  `Resource Specific Operations <#resource-specific-operations>`__\n   -  `User Management <#user-management>`__\n   -  `Organization Management <#organization-management>`__\n\n-  `Working Example <#working-example>`__\n-  `ACLED Example <#acled-example>`__\n\nUsage\n-----\n\nThe library has detailed API documentation which can be found\nhere:\u00a0\\ http://ocha-dap.github.io/hdx-python-api/. The code for the\nlibrary is here:\u00a0\\ https://github.com/ocha-dap/hdx-python-api.\n\nGetting Started\n---------------\n\nObtaining your API Key\n~~~~~~~~~~~~~~~~~~~~~~\n\nIf you just want to read data from HDX, then an API key is not necessary\nand you can ignore the 7 steps below. However, if you want to write data\nto HDX, then you need to register on the website to obtain an API key.\nYou can supply this key as an argument or create an API key file. If\nyou create an API key file, by default this is assumed to be called\n**.hdxkey** and is located in the current user's home directory **~**.\nAssuming you are using a desktop browser, the API key is obtained by:\n\n#. Browse to the\u00a0\\ `HDX website <https://data.humdata.org/>`__\n#. Left click on LOG IN in the top right of the web page if not logged\n   in and log in\n#. Left click on your username in the top right of the web page and\n   select PROFILE from the drop down menu\n#. Scroll down to the bottom of the profile page\n#. Copy the API key which will be of the form:\n   xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n#. To make an API key file, paste the API key into a text file\n#. Save the text file with filename **.hdxkey** in the current user's\n   home directory\n\nInstalling the Library\n~~~~~~~~~~~~~~~~~~~~~~\n\nTo include the HDX Python library in your project, you must\n**pip install** or add to your **requirements.txt** file the following\nline:\n\n::\n\n    hdx-python-api==VERSION\n\n| Replace **VERSION** with the latest tag available from\n  https://github.com/OCHA-DAP/hdx-python-api/tags.\n| If you get dependency errors, it is probably the dependencies of the\n  cryptography package that are missing eg. for Ubuntu: python-dev,\n  libffi-dev and libssl-dev. See `cryptography\n  dependencies <https://cryptography.io/en/latest/installation/#building-cryptography-on-linux>`__.\n\nDocker\n~~~~~~\n\nThe library is also available set up and ready to go in a Docker image:\n\n::\n\n    docker pull mcarans/hdx-python-api\n    docker run -i -t mcarans/hdx-python-api:latest python3\n\nA Quick Example\n~~~~~~~~~~~~~~~\n\n|A_Quick_Example|\n\nLet's start with a simple example that also ensures that the library is\nworking properly. In this tutorial, we use virtualenv, a sandbox, so\nthat your Python install is not modified.\n\n#. If you just want to read data from HDX, then an API key is not\n   necessary. However, if you want to write data to HDX, then you need\n   to register on the website to obtain an API key. Please see above\n   about where to find it on the website. Once you have it, then put it\n   into a file in your home directory:\n\n   ::\n\n       cd ~\n       echo xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx > .hdxkey\n\n#. If you are using the Docker image, you can jump to step 7, otherwise\n   install virtualenv if not installed:\n\n   ::\n\n       pip install virtualenv\n\nOn some Linux distributions, you can do the following instead to install\nfrom the distribution's official repository:\n\n::\n\n        sudo apt-get install virtualenv\n\n#. Create a Python 3 virtualenv and activate it:\n\nOn Windows (assuming the Python 3 executable is in your path):\n\n::\n\n        virtualenv test\n        test\\Scripts\\activate\n\nOn other OSs:\n\n::\n\n        virtualenv -p python3 test\n        source test/bin/activate\n\n#. Install the HDX Python library:\n\n   ::\n\n       pip install hdx-python-api\n\n#. If you get errors, it is probably the `dependencies of the\n   cryptography package <#installing-the-library>`__\n\n#. Launch python:\n\n   ::\n\n       python\n\n#. Import required classes:\n\n   ::\n\n       from hdx.hdx_configuration import Configuration\n       from hdx.data.dataset import Dataset\n\n#. Use configuration defaults.\n\n   If you only want to read data, then connect to the production HDX server:\n\n   ::\n\n       Configuration.create(hdx_site='prod', hdx_read_only=True)\n\n   If you want to write data, then for experimentation, do not use the production HDX server.\n   Instead you can use one of the test servers. Assuming you have an API key stored in a file\n   **.hdxkey** in the current user's home directory:\n\n   ::\n\n       Configuration.create(hdx_site='test')\n\n#. Read this dataset `ACLED Conflict Data for Africa (Realtime -\n   2016) <https://test-data.humdata.org/dataset/acled-conflict-data-for-africa-realtime-2016>`__\n   from HDX and view the date of the dataset:\n\n   ::\n\n       dataset = Dataset.read_from_hdx('acled-conflict-data-for-africa-realtime-2016')\n       print(dataset.get_dataset_date())\n\n#. If you have an API key, as a test, change the dataset date:\n\n   ::\n\n       dataset.set_dataset_date('2015-07-26', date_format='%Y-%m-%d')\n       print(dataset.get_dataset_date())\n       dataset.update_in_hdx()\n\n#. You can view it on HDX before changing it back (if you have an API\n   key):\n\n   ::\n\n       dataset.set_dataset_date('2016-06-25', date_format='%Y-%m-%d')\n       dataset.update_in_hdx()\n\n#. You can search for datasets on HDX and get their resources:\n\n   ::\n\n       datasets = Dataset.search_in_hdx('ACLED', rows=10)\n       print(datasets)\n       resources = Dataset.get_all_resources(datasets)\n       print(resources)\n\n#. You can download a resource in the dataset:\n\n   ::\n\n       url, path = resources[0].download()\n       print('Resource URL %s downloaded to %s' % (url, path))\n\n#. Exit and remove virtualenv:\n\n   ::\n\n       exit()\n       deactivate\n\n   On Windows:\n\n   ::\n\n       rd /s /q test\n\n   On other OSs:\n\n   ::\n\n       rm -rf test\n\nBuilding a Project\n------------------\n\nDefault Configuration for Facades\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe easiest way to get started is to use the facades and configuration\ndefaults. The facades set up both logging and HDX configuration.\n\nThe default configuration loads an internal HDX configuration located\nwithin the library, and assumes that there is an API key file called\n**.hdxkey** in the current user's home directory **~** and a YAML\nproject configuration located relative to your working directory at\n**config/project_configuration.yml** which you must create. The project\nconfiguration is used for any configuration specific to your project.\n\nThe default logging configuration reads a configuration file internal to\nthe library that sets up an coloured console handler outputting at DEBUG\nlevel and a file handler writing to errors.log at ERROR level.\n\nFacades\n~~~~~~~\n\nYou will most likely just need the simple facade. If you are in the HDX\nteam, you may need to use the ScraperWiki facade which\u00a0reports status to\nthat platform (in which case replace **simple** with **scraperwiki** in\nthe code below):\n\n::\n\n    from hdx.facades.simple import facade\n\n    def main():\n        ***YOUR CODE HERE***\n\n    if __name__ == '__main__':\n        facade(main)\n\nCustomising the Configuration\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt is possible to pass configuration parameters in the facade call eg.\n\n::\n\n    facade(main, hdx_site = HDX_SITE_TO_USE, hdx_read_only = ONLY_READ_NOT_WRITE, hdx_key_file = LOCATION_OF_HDX_KEY_FILE, hdx_config_yaml=PATH_TO_HDX_YAML_CONFIGURATION,\u00a0project_config_dict = {'MY_PARAMETER', 'MY_VALUE'})\n\nIf you do not use the facade, you can use the **create** method of the\n**Configuration** class directly, passing in appropriate keyword\narguments ie.\n\n::\n\n    from hdx.hdx_configuration import Configuration\n    ...\n    Configuration.create(KEYWORD ARGUMENTS)\n\n**KEYWORD ARGUMENTS** can be:\n\n+---------+-----------------------+----------------+---------------------------+-------------------------+\n| Choose  | Argument              | Type           | Value                     | Default                 |\n|         |                       |                |                           |                         |\n+=========+=======================+================+===========================+=========================+\n|         | hdx\\_site             | Optional[bool] | HDX site to use eg.       | test                    |\n|         |                       |                | prod, feature             |                         |\n+---------+-----------------------+----------------+---------------------------+-------------------------+\n| One of: | hdx\\_read\\_only       | bool           | Read only or read/write   | False                   |\n|         |                       |                | access to HDX             |                         |\n+---------+-----------------------+----------------+---------------------------+-------------------------+\n| or      | hdx\\_key              | Optional[str]  | HDX key                   |                         |\n+---------+-----------------------+----------------+---------------------------+-------------------------+\n| or      | hdx\\_key\\_file        | Optional[str]  | Path to HDX key file.     | ~/.hdxkey               |\n+---------+-----------------------+----------------+---------------------------+-------------------------+\n| One of: | hdx\\_config\\_dict     | dict           | HDX configuration         |                         |\n|         |                       |                | dictionary \u00a0              |                         |\n+---------+-----------------------+----------------+---------------------------+-------------------------+\n| or      | hdx\\_config\\_json     | str            | Path to JSON HDX          | \u00a0                       |\n|         |                       |                | configuration             |                         |\n+---------+-----------------------+----------------+---------------------------+-------------------------+\n| or      | hdx\\_config\\_yaml     | str            | Path to YAML HDX          | Library's internal      |\n|         |                       |                | configuration             | hdx\\_configuration.yml  |\n+---------+-----------------------+----------------+---------------------------+-------------------------+\n| One of: | project\\_config\\_dict | dict           | Project configuration     | \u00a0                       |\n|         |                       |                | dictionary                |                         |\n+---------+-----------------------+----------------+---------------------------+-------------------------+\n| or      | project\\_config\\_json | str            | Path to JSON Project      | \u00a0                       |\n|         |                       |                | configuration             |                         |\n+---------+-----------------------+----------------+---------------------------+-------------------------+\n| or      | project\\_config\\_yaml | str            | Path to YAML Project      |                         |\n|         |                       |                | configuration             |                         |\n+---------+-----------------------+----------------+---------------------------+-------------------------+\n\nTo access the configuration, you use the **read** method of the\n**Configuration** class as follows:\n\n::\n\n    Configuration.read()\n\nFor more advanced users, there are methods to allow you to pass in\nyour own configuration object, remote CKAN object and list of valid\nlocations. See the API documentation for more information.\n\nThis global configuration is used by default by the library but can\nbe replaced by Configuration instances passed to the constructors\nof HDX objects like Dataset eg.\n\n::\n\n    configuration = Configuration(KEYWORD ARGUMENTS)\n    configuration.setup_remoteckan(REMOTE CKAN OBJECT)\n    configuration.setup_validlocations(LIST OF VALID LOCATIONS)\n    dataset = Dataset(configuration=configuration)\n\nConfiguring Logging\n~~~~~~~~~~~~~~~~~~~\n\nIf you wish to change the logging configuration from the defaults, you\nwill need to call\u00a0\\ **setup_logging**\u00a0with arguments unless you have\nused the simple or ScraperWiki facades, in which case you must update\nthe **hdx.facades** module variable\u00a0\\ **logging_kwargs** before\nimporting the facade.\n\nIf not using facade:\n\n::\n\n    from hdx.hdx_logging import setup_logging\n    ...\n    logger = logging.getLogger(__name__)\n    setup_logging(KEYWORD ARGUMENTS)\n\nIf using facade:\n\n::\n\n    from hdx.facades import logging_kwargs\n\n    logging_kwargs.update(DICTIONARY OF KEYWORD ARGUMENTS)\n    from hdx.facades.simple import facade\n\n**KEYWORD\u00a0ARGUMENTS** can be:\n\n+-----------+-----------------------+------+--------------------------+----------------------------+\n| Choose    | Argument              | Type | Value                    | Default                    |\n|           |                       |      |                          |                            |\n+===========+=======================+======+==========================+============================+\n| One of:   | logging\\_config\\_dict | dict | Logging configuration    |                            |\n|           |                       |      | dictionary               |                            |\n+-----------+-----------------------+------+--------------------------+----------------------------+\n| or        | logging\\_config\\_json | str  | Path to JSON Logging     |                            |\n|           |                       |      | configuration            |                            |\n+-----------+-----------------------+------+--------------------------+----------------------------+\n| or        | logging\\_config\\_yaml | str  | Path to YAML Logging     | Library's internal         |\n|           |                       |      | configuration            | logging\\_configuration.yml |\n+-----------+-----------------------+------+--------------------------+----------------------------+\n| One of:   | smtp\\_config\\_dict    | dict | Email Logging            |                            |\n|           |                       |      | configuration dictionary |                            |\n+-----------+-----------------------+------+--------------------------+----------------------------+\n| or        | smtp\\_config\\_json    | str  | Path to JSON Email       |                            |\n|           |                       |      | Logging configuration    |                            |\n+-----------+-----------------------+------+--------------------------+----------------------------+\n| or        | smtp\\_config\\_yaml    | str  | Path to YAML Email       |                            |\n|           |                       |      | Logging configuration    |                            |\n+-----------+-----------------------+------+--------------------------+----------------------------+\n\nDo not supply **smtp_config_dict**, **smtp_config_json** or\n**smtp_config_yaml** unless you are using the default logging\nconfiguration!\n\nIf you are using the default logging configuration, you have the option\nto have a default SMTP handler that sends an email in the event of a\nCRITICAL error by supplying either **smtp_config_dict**,\n**smtp_config_json** or **smtp_config_yaml**. Here is a template of a\nYAML file that can be passed as the **smtp_config_yaml** parameter:\n\n::\n\n    handlers:\n        error_mail_handler:\n            toaddrs: EMAIL_ADDRESSES\n            subject: \"RUN FAILED: MY_PROJECT_NAME\"\n\nUnless you override it, the mail server **mailhost** for the default\nSMTP handler is **localhost** and the from address **fromaddr** is\n**noreply@localhost**.\n\nTo use logging in your files, simply add the line below to the top of\neach Python file:\n\n::\n\n    logger = logging.getLogger(__name__)\n\nThen use the logger like this:\n\n::\n\n    logger.debug('DEBUG message')\n    logger.info('INFORMATION message')\n    logger.warning('WARNING message')\n    logger.error('ERROR message')\n    logger.critical('CRITICAL error message')\n\nOperations on HDX Objects\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can read an existing HDX object with the\nstatic\u00a0\\ **read_from_hdx**\u00a0method which takes an identifier parameter\nand returns the an object of the appropriate HDX object type eg.\n**Dataset** or **None** depending upon whether the object was read eg.\n\n::\n\n    dataset = Dataset.read_from_hdx('DATASET_ID_OR_NAME')\n\nYou can search for datasets and resources in HDX using the\n**search_in_hdx** method which takes a query parameter and returns the a\nlist of objects of the appropriate HDX object type eg. **list[Dataset]**\neg.\n\n::\n\n    datasets = Dataset.search_in_hdx('QUERY', **kwargs)\n\nThe query parameter takes a different format depending upon whether it\nis for a\n`dataset <http://docs.ckan.org/en/ckan-2.3.4/api/index.html#ckan.logic.action.get.package_search>`__\nor a\n`resource <http://docs.ckan.org/en/ckan-2.3.4/api/index.html#ckan.logic.action.get.resource_search>`__.\nThe resource level search is limited to fields in the resource, so in\nmost cases, it is preferable to search for datasets and then get their\nresources.\n\nVarious additional arguments (``**kwargs``) can be supplied. These are\ndetailed in the API documentation. The rows parameter for datasets\n(limit for resources) is the maximum number of matches returned and is\nby default everything.\n\nYou can create an HDX Object, such as a dataset, resource, showcase,\norganization or user by calling the constructor with an optional\ndictionary containing metadata. For example:\n\n::\n\n    from hdx.data.dataset import Dataset\n\n    dataset = Dataset({\n        'name': slugified_name,\n        'title': title\n    })\n\nThe dataset name should not contain special characters and hence if\nthere is any chance of that, then it needs to be slugified. Slugifying\nis way of making a string valid within a URL (eg. **ae** replaces\n**\u00e4**). There are various packages that can do this eg.\n`awesome-slugify <https://pypi.python.org/pypi/awesome-slugify>`__.\n\nYou can add metadata using the standard Python dictionary square\nbrackets eg.\n\n::\n\n    dataset['name'] = 'My Dataset'\n\nYou can also do so by the standard dictionary\u00a0\\ **update**\u00a0method, which\ntakes a dictionary eg.\n\n::\n\n    dataset.update({'name': 'My Dataset'})\n\nLarger amounts of static metadata are best added from files. YAML is\nvery human readable and recommended, while JSON is also accepted eg.\n\n::\n\n    dataset.update_from_yaml([path])\n\n    dataset.update_from_json([path])\n\nThe default path if unspecified is **config/hdx_TYPE_static.yml**\u00a0for\nYAML and **config/hdx_TYPE_static.json**\u00a0for JSON where\u00a0TYPE is an HDX\nobject's type like dataset or resource eg.\n**config/hdx_showcase_static.json**. The YAML file takes the\nfollowing form:\n\n::\n\n    owner_org: \"acled\"\n    maintainer: \"acled\"\n    ...\n    tags:\n        - name: \"conflict\"\n        - name: \"political violence\"\n    resources:\n        -\n          description: \"Resource1\"\n          url: \"http://resource1.xlsx\"\n          format: \"xlsx\"\n    ...\n\nNotice how you can define resources (each resource starts with a dash\n'-') within the file as shown above.\n\nYou can check if all the fields required by HDX are populated by\ncalling\u00a0\\ **check_required_fields**. This will throw an exception if any\nfields are missing. Before the library posts data to HDX, it will call\nthis method automatically. You can provide a list of fields to ignore in\nthe check. An example usage:\n\n::\n\n    resource.check_required_fields([ignore_fields])\n\nOnce the HDX object is ready ie. it has all the required metadata, you\nsimply call\u00a0\\ **create_in_hdx**\u00a0eg.\n\n::\n\n    dataset.create_in_hdx()\n\nExisting HDX objects can be updated by calling\u00a0\\ **update_in_hdx**\u00a0eg.\n\n::\n\n    dataset.update_in_hdx()\n\nYou can delete HDX objects using\u00a0\\ **delete_from_hdx**\u00a0and update an\nobject that already exists in HDX with the method\u00a0\\ **update_in_hdx**.\nThese do not take any parameters or return anything and throw exceptions\nfor failures like the object to delete or update not existing.\n\nDataset Specific Operations\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nA dataset can have resources and can be in a showcase.\n\nIf you wish to add resources, you can supply a list and\ncall the\u00a0\\ **add_update_resources***\u00a0function, for example:\n\n::\n\n    resources = [{\n        'name': xlsx_resourcename,\n        'format': 'xlsx',\n        'url': xlsx_url\n     }, {\n        'name': csv_resourcename,\n        'format': 'zipped csv',\n        'url': csv_url\n     }]\n     for resource in resources:\n         resource['description'] = resource['url'].rsplit('/', 1)[-1]\n     dataset.add_update_resources(resources)\n\nCalling\u00a0\\ **add_update_resources**\u00a0creates a list of HDX Resource\nobjects in dataset and operations can be performed on those objects.\n\nTo see the list of resources, you use the\n\\ **get_resources***\u00a0function eg.\n\n::\n\n    resources = dataset.get_resources()\n\nIf you wish to add one resource, you can supply an id string,\ndictionary or Resource object and call the\n\\ **add_update_resource***\u00a0function, for example:\n\n::\n\n    dataset.add_update_resource(resource)\n\nYou can delete a Resource object from the dataset using\u00a0the\n\\ **delete_resource***\u00a0function, for example:\n\n::\n\n    dataset.delete_resource(resource)\n\nYou can get all the resources from a list of datasets as follows:\n\n::\n\n    resources = Dataset.get_all_resources(datasets)\n\nTo see the list of showcases a dataset is in, you use the\n\\ **get_showcases***\u00a0function eg.\n\n::\n\n    resources = dataset.get_showcases()\n\nIf you wish to add the dataset to a showcase, you must first create\nthe showcase in HDX if it does not already exist:\n\n::\n\n    showcase = Showcase({'name': 'new-showcase-1',\n                         'title': 'MyShowcase1',\n                         'notes': 'My Showcase',\n                         'package_id': '6f36a41c-f126-4b18-aaaf-6c2ddfbc5d4d',\n                         'image_display_url': 'http://myvisual/visual.png',\n                         'url': 'http://visualisation/url/'})\n    showcase.create_in_hdx()\n\nThen you can supply an id, dictionary or Showcase object and call\nthe \\ **add_showcase***\u00a0function, for example:\n\n::\n\n    dataset.add_showcase(showcase)\n\nYou can remove the dataset from a showcase using\u00a0the\n\\ **remove_showcase***\u00a0function, for example:\n\n::\n\n    dataset.remove_showcase(showcase)\n\n\nDataset Date\n^^^^^^^^^^^^\n\nDataset date is a mandatory field in HDX. This date is the date of the\ndata in the dataset, not to be confused with when data was last\nadded/changed in the dataset. It can be a single date or a range.\n\nTo determine if a dataset date is a single date or range you can call:\n\n::\n\n    dataset.get_dataset_date_type()\n\nIt returns 'date' for a single date or 'range' for a date range.\n\nTo get the dataset start date of a range or single date as a string, you can do as shown below. You can\nsupply a `date\nformat <https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior>`__.\nIf you don't, the output format will be an `ISO 8601\ndate <https://en.wikipedia.org/wiki/ISO_8601>`__ eg. 2007-01-25.\n\n::\n\n    dataset_date = dataset.get_dataset_date('FORMAT')\n\n\nTo get the dataset end date of a range, you call:\n\n::\n\n    dataset_date = dataset.get_dataset_end_date('FORMAT')\n\n\nTo set the dataset date, you pass a start date and end date for a range or just a start date for a single date. If you\ndo not supply any dates format, the method will try to guess, which for unambiguous formats\nshould be fine.\n\n::\n\n    dataset.set_dataset_date('START DATE', 'END DATE', 'FORMAT')\n\nTo retrieve the dataset date or range as a **datetime.datetime** object, you can\ndo:\n\n::\n\n    dataset_date = dataset.get_dataset_date_as_datetime()\n    dataset_date = dataset.get_dataset_end_date_as_datetime()\n\nThe method below allows you to set the dataset's date using a\n**datetime.datetime** object:\n\n::\n\n    dataset.set_dataset_date_from_datetime(START DATETIME.DATETIME OBJECT, END DATETIME.DATETIME OBJECT)\n\nExpected Update Frequency\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nHDX datasets have a mandatory field, the expected update frequency. This\nis your best guess of how often the dataset will be updated.\n\nThe HDX web interface uses set frequencies:\n\n::\n\n    Every day\n    Every week\n    Every two weeks\n    Every month\n    Every three months\n    Every six months\n    Every year\n    Never\n\nAlthough the API allows much greater granularity (a number of days), you\nare encouraged to use the options above (avoiding using **Never** if\npossible). To assist with this, you can use methods that allow this.\n\nThe following method will return a textual expected update frequency\ncorresponding to what would be shown in the HDX web interface.\n\n::\n\n    update_frequency = dataset.get_expected_update_frequency()\n\nThe method below allows you to set the dataset's expected update\nfrequency using one of the set frequencies above. (It also allows you to\npass a number of days cast to a string, but this is discouraged.)\n\n::\n\n    dataset.set_expected_update_frequency('UPDATE_FREQUENCY')\n\nTransforming backwards and forwards between representations can be\nachieved with this function:\n\n::\n\n    update_frequency = Dataset.transform_update_frequency('UPDATE_FREQUENCY')\n\nLocation\n^^^^^^^^\n\nEach HDX dataset must have at least one location associated with it.\n\nIf you wish to get the current location (ISO 3 country codes), you can\ncall the method below:\n\n::\n\n    locations = dataset.get_location()\n\n\nIf you want to add a country, you do as shown below. If you don't\nprovide an ISO 3 country code, the text you give will be parsed and\nconverted to an ISO 3 code if it is a valid country name.\n\n::\n\n    dataset.add_country_location('ISO 3 COUNTRY CODE')\n\nIf you want to add a list of countries, the following method enables you\nto do it. If you don't provide ISO 3 country codes, conversion will take\nplace where valid country names are found.\n\n::\n\n    dataset.add_country_locations(['ISO 3','ISO 3','ISO 3'...])\n\nIf you want to add a continent, you do it as follows. If you don't\nprovide a two letter continent code, then parsing and conversion will\noccur if a valid continent name is supplied.\n\n::\n\n    dataset.add_continent_location('TWO LETTER CONTINENT CODE')\n\nIf you want to add any other kind of location (which must be in this\n\\ `list of valid locations <https://data.humdata.org/api/action/group_list?all_fields=true>`__), you do as shown below.\n\n::\n\n    dataset.add_other_location('LOCATION')\n\nTags\n^^^^\n\nHDX datasets can have tags which help people to find them eg. \"COD\",\n\"PROTESTS\".\n\nIf you wish to get the current tags, you can use this method:\n\n::\n\n    tags = dataset.get_tags()\n\n\nIf you want to add a tag, you do it like this:\n\n::\n\n    dataset.add_tag('TAG')\n\nIf you want to add a list of tags, you do it as follows:\n\n::\n\n    dataset.add_tags(['TAG','TAG','TAG'...])\n\nMaintainer\n^^^^^^^^^^\n\nHDX datasets must have a maintainer.\n\nIf you wish to get the current maintainer, you can do this:\n\n::\n\n    maintainer = dataset.get_maintainer()\n\nIf you want to set the maintainer, you do it like this:\n\n::\n\n    dataset.set_maintainer(USER)\n\nUSER is either a string id, dictionary or a User object.\n\nOrganization\n^^^^^^^^^^^^\n\nHDX datasets must be part of an organization.\n\nIf you wish to get the current organization, you can do this:\n\n::\n\n    organization = dataset.get_organization()\n\nIf you want to set the organization, you do it like this:\n\n::\n\n    dataset.set_organization(ORGANIZATION)\n\nORGANIZATION is either a string id, dictionary or an Organization object.\n\nResource Specific Operations\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can download a resource using the **download** function eg.\n\n::\n\n    url, path = resource.download('FOLDER_TO_DOWNLOAD_TO')\n\nIf you do not supply **FOLDER_TO_DOWNLOAD_TO**, then a temporary folder\nis used.\n\nBefore creating or updating a resource, it is possible to specify the\npath to a local file to upload to the HDX filestore if that is preferred\nover hosting the file externally to HDX. Rather than the url of the\nresource pointing to your server or api, in this case the url will point\nto a location in the HDX filestore containing a copy of your file.\n\n::\n\n    resource.set_file_to_upload(file_to_upload='PATH_TO_FILE')\n\nThere is a getter to read the value back:\n\n::\n\n    file_to_upload = resource.get_file_to_upload()\n\nIf you wish to set up the data preview feature in HDX and your file (HDX\nor externally hosted) is a csv, then you can call the\n**create_datastore** or **update_datastore** methods. If you do not pass\nany parameters, all fields in the csv will be assumed to be text.\n\n::\n\n    resource.create_datastore()\n    resource.update_datastore()\n\nMore fine grained control is possible by passing certain parameters and\nusing other related methods eg.\n\n::\n\n    resource.create_datastore(schema={'id': 'FIELD', 'type': 'TYPE'}, primary_key='PRIMARY_KEY_OF_SCHEMA', delete_first=0 (No) / 1 (Yes) / 2 (If no primary key), path='LOCAL_PATH_OF_UPLOADED_FILE') -> None:\n    resource.create_datastore_from_yaml_schema(yaml_path='PATH_TO_YAML_SCHEMA', delete_first=0 (No) / 1 (Yes) / 2 (If no primary key), path='LOCAL_PATH_OF_UPLOADED_FILE')\n    resource.update_datastore(schema={'id': 'FIELD', 'type': 'TYPE'}, primary_key='PRIMARY_KEY_OF_SCHEMA', path='LOCAL_PATH_OF_UPLOADED_FILE') -> None:\n    resource.update_datastore_from_json_schema(json_path='PATH_TO_JSON_SCHEMA', path='LOCAL_PATH_OF_UPLOADED_FILE')\n\nUser Management\n~~~~~~~~~~~~~~~\n\nThe **User** class enables you to manage users, creating, deleting and\nupdating (as for other HDX objects) according to your permissions.\n\nYou can email a user. First you need to set up an email server using a\ndictionary or file:\n\n::\n\n    email_config_dict = {'connection_type': 'TYPE', 'host': 'HOST',\n                         'port': PORT, 'username': USERNAME,\n                         'password': PASSWORD}\n    Configuration.read().setup_emailer(email_config_dict=email_config_dict)\n\n\nThen you can email a user like this:\n\n::\n\n    user.email('SUBJECT', 'BODY', sender='SENDER EMAIL')\n\nYou can email multiple users like this:\n\n::\n\n    User.email_users(LIST_OF_USERS, 'SUBJECT', 'BODY', sender='SENDER EMAIL')\n\nOrganization Management\n~~~~~~~~~~~~~~~~~~~~~~~\n\nThe **Organization** class enables you to manage organizations,\ncreating, deleting and updating (as for other HDX objects)\naccording to your permissions.\n\nYou can get the datasets in an organization as follows:\n\n::\n\n    datasets = organization.get_datasets(**kwargs)\n\nVarious additional arguments (``**kwargs``) can be supplied. These are\ndetailed in the API documentation.\n\nYou can get the users in an organization like this:\n\n::\n\n    users = organization.get_users('OPTIONAL FILTER')\n\nOPTIONAL FILTER can be member, editor, admin.\n\nYou can add or update a user in an organization as shown below:\n\n::\n\n    organization.add_update_user(USER)\n\nYou need to include a capacity field in the USER where capacity is member,\neditor, admin.\n\nYou can add or update multiple users in an organization as follows:\n\n::\n\n    organization.add_update_users([LIST OF USERS])\n\nYou can delete a user from an organization:\n\n::\n\n    organization.delete_user('USER ID')\n\nWorking Example\n---------------\n\nHere we will create a working example from scratch.\n\nFirst, pip install the library or alternatively add it to a\nrequirements.txt file if you are comfortable with doing so as described\nabove.\n\nNext create a file called **run.py** and copy into it the code below.\n\n::\n\n    #!/usr/bin/python\n    # -*- coding: utf-8 -*-\n    '''\n    Calls a function that generates a dataset and creates it in HDX.\n\n    '''\n    import logging\n    from hdx.facades.scraperwiki import facade\n    from .my_code import generate_dataset\n\n    logger = logging.getLogger(__name__)\n\n\n    def main():\n        '''Generate dataset and create it in HDX'''\n\n        dataset = generate_dataset()\n        dataset.create_in_hdx()\n\n    if __name__ == '__main__':\n        facade(main, hdx_site='test')\n\nThe above file will create in HDX a dataset generated by a function\ncalled **generate_dataset** that can be found in the file **my_code.py**\nwhich we will now write.\n\nCreate a file **my_code.py** and copy into it the code below:\n\n::\n\n    #!/usr/bin/python\n    # -*- coding: utf-8 -*-\n    '''\n    Generate a dataset\n\n    '''\n    import logging\n    from hdx.data.dataset import Dataset\n\n    logger = logging.getLogger(__name__)\n\n\n    def generate_dataset():\n        '''Create a dataset\n        '''\n        logger.debug('Generating dataset!')\n\nYou can then fill out the function **generate_dataset** as required.\n\nACLED Example\n-------------\n\nA complete example can be found\nhere:\u00a0\\ https://github.com/mcarans/hdxscraper-acled-africa\n\nIn particular, take a look at the files **run.py**, **acled_africa.py**\nand the **config** folder. If you run it unchanged, it will conflict\nwith the existing dataset in the ACLED organisation! Therefore, you will\nneed to modify the dataset **name** in **acled_africa.py** and change\nthe organisation information such as **owner_org** to your organisation\nin **config/hdx_dataset_static.yml**.\n\nThe ACLED scraper creates a dataset in HDX for `ACLED realtime\ndata <https://data.humdata.org/dataset/acled-conflict-data-for-africa-realtime-2016>`__\nif it doesn't already exist, populating all the required metadata. It\nthen creates resources that point to urls of `Excel and csv files for\nRealtime 2016 All Africa\ndata <http://www.acleddata.com/data/realtime-data-2016/>`__ (or updates\nthe links and metadata if the resources already exist). Finally it\ncreates a showcase that points to these `dynamic maps and\ngraphs <http://www.acleddata.com/visuals/maps/dynamic-maps/>`__.\n\nThe first iteration of the ACLED scraper was written without the HDX\nPython library and it became clear looking at this and previous work by\nothers that there are operations that are frequently required and which\nadd unnecessary complexity to the task of coding against HDX.\nSimplifying the interface to HDX drove the development of the Python\nlibrary and the second iteration of the scraper was built using it. With\nthe interface using HDX terminology and mapping directly on to datasets,\nresources and showcases, the ACLED scraper was faster to develop and\nis much easier to understand for someone inexperienced in how it works\nand what it is doing. The challenge with ACLED is that sometimes the\nurls that the resources point to have not been updated and hence do not\nwork. In this situation, the extensive logging and transparent\ncommunication of errors is invaluable and enables action to be taken to\nresolve the issue as quickly as possible. The static metadata for ACLED\nis held in human readable files so if it needs to be modified, it is\nstraightforward. This is another feature of the HDX Python library that\nmakes putting data programmatically into HDX a breeze.\n\n.. |Build_Status| image:: https://travis-ci.org/OCHA-DAP/hdx-python-api.svg?branch=master\n    :alt: Travis-CI Build Status\n    :target: https://travis-ci.org/OCHA-DAP/hdx-python-api\n.. |Coverage_Status| image:: https://coveralls.io/repos/github/OCHA-DAP/hdx-python-api/badge.svg?branch=master\n    :alt: Coveralls Build Status\n    :target: https://coveralls.io/github/OCHA-DAP/hdx-python-api?branch=master\n.. |A_Quick_Example| image:: https://humanitarian.atlassian.net/wiki/download/attachments/6356996/HDXPythonLibrary.gif?version=1&modificationDate=1469520811486&api=v2\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/OCHA-DAP/hdx-python-api",
    "keywords": "HDX,API,library",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hdx-python-api",
    "platform": "",
    "project_url": "https://pypi.org/project/hdx-python-api/",
    "release_url": "https://pypi.org/project/hdx-python-api/2.1.3/",
    "requires_dist": [
      "typing",
      "tabulator",
      "six",
      "scraperwiki",
      "requests",
      "python-dateutil",
      "pyasn1",
      "pyaml",
      "pyOpenSSL",
      "ndg-httpsclient",
      "geonamescache",
      "email-validator",
      "colorlog",
      "ckanapi",
      "basicauth"
    ],
    "requires_python": "",
    "summary": "HDX Python Library",
    "version": "2.1.3"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "adf3e37c60bdc9ed556665c903fb024c",
          "sha256": "b9f428c5156eb4c51af132f0c97e0853eaff409a264d090749cdf4a19d17b9a3"
        },
        "downloads": 14,
        "filename": "hdx_python_api-1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "adf3e37c60bdc9ed556665c903fb024c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 49944,
        "upload_time": "2017-03-29T15:48:15",
        "url": "https://files.pythonhosted.org/packages/fa/af/d685c4390b63dd6a96baa9781030cfa00f3b6f2c0cfe861c4de8c7de5bd2/hdx_python_api-1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ed2fa8094db27a83dcb6b1831b0c7b94",
          "sha256": "aa6c395a14139c4cf1cfd009d4bc4cbbde3162640ae48d3ac9e8a19c0567b977"
        },
        "downloads": 14,
        "filename": "hdx-python-api-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ed2fa8094db27a83dcb6b1831b0c7b94",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 81799,
        "upload_time": "2017-03-29T15:48:17",
        "url": "https://files.pythonhosted.org/packages/93/5a/27811e52dfad585bdfa402b3ad01d24f5e3f0910ff2b70b7e89731ea898c/hdx-python-api-1.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b51538b8462184005e129388d0c111f7",
          "sha256": "8afd4420858e275938bbc43d7f8761a267b39cf20bd2247b4125ae7198a2788c"
        },
        "downloads": 16,
        "filename": "hdx_python_api-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b51538b8462184005e129388d0c111f7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 50194,
        "upload_time": "2017-03-31T12:46:55",
        "url": "https://files.pythonhosted.org/packages/ff/96/17461434faaa036a37e4910229dc3a29d684e8b261cbb52897340e5b3f79/hdx_python_api-1.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1ef35a9858e3cdd68dc9fd0ecae60630",
          "sha256": "4facc285e90e18c3769b2b4bc65df8ce3ce57cb31bd3adfd77af4ed804c5b708"
        },
        "downloads": 16,
        "filename": "hdx-python-api-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1ef35a9858e3cdd68dc9fd0ecae60630",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 82209,
        "upload_time": "2017-03-31T12:46:57",
        "url": "https://files.pythonhosted.org/packages/11/c7/9517d10ee904f34955fec58bbfd2807d33f9219ee48d1ed3a38e087b4a48/hdx-python-api-1.0.1.tar.gz"
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b598d4bc53a19780a8e4b57d1aa45706",
          "sha256": "1227f214336886f0eed150e041bc2e914bdf169375990751f0b0e75e9dc190e3"
        },
        "downloads": 170,
        "filename": "hdx_python_api-1.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b598d4bc53a19780a8e4b57d1aa45706",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 50526,
        "upload_time": "2017-04-07T14:39:36",
        "url": "https://files.pythonhosted.org/packages/df/0c/44217657ef3e36a9eed68689501a0c6668b26611445b695d49e39688f92e/hdx_python_api-1.0.5-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ffa27d8f1c419be1572a672b886785b4",
          "sha256": "6b52ec1fd510fb42ee3c4a34a204af539d1185ddc7acf5a40201ce33b3623965"
        },
        "downloads": 174,
        "filename": "hdx-python-api-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ffa27d8f1c419be1572a672b886785b4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 83014,
        "upload_time": "2017-04-07T14:39:39",
        "url": "https://files.pythonhosted.org/packages/f4/60/05288ef4c2e1f61365bf1af86e91614e5cabbd98f6e8d92f1ba3d9a457e6/hdx-python-api-1.0.5.tar.gz"
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3a2a338c09aa634ce0a0f56c475e86de",
          "sha256": "a40026e628f36b1bc8cdde7ec4455a2ce99a518641119dd2e4788a1621982a88"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a2a338c09aa634ce0a0f56c475e86de",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 50647,
        "upload_time": "2017-04-19T12:31:16",
        "url": "https://files.pythonhosted.org/packages/66/70/615701b0b6ca19720c195702d1c790ca8c22f634debdc703d2fbb9e3aea6/hdx_python_api-1.0.6-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "77b0e0e23b591ac84740eb410f7a2f27",
          "sha256": "0cd7306e2e769ea78b017cfe792f8d421f9e97ff158e212f5e0238d3d93b8e69"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "77b0e0e23b591ac84740eb410f7a2f27",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 83252,
        "upload_time": "2017-04-19T12:31:19",
        "url": "https://files.pythonhosted.org/packages/15/74/e9e2df79c3def60fe1d23076725f3f4dda7b4cf70989267cf16c03a033ff/hdx-python-api-1.0.6.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "839ac1f89efa94ccd65087042ccde56e",
          "sha256": "42adc05d58573585279e6f8a80dd84508941bb3e32f01c6487bac42c3133eb3d"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "839ac1f89efa94ccd65087042ccde56e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 51821,
        "upload_time": "2017-04-24T16:17:08",
        "url": "https://files.pythonhosted.org/packages/ce/90/a7ed7015a0ee1118efb9be66e6360ce53eb727aa730cfc8fb965fc1894ee/hdx_python_api-1.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3449af1322f8742b70906381e01b63b5",
          "sha256": "d78d9cdb91776039cb0d73dce293b6ee237fdaae5c5d438866c9c299201ca0f2"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3449af1322f8742b70906381e01b63b5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 89512,
        "upload_time": "2017-04-24T16:17:10",
        "url": "https://files.pythonhosted.org/packages/df/77/88599e010b287afe1f65edcdb5f924262a6c1b6c17159b7363f79b762e33/hdx-python-api-1.1.0.tar.gz"
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d1fd9c69f0c0ce8e0d44d29b86b7db36",
          "sha256": "3bfe661d44f3971506de4a95b38b4c84ec21b0658e2f9fdc39d310e28c2f2b3d"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1fd9c69f0c0ce8e0d44d29b86b7db36",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 52715,
        "upload_time": "2017-04-28T09:51:20",
        "url": "https://files.pythonhosted.org/packages/c0/f7/0437fd0c6f8fa115c4959d45d7965cc2a3249cd3ba8f12274e5e4573b741/hdx_python_api-1.1.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7e458267e335eba33c84b844ffd3c2b9",
          "sha256": "6be56b73532f07e2004b09d63a95c7715b3727255f7b2d3146dead9e41987582"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7e458267e335eba33c84b844ffd3c2b9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 91890,
        "upload_time": "2017-04-28T09:51:22",
        "url": "https://files.pythonhosted.org/packages/99/b1/1e74b446603533c93ed689398a1944ba970d8914eff2810ee1fba61d6792/hdx-python-api-1.1.1.tar.gz"
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "47922744483f820114003032f929acc0",
          "sha256": "4229d8dfa18e16043e0e78a21ca7218fd7caab8835d364818bd830f64fb07014"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47922744483f820114003032f929acc0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 52819,
        "upload_time": "2017-05-01T07:36:11",
        "url": "https://files.pythonhosted.org/packages/6f/76/78c43ce82027e314ef74d59b546a1fe0503f3a6dd912506f230e9023082c/hdx_python_api-1.1.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c8941a9a65177ae378c064ccd3cb80d9",
          "sha256": "4cf6f03d7f33d7a3e3bcbb51ab0558d5dc3be19a390b82b873139d8f5a17df83"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c8941a9a65177ae378c064ccd3cb80d9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 92417,
        "upload_time": "2017-05-01T07:36:13",
        "url": "https://files.pythonhosted.org/packages/c1/a0/eb462563538a235767f3ab11027449d3c19c83519a0c592246f5263fac38/hdx-python-api-1.1.2.tar.gz"
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "711dda4ef76f59b793d22e4e2df4f529",
          "sha256": "63e775b11986d1ecc6557f54645034763e20c7079149fb787fd49ce36d24ce50"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "711dda4ef76f59b793d22e4e2df4f529",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 53312,
        "upload_time": "2017-05-01T10:03:17",
        "url": "https://files.pythonhosted.org/packages/92/73/0c8d76586d6e99b6a2faf419f87b2868fb0fd9c0e2e34c2628dc1aa7c468/hdx_python_api-1.1.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "20a7f8449f609f490481beb8e5984be8",
          "sha256": "68070384a87e40037ee43a997b58cc300bd8974ca7c58e6a8a1dca33be422c93"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "20a7f8449f609f490481beb8e5984be8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 93315,
        "upload_time": "2017-05-01T10:03:20",
        "url": "https://files.pythonhosted.org/packages/52/38/b982308c88222d0f20468fabeec8d260c3710c655de1a95022436cced181/hdx-python-api-1.1.3.tar.gz"
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f7671f9d895db86e62e9a5cd80a146ec",
          "sha256": "67848c129691d5569a01035f601faa9107cdf02bde9a1f5adccdad8740369989"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7671f9d895db86e62e9a5cd80a146ec",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 53334,
        "upload_time": "2017-05-01T11:42:47",
        "url": "https://files.pythonhosted.org/packages/79/4a/607f6a32530866268ffe7ad797300ce1a1a10e8e4657d92dac26fd926288/hdx_python_api-1.2.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "72d65b3df0687490a29a61d94e4e1423",
          "sha256": "5904e6e011768eba17288690568d8d497f1310c8c9b1a9a309680181e438a564"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "72d65b3df0687490a29a61d94e4e1423",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 93526,
        "upload_time": "2017-05-01T11:42:50",
        "url": "https://files.pythonhosted.org/packages/1c/89/6a05c640021b2cb0aa94b781be1021a662c3a06fd17ebe4ad5fe930a1d62/hdx-python-api-1.2.0.tar.gz"
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2de23907a08c07e43d26db057384243b",
          "sha256": "4bb9b99401c5e2c4e0ac3d6483dfe06f9e790e53e2011580028914b347671e08"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2de23907a08c07e43d26db057384243b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 53855,
        "upload_time": "2017-05-02T12:06:58",
        "url": "https://files.pythonhosted.org/packages/5f/c8/e8f2fc29ae60f58baba357f8b155a63f0ce94e176f67cfea5d2900b43d69/hdx_python_api-1.2.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e4548597e3729b14de13d8bd29791dbd",
          "sha256": "bb845aecacc703907ccbfc1fc53ea53531a614305067041b8f001a1639bf13e4"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e4548597e3729b14de13d8bd29791dbd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 94192,
        "upload_time": "2017-05-02T12:07:00",
        "url": "https://files.pythonhosted.org/packages/a3/90/7ef589e6319bad38667b9c84a87ae2da4737821f31f509d838a37076de47/hdx-python-api-1.2.1.tar.gz"
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "07df4301a7069e721c1d3f128f27a74c",
          "sha256": "0c48a771a0a5989cc1264d87866f27cd0dee7c22959c246640f7537c0eaae061"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "07df4301a7069e721c1d3f128f27a74c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 53997,
        "upload_time": "2017-05-08T08:32:10",
        "url": "https://files.pythonhosted.org/packages/67/e6/4554bb4521c4a053a50daa234dea8dc52958fe30cd0e65428f47c0c12890/hdx_python_api-1.2.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "643a3cfb9736a62c0811825ca735da39",
          "sha256": "cf594ac58c1130b87d753d117642b9ab2a7f68b727f0651c34f858247a99891f"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "643a3cfb9736a62c0811825ca735da39",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 94489,
        "upload_time": "2017-05-08T08:32:13",
        "url": "https://files.pythonhosted.org/packages/d6/dc/2f2d25075ef36d7bf1d54c5499b9d862120d8d1e7b5bcdc5f6a441d535f4/hdx-python-api-1.2.2.tar.gz"
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f764616fbfd23c5b32a9ea03772ba08c",
          "sha256": "e9e6b6fc31713f0675394f2533436dbe727e3173a1e72f9cda65cce0726c396c"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.2.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f764616fbfd23c5b32a9ea03772ba08c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 54087,
        "upload_time": "2017-05-08T11:06:23",
        "url": "https://files.pythonhosted.org/packages/fe/3e/86e4454d54dae8103fb50a65f999f749e2f0f274bcd776f35e7a75177e98/hdx_python_api-1.2.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7053e3290e43ada9e48cb1ab0730d323",
          "sha256": "77dda2ee995330dcf974229d15d5572e0ab155877571cf1f60e639d6390dbc45"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7053e3290e43ada9e48cb1ab0730d323",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 94517,
        "upload_time": "2017-05-08T11:06:25",
        "url": "https://files.pythonhosted.org/packages/fa/9c/437a15cffd28b4d192aef15b670bf99185b71221ef5f0f2732969511ce9c/hdx-python-api-1.2.3.tar.gz"
      }
    ],
    "1.2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "10989bec720d5c287aca77a3db6583f7",
          "sha256": "087a39ab629603ea57c8bc7b0d48cd51bab8354bf001a63e0626d85bfbb58f1f"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.2.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10989bec720d5c287aca77a3db6583f7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 54074,
        "upload_time": "2017-05-08T11:11:39",
        "url": "https://files.pythonhosted.org/packages/92/f9/2b45dd4d5a37d6e8a730c88eecbb75d8e2979b3a6e820c5d351ba4088d0b/hdx_python_api-1.2.4-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "669893e82ea5db224d04da4572ebd1c6",
          "sha256": "bc544786b3d29a8e9284a280045642306fc21e439916c943e160217983df95a8"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "669893e82ea5db224d04da4572ebd1c6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 94500,
        "upload_time": "2017-05-08T11:11:41",
        "url": "https://files.pythonhosted.org/packages/16/f8/81f7d5194ce12f4faef386d99e3e2ba31f46314fc16ad20b75276d520b48/hdx-python-api-1.2.4.tar.gz"
      }
    ],
    "1.2.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4abcf359fce3d781a77a82403920b20f",
          "sha256": "f33afb02d6930806ab5361d5fb8a890261408cbb26af00312ff6036af887f8d2"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.2.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4abcf359fce3d781a77a82403920b20f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 54085,
        "upload_time": "2017-05-09T05:03:55",
        "url": "https://files.pythonhosted.org/packages/62/0e/cb9f31357a2e87e38e2900f3529c59844077d6b9c223f0c835bcf24a899e/hdx_python_api-1.2.5-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a33f491fff515b2a1ec2e3e6a0cda753",
          "sha256": "3ba7db319b63c186770a195593295b30db77e3e151db2d44740133a3b27931a7"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a33f491fff515b2a1ec2e3e6a0cda753",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 94527,
        "upload_time": "2017-05-09T05:03:58",
        "url": "https://files.pythonhosted.org/packages/d3/3e/faed0760ee421f8665a9571359e7e6d70eee77e2f4035364d5e84ab78c90/hdx-python-api-1.2.5.tar.gz"
      }
    ],
    "1.2.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b5be91177c62c906fb16cfe1f038af46",
          "sha256": "f7288826547e35e55b7c2f08f69a97ab637bdae0f6dcd25e8d9fd139762ea5dd"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.2.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5be91177c62c906fb16cfe1f038af46",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 54174,
        "upload_time": "2017-05-24T14:56:58",
        "url": "https://files.pythonhosted.org/packages/69/b0/00fd13ab68b67371a5bd503577da994d95696e3d5723ab0c4a78890c8d02/hdx_python_api-1.2.6-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6b5761bc49c64cc3a5c2b7af11f66cea",
          "sha256": "52d4344c8c939499a8ebb6a1a350c1b27d5563f9d2711ebfca6264757b287b74"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6b5761bc49c64cc3a5c2b7af11f66cea",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 94855,
        "upload_time": "2017-05-24T14:57:00",
        "url": "https://files.pythonhosted.org/packages/4f/bd/8924819f59d0bbb4e72ebfa99fb6689616c0caac59902aadebc8163f4896/hdx-python-api-1.2.6.tar.gz"
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "763ac1c10eddcf8d0c684803405ac380",
          "sha256": "b5407231bdd175aef118a7e32b58ed9b3ce03898074e5776b2ee8d88cc7c2903"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "763ac1c10eddcf8d0c684803405ac380",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 58389,
        "upload_time": "2017-06-13T09:59:21",
        "url": "https://files.pythonhosted.org/packages/00/d4/38be80058e06018c51abfcb749541a47227f3fc17f27e30dbaa8503eb3ba/hdx_python_api-1.3.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "31ba08b3ff2f01c036e17244abd458c1",
          "sha256": "be94fee8e0fa6fce05fc86e4715a0d0ab2e174a72641ff9a1e4163730a2846a6"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "31ba08b3ff2f01c036e17244abd458c1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 100930,
        "upload_time": "2017-06-13T09:59:23",
        "url": "https://files.pythonhosted.org/packages/19/67/bb21cf0ffbafc61d55840f874f05449bf48271dd5beabd1924bf714fa0b2/hdx-python-api-1.3.0.tar.gz"
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2005b5874081776d8f48787b231d3692",
          "sha256": "2709e800ac890d413c18aa7a293c8d2c8f754a77bf602056fd074f7567363ce0"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2005b5874081776d8f48787b231d3692",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 58411,
        "upload_time": "2017-06-13T10:22:40",
        "url": "https://files.pythonhosted.org/packages/d1/f2/26c4ad46699b009a44aac67013d143802378df60b0b9a09ad74403f41ffd/hdx_python_api-1.3.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e837955819118eb0063f8474deef09a0",
          "sha256": "e306d80a3d55d74778b1410d1de563734fb70e83e2cf411acd2c3443d1281b20"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e837955819118eb0063f8474deef09a0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 100928,
        "upload_time": "2017-06-13T10:22:42",
        "url": "https://files.pythonhosted.org/packages/1d/64/795177c5c1453933c01df47f291c5b1e2219c1efdf5e5bc53758256884e3/hdx-python-api-1.3.1.tar.gz"
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ad22ddd31a4dc1368566d79936bdab9f",
          "sha256": "0164b82cb93810a71379055bf3ee1935c0abd2073c729cc8846a225ed44b47e3"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad22ddd31a4dc1368566d79936bdab9f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 62053,
        "upload_time": "2017-06-22T15:02:42",
        "url": "https://files.pythonhosted.org/packages/0e/9b/b88c3b7e63ba272183438338db81bd9675bc0aa20c3d0477756593a73066/hdx_python_api-1.4-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a36729b8a25b9ed63106c68ce53609e1",
          "sha256": "2322cfa5aee1194fa57e9f9a7cda846fd80930dce9e17fbc18b00764e1d5b8cf"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a36729b8a25b9ed63106c68ce53609e1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 109592,
        "upload_time": "2017-06-22T15:02:45",
        "url": "https://files.pythonhosted.org/packages/20/2e/7406cc3fbfbce4674c4c0c9e44c7596752bd2116d3504dc9140a4fbd9bb3/hdx-python-api-1.4.tar.gz"
      }
    ],
    "1.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e7c7b88a1916d50dcca8ed493a842454",
          "sha256": "4f841a56a1e4b2b9e6d5ad27196232c0751c01b2fd8a76bc9b0b706ea7fda988"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.4.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7c7b88a1916d50dcca8ed493a842454",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 62148,
        "upload_time": "2017-06-23T07:28:39",
        "url": "https://files.pythonhosted.org/packages/c3/1c/f810f427db2fcfa04aeb9b4a094d28f07c4691d668067cfbaf9f28115a95/hdx_python_api-1.4.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5f284819a05beaf09dfbb9e9dd634da2",
          "sha256": "f067bd0e52fe258a990066e3b4a2bdf8b41f5dea129ee0303f3219cd142599d4"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5f284819a05beaf09dfbb9e9dd634da2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 109657,
        "upload_time": "2017-06-23T07:28:42",
        "url": "https://files.pythonhosted.org/packages/4e/90/57ed3b54cdfb376178e45e023b8bddd248917371390d514fb7ddcb06be45/hdx-python-api-1.4.1.tar.gz"
      }
    ],
    "1.4.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "880f87c35dba4722e9a998ddabdce532",
          "sha256": "e7b95864438b7234c028e076f448fb03bb5109f5e8712a647db70f393b8d2bed"
        },
        "downloads": 0,
        "filename": "hdx_python_api-1.4.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "880f87c35dba4722e9a998ddabdce532",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 62455,
        "upload_time": "2017-06-28T11:42:27",
        "url": "https://files.pythonhosted.org/packages/86/2e/18c1bded7d01b73dd87fff3ccdb2319f8c40759822e9f5e8e85b3da725f8/hdx_python_api-1.4.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "98e40ba21cf56b6685bc70d04bbe6c5d",
          "sha256": "2442f688e7fc618c113ec787bfad4e5adeb2824e723e09a1de7b20ada26fbb1b"
        },
        "downloads": 0,
        "filename": "hdx-python-api-1.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "98e40ba21cf56b6685bc70d04bbe6c5d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 110287,
        "upload_time": "2017-06-28T11:42:30",
        "url": "https://files.pythonhosted.org/packages/a8/11/01807ce3076b2fd288c2f74597dad3c7518b7409f0a74309ca41ee6039a9/hdx-python-api-1.4.2.tar.gz"
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "73ee9612a9bd2541e231e672c68dc928",
          "sha256": "c4f098a946b5f267cf847b4686ca60f00cebfaaf7c4d11403a4b15046af365a6"
        },
        "downloads": 0,
        "filename": "hdx_python_api-2.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73ee9612a9bd2541e231e672c68dc928",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 63953,
        "upload_time": "2017-07-06T14:35:23",
        "url": "https://files.pythonhosted.org/packages/90/5b/d3146cd2c8da4dea4fc310e35c35b60efef9dc5b2c4cb89b34497e780907/hdx_python_api-2.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8d48d90f32fb1aaad146c3e8c2f34b60",
          "sha256": "e41d8c9517857a5cb557316104b6035174e499e702f9608d6e65b81940f2215e"
        },
        "downloads": 0,
        "filename": "hdx-python-api-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8d48d90f32fb1aaad146c3e8c2f34b60",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 111715,
        "upload_time": "2017-07-06T14:35:25",
        "url": "https://files.pythonhosted.org/packages/8e/d9/1060889f20188bd1fecacd0feff92e7811cf1f00991dc828985015efdcb0/hdx-python-api-2.0.0.tar.gz"
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "80533a9101fde849d0218ac6dd7c1917",
          "sha256": "cb341af8c91eaffd34bf2c2acdb135922a5368ac08ee9c632a659e4e854aa55b"
        },
        "downloads": 0,
        "filename": "hdx_python_api-2.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80533a9101fde849d0218ac6dd7c1917",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 65266,
        "upload_time": "2017-07-11T13:36:37",
        "url": "https://files.pythonhosted.org/packages/ce/1d/10f4e0b0677693d3f48df40cfda5e5556c5dc21360d8381a85afdb2b8ded/hdx_python_api-2.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d33bd27e05c8058cff9b33cb8fe29bb8",
          "sha256": "f9e777bbf4d219209202435247eadb86ffd5d61a8228130b8ff4894393186d2e"
        },
        "downloads": 0,
        "filename": "hdx-python-api-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d33bd27e05c8058cff9b33cb8fe29bb8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 113802,
        "upload_time": "2017-07-11T13:36:39",
        "url": "https://files.pythonhosted.org/packages/88/72/77bbda979f184548c1f8bf16f0efe40ee9646699acd963721d43727ba71c/hdx-python-api-2.1.0.tar.gz"
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "84cce6c92537517cb5f62c5b81348579",
          "sha256": "aa49a6b536b63fd0226a5e78f42b237d74dc97de6c2a944098887a2f3ad6b8be"
        },
        "downloads": 0,
        "filename": "hdx_python_api-2.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84cce6c92537517cb5f62c5b81348579",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 65400,
        "upload_time": "2017-07-12T12:44:38",
        "url": "https://files.pythonhosted.org/packages/0e/e7/73fbe0811a6aa6a07c167501ef66822fdbc7055c3e9bfadb090874864718/hdx_python_api-2.1.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e543994eac43af38fd5afb92505ba12b",
          "sha256": "9fbd798ea5f3c388c1f9ac700492264f4c4757ed4a5a95be1a6602f2cdadd005"
        },
        "downloads": 0,
        "filename": "hdx-python-api-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e543994eac43af38fd5afb92505ba12b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 113962,
        "upload_time": "2017-07-12T12:44:40",
        "url": "https://files.pythonhosted.org/packages/ce/80/ecb5f2659dfb1ec0dcba43f4d3e2c77721ab6cbe8cd9e83e73d88792e291/hdx-python-api-2.1.1.tar.gz"
      }
    ],
    "2.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fc167b05c1666eb40be082d2bfb4fc89",
          "sha256": "fc1866debc0556b9616af4f39657661d634f83139165b4c8efc4a1c792f19937"
        },
        "downloads": 0,
        "filename": "hdx_python_api-2.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fc167b05c1666eb40be082d2bfb4fc89",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 65410,
        "upload_time": "2017-07-12T14:38:17",
        "url": "https://files.pythonhosted.org/packages/d0/a5/215e210984e44a020bc7bdc07c7e66ec91de9e61e443caa39e176d700707/hdx_python_api-2.1.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "859801a32c93c2c776a9621ca94f5667",
          "sha256": "db1b13e934a5fb6b1b00b9eded733307900d6858ef8d697d8c3eef1e21379ce6"
        },
        "downloads": 0,
        "filename": "hdx-python-api-2.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "859801a32c93c2c776a9621ca94f5667",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 113986,
        "upload_time": "2017-07-12T14:38:18",
        "url": "https://files.pythonhosted.org/packages/9f/72/47ecdf920416b8638b477d89f6b0bde0e8248aaace59dc1f59f335589d58/hdx-python-api-2.1.2.tar.gz"
      }
    ],
    "2.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "79111de39ff28fda8f228110ff3e3104",
          "sha256": "6cdd5d8747c69126952a0b423c82bc947b52051a548aa80ba9ca8fffac811a9c"
        },
        "downloads": 0,
        "filename": "hdx_python_api-2.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79111de39ff28fda8f228110ff3e3104",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 65445,
        "upload_time": "2017-07-13T07:54:25",
        "url": "https://files.pythonhosted.org/packages/1f/32/7448e11687e036b39e51c7ef5773687860d799f586297f1cacfebcd3a03f/hdx_python_api-2.1.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e953ce2f2e0b2645e87db2b24ebca631",
          "sha256": "d320eaf00734fdcac600969c99f1a62cc8023d119abf44b625dc7e140daf6a0f"
        },
        "downloads": 0,
        "filename": "hdx-python-api-2.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e953ce2f2e0b2645e87db2b24ebca631",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 114064,
        "upload_time": "2017-07-13T07:54:29",
        "url": "https://files.pythonhosted.org/packages/f1/a6/c624b6fbf7ff838c86e9d07f195e3db52e18b08175638fe5e934649e3490/hdx-python-api-2.1.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "79111de39ff28fda8f228110ff3e3104",
        "sha256": "6cdd5d8747c69126952a0b423c82bc947b52051a548aa80ba9ca8fffac811a9c"
      },
      "downloads": 0,
      "filename": "hdx_python_api-2.1.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "79111de39ff28fda8f228110ff3e3104",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 65445,
      "upload_time": "2017-07-13T07:54:25",
      "url": "https://files.pythonhosted.org/packages/1f/32/7448e11687e036b39e51c7ef5773687860d799f586297f1cacfebcd3a03f/hdx_python_api-2.1.3-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "e953ce2f2e0b2645e87db2b24ebca631",
        "sha256": "d320eaf00734fdcac600969c99f1a62cc8023d119abf44b625dc7e140daf6a0f"
      },
      "downloads": 0,
      "filename": "hdx-python-api-2.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e953ce2f2e0b2645e87db2b24ebca631",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 114064,
      "upload_time": "2017-07-13T07:54:29",
      "url": "https://files.pythonhosted.org/packages/f1/a6/c624b6fbf7ff838c86e9d07f195e3db52e18b08175638fe5e934649e3490/hdx-python-api-2.1.3.tar.gz"
    }
  ]
}