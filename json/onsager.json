{
  "info": {
    "author": "Dallas R. Trinkle",
    "author_email": "dtrinkle@illinois.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "Onsager\n=======\n\nDocumentation now available at the [Onsager github page](http://dallastrinkle.github.io/Onsager/). Please cite as [![DOI](https://zenodo.org/badge/14172/DallasTrinkle/Onsager.svg)](https://zenodo.org/badge/latestdoi/14172/DallasTrinkle/Onsager) or see `Onsager github <https://github.com/DallasTrinkle/Onsager>`_ for current version doi information.\n\nThe Onsager package provides routines for the general calculation of transport coefficients in vacancy-mediated diffusion and interstitial diffusion. It does this using a Green function approach, combined with point group symmetry reduction for maximum efficiency.\n\nTypical usage can be seen in the ipython notebooks in `examples`; the usual import will be::\n\n    #!/usr/bin/env python\n\n\tfrom onsager import crystal\n\tfrom onsager import OnsagerCalc\n\n    ...\n\nMany of the subpackages within Onsager are support for the main attraction, which is in OnsagerCalc. Interstitial calculation examples are available in `bin`, including three YAML input files, as well as a interstitial diffuser. An example of vacancy-mediated diffusion is shown in `bin/fivefreq.py`, which computes the well-known five-frequency model for substitutional solute transport in an FCC lattice. The script `CLdiffuser` is a command-line diffuser calculator that is designed to read in an HDF5 file of a diffuser, along with a JSON file that includes the thermal/kinetic data, and computes diffusivity components for different temperatures.\n\nThe tests for the package are include in `test`; `tests.py` will run all of the tests in the directory with verbosity level 2. This can be time-consuming (on the order of several of minutes) to run all tests; coverage is currently >90%.\n\nThe code uses YAML format for input/output of crystal structures, and diffusion data for the interstitial calculator. The vacancy-mediated calculator requires much more data, and uses HDF5 format to save/reload as needed. The vacancy-mediated calculator uses tags (unique human-readable-ish strings) to identify all (symmetry-unique) vacancy, solute, and complex states, and transitions between them.\nThe vacancy-mediated diffuser can be stored as an HDF5 file (which internally stores the crystal structure in YAML format). The thermal/kinetic data is most easily serialized as JSON, but any dictionary-compatible format will do, by making use of tags.\n\nReleases:\n\n* 0.9. Full release of Interstitial calculator, along with theory paper (see References below).\n* 0.9.1. Added spin degrees of freedom to `crystal` for symmetry purposes; added `supercell` class to aid in automated setup of calculation.\n* 1.0 Now including automator for supercell calculations.\n* 1.1 Automator update with Makefile; corrections for possible overflow error when omega2 gets very large.\n* 1.2 Combined \"large omega2\" and \"non-zero bias\" algorithms; notebook for Fe-C added to documentation; cleanup of code and improved testing.\n* 1.2.1 Additional notebooks added for vacancy-mediated diffuser.\n* 1.2.2 New internal friction calculator for interstitial diffuser; improvement in Crystal class symmetry to handle larger error in unit cell.\n\nReferences\n==========\n* Dallas R. Trinkle, \"Diffusivity and derivatives for interstitial solutes: Activation energy, volume, and elastodiffusion tensors.\" Philos. Mag. (2016) [doi:10.1080/14786435.2016.1212175](http://dx.doi.org/10.1080/14786435.2016.1212175); [arXiv:1605.03623](http://arxiv.org/abs/1605.03623)\n* Dallas R. Trinkle, \"Automatic numerical evaluation of vacancy-mediated transport for arbitrary crystals: Onsager coefficients in the dilute limit using a Green function approach.\" [arXiv:1608.01252](http://arxiv.org/abs/1608.01252)\n\nContributors\n============\n* Dallas R. Trinkle, initial design, derivation, and implementation.\n* Ravi Agarwal, testing of HCP interstitial calculations; testing of HCP vacancy-mediated diffusion calculations\n* Abhinav Jain, testing of HCP vacancy-mediated diffusion calculations.\n\nThanks to discussions with Maylise Nastar (CEA, Saclay), Thomas Garnier (CEA, Saclay and UIUC), Thomas Schuler (CEA, Saclay), and Pascal Bellon (UIUC).\n\nSupport\n=======\nThis work has been supported in part by\n\n* DOE/BES grant DE-FG02-05ER46217,\n* ONR grant N000141210752,\n* NSF/CDSE grant 1411106.\n* Dallas R. Trinkle began the theoretical work for this code during the long program on Material Defects at the [Institute for Pure and Applied Mathematics](https://www.ipam.ucla.edu/) at UCLA, Fall 2012, which is supported by the National Science Foundation.\n",
    "docs_url": "https://pythonhosted.org/onsager/",
    "download_url": "https://github.com/DallasTrinkle/onsager/tarball/v1.2.2",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/DallasTrinkle/onsager",
    "keywords": "diffusion",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "onsager",
    "platform": "",
    "project_url": "https://pypi.org/project/onsager/",
    "release_url": "https://pypi.org/project/onsager/1.2.2/",
    "requires_python": "",
    "summary": "A package to compute Onsager coefficients for vacancy-mediated diffusion and interstitial elastodiffusion tensors",
    "version": "1.2.2"
  },
  "releases": {
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "976bc045a63c19cf0727122d9c1ae7ad",
          "sha256": "b17293a84351e8f9fa29f63fff8b0253e724812cb45a786502448cba916a0b74"
        },
        "downloads": 0,
        "filename": "onsager-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "976bc045a63c19cf0727122d9c1ae7ad",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 898184,
        "upload_time": "2017-06-07T21:43:08",
        "url": "https://files.pythonhosted.org/packages/b2/8a/3afe8ac4df4216b2c41a3bbee59add502b2b991d249bfc394020ab35f557/onsager-1.2.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "976bc045a63c19cf0727122d9c1ae7ad",
        "sha256": "b17293a84351e8f9fa29f63fff8b0253e724812cb45a786502448cba916a0b74"
      },
      "downloads": 0,
      "filename": "onsager-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "976bc045a63c19cf0727122d9c1ae7ad",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 898184,
      "upload_time": "2017-06-07T21:43:08",
      "url": "https://files.pythonhosted.org/packages/b2/8a/3afe8ac4df4216b2c41a3bbee59add502b2b991d249bfc394020ab35f557/onsager-1.2.2.tar.gz"
    }
  ]
}