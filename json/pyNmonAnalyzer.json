{
  "info": {
    "author": "Matthias Lee",
    "author_email": "pynmonanalyzer@madmaze.net",
    "bugtrack_url": "",
    "classifiers": [],
    "description": "pyNmonAnalyzer\r\n========\r\n\r\nA tool for parsing and reshuffeling nmon's output into \"normal\" csv format.\r\nNmon puts out a long file with a system-info header at the beginning, followed\r\nby a continuous stream of time stamped readings. This format makes it difficult\r\nfor analysis by standard Spreadsheet viewers without a fair amount of preprocessing.\r\nThe pyNmonAnalyzer aims to make this simpler, faster and more effective. In one\r\nsweep the pyNmonAnalyzer creates CSV files and two HTML-based reports, one with static \r\ngraphs and one with interactive graphs powered by [dygraphs](http://dygraphs.com). This \r\nproject is currently a work-in-progress and therefore will hopefully improve in \r\nfunctionality and usability. If you have questions, find a bug or have feature requests, please do\r\nfile an issues [here](https://github.com/madmaze/pyNmonAnalyzer/issues)\r\n\r\n**Example Reports:**\r\n---------------\r\n- [Static Report](http://matthiaslee.com/scratch/pyNmonAnalyzer/data/report.html)\r\n- [Interactive Report](http://matthiaslee.com/scratch/pyNmonAnalyzer/interactiveReport.html)\r\n\r\n\r\nGoals:\r\n-----\r\n- make nmon log file analysis easier and faster\r\n- create HTML based reports with embedded graphs\r\n- create CSV files for more indepth data analysis\r\n- interactive graphs for hands on analysis, perhaps using dygraph.js\r\n\r\nGetting started:\r\n-----\r\n- [Python Nmon Analyzer: moving away from excel macros](http://matthiaslee.com/?q=node/38)\r\n\r\nInstallation:\r\n-----\r\npyNmonAnalyzer is now available through pip and easy_install.   \r\nIf you have pip:   \r\n```$> sudo pip install pyNmonAnalyzer```\r\n\r\nIf you'd like to mess with the source, please feel free to fork \r\nthis github repo and contribute back changes.\r\n\r\nDependencies:  \r\n-----\r\nThis tool depends on the python numpy package and the matplotlib package.\r\n* If you are on a Debian/Ubuntu based system: `sudo apt-get install python-numpy python-matplotlib`  \r\n* If you are on a RHEL/Fedora/Centos system: `sudo yum install python-numpy python-matplotlib`\r\n\r\n\r\nUsage:\r\n-----\r\n```\r\nusage: pyNmonAnalyzer [-h] [-x] [-d] [--force] [-i INPUT_FILE] [-o OUTDIR]\r\n                      [-c] [-b] [-t REPORTTYPE] [-r CONFFNAME]\r\n                      [--dygraphLocation DYGRAPHLOC] [--defaultConfig]\r\n                      [-l LOGLEVEL]\r\n\r\nnmonParser converts NMON monitor files into time-sorted CSV/Spreadsheets for\r\neasier analysis, without the use of the MS Excel Macro. Also included is an\r\noption to build an HTML report with graphs, which is configured through\r\nreport.config.\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -x, --overwrite       overwrite existing results (Default: False)\r\n  -d, --debug           debug? (Default: False)\r\n  --force               force using of config (Default: False)\r\n  -i INPUT_FILE, --inputfile INPUT_FILE\r\n                        Input NMON file\r\n  -o OUTDIR, --output OUTDIR\r\n                        Output dir for CSV (Default: ./report/)\r\n  -c, --csv             CSV output? (Default: False)\r\n  -b, --buildReport     report output? (Default: False)\r\n  -t REPORTTYPE, --reportType REPORTTYPE\r\n                        Should we be generating a \"static\" or \"interactive\"\r\n                        report (Default: interactive)\r\n  -r CONFFNAME, --reportConfig CONFFNAME\r\n                        Report config file, if none exists: we will write the\r\n                        default config file out (Default: ./report.config)\r\n  --dygraphLocation DYGRAPHLOC\r\n                        Specify local or remote location of dygraphs library.\r\n                        This only applies to the interactive report. (Default:\r\n                        http://dygraphs.com/dygraph-dev.js)\r\n  --defaultConfig       Write out a default config file\r\n  -l LOGLEVEL, --log LOGLEVEL\r\n                        Logging verbosity, use DEBUG for more output and\r\n                        showing graphs (Default: INFO)\r\n```\r\n\r\nExample Usage:\r\n-------------\r\nFirst generate a report config, most likely the default is all you need. This creates ./report.config\r\n```$> pyNmonAnalyzer --defaultConfig```\r\n\r\nBuild HTML report with *interactive* graphs for test.nmon and store results to testReport  \r\n```$> pyNmonAnalyzer -b -o testReport -i test.nmon```\r\n\r\nBuild HTML report with static graphs for test.nmon and store results to testReport  \r\n```$> pyNmonAnalyzer -b -t static -o testReport -i test.nmon```\r\n\r\nCompile CSV formatted tables for data in test.nmon and store results to testOut  \r\n```$> pyNmonAnalyzer -c -o testOut -i test.nmon```\r\n\r\nConfiguration:\r\n-------------\r\nTo control which items get graphed(CPU, MEM etc) you need to configure the report.config file. \r\nThis is especially important for AIX NMON systems. To get a sense of what the config file \r\nshould look like, run `pyNmonAnalyzer --defaultConfig` this will generate \"report.config\" in \r\nyour local directory. It contians two examples, one for Linux and one for AIX systems. \r\nAdjust them according to your device names, for Linux you'll want to set DISKBUSY to your sda1 or sdb1 or what ever.\r\nYou should be able to use **any** nmon performance stats, so DISKBUSY, DISKREAD, CPU1, CPU2 etc.\r\n\r\nTroubleshooting:\r\n---------------\r\n- **It crashes or my graphs don't show anything!**   \r\n\tHave you looked at your current report.config? Is it customized to your device names?\r\n- **My interactive report will not display! What did I do wrong?**   \r\n\tSince the interactive report uses javascript to load CSV files, your browser needs to be allowed to read local files(if you are viewing locally). Firefox has been the most reliable for me, chrome currently does not allow JS to access local files.\r\n\r\n**Any other problems, file an issue or send me an email.**\r\n\r\n\r\nLicense:\r\n-------\r\n```\r\nCopyright (c) 2012-2017 Matthias Lee, matthias.a.lee[]gmail.com\r\nLast edited: April 14th 2017\r\n\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n```",
    "docs_url": null,
    "download_url": "https://github.com/madmaze/pynmonanalyzer",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/madmaze/pynmonanalyzer",
    "keywords": "python nmon analyzer pynmonanalyzer interactive static report visualization",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyNmonAnalyzer",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pyNmonAnalyzer/",
    "release_url": "https://pypi.org/project/pyNmonAnalyzer/1.0.4/",
    "requires_python": null,
    "summary": "Python tool for reformatting and plotting/graphing NMON output",
    "version": "1.0.4"
  },
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "60243ab1228ebe8d8b33e5eff329533c",
          "sha256": "8cfb3a533207f3f6ffcf72905b74fcb07d3f42a2ab60924faf015fcaa7e6efc9"
        },
        "downloads": 1826,
        "filename": "pyNmonAnalyzer-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "60243ab1228ebe8d8b33e5eff329533c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 38963,
        "upload_time": "2014-08-10T23:39:25",
        "url": "https://files.pythonhosted.org/packages/df/e9/2469bde805830e4ca2816997d34a49cc520fc4d57f1f239226dfd52a70b2/pyNmonAnalyzer-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bb5f7da495132c80f2a6f249bd6fe0c3",
          "sha256": "32812a8f535937da95fedf4f9e975b782bffcae8740322b13f1ea771e3fcdfea"
        },
        "downloads": 1580,
        "filename": "pyNmonAnalyzer-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bb5f7da495132c80f2a6f249bd6fe0c3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 38988,
        "upload_time": "2014-08-17T16:28:47",
        "url": "https://files.pythonhosted.org/packages/0f/37/a16969fb85c157412be15c04c1770f817bcaaad5c62b0e611f5603bf3cb5/pyNmonAnalyzer-1.0.2.tar.gz"
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5cb348cdc7382f15559a6b16cf44351e",
          "sha256": "e32b0d85d613b42733c196c5d29030c0edaabb31bfb76c5ee38f9ac8984981d3"
        },
        "downloads": 1808,
        "filename": "pyNmonAnalyzer-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5cb348cdc7382f15559a6b16cf44351e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 39149,
        "upload_time": "2015-02-28T00:02:57",
        "url": "https://files.pythonhosted.org/packages/9f/67/9ac52f2872d2617217949bde1def73ee9f3b8eb128e56baff101970d4632/pyNmonAnalyzer-1.0.3.tar.gz"
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cefbb58c6cc67921c7b6d2ab8b371a04",
          "sha256": "02d3dd0e018b06a8439fcfa65f9616d7a34feb3483131f4d8a782c28af17e9cd"
        },
        "downloads": 0,
        "filename": "pyNmonAnalyzer-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cefbb58c6cc67921c7b6d2ab8b371a04",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 39146,
        "upload_time": "2017-04-14T15:17:39",
        "url": "https://files.pythonhosted.org/packages/2a/e8/6bd67c516fabfa36693bc52fec6a7934562771beb7d44ebae42a58d3f063/pyNmonAnalyzer-1.0.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "cefbb58c6cc67921c7b6d2ab8b371a04",
        "sha256": "02d3dd0e018b06a8439fcfa65f9616d7a34feb3483131f4d8a782c28af17e9cd"
      },
      "downloads": 0,
      "filename": "pyNmonAnalyzer-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "cefbb58c6cc67921c7b6d2ab8b371a04",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 39146,
      "upload_time": "2017-04-14T15:17:39",
      "url": "https://files.pythonhosted.org/packages/2a/e8/6bd67c516fabfa36693bc52fec6a7934562771beb7d44ebae42a58d3f063/pyNmonAnalyzer-1.0.4.tar.gz"
    }
  ]
}