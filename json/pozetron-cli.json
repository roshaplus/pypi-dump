{
  "info": {
    "author": "Pozetron Inc",
    "author_email": "hello@pozetroninc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "`Pozetron <https://www.pozetron.com/>`__ is the next evolution of\ndevelopment tools for the devices which make up the Internet of Things.\n\nThis package provides a single unified command line interface for\ndevelopers to interact with the Pozetron Cloud.\n\nThe pozetron-cli package is tested on Python versions:\n\n-  2.7\n-  3.3\n-  3.4\n-  3.5\n-  3.6\n\nPozetron enables you to write MicroPython code which will run on small,\ncost efficient, low power modules such as the ESP8266 from `Espressif\nSystems <https://espressif.com/>`__, powerful development platforms such\nas the `PyBoard <https://store.micropython.org/#/store>`__, Machine\nVision modules like the `OpenMV Cam <https://openmv.io/>`__ or anything\nthat will run a Unix like operating system such as Linux on a `Raspberry\nPi <https://www.raspberrypi.org/>`__.\n\nGetting an Account\n------------------\n\nYou can register for an account at\nhttps://registration.apps.pozetron.com/registration.\n\nOnce you have registered, you will receive an email like the following:\n\n.. code:: text\n\n    Hi there!\n\n    Thanks for being an early adopter of Pozetron!\n\n    Your keyId is da01693774dd4fc4b043d3e91fc7db1bb1e8d7962c4b8616399b3745e96d4ac4\n    and your secret is b1a6f0e6801101a80c27d8b42d6397c5ddf908c7bbac355a9e297dac13056658.\n\n    Make sure you create a `~/.pozetron/id_pozetron` file with the keyId and secret like this (notice the space):\n    da01693774dd4fc4b043d3e91fc7db1bb1e8d7962c4b8616399b3745e96d4ac4 b1a6f0e6801101a80c27d8b42d6397c5ddf908c7bbac355a9e297dac13056658\n\n    Once you have this file you can continue with the installation of the pozetron-cli by using pip to install it like so:\n\n    $ pip install pozetron-cli\n\n    Once you have your ~/.pozetron/id_pozetron configured and the pozetron-cli command line tool installed, you can follow our tutorial to get your \"hello world\" up and running.\n\n    https://www.pozetron.com/tutorial/getting-started/\n    https://www.pozetron.com/tutorial/getting-started-esp8266/\n\n    Note: By downloading or using our software, you accept the terms of service https://www.pozetron.com/legal/tos.html and privacy policy https://www.pozetron.com/legal/privacy.html\n\nAs the email instructs, you need to create a file which will contain\nyour credentials for the CLI. The default location is in\n``~/.pozetron/`` but this can be overridden using the ``POZETRON_DIR``\nenvironment variable.\n\nInstalling the Command line\n---------------------------\n\nObtaining the Command Line Interface (CLI) is simply a matter of using\nPython's ``pip`` to install it.\n\n.. code:: bash\n\n    $ pip install pozetron-cli\n\nProvisioning your first device\n------------------------------\n\nAfter your credentials set up, you'll want to take your first steps with\nthe command line client. let's do that now by requesting a new device be\nprovisioned. This process will take a secret that you supply and\nregister it with the cloud. In return you will receive a device ID, in\nthe form of a device address, and a key ID. These three items will be\ncopied to your device and will be used to authenticate the device to the\ncloud.\n\n.. code:: bash\n\n    $ poze.py device provision -k DEADBEEF\n    usage: poze.py device provision [-h] -k KEY\n    poze.py device provision: error: argument -k/--key: Enter a valid hash (64 characters).\n    May we suggest: 7ed951450f7bef3f5a359464bbf430a88af316aef3dae5097faf364cae323056\n    $ poze.py device provision -k 7ed951450f7bef3f5a359464bbf430a88af316aef3dae5097faf364cae323056\n    a77eed66d15a3b3cba76573376695729bf7bce33d8e0997bfd8399f993fca4f8@pozetrondevices.com\n    36d43af16bfde6575efff2878c9b081b71bc3d5f3105cbfbead8ed62770d267d\n\nUploading a module\n------------------\n\nAfter you have a device, you'll want to have something ready to deploy\nto that device. You can upload modules or packages to the cloud to be\ndeployed. To keep things simple we'll start off by uploading a single\nmodule.\n\n.. code:: python3\n\n    def say_hello():\n        log('Hello World!')\n\n.. code:: bash\n\n    $ poze.py script upload -f hello.py -m hello\n    f2fefab13050f4e5b0e580ba9b5b4e9f88ffc633581b5fbeaf3da231477258e5\n\nAdding tags\n-----------\n\nPozetron uses hashes to identify devices, modules and packages. These\nare very easy for a computer to work with but are not the most user\nfriendly. To make it easier we'll add a tag to the module we just\nuploaded.\n\n.. code:: bash\n\n    $ poze.py tag add f2fefab13050f4e5b0e580ba9b5b4e9f88ffc633581b5fbeaf3da231477258e5 hello:v1\n    hello:v1 -> f2fefab13050f4e5b0e580ba9b5b4e9f88ffc633581b5fbeaf3da231477258e5\n\nNow that we have a tag for our module, we should create a tag to use for\nour device.\n\n.. code:: bash\n\n    $ poze.py tag add a77eed66d15a3b3cba76573376695729bf7bce33d8e0997bfd8399f993fca4f8 tutorial\n    tutorial -> a77eed66d15a3b3cba76573376695729bf7bce33d8e0997bfd8399f993fca4f8\n\nWe can now use these tags whenever we would use the matching hashes.\n\nDeploying our module\n--------------------\n\nOnce we have the credentials, we will want to program our device so that\nwe can deploy our new module. After following the `Getting Started with\nPozetron on the\nESP8266 <https://www.pozetron.com/tutorial/getting-started-esp8266>`__\ntutorial you will have a device connected to your network and ready to\nuse.\n\nDeploying a new module to a device is as easy as:\n\n.. code:: bash\n\n    $ poze.py script deploy -s hello:v1 -d tutorial\n\nNow that we have a module on the device, let's set up the special\n``main.py`` module which is launched when the device starts.\n\n.. code:: python3\n\n    import hello\n    import time\n    import sys\n\n    # This is a pointer to the module object instance itself. We use this so we can reference module level variables\n    # inside our main_loop(). This is more memory efficient than using a class.\n    main = sys.modules[__name__]\n    ######################################################################################################\n    #                                            MAIN LOOP                                               #\n    ######################################################################################################\n\n    # The only things that should go in the main loop are those which you want to execute hundreds\n    # of thousands of times. Anything that you want to do once, like assign a constant string to a\n    # variable should occur above for performance reasons. Also, anything whose value you want to\n    # share with your 'epilog'.\n\n    # The epilog runs if the main_loop ever exits. The main_loop should exit regularly to provide\n    # an opportunity for the Pozetron functionality to run.\n\n    def main_loop():\n        hello.say_hello()\n        log('We came, we saw, we said hello')\n        time.sleep(10)\n\nLet's upload this module and deploy it to the device.\n\n.. code:: bash\n\n    $ poze.py script deploy -s `poze.py script upload -f main.py -m main` -d tutorial\n\nSuccess! Now that we have our module on the device, let's restart it so\nthat it picks up the new modules.\n\n.. code:: bash\n\n    $ poze.py device reboot -d tutorial\n\nLogs\n----\n\nSo now we have a device, connected to the Internet and with our module\ndeployed. Let's get the logs from this device to see our handy work.\n\n.. code:: bash\n\n    $ poze.py device logs -d tutorial\n    2017-05-12T06:39:44.210265 Hello World!\n    2017-05-12T06:39:44.211335 We came, we saw, we said hello\n\nSo there you have it, we've set up our account credentials, provisioned\nour device, deployed our first code to the device, and successfully\nretrieved the logs for our device, from the cloud. All without even\nneeding to be on the same continent as our device.\n\nWhether you are working with devices near you or deployed in some remote\nlocation, you can always keep them up to date, diagnose problems or push\nnew features without ever plugging them into a laptop again.\n\nIf you would like to get some inspiration for your next project check\nout our latest blog post https://www.pozetron.com/blog/jedi-lights/\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://www.pozetron.com",
    "keywords": "pozetron,IoT,MicroPython",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pozetron-cli",
    "platform": "",
    "project_url": "https://pypi.org/project/pozetron-cli/",
    "release_url": "https://pypi.org/project/pozetron-cli/0.4.0/",
    "requires_dist": [
      "six (==1.10.0)",
      "requests (==2.11.1)",
      "pytz (==2016.10)",
      "python-dateutil (>=2.6.0)",
      "pydicti (==0.0.6)",
      "pyOpenSSL (==17.2.0)",
      "httpsig (==1.1.2)"
    ],
    "requires_python": "",
    "summary": "Pozetron command-line interface. The developer interface for the Pozetron IoT Cloud.",
    "version": "0.4.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f270eb71a70772bc2f54e9d3d9ea6f9d",
          "sha256": "cafabc61e20f978df52bbcc66dcaf35bd4424f242f18227de1f73a210b1c15d4"
        },
        "downloads": -1,
        "filename": "pozetron_cli-0.1.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "f270eb71a70772bc2f54e9d3d9ea6f9d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 14222,
        "upload_time": "2017-07-13T05:41:05",
        "url": "https://files.pythonhosted.org/packages/a3/d9/0d153bcfd000413313764a57f9b584dac5187c1267f8ddfc1876be8441c0/pozetron_cli-0.1.0-py2.py3-none-any.whl"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "824110be88d1bd918b4338021f1235c8",
          "sha256": "fcd759fa4cb16146338b0d07e41f5a1a1120a005e847cd42ab17f7777fd6c677"
        },
        "downloads": -1,
        "filename": "pozetron_cli-0.2.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "824110be88d1bd918b4338021f1235c8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 15150,
        "upload_time": "2017-08-21T06:11:19",
        "url": "https://files.pythonhosted.org/packages/c6/8d/3095028b5c50681351c306b4f94c49873cbc9c9c7c762615a77d90341a81/pozetron_cli-0.2.0-py2.py3-none-any.whl"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "12aff5ef9bfb31135cb5bdbdae3d7edf",
          "sha256": "86f6b1e097b76c29f14e0ae936e8b2a745750748280089669ddecf4ebbd6e3cf"
        },
        "downloads": -1,
        "filename": "pozetron_cli-0.3.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "12aff5ef9bfb31135cb5bdbdae3d7edf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 16497,
        "upload_time": "2017-11-13T07:07:11",
        "url": "https://files.pythonhosted.org/packages/95/8d/41b4b4fec74189ef04bb11ad4e3b0222ed903586a1d4b8b2df1d043c05aa/pozetron_cli-0.3.0-py2.py3-none-any.whl"
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d30db0f1413edb800356190ac32f87fd",
          "sha256": "7f8d44171daa017e958216c216976574753629a0cc41a53f1dbace752d6428a3"
        },
        "downloads": -1,
        "filename": "pozetron_cli-0.4.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "d30db0f1413edb800356190ac32f87fd",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 22605,
        "upload_time": "2017-12-30T10:01:56",
        "url": "https://files.pythonhosted.org/packages/1e/12/cdb4e780d4cc69e6e11c2fe080c64b57218aeebc66717301d6d011b698b4/pozetron_cli-0.4.0-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d30db0f1413edb800356190ac32f87fd",
        "sha256": "7f8d44171daa017e958216c216976574753629a0cc41a53f1dbace752d6428a3"
      },
      "downloads": -1,
      "filename": "pozetron_cli-0.4.0-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "d30db0f1413edb800356190ac32f87fd",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 22605,
      "upload_time": "2017-12-30T10:01:56",
      "url": "https://files.pythonhosted.org/packages/1e/12/cdb4e780d4cc69e6e11c2fe080c64b57218aeebc66717301d6d011b698b4/pozetron_cli-0.4.0-py2.py3-none-any.whl"
    }
  ]
}