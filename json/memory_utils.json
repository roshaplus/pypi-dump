{
  "info": {
    "author": "Jonathan Tushman",
    "author_email": "jonathan@zefr.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3"
    ],
    "description": "memory_utils\n============\n\n|Build Status|\n\nYeah Memory Issues!!\n\n\nMemory Issues happen to the best of us.  ``memory_utils`` will give you simple tools to quickly isolate the\ncuplrit, and ideally, warn you before you run into issues.\n\nFrom my experience, there is no silver-bullet in dealing with memory issues.  You just have to roll up your sleeve and get\ndirty with print statements.  In our team's recent fight with a memory issue, we created memory_utils and we wanted to \nshare.\n\n``memory_utils`` deals primarily with RSS memory (Resident Set Size).  The most important memory concept to understand \nwhen dealing with memory constrained systems: RSS, the resident set size, is the portion of a process's memory that \nis held in RAM. The rest of the memory exists in the swap of the file system.\n\nInstall\n-------\n\n.. code:: bash\n\n    pip install memory_utils\n\n\nUsage\n-----\n\nprint_memory\n~~~~~~~~~~~~\nThe workhorse of this package is ``print_memory`` It simply prints out 3 columns of data: the current memory, the \ndelta since the previous statement and an message that you pass it.  If there is additional memory used -- \nthe line will be printed RED and if there is a decrease, the line will be printed GREEN.\n\nIt is a very simple approach, but it really helped us  find out where the issue was, at glance.  The output could\nlook like this::\n\n    RSS                  Delta                Message\n    14,393,344           14,393,344          BEFORE BLOAT\n    14,397,440           4,096               DURING BLOAT (1)\n    14,413,824           16,384              DURING BLOAT (102)\n    14,417,920           4,096               DURING BLOAT (211)\n    14,438,400           20,480              DURING BLOAT (1002)\n    14,442,496           4,096               DURING BLOAT (2034)\n    14,462,976           20,480              DURING BLOAT (2056)\n\n\nmemory_watcher and check_memory\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nWe have worker processes that run in containers.  I like to fail hard and early.  So we have two helper functions\nthat help us with that\n\n``check_memory``\n^^^^^^^^^^^^^^^\n\n    Will check the current rss memory against the memory_utils set memory limit.  And if it crosses that limit it will\n    raise a ``MemoryTooBigException``\n\n.. code:: python\n\n    pip install memory_utils\n\n    import memory_utils\n    memory_utils.set_memory_limit(200 * memory_utils.MEGABYTES)\n\n    # .... else where\n\n    memory_utils.check_memory()\n\n\n``memory_watcher``\n^^^^^^^^^^^^^^^^^^\n\n    Often you will want to do your ``check_memory`` at a _safe_ place.  Also memory leaks often happen within a loop.\n    We created ``memory_watcher`` with those concepts in mind\n    \n    .. code:: python\n\n        for account in memory_watcher(Account.objects):\n            account.do_something_memory_intensive()\n            account.save()\n\n    This will call ``check_memory`` before each iteration\n\n\nConfiguration\n~~~~~~~~~~~~~\n``set_verbose``\n^^^^^^^^^^^^^^^\n    By default ``print_memory`` will only print statements that move the memory\n    and ``memory_watcher`` will not print its memory usage.\n    If you want additional verbosity set this to true\n        \n    .. code:: python\n\n        import memory_utils\n        memory_utils.set_verbose(True)\n\n``set_memory_limit``\n^^^^^^^^^^^^^^^^^^^^\n    By default, the memory limit at 200 MB.\n\n    Use this method to change the default.\n\n    This setting is used in ``print_memory`` and ``memory_watcher``\n\n    Note: you can also override this limit at the function level as well\n    \n    .. code:: python\n\n        import memory_utils\n        memory_utils.set_memory_limit(500 * memory_utils.MEGABYTES)\n\n``set_out``\n^^^^^^^^^^^\n\n    By default, we will print to standard out.  Feel free to override here like so\n    \n    .. code:: python\n\n        import memory_utils\n        from StringIO import StringIO\n\n        out = StringIO()\n        memory_utils.set_out(out)\n\n\nQuestions / Issues\n------------------\n\nFeel free to ping me on twitter: `@tushman`_\nor add issues or PRs at https://github.com/jtushman/memory_utils\n\n.. _@tushman: http://twitter.com/tushman\n\n.. |Build Status| image:: https://travis-ci.org/jtushman/proxy_tools.svg?branch=master\n    :target: https://travis-ci.org/jtushman/memory_utils\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/jtushman/memory_utils",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "memory_utils",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/memory_utils/",
    "release_url": "https://pypi.org/project/memory_utils/1.0.1/",
    "requires_python": null,
    "summary": "Tools to help with memory leaks",
    "version": "1.0.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "14f05c6b324ea43bd12caf48759440d6",
          "sha256": "42e6c0c059a36be7e730232e3c7c17963e049048af59d11283689c91cf7b5aa9"
        },
        "downloads": 1302,
        "filename": "memory_utils-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "14f05c6b324ea43bd12caf48759440d6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3354,
        "upload_time": "2014-09-29T13:55:08",
        "url": "https://files.pythonhosted.org/packages/22/e8/66ea5b462d7e2c7cc8e8fb0ff84afef2369da20c820d6c76327fdc5d5186/memory_utils-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6dc854fb2f55aa7a7a1674df65955c9d",
          "sha256": "4f2d8ace301909bbf89bf67f2e0237e103a77dc3f51a5a3cc001123aa6862511"
        },
        "downloads": 1276,
        "filename": "memory_utils-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6dc854fb2f55aa7a7a1674df65955c9d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4268,
        "upload_time": "2014-09-29T15:30:20",
        "url": "https://files.pythonhosted.org/packages/a6/0b/84b17b8174a4a9b81b9f95109fb91271213eb28fa022f5fe19672883ac36/memory_utils-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5a8abea7f8f3ee413c17c11a0786c90d",
          "sha256": "881f8c2d00451fc8deab88b2047309c4b481f87e5018f077c6ac5a4cd2c22425"
        },
        "downloads": 1329,
        "filename": "memory_utils-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5a8abea7f8f3ee413c17c11a0786c90d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4324,
        "upload_time": "2014-09-29T23:08:27",
        "url": "https://files.pythonhosted.org/packages/16/bb/1d6f37eb513bc4339121ebd3cf02d5559d0db12d92c11a40f597c267a8c9/memory_utils-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "de72ee408187966129213196607793ee",
          "sha256": "9124d32965448b4ba83c0382705d07f7c0082e0701db2c2f4eee66c28c90168f"
        },
        "downloads": 1230,
        "filename": "memory_utils-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "de72ee408187966129213196607793ee",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4316,
        "upload_time": "2014-11-26T16:02:51",
        "url": "https://files.pythonhosted.org/packages/f0/35/7657994e01e69cebbf31ce1ed3baeba8881a1ea517d2ab9d97f0aec960fd/memory_utils-0.1.3.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "da1129cb0011fc184eae2937239f5da1",
          "sha256": "c13ed907a889cb998c98e94901431bc9921ab33bc992c227e3ccd6096fe65a7e"
        },
        "downloads": 1350,
        "filename": "memory_utils-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "da1129cb0011fc184eae2937239f5da1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4334,
        "upload_time": "2014-12-05T19:58:10",
        "url": "https://files.pythonhosted.org/packages/a1/3d/75aa4540d8c9527b55e2e5d17d0e0234f1e1ad0cfd74a99f827c9fa268d2/memory_utils-0.1.4.tar.gz"
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3df669bea427a4df06635a8284dcd9e0",
          "sha256": "470c4fc6689fdaf0b5f85a00ed954739303d7e42720681ac38531e450cf0b6d7"
        },
        "downloads": 719,
        "filename": "memory_utils-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3df669bea427a4df06635a8284dcd9e0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4422,
        "upload_time": "2015-12-09T21:22:36",
        "url": "https://files.pythonhosted.org/packages/6c/68/52377659fbe4c666577b125a0a13f752c97e6e38c4e8496440f4b309c150/memory_utils-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "851df7f2df93b9fa5bead44afab6fb35",
          "sha256": "5d4cecedc06bafa35b24511e14b5c0449c4aa0a528268ad910e0063548c5c789"
        },
        "downloads": 552,
        "filename": "memory_utils-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "851df7f2df93b9fa5bead44afab6fb35",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4426,
        "upload_time": "2015-12-09T21:34:22",
        "url": "https://files.pythonhosted.org/packages/80/62/d6e93dc1b185521392c892fc3e76651160707742409d7947be46ca3c74de/memory_utils-1.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "851df7f2df93b9fa5bead44afab6fb35",
        "sha256": "5d4cecedc06bafa35b24511e14b5c0449c4aa0a528268ad910e0063548c5c789"
      },
      "downloads": 552,
      "filename": "memory_utils-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "851df7f2df93b9fa5bead44afab6fb35",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4426,
      "upload_time": "2015-12-09T21:34:22",
      "url": "https://files.pythonhosted.org/packages/80/62/d6e93dc1b185521392c892fc3e76651160707742409d7947be46ca3c74de/memory_utils-1.0.1.tar.gz"
    }
  ]
}