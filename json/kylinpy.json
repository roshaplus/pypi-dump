{
  "info": {
    "author": "Yongjie Zhao",
    "author_email": "yongjie.zhao@kyligence.io",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": ".. image:: https://img.shields.io/pypi/v/kylinpy.svg\n   :target: https://pypi.python.org/pypi/kylinpy\n\nApache Kylin Python Client Library\n==================================\nApache Kylin Python Client Library is a python-based Apache Kylin client.\n\nThere are two components in Apache Kylin Python Client Library.\n\n* Apache Kylin python command line:\n\n  This component provides a unified command line interface to Apache Kylin.\n\n* Apache Kylin dialect for SQLAlchemy:\n\n  Any application that uses SQLAlchemy can now query Apache Kylin with this Apache Kylin dialect installed.\n\nThe two components above are based on Apache Kylin python client.\n\nInstallation\n------------\n\nThe easiest way to install Apache Kylin Python Client Library is to use pip::\n\n    pip install --upgrade kylinpy\n\nAlternatiely, you may install this library from local project path,\nYou are welcomed to also commit to this library::\n\n    git clone https://github.com/Kyligence/kylinpy.git\n    pip install -e kylinpy\n\nApache Kylin python Command Line\n--------------------------------\nAfter installing Apache Kylin Python Client Library you may run kylinpy in terminal::\n\n    kylinpy\n    Usage: kylinpy [OPTIONS] COMMAND [ARGS]...\n\n    Options:\n      -h, --host TEXT       kylin/kap host name  [required]\n      -P, --port INTEGER    kylin/kap port, default: 7070\n      -u, --username TEXT   kylin/kap username  [required]\n      -p, --password TEXT   kylin/kap password  [required]\n      --project TEXT        kylin/kap project  [required]\n      --prefix TEXT         kylin/kap RESTful prefix of url, default: /kylin/api\n      --debug / --no-debug  show debug infomation\n      --api2 / --api1       API version; default is api1; --api1 used by Apache KYLIN;\n                        --api2 used by KAP\n      --help                Show this message and exit.\n\n    Commands:\n      auth           get user auth info\n      cube_columns   list cube columns\n      cube_desc      show cube description\n      cube_names     list cube names\n      cube_sql       get sample sql of cube. KAP only\n      model_desc     show model description\n      projects       list all projects\n      query          sql query\n      table_columns  list table columns\n      table_names    list all table names\n      users          list all users. Need admin role. KAP only\n\nYou can now query or fetch Apache Kylin information using kylinpy command, below are the command options.\nIf you haven't yet installed Apache Kylin in your environment, you may refer to this tutorial:\nhttp://kylin.apache.org/docs21/install/index.html\n\nkylinpy command options\n^^^^^^^^^^^^^^^^^^^^^^^\n\n============================= =========== ============================================\nCommand                       Option      Description\n============================= =========== ============================================\nauth                                      get user auth info\n----------------------------- ----------- --------------------------------------------\ncube_columns                  --name      list cube columns\n----------------------------- ----------- --------------------------------------------\ncube_desc                     --name      show cube description\n----------------------------- ----------- --------------------------------------------\ncube_names                                list cube names\n----------------------------- ----------- --------------------------------------------\ncube_sql                      --name      get sql of cube\n----------------------------- ----------- --------------------------------------------\nmodel_desc                    --name      show model description\n----------------------------- ----------- --------------------------------------------\nprojects                                  list all projects\n----------------------------- ----------- --------------------------------------------\nquery                         --sql       sql query\n----------------------------- ----------- --------------------------------------------\ntable_columns                 --name      list table columns\n----------------------------- ----------- --------------------------------------------\ntable_names                               list all table names\n----------------------------- ----------- --------------------------------------------\nusers                                     list all users, need admin role, KAP only\n============================= =========== ============================================\n\nExamples\n^^^^^^^^\n\n1. To get all user info from Apache Kylin with debug mode::\n\n    kylinpy -h kap.kapdemo.com -P 7070 -u ADMIN -p KYLIN --project learn_kylin --api1 --debug auth\n\n2. To get all cube columns from Apache Kylin with debug mode::\n\n    kylinpy -h kap.kapdemo.com -P 7070 -u ADMIN -p KYLIN --project learn_kylin --api1 --debug cube_columns --name kylin_sales_cube\n\n3. To get cube description of selected cube from Apache Kylin with debug mode::\n\n    kylinpy -h kap.kapdemo.com -P 7070 -u ADMIN -p KYLIN --project learn_kylin --api1 --debug cube_desc --name kylin_sales_cube\n\n4. To get all cube names from Apache Kylin with debug mode::\n\n    kylinpy -h kap.kapdemo.com -u ADMIN -p KYLIN --project learn_kylin --api1 --debug cube_names\n\n5. To get cube SQL of selected cube from Apache Kylin with debug mode::\n\n    kylinpy -h kap.kapdemo.com -P 7070 -u ADMIN -p KYLIN --project learn_kylin --api1 --debug cube_sql --name kylin_sales_cube\n\n6. To list all projects from Apache Kylin with debug mode::\n\n    kylinpy -h kap.kapdemo.com -P 7070 -u ADMIN -p KYLIN --project learn_kylin --api1 --debug projects\n\n7. To list all tables column of selected cube from Apache Kylin with debug mode::\n\n    kylinpy -h kap.kapdemo.com -P 7070 -u ADMIN -p KYLIN --project learn_kylin --api1 --debug table_columns --name KYLIN_SALES\n\n8. To get all table names from kylin::\n\n    kylinpy -h kap.kapdemo.com -u ADMIN -p KYLIN --project learn_kylin --api1 table_names\n\n9. To get the model description of the selected model from Apache Kylin with debug mode::\n\n    kylinpy -h kap.kapdemo.com -P 7070 -u ADMIN -p KYLIN --project learn_kylin --api1 --debug model_desc --name kylin_sales_model\n\n\nApache Kylin dialect for SQLAlchemy\n-----------------------------------\nAny application that uses SQLAlchemy can now query Apache Kylin with this Apache Kylin dialect installed. It is part of the Apache Kylin Python Client Library, so if you already installed this library in the previous step, you are ready to use. \n\nYou may use below template to build DSN to connect Apache Kylin::\n\n    kylin://<username>:<password>@<hostname>:<port>/<project>?version=<v1|v2>&prefix=</kylin/api>\n\n============================= ============================================\nDSN Field                         Default Value\n============================= ============================================\nusername\n----------------------------- --------------------------------------------\npassword\n----------------------------- --------------------------------------------\nhostname\n----------------------------- --------------------------------------------\nport                               7070\n----------------------------- --------------------------------------------\nproject                            default\n----------------------------- --------------------------------------------\nversion                            v1\n----------------------------- --------------------------------------------\nprefix                             /kylin/api\n============================= ============================================\n\nTest connection with Apache Kylin::\n\n    $ python\n    >>> import sqlalchemy as sa\n    >>> kylin_engine = sa.create_engine('kylin://username:password@hostname:7070/learn_kylin?version=v1')\n    >>> results = kylin_engine.execute('SELECT count(*) FROM KYLIN_SALES')\n    >>> [e for e in results]\n    [(4953,)]\n    >>> kylin_engine.table_names()\n    [u'KYLIN_ACCOUNT',\n     u'KYLIN_CAL_DT',\n     u'KYLIN_CATEGORY_GROUPINGS',\n     u'KYLIN_COUNTRY',\n     u'KYLIN_SALES',\n     u'KYLIN_STREAMING_TABLE']\n\nNow you can configure the DSN in your application to establish the connection with Apache Kylin.\n\nFor example, you may install Apache Kylin Python Client Library in your Superset environment and configure connection to Apache Kylin in Superset\n\n.. image:: https://raw.githubusercontent.com/Kyligence/kylinpy/master/docs/picture/superset1.png\n\nthen you may be able to query Apache Kylin one table at a time from Superset\n\n.. image:: https://raw.githubusercontent.com/Kyligence/kylinpy/master/docs/picture/superset2.png\n\nyou may also be able to query detail data\n\n.. image:: https://raw.githubusercontent.com/Kyligence/kylinpy/master/docs/picture/superset3.png\n\nAlternatively, you may also be able to query multiple tables from Apache Kylin by using SQL Lab in Superset.\n\n.. image:: https://raw.githubusercontent.com/Kyligence/kylinpy/master/docs/picture/superset4.png",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Kyligence/kylinpy",
    "keywords": "kylin,kap,cli,sqlalchemy dialect",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kylinpy",
    "platform": "",
    "project_url": "https://pypi.org/project/kylinpy/",
    "release_url": "https://pypi.org/project/kylinpy/1.0.9/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Apache Kylin Python Client Library",
    "version": "1.0.9"
  },
  "releases": {
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ecf63c260b6099ff5a0c69cf7d548f33",
          "sha256": "58e3698d17a036332180c80bf39013baafb5e134d31a187cb54a57a61a19cf37"
        },
        "downloads": -1,
        "filename": "kylinpy-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ecf63c260b6099ff5a0c69cf7d548f33",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 39667,
        "upload_time": "2017-12-25T03:50:04",
        "url": "https://files.pythonhosted.org/packages/68/2c/2cef7ed2ca97b353ccc971bd1f52a968e82a4aaef3c33e11247a207a147b/kylinpy-1.0.6.tar.gz"
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f17c907009faa5e9cb043ab9d61b3987",
          "sha256": "3df7ab709ab61b875ed78e133825a6f82aeeb22cd93f9094f4b536f042fd1b5b"
        },
        "downloads": -1,
        "filename": "kylinpy-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "f17c907009faa5e9cb043ab9d61b3987",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 39929,
        "upload_time": "2017-12-26T07:08:36",
        "url": "https://files.pythonhosted.org/packages/94/a2/523ab3b348b47f62eb6276ee4a61103095d9d27790725f2eb2cba253ac53/kylinpy-1.0.7.tar.gz"
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e1980f6a87f2dc4a12851463c9252a4a",
          "sha256": "f7dbab42752687e7d675667777132e48bfc2b69b11f3003ba55c448a4b223c04"
        },
        "downloads": -1,
        "filename": "kylinpy-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "e1980f6a87f2dc4a12851463c9252a4a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 46182,
        "upload_time": "2018-01-22T14:32:50",
        "url": "https://files.pythonhosted.org/packages/07/1c/20cbc7a9229416cf6b0d604cc7c3a9e6815c43b96f981b6bf0ba542a397a/kylinpy-1.0.8.tar.gz"
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "234415bd23d4c838799ae743259dacf6",
          "sha256": "d8f9ea0c4d54fabdc7edf62fef7160cd2f38b1bb125ae67965b3beeab5246e24"
        },
        "downloads": -1,
        "filename": "kylinpy-1.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "234415bd23d4c838799ae743259dacf6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 46187,
        "upload_time": "2018-01-23T04:02:32",
        "url": "https://files.pythonhosted.org/packages/1d/02/14519c726a1053870a7da7a113755402bc4bed11a9f3571e3368ddabea0e/kylinpy-1.0.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "234415bd23d4c838799ae743259dacf6",
        "sha256": "d8f9ea0c4d54fabdc7edf62fef7160cd2f38b1bb125ae67965b3beeab5246e24"
      },
      "downloads": -1,
      "filename": "kylinpy-1.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "234415bd23d4c838799ae743259dacf6",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 46187,
      "upload_time": "2018-01-23T04:02:32",
      "url": "https://files.pythonhosted.org/packages/1d/02/14519c726a1053870a7da7a113755402bc4bed11a9f3571e3368ddabea0e/kylinpy-1.0.9.tar.gz"
    }
  ]
}