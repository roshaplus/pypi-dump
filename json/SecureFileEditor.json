{
  "info": {
    "author": "Alexandre PUJOL",
    "author_email": "alexandre@pujol.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Topic :: Security",
      "Topic :: Text Editors"
    ],
    "description": "# Secure File Editor\n\nSecure File Editor for sensitive file storage and edition\n\n## Description\nSecure File Editor or SFE is a tool wich allow you to store and edit your\nsensitive data. All that data are encrypted on you disk. SFE will decrypt them\nonly before editing them with a classic command line editor like vim or nano.\n\n## Installation\n\n### Requirement\n\nSFE require :\n* Python 2.7/3.x\n* The python package : `pycrypto`\n\n### Using pip\n```shell\nsudo pip install SecureFileEditor\n```\n\n### Using setup\n```shell\nsudo python2 setup.py install\n```\n\nFor developpement usage\n```shell\nsudo python2 setup.py develop\n```\n\n## Usage\n\n### Security purpose\nFor edit, encrypt and decrypt a file you need to enter a new passphrase or an\nexisting passphrase. The strengh of the passphrase emply the strengh of your sfe\nencrypted file. In more if you forget your passphrase you will not be able to\nrecover your sfe file.\n\nSFE use AES256 in CBC mode as symmetric function and SHA256 as hash function for generate the symmetric key file with your passphrase and a 32 bits lenght salt.\n\n### Common usage\n**Edit a sfe file**\nIf you want to edit a sfe file\n```shell\nsfe <file>\n```\n\n**NB** `sfe <file>` can also be used for creating a new sfe empty file. But `<file>` cannot be empty.\n\n**Encrypt an existing plain file**\nIf you want to encrypt an existing plain file for a sfe usage\n```shell\nsfe --encrypt <file>\n```\n\n**Decrypt an existing sfe file**\nIf you want ti decrypt an existing sfe file when sfe isn't any more required\n```shell\nsfe --decrypt <file>\n```\n\n**Choose your editor**\nYou can choose you file editor (vim is the default editor):\n ```shell\n sfe --vim <file>\n sfe --nano <file>\n ```\n \n**Version**\n```shell\nsfe --version\n```\n\n**Help**\n```shell\nsfe --help\n```\n\n## How SFE works\n\n### File Edition Scheme:\n\n**Plain file to sfe file (`sfe -e <filename>`)**\n```\n  filename                       filename\n \u250c\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2510              \u250c\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2510\n \u250a  text file   \u250a\u2501\u2501encryption\u2501\u25b6\u250a   sfe file   \u250a\n \u250a   (plain)    \u250a   write()    \u250a (encrypted)  \u250a\n \u2514\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2518              \u2514\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2518\n```\n\n**SFE file to plain file (`sfe -d <filename>`)**\n```\n  filename                       filename\n \u250c\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2510              \u250c\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2510\n \u250a   sfe file   \u250a\u2501\u2501decryption\u2501\u25b6\u250a  text file   \u250a\n \u250a (encrypted)  \u250a    read()    \u250a   (plain)    \u250a\n \u2514\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2518              \u2514\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2518\n```\n\n**If a sfe file already exist (`sfe <filename>`)**\n```\n  filename                       /tmp/filename                filename\n \u250c\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2510              \u250c\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2510              \u250c\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2510\n \u250a   sfe file   \u250a\u2501\u2501decryption\u2501\u25b6\u250a  text file   \u250a\u2501\u2501encryption\u2501\u25b6\u250a   sfe file   \u250a\n \u250a (encrypted)  \u250a    read()    \u250a   (plain)    \u250a   write()    \u250a (encrypted)  \u250a\n \u2514\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2518              \u2514\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2518              \u2514\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2518\n                                    edit()\n```\n\n**Action : `write()`**\n\n1. Read a plain file from /tmp/ or from the current directory.\n2. Delete the plain file (with srm in rcmp mode).\n3. Encrypt the plain file.\n4. Write the encrypted SFE file.\n\n**Action : `read()`**\n\n1. Read the SFE file\n2. Decrypt the SFE file\n3. Write the plain file in /tmp/\n\n### Encryption scheme\n\n```\n                            \u256d\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u256e\n                            \u250a passphrase \u250a\n                            \u2570\u2508\u2508\u2508\u2508\u2508\u252c\u2508\u2508\u2508\u2508\u2508\u2508\u256f\n  file on disk:                   \u2502\n \u250c \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2510          \u25bc\n \u254e\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\u254e    \u256d\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u256e                    \n \u254e\u2502       Salt        \u2502\u2501\u2501\u2501\u2501\u25b6\u250a master key \u250a\n \u254e\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u254e    \u2570\u2508\u2508\u2508\u2508\u2508\u252c\u2508\u2508\u2508\u2508\u2508\u2508\u256f\n \u254e\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\u254e          \u25bc         \u256d\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u256e\n \u254e\u2502 Encrypted file key\u2502\u2501\u2501\u2501\u2501\u2501(decryption)\u2501\u2501\u2501\u25b6\u250a file key \u250a\n \u254e\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u254e                    \u2570\u2508\u2508\u2508\u2508\u252c\u2508\u2508\u2508\u2508\u2508\u256f\n \u254e\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u254e                         \u25bc          \u250c\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2510\n \u254e\u2502  Encrypted file   \u2502\u25c0\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501(de/encryption)\u2501\u2501\u2501\u25b6\u250a   text file   \u250a\n \u254e\u2502     contents      \u2502\u254e                                    \u250a    (plain)    \u250a\n \u254e\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u254e                                    \u2514\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2518\n \u2514 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2518    \n```\n\n**Description**\n* `master_key` = SHA256(`salt` | `passphrase`)\n* `Encrypted_file_key` = AES256(`plain_file_key`, `master_key`)\n* `Encrypted_file_contents` = AES256(`plain_file`, `plain_file_key`)\n\n### SFE file format\n```\n \u250c \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2510\n \u254e\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\u254e                  \n \u254e\u2502      Header       \u2502\u254e 32 bytes (HEADER_SIZE)\n \u254e\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u254e\n \u254e\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\u254e                  \n \u254e\u2502       Salt        \u2502\u254e 32 bytes (SALT_SIZE)\n \u254e\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u254e\n \u254e\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\u254e\n \u254e\u2502 Encrypted file key\u2502\u254e 64 bytes (CIPHER_KEY_SIZE) \n \u254e\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u254e\n \u254e\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u254e\n \u254e\u2502  Encrypted file   \u2502\u254e\n \u254e\u2502     contents      \u2502\u254e\n \u254e\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u254e\n \u2514 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2518\n```   \n\n## Author\n\n* Version `1.0`\n* Year `2014`\n* Website https://securefileeditor.pujol.io\n* Author `Alexandre PUJOL` <alexandre@pujol.io>\n* License `GPL3`",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/alexandrepujol/securefileeditor",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "SecureFileEditor",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/SecureFileEditor/",
    "release_url": "https://pypi.org/project/SecureFileEditor/1.0/",
    "requires_python": null,
    "summary": "Secure File Editor for sensitive file storage and edition",
    "version": "1.0"
  },
  "releases": {
    "1.0": []
  },
  "urls": []
}