{
  "info": {
    "author": "Krzysztof Warunek",
    "author_email": "krzysztof@warunek.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "aiounittest\n===========\n\n|image0|_ |image1|_\n\n.. |image0| image:: https://api.travis-ci.org/kwarunek/aiounittest.png?branch=master\n.. _image0: https://travis-ci.org/kwarunek/aiounittest\n\n.. |image1| image:: https://badge.fury.io/py/aiounittest.svg\n.. _image1: https://badge.fury.io/py/aiounittest\n\nInfo\n====\n\nA helper library, that let you write test of the asynchornous code (:code:`asyncio`) transparently. This means you can test:\n\n* synchronous code (same as the :code:`unittest.TestCase`)\n* asynchronous code, it supports syntax with :code:`async`/:code:`await` (Python 3.5+) and :code:`asyncio.coroutine`/:code:`yield from` (Python 3.4)\n\n\nInstallation\n============\n\nUse pip:\n\n::\n\n    pip install aiounitest\n\nor manually\n\n::\n\n    git clone https://github.com/kwarunek/aiounittest.git\n    cd aiounittest\n    python setup.py install\n\nUsage\n=====\n\nThis library exposes following objects:\n\n1. AsyncTestCase_\n2. futurized_\n3. async_test_\n\nEach of them can be used independently.\n\n\nAsyncTestCase\n-------------\n\n.. code-block:: python\n\n    import asyncio\n    import aiounittest\n\n\n    async def add(x, y):\n        await asyncio.sleep(0.1)\n        return x + y\n\n    class MyTest(aiounittest.AsyncTestCase):\n\n        async def test_async_add(self):\n            ret = await add(5, 6)\n            self.assertEqual(ret, 11)\n\n        # or 3.4 way\n        @asyncio.coroutine\n        def test_sleep(self):\n            ret = yield from add(5, 6)\n            self.assertEqual(ret, 11)\n\n        # some regular test code\n        def test_something(self):\n            self.assertTrue(true)\n\n\nBy default :code:`AsyncTestCase` use the main event loop and cleans it ups on every test. If you want to change that behaiour  override the :code:`AsyncTestCase.get_event_loop` method.\n\n____________\n\nfuturized\n----------\n\nThis helper wraps object in the asyncio's :code:`Future`. It can be used to mock coroutines. Decorate any kind of object with it and pass to :code:`unittest.mock.Mock`'s (:code:`MagicMock` as well) :code:`return_value` or :code:`side_effect`. If the given object is an :code:`Exception` (or its sublcass), :code:`futurized` will treat it accordingly and exception will be raised upon await.\n\nSome dummy module:\n\n.. code-block:: python\n\n    # dummy_math.py\n\n    from asyncio import sleep\n\n    async def add(x, y):\n        await sleep(666)\n        return x + y\n\n\nAnd the test with mocked :code:`asyncio.sleep`:\n\n.. code-block:: python\n\n    from aiounittest import futurized, AsyncTestCase\n    from unittest.mock import Mock, patch\n\n    import dummy_math\n\n    class MyTest(AsyncTestCase):\n\n        def tearDown(self):\n            super().tearDown()\n            patch.stopall()\n\n        async def test_add(self):\n            mock_sleep = Mock(return_value=futurized('whatever'))\n            patch('dummy_math.sleep', mock_sleep).start()\n            ret = await dummy_math.add(5, 6)\n            self.assertEqual(ret, 11)\n\n        async def test_fail(self):\n            mock_sleep = Mock(return_value=Exception('whatever'))\n            patch('dummy_math.sleep', mock_sleep).start()\n            with self.assertRaises(Exception) as e:\n                await dummy_math.add(5, 6)\n\n____________\n\nasync_test\n----------\n\nIt's a decorator that let you to use the standard `unittest.TestCase` and run asynchronous tests, just decorate them.\n\n.. code-block:: python\n\n    import asyncio\n    import unittest\n    from aiounittest import async_test\n\n\n    async def add(x, y):\n        await asyncio.sleep(0.1)\n        return x + y\n\n    class MyTest(unittest.TestCase):\n\n        @async_test\n        async def test_async_add(self):\n            ret = await add(5, 6)\n            self.assertEqual(ret, 11)\n\n\nLicense\n=======\n\nMIT\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/kwarunek/aiounittest",
    "keywords": "asyncio,async,unittest,coroutine",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiounittest",
    "platform": "",
    "project_url": "https://pypi.org/project/aiounittest/",
    "release_url": "https://pypi.org/project/aiounittest/0.5.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Test asyncio code more easily.",
    "version": "0.5.1"
  },
  "releases": {
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4b46c90e051fa8b2c003368cd9436b4a",
          "sha256": "680377c525ac17da03e337841723d4e2c2b1e2501ceed4f8fec4b482ca2f581b"
        },
        "downloads": 0,
        "filename": "aiounittest-0.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b46c90e051fa8b2c003368cd9436b4a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 6131,
        "upload_time": "2017-08-17T10:08:39",
        "url": "https://files.pythonhosted.org/packages/4d/f0/0d4faf4e9f9b1463ddfd476d7e0bbc8fede5957155e32da1a961ef339bc9/aiounittest-0.3.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "586e686d0421b669140008c956fa068b",
          "sha256": "913bf10361fd37e8f8cdcdfee7f79e104e3a45c1c8a227a3e88f154bcb143062"
        },
        "downloads": 0,
        "filename": "aiounittest-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "586e686d0421b669140008c956fa068b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4564,
        "upload_time": "2017-08-17T10:08:40",
        "url": "https://files.pythonhosted.org/packages/4a/dd/59993acd4a341e07f82c8e7b63fbcb33aac5cfb8f3573e52767c133fdf80/aiounittest-0.3.1.tar.gz"
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4a4dfc4715b0835da7142a6355358883",
          "sha256": "8f1b1aa950c291c54c842e558d317534c8a512752a5d8c8dd35e9ba820d09620"
        },
        "downloads": 0,
        "filename": "aiounittest-0.4.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a4dfc4715b0835da7142a6355358883",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 5678,
        "upload_time": "2017-08-17T14:55:08",
        "url": "https://files.pythonhosted.org/packages/43/e9/239fcdcf70f2d85dabb4bca51cd461049f38c4d64fe70e2025262e706ec0/aiounittest-0.4.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d7d55f5325b76be7541b0f6e1325fe6b",
          "sha256": "352f0c540f5474a3acf77b65276d91b98a1e72dcae3aef407a7298ac5d2f6987"
        },
        "downloads": 0,
        "filename": "aiounittest-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d7d55f5325b76be7541b0f6e1325fe6b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4058,
        "upload_time": "2017-08-17T14:55:09",
        "url": "https://files.pythonhosted.org/packages/d6/c3/e4fea548c4b4338d03c765144856c0024a0f090367eca44417bd25620198/aiounittest-0.4.1.tar.gz"
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8f6b6c1dd7bd994f6908aa1c34904e4a",
          "sha256": "0fa851d89bcb2ef81d79382ef93171408ae1ff5a764ca3aa290764ecfc619bc2"
        },
        "downloads": 0,
        "filename": "aiounittest-0.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f6b6c1dd7bd994f6908aa1c34904e4a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 6235,
        "upload_time": "2017-08-17T18:41:43",
        "url": "https://files.pythonhosted.org/packages/9c/5a/86a7e156036061e9433bb749cf77bcf7dc7c756d0f9acf507be95f97eb4f/aiounittest-0.5.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e94092635319b34fecd78de4e576a875",
          "sha256": "d428d1e8a13f37ff9c3bff4010004189969fead6b048a49da836a413cad74875"
        },
        "downloads": 0,
        "filename": "aiounittest-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e94092635319b34fecd78de4e576a875",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4381,
        "upload_time": "2017-08-17T18:41:47",
        "url": "https://files.pythonhosted.org/packages/e3/c6/a8437a36ea77c1d11c6540421c698e074a43fb77f3b1102d2de14f51955d/aiounittest-0.5.0.tar.gz"
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f8d7b10dbc8405f261c53cf1aa896b4b",
          "sha256": "7d8bb0a16b2ad1b99b1ea24c58dc9a0fe7f1d112d941422306786d2673c093c9"
        },
        "downloads": 0,
        "filename": "aiounittest-0.5.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8d7b10dbc8405f261c53cf1aa896b4b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 6079,
        "upload_time": "2017-08-17T19:03:31",
        "url": "https://files.pythonhosted.org/packages/6f/d2/ce83c84c19cb93aba7fa14ffaf8a05948b41c6b8db8742645e7ffd2a0f29/aiounittest-0.5.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d2ec18ac8537d8b59ae3d29822eeb761",
          "sha256": "210564b47233ea411d3fbcbbb0593ea040ffcd4cda23e3f306927121dfda2aae"
        },
        "downloads": 0,
        "filename": "aiounittest-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d2ec18ac8537d8b59ae3d29822eeb761",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4339,
        "upload_time": "2017-08-17T19:03:34",
        "url": "https://files.pythonhosted.org/packages/9d/44/5b859c5e0928d4bdc5409046e6f9cb7732c127208f05cbc2c8804dbbb31f/aiounittest-0.5.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f8d7b10dbc8405f261c53cf1aa896b4b",
        "sha256": "7d8bb0a16b2ad1b99b1ea24c58dc9a0fe7f1d112d941422306786d2673c093c9"
      },
      "downloads": 0,
      "filename": "aiounittest-0.5.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f8d7b10dbc8405f261c53cf1aa896b4b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 6079,
      "upload_time": "2017-08-17T19:03:31",
      "url": "https://files.pythonhosted.org/packages/6f/d2/ce83c84c19cb93aba7fa14ffaf8a05948b41c6b8db8742645e7ffd2a0f29/aiounittest-0.5.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "d2ec18ac8537d8b59ae3d29822eeb761",
        "sha256": "210564b47233ea411d3fbcbbb0593ea040ffcd4cda23e3f306927121dfda2aae"
      },
      "downloads": 0,
      "filename": "aiounittest-0.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d2ec18ac8537d8b59ae3d29822eeb761",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4339,
      "upload_time": "2017-08-17T19:03:34",
      "url": "https://files.pythonhosted.org/packages/9d/44/5b859c5e0928d4bdc5409046e6f9cb7732c127208f05cbc2c8804dbbb31f/aiounittest-0.5.1.tar.gz"
    }
  ]
}