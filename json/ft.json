{
  "info": {
    "author": "Dan Simonson",
    "author_email": "dan.simonson@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "##################################################\n# Free Tables: A Conduit for the Magic of Python #\n#   Dan Simonson - 2013                          #\n##################################################\n\nPython data types are awesome. You can do pretty much anything with them.\nOne particularly useful arrangement is a list of dictionaries, something\nI started referring to as a \"free table.\"\n\nThis is a library for manipulating free tables.\n\n################# Setup\n    $ sudo python setup.py install\n\nThat's it really. Python's pretty rad. Future versions may be a little more \ncomplicated.\n\n################# Conventions\ndata: If an argument is called data, a free table is expected there.\n\ndatum/point: A dictionary of a free table. \n\ndex: If an argument is called dex, then it should be a dex--a dictionary\nwhose values are free tables. These are what indexBy returns. \n\nprop: If an argument is called prop, it's a property. This usually should\nbe an entry in every datum in data. It isn't always, sometimes intended for\nretaining consistency. \n\n################# FAQ\n+ Why don't you make an ftable class?\n    No. That defeats the whole point of free tables. They're supposed to be\n    pliable and easily manipulable using Python syntax. They're a convention,\n    not a type. I only see the imposition of a class upon the structure as\n    a hinderance.\n\n    Additionally, free tables are the gestation of a larger movement towards \n    a classless society free of bourgeoisie oppression. This is because \n    algorithms are ideology. Power to the people.\n\n    If you think I'm wrong, you're welcome to prove me so.\n\n\n################# Official To-Do/Bugs List\n\nBugs:\n    + load_csv is a half-baked implementation. No quote support.\n\nTo-Do/Ideas (No Particular Order):\n    + multidex seems to be superslow--optimizations required.\n    + validate\n    + a version of validate that doesn't raise an error, but instead\n        just returns naughty and nice lists.\n    + fill_defaults\n        - given a default entry, it fills each data point that lacks\n            a key in default with the kv pair in the default.\n    + dump_csv\n        - both load_csv and dump_csv need to be totally written to handle\n            dialects more formally\n    + load_json, dump_json - I don't use json enough for this, but it's easy.\n    + indexBy4's performance really dragged once pipe was fixed. Further\n        optimizations: change pipe's default from lambda x: x to False and\n        create two cases.\n    + mv((\"x\",\"y\"), [{\"x\":...}, ...]) -> [{\"y\":...}, ...]\n    + has - remove values that don't have property\n    + fulldex: build a dex of every value available. crazy? absolutely.\n    + kmap(data, k, f)\n        d[k] = f(d[k])\n    + tag is so useful, but it's hideous. why is it so wrong? \n        - too expressive, perhaps\n\n\n################# Version Info\n0.2.7:\n    + speed boost (probably) for multidex (removed \"sum(...,[])\")\n\n0.2.5 - 0.2.6: \n    + ???\n    + multidex\n    + shoulda had better verison notes here, sorry.\n\n0.2.4:\n    + flatdex \n        - dex entries with one member are turned into the dex dictionary values.\n            {1: [{\"x\":1}]} -> {1: {\"x\":1}}\n        - force = False\n            - if IS True, it grabs the first entry of each list\n\n0.2.3:\n    + indexBy0 wins the optimization war. Removed alternatives.\n    + Added index, which swaps the arguments of indexBy\n    + singletons(\"label\", [1,2,3]) -> [{\"label\": 1}, {\"label\": 2}, ...]\n    + removed pprint statement from merge\n\n0.2.2:\n    + There's load_csv and dump_csv functions now, but they are crap. They work.\n        But they're crap.\n    + This fixes the \";\" bug from earlier versions.\n\n0.2.1: \n    + version number is now a string so I can support multiple \".\"s\n\n0.21:\n    + indexBy4: ACTUALLY fixed pipe arg. The last fix was sloppy.\n    + indexBy0 is now the winner again, so that's the default now.\n\n0.2:\n    + Finished tag.\n    + Added merge.\n    + Cancelled pickle_load/pickle_dump.\n    + Cancelled transformAllTo (what was it supposed to do?)\n    + indexBy4: pipe arg fixed--may not work properly on others\n\n0.1: \n    + First test version\n    + indexBy0, indexBy1, indexBy2, indexBy3, indexBy4 added.\n    + indexBy4 selected as optimal.\n        Performances:\n        <function indexBy0 at 0xf6e500> 0.00283553865387\n        <function indexBy2 at 0xf6e6e0> 0.00355636643664\n        <function indexBy3 at 0xf6e758> 0.0116692264226\n        <function indexBy4 at 0xf6e5f0> 0.00204977947795\n    + meta functions \n        Added: \n            future: raises an exception when a planned function is called.\n        Planned:\n            validate\n    + Manipulation functions \n        Added: \n            histo: turns a dex into a histogram (dictionary with number values)\n            summary: performs histo on each possible key\n        Planned:\n            tag\n            transformAllTo\n    + Hello and Goodbye functions\n        Planned:\n            pickle_load, pickle_dump\n            dump_csv\n            load_json, dump_json\n        Added:\n            load_csv: turns a csv into a free table\n\n\n        \n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://www.thedansimonson.com/ft/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ft",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/ft/",
    "release_url": "https://pypi.org/project/ft/0.2.7/",
    "requires_python": "",
    "summary": "Data management and manipulation package.",
    "version": "0.2.7"
  },
  "releases": {
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "718427883dceb86962ddf0eae365a0c0",
          "sha256": "feeaeafde55499cb85bc33fa5d1c6278012de099a3576f7d1734d3dc97dffd47"
        },
        "downloads": 922,
        "filename": "ft-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "718427883dceb86962ddf0eae365a0c0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5614,
        "upload_time": "2015-12-04T20:23:25",
        "url": "https://files.pythonhosted.org/packages/48/a3/c57da700c6dc1105559183949e616f915950de647b54943fb2ce48d1c54e/ft-0.2.5.tar.gz"
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "275a2a5676703469250042b36c7c7cce",
          "sha256": "7b282402f799701c7bdfec63252da2d148ccddf018c4bfcd92ffaa7b9dcd5ee6"
        },
        "downloads": 0,
        "filename": "ft-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "275a2a5676703469250042b36c7c7cce",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5935,
        "upload_time": "2017-06-19T18:38:53",
        "url": "https://files.pythonhosted.org/packages/a2/85/89b9eeb6968f74efbccad07599dbefc3a59055dc24cddc4bdeae3b20c369/ft-0.2.7.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "275a2a5676703469250042b36c7c7cce",
        "sha256": "7b282402f799701c7bdfec63252da2d148ccddf018c4bfcd92ffaa7b9dcd5ee6"
      },
      "downloads": 0,
      "filename": "ft-0.2.7.tar.gz",
      "has_sig": false,
      "md5_digest": "275a2a5676703469250042b36c7c7cce",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5935,
      "upload_time": "2017-06-19T18:38:53",
      "url": "https://files.pythonhosted.org/packages/a2/85/89b9eeb6968f74efbccad07599dbefc3a59055dc24cddc4bdeae3b20c369/ft-0.2.7.tar.gz"
    }
  ]
}