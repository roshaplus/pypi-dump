{
  "info": {
    "author": "Jeremy Carbaugh",
    "author_email": "jcarbaugh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "python-roku\n===========\n\nScrew remotes. Control your `Roku <http://www.roku.com>`_ via Python.\n\n.. image:: https://travis-ci.org/jcarbaugh/python-roku.svg?branch=master\n    :target: https://travis-ci.org/jcarbaugh/python-roku\n\n\nInstallation\n------------\n\n::\n\n    pip install roku\n\n\nUsage\n-----\n\n\nThe Basics\n~~~~~~~~~~\n\nTo start, import the Roku object and create it with the IP of your Roku.\n::\n\n    >>> from roku import Roku\n    >>> roku = Roku('192.168.10.163')\n\nThe Roku object has a method for each of the buttons on the remote.\n::\n\n    >>> roku.home()\n    >>> roku.right()\n    >>> roku.select()\n\nTo see a full list of available commands, use the *commands* property.\n::\n\n    >>> roku.commands\n    ['back', 'backspace', 'down', 'enter', 'forward', 'home', 'info', 'left', 'literal', 'play', 'replay', 'reverse', 'right', 'search', 'select', 'up']\n\nIf you are following along on your home network and are connected to your Roku, you should see it doing stuff. *Cool!*\n\n\nApps\n~~~~\n\nThe *apps* property will return a list of the applications on your device.\n::\n\n    >>> roku.apps\n    [<Application: [2285] Hulu Plus v2.7.6>, <Application: [13] Amazon Instant Video v5.1.3>, <Application: [20445] VEVO v2.0.12092013>]\n\nApps have *id*, *name*, and *version* properties.\n::\n\n    >>> app = roku.apps[0]\n    >>> print app.id, app.name, app.version\n    2285 Hulu Plus 2.7.6\n\nYou can get an individual app from the Roku object by either its *name* or *id*.\n::\n\n    >>> roku['Hulu Plus']\n    <Application: [2285] Hulu Plus v2.7.6>\n    >>> roku[2285]\n    <Application: [2285] Hulu Plus v2.7.6>\n\nSeeing the reference to this Hulu Plus app makes me really want to watch the latest episode of `Nashville <http://abc.go.com/shows/nashville>`_. Let's launch it!\n::\n\n    >>> hulu = roku['Hulu Plus']\n    >>> hulu.launch()\n\nAgain, if you are following along at home, you should see that your Roku has launched the Hulu Plus app. Want to see the app's entry in the Channel Store?\n::\n\n    >>> hulu.store()\n\nYou can also get the app's icon.\n::\n\n    >>> with open('hulu.png', 'w') as f:\n    ...     f.write(hulu.icon)\n\n\nEntering Text\n~~~~~~~~~~~~~\n\nOkay, I've already seen all of the available episodes of Nashville, so I'm going to search for *Stargate*. With the search open and waiting for text entry::\n\n    >>> roku.literal('stargate')\n\nThis will iterate over each character, sending it individually to the Roku.\n\n\nAdvanced Stuff\n--------------\n\n\nDiscovery\n~~~~~~~~~\n\nRoku devices can be discovered using `SSDP <http://en.wikipedia.org/wiki/Simple_Service_Discovery_Protocol>`_. A class method is available on the Roku object that will return Roku object instances for each device found on the same network.\n::\n\n    >>> Roku.discover()\n    [<Roku: 192.168.10.163:8060>]\n\nIt may take a few seconds for a device to be found. You can call discover again or change the *timeout* or *retries* parameters on the discover method. This will take longer, but will find more devices.\n::\n\n    >>> Roku.discover(timeout=10)\n    [<Roku: 192.168.10.163:8060>, <Roku: 192.168.10.204:8060>]\n\nThanks to `Dan Krause <https://github.com/dankrause>`_ for his `SSDP code <https://gist.github.com/dankrause/6000248>`_.\n\n\nSensors\n~~~~~~~\n\nNewer Roku remotes have extra sensors built into them that measure acceleration, orientation, and other things.You can mimic these sensors using the provided helper methods.\n::\n\n    >>> roku.orientation(1, 1, 1)\n\nThe parameters to all of the sensor methods are x, y, and z values. Available methods include:\n\n* acceleration - in each dimension relative to free fall measured in meters/sec^2\n* magnetic - magnetic field strength in microtesla\n* orientation - angular displacement from flat/level and north in radians\n* rotation - angular rotation rate about each axis using the right hand rule in radians/sec\n\n\nTouch\n~~~~~\n\nSome Roku input devices support touch. The parameters to the *touch* method are the *x* and *y* coordinates of the touch.\n::\n\n    >>> roku.touch(10, 40)\n\nYou can change the event triggered by passing an optional *op* parameter.\n::\n\n    >>> roku.touch(10, 40, op='up')\n\nSupported events are:\n\n* down\n* up\n* press (down and up)\n* move\n* cancel\n\nMultitouch is not yet supported in this package.\n\n\nGeneric Input\n~~~~~~~~~~~~~\n\nBoth the sensor and touch methods rely on the generic *input* method for sending data to a running application. If you refuse to use covenience methods because they make people lazy and weak, you can call the sensor and touch methods directly.\n::\n\n    >>> params = {'touch.0.x': 10, 'touch.0.y': 20, 'touch.0.op': 'press'}\n    >>> roku.input(params)\n\nMore information about input, touch, and sensors is available in the `Roku External Control docs <http://sdkdocs.roku.com/display/sdkdoc/External+Control+Guide#ExternalControlGuide-31ExternalControlInputCommandConventions>`_.\n\n\nTODO\n----\n\n* Tests, of course.\n* Multitouch support.\n* A Flask proxy server that can listen to requests and forward them to devices on the local network. Control multiple devices at once, eh?\n* A server that mimics the Roku interface so you can make your own Roku-like stuff.\n* A task runner that will take a set of commands and run them with delays that are appropriate for most devices.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jcarbaugh/python-roku",
    "keywords": null,
    "license": "BSD License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "roku",
    "platform": "any",
    "project_url": "https://pypi.org/project/roku/",
    "release_url": "https://pypi.org/project/roku/2.0/",
    "requires_python": null,
    "summary": "Client for the Roku media player",
    "version": "2.0"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cfac78915b26fd7949e2e79ba0b26e20",
          "sha256": "ed707d48e71e7af49d205ca31739916bd37855332291239085fcfaf204834ce7"
        },
        "downloads": 2184,
        "filename": "roku-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cfac78915b26fd7949e2e79ba0b26e20",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7558,
        "upload_time": "2014-01-04T20:34:17",
        "url": "https://files.pythonhosted.org/packages/57/1d/9164d55b5bc9601730125f433963607b2ac50add05d60afcdcb821889ee5/roku-1.0.tar.gz"
      }
    ],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6bd0fc8c1b2c8349a4c8549695e273f0",
          "sha256": "7ac9d50bfa4fdc94977e0fd34d93c5d200f2b4fd2ea4d7dfbf63f894919e8e54"
        },
        "downloads": 1992,
        "filename": "roku-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6bd0fc8c1b2c8349a4c8549695e273f0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9033,
        "upload_time": "2014-11-17T16:13:44",
        "url": "https://files.pythonhosted.org/packages/6a/b7/efc2f1e36b0d7b5a81789530736e5035f23085bc0faec86e2bbb4d22928c/roku-2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "6bd0fc8c1b2c8349a4c8549695e273f0",
        "sha256": "7ac9d50bfa4fdc94977e0fd34d93c5d200f2b4fd2ea4d7dfbf63f894919e8e54"
      },
      "downloads": 1992,
      "filename": "roku-2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6bd0fc8c1b2c8349a4c8549695e273f0",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9033,
      "upload_time": "2014-11-17T16:13:44",
      "url": "https://files.pythonhosted.org/packages/6a/b7/efc2f1e36b0d7b5a81789530736e5035f23085bc0faec86e2bbb4d22928c/roku-2.0.tar.gz"
    }
  ]
}