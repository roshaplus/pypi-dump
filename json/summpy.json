{
  "info": {
    "author": "Shumpei IINUMA",
    "author_email": "shumpei.iinuma@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "Summpy\n======\n\nText summarization (sentence extraction) module with simple HTTP API.\n(Currently supports Japanese only)\n\nLicense\n-------\n\nMIT License\n\nRequirements\n------------\n\nPython 2.7.\\*\n~~~~~~~~~~~~~\n\n-  numpy\n-  scipy\n-  scikit-learn\n-  networkx\n-  cherrypy\n-  MeCab or janome\n-  pulp (if you use ILP-based method)\n\nQuick start\n-----------\n\n.. code:: sh\n\n    pip install summpy\n    python -m summpy.server -h 127.0.0.1 -p 8080\n    curl http://127.0.0.1:8080/summarize\\?sent_limit\\=3\\&text\\=\u8981\u7d04\u3057\u305f\u3044\u6587\u7ae0\u3092\u5165\u529b\u3002\n\nInput Parameters\n~~~~~~~~~~~~~~~~\n\n-  ``text``: text (utf-8)\n-  ``algo``: (optional)\n\n   -  ``lexrank``: LexRank, a graph-based summarization (default)\n   -  ``clexrank``: Continuous LexRank\n   -  ``divrank``: (experimental) DivRank (Diverse Rank, graph-based\n      method). Since DivRank aims to provide non-redundant and high\n      coverage information, it is suitable for multi-document\n      summarization.\n   -  ``mcp``: ILP-based method. Extracts sentences in terms of Maximum\n      Coverage Problem.\n\nHyper parameters for how many sentences are shown (optional)\n\n-  ``sent_limit``: number of sentences (only {lex,clex,div}rank)\n-  ``char_limit``: number of characters\n-  ``imp_require``: cumulative scores [0.0-1.0] (only\n   {lex,clex,div}rank)\n\nExample\n~~~~~~~\n\nfrom (http://blog.recruit-tech.co.jp/2015/08/28/recruit_two_cx/)\n\nRequest\n^^^^^^^\n\n.. code:: sh\n\n    curl http://127.0.0.1:8080/summarize\\?sent_limit\\=3\\&text\\=\u7a81\u7136\u3067\u3059\u304c\u3001\u30ea\u30af\u30eb\u30fc\u30c8\u306e\u30ea\u30dc\u30f3\u30e2\u30c7\u30eb\u3092\u8033\u306b\u3057\u305f\u3053\u3068\u306f\u3042\u308b\u3067\u3057\u3087\u3046\u304b\uff1f...\n\nResponse (JSON format)\n^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: javascript\n\n    {\n      summary: [\n        \"\u30ea\u30af\u30eb\u30fc\u30c8\u304c\u63d0\u4f9b\u3059\u308b\u591a\u304f\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u5f8c\u306b\u8a00\u53ca\u3059\u308b\u30ab\u30b9\u30bf\u30de\u30fc\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u53cc\u65b9\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u5b9f\u73fe\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3068\u79f0\u3055\u308c\u308b\u80cc\u666f\u306b\u306f\u3053\u306e\u30ea\u30dc\u30f3\u30e2\u30c7\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\", \n        \"\u305d\u3057\u3066\u3053\u306e\u30ea\u30dc\u30f3\u30e2\u30c7\u30eb\u3053\u305d\u3001\u30ea\u30af\u30eb\u30fc\u30c8\u306b\u304a\u3051\u308bUX\u30c7\u30b6\u30a4\u30f3\u305d\u306e\u3082\u306e\u3001\u3068\u3082\u8a00\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\", \n        \"\u30ea\u30dc\u30f3\u30e2\u30c7\u30eb\u306f\u56fd\u969b\u898f\u683c\u306e\u666e\u53ca\u306b\u3088\u3063\u3066\u751f\u307e\u308c\u305f\u69cb\u60f3\u3067\u306f\u306a\u3044\u3082\u306e\u306e\u3001\u30ea\u30dc\u30f3\u30e2\u30c7\u30eb\u306e\u69cb\u9020\u306f\u30ab\u30b9\u30bf\u30de\u30fc\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4f53\u9a13\u8a2d\u8a08\u57fa\u76e4\u3068\u3082\u6349\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u3001UX\u30c7\u30b6\u30a4\u30f3\u306e\u666e\u53ca\u30fb\u6d78\u900f\u3068\u8db3\u4e26\u3092\u63c3\u3048\u308b\u304b\u306e\u3088\u3046\u306b\u7d44\u7e54\u5185\u306b\u91b8\u6210\u3055\u308c\u3066\u3044\u304d\u307e\u3057\u305f\u3002\"\n      ],\n      debug_info: {}\n    }\n\nTry with browser\n~~~~~~~~~~~~~~~~\n\n``http://<hostname>:<port>/static/test.html``\n\nPython API\n----------\n\nExample (Continuous LexRank)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from summpy.lexrank import summarize\n\n    # ensure type(text) is unicode\n    sentences, debug_info = summarize(\n        text, sent_limit=5, continuous=True, debug=True\n    )\n\n    for sent in sentences:\n        print sent.strip().encode(encoding)\n\nFor further details, see ``main`` part of ``summpy/lexrank.py`` or\n``mcp_summ.py``.\n\nReferences\n----------\n\n-  G. Erkan and D. Radev. LexRank: graph-based lexical centrality as\n   salience in text summarization. J. Artif. Int. Res. 22(1), pages\n   457-479, 2004.\n   (`link <http://www.cs.cmu.edu/afs/cs/project/jair/pub/volume22/erkan04a-html/erkan04a.html>`__)\n-  Q. Mei, J. Guo, and D. Radev. DivRank: the Interplay of Prestige and\n   Diversity in Information Networks. In Proceedings of the 16th ACM\n   SIGKDD International Conference on Knowledge Discovery and Data\n   Mining (KDD '10), pages 1009-1018, 2010.\n   (`link <http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.174.7982>`__)\n\n-  H. Takamura and M. Okumura. Text Summarization Model Based on Maximum\n   Coverage Problem and its Variant. In Proceedings of the 12th\n   Conference of the European Chapter of the Association for\n   Computational Linguistics (EACL '09), pages 781-789, 2009.\n   (`link <http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.222.6945>`__)",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/recruit-tech/summpy",
    "keywords": "automatic summarization,natural language processing",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "summpy",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/summpy/",
    "release_url": "https://pypi.org/project/summpy/0.2.1/",
    "requires_python": null,
    "summary": "Text summarization (sentence extraction) module with simple HTTP API. (currently, supports Japanese only)",
    "version": "0.2.1"
  },
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0e6fad642e7b09131c3ca732d10f009f",
          "sha256": "a81b297c683e9f150966ea81a4f6df03ee2576ede503fe846367776b35a002d4"
        },
        "downloads": 982,
        "filename": "summpy-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0e6fad642e7b09131c3ca732d10f009f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13531,
        "upload_time": "2015-11-18T14:34:34",
        "url": "https://files.pythonhosted.org/packages/30/4d/ea531edea13212f5cd19dd4ff3864f1b9b8e60541d7d81508c9d57fe0ec8/summpy-0.2.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "0e6fad642e7b09131c3ca732d10f009f",
        "sha256": "a81b297c683e9f150966ea81a4f6df03ee2576ede503fe846367776b35a002d4"
      },
      "downloads": 982,
      "filename": "summpy-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0e6fad642e7b09131c3ca732d10f009f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 13531,
      "upload_time": "2015-11-18T14:34:34",
      "url": "https://files.pythonhosted.org/packages/30/4d/ea531edea13212f5cd19dd4ff3864f1b9b8e60541d7d81508c9d57fe0ec8/summpy-0.2.1.tar.gz"
    }
  ]
}