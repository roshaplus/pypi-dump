{
  "info": {
    "author": "Zulko",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "GelSimulator.py\n================\n\nGel Simulator is a Python library to predict gel migration patterns\nfrom enzymatic DNA digestions. It supports hundreds of enzymes (thanks to BioPython),\nsingle- and multiple-enzymes digestions, and custom ladders.\n\nIt uses Matplotlib to produce plots like this one:\n\n.. figure:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/GelSimulator.py/master/examples/multi_enzyme_mixes.png\n    :align: center\n\nWhile fairly minimal, Gel Simulator was written so as to be easily reusable, customizable, and extensible.\n\nLicense = MIT\n---------------\n\nGel Simulator is an open-source software originally written at the `Edinburgh Genome Foundry\n<http://edinburgh-genome-foundry.github.io/home.html>`_ by `Zulko <https://github.com/Zulko>`_\nand `released on Github <https://github.com/Edinburgh-Genome-Foundry/GelSimulator.py>`_ under the MIT licence.\n\nEveryone is welcome to contribute !\n\nInstallation\n--------------\n\nGel Simulator can be installed by unzipping the source code in one directory and using this command:\n\n.. code:: python\n\n    sudo python setup.py install\n\nPIP install is coming soon !\n\n\n\nExamples of use\n----------------\n\n\nComputing digestion bands sizes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis first example shows how to compute digestion bands in the case of\na linear fragment, a circular fragment, and a multi-enzymes digestion.\n\n..  code:: python\n\n    from gelsimulator import compute_digestion_bands\n\n    # Read the sequence (a string of the form 'ATGTGTGGTA...' etc.)\n    with open(\"example_sequence.txt\", \"r\") as f:\n        sequence = f.read()\n\n    # Compute digestion bands for a linear construct\n    print(compute_digestion_bands(sequence, [\"EcoRI\"], linear=True))\n    # Result >>> [400, 1017, 3583]\n\n    # Compute digestion bands for a circular construct\n    print(compute_digestion_bands(sequence, [\"EcoRI\"], linear=False))\n    # Result >>> [1017, 3983]\n\n    # Compute digestion bands for an enzymatic mix\n    print(compute_digestion_bands(sequence, [\"EcoRI\", \"BamHI\"]))\n    # Result >>> [400, 417, 600, 3583]\n\nPlotting a gel simulation\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following example shows how to plot the the digestion patterns produced\nby different restriction enzymes on a same DNA sequence:\n\n..  code:: python\n\n    from gelsimulator import GelSimulator, LADDER_100_to_4k\n    import matplotlib.pyplot as plt\n\n    with open(\"example_sequence.txt\", \"r\") as f:\n        sequence = f.read()\n\n    enzymes = [\"BamHI\", \"EcoRI\", \"EcoRV\", \"PstI\", \"SpeI\", \"XbaI\"]\n    gel_simulator = GelSimulator(LADDER_100_to_4k)\n\n    fig, ax = plt.subplots(1, figsize=(1.1*(len(enzymes)+1), 5))\n    gel_simulator.format_ax(ax)\n    gel_simulator.plot_ladder(ax, x_coord=1)\n    for i, enzyme in enumerate(enzymes):\n        gel_simulator.plot_digestion_result(ax, sequence, [enzyme],\n                                            x_coord=i+2, label=enzyme)\n\n    fig.savefig(\"gel_simulation.png\", bbox_inches=\"tight\")\n\n.. figure:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/GelSimulator.py/master/examples/simple_gel_simulation.png\n    :align: center\n\nUsing a custom ladder\n~~~~~~~~~~~~~~~~~~~~~~~\n\nIn the previous example, we use the pre-defined `LADDER_100_to_4k`, but what\nif we wanted another ladder that Gel Simulator does not provide ?\n\nNew ladders can be easily defined by providing a dict of the form:\n\n..  code:: python\n\n    {\n    `band_size_1: y_coordinate_1`,\n    `band_size_2: y_coordinate_2`,\n    `band_size_3: y_coordinate_3`\n    }\n\nWhere `band_size` is the known length of the ladder's DNA fragment,\nand `y_coordinate` the y coordinate in pixels of the corresponding band in a\npicture of the ladder's migration.\n\nNote that you must provide at least 3-4 bands for the ladder to be meaningful.\nThe gel must be oriented with larger-fragments bands on top (as is usually the case)\nIt is not necessary to provide any \"origin\" of the ladder as it will be\ncomputed automatically. For instance:\n\n..  code:: python\n\n    custom_ladder = GelLadder(bands={\n        # band_size : meaured y-coordinate\n        100: 200,\n        300: 170,\n        500: 150,\n        1650: 100,\n        4000: 65\n    })\n    gel_simulator = GelSimulator(custom_ladder)\n\n\nSee file `examples/gel_simulation_with_enzymes_mixes.py` for a more complete\nexample involving a custom ladder and multi-enzyme digestions.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "Gel Agarose Simulation Matplotlib",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gelsimulator",
    "platform": "",
    "project_url": "https://pypi.org/project/gelsimulator/",
    "release_url": "https://pypi.org/project/gelsimulator/0.1.0/",
    "requires_python": "",
    "summary": "Simulate DNA band patterns for gel migration experiments",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f80c0b4f987ef4dfaf201c71c212a373",
          "sha256": "48b4920048da6e49be16257030dc5be861d0348db64a2260b9fc09e0ce1f573c"
        },
        "downloads": 372,
        "filename": "gelsimulator-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f80c0b4f987ef4dfaf201c71c212a373",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8975,
        "upload_time": "2016-09-22T14:12:26",
        "url": "https://files.pythonhosted.org/packages/30/d2/979a0773d76f240acb5545662cb444c026a249d793eedcb775e1dcd787c4/gelsimulator-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f80c0b4f987ef4dfaf201c71c212a373",
        "sha256": "48b4920048da6e49be16257030dc5be861d0348db64a2260b9fc09e0ce1f573c"
      },
      "downloads": 372,
      "filename": "gelsimulator-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f80c0b4f987ef4dfaf201c71c212a373",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8975,
      "upload_time": "2016-09-22T14:12:26",
      "url": "https://files.pythonhosted.org/packages/30/d2/979a0773d76f240acb5545662cb444c026a249d793eedcb775e1dcd787c4/gelsimulator-0.1.0.tar.gz"
    }
  ]
}