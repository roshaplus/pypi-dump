{
  "info": {
    "author": "Richard Booth",
    "author_email": "rvb2@lehigh.edu",
    "bugtrack_url": "",
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Topic :: Multimedia :: Graphics",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
      "Topic :: Scientific/Engineering :: Visualization"
    ],
    "description": "**DeCiDa Data Analysis and Procedural Simulation Python Library**\n=================================================================\n\nDeCiDa == Device and Circuit Data Analysis.\n\nDeCiDa is a Python Library of functions and classes for\ndevice characterization, circuit design and data analysis.\n\nDeCida is written in pure python (2.7), and requires no code-compilation.\nIt is portable to any operating system where python is installed, and runs\nunder MacOS, Windows, Cygwin, and Linux.  Many DeCiDa classes and functions\nrequire the numpy and Tkinter packages.\n\nThis version of DeCiDa adds matplotlib XY-plot rendering, with clearer fonts\nand a more polished look. To use matplotlib, add the option -mat to dataview\nand plotter.  This is not yet the default, since trace direction (flyback line\nremoval) is not yet implemented for the base-class that calls matplotlib\nroutines.\n\nFor circuit analysis, DeCiDa provides a flexible scripting class for\nperforming simulations with various circuit simulation tools, such as\n(Synopsys) HSpice, (Cadence) Spectre, (Silvaco) SmartSpice,\n(UC Berkeley) NGspice and others.\nThe Tckt class is used to provide a database of process corners for\neach project, and to provide netlist templating for performing procedural\nsimulations and post-processing.\nScripts using Tckt access the database to obtain\nthe corner conditions, modify the netlist, and allow full python looping\nstructures for running the simulation, viewing and analyzing\nthe simulated data.\n\nFor data analysis, DeCiDa provides a Data class for reading-in and \nanalyzing data in a number of formats, including nutmeg\n(NGspice, Spectre, LTspice), CSDF (HSpice), CSV (comma-separated value),\nSSV (space-separated value), and others.\nThe Data object can be viewed using the XYplot, Histogram or DataViewx classes.\nDataViewx has commands via menu entries to manipulate and plot the data in\ndifferent ways, including frequency versus time, eye- and scope-diagrams\nand column calculations.\n\nDeCiDa started out as a Tcl/Tk application for analyzing measurements\nof electron devices for performing routine compact-model parameter extraction.\nTo do this fitting, a least-squares optimization algorithm was used.\nThis python version of DeCiDa has a function LevMar (for Levenberg-Marquardt),\nbased on the mpfit package.  It is still under development.\n\nWhat is in the distribution\n---------------------------\n\n* The decida python library of functions and classes (./decida).\n  This is installed into the site-packages directory.\n\n* A test library under decida.test for testing the distribution (./decida/test).\n  This is also installed into the site-packages directory.\n\n* Applications in the distribution bin directory (./bin).\n  These are installed into the python bin directory.\n\n* HTML documentation of the functions and classes (./doc/html).\n  This is not installed.\n\n* Tool-specific scripts (./etc):\n\n   * simulation tool wrappers (./etc/wrappers)\n\n      Circuit simulation tool wrappers that DeCiDa interfaces with.\n      These are installed into ~/.DeCiDa/bin\n\n   * cython (./etc/cython)\n\n      Setup scripts for using cython to compile the Data and XYplotx classes.\n      These are installed into ~/.DeCiDa/cython\n\n   * dot files (./etc/dot)\n\n      Several resource files to be placed in user home directory\n      for Cadence and python.\n      These are installed into ~/.DeCiDa/dot\n\n   * user local lib directory (./etc/lib)\n\n      A place to put user python code.\n      This is set up as ~/.DeCiDa/lib\n\n   * models (./etc/models)\n\n      Case-corners and models for two example technologies from\n      the Predictive Technology Models web-site.\n      These are installed into ~/.DeCiDa/models\n\n   * projects (./etc/projects)\n\n      Two example project simulation directories (bird and trane).\n      These are installed into ~/.DeCiDa/projects\n\n   * Cadence skill files (./etc/skill)\n\n      Several scripts for automatically generating DeCiDa python\n      procedural simulation scripts,\n      and verilog test-bench environments.\n      These are installed into ~/.DeCiDa/skill\n\n   * stdcell (./etc/stdcell)\n\n      Two example standard cell libraries for the two example\n      PTM technologies, from the NangateOpenCell Library.\n      These are installed into ~/.DeCiDa/stdcell\n\n   * verilog (./etc/verilog)\n\n      Files for running Cadence NCsim and viewing the results using SimVision.\n      These are installed into ~/.DeCiDa/verilog\n\n\nDeCiDa applications\n-------------------\n\nAll of these should be in the path after installation:\n\n+----------------------+---------------------------------------------------------------------------------------------+\n| application:         | description:                                                                                |\n+======================+=============================================================================================+\n| calc                 | scientific calculator                                                                       |\n+----------------------+---------------------------------------------------------------------------------------------+\n| dataview             | read, plot and analyze data                                                                 |\n+----------------------+---------------------------------------------------------------------------------------------+\n| plotter              | plot Cartesian, Parametric, or Polar functions                                              |\n+----------------------+---------------------------------------------------------------------------------------------+\n| twin                 | text editor, with additional capability                                                     |\n+----------------------+---------------------------------------------------------------------------------------------+\n| gifimg               | create embedded GIF image python class from a GIF image                                     |\n+----------------------+---------------------------------------------------------------------------------------------+\n| pllss                | plot PLL small-signal transfer functions, S-domain and Z-domain                             |\n+----------------------+---------------------------------------------------------------------------------------------+\n| pll_phase_noise      | plot PLL phase noise components and total phase noise                                       |\n+----------------------+---------------------------------------------------------------------------------------------+\n| ngsp                 | UC Berkeley NGspice gui                                                                     |\n+----------------------+---------------------------------------------------------------------------------------------+\n| op                   | read Cadence Spectre operating-point analysis, display node voltages and operating points   |\n+----------------------+---------------------------------------------------------------------------------------------+\n| create_sspice_script | create a Silvaco SmartSpice DeCiDa script                                                   |\n+----------------------+---------------------------------------------------------------------------------------------+\n| simvision_csv2col    | convert exported Cadence SimVision csv data to column data                                  |\n+----------------------+---------------------------------------------------------------------------------------------+\n\nSimulation tool wrapper scripts\n-------------------------------\n\nThese scripts are installed in ~/.DeCiDa/bin\n\n+--------------------+--------------------------------------+\n| wrapper script:    | description:                         |\n+====================+======================================+\n| run_hspice         | wrapper to run Synopsys HSpice       |\n+--------------------+--------------------------------------+\n| run_ngspice        | wrapper to run UC Berkeley NGspice   |\n+--------------------+--------------------------------------+\n| run_sspice         | wrapper to run Silvaco SmartSpice    |\n+--------------------+--------------------------------------+\n| run_spectre        | wrapper to run Cadence Spectre       |\n+--------------------+--------------------------------------+\n\nThanks to\n---------\n\n1. `Python distribution documentation <http://docs.python.org/2/distutils/index.html>`_, `more Python distribution documentation <http://guide.python-distribute.org/creation.html>`_ .\n  \n2. `Canopy installation documentation <https://support.enthought.com/entries/23389761-Installing-packages-into-Canopy-User-Python-from-the-command-line>`_ .\n\n3. decida/ItclObjectx:\n\n   Concepts from [incr Tcl], described in chapter 2, \"Object-Oriented\n   Programming with [incr Tcl],\" by Michael McLennan, of \"Tcl/Tk Tools,\"\n   Mark Harrision, 1997, O'Reilly. \n\n4. decida/FrameNotebook and decida/Balloonhelp:\n\n   Adapted from the Tcl/Tk examples in\n   Mark Harrison and Michael McLennan, \"Effective Tcl/Tk Programming\",\n   1997, Addison-Wesley.\n\n5. decida/Data.read_nutmeg method:\n\n   Modified from the \n   `read_spice module <http://www.h-renrew.de/h/python_spice/spicedata.html>`_\n   from Werner Hoch (python_spice-0.0.3).\n    \n6. decida/LevMar:\n\n   Modified from the\n   `mpfit module <https://code.google.com/p/astrolibpy>`_\n   from Sergey Koposov, Craig Markwardt and Mark Rivers (mpfit_2013).\n\n7. bin/gifimg:\n\n   Modified from the \n   `img2pytk module <http://www.3dartist.com/WP/python/code/img2pytk.py>`_\n   from Bill Allen (imageEmbedder-1.0).\n\n8. Example model files:\n\n   From `Predictive Technology Model <http://ptm.asu.edu>`_ from the\n   Nanoscale Integration and Modeling (NIMO) group at Arizona State University.\n\n9. Example standard cell libraries:\n\n   From `Si2 <https://www.si2.org>`_ openEDA project, Nangate 45nm\n   Open Cell Library, a generic open-source, non-manufacturable\n   standard-cell library.\n\n10. George Howlett, Michael McLennan, Sani Nassif, Mike Toth and others\n    for developing many of the original concepts which are incorporated in\n    DeCiDa.\n\n11. Dean Gonzales, Sanquan Song and Phillip Johnson for supplying test\n    data files and test-driving DeCiDa.\n\n**Installing DeCiDa**\n=====================\n\nIf you have pip:\n----------------\n\npip install DeCiDa\n\nOtherwise:\n----------\n\nDownload and prepare the distribution\n-------------------------------------\n\n* unzip/untar the distribution::\n\n    tar xvfz DeCiDa.1.0.4-tar.gz\n\n* cd into the distribution directory::\n\n    cd DeCiDa-1.0.4\n\n* you may want to install the DeCiDa html documentation (in ./doc/html)\n  to an appropriate place for future reference.\n  use a browser to read the documentation, using the url file:// specification\n  to point to the index.html file in the html directory.\n\n* manually modify the wrapper scripts in the distribution\n  ./etc/wrapper directory (run_*), to point to correct tool locations.\n  \n  The wrappers have the following references to other tools.  \n  Adjust these as needed, as required by your local environment.\n\n+----------------+-------------------------------+\n| wrapper:       | expected tool location:       |\n+================+===============================+\n| run_hspice     | /tools/hspice/bin/hspice      |\n+----------------+-------------------------------+\n| run_ngspice    | /opt/local/bin/ngspice        |\n+----------------+-------------------------------+\n| run_sspice     | /tools/silvaco/bin/sspice     |\n+----------------+-------------------------------+\n| run_spectre    | /tools/cds/bin/spectre        |\n+----------------+-------------------------------+\n\nInstalling under Enthought Canopy\n---------------------------------\n\n* install in the Canopy Python User Virtual Environment\n\n    refer to: `Installing packages into Canopy <https://support.enthought.com/entries/23389761-Installing-packages-into-Canopy-User-Python-from-the-command-line/>`_, `Canopy python default <https://support.enthought.com/entries/23646538-Make-Canopy-s-Python-be-your-default-Python-i-e-on-the-PATH->`_\n\n* be sure that User python is in your path::\n\n    python\n    >>> import sys; sys.prefix\n\n  you should see a path like one of the following::\n\n    /Users/<user>/Library/Enthought/Canopy_32bit/User (MacOs)\n\n    /home/<user>/Enthought/Canopy_32bit/User (Linux)\n\n\n* install the distribution::\n\n    python setup.py install\n\n* you will find a new directory .DeCiDa in your home directory containing\n  various tool specific scripts, models and other data\n\n* the DeCiDa libraries are installed under site-packages\n\n* the DeCiDa applications are installed in the python bin directory\n  so they should be in the user path (may require a shell rehash)\n\nInstalling under (2.7) python\n-----------------------------\n\n* be sure that python2.7 is in your path::\n\n    python\n    >>> import sys; sys.prefix\n\n  you should see a path like one of the following::\n\n    /Library/Frameworks/Python.framework/Versions/2.7 (MacOS)\n\n    /opt/local/lib/python2.7 (Linux)\n\n* install the distribution::\n\n    python setup.py install\n\nInstalling as a local library\n-----------------------------\n\n* DeCiDa can also be installed in a user's directory without requiring sysadmin\n  privileges.\n\n* select or make a directory for putting python libraries::\n\n    mkdir ~/python/library\n\n* copy the decida library to the python library in your home directory::\n\n    cp -R ./decida ~/python/library\n\n* edit the python resource file in ./etc/dot (.pythonrc.py).\n  change the pylib definition appropriately to point to ~/python/library\n\n* copy the resource file to your home directory::\n\n    cp ./etc/dot/.pythonrc.py ~/.\n\n* to use decida, import the user package, which imports ~/.pythonrc.py::\n\n    >>> import user\n\n* alternatively, define the PYTHONPATH environment variable to include\n  ~/python/library in the path\n\n* copy the applications to the user home bin directory::\n\n    cp ./bin/* ~/bin\n\nTest the distribution using the distribution tests\n--------------------------------------------------\n\n* test the distribution with one or more individual tests::\n\n    python\n    >>> import decida.test.test_Calc_1\n\n  should display a calculator\n\n    >>> import decida.test.test_Plotterx\n\n  should display a plot and equation-set text-window\n\n* list all of the tests::\n\n     python\n     >>> import decida.test\n     >>> decida.test.test_list()\n\n  should print all of the tests\n\n* do all of the tests::\n\n     python\n     >>> import decida.test.test_all\n\n  this may or may not complete depending on the sequence of closing windows\n\n* the tests can also be run directly in the unzipped/tarred (pre-install) directory::\n\n     cd DeCiDa-1.0.4/decida/test\n     test_DataViewx_4.py\n\n* test the applications installed in the python bin::\n\n     twin\n\n  should display a text-window (text-editor)\n\n",
    "docs_url": "https://pythonhosted.org/DeCiDa/",
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://pypi.python.org/pypi/DeCiDa/",
    "keywords": "",
    "license": "LICENSE.txt",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DeCiDa",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/DeCiDa/",
    "release_url": "https://pypi.org/project/DeCiDa/1.0.4/",
    "requires_python": "",
    "summary": "Device and Circuit Data Analysis",
    "version": "1.0.4"
  },
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9a2be80bc6386a13740ba0e1484df24b",
          "sha256": "e90f0733b3ec1592c7156d19d409debcafdc58ffc94545ffca9d844487fa36ba"
        },
        "downloads": 2851,
        "filename": "DeCiDa-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9a2be80bc6386a13740ba0e1484df24b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13820209,
        "upload_time": "2014-05-03T12:37:03",
        "url": "https://files.pythonhosted.org/packages/8c/dc/1ba625c119c9e5b3336897c50b3e8115a470ad195426db490e04903ffd8d/DeCiDa-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "55731b417c7c12eb75b5043cfce79a50",
          "sha256": "4f407953229bde26205feba589dc1eca9c8ba6f51bd00944cb6b0c4c61ef9374"
        },
        "downloads": 1625,
        "filename": "DeCiDa-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "55731b417c7c12eb75b5043cfce79a50",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13893185,
        "upload_time": "2014-12-14T19:45:42",
        "url": "https://files.pythonhosted.org/packages/6e/73/b38ab29b489b548371d4367a57921f1ba71e973c5c4064dbdb382f6ca72e/DeCiDa-1.0.2.tar.gz"
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ea77e87796083f956fcb73f8b4a7c6ee",
          "sha256": "6775d125596449b0d7ea0edaac4b1078ea0949a3050c5d50db04b4b124a74e4e"
        },
        "downloads": 2632,
        "filename": "DeCiDa-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ea77e87796083f956fcb73f8b4a7c6ee",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14020519,
        "upload_time": "2015-05-09T18:51:53",
        "url": "https://files.pythonhosted.org/packages/f4/c2/0d3f87ab37033eb508f23aacd195f4209e14f7d8b47164bf467b4506d979/DeCiDa-1.0.3.tar.gz"
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "40617bc24f96e3c1a7601a9af4902cd2",
          "sha256": "ffbd39110e6470a0efb83dc6c37be88125e7528c19b7d591ca07936e31f7bc8f"
        },
        "downloads": 0,
        "filename": "DeCiDa-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "40617bc24f96e3c1a7601a9af4902cd2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2052721,
        "upload_time": "2017-06-18T17:37:03",
        "url": "https://files.pythonhosted.org/packages/95/28/97b725f8329e5d5a63b645a790656e98287ed2aff972c89b9cd0b3bbedfb/DeCiDa-1.0.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "40617bc24f96e3c1a7601a9af4902cd2",
        "sha256": "ffbd39110e6470a0efb83dc6c37be88125e7528c19b7d591ca07936e31f7bc8f"
      },
      "downloads": 0,
      "filename": "DeCiDa-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "40617bc24f96e3c1a7601a9af4902cd2",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 2052721,
      "upload_time": "2017-06-18T17:37:03",
      "url": "https://files.pythonhosted.org/packages/95/28/97b725f8329e5d5a63b645a790656e98287ed2aff972c89b9cd0b3bbedfb/DeCiDa-1.0.4.tar.gz"
    }
  ]
}