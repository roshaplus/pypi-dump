{
  "info": {
    "author": "Tomaz Solc",
    "author_email": "tomaz.solc@ijs.si",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. vim:sw=3 ts=3 expandtab tw=78\n\nIntroduction\n============\n\nThis package provides utilities and Python modules for managing VESNA-based\nwireless sensor networks that are using the ALH protocol.\n\nIn a typical setup, VESNA nodes participate in a ZigBee-based wireless mesh\nnetwork. On this mesh network each sensor node exposes a HTTP-like interface,\nsupporting two types of requests: GET for state-less information retrieval\nand POST for state-changing actions.\n\nThe ZigBee mesh is established by the coordinator. In addition to a ZigBee\ninterface, the coordinator also typically has an Ethernet adapter. At boot it\nestablishes a TCP/IP SSL tunnel and exposes an ALH service over it.\n\nUsually, the SSL tunnel terminates in an infrastructure server that performs\nthe translation between ALH and a proper HTTP REST interface exposed on the\nweb::\n\n   +------+\n   | node | ALH -  ZigBee mesh\n   +------+      \\\n                 |                    SSL tunnel\n   +------+      |      +-------------+         +----------------+\n   | node | ALH -+- ALH | coordinator | ALH --- | infrastructure | HTTPS -->\n   +------+      |      +-------------+         +----------------+\n                 |\n   +------+      /\n   | node | ALH -\n   +------+\n\nAlternatively, coordinator can also be directly connected to a client over a\nserial line. This setup is typically used for development or debugging::\n\n   +------+\n   | node | ALH -  ZigBee mesh\n   +------+      \\\n                 |                      serial line\n   +------+      |      +-------------+\n   | node | ALH -+- ALH | coordinator | ALH ------------------------------->\n   +------+      |      +-------------+\n                 |\n   +------+      /\n   | node | ALH -\n   +------+\n\nThese tools transparently support both modes of operation. Typically either URL of the\nHTTP REST endpoint is given or a character device for the serial line.\n\n\nInstallation\n============\n\nTo install system-wide from the package index, run::\n\n   $ pip install vesna-alhtools\n\nThis should also automatically install the required Python bindings for VESNA\nspectrum sensor application. More information about it is at:\nhttps://github.com/avian2/vesna-spectrum-sensor\n\nTo install system-wide from source, run::\n\n   $ pip install .\n\nTo run tests::\n\n   $ tox\n\n\nUsage\n=====\n\nAfter installation, the following tools are available:\n\n``alh-reprogram``\n   Perform over-the-air reprogramming of the coordinator or sensor nodes.\n\n``alh-map``\n   Enumerate all the nodes participating in the sensor network by crawling the\n   ZigBee mesh.\n\n   Can be used for visualizing the network using Graphviz or network\n   monitoring (via integration into Munin).\n\n``alh-tx-test``\n   Signal generator test.\n\n``alh-endpoint-server``\n   Simple ALH-to-HTTP endpoint server, useful for testing. It can be used\n   instead of the proper infrastructure server.\n\n\nRun each with ``--help`` as the only argument to get a list of available\noptions.\n\nNote: if the API end-point is using basic authentication, you will be\nprompted for credentials on the command line.\n\nYou can also save credentials into either a file named ``.alhrc`` in your\nhome directory or ``alhrc`` in the current directory. Format of the file is\nas in the following example::\n\n   Host example.com\n   User <username>\n   Password <password>\n   # more Host, User, Password lines can follow\n\nSeveral Python modules are installed as well. Refer to demo programs in the\ndemos/ directory for examples on how to use them. Classes and methods are\ndocumented with docstring documentation. Some of it is accessible on-line\nat https://vesna-alh-tools.readthedocs.io/en/latest/\n\n\nRemote testing with rftest.py\n=============================\n\nThis library provides a DeviceUnderTest class that is compatible with the\nRF test utility from vesna-spectrum-sensor repository. It allows for testing of\nradio hardware (e.g. SNE-ISMTV) using the production firmware (e.g.\nNodeSpectrumSensor application) on a fully assembled node with minimal\nadditional wiring.\n\nTesting setup looks like this::\n\n   +----------+ coax +------+ zigbit +-------------+  SSL  +----------------+\n   | R&S SMBV |----->| node |<-------| coordinator |<------| infrastructure |\n   +----------+      +------+  ALH   +-------------+       +----------------+\n         ^                                                           ^\n         | usbtmc    +--------+  HTTPS                               |\n         +-----------| rftest |--------------------------------------+\n                     +--------+\n\nRun rftest like this::\n\n   $ vesna-rftest -i foo -R vesna.alh.rftest.RemoteDeviceUnderTest -O,-Uhttps://...,-u...,-n1\n\n\nLicense\n=======\n\nCopyright (C) 2017 SensorLab, Jozef Stefan Institute\nhttp://sensorlab.ijs.si\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAuthors:\tTomaz Solc, <tomaz.solc@ijs.si>",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/avian2/vesna-alh-tools",
    "keywords": null,
    "license": "GPL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "vesna-alhtools",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/vesna-alhtools/",
    "release_url": "https://pypi.org/project/vesna-alhtools/1.0.3/",
    "requires_python": null,
    "summary": "Tools for talking the VESNA almost-like-HTTP protocol",
    "version": "1.0.3"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "162d16f8585f64e6605953012b931924",
          "sha256": "89ef8b52c3f4d73161c65c12d85539883005608d09da50b8755365841595ebfa"
        },
        "downloads": 1825,
        "filename": "vesna-alhtools-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "162d16f8585f64e6605953012b931924",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25388,
        "upload_time": "2015-07-20T07:58:27",
        "url": "https://files.pythonhosted.org/packages/20/99/03629af7cbec24b306c7fed5cacb1b62bb38728d99e8e8173d386f64c0cc/vesna-alhtools-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3df05d79e94523777aa1ab0d96858c6e",
          "sha256": "dea78bafcc318ad63f910a921a6e52c552745a9f26cde79a56004c8b2b5cb7bc"
        },
        "downloads": 724,
        "filename": "vesna-alhtools-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3df05d79e94523777aa1ab0d96858c6e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 27723,
        "upload_time": "2015-07-20T09:59:06",
        "url": "https://files.pythonhosted.org/packages/4b/eb/ae78537d232a32f58800b77e4f073b541d2dc8dd81ff3cf6a3cf980bcece/vesna-alhtools-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "493e4427401621850bf8cf0d36dc7019",
          "sha256": "85c0dbe8ca0e0fce2071cae7ddab6a35eacb0a96a8bbd233a82f38bd5726509b"
        },
        "downloads": 799,
        "filename": "vesna-alhtools-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "493e4427401621850bf8cf0d36dc7019",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 27646,
        "upload_time": "2015-07-22T09:43:17",
        "url": "https://files.pythonhosted.org/packages/0d/97/2f9127cfd62b6a13f16ac224e868179b61210b41ab47483c1d8ceb9f1a95/vesna-alhtools-1.0.2.tar.gz"
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dab0c437eb2ecef06a544059f094ebd8",
          "sha256": "a7624c4cb2bc471ac373860bab0362444a2197550111b1016e2aacea1e196588"
        },
        "downloads": 0,
        "filename": "vesna-alhtools-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "dab0c437eb2ecef06a544059f094ebd8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28867,
        "upload_time": "2017-04-10T12:02:02",
        "url": "https://files.pythonhosted.org/packages/79/59/a52f51880c37cb9dc98257577c60acc615c1e00f2dd2c39d00b4e364e4b3/vesna-alhtools-1.0.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "dab0c437eb2ecef06a544059f094ebd8",
        "sha256": "a7624c4cb2bc471ac373860bab0362444a2197550111b1016e2aacea1e196588"
      },
      "downloads": 0,
      "filename": "vesna-alhtools-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "dab0c437eb2ecef06a544059f094ebd8",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 28867,
      "upload_time": "2017-04-10T12:02:02",
      "url": "https://files.pythonhosted.org/packages/79/59/a52f51880c37cb9dc98257577c60acc615c1e00f2dd2c39d00b4e364e4b3/vesna-alhtools-1.0.3.tar.gz"
    }
  ]
}