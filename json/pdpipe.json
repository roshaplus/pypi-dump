{
  "info": {
    "author": "Shay Palachy",
    "author_email": "shaypal5@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "pdpipe\n#########\n|PyPI-Status| |PyPI-Versions| |Build-Status| |Codecov| |LICENCE|\n\nEasy pipelines for pandas DataFrames.\n\n.. code-block:: python\n\n  >>> df = pd.DataFrame(\n          data=[[4, 165, 'USA'], [2, 180, 'UK'], [2, 170, 'Greece']],\n          index=['Dana', 'Jack', 'Nick'],\n          columns=['Medals', 'Height', 'Born']\n      )\n  >>> pipeline = pdp.ColDrop('Medals').Binarize('Born')\n  >>> pipeline(df)\n              Height  Born_UK  Born_USA\n      Dana     165        0         1\n      Jack     180        1         0\n      Nick     170        0         0\n\n.. contents::\n\n.. section-numbering::\n\nInstallation\n============\n\nInstall ``pdpipe`` with:\n\n.. code-block:: bash\n\n  pip install pdpipe\n\nSome pipeline stages require ``scikit-learn``; they will simply not be loaded if ``scikit-learn`` is not found on the system, and ``pdpipe`` will issue a warning. To use them you must also `install scikit-learn`_.\n\n.. _`install scikit-learn`: http://scikit-learn.org/stable/install.html\n\n\nFeatures\n========\n\n* Pure Python.\n* Compatible with Python 3.5+.\n* A simple interface.\n* Informative prints and errors on pipeline application.\n* Chaining pipeline stages constructor calls for easy, one-liners pipelines.\n* Pipeline arithmetics.\n\n\nDesign Decisions\n----------------\n\n* **Data science-oriented naming** (rather than statistics).\n* **A functional approach:** Pipelines never change input DataFrames. Nothing is done \"in place\".\n* **Opinionated operations:** Help novices avoid mistake by default appliance of good practices; e.g., binarizing (creating dummy variables) a column will drop one of the resulting columns by default, to avoid `the dummy variable trap`_ (perfect `multicollinearity`_).\n* **Machine learning-oriented:** The target use case is transforming tabular data into a vectorized dataset on which a machine learning model will be trained; e.g., column transformations will drop the source columns to avoid strong linear dependence.\n\n.. _`the dummy variable trap`: http://www.algosome.com/articles/dummy-variable-trap-regression.html\n.. _`multicollinearity`: https://en.wikipedia.org/wiki/Multicollinearity\n\n\nUse\n===\n\nPipeline Stages\n---------------\n\nCreating Pipeline Stages\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can create stages with the following syntax:\n\n.. code-block:: python\n\n  import pdpipe as pdp\n  drop_name = pdp.ColDrop(\"Name\")\n\n\nAll pipeline stages have a predefined precondition function that returns True for dataframes to which the stage can be applied. By default, pipeline stages raise an exception if a DataFrame not meeting\ntheir precondition is piped through. This behaviour can be set per-stage by assigning ``exraise`` with a bool in the constructor call. If ``exraise`` is set to ``False`` the input DataFrame is instead returned without change:\n\n.. code-block:: python\n\n  drop_name = pdp.ColDrop(\"Name\", exraise=False)\n\n\nApplying Pipelines Stages\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can apply a pipeline stage to a DataFrame using its ``apply`` method:\n\n.. code-block:: python\n\n  res_df = pdp.ColDrop(\"Name\").apply(df)\n\nPipeline stages are also callables, making the following syntax equivalent:\n\n.. code-block:: python\n\n  drop_name = pdp.ColDrop(\"Name\")\n  res_df = drop_name(df)\n\nThe initialized exception behaviour of a pipeline stage can be overridden on a per-application basis:\n\n.. code-block:: python\n\n  drop_name = pdp.ColDrop(\"Name\", exraise=False)\n  res_df = drop_name(df, exraise=True)\n\nAdditionally, to have an explanation message print after the precondition is checked but before the application of the pipeline stage, pass ``verbose=True``:\n\n.. code-block:: python\n\n  res_df = drop_name(df, verbose=True)\n\n\nFittable Pipeline Stages\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nSome pipeline stages can be fitted, meaning that some transformation parameters are set the first time a dataframe is piped through the stage, while later applications of the stage use these now-set parameters without changing them; the ``Encode`` stage is a good example.\n\nIf you want to re-fit an already fitted pipeline stage use the ``fit_transform`` method to re-fit the stage to a new dataframe. Notice that for an unfitted stage ``apply`` and ``fit_transform`` are equivalent, and only later calls to apply will ``transform`` input dataframes without refitting the stage.\n\nFinally, ``apply`` and ``fit_transform`` are of course equivalent for non-fittable pipeline stages.\n\n\nExtending PipelineStage\n~~~~~~~~~~~~~~~~~~~~~~~\n\nTo use other stages than the built-in ones (see `Types of Pipeline Stages`_) you can extend the ``PipelineStage`` class. The constructor must pass the ``PipelineStage`` constructor the ``exmsg``, ``appmsg`` and ``desc`` keyword arguments to set the exception message, application message and description for the pipeline stage, respectively. Additionally, the ``_prec`` and ``_op`` abstract methods must be implemented to define the precondition and the effect of the new pipeline stage, respectively.\n\nFittable custom pipeline stages should implement, additionally to the ``_op`` method, the ``_transform`` method, which should apply the fitted pipeline to an input dataframe, while also setting ``self.is_fitted = True``. The ``_op`` method then acts as the ``fit_tranform`` for the stage.\n\n\nAd-Hoc Pipeline Stages\n~~~~~~~~~~~~~~~~~~~~~~\n\nTo create a custom pipeline stage without creating a proper new class, you can instantiate the ``AdHocStage`` class which takes a function in its ``op`` constructor parameter to define the stage's operation, and the optional ``prec`` parameter to define a precondition (an always-true function is the default).\n\n\nPipelines\n---------\n\nCreating Pipelines\n~~~~~~~~~~~~~~~~~~\n\nPipelines can be created by supplying a list of pipeline stages:\n\n.. code-block:: python\n\n  pipeline = pdp.Pipeline([pdp.ColDrop(\"Name\"), pdp.Binarize(\"Label\")])\n\n\nPipeline Arithmetics\n~~~~~~~~~~~~~~~~~~~~\n\nAlternatively, you can create pipelines by adding pipeline stages together:\n\n.. code-block:: python\n\n  pipeline = pdp.ColDrop(\"Name\") + pdp.Binarize(\"Label\")\n\nOr even by adding pipelines together or pipelines to pipeline stages:\n\n.. code-block:: python\n\n  pipeline = pdp.ColDrop(\"Name\") + pdp.Binarize(\"Label\")\n  pipeline += pdp.ApplyToRows(\"Job\", {\"Part\": True, \"Full\":True, \"No\": False})\n  pipeline += pdp.Pipeline([pdp.ColRename({\"Job\": \"Employed\"})])\n\n\nPipeline Chaining\n~~~~~~~~~~~~~~~~~\n\nPipeline stages can also be chained to other stages to create pipelines:\n\n.. code-block:: python\n\n  pipeline = pdp.ColDrop(\"Name\").Binarize(\"Label\").ValDrop([-1], \"Children\")\n\n\nPipeline Slicing\n~~~~~~~~~~~~~~~~\n\nPipelines are Python Sequence objects, and as such can be sliced using Python's slicing notation, just like lists:\n\n.. code-block:: python\n\n  pipeline = pdp.ColDrop(\"Name\").Binarize(\"Label\").ValDrop([-1], \"Children\").ApplyByCols(\"height\", math.ceil)\n  result_df = pipeline[1:2](df)\n\n\nApplying Pipelines\n~~~~~~~~~~~~~~~~~~\n\nPipelines are pipeline stages themselves, and can be applied to a DataFrame using the same syntax, applying each of the stages making them up, in order:\n\n.. code-block:: python\n\n  pipeline = pdp.ColDrop(\"Name\") + pdp.Binarize(\"Label\")\n  res_df = pipeline(df)\n\n\nAssigning the ``exraise`` parameter to a pipeline apply call with a bool sets or unsets exception raising on failed preconditions for all contained stages:\n\n.. code-block:: python\n\n  pipeline = pdp.ColDrop(\"Name\") + pdp.Binarize(\"Label\")\n  res_df = pipeline.apply(df, exraise=False)\n\n\nAdditionally, passing ``verbose=True`` to a pipeline apply call will apply all pipeline stages verbosely:\n\n.. code-block:: python\n\n  res_df = pipeline.apply(df, verbose=True)\n\n\nFinally, to re-fit all fittable pipeline stages in the pipeline use the ``fit_transform`` method, which calls the corresponding method for all composing pipeline stages.\n\n\nTypes of Pipeline Stages\n========================\n\nAll built-in stages are thoroughly documented, including examples; if you find any documentation lacking please open an issue. A list of briefly described available built-in stages follows:\n\nBasic Stages\n------------\n\n* AdHocStage - Define custom pipeline stages on the fly.\n* ColDrop - Drop columns by name.\n* ValDrop - Drop rows by by their value in specific or all columns.\n* ValKeep - Keep rows by by their value in specific or all columns.\n* ColRename - Rename columns.\n* DropNa - Drop null values. Supports all parameter supported by pandas.dropna function. \n* FreqDrop - Drop rows by value frequency threshold on a specific column. \n\nColumn Generation\n-----------------\n\n* Bin - Convert a continuous valued column to categoric data using binning.\n* Binarize - Convert a categorical column to the several binary columns corresponding to it.\n* ApplyToRows - Generate columns by applying a function to each row.\n* ApplyByCols - Generate columns by applying an element-wise function to columns.\n\nScikit-learn-dependent Stages\n-----------------------------\n\n* Encode - Encode a categorical column to corresponding number values.\n\nnltk-learn-dependent Stages\n-----------------------------\n\n* TokenizeWords - Tokenize a sentence into words by whitespaces.\n* UntokenizeWords - Joins token lists to whitespace-seperated strings.\n* RemoveStopwords - Remove stopwords from a tokenized list.\n* SnowballStem - Stems words in a list using the Snowball stemmer.\n* DropRareTokens - Drop rare tokens from token lists.\n\n\nContributing\n============\n\nPackage author and current maintainer is Shay Palachy (shay.palachy@gmail.com); You are more than welcome to approach him for help. Contributions are very welcomed, especially since this package is very much in its infancy and many other pipeline stages can be added.\n\nInstalling for development\n--------------------------\n\nClone:\n\n.. code-block:: bash\n\n  git clone git@github.com:shaypal5/pdpipe.git\n\n\nInstall in development mode with test dependencies:\n\n.. code-block:: bash\n\n  cd pdpipe\n  pip install -e \".[test]\"\n\n\nRunning the tests\n-----------------\n\nTo run the tests, use:\n\n.. code-block:: bash\n\n  python -m pytest --cov=pdpipe\n\n\nAdding documentation\n--------------------\n\nThis project is documented using the `numpy docstring conventions`_, which were chosen as they are perhaps the most widely-spread conventions that are both supported by common tools such as Sphinx and result in human-readable docstrings (in my personal opinion, of course). When documenting code you add to this project, please follow `these conventions`_.\n\n.. _`numpy docstring conventions`: https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt\n.. _`these conventions`: https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt\n\n\nCredits\n=======\nCreated by Shay Palachy  (shay.palachy@gmail.com).\n\n\n.. |PyPI-Status| image:: https://img.shields.io/pypi/v/pdpipe.svg\n  :target: https://pypi.python.org/pypi/pdpipe\n\n.. |PyPI-Versions| image:: https://img.shields.io/pypi/pyversions/pdpipe.svg\n   :target: https://pypi.python.org/pypi/pdpipe\n\n.. |Build-Status| image:: https://travis-ci.org/shaypal5/pdpipe.svg?branch=master\n  :target: https://travis-ci.org/shaypal5/pdpipe\n\n.. |LICENCE| image:: https://img.shields.io/pypi/l/pdpipe.svg\n  :target: https://pypi.python.org/pypi/pdpipe\n\n.. |Codecov| image:: https://codecov.io/github/shaypal5/pdpipe/coverage.svg?branch=master\n   :target: https://codecov.io/github/shaypal5/pdpipe?branch=master\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/shaypal5/pdpipe",
    "keywords": "pandas dataframe pipeline data",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pdpipe",
    "platform": "any",
    "project_url": "https://pypi.org/project/pdpipe/",
    "release_url": "https://pypi.org/project/pdpipe/0.0.9/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Easy pipelines for pandas.",
    "version": "0.0.9"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0761607d526b015362bca9bca0f5c81b",
          "sha256": "d660b6b2922be4a2ff2decda79823c4c289f0c05eae8f8c79c92571a0bfa97ed"
        },
        "downloads": -1,
        "filename": "pdpipe-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0761607d526b015362bca9bca0f5c81b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25790,
        "upload_time": "2017-03-16T23:10:57",
        "url": "https://files.pythonhosted.org/packages/e0/cc/38b61878755cfd1790dc87b5a9ec0e78e8e89409f672640f5b2acdcfe257/pdpipe-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ac35089648ee28bcb4cc3c93efe2da87",
          "sha256": "05caa59c03267f84dc76d4dbf4eae706056eb052e67822df2360ec82583853a7"
        },
        "downloads": -1,
        "filename": "pdpipe-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ac35089648ee28bcb4cc3c93efe2da87",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 27991,
        "upload_time": "2017-03-17T22:19:34",
        "url": "https://files.pythonhosted.org/packages/8b/ea/6b3625737d733148860249cee556146d715feb1eff409b2cd6ec911a9dde/pdpipe-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "80b8936d9eb6838d00d29a7190f88ea8",
          "sha256": "41a5e1f7851881f5da02ec3061e8b5ae7fa6d323b466d4c62b4ad491d0d4e5f4"
        },
        "downloads": -1,
        "filename": "pdpipe-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "80b8936d9eb6838d00d29a7190f88ea8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30463,
        "upload_time": "2017-05-05T15:48:23",
        "url": "https://files.pythonhosted.org/packages/9a/05/7088b747e6c3e53109cca09039f6eb4783f280b580e0c3f8ffda74ea9c5d/pdpipe-0.0.3.tar.gz"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "52278b07455faff0b84de91dd8df14d9",
          "sha256": "fef3ef258f95d01d6d447f39ac1255c9824e7f455e728801ec8142c09ab8f76e"
        },
        "downloads": -1,
        "filename": "pdpipe-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "52278b07455faff0b84de91dd8df14d9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30454,
        "upload_time": "2017-05-05T15:53:30",
        "url": "https://files.pythonhosted.org/packages/e0/4f/f9182c0916e423730357977c87f78af2edd4a0a3296ae0ebdab1e2754c52/pdpipe-0.0.4.tar.gz"
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c9266c1647954021c405584c2b9de308",
          "sha256": "7a0d63a5a718f06c33d385d027b757b17dad67064502f80a6b98ed0e028dd0f0"
        },
        "downloads": -1,
        "filename": "pdpipe-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c9266c1647954021c405584c2b9de308",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30401,
        "upload_time": "2017-05-24T15:32:44",
        "url": "https://files.pythonhosted.org/packages/5a/a1/7026f88bc9229a432b842f1057d1014b459b7a508f4d48af7fc00f860570/pdpipe-0.0.5.tar.gz"
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fa4e287861880863e8e5d0cc1f4b38b3",
          "sha256": "0e17c94a2c2b73d887942ec52e0a497e03f0651451470a34e34f72b173e33d16"
        },
        "downloads": -1,
        "filename": "pdpipe-0.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa4e287861880863e8e5d0cc1f4b38b3",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 23814,
        "upload_time": "2018-01-14T12:16:31",
        "url": "https://files.pythonhosted.org/packages/4a/e5/30256dfd07c46da6a28f1e10912babbcb72de8b607652ce3389748182fbe/pdpipe-0.0.6-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "880b539729e9f85916719b2744629c4d",
          "sha256": "662b92c601c2bf9259844cbbdc7cd1c60dd396d77914098974b7532181ccd549"
        },
        "downloads": -1,
        "filename": "pdpipe-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "880b539729e9f85916719b2744629c4d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 31390,
        "upload_time": "2018-01-14T12:16:29",
        "url": "https://files.pythonhosted.org/packages/7f/10/ac660cc65c05e18e2da0be8d1d0d023cba51b7b4e2bd641f773faec35c46/pdpipe-0.0.6.tar.gz"
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "355af669794a989252eca9612fb64a67",
          "sha256": "c3db20cd0c9c547408c599e3def5acf7eb013abc679c3b4967d76289613d11f9"
        },
        "downloads": -1,
        "filename": "pdpipe-0.0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "355af669794a989252eca9612fb64a67",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 24725,
        "upload_time": "2018-01-30T17:59:55",
        "url": "https://files.pythonhosted.org/packages/b7/91/958e2a6f2db47d7dc3be570f5803d9205ea7505c89a9a98a1e53331f6b48/pdpipe-0.0.7-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "13bcdfe75ad63839a1ebb6b6a40a027a",
          "sha256": "438e2015c6e588b119cd6b591d58056edf3ff1d9c36ddb96a1648354eab1c7de"
        },
        "downloads": -1,
        "filename": "pdpipe-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "13bcdfe75ad63839a1ebb6b6a40a027a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32528,
        "upload_time": "2018-01-30T17:59:54",
        "url": "https://files.pythonhosted.org/packages/b6/d5/89dd201f5b2b5dce9b54803a027533c449726a11b5c429c9f538a7d9b2df/pdpipe-0.0.7.tar.gz"
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "356622631260eae17e4bc07d36d8276d",
          "sha256": "5683c1c0eda3236b563bdd2fce2e9a719fbd16d81d9185800bf135c8714fcc27"
        },
        "downloads": -1,
        "filename": "pdpipe-0.0.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "356622631260eae17e4bc07d36d8276d",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 28375,
        "upload_time": "2018-02-05T00:20:26",
        "url": "https://files.pythonhosted.org/packages/38/b7/3d100adca375f1d7f309e70653d832f91b8e513bb97310f425df3ac239e3/pdpipe-0.0.8-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6b848875cca7f94c63c26fb13138a969",
          "sha256": "717f7a418c0389d73b1c77a830a3a168f8fa614be45ec887bf6b2d5ddf790813"
        },
        "downloads": -1,
        "filename": "pdpipe-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "6b848875cca7f94c63c26fb13138a969",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 35404,
        "upload_time": "2018-02-05T00:20:25",
        "url": "https://files.pythonhosted.org/packages/12/55/5c0e61ad3553bbf25901ccfc4030017d9ce070df6dfe9e3d4689ca10c1a5/pdpipe-0.0.8.tar.gz"
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7af6a991a5fe88fcab8acbe9badb89d5",
          "sha256": "2ee78073ebbb6137ddc6d98f142be0464b1021704e57a48a8e452d1a9dce0ce5"
        },
        "downloads": -1,
        "filename": "pdpipe-0.0.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7af6a991a5fe88fcab8acbe9badb89d5",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 28616,
        "upload_time": "2018-02-05T13:42:12",
        "url": "https://files.pythonhosted.org/packages/08/ef/061be1e5fb968f135526fa60963205b36e84463d04d673432bbb2c837185/pdpipe-0.0.9-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c065c569e9096ff550d65695f3440ec2",
          "sha256": "240402a8f9c8ae20440e367e3efebcd65e708b5000823597c64d3219ec0bd01b"
        },
        "downloads": -1,
        "filename": "pdpipe-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "c065c569e9096ff550d65695f3440ec2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 35662,
        "upload_time": "2018-02-05T13:42:11",
        "url": "https://files.pythonhosted.org/packages/47/f8/11523d3b97ecb39aeea15d465126a659def66b2a099e947bb29d242dc313/pdpipe-0.0.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "7af6a991a5fe88fcab8acbe9badb89d5",
        "sha256": "2ee78073ebbb6137ddc6d98f142be0464b1021704e57a48a8e452d1a9dce0ce5"
      },
      "downloads": -1,
      "filename": "pdpipe-0.0.9-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7af6a991a5fe88fcab8acbe9badb89d5",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 28616,
      "upload_time": "2018-02-05T13:42:12",
      "url": "https://files.pythonhosted.org/packages/08/ef/061be1e5fb968f135526fa60963205b36e84463d04d673432bbb2c837185/pdpipe-0.0.9-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "c065c569e9096ff550d65695f3440ec2",
        "sha256": "240402a8f9c8ae20440e367e3efebcd65e708b5000823597c64d3219ec0bd01b"
      },
      "downloads": -1,
      "filename": "pdpipe-0.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "c065c569e9096ff550d65695f3440ec2",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 35662,
      "upload_time": "2018-02-05T13:42:11",
      "url": "https://files.pythonhosted.org/packages/47/f8/11523d3b97ecb39aeea15d465126a659def66b2a099e947bb29d242dc313/pdpipe-0.0.9.tar.gz"
    }
  ]
}