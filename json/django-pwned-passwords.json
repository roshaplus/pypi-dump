{
  "info": {
    "author": "Jamie Counsell",
    "author_email": "jamiecounsell@me.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "======================\nDjango PWNED Passwords\n======================\n\n.. image:: https://badge.fury.io/py/django-pwned-passwords.svg\n    :target: https://badge.fury.io/py/django-pwned-passwords\n\n.. image:: https://travis-ci.org/jamiecounsell/django-pwned-passwords.svg?branch=master\n    :target: https://travis-ci.org/jamiecounsell/django-pwned-passwords\n\n.. image:: https://codecov.io/gh/jamiecounsell/django-pwned-passwords/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/jamiecounsell/django-pwned-passwords\n\ndjango-pwned-passwords is a Django password validator that checks Troy Hunt's PWNED Passwords API to see if a password has been involved in a major security breach before.\n\n**Note: This app currently sends user passwords to a third party. There are obvious security risks associated with this practice.**\n\nDocumentation\n-------------\n\nThe full documentation is at https://django-pwned-passwords.readthedocs.io.\n\nRequirements\n------------\n\n* Django [1.8, 1.11]\n* Python 2.7, [3.4, 3.6]\n\nQuickstart\n----------\n\nInstall django-pwned-passwords::\n\n    pip install django-pwned-passwords\n\nAdd it to your `INSTALLED_APPS`:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'django_pwned_passwords',\n        ...\n    )\n\nAdd django-pwned-passwords's PWNEDPasswordValidator:\n\n.. code-block:: python\n\n    AUTH_PASSWORD_VALIDATORS = [\n        ...\n        {\n            'NAME': 'django_pwned_passwords.password_validation.PWNEDPasswordValidator'\n        }\n    ]\n\n\nFeatures\n--------\n\nThis password validator returns a ValidationError if the PWNED Passwords API\ndetects the password in its data set. Note that the API is heavily rate-limited,\nso there is a timeout (:code:`PWNED_VALIDATOR_TIMEOUT`).\n\nIf :code:`PWNED_VALIDATOR_FAIL_SAFE` is True, anything besides an API-identified bad password\nwill pass, including a timeout. If :code:`PWNED_VALIDATOR_FAIL_SAFE` is False, anything\nbesides a good password will fail and raise a ValidationError.\n\nSettings\n--------\n\n+------------------------------------+---------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------+\n| Setting                            | Description                                                                                                         | Default                                                                                                                          |\n+------------------------------------+---------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------+\n| :code:`PWNED_VALIDATOR_TIMEOUT`    | The timeout in seconds. The validator will not wait longer than this for a response from the API.                   | :code:`2`                                                                                                                        |\n+------------------------------------+---------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------+\n| :code:`PWNED_VALIDATOR_FAIL_SAFE`  | If the API fails to get a valid response, should we fail safe and allow the password through?                       | :code:`True`                                                                                                                     |\n+------------------------------------+---------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------+\n| :code:`PWNED_VALIDATOR_URL`        | The URL for the API in a string format.                                                                             | :code:`https://haveibeenpwned.com/api/v2/pwnedpassword/{password}`                                                               |\n+------------------------------------+---------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------+\n| :code:`PWNED_VALIDATOR_ERROR`      | The error message for an invalid password.                                                                          | :code:`\"Your password was detected in a major security breach.\"`                                                                 |\n+------------------------------------+---------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------+\n| :code:`PWNED_VALIDATOR_ERROR_FAIL` | The error message when the API fails. Note: this will only display if :code:`PWNED_VALIDATOR_FAIL_SAFE` is `False`. | :code:`\"We could not validate the safety of this password. This does not mean the password is invalid. Please try again later.\"` |\n+------------------------------------+---------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------+\n| :code:`PWNED_VALIDATOR_HELP_TEXT`  | The help text for this password validator.                                                                          | :code:`\"Your password must not have been detected in a major security breach.\"`                                                  |\n+------------------------------------+---------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------+\n\nRate Limiting\n-------------\n\nRequests to the Pwned Passwords API are limited to one per every 1500 milliseconds each from any given IP address\n(an address may request both APIs within this period). Any request that exceeds the limit will receive an\nHTTP 429 \"Too many requests\" response. If :code:`PWNED_VALIDATOR_FAIL_SAFE` is `True`, rate limited responses will simply\nallow the password through. Otherwise, they will fail and the user will not be able to register until the\nAPI returns a non-429 status code.\n\nRunning Tests\n-------------\n\n::\n\n    source <YOURVIRTUALENV>/bin/activate\n    (myenv) $ pip install tox\n    (myenv) $ tox\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n0.1.0 (2017-08-05)\n++++++++++++++++++\n\n* Initial beta release. Working as intended. **Note: This app currently sends user passwords to a third party. There are obvious security risks associated with this practice.**\n\n0.0.1 (2017-08-04)\n++++++++++++++++++\n\n* Beta version, getting everything working.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jamiecounsell/django-pwned-passwords",
    "keywords": "django-pwned-passwords",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-pwned-passwords",
    "platform": "",
    "project_url": "https://pypi.org/project/django-pwned-passwords/",
    "release_url": "https://pypi.org/project/django-pwned-passwords/0.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A Django password validator that checks Troy Hunt's PWNED Passwords API to see if a password has been involved in a major security breach before.",
    "version": "0.1.0"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d747bde6ce7ca689f5a49ee999424969",
          "sha256": "f348906bfafb427d43e0f7ea13c95e4f8e479cd4073701cbaa80a63d401d9d62"
        },
        "downloads": 0,
        "filename": "django-pwned-passwords-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d747bde6ce7ca689f5a49ee999424969",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6144,
        "upload_time": "2017-08-05T02:53:17",
        "url": "https://files.pythonhosted.org/packages/21/ba/c7a8e6874c6c09d3c71db5f5ffec70c93faaf503389ea3d2e73a7a2f0153/django-pwned-passwords-0.0.1.tar.gz"
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "92757e9e81bb96c3a0013bea84e1c719",
          "sha256": "b58b886ae72ad76b2280d769a4c8ee57da79c4b122472858bfc4252e47238dc7"
        },
        "downloads": 0,
        "filename": "django_pwned_passwords-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92757e9e81bb96c3a0013bea84e1c719",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 7606,
        "upload_time": "2017-08-05T21:06:39",
        "url": "https://files.pythonhosted.org/packages/fb/6e/1e16a800b742e53ef366876c4d93d3abbfc4ebdf644cf172ee3c58758a90/django_pwned_passwords-0.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a6b9ee575d00f4963521f7a4801a4d50",
          "sha256": "2969a4ee57870d08354467656b40d7f7e92bededf3f6d320bd2bd0373b6fdcca"
        },
        "downloads": 0,
        "filename": "django-pwned-passwords-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a6b9ee575d00f4963521f7a4801a4d50",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6978,
        "upload_time": "2017-08-05T21:06:37",
        "url": "https://files.pythonhosted.org/packages/4e/7a/272ae33f8fa3feb85476a4d952d6da4a0ac695f1e25fcd18db6a773fa09c/django-pwned-passwords-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "92757e9e81bb96c3a0013bea84e1c719",
        "sha256": "b58b886ae72ad76b2280d769a4c8ee57da79c4b122472858bfc4252e47238dc7"
      },
      "downloads": 0,
      "filename": "django_pwned_passwords-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "92757e9e81bb96c3a0013bea84e1c719",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "size": 7606,
      "upload_time": "2017-08-05T21:06:39",
      "url": "https://files.pythonhosted.org/packages/fb/6e/1e16a800b742e53ef366876c4d93d3abbfc4ebdf644cf172ee3c58758a90/django_pwned_passwords-0.1.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "a6b9ee575d00f4963521f7a4801a4d50",
        "sha256": "2969a4ee57870d08354467656b40d7f7e92bededf3f6d320bd2bd0373b6fdcca"
      },
      "downloads": 0,
      "filename": "django-pwned-passwords-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a6b9ee575d00f4963521f7a4801a4d50",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6978,
      "upload_time": "2017-08-05T21:06:37",
      "url": "https://files.pythonhosted.org/packages/4e/7a/272ae33f8fa3feb85476a4d952d6da4a0ac695f1e25fcd18db6a773fa09c/django-pwned-passwords-0.1.0.tar.gz"
    }
  ]
}