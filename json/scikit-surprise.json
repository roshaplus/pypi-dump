{
  "info": {
    "author": "Nicolas Hug",
    "author_email": "contact@nicolas-hug.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "|GitHub version| |Documentation Status| |Build Status| |python versions|\n|License|\n\nSurprise\n========\n\nOverview\n--------\n\n`Surprise <http://surpriselib.com>`__ is a Python\n`scikit <https://www.scipy.org/scikits.html>`__ building and analyzing\nrecommender systems.\n\n`Surprise <http://surpriselib.com>`__ **was designed with the following\npurposes in mind**:\n\n-  Give users perfect control over their experiments. To this end, a\n   strong emphasis is laid on\n   `documentation <http://surprise.readthedocs.io/en/stable/index.html>`__,\n   which we have tried to make as clear and precise as possible by\n   pointing out every detail of the algorithms.\n-  Alleviate the pain of `Dataset\n   handling <http://surprise.readthedocs.io/en/stable/getting_started.html#load-a-custom-dataset>`__.\n   Users can use both *built-in* datasets\n   (`Movielens <http://grouplens.org/datasets/movielens/>`__,\n   `Jester <http://eigentaste.berkeley.edu/dataset/>`__), and their own\n   *custom* datasets.\n-  Provide various ready-to-use `prediction\n   algorithms <http://surprise.readthedocs.io/en/stable/prediction_algorithms_package.html>`__\n   such as `baseline\n   algorithms <http://surprise.readthedocs.io/en/stable/basic_algorithms.html>`__,\n   `neighborhood\n   methods <http://surprise.readthedocs.io/en/stable/knn_inspired.html>`__,\n   matrix factorization-based (\n   `SVD <http://surprise.readthedocs.io/en/stable/matrix_factorization.html#surprise.prediction_algorithms.matrix_factorization.SVD>`__,\n   `PMF <http://surprise.readthedocs.io/en/stable/matrix_factorization.html#unbiased-note>`__,\n   `SVD++ <http://surprise.readthedocs.io/en/stable/matrix_factorization.html#surprise.prediction_algorithms.matrix_factorization.SVDpp>`__,\n   `NMF <http://surprise.readthedocs.io/en/stable/matrix_factorization.html#surprise.prediction_algorithms.matrix_factorization.NMF>`__),\n   and `many\n   others <http://surprise.readthedocs.io/en/stable/prediction_algorithms_package.html>`__.\n   Also, various `similarity\n   measures <http://surprise.readthedocs.io/en/stable/similarities.html>`__\n   (cosine, MSD, pearson...) are built-in.\n-  Make it easy to implement `new algorithm\n   ideas <http://surprise.readthedocs.io/en/stable/building_custom_algo.html>`__.\n-  Provide tools to\n   `evaluate <http://surprise.readthedocs.io/en/stable/model_selection.html>`__,\n   `analyse <http://nbviewer.jupyter.org/github/NicolasHug/Surprise/tree/master/examples/notebooks/KNNBasic_analysis.ipynb/>`__\n   and\n   `compare <http://nbviewer.jupyter.org/github/NicolasHug/Surprise/blob/master/examples/notebooks/Compare.ipynb>`__\n   the algorithms performance. Cross-validation procedures can be run\n   very easily using powerful CV iterators (inspired by\n   `scikit-learn <http://scikit-learn.org/>`__ excellent tools), as well\n   as `exhaustive search over a set of\n   parameters <http://surprise.readthedocs.io/en/stable/getting_started.html#tune-algorithm-parameters-with-gridsearchcv>`__.\n\nThe name *SurPRISE* (roughly :) ) stands for Simple Python\nRecommendatIon System Engine.\n\nGetting started, example\n------------------------\n\nHere is a simple example showing how you can (down)load a dataset, split\nit for 5-fold cross-validation, and compute the MAE and RMSE of the\n`SVD <http://surprise.readthedocs.io/en/stable/matrix_factorization.html#surprise.prediction_algorithms.matrix_factorization.SVD>`__\nalgorithm.\n\n.. code:: python\n\n    from surprise import SVD\n    from surprise import Dataset\n    from surprise.model_selection import cross_validate\n\n    # Load the movielens-100k dataset (download it if needed).\n    data = Dataset.load_builtin('ml-100k')\n\n    # Use the famous SVD algorithm.\n    algo = SVD()\n\n    # Run 5-fold cross-validation and print results.\n    cross_validate(algo, data, measures=['RMSE', 'MAE'], cv=5, verbose=True)\n\n**Output**:\n\n::\n\n    Evaluating RMSE, MAE of algorithm SVD on 5 split(s).                       \n                                                                               \n                Fold 1  Fold 2  Fold 3  Fold 4  Fold 5  Mean    Std            \n    RMSE        0.9311  0.9370  0.9320  0.9317  0.9391  0.9342  0.0032         \n    MAE         0.7350  0.7375  0.7341  0.7342  0.7375  0.7357  0.0015         \n    Fit time    6.53    7.11    7.23    7.15    3.99    6.40    1.23           \n    Test time   0.26    0.26    0.25    0.15    0.13    0.21    0.06 \n\n`Surprise <http://surpriselib.com>`__ can do **much** more (e.g,\n`GridSearchCV <http://surprise.readthedocs.io/en/stable/getting_started.html#tune-algorithm-parameters-with-gridsearchcv>`__)!\nYou'll find `more usage\nexamples <http://surprise.readthedocs.io/en/stable/getting_started.html>`__\nin the\n`documentation <http://surprise.readthedocs.io/en/stable/index.html>`__.\n\nBenchmarks\n----------\n\nHere are the average RMSE, MAE and total execution time of various\nalgorithms (with their default parameters) on a 5-fold cross-validation\nprocedure. The datasets are the\n`Movielens <http://grouplens.org/datasets/movielens/>`__ 100k and 1M\ndatasets. The folds are the same for all the algorithms. All experiments\nare run on a notebook with Intel Core i5 7th gen (2.5 GHz) and 8Go RAM.\nThe code for generating these tables can be found in the `benchmark\nexample <https://github.com/NicolasHug/Surprise/tree/master/examples/benchmark.py>`__.\n\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `Movielens 100k <http://grouplens.org/datasets/movielens/100k>`__                                                                           | RMSE    | MAE     | Time      |\n+=============================================================================================================================================+=========+=========+===========+\n| `SVD <http://surprise.readthedocs.io/en/stable/matrix_factorization.html#surprise.prediction_algorithms.matrix_factorization.SVD>`__        | 0.934   | 0.737   | 0:00:11   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `SVD++ <http://surprise.readthedocs.io/en/stable/matrix_factorization.html#surprise.prediction_algorithms.matrix_factorization.SVDpp>`__    | 0.92    | 0.722   | 0:09:03   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `NMF <http://surprise.readthedocs.io/en/stable/matrix_factorization.html#surprise.prediction_algorithms.matrix_factorization.NMF>`__        | 0.963   | 0.758   | 0:00:15   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `Slope One <http://surprise.readthedocs.io/en/stable/slope_one.html#surprise.prediction_algorithms.slope_one.SlopeOne>`__                   | 0.946   | 0.743   | 0:00:08   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `k-NN <http://surprise.readthedocs.io/en/stable/knn_inspired.html#surprise.prediction_algorithms.knns.KNNBasic>`__                          | 0.98    | 0.774   | 0:00:10   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `Centered k-NN <http://surprise.readthedocs.io/en/stable/knn_inspired.html#surprise.prediction_algorithms.knns.KNNWithMeans>`__             | 0.951   | 0.749   | 0:00:10   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `k-NN Baseline <http://surprise.readthedocs.io/en/stable/knn_inspired.html#surprise.prediction_algorithms.knns.KNNBaseline>`__              | 0.931   | 0.733   | 0:00:12   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `Co-Clustering <http://surprise.readthedocs.io/en/stable/co_clustering.html#surprise.prediction_algorithms.co_clustering.CoClustering>`__   | 0.963   | 0.753   | 0:00:03   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `Baseline <http://surprise.readthedocs.io/en/stable/basic_algorithms.html#surprise.prediction_algorithms.baseline_only.BaselineOnly>`__     | 0.944   | 0.748   | 0:00:01   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `Random <http://surprise.readthedocs.io/en/stable/basic_algorithms.html#surprise.prediction_algorithms.random_pred.NormalPredictor>`__      | 1.514   | 1.215   | 0:00:01   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `Movielens 1M <http://grouplens.org/datasets/movielens/1m>`__                                                                               | RMSE    | MAE     | Time      |\n+=============================================================================================================================================+=========+=========+===========+\n| `SVD <http://surprise.readthedocs.io/en/stable/matrix_factorization.html#surprise.prediction_algorithms.matrix_factorization.SVD>`__        | 0.873   | 0.686   | 0:02:13   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `SVP++ <http://surprise.readthedocs.io/en/stable/matrix_factorization.html#surprise.prediction_algorithms.matrix_factorization.SVDpp>`__    | 0.862   | 0.673   | 2:54:19   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `NMF <http://surprise.readthedocs.io/en/stable/matrix_factorization.html#surprise.prediction_algorithms.matrix_factorization.NMF>`__        | 0.916   | 0.724   | 0:02:31   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `Slope One <http://surprise.readthedocs.io/en/stable/slope_one.html#surprise.prediction_algorithms.slope_one.SlopeOne>`__                   | 0.907   | 0.715   | 0:02:31   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `k-NN <http://surprise.readthedocs.io/en/stable/knn_inspired.html#surprise.prediction_algorithms.knns.KNNBasic>`__                          | 0.923   | 0.727   | 0:05:27   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `Centered k-NN <http://surprise.readthedocs.io/en/stable/knn_inspired.html#surprise.prediction_algorithms.knns.KNNWithMeans>`__             | 0.929   | 0.738   | 0:05:43   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `k-NN Baseline <http://surprise.readthedocs.io/en/stable/knn_inspired.html#surprise.prediction_algorithms.knns.KNNBaseline>`__              | 0.895   | 0.706   | 0:05:55   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `Co-Clustering <http://surprise.readthedocs.io/en/stable/co_clustering.html#surprise.prediction_algorithms.co_clustering.CoClustering>`__   | 0.915   | 0.717   | 0:00:31   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `Baseline <http://surprise.readthedocs.io/en/stable/basic_algorithms.html#surprise.prediction_algorithms.baseline_only.BaselineOnly>`__     | 0.909   | 0.719   | 0:00:19   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n| `Random <http://surprise.readthedocs.io/en/stable/basic_algorithms.html#surprise.prediction_algorithms.random_pred.NormalPredictor>`__      | 1.504   | 1.206   | 0:00:19   |\n+---------------------------------------------------------------------------------------------------------------------------------------------+---------+---------+-----------+\n\nInstallation\n------------\n\nWith pip (you'll need `numpy <http://www.numpy.org/>`__, and a C\ncompiler. Windows users might prefer using conda):\n\n::\n\n    $ pip install numpy\n    $ pip install scikit-surprise\n\nWith conda:\n\n::\n\n    $ conda install -c conda-forge scikit-surprise\n\nFor the latest version, you can also clone the repo and build the source\n(you'll first need `Cython <http://cython.org/>`__ and\n`numpy <http://www.numpy.org/>`__):\n\n::\n\n    $ pip install numpy cython\n    $ git clone https://github.com/NicolasHug/surprise.git\n    $ cd surprise\n    $ python setup.py install\n\nLicense\n-------\n\nThis project is licensed under the `BSD\n3-Clause <https://opensource.org/licenses/BSD-3-Clause>`__ license, so\nit can be used for pretty much everything, including commercial\napplications. Please let us know how\n`Surprise <http://surpriselib.com>`__ is useful to you!\n\nHere is a Bibtex entry if you ever need to cite Surprise in a research\npaper (please keep us posted, we would love to know if Surprise was\nhelpful to you):\n\n::\n\n    @Misc{Surprise,\n    author =   {Hug, Nicolas},\n    title =    { {S}urprise, a {P}ython library for recommender systems},\n    howpublished = {\\url{http://surpriselib.com}},\n    year = {2017}\n    }\n\nContributors\n------------\n\nThe following persons have contributed to\n`Surprise <http://surpriselib.com>`__:\n\nCharles-Emmanuel Dias, Lukas Galke, Pierre-Fran\u00e7ois Gimenez, Nicolas\nHug, Hengji Liu, Maher Malaeb, Naturale0, nju-luke, Skywhat, Mike Lee\nWilliams, Chenchen Xu.\n\nThanks a lot :) !\n\nContributing, feedback, contact\n-------------------------------\n\nAny kind of feedback/criticism would be greatly appreciated (software\ndesign, documentation, improvement ideas, spelling mistakes, etc...).\n\nIf you'd like to see some features or algorithms implemented in\n`Surprise <http://surpriselib.com>`__, please let us know!\n\nPlease feel free to contribute (see\n`guidelines <https://github.com/NicolasHug/Surprise/blob/master/.github/CONTRIBUTING.md>`__)\nand send pull requests!\n\nFor bugs, issues or questions about\n`Surprise <http://surpriselib.com>`__, you can use the GitHub `project\npage <https://github.com/NicolasHug/Surprise>`__ (please don't send me\nemails as there would be no record for other users).\n\n.. |GitHub version| image:: https://badge.fury.io/gh/nicolashug%2FSurprise.svg\n   :target: https://badge.fury.io/gh/nicolashug%2FSurprise\n.. |Documentation Status| image:: https://readthedocs.org/projects/surprise/badge/?version=stable\n   :target: http://surprise.readthedocs.io/en/stable/?badge=stable\n.. |Build Status| image:: https://travis-ci.org/NicolasHug/Surprise.svg?branch=master\n   :target: https://travis-ci.org/NicolasHug/Surprise\n.. |python versions| image:: https://img.shields.io/badge/python-2.7%2C%203.5%2C%203.6-blue.svg\n   :target: http://surpriselib.com\n.. |License| image:: https://img.shields.io/badge/License-BSD%203--Clause-blue.svg\n   :target: https://opensource.org/licenses/BSD-3-Clause",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://surpriselib.com",
    "keywords": "recommender recommendation system",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scikit-surprise",
    "platform": "",
    "project_url": "https://pypi.org/project/scikit-surprise/",
    "release_url": "https://pypi.org/project/scikit-surprise/1.0.5/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "An easy-to-use library for recommender systems.",
    "version": "1.0.5"
  },
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "de5cced29d640b19126598d8902bb7e5",
          "sha256": "33abd1cd65f1048e247524ed7456eff8098b0736f9a9efe24627f95ae054cf84"
        },
        "downloads": -1,
        "filename": "scikit-surprise-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "de5cced29d640b19126598d8902bb7e5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1546368,
        "upload_time": "2017-01-02T19:44:19",
        "url": "https://files.pythonhosted.org/packages/ce/2c/f224725a3b13fae841a3854791dd2884b98e83ff1a7e8b02c09fe9abdd0f/scikit-surprise-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cf9928b07b4a405ef36225600078ffb7",
          "sha256": "7c5a1d8f17381c7d66d7713a37f87f480cc6650fe58ae5de6a9c2b9ae0ba240f"
        },
        "downloads": -1,
        "filename": "scikit-surprise-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cf9928b07b4a405ef36225600078ffb7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 503964,
        "upload_time": "2017-01-04T11:42:22",
        "url": "https://files.pythonhosted.org/packages/78/9f/45821adeda7e8a56ef2e773b45c370832fdb8772957ed5bf50c6239658b1/scikit-surprise-1.0.2.tar.gz"
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7d6f80cf87f2e0e52a9ac7eab9ceb385",
          "sha256": "f1fef83602896983b37451ea9a285156070d933a87c87f7ad67d5a4c434f2df5"
        },
        "downloads": -1,
        "filename": "scikit-surprise-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7d6f80cf87f2e0e52a9ac7eab9ceb385",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2371233,
        "upload_time": "2017-05-03T15:36:50",
        "url": "https://files.pythonhosted.org/packages/db/78/d91f18804153d9b64e3b6e7305c785374d3a8be33f0fc0f3bd5db56727c0/scikit-surprise-1.0.3.tar.gz"
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fe78e4d468e45a2663da82402d51f34d",
          "sha256": "538ff0adc237ac399babf70186a0c46aa2af6809e2b08d2938404291d04be7cf"
        },
        "downloads": -1,
        "filename": "scikit-surprise-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "fe78e4d468e45a2663da82402d51f34d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2317883,
        "upload_time": "2017-09-30T10:12:16",
        "url": "https://files.pythonhosted.org/packages/dc/49/1e0a86818436f47501804cebf3bebea7427200a6575f5bd5f652badc8a1f/scikit-surprise-1.0.4.tar.gz"
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0ac746b2721ba48cb3ce10ec55c5b34d",
          "sha256": "228d70be7a38a54fcf4582849064d9754c46ad9a867dd65145d179b9afabaf43"
        },
        "downloads": -1,
        "filename": "scikit-surprise-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0ac746b2721ba48cb3ce10ec55c5b34d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2431412,
        "upload_time": "2018-01-09T11:19:00",
        "url": "https://files.pythonhosted.org/packages/a4/a3/70a00e68fd212b37ad4a14d9e3bc417ee11535c036c2534bf9c3bd4c6876/scikit-surprise-1.0.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "0ac746b2721ba48cb3ce10ec55c5b34d",
        "sha256": "228d70be7a38a54fcf4582849064d9754c46ad9a867dd65145d179b9afabaf43"
      },
      "downloads": -1,
      "filename": "scikit-surprise-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "0ac746b2721ba48cb3ce10ec55c5b34d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 2431412,
      "upload_time": "2018-01-09T11:19:00",
      "url": "https://files.pythonhosted.org/packages/a4/a3/70a00e68fd212b37ad4a14d9e3bc417ee11535c036c2534bf9c3bd4c6876/scikit-surprise-1.0.5.tar.gz"
    }
  ]
}