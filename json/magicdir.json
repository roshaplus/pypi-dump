{
  "info": {
    "author": "Justin Dane Vrana",
    "author_email": "justin.vrana@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "|travis build| |Coverage Status| |PyPI version|\n\n.. figure:: images/module_icon.png?raw=true\n   :alt: module\\_icon\n\n   module\\_icon\n\nBuild/Coverage Status\n^^^^^^^^^^^^^^^^^^^^^\n\n+-------------------+------------------+---------------------+\n| Branch            | Build            | Coverage            |\n+===================+==================+=====================+\n| **master**        | |travis build|   | |Coverage Status|   |\n+-------------------+------------------+---------------------+\n| **development**   | |travis build|   | |Coverage Status|   |\n+-------------------+------------------+---------------------+\n\nTreeHouse\n=========\n\nDealing with paths and directories can be a pain. **Treehouse** allows\nyou to build directory trees by treating your directory tree as a\nfirst-class object.\n\nSo fancy. So perfect. Forever.\n\n.. code:: python\n\n    from treehouse import TreeHouse\n\n    env = TreeHouse('bin')\n    env.add('level1')\n\n    # paths can be accessed as attributes\n    env.level1\n\n    # paths and attributes are heirarchical\n    env.level1.add('level2')\n    env.level1.level2\n\n    # by default, attributes get 'pushed' back to root for quick access to your paths\n    env.level2 == env.level1.level2\n\n    # attribute aliases can be defined\n    env.level2.add('level2', alias='level2a')\n    env.level2a\n\n    # print the expected tree\n    env.print_tree()\n\n    # alias of directory\n    env.alias\n    env.level1.alias\n\n    # name of directory\n    env.name\n    env.level1.name\n\n    # print root path\n    env.path # relative path\n    env.path.absolute()\n    env.abspath\n\n    # print paths in tree\n    env.paths # relative paths\n    env.paths.absolute() # absolute paths\n    env.abspaths\n\n    # all attributes return another TreeHouse object\n    l2 = env.level2\n    print(\"tree\")\n    env.print_tree()\n\n    print(\"level2 tree\")\n    l2.print_tree()\n\n    # set the parent directory this directory tree will exist in\n    env.set_dir('..')\n\n    # instantly make the directory tree\n    env.mkdirs()\n\n    # remove the directory tree (be careful!)\n    env.rmdirs()\n\n    # move the directory tree\n    env.mvdirs()\n\n    # copy the directory tree\n    env.cpdirs()\n\n    # get root\n    assert env is env.misc.root\n\n    #\n    env.misc.somethingelse = 5\n    assert not hasattr(env, 'somethingelse')\n    assert hasattr(env.misc, 'somethingelse')\n\n    # fancy things\n    env.misc.ancestors(include_self=True).name # name of all attributes for parents\n    env.descendents(include_self=True).name # name of all children\n    env.paths.absolute().resolve() # chain things together\n\n    env.paths # all paths of all children\n    env.paths.absolute() # apply absolute() to each path, return ChainList\n    env.paths.resolve() # apply absolute() and then resolve() to each path, return ChainList\n\n    # quickly writing files\n\nThe following are equivalent ways to produce the following directory\nstructure:\n\n.. code:: python\n\n    env = TreeHouse('bin')\n    env.add('.secrets', alias='secrets')\n    env.secrets.add('misc')\n    env.add('public')\n    env.public.add('category1')\n    env.public.add('category2')\n\n    env.mkdirs()\n\n.. code:: python\n\n    env = TreeHouse('bin')\n    env.add('.secrets', alias='secrets').add('misc')\n    env.add('public').add('category1')\n    env.public.add('category2')\n\n    env.mkdirs()\n\n.. code:: python\n\n    env = TreeHouse('bin')\n    env.add('.secrets', alias='secrets').add('misc')\n    env.add('public/category1')\n    env.add('public/category2')\n    env.mkdirs()\n\nQuickly access your paths:\n\n.. code:: python\n\n    env.category1 # 'bin/public/category1'\n    env.category2 # 'bin/public/category2'\n    env.public  # 'bin/public'\n    env.secrets # 'bin/.secrets'\n    env.misc # 'bin/.secrets/misc'\n\n.. |travis build| image:: https://img.shields.io/travis/USER/REPO.svg\n   :target: https://travis-ci.org/USER/REPO\n.. |Coverage Status| image:: https://coveralls.io/repos/github/USER/REPO/badge.svg?branch=master\n   :target: https://coveralls.io/github/USER/REPO?branch=master\n.. |PyPI version| image:: https://badge.fury.io/py/REPO.svg\n   :target: https://badge.fury.io/py/REPO\n.. |travis build| image:: https://img.shields.io/travis/USER/REPO/master.svg\n   :target: https://travis-ci.org/USER/REPO/master\n.. |travis build| image:: https://img.shields.io/travis/USER/REPO/development.svg\n   :target: https://travis-ci.org/USER/REPO/development\n.. |Coverage Status| image:: https://coveralls.io/repos/github/USER/REPO/badge.svg?branch=development\n   :target: https://coveralls.io/github/USER/REPO?branch=development",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jvrana/magicdir",
    "keywords": "directory python tree",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "magicdir",
    "platform": "",
    "project_url": "https://pypi.org/project/magicdir/",
    "release_url": "https://pypi.org/project/magicdir/0.2.1a/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "intuitive python directory tree management for all",
    "version": "0.2.1a"
  },
  "releases": {
    "0.1.2a": [
      {
        "comment_text": "",
        "digests": {
          "md5": "348d64f4899b5ca168f8ac7cbf4421f1",
          "sha256": "f544df56ca3a3f0e4c52039600faf2017eff5952e04e43a714aea47cbf9bec9d"
        },
        "downloads": -1,
        "filename": "magicdir-0.1.2a.tar.gz",
        "has_sig": false,
        "md5_digest": "348d64f4899b5ca168f8ac7cbf4421f1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7257,
        "upload_time": "2017-10-30T08:16:35",
        "url": "https://files.pythonhosted.org/packages/70/9d/2a6e3e67cf970b194a573fa512112b91023f82b0a907f4d9d00f52aeb9b2/magicdir-0.1.2a.tar.gz"
      }
    ],
    "0.2.0a": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2eb878f3f0768afcd6ac87d71b5ac56e",
          "sha256": "3b9596b74d494dfcf5b069e79fbf9592d5286b32c4aa298eac81929acebe05f3"
        },
        "downloads": -1,
        "filename": "magicdir-0.2.0a.tar.gz",
        "has_sig": false,
        "md5_digest": "2eb878f3f0768afcd6ac87d71b5ac56e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8869,
        "upload_time": "2017-11-02T06:52:29",
        "url": "https://files.pythonhosted.org/packages/fa/33/260ae34fcaa7d0d3f26dedce3123f7dfe3a78fb893ed5d0a65d97c8718bc/magicdir-0.2.0a.tar.gz"
      }
    ],
    "0.2.1a": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a00ca607e6f3c20574e512b3b80134aa",
          "sha256": "5c1173badeee779858cba2655b5d2e8426c57d2a682c5789beae373bf5c378ce"
        },
        "downloads": -1,
        "filename": "magicdir-0.2.1a.tar.gz",
        "has_sig": false,
        "md5_digest": "a00ca607e6f3c20574e512b3b80134aa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8864,
        "upload_time": "2017-11-02T07:22:41",
        "url": "https://files.pythonhosted.org/packages/74/03/4a8e20caab65b9ae380606c4b7b27e5a8e040baedef8b8abd75764b055a5/magicdir-0.2.1a.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a00ca607e6f3c20574e512b3b80134aa",
        "sha256": "5c1173badeee779858cba2655b5d2e8426c57d2a682c5789beae373bf5c378ce"
      },
      "downloads": -1,
      "filename": "magicdir-0.2.1a.tar.gz",
      "has_sig": false,
      "md5_digest": "a00ca607e6f3c20574e512b3b80134aa",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8864,
      "upload_time": "2017-11-02T07:22:41",
      "url": "https://files.pythonhosted.org/packages/74/03/4a8e20caab65b9ae380606c4b7b27e5a8e040baedef8b8abd75764b055a5/magicdir-0.2.1a.tar.gz"
    }
  ]
}