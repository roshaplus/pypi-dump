{
  "info": {
    "author": "SignalFx, Inc",
    "author_email": "info@signalfx.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "# SignalFx Python Lambda Wrapper\n\nSignalFx Python Lambda Wrapper.\n\n## Usage\n\nThe SignalFx Java Lambda Wrapper is a wrapper around an AWS Lambda Python function handler, used to instrument execution of the function and send metrics to SignalFx.\n\n### Installation\n\nTo install from CDN\n```\n$ pip install https://cdn.signalfx.com/signalfx_lambda-0.0.2-py2.py3-none-any.whl\n```\n\n\nTo install from source\n```\n$ pip install -e git+https://github.com/signalfx/lambda-python#egg=signalfx-lambda\n```\n\n### Environment Variables\n\n```\nSIGNALFX_AUTH_TOKEN=access token\n\nSIGNALFX_INGEST_ENDPOINT=[optional]\n```\n\n### Wrapping a function\n\nDecorate your handler with @signalfx_lambda.wrapper\n\n```\nimport signalfx_lambda\n\n@signalfx_lambda.wrapper\ndef handler(event, context):\n    # your code\n```\n\n### Metrics and dimensions sent by the wrapper\n\nThe Lambda wrapper sends the following metrics to SignalFx:\n\n| Metric Name  | Type | Description |\n| ------------- | ------------- | ---|\n| function.invocations  | Counter  | Count number of Lambda invocations|\n| function.cold_starts  | Counter  | Count number of cold starts|\n| function.errors  | Counter  | Count number of errors from underlying Lambda handler|\n| function.duration  | Gauge  | Milliseconds in execution time of underlying Lambda handler|\n\nThe Lambda wrapper adds the following dimensions to all data points sent to SignalFx:\n\n| Dimension | Description |\n| ------------- | ---|\n| lambda_arn  | ARN of the Lambda function instance |\n| aws_region  | AWS Region  |\n| aws_account_id | AWS Account ID  |\n| aws_function_name  | AWS Function Name |\n| aws_function_version  | AWS Function Version |\n| aws_function_qualifier  | AWS Function Version Qualifier (version or version alias if it is not an event source mapping Lambda invocation) |\n| event_source_mappings  | AWS Function Name (if it is an event source mapping Lambda invocation) |\n| aws_execution_env  | AWS execution environment (e.g. AWS_Lambda_python3.6) |\n| function_wrapper_version  | SignalFx function wrapper qualifier (e.g. signalfx_lambda_0.0.2) |\n| metric_source | The literal value of 'lambda_wrapper' |\n\n### Sending custom metric from the Lambda function\n\n```\nimport signalfx_lambda\n\n# sending application_performance metric with value 100 and dimension abc:def\nsignalfx_lambda.send_gauge('application_performance', 100, {'abc':'def'})\n\n# sending counter metric with no dimension\nsignalfx_lambda.send_counter('database_calls', 1)\n```\n\n### Testing it out locally\n\nUse python-lambda-local\n```\npip install python-lambda-local\n```\n\n```\npython-lambda-local tests/test.py tests/event.json -a 'arn:aws:lambda:us-east-1:accountId:function:functionNamePython:$LATEST'\n```\n\n### Packaging\n```\npython setup.py bdist_wheel --universal\n```\n\n### License\n\nApache Software License v2. Copyright \u00a9 2014-2017 SignalFx\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/signalfx/python-lambda",
    "keywords": "",
    "license": "Apache Software License v2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "signalfx-lambda",
    "platform": "",
    "project_url": "https://pypi.org/project/signalfx-lambda/",
    "release_url": "https://pypi.org/project/signalfx-lambda/0.0.3/",
    "requires_dist": [
      "signalfx (>=1.0.16)"
    ],
    "requires_python": "",
    "summary": "SignalFx Lambda Python Wrapper",
    "version": "0.0.3"
  },
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "995dc1c8b6d402afa15d040658747cda",
          "sha256": "105e9dc0123ae1c988b251dc80fed3a3140ff617a8805b90dee1d006ecba0ae0"
        },
        "downloads": -1,
        "filename": "signalfx_lambda-0.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "995dc1c8b6d402afa15d040658747cda",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 6823,
        "upload_time": "2017-11-13T22:51:09",
        "url": "https://files.pythonhosted.org/packages/fc/9c/26714a98d0873721eff80ac14ae224b4ac25fae1bde4478356b3e512dea8/signalfx_lambda-0.0.3-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "995dc1c8b6d402afa15d040658747cda",
        "sha256": "105e9dc0123ae1c988b251dc80fed3a3140ff617a8805b90dee1d006ecba0ae0"
      },
      "downloads": -1,
      "filename": "signalfx_lambda-0.0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "995dc1c8b6d402afa15d040658747cda",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 6823,
      "upload_time": "2017-11-13T22:51:09",
      "url": "https://files.pythonhosted.org/packages/fc/9c/26714a98d0873721eff80ac14ae224b4ac25fae1bde4478356b3e512dea8/signalfx_lambda-0.0.3-py2.py3-none-any.whl"
    }
  ]
}