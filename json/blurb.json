{
  "info": {
    "author": "Larry Hastings",
    "author_email": "larry@hastings.org",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "blurb\n=====\n\n.. image:: https://img.shields.io/pypi/v/blurb.svg\n    :target: https://pypi.org/project/blurb/\n\nOverview\n--------\n\n**blurb** is a tool designed to rid CPython core development\nof the scourge of ``Misc/NEWS`` conflicts.\n\nThe core concept: split ``Misc/NEWS`` into many\nseparate files that, when concatenated back together\nin sorted order, reconstitute the original ``Misc/NEWS`` file.\nAfter that, ``Misc/NEWS`` could be deleted from the CPython\nrepo and thereafter rendered on demand (e.g. when building\na release).  When checking in a change to CPython, the checkin\nprocess will write out a new file that sorts into the correct place,\nusing a filename unlikely to have a merge conflict.\n\n**blurb** is a single command with a number of subcommands.\nIt's designed  to be run inside a valid CPython (git) repo,\nand automatically uses the correct file paths.\n\nYou can install **blurb** from PyPI using ``pip``.  Alternatively,\nsimply add ``blurb`` to a directory on your path.\n**blurb**'s only dependency is Python 3.6+.\n\n\nFiles used by blurb\n-------------------\n\n**blurb** uses a new directory tree called ``Misc/NEWS.d``.\nEverything it does is in there, except for possibly\nmodifying ``Misc/NEWS``.\n\nUnder ``Misc/NEWS.d`` you'll find the following:\n\n* A single file for all news entries per previous revision,\n  named for the exact version number, with the extension ``.rst``.\n  Example: ``Misc/NEWS.d/3.6.0b2.rst``.\n\n* The ``next`` directory, which contains subdirectories representing\n  the various ``Misc/NEWS`` categories.  Inside these subdirectories\n  are more ``.rst`` files with long, uninteresting, computer-generated\n  names.  Example:\n  ``Misc/NEWS.d/next/Library/2017-05-04-12-24-06.bpo-25458.Yl4gI2.rst``\n\n\nblurb subcommands\n-----------------\n\nLike many modern utilities, **blurb** has only one executable\n(called ``blurb``), but provides a diverse set of functionality\nthrough subcommands.  The subcommand is the first argument specified\non the command-line.\n\nIf you're a CPython core developer, you probably don't need to use\nanything except ``blurb add``--and you don't even need to specify\nthe ``add`` part.\n(If no subcommand is specified, **blurb** assumes you meant ``blurb add``.)\nThe other commands are only expected to be useful for CPython release\nmanagers.\n\n\n\nblurb help\n~~~~~~~~~~\n\n**blurb** is self-documenting through the ``blurb help`` subcommand.\nRun without any further arguments, it prints a list of all subcommands,\nwith a one-line summary of the functionality of each.  Run with a\nthird argument, it prints help on that subcommand (e.g. ``blurb help release``).\n\n\nblurb add\n~~~~~~~~~\n\n``blurb add`` adds a new Misc/NEWS entry for you.\nIt opens a text editor on a template; you edit the\nfile, save, and exit.  **blurb** then stores the file\nin the correct place, and stages it in ``git`` for you.\n\nThe template for the ``blurb add`` message looks like this::\n\n    #\n    # Please enter the relevant bugs.python.org issue number here:\n    #\n    .. bpo:\n\n    #\n    # Uncomment one of these \"section:\" lines to specify which section\n    # this entry should go in in Misc/NEWS.\n    #\n    #.. section: Security\n    #.. section: Core and Builtins\n    #.. section: Library\n    #.. section: Documentation\n    #.. section: Tests\n    #.. section: Build\n    #.. section: Windows\n    #.. section: macOS\n    #.. section: IDLE\n    #.. section: Tools/Demos\n    #.. section: C API\n\n    # Write your Misc/NEWS entry below.  It should be a simple ReST paragraph.\n    # Don't start with \"- Issue #<n>: \" or \"- bpo-<n>: \"or that sort of stuff.\n    ###########################################################################\n\nHere's how you interact with the file:\n\n* Add the ``bugs.python.org`` issue number for this checkin to the\n  end of the ``.. bpo:`` line.\n\n* Uncomment the line with the relevant ``Misc/NEWS`` section for this entry.\n  For example, if this should go in the ``Library`` section, uncomment\n  the line reading ``#.. section: Library``.  To uncomment, just delete\n  the ``#`` at the front of the line.\n\n* Finally, go to the end of the file, and enter your NEWS entry.\n  This should be a single paragraph of English text using\n  simple ReST markup.\n\nWhen ``blurb add`` gets a valid entry, it writes it to a file\nwith the following format::\n\n    Misc/NEWS.d/next/<section>/<datetime>.bpo-<bpo>.<nonce>.rst\n\nFor example, a file added by ``blurb add`` might look like this::\n\n    Misc/NEWS.d/next/Library/2017-05-04-12-24-06.bpo-25458.Yl4gI2.rst\n\n``<section>`` is the section provided in the checkin message.\n\n``<datetime>`` is the current UTC time, formatted as\n``YYYY-MM-DD-hh-mm-ss``.\n\n``<nonce>`` is a hopefully-unique string of characters meant to\nprevent filename collisions.  **blurb** creates this by computing\nthe MD5 hash of the text, converting it to base64 (using the\n\"urlsafe\" alphabet), and taking the first 6 characters of that.\n\n\nThis filename ensures several things:\n\n* All entries in ``Misc/NEWS`` will be sorted by time.\n\n* It is unthinkably unlikely that there'll be a conflict\n  between the filenames generated for two developers checking in,\n  even if they check in at the exact same second.\n\n\nFinally, ``blurb add`` stages the file in git for you.\n\n\nblurb merge\n~~~~~~~~~~~\n\n``blurb merge`` recombines all the files in the\n``Misc/NEWS.d`` tree back into a single ``NEWS`` file.\n\n``blurb merge`` accepts only a single command-line argument:\nthe file to write to.  By default it writes to\n``Misc/NEWS`` (relative to the root of your CPython checkout).\n\nSplitting and recombining the existing ``Misc/NEWS`` file\ndoesn't recreate the previous ``Misc/NEWS`` exactly.  This\nis because ``Misc/NEWS`` never used a consistent ordering\nfor the \"sections\" inside each release, whereas ``blurb merge``\nhas a hard-coded preferred ordering for the sections.  Also,\n**blurb** aggressively reflows paragraphs to < 78 columns,\nwheras the original hand-edited file occasionally had lines\n> 80 columns.  Finally, **blurb** strictly uses ``bpo-<n>:`` to\nspecify issue numbers at the beginnings of entries, wheras\nthe legacy approach to ``Misc/NEWS`` required using ``Issue #<n>:``.\n\n\nblurb release\n~~~~~~~~~~~~~\n\n``blurb release`` is used by the release manager as part of\nthe CPython release process.  It takes exactly one argument,\nthe name of the version being released.\n\nHere's what it does under the hood:\n\n* Combines all recently-added NEWS entries from\n  the ``Misc/NEWS.d/next`` directory into ``Misc/NEWS.d/<version>.rst``.\n* Runs ``blurb merge`` to produce an updated ``Misc/NEWS`` file.\n\nOne hidden feature: if the version specified is ``.``, ``blurb release``\nuses the name of the directory CPython is checked out to.\n(When making a release I generally name the directory after the\nversion I'm releasing, and using this shortcut saves me some typing.)\n\n\nblurb split\n~~~~~~~~~~~\n\n``blurb split`` only needs to be run once per-branch, ever.\nIt reads in ``Misc/NEWS``\nand splits it into individual ``.rst`` files.\nThe text files are stored as follows::\n\n    Misc/NEWS.d/<version>.rst\n\n``<version>`` is the version number of Python where the\nchange was committed.  Pre-release versions are denoted\nwith an abbreviation: ``a`` for alphas, ``b`` for betas,\nand ``rc`` for release candidates.\n\nThe individual ``<version>.rst`` files actually (usually)\ncontain multiple entries.  Each entry is delimited by a\nsingle line containing ``..`` by itself.\n\nThe assumption is, at the point we convert over to *blurb*,\nwe'll run ``blurb split`` on each active branch,\nremove ``Misc/NEWS`` from the repo entirely,\nnever run ``blurb split`` ever again,\nand ride off into the sunset, confident that the world is now\na better place.\n\n\n\nThe \"next\" directory\n--------------------\n\nYou may have noticed that ``blurb add`` adds news entries to\na directory called ``next``, and ``blurb release`` combines those\nnews entries into a single file named with the version.  Why\nis that?\n\nFirst, it makes naming the next version a late-binding decision.\nIf we are currently working on 3.6.5rc1, but there's a zero-day\nexploit and we need to release an emergency 3.6.5 final, we don't\nhave to fix up a bunch of metadata.\n\nSecond, it means that if you cherry-pick a commit forward or\nbackwards, you automatically pick up the NEWS entry too.  You\ndon't need to touch anything up--the system will already do\nthe right thing.  If NEWS entries were already written to the\nfinal version directory, you'd have to move those around as\npart of the cherry-picking process.\n\n\nCopyright\n---------\n\n**blurb** is Copyright 2015-2017 by Larry Hastings.\nLicensed to the PSF under a contributor agreement.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/python/core-workflow/tree/master/blurb",
    "keywords": "",
    "license": "",
    "maintainer": "Python Core Developers",
    "maintainer_email": "core-workflow@mail.python.org",
    "name": "blurb",
    "platform": "",
    "project_url": "https://pypi.org/project/blurb/",
    "release_url": "https://pypi.org/project/blurb/1.0.0.post1/",
    "requires_dist": [],
    "requires_python": ">=3.6",
    "summary": "Command-line tool to manage CPython Misc/NEWS.d entries.",
    "version": "1.0.0.post1"
  },
  "releases": {
    "0.0.0": [],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0b792fda61161da874aa3242ca8b9ac3",
          "sha256": "d41a16acba47af3468cc656fbb1ccc16e31f77c90755f16512572788a454c3d8"
        },
        "downloads": 0,
        "filename": "blurb-1.0-py3.6.egg",
        "has_sig": true,
        "md5_digest": "0b792fda61161da874aa3242ca8b9ac3",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "size": 15444,
        "upload_time": "2017-06-23T00:11:23",
        "url": "https://files.pythonhosted.org/packages/29/9f/07da5243547f834a54064d049b3ec1f2d1954a2115c8883ab95abd6581a7/blurb-1.0-py3.6.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c6adc39f792db71488cac24fa6dfe716",
          "sha256": "9eb883970462568c36c4f3a8b2b4d4687fc7c25c6a428404d4c40a5bd67a0f7d"
        },
        "downloads": 0,
        "filename": "blurb-1.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "c6adc39f792db71488cac24fa6dfe716",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 17489,
        "upload_time": "2017-06-23T00:11:18",
        "url": "https://files.pythonhosted.org/packages/76/05/16a4ef11265cd85555e501c61fa26deada04aa4856f889cec0f6363fa91a/blurb-1.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "92a39cc2d87e9cf2bad61391411aa567",
          "sha256": "40bf5ebd053bda4644b9d9cff2cc53cf26db1dc488af494f18bdc8a4ba2f1ff1"
        },
        "downloads": 0,
        "filename": "blurb-1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "92a39cc2d87e9cf2bad61391411aa567",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19379,
        "upload_time": "2017-06-23T00:11:25",
        "url": "https://files.pythonhosted.org/packages/29/56/3a0bf4c03dd31522a503897f08eb292257e1641958c5a2d56d91ef8a337b/blurb-1.0.tar.gz"
      }
    ],
    "1.0.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4faf1d37bbb17502b5471dfa84ada12e",
          "sha256": "b45afcb31307ee745695ad8ff2b36d9f4a99ea579ca4f1044ae0497bcd87686c"
        },
        "downloads": 0,
        "filename": "blurb-1.0.0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4faf1d37bbb17502b5471dfa84ada12e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 56642,
        "upload_time": "2017-06-24T16:56:00",
        "url": "https://files.pythonhosted.org/packages/bc/92/ce7ffb09fc98975a4718acc89e180e6e8410f8beb518f4fbcb55af2005eb/blurb-1.0.0.post1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "082bb8a9edffff0b9095327c1f7ca860",
          "sha256": "c5365e80872c6d29ace7b976f039d8c9f48cbe9fd084715adf07c9f55060180b"
        },
        "downloads": 0,
        "filename": "blurb-1.0.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "082bb8a9edffff0b9095327c1f7ca860",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18451,
        "upload_time": "2017-06-24T16:56:02",
        "url": "https://files.pythonhosted.org/packages/3d/d3/b17ae953f530f9287e29e86acaec4c6a858eae576ae487f3348edbd0b6af/blurb-1.0.0.post1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4faf1d37bbb17502b5471dfa84ada12e",
        "sha256": "b45afcb31307ee745695ad8ff2b36d9f4a99ea579ca4f1044ae0497bcd87686c"
      },
      "downloads": 0,
      "filename": "blurb-1.0.0.post1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4faf1d37bbb17502b5471dfa84ada12e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 56642,
      "upload_time": "2017-06-24T16:56:00",
      "url": "https://files.pythonhosted.org/packages/bc/92/ce7ffb09fc98975a4718acc89e180e6e8410f8beb518f4fbcb55af2005eb/blurb-1.0.0.post1-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "082bb8a9edffff0b9095327c1f7ca860",
        "sha256": "c5365e80872c6d29ace7b976f039d8c9f48cbe9fd084715adf07c9f55060180b"
      },
      "downloads": 0,
      "filename": "blurb-1.0.0.post1.tar.gz",
      "has_sig": false,
      "md5_digest": "082bb8a9edffff0b9095327c1f7ca860",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 18451,
      "upload_time": "2017-06-24T16:56:02",
      "url": "https://files.pythonhosted.org/packages/3d/d3/b17ae953f530f9287e29e86acaec4c6a858eae576ae487f3348edbd0b6af/blurb-1.0.0.post1.tar.gz"
    }
  ]
}