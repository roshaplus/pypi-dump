{
  "info": {
    "author": "Leo Lee",
    "author_email": "mail@debugtalk.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# HttpRunner\n\n[![license](https://img.shields.io/github/license/HttpRunner/HttpRunner.svg)](https://github.com/HttpRunner/HttpRunner/blob/master/LICENSE)\n[![Build Status](https://travis-ci.org/debugtalk/HttpRunner.svg?branch=master)](https://travis-ci.org/HttpRunner/HttpRunner)\n[![Coverage Status](https://coveralls.io/repos/github/debugtalk/HttpRunner/badge.svg?branch=master)](https://coveralls.io/github/debugtalk/HttpRunner?branch=master)\n[![PyPI](https://img.shields.io/pypi/v/HttpRunner.svg)](https://pypi.python.org/pypi/HttpRunner)\n[![PyPI](https://img.shields.io/pypi/pyversions/HttpRunner.svg)](https://pypi.python.org/pypi/HttpRunner)\n\nNew name for `ApiTestEngine`.\n\n## Design Philosophy\n\nTake full reuse of Python's existing powerful libraries: [`Requests`][requests], [`unittest`][unittest] and [`Locust`][Locust]. And achieve the goal of API automation test, production environment monitoring, and API performance test, with a concise and elegant manner.\n\n## Key Features\n\n- Inherit all powerful features of [`Requests`][requests], just have fun to handle HTTP in human way.\n- Define testcases in YAML or JSON format in concise and elegant manner.\n- Supports `function`/`variable`/`extract`/`validate` mechanisms to create full test scenarios.\n- With `debugtalk.py` plugin, module functions can be auto-discovered in recursive upward directories.\n- Testcases can be run in diverse ways, with single testset, multiple testsets, or entire project folder.\n- Test report is concise and clear, with detailed log records. See [`PyUnitReport`][PyUnitReport].\n- With reuse of [`Locust`][Locust], you can run performance test without extra work.\n- CLI command supported, perfect combination with [Jenkins][Jenkins].\n\n[*`Background Introduction (\u4e2d\u6587\u7248)`*](docs/background-CN.md) | [*`Feature Descriptions (\u4e2d\u6587\u7248)`*](docs/feature-descriptions-CN.md)\n\n## Installation/Upgrade\n\n```bash\n$ pip install HttpRunner\n```\n\nTo upgrade all specified packages to the newest available version, you should add the `-U` option.\n\nIf there is a problem with the installation or upgrade, you can check the [`FAQ`](docs/FAQ.md).\n\nTo ensure the installation or upgrade is successful, you can execute command `httprunner -V` to see if you can get the correct version number.\n\n```text\n$ httprunner -V\nHttpRunner version: 0.8.0\n```\n\nExecute the command `httprunner -h` to view command help.\n\n```text\n$ httprunner -h\nusage: httprunner [-h] [-V] [--log-level LOG_LEVEL] [--report-name REPORT_NAME]\n           [--failfast] [--startproject STARTPROJECT]\n           [testset_paths [testset_paths ...]]\n\nHttpRunner.\n\npositional arguments:\n  testset_paths         testset file path\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -V, --version         show version\n  --log-level LOG_LEVEL\n                        Specify logging level, default is INFO.\n  --report-name REPORT_NAME\n                        Specify report name, default is generated time.\n  --failfast            Stop the test run on the first error or failure.\n  --startproject STARTPROJECT\n                        Specify new project name.\n```\n\n## Write testcases\n\nIt is recommended to write testcases in `YAML` format.\n\nAnd here is testset example of typical scenario: get `token` at the beginning, and each subsequent requests should take the `token` in the headers.\n\n```yaml\n- config:\n    name: \"create user testsets.\"\n    variables:\n        - user_agent: 'iOS/10.3'\n        - device_sn: ${gen_random_string(15)}\n        - os_platform: 'ios'\n        - app_version: '2.8.6'\n    request:\n        base_url: http://127.0.0.1:5000\n        headers:\n            Content-Type: application/json\n            device_sn: $device_sn\n\n- test:\n    name: get token\n    request:\n        url: /api/get-token\n        method: POST\n        headers:\n            user_agent: $user_agent\n            device_sn: $device_sn\n            os_platform: $os_platform\n            app_version: $app_version\n        json:\n            sign: ${get_sign($user_agent, $device_sn, $os_platform, $app_version)}\n    extract:\n        - token: content.token\n    validate:\n        - {\"check\": \"status_code\", \"comparator\": \"eq\", \"expected\": 200}\n        - {\"check\": \"content.token\", \"comparator\": \"len_eq\", \"expected\": 16}\n\n- test:\n    name: create user which does not exist\n    request:\n        url: /api/users/1000\n        method: POST\n        headers:\n            token: $token\n        json:\n            name: \"user1\"\n            password: \"123456\"\n    validate:\n        - {\"check\": \"status_code\", \"comparator\": \"eq\", \"expected\": 201}\n        - {\"check\": \"content.success\", \"comparator\": \"eq\", \"expected\": true}\n```\n\nFunction invoke is supported in `YAML/JSON` format testcases, such as `gen_random_string` and `get_sign` above. This mechanism relies on the `debugtak.py` hot plugin, with which we can define functions in `debugtak.py` file, and then functions can be auto discovered and invoked in runtime.\n\nFor detailed regulations of writing testcases, you can read the [`QuickStart`][quickstart] documents.\n\n## Run testcases\n\n`HttpRunner` can run testcases in diverse ways.\n\nYou can run single testset by specifying testset file path.\n\n```text\n$ httprunner filepath/testcase.yml\n```\n\nYou can also run several testsets by specifying multiple testset file paths.\n\n```text\n$ httprunner filepath1/testcase1.yml filepath2/testcase2.yml\n```\n\nIf you want to run testsets of a whole project, you can achieve this goal by specifying the project folder path.\n\n```text\n$ httprunner testcases_folder_path\n```\n\nWhen you do continuous integration test or production environment monitoring with `Jenkins`, you may need to send test result notification. For instance, you can send email with mailgun service as below.\n\n```text\n$ httprunner filepath/testcase.yml --report-name ${BUILD_NUMBER} \\\n    --mailgun-smtp-username \"qa@debugtalk.com\" \\\n    --mailgun-smtp-password \"12345678\" \\\n    --email-sender excited@samples.mailgun.org \\\n    --email-recepients ${MAIL_RECEPIENTS} \\\n    --jenkins-job-name ${JOB_NAME} \\\n    --jenkins-job-url ${JOB_URL} \\\n    --jenkins-build-number ${BUILD_NUMBER}\n```\n\n## Performance test\n\nWith reuse of [`Locust`][Locust], you can run performance test without extra work.\n\n```bash\n$ locusts -V\n[2017-08-26 23:45:42,246] bogon/INFO/stdout: Locust 0.8a2\n[2017-08-26 23:45:42,246] bogon/INFO/stdout:\n```\n\nFor full usage, you can run `locusts -h` to see help, and you will find that it is the same with `locust -h`.\n\nThe only difference is the `-f` argument. If you specify `-f` with a Python locustfile, it will be the same as `locust`, while if you specify `-f` with a `YAML/JSON` testcase file, it will convert to Python locustfile first and then pass to `locust`.\n\n```bash\n$ locusts -f examples/first-testcase.yml\n[2017-08-18 17:20:43,915] Leos-MacBook-Air.local/INFO/locust.main: Starting web monitor at *:8089\n[2017-08-18 17:20:43,918] Leos-MacBook-Air.local/INFO/locust.main: Starting Locust 0.8a2\n```\n\nIn this case, you can reuse all features of [`Locust`][Locust].\n\nThat\u2019s not all about it. With the argument `--full-speed`, you can even start locust with master and several slaves (default to cpu cores number) at one time, which means you can leverage all cpus of your machine.\n\n```bash\n$ locusts -f examples/first-testcase.yml --full-speed\n[2017-08-26 23:51:47,071] bogon/INFO/locust.main: Starting web monitor at *:8089\n[2017-08-26 23:51:47,075] bogon/INFO/locust.main: Starting Locust 0.8a2\n[2017-08-26 23:51:47,078] bogon/INFO/locust.main: Starting Locust 0.8a2\n[2017-08-26 23:51:47,080] bogon/INFO/locust.main: Starting Locust 0.8a2\n[2017-08-26 23:51:47,083] bogon/INFO/locust.main: Starting Locust 0.8a2\n[2017-08-26 23:51:47,084] bogon/INFO/locust.runners: Client 'bogon_656e0af8e968a8533d379dd252422ad3' reported as ready. Currently 1 clients ready to swarm.\n[2017-08-26 23:51:47,085] bogon/INFO/locust.runners: Client 'bogon_09f73850252ee4ec739ed77d3c4c6dba' reported as ready. Currently 2 clients ready to swarm.\n[2017-08-26 23:51:47,084] bogon/INFO/locust.main: Starting Locust 0.8a2\n[2017-08-26 23:51:47,085] bogon/INFO/locust.runners: Client 'bogon_869f7ed671b1a9952b56610f01e2006f' reported as ready. Currently 3 clients ready to swarm.\n[2017-08-26 23:51:47,085] bogon/INFO/locust.runners: Client 'bogon_80a804cda36b80fac17b57fd2d5e7cdb' reported as ready. Currently 4 clients ready to swarm.\n```\n\n![](docs/locusts-full-speed.jpg)\n\nEnjoy!\n\n## Supported Python Versions\n\nPython `2.7`, `3.4`, `3.5` and `3.6`.\n\n`HttpRunner` has been tested on `macOS`, `Linux` and `Windows` platforms.\n\n## Development\n\nTo develop or debug `HttpRunner`, you can install relevant requirements and use `main-ate.py` or `main-locust.py` as entrances.\n\n```bash\n$ pip install -r requirements.txt\n$ python main-ate -h\n$ python main-locust -h\n```\n\n## To learn more ...\n\n- [\u300a\u63a5\u53e3\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u6700\u4f73\u5de5\u7a0b\u5b9e\u8df5\uff08ApiTestEngine\uff09\u300b](http://debugtalk.com/post/ApiTestEngine-api-test-best-practice/)\n- [`ApiTestEngine QuickStart`][quickstart]\n- [\u300aApiTestEngine \u6f14\u8fdb\u4e4b\u8def\uff080\uff09\u5f00\u53d1\u672a\u52a8\uff0c\u6d4b\u8bd5\u5148\u884c\u300b](http://debugtalk.com/post/ApiTestEngine-0-setup-CI-test/)\n- [\u300aApiTestEngine \u6f14\u8fdb\u4e4b\u8def\uff081\uff09\u642d\u5efa\u57fa\u7840\u6846\u67b6\u300b](http://debugtalk.com/post/ApiTestEngine-1-setup-basic-framework/)\n- [\u300aApiTestEngine \u6f14\u8fdb\u4e4b\u8def\uff082\uff09\u63a2\u7d22\u4f18\u96c5\u7684\u6d4b\u8bd5\u7528\u4f8b\u63cf\u8ff0\u65b9\u5f0f\u300b](http://debugtalk.com/post/ApiTestEngine-2-best-testcase-description/)\n- [\u300aApiTestEngine \u6f14\u8fdb\u4e4b\u8def\uff083\uff09\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b9e\u73b0 Python \u51fd\u6570\u7684\u5b9a\u4e49\u300b](http://debugtalk.com/post/ApiTestEngine-3-define-functions-in-yaml-testcases/)\n- [\u300aApiTestEngine \u6f14\u8fdb\u4e4b\u8def\uff084\uff09\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b9e\u73b0 Python \u51fd\u6570\u7684\u8c03\u7528\u300b](http://debugtalk.com/post/ApiTestEngine-4-call-functions-in-yaml-testcases/)\n- [\u300aApiTestEngine \u96c6\u6210 Locust \u5b9e\u73b0\u66f4\u597d\u7684\u6027\u80fd\u6d4b\u8bd5\u4f53\u9a8c\u300b](http://debugtalk.com/post/apitestengine-supersede-locust/)\n- [\u300a\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\uff1aApiTestEngine\u5b9e\u73b0\u70ed\u52a0\u8f7d\u673a\u5236\u300b](http://debugtalk.com/post/apitestengine-hot-plugin/)\n\n[requests]: http://docs.python-requests.org/en/master/\n[unittest]: https://docs.python.org/3/library/unittest.html\n[Locust]: http://locust.io/\n[flask]: http://flask.pocoo.org/\n[PyUnitReport]: https://github.com/debugtalk/PyUnitReport\n[Jenkins]: https://jenkins.io/index.html\n[quickstart]: docs/quickstart.md",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/debugtalk/HttpRunner",
    "keywords": "api test",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "HttpRunner",
    "platform": "",
    "project_url": "https://pypi.org/project/HttpRunner/",
    "release_url": "https://pypi.org/project/HttpRunner/0.8.1b0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "HTTP test runner, not just about api test and load test.",
    "version": "0.8.1b0"
  },
  "releases": {
    "0.8.1a0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "941de6321042b5a0795e50ad53f7fd76",
          "sha256": "52037408597f83c713aa50879a766c4dd95cb07c4290b3ad0d29a935004712e7"
        },
        "downloads": -1,
        "filename": "HttpRunner-0.8.1a0-py3.6.egg",
        "has_sig": false,
        "md5_digest": "941de6321042b5a0795e50ad53f7fd76",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "size": 105901,
        "upload_time": "2017-11-07T02:57:15",
        "url": "https://files.pythonhosted.org/packages/42/d0/54eac5f41f95782655eef8447cf44d0cdaea4adc7749b18fe83059b9c1bd/HttpRunner-0.8.1a0-py3.6.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3aed4ee438e68c61365b4b4c60fc19f1",
          "sha256": "5247071bc3b47634b25204cfd7657256e57f9a4493f3c7ea3d81a320d8415904"
        },
        "downloads": -1,
        "filename": "HttpRunner-0.8.1a0.tar.gz",
        "has_sig": false,
        "md5_digest": "3aed4ee438e68c61365b4b4c60fc19f1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 35253,
        "upload_time": "2017-11-07T02:57:10",
        "url": "https://files.pythonhosted.org/packages/4a/84/4ed2c308488631a0db17f8ba7670a9fc6802efede6273306409c6201cc65/HttpRunner-0.8.1a0.tar.gz"
      }
    ],
    "0.8.1b0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d385a5e5cf8c944f73abf42a994da6b7",
          "sha256": "730e86034dd74c5bc6d13d17f5f54ce4cdaca2d5f963c02c047e2ca523cf1111"
        },
        "downloads": -1,
        "filename": "HttpRunner-0.8.1b0-py3.6.egg",
        "has_sig": false,
        "md5_digest": "d385a5e5cf8c944f73abf42a994da6b7",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "size": 105914,
        "upload_time": "2017-11-07T03:49:53",
        "url": "https://files.pythonhosted.org/packages/72/fc/d52846e00258f5d31b7b85b6f23205097e05e646bc87c3148b01cc981bf4/HttpRunner-0.8.1b0-py3.6.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "87323826e235070bf9ea86d71e8fd559",
          "sha256": "f012c67b0fc2bff725a574e6d1ddcdbb14f1142faf6c9cc019cf3b1f7808d3db"
        },
        "downloads": -1,
        "filename": "HttpRunner-0.8.1b0.tar.gz",
        "has_sig": false,
        "md5_digest": "87323826e235070bf9ea86d71e8fd559",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 35261,
        "upload_time": "2017-11-07T03:49:50",
        "url": "https://files.pythonhosted.org/packages/9e/e4/f63f985fdc6abc772e55590d6d1b3600fa8ee20e4caa164a29db69805131/HttpRunner-0.8.1b0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d385a5e5cf8c944f73abf42a994da6b7",
        "sha256": "730e86034dd74c5bc6d13d17f5f54ce4cdaca2d5f963c02c047e2ca523cf1111"
      },
      "downloads": -1,
      "filename": "HttpRunner-0.8.1b0-py3.6.egg",
      "has_sig": false,
      "md5_digest": "d385a5e5cf8c944f73abf42a994da6b7",
      "packagetype": "bdist_egg",
      "python_version": "3.6",
      "size": 105914,
      "upload_time": "2017-11-07T03:49:53",
      "url": "https://files.pythonhosted.org/packages/72/fc/d52846e00258f5d31b7b85b6f23205097e05e646bc87c3148b01cc981bf4/HttpRunner-0.8.1b0-py3.6.egg"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "87323826e235070bf9ea86d71e8fd559",
        "sha256": "f012c67b0fc2bff725a574e6d1ddcdbb14f1142faf6c9cc019cf3b1f7808d3db"
      },
      "downloads": -1,
      "filename": "HttpRunner-0.8.1b0.tar.gz",
      "has_sig": false,
      "md5_digest": "87323826e235070bf9ea86d71e8fd559",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 35261,
      "upload_time": "2017-11-07T03:49:50",
      "url": "https://files.pythonhosted.org/packages/9e/e4/f63f985fdc6abc772e55590d6d1b3600fa8ee20e4caa164a29db69805131/HttpRunner-0.8.1b0.tar.gz"
    }
  ]
}