{
  "info": {
    "author": "Atrox",
    "author_email": "mail@atrox.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Sweetify - SweetAlert for Django\n================================\n\n|Build Status| |Latest Version| |Coverage Status|\n\nThis gem allows you to use\n`SweetAlert <http://t4t5.github.io/sweetalert/>`__ or\n`SweetAlert2 <https://github.com/limonte/sweetalert2>`__ for your\ntemporary messages. *See the examples below, to see how to use this\nlibrary*\n\nInstallation\n------------\n\n**Note: This package does not provide the client-side files of\nSweetAlert. You have to provide them yourself.**\n\nAdd this line to your application's Gemfile:\n\n.. code:: bash\n\n    pip install --upgrade sweetify\n\nThen you have to add ``sweetify`` to your django apps:\n\n.. code:: python\n\n    INSTALLED_APPS = [\n        ...\n        'sweetify'\n    ]\n\nNext add the following lines to the bottom of your layout/base template:\n\n.. code:: html\n\n    ...\n\n    {% load sweetify %}\n    {% sweetify %}\n\n    </body>\n    </html>\n\nUsage\n-----\n\nYou can now easily create alerts in your views with any of the following\nmethods provided by **Sweetify**:\n\n.. code:: python\n\n    import sweetify\n\n    # Base method with no type specified\n    sweetify.sweetalert(self.request, 'Westworld is awesome', text='Really... if you have the chance - watch it!' persistent='I agree!')\n\n    # Additional methods with the type already defined\n    sweetify.info(self.request, 'Message sent', button='Ok', timer=3000)\n    sweetify.success(self.request, 'You successfully changed your password')\n    sweetify.error(self.request, 'Some error happened here - reload the site' persistent=':(')\n    sweetify.warning(self.request, 'This is a warning... I guess')\n\nExample Usage\n-------------\n\n.. code:: python\n\n    import sweetify\n\n    def test_view(request):\n        sweetify.success(request, 'You did it', text='Good job! You successfully showed a SweetAlert message', persistent='Hell yeah')\n        return redirect('/')\n\nReplacement for SuccessMessageMixin\n-----------------------------------\n\nSweetify includes a drop-in replacement for ``SuccessMessageMixin``.\nJust replace the Django mixin with Sweetify's ``SweetifySuccessMixin``\nand you are good to go.\n\n.. code:: python\n\n    from sweetify.views import SweetifySuccessMixin\n\n    class TestUpdateView(SweetifySuccessMixin, UpdateView):\n        model = TestModel\n        fields = ['text']\n        success_message = 'TestModel successfully updated!'\n\nOptions\n-------\n\n**By default, all alerts will dismiss after a sensible default number of\nseconds.**\n\nDefault options set by **Sweetify**:\n\n.. code:: python\n\n    sweetify.DEFAULT_OPTS = {\n        'showConfirmButton': False,\n        'timer': 2500,\n        'allowOutsideClick': True,\n        'confirmButtonText': 'OK',\n    }\n\nThe following special options provided by **Sweetify** are available:\n\n.. code:: python\n\n    # Shows the alert with a button, but will still close automatically\n    sweetify.sweetalert(self.request, 'Title', button=True)\n    sweetify.sweetalert(self.request, 'Title', button='Awesome!') # Custom text for the button\n\n    # Shows the alert with a button and only closes if the button is pressed\n    sweetify.sweetalert(self.request, 'Title', persistent=True)\n    sweetify.sweetalert(self.request, 'Title', persistent='Awesome!') # Custom text for the button\n\nYou also can use any other available option that `SweetAlert\naccepts <http://t4t5.github.io/sweetalert/>`__:\n\n.. code:: python\n\n    sweetify.info(self.request, 'Sweet!', text='Here is a custom image', imageUrl='images/thumbs-up.jpg', timer=5000)\n\nContributing\n------------\n\nEveryone is encouraged to help improve this project. Here are a few ways\nyou can help:\n\n-  `Report bugs <https://github.com/atrox/sweetify-django/issues>`__\n-  Fix bugs and `submit pull\n   requests <https://github.com/atrox/sweetify-django/pulls>`__\n-  Write, clarify, or fix documentation\n-  Suggest or add new features\n\n.. |Build Status| image:: https://img.shields.io/travis/Atrox/sweetify-django.svg?style=flat-square\n   :target: https://travis-ci.org/Atrox/sweetify-django\n.. |Latest Version| image:: https://img.shields.io/pypi/v/sweetify.svg?style=flat-square\n   :target: https://pypi.python.org/pypi/sweetify\n.. |Coverage Status| image:: https://img.shields.io/coveralls/Atrox/sweetify-django.svg?style=flat-square\n   :target: https://coveralls.io/r/Atrox/sweetify-django\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/atrox/sweetify-django",
    "keywords": "sweetalert,django,messages",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sweetify",
    "platform": "any",
    "project_url": "https://pypi.org/project/sweetify/",
    "release_url": "https://pypi.org/project/sweetify/1.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "SweetAlert integration for Django",
    "version": "1.0.1"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7aa6a347f39243ca291506dbc77e3120",
          "sha256": "90dc047e85ea5ec0c031e80492343afd1fd0317ff45e7bc13d725768553bf2f0"
        },
        "downloads": 0,
        "filename": "sweetify-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7aa6a347f39243ca291506dbc77e3120",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9285,
        "upload_time": "2017-09-06T18:50:22",
        "url": "https://files.pythonhosted.org/packages/a1/db/d2875ead7e3d28054ca64e6d79bebb585779dbcaec0df9a4e6b5a995a1c9/sweetify-1.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "21cf3a1f0a771f15dbfec466f5694c83",
          "sha256": "0dfb471bdee8237ebfd80220c396039ff3af4bcb55c49b11c5178dabaabe1fa7"
        },
        "downloads": 0,
        "filename": "sweetify-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "21cf3a1f0a771f15dbfec466f5694c83",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6773,
        "upload_time": "2017-09-06T18:50:24",
        "url": "https://files.pythonhosted.org/packages/5f/4e/dd2fe5b6d742e05dbb88fd6688e91c9743ce751d080e1a7ce7f7f6042fc1/sweetify-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ad1bc600f07fcf4b1ec063c8dcb82d3c",
          "sha256": "2aa758b04558d406da751988a2578de58a30b2b6e82c5bd97d64b1ebc3a2cd15"
        },
        "downloads": 0,
        "filename": "sweetify-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad1bc600f07fcf4b1ec063c8dcb82d3c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9330,
        "upload_time": "2017-09-06T18:57:50",
        "url": "https://files.pythonhosted.org/packages/dc/d9/24d73e79a84d3a9f536f2e4cd81fa89b7ec23047f4c11a7c8cf2b34c2a91/sweetify-1.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2e3fb576dec5839798ad6c0e76aa2cb2",
          "sha256": "16e8ba92bed0dc5ff6c06d36ee4bca21115291edf1ddb5f5fc16b63985ae322a"
        },
        "downloads": 0,
        "filename": "sweetify-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2e3fb576dec5839798ad6c0e76aa2cb2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7532,
        "upload_time": "2017-09-06T18:57:52",
        "url": "https://files.pythonhosted.org/packages/f5/68/85551330b5cfc6d1c7a7f666a3ee978a84c458146268f37ef11d2bab1824/sweetify-1.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ad1bc600f07fcf4b1ec063c8dcb82d3c",
        "sha256": "2aa758b04558d406da751988a2578de58a30b2b6e82c5bd97d64b1ebc3a2cd15"
      },
      "downloads": 0,
      "filename": "sweetify-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ad1bc600f07fcf4b1ec063c8dcb82d3c",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 9330,
      "upload_time": "2017-09-06T18:57:50",
      "url": "https://files.pythonhosted.org/packages/dc/d9/24d73e79a84d3a9f536f2e4cd81fa89b7ec23047f4c11a7c8cf2b34c2a91/sweetify-1.0.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "2e3fb576dec5839798ad6c0e76aa2cb2",
        "sha256": "16e8ba92bed0dc5ff6c06d36ee4bca21115291edf1ddb5f5fc16b63985ae322a"
      },
      "downloads": 0,
      "filename": "sweetify-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2e3fb576dec5839798ad6c0e76aa2cb2",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7532,
      "upload_time": "2017-09-06T18:57:52",
      "url": "https://files.pythonhosted.org/packages/f5/68/85551330b5cfc6d1c7a7f666a3ee978a84c458146268f37ef11d2bab1824/sweetify-1.0.1.tar.gz"
    }
  ]
}