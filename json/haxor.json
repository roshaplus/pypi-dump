{
  "info": {
    "author": "Avinash Sajjanshetty",
    "author_email": "a@sajjanshetty.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "haxor\n=====\n\n|travis| |coverall| |version| |supported| |license|\n\nUnofficial Python wrapper for official Hacker News API.\n\nInstallation\n============\n\n.. code:: python\n\n    pip install haxor\n\nUsage\n=====\n\nimport and initialization:\n\n.. code:: python\n\n    from hackernews import HackerNews\n    hn = HackerNews()\n\nGet certain user info by user id (i.e. username on Hacker News)\n\n.. code:: python\n\n    user = hn.get_user('pg')\n    # >>> user.user_id\n    # pg\n    # >>> user.karma\n    # 155040\n\nStories, comments, jobs, Ask HNs and even polls are just items and they\nhave unique item id. To get info of an item by item id:\n\n.. code:: python\n\n    item = hn.get_item(8863)\n    # >>> item.title\n    # \"My YC app: Dropbox - Throw away your USB drive\"\n    # >>> item.type\n    # story\n    # >>> item.kids\n    # [ 8952, 9224, 8917, ...]\n\nTo get item ids of current top stories:\n\n.. code:: python\n\n    top_story_ids = hn.top_stories()\n    # >>> top_story_ids\n    # [8432709, 8432616, 8433237, ...]\n\nTo get current largest item id:\n\n.. code:: python\n\n    max_item = hn.get_max_item()\n    # >>> max_item\n    # 8433746\n\nExamples\n========\n\nGet top 10 stories:\n\n.. code:: python\n\n    for story_id in hn.top_stories(limit=10):\n        print hn.get_item(story_id)\n\n    # <hackernews.Item: 8432709 - Redis cluster, no longer vaporware>\n    # <hackernews.Item: 8432423 - Fluid Actuators from Disney Research Make Soft, Safe Robot Arms>\n    # <hackernews.Item: 8433237 - Is Capturing Carbon from the Air Practical?>\n    # ...\n    # ...\n\nFind all the 'jobs' post from Top Stories:\n\n.. code:: python\n\n    for story_id in hn.top_stories():\n        story = hn.get_item(story_id)\n        if story.item_type == 'job':\n            print story\n\n    # <hackernews.Item: 8437631 - Lever (YC S12) hiring JavaScript experts, realtime systems engineers, to scale DerbyJS>\n    # <hackernews.Item: 8437036 - Product Designer (employee #1) to Organize the World's Code \u2013 Blockspring (YC S14)>\n    # <hackernews.Item: 8436584 - Django and iOS Hackers Needed \u2013 fix healthcare with Drchrono>\n    # ...\n    # ...\n\nFind Python jobs from monthly who is hiring thread:\n\n.. code:: python\n\n    # Who is hiring\n    # https://news.ycombinator.com/item?id=8394339\n\n    who_is_hiring = hn.get_item(8394339)\n\n    for comment_id in who_is_hiring.kids:\n        comment = hn.get_item(comment_id)\n        if 'python' in comment.text.lower():\n            print comment.item_id\n\n    # 8395568\n    # 8394964\n    # ...\n    # ...\n\nAPI Reference\n=============\n\nClass: ``HackerNews``\n=====================\n\n**Parameters:**\n\n+---------------+----------+------------+-------------------------------------+-----------+\n| Name          | Type     | Required   | Description                         | Default   |\n+===============+==========+============+=====================================+===========+\n| ``version``   | string   | No         | specifies Hacker News API version   | ``v0``    |\n+---------------+----------+------------+-------------------------------------+-----------+\n\n``get_item``\n------------\n\nDescription: Returns ``Item`` object\n\n**Parameters:**\n\n+---------------+--------------+------------+----------------------------------------------------+-----------+\n| Name          | Type         | Required   | Description                                        | Default   |\n+===============+==============+============+====================================================+===========+\n| ``item_id``   | string/int   | Yes        | unique item id of Hacker News story, comment etc   | None      |\n+---------------+--------------+------------+----------------------------------------------------+-----------+\n\n``get_user``\n------------\n\nDescription: Returns ``User`` object\n\n**Parameters:**\n\n+---------------+----------+------------+----------------------------------------+-----------+\n| Name          | Type     | Required   | Description                            | Default   |\n+===============+==========+============+========================================+===========+\n| ``user_id``   | string   | Yes        | unique user id of a Hacker News user   | None      |\n+---------------+----------+------------+----------------------------------------+-----------+\n\n``top_stories``\n---------------\n\nDescription: Returns list of item ids of current top stories\n\n**Parameters:**\n\n+-------------+--------+------------+--------------------------------------------------+-----------+\n| Name        | Type   | Required   | Description                                      | Default   |\n+=============+========+============+==================================================+===========+\n| ``limit``   | int    | No         | specifies the number of stories to be returned   | None      |\n+-------------+--------+------------+--------------------------------------------------+-----------+\n\n``new_stories``\n---------------\n\nDescription: Returns list of item ids of current new stories\n\n**Parameters:**\n\n+-------------+--------+------------+--------------------------------------------------+-----------+\n| Name        | Type   | Required   | Description                                      | Default   |\n+=============+========+============+==================================================+===========+\n| ``limit``   | int    | No         | specifies the number of stories to be returned   | None      |\n+-------------+--------+------------+--------------------------------------------------+-----------+\n\n``ask_stories``\n---------------\n\nDescription: Returns list of item ids of latest Ask HN stories\n\n**Parameters:**\n\n+-------------+--------+------------+--------------------------------------------------+-----------+\n| Name        | Type   | Required   | Description                                      | Default   |\n+=============+========+============+==================================================+===========+\n| ``limit``   | int    | No         | specifies the number of stories to be returned   | None      |\n+-------------+--------+------------+--------------------------------------------------+-----------+\n\n``show_stories``\n----------------\n\nDescription: Returns list of item ids of latest Show HN stories\n\n**Parameters:**\n\n+-------------+--------+------------+--------------------------------------------------+-----------+\n| Name        | Type   | Required   | Description                                      | Default   |\n+=============+========+============+==================================================+===========+\n| ``limit``   | int    | No         | specifies the number of stories to be returned   | None      |\n+-------------+--------+------------+--------------------------------------------------+-----------+\n\n``job_stories``\n---------------\n\nDescription: Returns list of item ids of latest Job stories\n\n**Parameters:**\n\n+-------------+--------+------------+--------------------------------------------------+-----------+\n| Name        | Type   | Required   | Description                                      | Default   |\n+=============+========+============+==================================================+===========+\n| ``limit``   | int    | No         | specifies the number of stories to be returned   | None      |\n+-------------+--------+------------+--------------------------------------------------+-----------+\n\n``updates``\n-----------\n\nDescription: Returns list of item ids and user ids that have been\nchanged/updated recently.\n\n``get_max_item``\n----------------\n\nDescription: Returns current largest item id\n\nClass: ``Item``\n===============\n\nFrom `Official HackerNews\nItem <https://github.com/HackerNews/API/blob/master/README.md#items>`__:\n\n+-------------+--------------------------------------------------------------+\n| Property    | Description                                                  |\n+=============+==============================================================+\n| item\\_id    | The item\u2019s unique id.                                        |\n+-------------+--------------------------------------------------------------+\n| deleted     | ``true`` if the item is deleted.                             |\n+-------------+--------------------------------------------------------------+\n| item\\_type  | The type of item. One of \u201cjob\u201d, \u201cstory\u201d, \u201ccomment\u201d, \u201cpoll\u201d,  |\n|             | or \u201cpollopt\u201d.                                                |\n+-------------+--------------------------------------------------------------+\n| by          | The username of the item\u2019s author.                           |\n+-------------+--------------------------------------------------------------+\n| submission\\ | Creation date of the item, in Python ``datetime``.           |\n| _time       |                                                              |\n+-------------+--------------------------------------------------------------+\n| text        | The comment, Ask HN, or poll text. HTML.                     |\n+-------------+--------------------------------------------------------------+\n| dead        | ``true`` if the item is dead.                                |\n+-------------+--------------------------------------------------------------+\n| parent      | The item\u2019s parent. For comments, either another comment or   |\n|             | the relevant story. For pollopts, the relevant poll.         |\n+-------------+--------------------------------------------------------------+\n| kids        | The ids of the item\u2019s comments, in ranked display order.     |\n+-------------+--------------------------------------------------------------+\n| url         | The URL of the story.                                        |\n+-------------+--------------------------------------------------------------+\n| score       | The story\u2019s score, or the votes for a pollopt.               |\n+-------------+--------------------------------------------------------------+\n| title       | The title of the story or poll.                              |\n+-------------+--------------------------------------------------------------+\n| parts       | A list of related pollopts, in display order.                |\n+-------------+--------------------------------------------------------------+\n| raw         | original JSON response.                                      |\n+-------------+--------------------------------------------------------------+\n| descendants | In the case of stories or polls, the total comment count.    |\n+-------------+--------------------------------------------------------------+\n\nClass: ``User``\n===============\n\nFrom `Official HackerNews\nUser <https://github.com/HackerNews/API/blob/master/README.md#users>`__:\n\n+------------+----------------------------------------------------------------+\n| Property   | Description                                                    |\n+============+================================================================+\n| user\\_id   | The user\u2019s unique username. Case-sensitive.                    |\n+------------+----------------------------------------------------------------+\n| delay      | Delay in minutes between a comment\u2019s creation and its          |\n|            | visibility to other users.                                     |\n+------------+----------------------------------------------------------------+\n| created    | Creation date of the user, in Python ``datetime``.             |\n+------------+----------------------------------------------------------------+\n| karma      | The user\u2019s karma.                                              |\n+------------+----------------------------------------------------------------+\n| about      | The user\u2019s optional self-description. HTML.                    |\n+------------+----------------------------------------------------------------+\n| submitted  | List of the user\u2019s stories, polls and comments.                |\n+------------+----------------------------------------------------------------+\n| raw        | original JSON response.                                        |\n+------------+----------------------------------------------------------------+\n\nDevelopment\n===========\n\nFor local development do ``pip`` installation of\n``requirements-dev.txt``:\n\n::\n\n    pip install -r requirements-dev.txt\n\nLICENSE\n=======\n\nThe mighty MIT license. Please check ``LICENSE`` for more details.\n\n.. |travis| image:: https://img.shields.io/travis/avinassh/haxor.svg\n   :target: http://travis-ci.org/avinassh/haxor\n.. |coverall| image:: https://img.shields.io/coveralls/avinassh/haxor.svg\n   :target: https://coveralls.io/r/avinassh/haxor?branch=master\n.. |version| image:: https://img.shields.io/pypi/v/haxor.svg\n   :target: https://pypi.python.org/pypi/haxor/\n.. |supported| image:: https://img.shields.io/pypi/pyversions/haxor.svg\n   :target: https://pypi.python.org/pypi/haxor/\n.. |license| image:: https://img.shields.io/pypi/l/haxor.svg\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/avinassh/haxor/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "haxor",
    "platform": "",
    "project_url": "https://pypi.org/project/haxor/",
    "release_url": "https://pypi.org/project/haxor/0.4/",
    "requires_python": "",
    "summary": "Unofficial Python wrapper for Hacker News API",
    "version": "0.4"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "788cb72bccf19931403eb5eecab95562",
          "sha256": "3257e5d4d8d537599aea13187429d350decb81be97d3fd47d93e5e06263becea"
        },
        "downloads": 1405,
        "filename": "haxor-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "788cb72bccf19931403eb5eecab95562",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6650,
        "upload_time": "2014-10-09T17:59:44",
        "url": "https://files.pythonhosted.org/packages/45/5c/0a3723545c7212c666ae958d293ea86e31a0acf99420b6edcd1975c82686/haxor-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a9f4d81d37b973e6379b89f4cfc66ad8",
          "sha256": "577688adfd3a8ea9d861f73f2a7d9b69a1f663022b4ea2d464e5c70764dc7a5f"
        },
        "downloads": 1366,
        "filename": "haxor-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a9f4d81d37b973e6379b89f4cfc66ad8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6700,
        "upload_time": "2014-10-10T11:25:13",
        "url": "https://files.pythonhosted.org/packages/66/78/95dac1598a22a89f2705f7c63bd234884e382edd8c3ff8a4f2ed7220a936/haxor-0.1.1.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3c5c76520b011a850539f2e7988b6aff",
          "sha256": "97b48007bdb2f015dc26ec3f401ffa5d11d9b3e90ceb23bb6c7aacb01f3292b9"
        },
        "downloads": 1349,
        "filename": "haxor-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3c5c76520b011a850539f2e7988b6aff",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6770,
        "upload_time": "2014-10-10T14:15:56",
        "url": "https://files.pythonhosted.org/packages/53/4c/143a8358a6b2b35b0c06db3476b2e6bc7b9b2743f3130ad71ff5ab9cc721/haxor-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c3705f37b6b6f142ca84e42a0d45ed6f",
          "sha256": "475a6dc6cddc5a9d9f9773df980d6bc328e271d249427e37f38e8d36710d8e0f"
        },
        "downloads": 1330,
        "filename": "haxor-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c3705f37b6b6f142ca84e42a0d45ed6f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7158,
        "upload_time": "2014-10-10T15:31:59",
        "url": "https://files.pythonhosted.org/packages/63/9a/a362136f025f81f4288c26c452b6d4e704d2aed8dccae9bd23a74732de33/haxor-0.2.1.tar.gz"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "15b5ae35e21e40e73a8cff2cdf2b6d9f",
          "sha256": "09aa09ae3eb8c219ae76c0db74f07f88b69bbd812e4f2e45ad0ce8acbec46608"
        },
        "downloads": 1490,
        "filename": "haxor-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "15b5ae35e21e40e73a8cff2cdf2b6d9f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7320,
        "upload_time": "2014-10-10T16:49:29",
        "url": "https://files.pythonhosted.org/packages/f6/09/a687150ad595629c9738e9d177a34cd331046d480b8f99c7475254f72052/haxor-0.2.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b80ab2b2419b86c85b6bb25c8065a001",
          "sha256": "fb1d8268b74b821cac1b58f8de9cd7bc511a67d79e44995018b4a5d2dcaa0267"
        },
        "downloads": 2177,
        "filename": "haxor-0.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "b80ab2b2419b86c85b6bb25c8065a001",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 13841,
        "upload_time": "2015-07-02T17:41:12",
        "url": "https://files.pythonhosted.org/packages/8d/0a/30a5301fc3329da78a936679fe3d0d7dfcbaeda3c07daae8cfadabb81a14/haxor-0.3-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0952583fa4249736bc92ffd32b0421d4",
          "sha256": "386b831ef0252ba2bc6708e71d35e8254659f2b74725bb43c279d975840d13e3"
        },
        "downloads": 908,
        "filename": "haxor-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0952583fa4249736bc92ffd32b0421d4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7222,
        "upload_time": "2015-07-02T17:41:05",
        "url": "https://files.pythonhosted.org/packages/12/7f/ca8cdb9d87b2ddabeb4ff523bbef1f838fa0e6556c9e4fe8ebbf4cee8676/haxor-0.3.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "64604f97483850c9e01a116f6ce33fbc",
          "sha256": "d174c05fb9056f761f9b34c3f33a7d1e2197b2bff7e6ad7c90e147a2fdee61ea"
        },
        "downloads": 768,
        "filename": "haxor-0.3.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "64604f97483850c9e01a116f6ce33fbc",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 25461,
        "upload_time": "2015-11-24T11:40:50",
        "url": "https://files.pythonhosted.org/packages/11/5a/a751fcb8bc7be037a79538986411bb1e2e60433b3e465f581d244984b00f/haxor-0.3.1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "291b679fc95d14d75cfd08f0818c024d",
          "sha256": "86eb3ec5006c0a665e5557013eed742e65c3219ffd82cc7cee76aed8dcddf485"
        },
        "downloads": 595,
        "filename": "haxor-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "291b679fc95d14d75cfd08f0818c024d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7625,
        "upload_time": "2015-11-24T11:40:43",
        "url": "https://files.pythonhosted.org/packages/61/68/f89bd89e69bc02daddc84bc04709cafc788d2bd8510a9c23d771e37f211e/haxor-0.3.1.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9d89222da39f1039763534fb70674b1c",
          "sha256": "dc0ab600f5026065b119d809d9bdcab8f0ee0b48401d445d26af76906b2ef205"
        },
        "downloads": 0,
        "filename": "haxor-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9d89222da39f1039763534fb70674b1c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8276,
        "upload_time": "2017-04-21T16:31:27",
        "url": "https://files.pythonhosted.org/packages/78/83/701b7cd22763f3517fd4b231861edf3263e5ed6d2c3901dda239a69e987b/haxor-0.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9d89222da39f1039763534fb70674b1c",
        "sha256": "dc0ab600f5026065b119d809d9bdcab8f0ee0b48401d445d26af76906b2ef205"
      },
      "downloads": 0,
      "filename": "haxor-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "9d89222da39f1039763534fb70674b1c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8276,
      "upload_time": "2017-04-21T16:31:27",
      "url": "https://files.pythonhosted.org/packages/78/83/701b7cd22763f3517fd4b231861edf3263e5ed6d2c3901dda239a69e987b/haxor-0.4.tar.gz"
    }
  ]
}