{
  "info": {
    "author": "Adam Jorgensen",
    "author_email": "adam.jorgensen.za@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Framework :: AsyncIO",
      "Framework :: Twisted",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: Jython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Utilities"
    ],
    "description": "OpenDNA Autobahn-Python Runners\n===============================\n\nThe OpenDNA Autobahn-Python Runners package provides a number of scripts that\ncan be used to launch Autobahn-Python components and connect them to a WAMP\nrouter.\n\n\nContents\n--------\n\n1. Installation\n2. Usage\n3. Command-line Parameters\n4. Twisted Runner\n4. AsyncIO Runner\n5. AsyncIO Multi-Runner\n6. Roadmap\n\n\nInstallation\n------------\n`pip install autobahn-python-runners`\n\nWhen the package is installed it will create the following scripts in your\nPython environment's scripts path:\n\n- `run_twisted_component`\n- `run_asyncio_component`\n- `run_asyncio_components`\n\nOptionally, you `pip install uvloop` for enhanced event-loop perforance with\nthe AsyncIO runners. You will need `libuv` with installed in order to do this.\n\nUsage\n-----\nUsage can be achieved through one of two methods:\n\n0. Execute one of the scripts created during installation\n1. Execute one of the modules using the standard `python -m` method\n\n\nCommand-line Parameters\n-----------------------\nThe following command-line parameters are supported by all of the runners\nincluded in this package:\n\nRequired parameters:\n\n- `-c` or `--component` is a fully-qualified path to an Autobahn-Python\n  component class E.g. `some_org.some_package.some_module.SomeClass`. Can be\n  alternatively specified using the `WAMP_COMPONENT` enviornment variable\n- `-u` or `--url` is a URL for the WAMP router to connect to\n  E.g. `ws://localhost:8080`. Can be alternatively specified using the\n  `WAMP_URL` environment variable\n- `-r` or `--realm` is a Realm on the WAMP router you are connecting to. E.g.\n  `my.realm.name`. Can be alternatively specified using the `WAMP_REALM`\n  environment variable\n\nOptional parameters:\n\n- `-e` or `--extra-file` is a path to a JSON file which will be loaded and\n  supplied to the component class instance via the config parameter of the\n  class constructor method\n- `-s` or `--use-ssl` is value that will be cast to a boolean and used to\n  specify whether or not SSL should be used for the WS connection. This\n  parameter is usually unnecessary as the decision to use SSL is usually\n  determined by the choice of WS protocol for the WAMP router URL. It is made\n  available here simply for the purposes of completeness\n- `-l` or `--loglevel` is used to specify the logging level used by the runner.\n  Defaults to `info` with other permitted values being `critical`, `error`,\n  `warning` and `debug`\n- `--serializers` is a fully qualified path to an Autobahn-Python serializer\n  class. This parameter may be specified multiple times\n\n\nTwisted Runner\n--------------\nThe Twisted runner is provided by the `opendna.autobahn.runners.run_twisted`\nmodule and can be used to run components that derive from the\n`autobahn.twisted.ApplicationSession` class.\n\n\nAsyncIO Runner\n--------------\nThe AsyncIO runner is provided by the `opendna.autobahn.runners.run_asyncio`\nmodule and can be used to run components that derive from the\n`autobahn.asyncio.ApplicationSession` class.\n\n\nAsyncIO Multi-Runner\n--------------------\nThe AsyncIO multi-runner is provided by the `opendna.autobahn.runners.multirun_asyncio`\nmodule and can be used to run multiple components that derive from the\n`autobahn.asyncio.ApplicationSession` class within a single Python process.\n\nThese components will run within a single event-loop but each component will\nestablish a separate WS connection to the WAMP router.\n\nThe AsyncIO multi-runner makes the following changes to the parameter options:\n\n- `-c`/`--component` may be passed multiple times in order to specify\n  multiple component classes. Each class instance will connect to the same\n  WAMP router and realm specified using the relevant parameters\n- `-e`/`--extra-file` can still be used but behaves slightly differently in\n  that it expects that the JSON file will contain a plain object where each\n  key is a component class as specified using the `-c`/`--component` parameter\n  and the value associated with each key is a plain object of data to be supplied\n  to the relevant component class instance via the config parameter of the\n  class constructor method\n\n\nRoadmap\n-------\n\nDone:\n\n- Twisted runner\n- AsyncIO runner\n- AsyncIO multi-runner\n- Basic documentation\n- uvloop support for AsyncIO runners\n\nTodo:\n\n- Tests\n\nMaybe:\n\n- Twisted multi-runner\n- Option for multi-runners to transparently restart crashed components",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/opn-oss/autobahn-python-runners",
    "keywords": "autobahn crossbar twisted asyncio",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "autobahn-python-runners",
    "platform": "",
    "project_url": "https://pypi.org/project/autobahn-python-runners/",
    "release_url": "https://pypi.org/project/autobahn-python-runners/17.7.11/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A collection of component runners for Autobahn Python",
    "version": "17.7.11"
  },
  "releases": {
    "17.7.11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2d887a171202b0bc018d4bb466f238ff",
          "sha256": "0e95f7a59595c2f6b629b68be65ac745b029b0ea6c59b3fc02714816d1cab31f"
        },
        "downloads": 0,
        "filename": "autobahn-python-runners-17.7.11.tar.gz",
        "has_sig": false,
        "md5_digest": "2d887a171202b0bc018d4bb466f238ff",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6644,
        "upload_time": "2017-07-11T13:55:45",
        "url": "https://files.pythonhosted.org/packages/ec/ca/bbac1822f08ef404350d89fa71d1812f96a566ddf58349e02c9329d57f92/autobahn-python-runners-17.7.11.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2d887a171202b0bc018d4bb466f238ff",
        "sha256": "0e95f7a59595c2f6b629b68be65ac745b029b0ea6c59b3fc02714816d1cab31f"
      },
      "downloads": 0,
      "filename": "autobahn-python-runners-17.7.11.tar.gz",
      "has_sig": false,
      "md5_digest": "2d887a171202b0bc018d4bb466f238ff",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6644,
      "upload_time": "2017-07-11T13:55:45",
      "url": "https://files.pythonhosted.org/packages/ec/ca/bbac1822f08ef404350d89fa71d1812f96a566ddf58349e02c9329d57f92/autobahn-python-runners-17.7.11.tar.gz"
    }
  ]
}