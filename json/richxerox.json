{
  "info": {
    "author": "Jonathan Eunice",
    "author_email": "jonathan.eunice@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: MacOS X :: Cocoa",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Processing :: Markup",
      "Topic :: Text Processing :: Markup :: HTML"
    ],
    "description": "Rich text cut/copy/paste for Mac OS X.\n\nUsage\n=====\n\n::\n\n    from richxerox import *\n\n    print available() # what kind of data is on the clipboard?\n\n    print paste()     # get data in the default format ('text')\n    print paste(format='text')  # get text (Unicode)\n    print paste(format='rtf')   # get RTF\n    print paste(format='html')  # get HTML\n\n    print \"ALL CONTENTS:\\n\", pasteall()\n\n    clear()\n    print \"ALL CONTENTS AFTER CLEAR:\\n\", pasteall()\n\n    r = \"{\\\\rtf1\\\\ansi\\\\ansicpg1252\\\\cocoartf1187\\\\cocoasubrtf390\\n\" \\\n        \"{\\\\fonttbl\\\\f0\\\\froman\\\\fcharset0 Times-Roman;}\\n{\\\\colortbl;\" \\\n        \"\\\\red255\\\\green255\\\\blue255;}\\n\\\\deftab720\\n\\\\pard\\\\pardeftab720\" \\\n        \"\\n\\n\\\\f0\\\\fs24 \\\\cf0 This is \\n\\\\b good\\n\\\\b0 !}\"\n    h = \"this is <strong>good</strong>!\"\n    copy(text=\"this is good!\", html=h, rtf=r)\n\n    print \"ALL CONTENTS AFTER COPY:\\n\", pasteall()\n\nThe API is modeled on that of `xerox <http://pypi.python.org/pypi/xerox>`_,\nwith simple ``copy()`` and ``paste()`` operations.\n\nThink of ``paste()`` as pasting *into* your program and ``copy()`` as copying\n*from* your program.\n\nThe main difference in the API is that, given the different formats used in rich\ntext, one must specify the format provided or needed if it is not plain text.\nThis is done through keyword-style arguments.\n\nAlternative API\n===============\n\nIf you prefer an object-oriented API::\n\n    from richxerox import *\n\n    print pasteboard.get_contents(format='html')    # paste\n    pasteboard.clear()                              # clear\n    pasteboard.set_contents(text=\"this is good!\",   # copy\n                            html=h, rtf=r)\n\n    print pasteboard.get_all_contents()       # pasteall\n\nBackground\n==========\n\nI searched long and hard but couldn't find a simple Python module that made\n``copy`` and ``paste`` operations on Mac OS X easy and straightforward. `xerox\n<http://pypi.python.org/pypi/xerox>`_ works well, but it only supports plain\ntext. What about browsers and word processors that export rich text with\nhyperlinks, styles, and so on? How can you access *that* data?\n\nAfter banging my head against this a few times, I eventually found code samples\nI could adapt and make work without understanding the entirety of Apple's\n``Foundation`` and ``AppKit``. This module is the result.\n\nDescent Into RTF\n================\n\nEven in this HTML-everywhere age, Apple and Mac OS X apps are unfortunately `RTF\n<http://en.wikipedia.org/wiki/Rich_Text_Format>`_-centric. I say unfortunately\nbecause:\n\n  * In my experience, RTF is often not robustly passed between applications.\n    Different apps interpret or render the same RTF differently, so font\n    sizes and other characteristics change.\n\n  * RTF is *extremely* verbose. Microsoft Word, for instance, emits 29,807\n    characters as the copy/cut representation of \"This is **good**!\"\n    Microsoft is known for verbose exports, and RTF itself attempts to\n    represent whole documents rather than individual snippets. Still, that's\n    roughly 1,000x (a.k.a. three decimal orders of magnitude) as verbose as HTML.\n    Try copying existing text in some\n    application, then running ``pasteall()`` to get your own taste of this\n    madness.\n\n  * If you put multiple forms of text on the clipboard, you don't have much if\n    any control which one an application will use when you ask it to \"paste\"\n    data. If you want a single format, better to just put that one format on the\n    clipboard.\n\nWhile Mac apps occasionally put HTML contents on the pasteboard, RTF seems\nto be the most common *lingua franca*. I've not found any particularly good,\nrobust, or up-to-date Python tools for parsing and transforming RTF. The handy\n`textutil\n<http://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man1/textutil.1.html>`_\ntool will, however, convert an RTF file into quite clean HTML, like so::\n\n    textutil -convert html temp.rtf\n\nyielding ``temp.html``. This can be parsed and manipulated with `lxml\n<http://pypi.python.org/pypi/lxml>`_ or your favorite HTML/XML library.\n\nNotes\n=====\n\n  * Version 1.0.0 updates the testing matrix. Latest versions of 2.7, 3.3,\n    3.4, 3.5, the new 3.6 (alpha 2) are confirmed working. Old,\n    pre-[SemVer](http://semver.org/) versions have been removed from PyPI;\n    they were causing some install problems. Python 3.2 has been withdrawn\n    from support as both ancient and no longer being properly supported in\n    my local test rig.)\n\n  * As of version 0.6, much more robust handling of Unicode characters.\n    Better auto-install, including installing foundation ``pyobjc``\n    module if necessary. (`pyobjc` auto-install only works reliably\n    on Python 2.7 and above,\n    so official support for Python 2.6 has been withdrawn.)\n\n  * If the underlying `pyobjc` library needs to be installed, the process\n    will take a *long* time. For example, 4 hours 7 minutes. Don'ty just get\n    coffee while it's installing. Take lunch. A long, languorous lunch. And\n    then maybe have a nap.\n\n  * Version 0.5 had a mistake in Unicode handling. Even though it passed all\n    tests, it over-quoted Unicode coming from real apps. Fixed.\n\n  * Code inspired by and/or based on Genba's `Reading URLs from OS X clipboard with PyObjC <http://genbastechthoughts.wordpress.com/2012/05/20/reading-urls-from-os-x-clipboard-with-pyobjc/>`_\n    and Carl M. Johnson's `copy_paste.py <http://blog.carlsensei.com/post/88897796>`_\n\n  * See also `NSPasteboard docs <http://developer.apple.com/library/mac/#documentation/Cocoa/Reference/ApplicationKit/Classes/NSPasteboard_Class/Reference/Reference.html>`_,\n    `a discussion on UTIs <http://sigpipe.macromates.com/2009/03/09/uti-problems/>`_, and\n    John Siracusa's `discussion of the evolution of Mac OS types <http://www.scribd.com/doc/6915424/Mac-OS-X-104-Tiger#page=52>`_\n\n *  The author, `Jonathan Eunice <mailto:jonathan.eunice@gmail.com>`_ or\n    `@jeunice on Twitter <http://twitter.com/jeunice>`_\n    welcomes your comments and suggestions.\n\nInstallation\n============\n\nTo install the latest version::\n\n    pip install -U richxerox\n\nTo ``easy_install`` under a specific Python version (3.3 in this example)::\n\n    python3.3 -m easy_install --upgrade richxerox\n\n(You may need to prefix these with \"sudo \" to authorize installation.)",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://bitbucket.org/jeunice/richxerox",
    "keywords": "Mac OS X copy paste clipboard pasteboard rich text RTF HTML",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "richxerox",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/richxerox/",
    "release_url": "https://pypi.org/project/richxerox/1.0.0/",
    "requires_python": null,
    "summary": "copy/paste for Mac OS X for rich text (HTML/RTF) rather than plain text",
    "version": "1.0.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "062cae7ddcc252684ce07539fbb4b8e3",
          "sha256": "9a2dded71b1d38b67ca1620cf72ce23e59bfcf4fd0ad560dc9c4d63c30dcd30e"
        },
        "downloads": 612,
        "filename": "richxerox-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "062cae7ddcc252684ce07539fbb4b8e3",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 10389,
        "upload_time": "2016-06-24T15:22:38",
        "url": "https://files.pythonhosted.org/packages/9c/04/78f1a78474df9e4c8cd04c433760ed581cebf26b981c9c73b02f742acd25/richxerox-1.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7a4801f62bc4a841aeb3de02e5f15dd7",
          "sha256": "2e855f7d7db3cefd25eb3d1189d30f15c4cb88c062ffbaadad7d463171059269"
        },
        "downloads": 218,
        "filename": "richxerox-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7a4801f62bc4a841aeb3de02e5f15dd7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7451,
        "upload_time": "2016-06-24T15:22:25",
        "url": "https://files.pythonhosted.org/packages/1f/10/6f969fd984861ed1e8638dd44c3b42c79c410ca0d5561721e9a7aa1d4a6d/richxerox-1.0.0.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "47fc51af29e45d9ee87327c2eada83b9",
          "sha256": "f0355ea3b4291559d20da988d4364a2e84b9290c72c3de2b4d9c0447dbd292d1"
        },
        "downloads": 212,
        "filename": "richxerox-1.0.0.zip",
        "has_sig": false,
        "md5_digest": "47fc51af29e45d9ee87327c2eada83b9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15259,
        "upload_time": "2016-06-24T15:21:58",
        "url": "https://files.pythonhosted.org/packages/ec/d4/20449d588aea2c89cfebf937a5afbef95eb65ff91afe612c07b66ab4db9e/richxerox-1.0.0.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "062cae7ddcc252684ce07539fbb4b8e3",
        "sha256": "9a2dded71b1d38b67ca1620cf72ce23e59bfcf4fd0ad560dc9c4d63c30dcd30e"
      },
      "downloads": 612,
      "filename": "richxerox-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "062cae7ddcc252684ce07539fbb4b8e3",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "size": 10389,
      "upload_time": "2016-06-24T15:22:38",
      "url": "https://files.pythonhosted.org/packages/9c/04/78f1a78474df9e4c8cd04c433760ed581cebf26b981c9c73b02f742acd25/richxerox-1.0.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "7a4801f62bc4a841aeb3de02e5f15dd7",
        "sha256": "2e855f7d7db3cefd25eb3d1189d30f15c4cb88c062ffbaadad7d463171059269"
      },
      "downloads": 218,
      "filename": "richxerox-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7a4801f62bc4a841aeb3de02e5f15dd7",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7451,
      "upload_time": "2016-06-24T15:22:25",
      "url": "https://files.pythonhosted.org/packages/1f/10/6f969fd984861ed1e8638dd44c3b42c79c410ca0d5561721e9a7aa1d4a6d/richxerox-1.0.0.tar.gz"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "47fc51af29e45d9ee87327c2eada83b9",
        "sha256": "f0355ea3b4291559d20da988d4364a2e84b9290c72c3de2b4d9c0447dbd292d1"
      },
      "downloads": 212,
      "filename": "richxerox-1.0.0.zip",
      "has_sig": false,
      "md5_digest": "47fc51af29e45d9ee87327c2eada83b9",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15259,
      "upload_time": "2016-06-24T15:21:58",
      "url": "https://files.pythonhosted.org/packages/ec/d4/20449d588aea2c89cfebf937a5afbef95eb65ff91afe612c07b66ab4db9e/richxerox-1.0.0.zip"
    }
  ]
}