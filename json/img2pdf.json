{
  "info": {
    "author": "Johannes 'josch' Schauer",
    "author_email": "josch@mister-muffin.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Other Audience",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "img2pdf\n=======\n\nLosslessly convert raster images to PDF. The file size will not unnecessarily\nincrease. It can for example be used to create a PDF document from a number of\nscans that are only available in JPEG format. Existing solutions would either\nre-encode the input JPEG files (leading to quality loss) or store them in the\nzip/flate format which results into the PDF becoming unnecessarily large in\nterms of its file size.\n\nBackground\n----------\n\nQuality loss can be avoided when converting JPEG and JPEG2000 images to PDF by\nembedding them into the PDF without re-encoding them. This is what img2pdf\ndoes. It thus treats the PDF format merely as a container format for storing\none or more JPEGs without re-encoding the JPEG images themselves.\n\nIf you know an existing tool which allows one to embed JPEG and JPEG2000 images\ninto a PDF container without recompression, please contact me so that I can put\nthis code into the garbage bin.\n\nFunctionality\n-------------\n\nThis program will take a list of raster images and produce a PDF file with the\nimages embedded in it.  JPEG and JPEG2000 images will be included without\nrecompression and the resulting PDF will only be slightly larger than the input\nimages due to the overhead of the PDF container.  Raster images in other\nformats (like png, gif or tif) will be included using the lossless zip/flate\nencoding which usually leads to a significant increase in the PDF size if the\ninput was for example a png image. This is unfortunately unavoidable because\nthere is no other way to store arbitrary RGB bitmaps in PDF in a lossless way\nother than zip/flate encoding. And zip/flate compresses bitmaps worse than png\nis able to compress them.\n\nAs a result, this tool is able to losslessly wrap raster images into a PDF\ncontainer with a quality to filesize ratio that is typically better (in case of\nJPEG and JPEG2000 images) or equal (in case of other formats) than that of\nexisting tools.\n\nFor example, imagemagick will re-encode the input JPEG image (thus changing\nits content):\n\n\t$ convert img.jpg img.pdf\n\t$ pdfimages img.pdf img.extr # not using -j to be extra sure there is no recompression\n\t$ compare -metric AE img.jpg img.extr-000.ppm null:\n\t1.6301e+06\n\nIf one wants to losslessly convert from any format to PDF with\nimagemagick, one has to use zip compression:\n\n\t$ convert input.jpg -compress Zip output.pdf\n\t$ pdfimages img.pdf img.extr # not using -j to be extra sure there is no recompression\n\t$ compare -metric AE img.jpg img.extr-000.ppm null:\n\t0\n\nHowever, this approach will result in PDF files that are a few times larger\nthan the input JPEG or JPEG2000 file.\n\nimg2pdf is able to losslessly embed JPEG and JPEG2000 files into a PDF\ncontainer without additional overhead (aside from the PDF structure itself),\nsave other graphics formats using lossless zip compression, and produce\nmulti-page PDF files when more than one input image is given.\n\nAlso, since JPEG and JPEG2000 images are not reencoded, conversion with img2pdf\nis several times faster than with other tools.\n\nUsage\n-----\n\nThe images must be provided as files because img2pdf needs to seek in the file\ndescriptor.\n\nIf no output file is specified with the `-o`/`--output` option, output will be\ndone to stdout. A typical invocation is:\n\n\timg2pdf img1.png img2.jpg -o out.pdf\n\nThe detailed documentation can be accessed by running:\n\n\timg2pdf --help\n\n\nBugs\n----\n\nIf you find a JPEG or JPEG2000 file that, when embedded cannot be read\nby the Adobe Acrobat Reader, please contact me.\n\nFor lossless conversion of formats other than JPEG or JPEG2000, zip/flate\nencoding is used.  This choice is based on tests I did with a number of images.\nI converted them into PDF using the lossless variants of the compression\nformats offered by imagemagick.  In all my tests, zip/flate encoding performed\nbest.  You can verify my findings using the test_comp.sh script with any input\nimage given as a commandline argument.  If you find an input file that is\noutperformed by another lossless compression method, contact me.\n\nI have not yet figured out how to determine the colorspace of JPEG2000 files.\nTherefore JPEG2000 files use DeviceRGB by default. For JPEG2000 files with\nother colorspaces, you must explicitly specify it using the `--colorspace`\noption.\n\nIt might be possible to store transparency using masks but it is not clear\nwhat the utility of such a functionality would be.\n\nMost vector graphic formats can be losslessly turned into PDF (minus some of\nthe features unsupported by PDF) but img2pdf will currently turn vector\ngraphics into their lossy raster representations. For converting raster\ngraphics to PDF, use another tool like inkscape and then join the resulting\npages with a tool like pdftk.\n\nA configuration file could be used for default options.\n\nInstallation\n------------\n\nOn a Debian- and Ubuntu-based systems, dependencies may be installed\nwith the following command:\n\n\tapt-get install python3 python3-pil python3-setuptools\n\nYou can then install the package using:\n\n\t$ pip3 install img2pdf\n\nIf you prefer to install from source code use:\n\n\t$ cd img2pdf/\n\t$ pip3 install .\n\nTo test the console script without installing the package on your system,\nuse virtualenv:\n\n\t$ cd img2pdf/\n\t$ virtualenv ve\n\t$ ve/bin/pip3 install .\n\nYou can then test the converter using:\n\n\t$ ve/bin/img2pdf -o test.pdf src/tests/test.jpg\n\nThe package can also be used as a library:\n\n\timport img2pdf\n\n\t# opening from filename\n\twith open(\"name.pdf\",\"wb\") as f:\n\t\tf.write(img2pdf.convert('test.jpg'))\n\n\t# opening from file handle\n\twith open(\"name.pdf\",\"wb\") as f1, open(\"test.jpg\") as f2:\n\t\tf1.write(img2pdf.convert(f2))\n\n\t# using in-memory image data\n\twith open(\"name.pdf\",\"wb\") as f:\n\t\tf.write(img2pdf.convert(\"\\x89PNG...\")\n\n\t# multiple inputs (variant 1)\n\twith open(\"name.pdf\",\"wb\") as f:\n\t\tf.write(img2pdf.convert(\"test1.jpg\", \"test2.png\"))\n\n\t# multiple inputs (variant 2)\n\twith open(\"name.pdf\",\"wb\") as f:\n\t\tf.write(img2pdf.convert([\"test1.jpg\", \"test2.png\"]))\n\n\t# writing to file descriptor\n\twith open(\"name.pdf\",\"wb\") as f1, open(\"test.jpg\") as f2:\n\t\timg2pdf.convert(f2, outputstream=f1)\n\n\t# specify paper size (A4)\n\ta4inpt = (img2pdf.mm_to_pt(210),img2pdf.mm_to_pt(297))\n\tlayout_fun = img2pdf.get_layout_fun(a4inpt)\n\twith open(\"name.pdf\",\"wb\") as f:\n\t\tf.write(img2pdf.convert('test.jpg', layout_fun=layout_fun))\n",
    "docs_url": null,
    "download_url": "https://gitlab.mister-muffin.de/josch/img2pdf/repository/archive.tar.gz?ref=0.2.4",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://gitlab.mister-muffin.de/josch/img2pdf",
    "keywords": "jpeg pdf converter",
    "license": "LGPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "img2pdf",
    "platform": "",
    "project_url": "https://pypi.org/project/img2pdf/",
    "release_url": "https://pypi.org/project/img2pdf/0.2.4/",
    "requires_python": "",
    "summary": "Convert images to PDF via direct JPEG inclusion.",
    "version": "0.2.4"
  },
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a18b5ec226617bbc8c98cbc7582f831b",
          "sha256": "82c2f409cd8a259eb1ce874124210fe2c2744ac51ba25184f1a07973ae275556"
        },
        "downloads": 1788,
        "filename": "img2pdf-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a18b5ec226617bbc8c98cbc7582f831b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14832,
        "upload_time": "2014-09-07T06:01:29",
        "url": "https://files.pythonhosted.org/packages/aa/3d/aff1adc653c7ba73e229cb16cc3f6a2be8a2a2af6331af991f7e6df8df18/img2pdf-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8987d8743c0b1851b87d8808bfe87272",
          "sha256": "cecf84aaeee8f138baaa017a49c48832c1358a333189b7491d8ccbcb76ab7351"
        },
        "downloads": 2673,
        "filename": "img2pdf-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8987d8743c0b1851b87d8808bfe87272",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14937,
        "upload_time": "2014-11-10T09:17:27",
        "url": "https://files.pythonhosted.org/packages/94/73/1ca19d8112aa609c023af263263a991935f3b3d67642bdb9819ae4d3a432/img2pdf-0.1.3.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e71026eda0dc2972960c33740c56728a",
          "sha256": "ff9d7e681523f2e3d8230d0a9a824265879f62094d889c8bf38947922ea6f470"
        },
        "downloads": 1226,
        "filename": "img2pdf-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e71026eda0dc2972960c33740c56728a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15139,
        "upload_time": "2015-01-21T10:09:10",
        "url": "https://files.pythonhosted.org/packages/7c/23/82db54993425e388d849eb4ef11de970dcb1a7281691bb155e21f17c44df/img2pdf-0.1.4.tar.gz"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8fff0636a17d5eb68ab38f73515f2f24",
          "sha256": "20b0bea4e54a8337e2ca032015a145501c56be89078c63e29f115d90b2efba54"
        },
        "downloads": 5975,
        "filename": "img2pdf-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8fff0636a17d5eb68ab38f73515f2f24",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23644,
        "upload_time": "2015-02-16T18:40:49",
        "url": "https://files.pythonhosted.org/packages/fc/b8/7f3f336f1b1f86e02ae1a4cbfff267bf0d567b6b040c43f8587e43aa1d8d/img2pdf-0.1.5.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e42e785c161605bccd78d29097537671",
          "sha256": "ee66783fa97440f587aef662119b1014b704feff8c783e9e29412998c42ef70c"
        },
        "downloads": 655,
        "filename": "img2pdf-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e42e785c161605bccd78d29097537671",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 44648,
        "upload_time": "2016-02-02T18:52:37",
        "url": "https://files.pythonhosted.org/packages/ec/e3/ed6dbcb6edb941709efad5b54a57c15107b1484fb4a55725afaf86f776e8/img2pdf-0.2.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "19c187ba34a8762be8b044612d4cd19d",
          "sha256": "11bf6ae5cce133249cb8fe0638fd1a7dbf22c5291a2a136ea715fb2fe4cf10f0"
        },
        "downloads": 1364,
        "filename": "img2pdf-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "19c187ba34a8762be8b044612d4cd19d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 46219,
        "upload_time": "2016-07-12T04:29:14",
        "url": "https://files.pythonhosted.org/packages/8b/fa/a69becbc9b2f1c5eff52ae1dc4d7394de239729be252e8ff6a50a21c0a4d/img2pdf-0.2.1.tar.gz"
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f5d75e04d61c3bbc68e193c9138fd3d3",
          "sha256": "156d9abae0429e30d68c8c8978fbcc23d5a841c6aa8bb914755c5b366f95dc46"
        },
        "downloads": 116,
        "filename": "img2pdf-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f5d75e04d61c3bbc68e193c9138fd3d3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 48174,
        "upload_time": "2017-01-20T04:47:25",
        "url": "https://files.pythonhosted.org/packages/b6/bc/e72a813265a5e7b7319c74130888c60bed441b4a13c2b8f76a33c19541bb/img2pdf-0.2.3.tar.gz"
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bc8fca44a80af45e90f72d6b9003f5e1",
          "sha256": "140b70fa3a3bfb54e92947818cee01483a4f1492b5d1d02b0f649257f5ffc9ae"
        },
        "downloads": 0,
        "filename": "img2pdf-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "bc8fca44a80af45e90f72d6b9003f5e1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 54426,
        "upload_time": "2017-05-23T15:56:32",
        "url": "https://files.pythonhosted.org/packages/7e/a2/4f06081f674920be757d894b4bab874e6a3b5227e730cb7618430b366e69/img2pdf-0.2.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "bc8fca44a80af45e90f72d6b9003f5e1",
        "sha256": "140b70fa3a3bfb54e92947818cee01483a4f1492b5d1d02b0f649257f5ffc9ae"
      },
      "downloads": 0,
      "filename": "img2pdf-0.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "bc8fca44a80af45e90f72d6b9003f5e1",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 54426,
      "upload_time": "2017-05-23T15:56:32",
      "url": "https://files.pythonhosted.org/packages/7e/a2/4f06081f674920be757d894b4bab874e6a3b5227e730cb7618430b366e69/img2pdf-0.2.4.tar.gz"
    }
  ]
}