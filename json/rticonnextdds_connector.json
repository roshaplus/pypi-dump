{
  "info": {
    "author": "Gianpiero Napoli",
    "author_email": "gianpiero@rti.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: Other/Proprietary License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "rticonnextdds-connector\n=======================\n\nRTI Connector for Connext DDS\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nRTI Connector for Connext DDS is a quick and easy way to access the\npower and functionality of `RTI Connext\nDDS <http://www.rti.com/products/index.html>`__. It is based on `XML App\nCreation <https://community.rti.com/rti-doc/510/ndds.5.1.0/doc/pdf/RTI_CoreLibrariesAndUtilities_XML_AppCreation_GettingStarted.pdf>`__\nand Dynamic Data.\n\nRTI Connector was created by the RTI Research Group to quickly and\neasily develop demos and proof of concept. We think that it can be\nuseful for anybody that needs a quick way to script tests and interact\nwith DDS using different scripting languages.\n\nIt can be used to quickly create tests for your distributed system and,\nthanks to the binding with scripting languages and the use of XML, to\neasily integrate with tons of other available technologies.\n\nThe RTI Connector library is provided in binary form for selected\narchitectures. Scripting language bindings and examples are provided in\nsource format.\n\nLanguage Support\n~~~~~~~~~~~~~~~~\n\n-  **nodejs/javascript**: we use\n   `libffi <https://github.com/node-ffi/node-ffi>`__ to call our\n   library, but we try to hide that from you using a nice JavaScript\n   wrapper.\n-  **python**: here we use\n   `ctypes <https://docs.python.org/2/library/ctypes.html>`__ to call\n   our native functions; of course everything is hidden in a nice Python\n   wrapper.\n-  **lua**: we have been supporting Lua in our `RTI\n   Prototyper <https://community.rti.com/downloads/experimental/rti-prototyper-with-lua>`__\n   for a while now. Check more information on our\n   `blog <http://blogs.rti.com/tag/lua/>`__ or on the `Getting Started\n   Guide <https://community.rti.com/rti-doc/510/ndds.5.1.0/doc/pdf/RTI_CoreLibrariesAndUtilities_Prototyper_GettingStarted.pdf>`__.\n   Also, stay tuned: a version that can be used directly with the\n   standard Lua interprerter is coming...\n-  **C**: for the native code lovers, we have header files so you can\n   call the RTI Connector API directly in your C app; that's how the RTI\n   Prototyper is implemented. Just not ready to release yet...\n\nPlatform support\n~~~~~~~~~~~~~~~~\n\nWe are building our library for few architectures only. Check them out\n`here <https://github.com/rticommunity/rticonnextdds-connector/tree/master/lib>`__.\nIf you need another architecture.\n\n**Windows Note**: For nodejs, we tested on Win10 64 bit. We notice that\nnpm works best with VS Express 2013 Feel free to ask on the `RTI\nCommunity\nForum <https://community.rti.com/forums/technical-questions>`__ for more\ndetails.\n\nIf you want to check the version of the libraries you can run the\nfollowing command:\n\n.. code:: bash\n\n    strings librtiddsconnector.dylib | grep BUILD\n\nThreading model\n~~~~~~~~~~~~~~~\n\nThe RTI Connext DDS Connector Native API do not yet implement any\nmechanism for thread safety. Originally the Connector native code was\nbuilt to work with RTI DDS Prototyper and Lua. That was a single\nthreaded loop. We then introduced support for javascript and python. For\nnow the responsibility of protecting calls to the Connector are left to\nthe user. This may change in the future. In node/javascript this should\nnot be a problem due to the 'callback' style of the language itself. In\npython you will have to protect the calls to the connector if you are\nusing different threads. For an example, check the python section\n`Protecting calls to the connector\nlibrary <https://github.com/rticommunity/rticonnextdds-connector/tree/master/examples/python#protecting-calls-to-the-connector-library>`__.\n\nWhat is this git repository\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt is our way to make the connector technology available to you! As of\ntoday we included Node.js, Python and Lua (through RTI Prototyper) for\nfew architectures.\n\nAlso, for Node.js users, we will use this repo for the npm registry.\n\nSupport\n~~~~~~~\n\nThis is an experimental RTI product. As such we do offer support through\nthe `RTI Community\nForum <https://community.rti.com/forums/technical-questions>`__ where\nfellow users and RTI engineers can help you. We'd love your feedback.\n\nDocumentation\n~~~~~~~~~~~~~\n\nWe do not have much documentation yet. But we promise you: if you look\nat the examples you'll see that is very easy to use our connector.\n\nFor an overview of the API in JavaScript check this\n`page <examples/nodejs/README.md>`__. For the Python version visit this\n`one <examples/python/README.md>`__.\n\nWe have documentation on how to access the data sample fields in Section\n6.4 'Data Access API' of the `RTI Prototyper Getting Started\nGuide <https://community.rti.com/rti-doc/510/ndds.5.1.0/doc/pdf/RTI_CoreLibrariesAndUtilities_Prototyper_GettingStarted.pdf>`__\n\nGetting started with nodejs\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBe sure you have all the tools to work with nodejs. Then invoke:\n\n.. code:: bash\n\n    $ npm install rticonnextdds-connector\n\nWhen that is done, cd into your node\\_modules directory and have a look\nto the `examples/nodejs/README.md <examples/nodejs/README.md>`__ ###\nGetting started with python Be sure you have python (<3). Then clone\nthis repo:\n\n.. code:: bash\n\n    $ git clone https://github.com/rticommunity/rticonnextdds-connector.git\n\nYou can also download the `zip\nfile <https://github.com/rticommunity/rticonnextdds-connector/archive/master.zip>`__\nand then unzip it.\n\nWhen that is done, cd into your new directory and have a look to the\n`examples/python/README.md <examples/python/README.md>`__\n\nLicense\n~~~~~~~\n\nWith the sole exception of the contents of the \"examples\" subdirectory,\nall use of this product is subject to the RTI Software License Agreement\nincluded at the top level of this repository. Files within the\n\"examples\" subdirectory are licensed as marked within the file.\n\nThis software is an experimental (aka \"pre-production\") product. The\nSoftware is provided \"as is\", with no warranty of any type, including\nany warranty for fitness for any purpose. RTI is under no obligation to\nmaintain or support the Software. RTI shall not be liable for any\nincidental or consequential damages arising out of the use or inability\nto use the software.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/rticommunity/rticonnextdds-connector",
    "keywords": "rti dds connext connector pub sub pub-sub",
    "license": "RTI",
    "maintainer": null,
    "maintainer_email": null,
    "name": "rticonnextdds_connector",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/rticonnextdds_connector/",
    "release_url": "https://pypi.org/project/rticonnextdds_connector/0.3.0/",
    "requires_dist": [],
    "requires_python": null,
    "summary": "RTI Connector for Connext DDS",
    "version": "0.3.0"
  },
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4234d9a961f5076d232b10e963770136",
          "sha256": "aff2dc29a8fef7cca811bbc292af9a131d8c7b4319deb05d9477c1f58f2f9573"
        },
        "downloads": 0,
        "filename": "rticonnextdds_connector-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4234d9a961f5076d232b10e963770136",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 58750009,
        "upload_time": "2017-05-31T17:40:24",
        "url": "https://files.pythonhosted.org/packages/b6/58/c082a3f124289913a3b8e1b0b7c4f7f5b0f741f1e9dd9de42609bde0264e/rticonnextdds_connector-0.2.1.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8129a229a0e6141beef77b365ce1b2d2",
          "sha256": "80b6b46e1b4c7510dee6d063d6b80d8ea16cb3744d2df24a8fbdc616951681e0"
        },
        "downloads": 0,
        "filename": "rticonnextdds_connector-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8129a229a0e6141beef77b365ce1b2d2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 56077383,
        "upload_time": "2017-06-28T21:34:17",
        "url": "https://files.pythonhosted.org/packages/ec/60/276d3a5c8a272bccf46ade7fb92f96623257d8a67005ec207b98f5e9c20d/rticonnextdds_connector-0.3.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "8129a229a0e6141beef77b365ce1b2d2",
        "sha256": "80b6b46e1b4c7510dee6d063d6b80d8ea16cb3744d2df24a8fbdc616951681e0"
      },
      "downloads": 0,
      "filename": "rticonnextdds_connector-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8129a229a0e6141beef77b365ce1b2d2",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 56077383,
      "upload_time": "2017-06-28T21:34:17",
      "url": "https://files.pythonhosted.org/packages/ec/60/276d3a5c8a272bccf46ade7fb92f96623257d8a67005ec207b98f5e9c20d/rticonnextdds_connector-0.3.0.tar.gz"
    }
  ]
}