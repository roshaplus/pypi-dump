{
  "info": {
    "author": "Sixty North AS",
    "author_email": "austin@sixty-north.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Testing"
    ],
    "description": "[![Build Status](https://travis-ci.org/sixty-north/cosmic-ray.png?branch=master)](https://travis-ci.org/sixty-north/cosmic-ray) [![Code Health](https://landscape.io/github/sixty-north/cosmic-ray/master/landscape.svg?style=flat)](https://landscape.io/github/sixty-north/cosmic-ray/master)\n\n# Cosmic Ray: mutation testing for Python\n\n*\"Four human beings -- changed by space-born cosmic rays into something more than merely human.\"*  \n*\u2014 The Fantastic Four*\n\nCosmic Ray is a tool for performing mutation testing on Python\ncode.\n\n## N.B.! Cosmic Ray is still learning how to walk!\n\nAt this time Cosmic Ray is young and incomplete. It doesn't support\nall of the mutations it should, its output format is crude, it only\nsupports one kind of test discovery, it may fall over on exotic\nmodules...[the list goes on and on](https://github.com/abingham/cosmic-ray/issues). Still,\nfor the adventurous it *does* work. Hopefully things will improve\nfairly rapidly.\n\nAnd, of course, patches and ideas are welcome.\n\n## Quickstart\n\nIf you just want to get down to the business of finding and killing\nmutants, here's what you do:\n\n```\npython setup.py install\ncosmic-ray run my_module path/to/tests\n```\n\nThis will print out a bunch of information about what Cosmic Ray is\ndoing, including stuff about what kinds of mutants are being created,\nwhich were killed, and \u2013 chillingly \u2013 which survived.\n\n## Installing and running Cosmic Ray\n\nTo install Cosmic Ray, just use the supplied `setup.py`:\n```\npython setup.py install\n```\n\nThis will install the Cosmic Ray package and create an executable\ncalled `cosmic-ray`.\n\n(PyPI installation should be coming soon.)\n\nOnce installed, you can run `cosmic-ray` to get it a useful help\nmessage:\n```\ncosmic-ray -h\n```\n\nThe primary way of running `cosmic-ray` is by passing the `run`\ncommand-line argument. With this command you tell Cosmic Ray a) which\nmodule(s) you with to mutate and b) the location of the test\nsuite. For example, if you've a package named `allele` and if the\n`unittest` tests for the package are all under the directory\n`allele_tests`, you would run `cosmic-ray` like this:\n```\ncosmic-ray allele allele_tests\n```\n\nThere are a number of other options you can pass to the `run` command;\nsee the help message for more details.\n\n### Running with a config file\n\nFor many projects you'll probably be running the same `cosmic-ray`\ncommand over and over. Instead of having to remember and retype\npotentially complex commands each time, you can store `cosmic-ray`\ncommands in a config file. You can then execute these command by\npassing the `load` command to `cosmic-ray`.\n\nEach line in the config file is treated as a separate command-line\nargument to `cosmic-ray`. Empty lines in the file are skipped, and you\ncan have comments in config file that start with `#`.\n\nSo, for example, if you need to invoke this command for your project:\n```\ncosmic-ray run --verbose --timeout=30 --no-local-import allele allele/tests/unittests\n```\n\nyou could instead create a config file, `cr-allele.conf`, with these\ncontents:\n```\nrun\n--verbose\n--timeout=30\n--no-local-import\nallele\nallele/tests/unittests\n```\n\nThen to run the command in that config file:\n```\ncosmic-ray load cr-allele.conf\n```\n\n## Tests\n\nCosmic Ray has a number of test suites to help ensure that it works. The\nfirst suite is a standard `unittest` test suite that validates some if\nits internals. You can run that like this:\n\n```\npython -m unittest discover cosmic_ray/tests\n```\n\nThere is also a set of tests which verify the various mutation\noperators. These tests comprise a specially prepared body of code,\n`adam.py`, and a full-coverage test-suite. The idea here is that\nCosmic Ray should be 100% lethal against the mutants of `adam.py` or\nthere's a problem. Run these tests like this:\n\n```\ncd test_project\ncosmic-ray load cosmic-ray.conf\n```\n\n## Theory\n\nMutation testing is conceptually simple and elegant. You make certain\nkinds of controlled changes (mutations) to your code, and then you\nrun your test suite over this mutated code. If your test suite fails,\nthen we say that your tests \"killed\" (i.e. detected) the mutant. If\nthe changes cause your code to simply crash, then we say the mutant is\n\"incompetent\". If your test suite passes, however, we say that the\nmutant has \"survived\".\n\nNeedless to say, we want to\n[kill all of the mutants](http://www.troll.me/images/x-all-the-things/kill-all-the-mutants.jpg).\n\nThe goal of mutation testing is to verify that your test suite is\nactually testing all of the parts of your code that it needs to, and\nthat it is doing so in a meaningful way. If a mutant survives your\ntest suite, this is an indication that your test suite is not\nadequately checking the code that was changed. This means that either\na) you need more or better tests or b) you've got code which you don't\nneed.\n\nYou can read more about mutation testing at\n[the repository of all human knowledge](http://en.wikipedia.org/wiki/Mutation_testing). Lionel\nBrian has a\n[nice set of slides](http://www.uio.no/studier/emner/matnat/ifi/INF4290/v10/undervisningsmateriale/INF4290-Mutest.pdf)\nintroducing mutation testing as well.\n\n## Implementation\n\nCosmic Ray works by parsing the module under test (MUT) and its\nsubmodules into a abstract syntax trees using\n[the `ast` module](https://docs.python.org/3/library/ast.html). It\nthen uses\n[the `ast.NodeTransformer` class](https://docs.python.org/3/library/ast.html#ast.NodeTransformer)\nto make systematic mutations to the ASTs.\n\nFor each individual mutation, Cosmic Ray modifies the Python runtime\nenvironment to replace the MUT with the mutated version. It then uses\n[`unittest`'s \"discovery\" functionality](https://docs.python.org/3/library/unittest.html#test-discovery)\nto discover your tests and run them against the mutant code.\n\nIn effect, the mutation testing algorithm is something like this:\n\n```python\nfor mod in modules_under_test:\n    for op in mutation_operators:\n        for site in mutation_sites(op, mod):\n\t        mutant_ast = mutate_ast(op, mod, site)\n\t\t\treplace_module(mod.name, compile(mutant_ast)\n\n\t        try:\n\t\t\t    if discover_and_run_tests():\n\t\t\t\t    print('Oh no! The mutant survived!')\n\t\t\t\telse:\n\t\t\t\t    print('The mutant was killed.')\n\t        except Exception:\n\t\t\t    print('The mutant was incompetent.')\t\t\n```\n\t\t\t\t\nObviously this can result in a lot of tests, and it can take some time\nif your test suite is large and/or slow.\n\nCosmic Ray uses the\n[multiprocessing module](https://docs.python.org/3/library/multiprocessing.html)\nto run the tests in parallel and also to implement mutant\nsandboxing. This provides a nice speed-up in many cases, though if your\ntests are IO bound or use other common resources then this could\nactually slow things down.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/sixty-north/cosmic-ray",
    "keywords": "testing",
    "license": "MIT License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "cosmic_ray",
    "platform": "any",
    "project_url": "https://pypi.org/project/cosmic_ray/",
    "release_url": "https://pypi.org/project/cosmic_ray/0.1.2/",
    "requires_python": null,
    "summary": "Mutation testing",
    "version": "0.1.2"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "915dfd158fdc39f42edeec1506361629",
          "sha256": "ef2bbb35fc7ac8efbae07fc6b53975594b5dc0acba126fb7df4c87c291928ae4"
        },
        "downloads": 2399,
        "filename": "cosmic_ray-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "915dfd158fdc39f42edeec1506361629",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11413,
        "upload_time": "2015-04-24T09:57:33",
        "url": "https://files.pythonhosted.org/packages/4f/49/b92fc1fcd40d97cf4a45b685a01531e901371e70daa2fcaf3c9fee28cb9e/cosmic_ray-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4362c409069c00870c0f0369bd5b0b2e",
          "sha256": "53f617c3bd439cace6c4152322fba1f30e17705e3b12e588a924a3b4eda8c6fc"
        },
        "downloads": 1040,
        "filename": "cosmic_ray-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4362c409069c00870c0f0369bd5b0b2e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11406,
        "upload_time": "2015-04-24T09:59:09",
        "url": "https://files.pythonhosted.org/packages/7f/38/ad74a127be821da7158eceede2e7e2d73615ddcda6fc7f4347b08de20565/cosmic_ray-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "53307363e03a4b93569c0f388558ac68",
          "sha256": "7b1dc2e5169a1564792b80063a7229c8a1534727e87fc23cbfce29bb7c892fe1"
        },
        "downloads": 1269,
        "filename": "cosmic_ray-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "53307363e03a4b93569c0f388558ac68",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12028,
        "upload_time": "2015-04-24T10:10:46",
        "url": "https://files.pythonhosted.org/packages/e4/5d/6415080e6c525b9e4da5d213034166a9eb7c71a012596fa0006a07831dcd/cosmic_ray-0.1.2.tar.gz"
      }
    ],
    "1.0.0a0": [
      {
        "comment_text": "built for Darwin-15.4.0",
        "digests": {
          "md5": "b32682c185dfa96ab0bc8004be1d5ef7",
          "sha256": "75537a0039bb0fc5b80f74251cdd2caf39267ce30d5ececedd88b7800ad5d819"
        },
        "downloads": 135,
        "filename": "cosmic_ray-1.0.0a0.macosx-10.10-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "b32682c185dfa96ab0bc8004be1d5ef7",
        "packagetype": "bdist_dumb",
        "python_version": "any",
        "size": 43067,
        "upload_time": "2016-04-24T10:22:38",
        "url": "https://files.pythonhosted.org/packages/e3/d9/2fc7b24dfb9475bf3ee0011c51625cd77e24803ed896354d792bdc44d454/cosmic_ray-1.0.0a0.macosx-10.10-x86_64.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3f8d2ee646578b51567ce0d0a37a8191",
          "sha256": "3c1bac384473d916321eeebb973394fc95f5b7db94ac7044050f38e7a4a11c04"
        },
        "downloads": 138,
        "filename": "cosmic_ray-1.0.0a0.tar.gz",
        "has_sig": false,
        "md5_digest": "3f8d2ee646578b51567ce0d0a37a8191",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20155,
        "upload_time": "2016-04-24T10:23:29",
        "url": "https://files.pythonhosted.org/packages/a4/68/ad55f290efc5bce129ffa251a71011ba3e6e11a0311fcd6a02400f296823/cosmic_ray-1.0.0a0.tar.gz"
      }
    ],
    "1.0.0a1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "acbaa387a4925c3f442dff39828f0efe",
          "sha256": "08dbaacd7ce4b0877ffb205c1801aeda1e21879acfe5ffc2049762fb74076023"
        },
        "downloads": 371,
        "filename": "cosmic_ray-1.0.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "acbaa387a4925c3f442dff39828f0efe",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22114,
        "upload_time": "2016-08-06T14:50:29",
        "url": "https://files.pythonhosted.org/packages/36/dc/a7f6a5486f22279491dc4f5b886f7cb19b7f413d23c2802a8ec77e80d0b1/cosmic_ray-1.0.0a1.tar.gz"
      }
    ],
    "1.1.0a1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "289404ec4bc09a4eee21976e9d5b2c23",
          "sha256": "7939932580041581342007956d4254a18d7f05669d6b66dcfc80fb1de223dd47"
        },
        "downloads": 14,
        "filename": "cosmic_ray-1.1.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "289404ec4bc09a4eee21976e9d5b2c23",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24002,
        "upload_time": "2017-02-07T18:38:47",
        "url": "https://files.pythonhosted.org/packages/11/ac/efed7664affcb04e545b6d613e20bf9543b9603de3158e5c6c01cbc639b4/cosmic_ray-1.1.0a1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "53307363e03a4b93569c0f388558ac68",
        "sha256": "7b1dc2e5169a1564792b80063a7229c8a1534727e87fc23cbfce29bb7c892fe1"
      },
      "downloads": 1269,
      "filename": "cosmic_ray-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "53307363e03a4b93569c0f388558ac68",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 12028,
      "upload_time": "2015-04-24T10:10:46",
      "url": "https://files.pythonhosted.org/packages/e4/5d/6415080e6c525b9e4da5d213034166a9eb7c71a012596fa0006a07831dcd/cosmic_ray-0.1.2.tar.gz"
    }
  ]
}