{
  "info": {
    "author": "Benjamin Yates",
    "author_email": "benjamin@rqdq.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "pydux\r\n=====\r\n\r\n`Redux <https://github.com/reactjs/redux>`__ reimplemented in Python.\r\n\r\n|PyPI version|\r\n\r\nTo see it in action, try the\r\n`todos <https://github.com/usrlocalben/urwid_todos>`__ demo.\r\n(Mouse-click needed, as in the original demo)\r\n\r\n``pip install urwid_todos ; python -m urwid_todos``\r\n\r\nWhat is it? Why would I want it?\r\n''''''''''''''''''''''''''''''''\r\n\r\nThe `Redux Readme <https://github.com/reactjs/redux>`__ is a good place\r\nto start.\r\n\r\nThe Gist\r\n        \r\n\r\n    The whole state of your app is stored in an object tree inside a\r\n    single store. The only way to change the state tree is to emit an\r\n    action, an object describing what happened. To specify how the\r\n    actions transform the state tree, you write pure reducers.\r\n\r\n    That's it!\r\n\r\n.. code:: python\r\n\r\n    from __future__ import print_function\r\n    import pydux\r\n\r\n    # This is a reducer, a pure function with (state, action) => state signature.\r\n    # It describes how an action transforms the state into the next state.\r\n    #\r\n    # The shape of the state is up to you: it can be a primitive, an array, an object,\r\n    # or even an frozendict data structure [1]. The only important part is that you should\r\n    # not mutate the state object, but return a new object if the state changes.\r\n    #\r\n    # [1]: https://pypi.python.org/pypi/frozendict\r\n    #\r\n    # In this example, we use a `if` statement and strings, but you can use a\r\n    # helper that follows a different convention if it makes sense for your\r\n    # project.\r\n    def counter(state, action):\r\n        if state is None:\r\n            state = 0\r\n        if action is None:\r\n            return state\r\n        elif action['type'] == 'INCREMENT':\r\n            return state + 1\r\n        elif action['type'] == 'DECREMENT':\r\n            return state - 1\r\n        return state\r\n\r\n    # Create a Redux store holding the state of your app.\r\n    # Its API is { subscribe, dispatch, get_state }.\r\n    store = pydux.create_store(counter)\r\n\r\n    # You can use subscribe() to update the UI in response to state changes.\r\n    store.subscribe(lambda: print(store.get_state()))\r\n\r\n    # The only way to mutate the internal state is to dispatch an action.\r\n    # The actions can be serialized, logged or stored and later replayed.\r\n    store.dispatch({ 'type': 'INCREMENT' })\r\n    # 1\r\n    store.dispatch({ 'type': 'INCREMENT' })\r\n    # 2\r\n    store.dispatch({ 'type': 'DECREMENT' })\r\n    # 1\r\n\r\nFurther examples of *Python* usage\r\n''''''''''''''''''''''''''''''''''\r\n\r\n`urwid\\_pydux <https://github.com/usrlocalben/urwid_pydux>`__ provides a\r\n`React-Redux <https://github.com/reactjs/react-redux>`__ Component API\r\nfor text/console GUIs made with\r\n`Urwid <https://github.com/urwid/urwid>`__.\r\n\r\n`urwid\\_todos <https://github.com/usrlocalben/urwid_todos>`__ is a\r\nreimplementation of the Redux\r\n`todos <http://redux.js.org/docs/basics/ExampleTodoList.html>`__ example\r\nmade with `urwid\\_pydux <https://github.com/usrlocalben/urwid_pydux>`__.\r\n\r\nAcknowledgements\r\n''''''''''''''''\r\n\r\nThe initial test suite was imported from\r\n`python-redux <https://github.com/ebrakke/python-redux>`__, a Redux\r\nimplementation for Python 3.4+.\r\n\r\n.. |PyPI version| image:: https://badge.fury.io/py/pydux.svg\r\n   :target: https://badge.fury.io/py/pydux",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/usrlocalben/pydux/",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pydux",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pydux/",
    "release_url": "https://pypi.org/project/pydux/0.2.1/",
    "requires_python": null,
    "summary": "Python + Redux = Pydux",
    "version": "0.2.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1b4c109a75c1f87168ee5b04b09e8c09",
          "sha256": "8c7a98043425676398c6c2dae6238cd0a67a8ea7bb461c248d1146a91269ff18"
        },
        "downloads": 434,
        "filename": "pydux-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1b4c109a75c1f87168ee5b04b09e8c09",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3465,
        "upload_time": "2016-05-04T03:37:34",
        "url": "https://files.pythonhosted.org/packages/54/24/567082b69da2c6602a7698e68ab07edcd73cd5816055e9b88ab04f91c951/pydux-0.1.0.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7560c950d6223330bd266e994e9aa67f",
          "sha256": "676ad1e5d216bab7043a9eb09fced070ec5cccd0c709d0c25f6bc059b8c24fdf"
        },
        "downloads": 161,
        "filename": "pydux-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7560c950d6223330bd266e994e9aa67f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9105,
        "upload_time": "2016-12-15T16:14:23",
        "url": "https://files.pythonhosted.org/packages/de/41/dad439e886df8865b76f4619dc141a932a5fbdad9045d6ba393126f43bdf/pydux-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "34e1eeb624616c1df2c1c1cd1fd58eb0",
          "sha256": "fb5872c5f4b25e54c4c17bd308e365e20fe935162c468d3a19198a4b84fc1348"
        },
        "downloads": 296,
        "filename": "pydux-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "34e1eeb624616c1df2c1c1cd1fd58eb0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9135,
        "upload_time": "2016-12-16T14:39:02",
        "url": "https://files.pythonhosted.org/packages/40/fd/f9fd8ac9c870c17da6db59684524a3309e00cd6384a7af54c62f90ccb97a/pydux-0.2.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "34e1eeb624616c1df2c1c1cd1fd58eb0",
        "sha256": "fb5872c5f4b25e54c4c17bd308e365e20fe935162c468d3a19198a4b84fc1348"
      },
      "downloads": 296,
      "filename": "pydux-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "34e1eeb624616c1df2c1c1cd1fd58eb0",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9135,
      "upload_time": "2016-12-16T14:39:02",
      "url": "https://files.pythonhosted.org/packages/40/fd/f9fd8ac9c870c17da6db59684524a3309e00cd6384a7af54c62f90ccb97a/pydux-0.2.1.tar.gz"
    }
  ]
}