{
  "info": {
    "author": "Gurdul\u00f9",
    "author_email": "macgurd@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing"
    ],
    "description": "=====\nVirga\n=====\n\nFrom `Wikipedia <https://en.wikipedia.org/wiki/Virga>`_: *\"In meteorology, Virga is an observable streak or shaft of\nprecipitation falling from a cloud that evaporates or sublimates before reaching the ground.\"*\n\nThis piece of software is not about a weather phenomenon. In this context Virga is a tool for analysing your Cloud\ninfrastructure before the rain reaches the ground.\n\n----------------------------------\nThis project is still in pre-alpha\n----------------------------------\n\nThere are many things still missing:\n\n* the documentation needs to be written better\n* the definition file is just a draft for testing purposes\n* it needs tests on real data resources\n\n------------------\nProvider supported\n------------------\n\nAt the moment only `AWS <https://aws.amazon.com/>`_.\n\n------------\nRequirements\n------------\n\n* `Python 3.5+ <https://www.python.org/>`_\n* `PyYAML <http://pyyaml.org/wiki/PyYAML>`_\n* `JMESPath.py <https://github.com/jmespath/jmespath.py>`_\n\nSpecific for AWS\n================\n\n* an AWS working account\n* `boto3 <https://github.com/boto/boto3>`_\n\n-----------\nQuick start\n-----------\n\n1. Install Virga :code:`pip install virga`\n2. Edit the file ``template.yaml``\n3. :code:`virga template.yaml`\n\n\n``template.yaml`` is the `Configuration file`_.\n\n------------------\nConfiguration file\n------------------\n\nSee `This project is still in pre-alpha`_\n\nAn example is worth 1000 words.\n\nYou want to know if the subnet ``my-subnet`` on AWS has:\n\n* the CIDR block equals to 10.0.0.0/24\n* set the tag *environment* with the value *staging*\n\nand then you want to know if the EC2 instances with the tag name starting with the value ``my-app`` are in the subnet\n``my-subnet``.\n\n.. code:: yaml\n\n    ---\n    provider:\n      name: aws\n      params:\n        region_name: eu-west-2\n      extra:\n        role_arn: arn:aws:iam::0123456789:role/Tests\n    tests:\n      subnets:\n        - name: my-subnet\n          assertions:\n            - CidrBlock==`10.0.0.0/24`\n            - Tags[?Key==`environment` && Value == `staging`]\n      instances:\n        - name: my-app-*\n          assertions:\n            - SubnetId==\"_lookup('subnets', 'name', 'my-subnet')\"\n\nThe first section ``provider`` sets the provider you want to use and the way you want to use it:\n\n* **name** must be an existing module in the ``providers`` module\n* **params** contains settings for the client connection\n* **extra** can be used for additional actions required by the provider\n\nThe second section ``tests`` define the battery of tests.\n\nFor understanding this section we need to refer to the definition file.\n\nFor example the ``subnets`` section is defined\n\n.. code::yaml\n\n    subnets:\n      client: ec2\n      action: describe_subnets\n      context: Subnets\n      prefix: Subnets\n      resource_id: SubnetId\n      identifiers:\n        id: subnet-id\n        name: tag:Name\n\nThe tag ``name`` is defined as ``tag:Name`` and is used for filtering the resources tagged **Name**.\n\nThen declare a **section** ``tests`` with two **context** ``subnets`` and ``instances``. For each context declare\nthe list of resources to evaluate and the list of assertions for each resource.\n\nBecause you don't know the subnet ID, you can use the interpolated `_lookup function`_ that accepts three parameters:\n\n* the context\n* the identifier (eg. name or id)\n* the value to search\n\nThe assertions are declarations made with the query language `JMESPath <http://jmespath.org/>`_.\n\n_lookup function\n================\n\nSee `This project is still in pre-alpha`_\n\n---\nFAQ\n---\n\nSee `This project is still in pre-alpha`_\n\nRecommendation on permissions\n=============================\n\nSee `This project is still in pre-alpha`_\n\nWhy my test is failing\n======================\n\nSee `This project is still in pre-alpha`_\n\n----------------\nResource mapping\n----------------\n\n* `List of AWS resources <docs/resource_mapping_aws.html>`_\n\n---------------\nAdvanced topics\n---------------\n\n* `Definition file <docs/definition_file.rst>`_\n* `How to build a custom provider <docs/custom_provider.rst>`_\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/gurdulu/virga",
    "keywords": "qa testing cloud aws",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "virga",
    "platform": "",
    "project_url": "https://pypi.org/project/virga/",
    "release_url": "https://pypi.org/project/virga/0.0.6/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Analysing your Cloud infrastructure before the rain falls to the ground",
    "version": "0.0.6"
  },
  "releases": {
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ad1bdcc52903f2bd3da4d6583d55be52",
          "sha256": "db4bac9f8ce1f3650cfc08fa67ea1d99f6d15dab00de7ffb54c85a354d66af00"
        },
        "downloads": 0,
        "filename": "virga-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ad1bdcc52903f2bd3da4d6583d55be52",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12239,
        "upload_time": "2017-09-26T19:33:17",
        "url": "https://files.pythonhosted.org/packages/f6/04/a2699768f595a977f368876c21ad5a01798d774222081a8890b775210aaa/virga-0.0.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ad1bdcc52903f2bd3da4d6583d55be52",
        "sha256": "db4bac9f8ce1f3650cfc08fa67ea1d99f6d15dab00de7ffb54c85a354d66af00"
      },
      "downloads": 0,
      "filename": "virga-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "ad1bdcc52903f2bd3da4d6583d55be52",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 12239,
      "upload_time": "2017-09-26T19:33:17",
      "url": "https://files.pythonhosted.org/packages/f6/04/a2699768f595a977f368876c21ad5a01798d774222081a8890b775210aaa/virga-0.0.6.tar.gz"
    }
  ]
}