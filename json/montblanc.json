{
  "info": {
    "author": "Simon Perkins",
    "author_email": "simon.perkins@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: Other/Proprietary License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Astronomy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Montblanc\n\nA PyCUDA implementation of the Radio Interferometry Measurement Equation, and a foothill of Mount Exaflop.\n\n## License\n\nMontblanc is licensed under the GNU GPL v2.0 License.\n\n## Requirements\n\n- PyCUDA 2015.1.3\n- A Kepler NVIDIA GPU for more recent functionality.\n\n## Installation\n\nCertain pre-requisites must be installed, prior to calling the `setup.py` script.\n\n### Pre-requisites\n\n- **[libffi][libffi]** development files, required by cffi. On ubuntu 14.04, you can run:\n\n    ```bash\n    $ sudo apt-get install libffi-dev\n    ```\n    \n- **[python-casacore][pyrap]** which depends on **[casacore2][casacore]**.\n    On Ubuntu 14.04 add the [radio astronomy PPA][radio-astro-ppa]  and get the binaries from there:\n\n    ```bash\n    $ sudo apt-get install software-properties-common\n    $ sudo add-apt-repository ppa:radio-astro/main\n    $ sudo apt-get update\n    $ sudo apt-get install python-casacore\n    ```\n\n### Installing the package\n\nIt is strongly recommended that you perform the install within a [Virtual Environment](http://docs.python-guide.org/en/latest/dev/virtualenvs/).\nIf not, consider adding the `--user` flag to the following\npip and python commands to install within your home directory.\n\nFirst install [numpy] due to this [issue](http://stackoverflow.com/questions/18997339/scipy-and-numpy-install-on-linux-without-root).\n\n    $ pip install numpy\n\nThen, run\n\n    $ python setup.py build\n\nto build the package and\n\n    $ python setup.py install\n\nto install the package.\n\n### Possible Issues\n\n- **[PyCUDA 2015.1.3][pycuda]**. setup.py will attempt to install this automatically,\n    but this might not work if you have a non-standard CUDA install location. It's worth running\n\n    ```bash\n    $ python -c 'import pycuda.autoinit'\n    ```\n    \n    to check if your pycuda can talk to the NVIDIA driver. If not, manually download\n    and install [PyCUDA][pycuda].\n- **[cub 1.5.1][cub]**. setup.py will attempt to download this from github\n    and install to the correct directory during install. If this fails do the following:\n\n    ```bash\n    $ wget -c https://codeload.github.com/NVlabs/cub/zip/1.5.1\n    $ mv 1.5.1 cub.zip\n    $ python setup.py install\n    ```\n\n- **[numexpr]**. When running `python setup.py install`, if you see an error message like this:\n\n    ```python\n    Traceback (most recent call last):\n      File \"setup.py\", line 154, in <module>\n        setup_package()\n      File \"setup.py\", line 146, in setup_package\n        from numpy.distutils.core import setup\n    ImportError: No module named numpy.distutils.core\n    ```\n    \n    Go back to [Installing the package](#installing-the-package) and install [numpy][numpy].\n\n\n\n## Running Tests\n\nOnce the libraries have been compiled you should be able to run the\n\n    $ cd tests\n    $ python -c 'import montblanc; montblanc.test()'\n    $ python -m unittest test_biro_v4.TestBiroV4.test_sum_coherencies_double\n\nwhich will run the entire test suite or only the specified test case, respectively.\nThe reported times are for the entire test case with numpy code, and not just the CUDA kernels.\n\nIf you're running on an ubuntu laptop with optimus technology, you may have to install bumblebee and run\n\n    $ optirun python -c 'import montblanc; montblanc.test()'\n\n## Playing with a Measurement Set\n\nYou could also try run\n\n    $ cd examples\n    $ python MS_example.py /home/user/data/WSRT.MS -np 10 -ng 10 -c 100\n\nwhich sets up things based on the supplied Measurement Set, with 10 point and 10 gaussian sources. It performs 100 iterations of the pipeline.\n\n## Citing Montblanc\n\nIf you use Montblanc and find it useful, please consider\nciting the related [paper][montblanc-paper-sciencedirect].\nA [arXiv][montblanc-paper-arxiv] preprint is available.\n\nThe BIRO paper is available at [MNRAS][biro-paper-mnras],\nand a [arXiv][biro-paper-arxiv] is also available.\n\n## Caveats\n\nMontblanc is an experimental package, undergoing rapid development.\nThe plan for 2015 is to iterate on new versions of the BIRO pipeline.\n\nIn general, I will avoid making changes to BIRO v2 and v3,\nbut everything beyond that may be changed, including the basic API residing in BaseSolver.py.\nIn practice, this means that the interfaces in the base montblanc package will remain stable.\nFor example:\n\n```python\nimport montblanc\nmontblanc.rime_solver(...)\n```\n\nEverything should be considered unstable and subject to change.\nI will make an effort to maintain the CHANGELOG.md, to record any breaking API changes.\n\n[pycuda]:http://mathema.tician.de/software/pycuda/\n[pytools]:https://pypi.python.org/pypi/pytools\n[moderngpu]:https://github.com/nvlabs/moderngpu\n[cub]:https://github.com/nvlabs/cub\n[pyrap]:https://github.com/casacore/python-casacore\n[casacore]:https://github.com/casacore/casacore\n[radio-astro-ppa]:https://launchpad.net/~radio-astro/+archive/main\n[libffi]:https://sourceware.org/libffi/\n[biro-paper-arxiv]:http://arxiv.org/abs/1501.05304\n[biro-paper-mnras]:http://mnras.oxfordjournals.org/content/450/2/1308.abstract\n[montblanc-paper-arxiv]:http://arxiv.org/abs/1501.07719\n[montblanc-paper-sciencedirect]:http://www.sciencedirect.com/science/article/pii/S2213133715000633\n[numpy]:http://www.numpy.org\n[numexpr]:https://github.com/pydata/numexpr",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/ska-sa/montblanc",
    "keywords": null,
    "license": "GPL2",
    "maintainer": null,
    "maintainer_email": null,
    "name": "montblanc",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/montblanc/",
    "release_url": "https://pypi.org/project/montblanc/0.4.0a3/",
    "requires_python": null,
    "summary": "GPU-accelerated RIME implementations.",
    "version": "0.4.0a3"
  },
  "releases": {
    "0.4.0a3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "59813cb2143830dec272d89d0032115b",
          "sha256": "31f8b312b7e9fd467b1afa0359871bf0d2eec7983a45269ef2c3079ab7231a17"
        },
        "downloads": 495,
        "filename": "montblanc-0.4.0a3.tar.gz",
        "has_sig": false,
        "md5_digest": "59813cb2143830dec272d89d0032115b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 90412,
        "upload_time": "2016-03-11T10:40:25",
        "url": "https://files.pythonhosted.org/packages/e3/af/3464277ac162d6c7338ee5b24fb0599f258377b77a2b7e1789b806671ea0/montblanc-0.4.0a3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "59813cb2143830dec272d89d0032115b",
        "sha256": "31f8b312b7e9fd467b1afa0359871bf0d2eec7983a45269ef2c3079ab7231a17"
      },
      "downloads": 495,
      "filename": "montblanc-0.4.0a3.tar.gz",
      "has_sig": false,
      "md5_digest": "59813cb2143830dec272d89d0032115b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 90412,
      "upload_time": "2016-03-11T10:40:25",
      "url": "https://files.pythonhosted.org/packages/e3/af/3464277ac162d6c7338ee5b24fb0599f258377b77a2b7e1789b806671ea0/montblanc-0.4.0a3.tar.gz"
    }
  ]
}