{
  "info": {
    "author": "TokBox, Inc.",
    "author_email": "support@tokbox.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Telecommunications Industry",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Communications",
      "Topic :: Communications :: Chat",
      "Topic :: Communications :: Conferencing",
      "Topic :: Multimedia :: Sound/Audio :: Capture/Recording",
      "Topic :: Multimedia :: Sound/Audio :: Players",
      "Topic :: Multimedia :: Video :: Capture",
      "Topic :: Multimedia :: Video :: Display",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "==================\nOpenTok Python SDK\n==================\n\n.. image:: https://travis-ci.org/opentok/Opentok-Python-SDK.svg\n   :target: https://travis-ci.org/opentok/Opentok-Python-SDK\n\nThe OpenTok Python SDK lets you generate\n`sessions <http://tokbox.com/opentok/tutorials/create-session/>`_ and\n`tokens <http://tokbox.com/opentok/tutorials/create-token/>`_ for `OpenTok <http://www.tokbox.com/>`_\napplications, and `archive <http://www.tokbox.com/platform/archiving>`_ OpenTok sessions.\n\nInstallation using Pip (recommended):\n-------------------------------------\n\nPip helps manage dependencies for Python projects using the PyPI index. Find more info here:\nhttp://www.pip-installer.org/en/latest/\n\nAdd the ``opentok`` package as a dependency in your project. The most common way is to add it to your\n``requirements.txt`` file::\n\n  opentok>=2.5.0\n\nNext, install the dependencies::\n\n  $ pip install -r requirements.txt\n\n\nUsage\n-----\n\nInitializing\n~~~~~~~~~~~~\n\nImport the package at the top of any file where you will use it. At the very least you will need the\n``OpenTok`` class. Then initialize an OpenTok instance with your own API Key and API Secret.\n\n.. code:: python\n\n  from opentok import OpenTok\n\n  opentok = OpenTok(api_key, api_secret)\n\nCreating Sessions\n~~~~~~~~~~~~~~~~~\n\nTo create an OpenTok Session, use the ``opentok.create_session()`` method. There are three optional\nkeyword parameters for this method: \n\n* ``location`` which can be set to a string containing an IP address.\n\n* ``media_mode`` which is a String (defined by the MediaModes class).\n  This determines whether the session will use the\n  `OpenTok Media Router <https://tokbox.com/developer/guides/create-session/#media-mode>`_\n  or attempt to send streams directly between clients. A routed session is required for some \n  OpenTok features (such as archiving).\n\n* ``archive_mode`` which specifies whether the session will be automatically archived (``always``)\n  or not (``manual``).\n\nThis method returns a ``Session`` object. Its ``session_id`` attribute is useful when saving to a persistent\nstore (such as a database).\n\n.. code:: python\n\n  # Create a session that attempts to send streams directly between clients (falling back\n  # to use the OpenTok TURN server to relay streams if the clients cannot connect):\n  session = opentok.create_session()\n\n  from opentok import MediaModes\n  # A session that uses the OpenTok Media Router:\n  session = opentok.create_session(media_mode=MediaModes.routed)\n\n  # An automatically archived session:\n  session = opentok.create_session(media_mode=MediaModes.routed, archive_mode=ArchiveModes.always)\n\n  # A session with a location hint\n  session = opentok.create_session(location=u'12.34.56.78')\n\n  # Store this session ID in the database\n  session_id = session.session_id\n\nGenerating Tokens\n~~~~~~~~~~~~~~~~~\n\nOnce a Session is created, you can start generating Tokens for clients to use when connecting to it.\nYou can generate a token either by calling the ``opentok.generate_token(session_id)`` method or by\ncalling the ``session.generate_token()`` method on a ``Session`` instance after creating it. Both\nhave a set of optional keyword parameters: ``role``, ``expire_time``, ``data``, and\n``initial_layout_class_list``.\n\n.. code:: python\n\n  # Generate a Token from just a session_id (fetched from a database)\n  token = opentok.generate_token(session_id)\n  # Generate a Token by calling the method on the Session (returned from create_session)\n  token = session.generate_token()\n\n  from opentok import Roles\n  # Set some options in a token\n  token = session.generate_token(role=Roles.moderator,\n                                 expire_time=int(time.time()) + 10,\n                                 data=u'name=Johnny'\n                                 initial_layout_class_list=[u'focus'])\n\nWorking with Archives\n~~~~~~~~~~~~~~~~~~~~~\n\nYou can start the recording of an OpenTok Session using the ``opentok.start_archive(session_id)``\nmethod. This method takes an optional keyword argument ``name`` to assign a name to the archive.\nThis method will return an ``Archive`` instance. Note that you can only start an Archive on\na Session that has clients connected.\n\n.. code:: python\n\n  archive = opentok.start_archive(session_id, name=u'Important Presentation')\n\n  # Store this archive_id in the database\n  archive_id = archive.id\n\nYou can also disable audio or video recording by setting the `has_audio` or `has_video` property of\nthe `options` parameter to `false`:\n\n.. code:: python\n\n  archive = opentok.start_archive(session_id, name=u'Important Presentation', has_video=False)\n\n  # Store this archive_id in the database\n  archive_id = archive.id\n\nBy default, all streams are recorded to a single (composed) file. You can record the different\nstreams in the session to individual files (instead of a single composed file) by setting the\n``output_mode`` parameter of the ``opentok.start_archive()`` method `OutputModes.individual`.\n\n.. code:: python\n\n  archive = opentok.start_archive(session_id, name=u'Important Presentation', output_mode=OutputModes.individual)\n\n  # Store this archive_id in the database\n  archive_id = archive.id\n\nYou can stop the recording of a started Archive using the ``opentok.stop_archive(archive_id)``\nmethod. You can also do this using the ``archive.stop()`` method of an ``Archive`` instance.\n\n.. code:: python\n\n  # Stop an Archive from an archive_id (fetched from database)\n  opentok.stop_archive(archive_id)\n  # Stop an Archive from an instance (returned from opentok.start_archive)\n  archive.stop()\n\nTo get an ``Archive`` instance (and all the information about it) from an archive ID, use the\n``opentok.get_archive(archive_id)`` method.\n\n.. code:: python\n\n  archive = opentok.get_archive(archive_id)\n\nTo delete an Archive, you can call the ``opentok.delete_archive(archive_id)`` method or the\n``archive.delete()`` method of an ``Archive`` instance.\n\n.. code:: python\n\n  # Delete an Archive from an archive ID (fetched from database)\n  opentok.delete_archive(archive_id)\n  # Delete an Archive from an Archive instance (returned from opentok.start_archive or\n  opentok.get_archive)\n  archive.delete()\n\nYou can also get a list of all the Archives you've created (up to 1000) with your API Key. This is\ndone using the ``opentok.list_archives()`` method. There are two optional keyword parameters:\n``count`` and ``offset``; they can help you paginate through the results. This method returns an\ninstance of the ``ArchiveList`` class.\n\n.. code:: python\n\n  archive_list = opentok.list_archive()\n\n  # Get a specific Archive from the list\n  archive = archive_list.items[i]\n\n  # Iterate over items\n  for archive in iter(archive_list):\n    pass\n\n  # Get the total number of Archives for this API Key\n  total = archive_list.total\n\nNote that you can also create an automatically archived session, by passing in\n``ArchiveModes.always`` as the ``archive_mode`` parameter when you call the\n``opentok.create_session()`` method (see \"Creating Sessions,\" above).\n\nFor more information on archiving, see the\n`OpenTok archiving <https://tokbox.com/opentok/tutorials/archiving/>`_ programming guide.\n\n\nSamples\n-------\n\nThere are two sample applications included in this repository. To get going as fast as possible, clone the whole\nrepository and follow the Walkthroughs:\n\n- `HelloWorld <sample/HelloWorld/README.md>`_\n- `Archiving <sample/Archiving/README.md>`_\n\nDocumentation\n-------------\n\nReference documentation is available at <http://www.tokbox.com/opentok/libraries/server/python/reference/index.html>.\n\nRequirements\n------------\n\nYou need an OpenTok API key and API secret, which you can obtain at https://dashboard.tokbox.com/\n\nThe OpenTok Python SDK requires Python 2.6, 2.7, 3.3, 3.4, 3.5 or 3.6\n\nRelease Notes\n-------------\n\nSee the `Releases <https://github.com/opentok/Opentok-Python-SDK/releases>`_ page for details about\neach release.\n\nImportant changes since v2.2\n----------------------------\n\n**Changes in v2.2.1:**\n\nThe default setting for the create_session() method is to create a session with the media mode set\nto relayed. In previous versions of the SDK, the default setting was to use the OpenTok Media Router\n(media mode set to routed). In a relayed session, clients will attempt to send streams directly\nbetween each other (peer-to-peer); if clients cannot connect due to firewall restrictions, the\nsession uses the OpenTok TURN server to relay audio-video streams.\n\n**Changes in v2.2.0:**\n\nThis version of the SDK includes support for working with OpenTok archives.\n\nThe OpenTok.create_session() method now includes a media_mode parameter, instead of a p2p parameter.\n\nFor details, see the reference documentation at\n<http://www.tokbox.com/opentok/libraries/server/python/reference/index.html>.\n\nDevelopment and Contributing\n----------------------------\n\nInterested in contributing? We :heart: pull requests! See the `Development <DEVELOPING.md>`_ and\n`Contribution <CONTRIBUTING.md>`_ guidelines.\n\nSupport\n-------\n\nSee https://support.tokbox.com/ for all our support options.\n\nFind a bug? File it on the `Issues <https://github.com/opentok/opentok-python-sdk/issues>`_ page.\nHint: test cases are really helpful!",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/opentok/Opentok-Python-SDK",
    "keywords": "video chat tokbox tok opentok python media webrtc archiving realtime",
    "license": "LICENSE.txt",
    "maintainer": null,
    "maintainer_email": null,
    "name": "opentok",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/opentok/",
    "release_url": "https://pypi.org/project/opentok/2.5.0/",
    "requires_python": null,
    "summary": "OpenTok server-side SDK",
    "version": "2.5.0"
  },
  "releases": {
    "0.91.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "49a0223792fb858999d0bc3015401335",
          "sha256": "332f0caecc925d87c0091bc7c6732025f55209d3478a2f8fc276a0dcee10ad79"
        },
        "downloads": 9554,
        "filename": "opentok-0.91.2.tar.gz",
        "has_sig": false,
        "md5_digest": "49a0223792fb858999d0bc3015401335",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6016,
        "upload_time": "2013-07-18T23:45:46",
        "url": "https://files.pythonhosted.org/packages/a4/d9/95361c80870203312591216bbe8e185dea30b6e22f79789d585c2683aeed/opentok-0.91.2.tar.gz"
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4d2626c635cdc4384ae2bcbe0446fc40",
          "sha256": "e00b12400ddb33e05e23d05101b36b9e4dcccc701eb0b60ee629d60d910ccf6b"
        },
        "downloads": 1771,
        "filename": "opentok-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4d2626c635cdc4384ae2bcbe0446fc40",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11365,
        "upload_time": "2014-05-27T21:57:55",
        "url": "https://files.pythonhosted.org/packages/69/e6/430f063d20775d18e5fc525e51e786c4abd314fb27e35d76fe9528223a83/opentok-2.2.0.tar.gz"
      }
    ],
    "2.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "02874365b9609c46818de2bce0a570cb",
          "sha256": "0cdf0a1eb42575decbbe2a7e63ff3cd89ac23ef71e9d775d6f1f17ef9096dfb7"
        },
        "downloads": 11675,
        "filename": "opentok-2.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "02874365b9609c46818de2bce0a570cb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11368,
        "upload_time": "2014-06-17T21:06:02",
        "url": "https://files.pythonhosted.org/packages/9f/c5/ba19dd82db2b3b9a3558b284be8d4583ce02b10ca1a607213a1f468ce928/opentok-2.2.1.tar.gz"
      }
    ],
    "2.2.2a1": [],
    "2.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0c451085e7a1fe22b458db438f78c0a8",
          "sha256": "44c0afd8638981b9bda5ee904a089a726f73bd1286c5f1f583ec4148b7ce5e9a"
        },
        "downloads": 5864,
        "filename": "opentok-2.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0c451085e7a1fe22b458db438f78c0a8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12760,
        "upload_time": "2015-06-04T20:27:28",
        "url": "https://files.pythonhosted.org/packages/fb/48/e7fbd69ba97583d34cf7f7d3df73297b08879356f2b8531f5c032eeb2ec8/opentok-2.3.0.tar.gz"
      }
    ],
    "2.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b44b1e505a2ea506c986eef376f19f47",
          "sha256": "e2e517411fb17e25f05a53d8a67181a60ca2e059632b99403652433ddb3847ee"
        },
        "downloads": 2054,
        "filename": "opentok-2.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b44b1e505a2ea506c986eef376f19f47",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12859,
        "upload_time": "2015-12-17T18:18:44",
        "url": "https://files.pythonhosted.org/packages/5a/52/31ab7e0b47df4247b8cc15cd3e41b1df00220801713eab2205bf1a54a85b/opentok-2.4.0.tar.gz"
      }
    ],
    "2.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "036c38aa9da41229a22260933a018885",
          "sha256": "d2ff7be11fd7b277c15e2802d0b2d203ef7d74ed65b83e41e2610ed3ede8b031"
        },
        "downloads": 1651,
        "filename": "opentok-2.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "036c38aa9da41229a22260933a018885",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12888,
        "upload_time": "2016-04-22T05:52:19",
        "url": "https://files.pythonhosted.org/packages/58/3c/ede61695cd5860ef12e030e3794883a86b5b89ea24ef7cf4ac07ba6c078f/opentok-2.4.1.tar.gz"
      }
    ],
    "2.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "905ecf9d154e3f19e8445b9db45fffb5",
          "sha256": "723171c03f9228f6cc5bc0eb583f6f38618ae9ae71bdf23e623fae5550cff96c"
        },
        "downloads": 0,
        "filename": "opentok-2.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "905ecf9d154e3f19e8445b9db45fffb5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13294,
        "upload_time": "2017-06-09T01:58:53",
        "url": "https://files.pythonhosted.org/packages/22/42/950b94da8a6c5fbfa680a539a4ca3aef2c70d0be5762572b494760837a58/opentok-2.5.0.tar.gz"
      }
    ],
    "2.5.0b1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ee640acecff254595dc8ae72ae664ee3",
          "sha256": "b34a63a89f9a1f8ee2caf61fc5dabd3d2a39436c517b857a4ef2d2e200e54420"
        },
        "downloads": 181,
        "filename": "opentok-2.5.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "ee640acecff254595dc8ae72ae664ee3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13044,
        "upload_time": "2016-04-22T02:10:31",
        "url": "https://files.pythonhosted.org/packages/d4/87/7cae9d781332d88f9dd759904c12a7a6d7f106e131f92eca139186de14b6/opentok-2.5.0b1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "905ecf9d154e3f19e8445b9db45fffb5",
        "sha256": "723171c03f9228f6cc5bc0eb583f6f38618ae9ae71bdf23e623fae5550cff96c"
      },
      "downloads": 0,
      "filename": "opentok-2.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "905ecf9d154e3f19e8445b9db45fffb5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 13294,
      "upload_time": "2017-06-09T01:58:53",
      "url": "https://files.pythonhosted.org/packages/22/42/950b94da8a6c5fbfa680a539a4ca3aef2c70d0be5762572b494760837a58/opentok-2.5.0.tar.gz"
    }
  ]
}