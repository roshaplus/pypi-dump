{
  "info": {
    "author": "Chris Cummins",
    "author_email": "chrisc.101@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "README for emu version 0.2.5\n--------------------------------------------------------------------------------\nCopyright (C) 2012-2017 Chris Cummins <chrisc.101@gmail.com>.\nSee the end of this file for license conditions.\n\nThis directory contains version 0.2.5 of emu, a snapshot backup program. Emu\ntakes advantages of some of the many tools available on *nix systems to\ntransparently and simply record snapshots of a directory tree. It does not store\ndata in proprietary file formats, nor does it hide anything from the user, with\nits simplicity making it incredibly fast. See the HOW IT WORKS section below for\na detailed description.\n\nREQUIREMENTS\n--------------------------------------------------------------------------------\nEmu requires python 2 and the setuptools package. Most systems will come with\nboth of those packaged and perhaps already installed. If not, full installation\ninstructions are available from their respective websites:\n\n    https://wiki.python.org/moin/BeginnersGuide/Download\n    https://pypi.python.org/pypi/setuptools\n\nINSTALLATION\n--------------------------------------------------------------------------------\nEmu uses python setuptools to automate installation. Simply execute\nthis command from the base project directory:\n\n    sudo python2 ./setup.py install\n\nIt is recommended that users run the test suite. Note that this must\nbe performed _after_ installation:\n\n    sudo python2 ./setup.py test\n\nBACKGROUND\n--------------------------------------------------------------------------------\nA snapshot backup system is one in which multiple full \"snapshots\" of\na directory tree are built up incrementally, allowing the user to see,\nexplore or restore the state of the tree from any one snapshot. Emu\nrefers to the target directory that is to be backed up as a\n\"source\". The destination for these source snapshots is referred to as\na \"sink\". New snapshots are \"pushed\" form the source onto the sink,\nand snapshots can be checked out from a sink onto the source.\n\nThere are many different ways of creating snapshot backups. The first technique\n- the \"tarball approach\" - is to create a full copy of the source directory for\neach snapshot, and to store them in a common location. This is the least\nefficient means of creating back ups, as the size of the backup dataset is a\nlinear multiple of the size of the source; so two snapshots require double the\nspace of a single snapshot, and four snapshots require twice the space of\ntwo. However, this technique is robust, as the independence of the snapshots\nmeans that the loss of one will not affect any others.\n\nThe second technique is the \"incremental approach\", in which the difference\nbetween the last snapshot and the current source are stored, so that when\ncombined with the previous snapshots, the full state of the source can be\nrecreated. This massively reduces the data bandwidth requirements, but this\n\"daisy chaining\" of snapshots is fragile (removing a single link breaks the full\nchain), and the extra computational requirements to reverse engineer a source\nfrom a set of incomplete snapshots can increase the amount of time required to\ncreate and restore snapshots.\n\nThe technique that emu uses combines the strenghts of the tarball and\nincremental approaches to produce a robust sink with minimal data bandwidth\nrequirements and fast execution times. It does this by using hardlinks to keep\nmultiple references to identical files without storing duplicate data.\n\nHOW IT WORKS\n--------------------------------------------------------------------------------\nOne of the key features of emu is the way in which snapshots are stored within a\nsink. Unix-like operating systems have the ability to maintain multiple\nreferences within a filesystem to the same inode, this means that '~/foo' and\n'~/bar' can both refer to the same physical data on the block device, while\nappearing and behaving like separate files. In emu, this ability is exploited in\norder to keep multiple snapshots of the same source without having to duplicate\nidentical data. This erases the need for using 'diffs', since the actual\nmechanisms for sharing inodes happens within the kernel, completely\ntransparently to emu.\n\nThere is a 1-n relationship of sources to sinks. That means that for any\ndirectory tree that the user wishes to backup, there may be as many backup\ndestinations as they wish. This enables multiple redundancy in the case of\ncatastrophic data loss. Sinks are independent structures, and no data is shared\nbetween them.\n\nLICENSE\n--------------------------------------------------------------------------------\nCopyright \u00a9 2012-2017 Chris Cummins.  License GPLv3+: GNU GPL version 3 or\nlater <http://gnu.org/licenses/gpl.html>.  This is free software: you\nare free to change and redistribute it.  There is NO WARRANTY, to the\nextent permitted by law.\n\nFor full license details, see the file COPYING in this directory.\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ChrisCummins/emu",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "emu",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/emu/",
    "release_url": "https://pypi.org/project/emu/0.2.5/",
    "requires_python": null,
    "summary": "Fast, incremental, rotating snapshot backups.",
    "version": "0.2.5"
  },
  "releases": {
    "0.2.3": [],
    "0.2.4": [],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c4a7d6e1963f8adee5a317d9b2d44644",
          "sha256": "9a0e60b1943650009993188be67493cbea69140c5cbd265934ff6c7f91978b48"
        },
        "downloads": 0,
        "filename": "emu-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c4a7d6e1963f8adee5a317d9b2d44644",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 31306,
        "upload_time": "2017-06-08T08:53:00",
        "url": "https://files.pythonhosted.org/packages/ff/07/19dbb7b14df8457d9ae85a23cefdf0f3eb748ace3d858cd0340281f16ecd/emu-0.2.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c4a7d6e1963f8adee5a317d9b2d44644",
        "sha256": "9a0e60b1943650009993188be67493cbea69140c5cbd265934ff6c7f91978b48"
      },
      "downloads": 0,
      "filename": "emu-0.2.5.tar.gz",
      "has_sig": false,
      "md5_digest": "c4a7d6e1963f8adee5a317d9b2d44644",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 31306,
      "upload_time": "2017-06-08T08:53:00",
      "url": "https://files.pythonhosted.org/packages/ff/07/19dbb7b14df8457d9ae85a23cefdf0f3eb748ace3d858cd0340281f16ecd/emu-0.2.5.tar.gz"
    }
  ]
}