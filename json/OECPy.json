{
  "info": {
    "author": "Ryan Varley",
    "author_email": "oecpy@ryanvarley.uk",
    "bugtrack_url": "https://github.com/ryanvarley/open-exoplanet-catalogue-python/issues",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Scientific/Engineering :: Astronomy"
    ],
    "description": "# Open Exoplanet Catalogue Python\n[![Build Status](https://api.travis-ci.org/ryanvarley/open-exoplanet-catalogue-python.png?branch=master)](https://travis-ci.org/ryanvarley/open-exoplanet-catalogue-python)\n[![Coverage Status](https://coveralls.io/repos/ryanvarley/open-exoplanet-catalogue-python/badge.png?branch=coveralls)](https://coveralls.io/r/ryanvarley/open-exoplanet-catalogue-python?branch=coveralls)\n\nThis python interface serves as a link between the raw XML of the [Open Exoplanet Catalogue](https://github.com/hannorein/open_exoplanet_catalogue). It allows:\n* Searching of planets (including alternate names)\n* Easy reference of planet parameters ie GJ1214b.ra, GJ1214b.T, GJ1214b.R\n* Calculation of values like the transit duration.\n* Define planet types and query planets to find out what they are\n* Easy rescale of units\n* Easily navigate hierarchy (ie from planet to star or star to planets)\n* Availability of system parameters in planets (ie ra, dec, d (distance))\n\nPlease note that this package is in active development. The Docs are incomplete, it is not fully unit tested and any and all methods and variables are subjected to change in the development process\n\n# Installation\nThis module depends on\n* [Quantities](https://github.com/python-quantities/python-quantities)\n* [numpy](http://www.numpy.org/)\n* nose\n* matplotlib\n* requests\n* [Open Exoplanet Catalogue](https://github.com/OpenExoplanetCatalogue/open_exoplanet_catalogue) (somewhere on your system)\n\n**Currently only tested under Python 2.6, 2.7, 3.3, 3.4 on mac and linux**. If you use windows or a different python version try it anyway and open an issue if you encounter problems.\n\nEasiest way\n\n`pip install oecpy`\n\nOr from this repo\n\n    python setup.py install\n\nYou can either download and manage the Open Exoplanet Catalogue yourself or automatically load the latest version from the web each time.\n\nTo get your own copy move to the folder on your system where you want to store it and clone the Open Exoplanet Catalogue (this process will create a folder named open-exoplanet-catalogue within your working directory).\n\n    git clone https://github.com/OpenExoplanetCatalogue/open_exoplanet_catalogue.git\n\nThe catalogue should then download. If you want to update the catalogue, move to the open_exoplanet_catalogue folder and pull\n\n    cd open_exoplanet_catalogue/\n    git pull origin master\n\nIf you want to keep track of this repo in a GUI way, I recommend [sourcetree](http://www.sourcetreeapp.com/) or the [github client](https://help.github.com/articles/set-up-git).\n\n# Usage\n\n\timport oecpy\n\tdatabaseLocation = '/git/open_exoplanet_catalogue/systems/' # Your path here (to systems folder)\n\texocat = oecpy.OECDatabase(databaseLocation)\n\n\t# To automatically load the latest version from github you can instead use load_db_from_url() which fetches\n\t# the latest version from https://github.com/OpenExoplanetCatalogue/oec_gzip/raw/master/systems.xml.gz\n\texocat = oecpy.load_db_from_url()\n\nYou can then access the lists\n\n\texocat.systems\n\texocat.stars\n\texocat.planets\n\texocat.transitingPlanets\n\nThe following code assumes the imports\n\n    import oecpy\n    import quantities as pq\n    import oecpy.astroquantities as aq\n\nYou can now perform more advanced queries such as fetching all planets whose radius is less than 10 Earth Radii\n\t\n\tsuperEarths = [planet for planet in exocat.planets if planet.R < (10 * aq.R_e)]\n\nTo choose a planet\n\n\tkepler60b = exocat.searchPlanet('kepler60b')\n\t>>> Planet('Kepler-60 b')\n\tkepler60planets = exocat.searchPlanet('kepler60') # or all the kepler 60 planets\n\t>>> [Planet('Kepler-60 c'), Planet('Kepler-60 b'), Planet('Kepler-60 d')]\n\tkepler60 = kepler60b.star #to get the star kepler-60\n\t>>> Star('Kepler-60')\n\n\tkepler60b.R # get planet radius\n\t>>> array(0.207777) * jupiter_radius # this works like an array in most functions\n\n\tkepler60b.R.rescale(aq.R_e) # See Units section for more\n\t>>> array(2.280002801287082) * earth_radius\n\n\tkepler60b.R.rescale(pq.m) # import quantities as pq (se units section)\n\t>>> array(14525897.847) * m\n\n\tkepler60b.RA\n\t>>> '20 02 28'\n\n    gj1214 = exocat.searchPlanet('gj1214')\n    # or with the exact name\n    exocat.planetDict['Gliese 1214 b']\n\tgj1214.type()\n\t>>> 'Warm Super-Earth' # Note: This depends on your asumptions, see later\n\nFor a full list of planets, star and system parameters see COMING SOON\n\n# Units\nunits are handled by the quantities package\n`import quantities as pq`\n\nYou can then access most units and constants such as meters pq.m, astronomical units pq.au etc!\n\nSome astronomy units such as R_e, R_j, R_s (where e is Earth, j is Jupiter and s in the Sun) are not included (yet) in quantities so you need to refer to them as aq.R_e by importing oecpy.astroquantities as aq\n\nThere are also M_e, M_s, M_j.\n\nPlease read more about [Quantities](https://github.com/python-quantities/python-quantities)\n\n# Equations\n\nThe module contains several equations at the moment and I plan to add many more. If you want one why not write it yourself and send me a pull request or open an issue with a request.\n\n\n\tkepler60b.calcSurfaceGravity()\n\t>>> array(10.318715585166878) * m/s**2\n\n\tkepler60b.calcLogg()\n\t>>> 6.93912947949421\n\n\tgj1214.calcTansitDuration()\n\t>>> array(54.73064331158644) * min\n\nsee COMING SOON\n\n# Assumptions\n\nCurrently they are stored in the dictionary exoplanetcatalogue.assumptions.planetAssumptions.\n\nOverwriting these values (or adding new ones) will change the output.\n\nPlease see assumptions.py for how to do this.\n\n# OECPY Global Parameters\nA few options can be set within OECPY to change the behaviour of the program. By default if a quantity is missing for a parameter it is calculated if possible. For example if you use .a for the semi-major axis and it is not present in the catalogue it will be calculated using the period and stellar mass and returned. this happens silently except for raising the `Calculated SMA` flag. (see flags). You can turn this behaviour off by typing\n\n`oecpy.params.estimateMissingValues = False`\n\nThis will only take scope in the current project so if you close the interpreter it will reset to True.\n\n# Plotting\nOECPy features a plotting library for planet and stellar parameters in a scatter plot and per parameter bin. Please see the [plots section](https://github.com/ryanvarley/open-exoplanet-catalogue-python/wiki/Plotting) of the documentation for further information.\n\n### Planet Mass with Planet Radius ###\n```python\noecpy.plots.GeneralPlotter(exocat.planets, 'R', 'M', yaxislog=True).plot()\n```\n![Planet Mass with Planet Radius](https://raw.githubusercontent.com/ryanvarley/open-exoplanet-catalogue-python/images/oecpy-planet-mass-radius.png \"Planet Mass with Planet Radius Plot\")\n\n### Stellar V Magnitude with Planet Radius ###\n```python\noecpy.plots.GeneralPlotter(exocat.planets, 'R', 'star.magV',\n                            xunit=aq.R_e, xaxislog=True).plot()\n```\n\n![Stellar V Magnitude with Planet Radius](https://raw.githubusercontent.com/ryanvarley/open-exoplanet-catalogue-python/images/oecpy-vmag-planetradius.png \"Stellar V Magnitude with Planet Radius Plot\")\n\n### Planet Eccentricity ###\n```python\noecpy.plots.DataPerParameterBin(exocat.planets, 'e',\n      (0, 0, 0.05, 0.1, 0.2, 0.4, float('inf'))).plotBarChart(label_rotation=45)\n```\n![Planet Eccentricity](https://raw.githubusercontent.com/ryanvarley/open-exoplanet-catalogue-python/images/oecpy-orbital-eccentricity-3.png \"Planet Eccentricity Plot\")\n\nYou can also plot this as a pie chart\n\n```python\noecpy.plots.DataPerParameterBin(exocat.planets, 'e',\n      (0, 0, 0.05, 0.1, 0.2, 0.4, float('inf'))).plotPieChart)\n```\n\n![Planet Eccentricity](https://raw.githubusercontent.com/ryanvarley/open-exoplanet-catalogue-python/images/oecpy-orbital-eccentricity-pie.png \"Planet Eccentricity Pie Chart\")\n\nPlots can also be large (i.e. for presentations), and you can change the color easily with normal *matplotlib* syntax\n\n```python\noecpy.plots.DataPerParameterBin(exocat.planets, 'M',\n    (0, 0.2, 0.5, 1, 2, 3, 6, 12, float('inf')), size='large').plotBarChart(c='r')\n```\n![Planet Eccentricity](https://raw.githubusercontent.com/ryanvarley/open-exoplanet-catalogue-python/images/oecpy-orbital-eccentricity-large-2.png \"Planet Eccentricity Plot Large\")\n\n# Licence\n\nCopyright (C) 2013  Ryan Varley <ryanjvarley@gmail.com>\n\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ryanvarley/open-exoplanet-catalogue-python",
    "keywords": null,
    "license": "GPLv3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "OECPy",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/OECPy/",
    "release_url": "https://pypi.org/project/OECPy/1.1.1/",
    "requires_python": null,
    "summary": "CURRENTLY WORKING ON THIS PACKAGE",
    "version": "1.1.1"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "32cdf18a6ce0f3fdec52a186bee35406",
          "sha256": "05a6435c3343f212c48f85e20ea6086b9312bc1ccea87dfc22aae8921953c718"
        },
        "downloads": 1867,
        "filename": "OECPy-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "32cdf18a6ce0f3fdec52a186bee35406",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 562098,
        "upload_time": "2014-05-16T10:56:50",
        "url": "https://files.pythonhosted.org/packages/34/8d/837db9e4be7993c76381dffbd4bf587896ee17d578bfbf6b2f406a38dc10/OECPy-1.0.tar.gz"
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "39ed4bf107c07f15d25427da33335b96",
          "sha256": "590999b532917e6f03f24dc0b9795f5bcb41bb13409d61e31ab14996cdd626c7"
        },
        "downloads": 1775,
        "filename": "OECPy-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "39ed4bf107c07f15d25427da33335b96",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 563325,
        "upload_time": "2014-06-24T13:02:36",
        "url": "https://files.pythonhosted.org/packages/50/5f/690f812fea97145d49ce4bb9279899e9cf065d1874d531ba08fcc16d9bae/OECPy-1.1.tar.gz"
      }
    ],
    "1.1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d9ecbf36fa93593e3c5fd0654bc65748",
          "sha256": "28e64cb581ab9743d317df3e49ce43835d6422f4289678e04ed600e32de26edb"
        },
        "downloads": 1668,
        "filename": "OECPy-1.1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d9ecbf36fa93593e3c5fd0654bc65748",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 563653,
        "upload_time": "2014-09-05T15:58:19",
        "url": "https://files.pythonhosted.org/packages/ea/d0/f13bc97e3fc535a6371367cd0c8b3f665f7869a5126380a46ca1ffd421ea/OECPy-1.1.0.2.tar.gz"
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9818fe745e5add8c16935c5b4ac6a795",
          "sha256": "fd005cbc9f177261a73e849a8816e2da36ec1c18513a16657e5d283fcd67c490"
        },
        "downloads": 1910,
        "filename": "OECPy-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9818fe745e5add8c16935c5b4ac6a795",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 566023,
        "upload_time": "2014-12-04T18:13:06",
        "url": "https://files.pythonhosted.org/packages/79/a0/d612ce0eb93bf9335a7b349d3506824dab5cec9756e9d439a114347fa49c/OECPy-1.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9818fe745e5add8c16935c5b4ac6a795",
        "sha256": "fd005cbc9f177261a73e849a8816e2da36ec1c18513a16657e5d283fcd67c490"
      },
      "downloads": 1910,
      "filename": "OECPy-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9818fe745e5add8c16935c5b4ac6a795",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 566023,
      "upload_time": "2014-12-04T18:13:06",
      "url": "https://files.pythonhosted.org/packages/79/a0/d612ce0eb93bf9335a7b349d3506824dab5cec9756e9d439a114347fa49c/OECPy-1.1.1.tar.gz"
    }
  ]
}