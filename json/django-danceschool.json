{
  "info": {
    "author": "Lee Tucker",
    "author_email": "lee.c.tucker@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "Welcome to the Django Dance School project\n==========================================\n\nWho is this project for?\n------------------------\n\nPartnered social dance schools are complicated. We run regular class\nseries in all sorts of different configurations, which may require\nprerequisites, auditions, complex pricing, etc. We also often run public\nevents, some of which require registration, and some of which do not. We\noften manage numerous instructors, teach in numerous locations, and have\nto manage schedules and finances for all of these things.\n\nAt the same time, partnered social dance schools are often run by\namateurs, with limited time and resources. The founders of this project\nare all Lindy Hoppers, and in that community, even many of the most\nprominent and successful dance schools have zero full-time staff. We\nhave seen many instances of schools that are simply unable to grow or\nexpand their reach, because they lack the time and resources to manage\nall of the logistical details. Those constraints are a disservice to the\ndance.\n\nOver a period of several years, in Boston, we have sought to address\nthese issues by building our own custom registration system, complete\nwith all of the features needed to run a sophisticated dance school.\nSurprisingly, the commercial options for dance schools are very limited,\ninflexible, and often expensive. We ended up with software that suits\nour needs well, but that is also adaptable enough to be suited to a wide\nrange of dance schools, including partnered social dances of all types,\nbut also to many other types of dance. This project is the result of\nthose efforts.\n\nThe project is designed to be very modular and adaptable to the needs to\nindividual dance schools. You can readily customize the behavior of your\nsite to meet your needs, all while maintaining full integration between\nyour registration system and the public facing portions of the site.\nMany features that are not needed can be turned off without affecting\nthe rest of the site, and the entire system is built with an eye toward\nmaking it easy for individual schools to add custom functionality and\nbehavior.\n\nThe whole thing is integrated with a popular content management system\ncalled `Django CMS <https://www.django-cms.org/en/>`__, that works\nsimilar to other CMS systems that you may be familiar with. That means\nthat day-to-day tasks like editing website content are easy; once your\nsite is up and running, it is in most respects as easy to edit and\nmaintain content as a site built on any other content management\nsoftware. Best of all, this software is free and open source, so you are\nnot stuck paying hefty service fees to a third-party registration\nprovider for as long as your studio is in operation.\n\nThe cost of this flexibility is that getting your site up and running\nwill take a little bit more work than it would with a paid service. You\nwill need to run your own copy of this software on a hosted webserver.\nYou will also need to manually enter a few key site settings before your\nsite is ready for use, such as email, database, and payment credentials.\nFinally, you will probably wish, at a minimum, to create or adopt a\ncustom template for your site's design, and to integrate those into this\nproject's content management system (see details below). If you are\nunfamiliar with web hosting using Python and Django, then it may be a\ngood idea to consult a person with the relevant expertise to get your\ndance school's website up and running. However, we think that once you\nhave things running, you will find that the benefits of having your own\nsystem are considerable.\n\nOverview of Features\n--------------------\n\nThe following are the main features of the project:\n\n-  Class registration (advance online registration and at-the-door\n   registration with separate pricing for each)\n-  Emailing of registered students\n-  Paypal Express Checkout integration for registration and refunds\n-  Stripe Checkout integration for registration and refunds\n-  Instructor scheduling\n-  Internal scheduling (private internal calendars for all staff\n   members)\n-  Substitute teaching\n-  Expense and revenue reporting\n-  Optional automatic generation of expense and revenue line items for\n   instructors, substitute teachers, and venues\n-  Monthly, annual, and by-series financial summaries\n-  Instructor-level financial summaries (for tax purposes)\n-  Graphs showing school performance over time as well as breakdowns by\n   location, type of class, etc.\n-  Discounts\n-  Vouchers and gift certificates\n-  Configurable customer prerequisites\n-  A simple news feed and FAQ system\n\nThe following features are in progress:\n- Private lesson scheduling\n- Internationalization (ability to translate all site functionality into\nother languages)\n\nHistory\n-------\n\nThis project was originally created in Spring-Summer 2010 by Shawn\nHershey, for New School Swing (the predecessor to `Boston Lindy\nHop <https://bostonlindyhop.com/>`__). In March 2015, the project was\ntaken over by Lee Tucker and Andrew Selzer. Significant contributions\nover the course of the project have also been made by Dan Rosenthal,\nJason Swihart, and Kevin Sihlanick.\n\nBasic installation\n------------------\n\nWhat you need:\n~~~~~~~~~~~~~~\n\n-  Python 3.4+\n-  The ability to create a virtual environment (on Linux, install the\n   ``python-virtualenv`` package)\n-  pip - the Python package manager\n-  A git client that will allow you to use the command line\n-  A suitable database. For development and testing, SQLite is used by\n   default. **Strongly Recommended**: PostgreSQL server 9.4+\n-  External library dependencies for Pillow, used for basic image\n   processing (see the `Pillow\n   Documentation <http://pillow.readthedocs.io/en/3.4.x/installation.html>`__).\n-  **Recommended for production use:** `Redis server <https://redis.io/>` for asynchronous handling of emails and other tasks\n-  **For Paypal integration only:** SSL and FFI libraries needed to use the Paypal REST SDK (see `the Github repo <https://github.com/paypal/PayPal-Python-SDK>` for details)\n\n**Linux**\n\n-  If you are using a package manager (such as apt), you can usually\n   directly install the needed dependencies for Pillow. For example, on\n   Ubuntu:\n\n   ::\n\n       sudo apt-get install libjpeg zlib\n       sudo apt-get install redis-server\n       sudo apt-get install libssl-dev libffi-dev\n\n**Mac**\n\n-  You'll have to use homebrew to ``brew install`` dependencies above.\n   Beware you may run into the zlib issue which can be `answered\n   here <http://andinfinity.de/posts/2014-07-17-quick-note-homebrew-installed-python-fails-to-import-zlib.html>`_.\n\nBasic Installation Process\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n1. Create a subfolder for your new Django project, and enter it:\n\n   ::\n\n       mkdir django\n       cd django\n\n2. Create a new virtual environment and enter it:\n\n   ::\n\n       python3 -m virtualenv .\n       source bin/activate\n\n   -  *Note:* Depending on your system, you may need to follow slightly\n      modified instructions in order to create a virtual environment. No\n      matter which method you use, be sure that your environment is set\n      to use Python 3 by default.\n\n3. Install the django-danceschool from `PyPi <https://pypi.python.org/pypi>`_.\n   This will also install all of the necessary dependencies (which may take\n   awhile)\n\n   ``pip install django-danceschool``\n\n   *Note:* Additionally, depending on your operating system, you may\n   need to install certain program dependencies in order to install the\n   Pillow package and the psycopg2 package (as listed in\n   requirements.txt). If you run into issues at this step of the\n   installation, look for these issues first.\n\n4. Start your Django project, using the ``django-admin`` command.  To avoid\n   having to set a large number of settings manually, we strongly recommend\n   that you use the preexisting installation template as follows.  Make sure\n   that you are in the folder where you would like your project to be located when you do this.\n\n   ::\n\n      django-admin startproject --template https://raw.githubusercontent.com/leetucker/django-danceschool/master/setup/default_setup.zip <your_project_name>\n\n5. Perform initial database migrations\n\n   ::\n       \n       cd <your_project_name>\n       python manage.py migrate\n\n6. Create a superuser so that you can log into the admin interface (you\n   will be prompted for username and password)\n\n   ::\n\n       python manage.py createsuperuser\n\n7. **Optional, but strongly recommended:** Run the easy-installer setup\n   script, and follow all prompts.  This script will guide you through\n   the process of setting initial values for many things, creating a few\n   initial pages that many school use, and setting up user groups and\n   permissions that will make it easier for you to get started running\n   your dance school right away.\n\n   ::\n\n       python manage.py setupschool\n\n8. Run the server and try to log in!\n\n   ::\n\n       python manage.py runserver\n\n\nFollowing steps 1-8 above will give you a working installation for testing\npurposes.  However, additional steps are needed to setup emails,\npayment processor integration, and other automated processes.  For details,\nsee the Installation page of the documentation.\n\n\nContribution guidelines\n-----------------------\n\nThe goal of this project is to make an extensible code base that can be used\nby other dance schools.  We can especially use help with:\n\n- Bug fixes\n- Creation and improvement of unit tests\n- Documentation improvements\n- Planning and implementing any significant new functionality that may be\n  valuable to your dance school and also to other schools,\n\nIssues and bugs may be submitted directly to the\n`issue tracker <https://github.com/leetucker/django-danceschool/issues>`_.\n\nBug fixes, or other contributions that serve the goals of the project may\nbe submitted as pull requests directly to this repo.\n\nIf you wish to extend this project with considerable functionality or major\nmodifications, please get in touch with Lee and Andrew.\n\nWho do I talk to about additional questions?\n--------------------------------------------\n\n-  Lee Tucker: lee.c.tucker@gmail.com\n-  Andrew Selzer: apache.danse@gmail.com\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/leetucker/django-danceschool",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-danceschool",
    "platform": "",
    "project_url": "https://pypi.org/project/django-danceschool/",
    "release_url": "https://pypi.org/project/django-danceschool/0.2.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "The Django Dance School project: a modular, reusable set of designed to integrate all of the regular functions of a social dance school with the Django CMS content management system",
    "version": "0.2.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8089e0f242b45af33c2e49ac1025e0e5",
          "sha256": "f816fe42afaeeeffafd35f898a9298c9235e0b73b92d2c948af023d8f17d2223"
        },
        "downloads": 0,
        "filename": "django-danceschool-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8089e0f242b45af33c2e49ac1025e0e5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1871903,
        "upload_time": "2017-08-02T21:23:14",
        "url": "https://files.pythonhosted.org/packages/d8/20/76712a94bed99a9979822cbb29c0ffb0766712561abbbc81f466e6bba288/django-danceschool-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d7e6258957c423e5252727f6e889376d",
          "sha256": "2300747c96c1109273ed0da89d792aa8654bb24f01c75491406599725caa086a"
        },
        "downloads": 0,
        "filename": "django-danceschool-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d7e6258957c423e5252727f6e889376d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1871999,
        "upload_time": "2017-08-03T00:10:55",
        "url": "https://files.pythonhosted.org/packages/ca/ec/666de1b64a7a7cf41c62ad3181d5d6e42cc19e6ebf44907ec762e301dd9b/django-danceschool-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2c2fbea67ef3314565d34a3b64637b89",
          "sha256": "cfec96acc2c01e91f8bc5462e2dad6f8f2548252a86594f628ff2a73a5c065d2"
        },
        "downloads": 0,
        "filename": "django-danceschool-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2c2fbea67ef3314565d34a3b64637b89",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1877404,
        "upload_time": "2017-08-04T17:24:57",
        "url": "https://files.pythonhosted.org/packages/43/5b/f8478afb008f234ed7555eaf73558557f40933b23a9945649fc61db24621/django-danceschool-0.1.2.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c2721d123b59db9768f741ca6347ce88",
          "sha256": "c58695431e6ef4e7a0c5705fe1e60545bde00879c1977ee8b7f39e3f94290df3"
        },
        "downloads": 0,
        "filename": "django-danceschool-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c2721d123b59db9768f741ca6347ce88",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1940080,
        "upload_time": "2017-08-16T03:14:16",
        "url": "https://files.pythonhosted.org/packages/5e/9b/59e8c94f8f0fa2731fadfe34c0f5e70675a17689ffb806e29e9b067d9ebf/django-danceschool-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c4daa3e42c51be10060a44eae0993b94",
          "sha256": "f2653001a5b725e9b965bfaea31c5f93c7fbb09721a7071c592e8e8ebb74975d"
        },
        "downloads": 0,
        "filename": "django-danceschool-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c4daa3e42c51be10060a44eae0993b94",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1940257,
        "upload_time": "2017-08-16T18:02:31",
        "url": "https://files.pythonhosted.org/packages/21/8c/e0cc3ebd753ce691496af910d263e9aae83180eac3bdc97070701dda442d/django-danceschool-0.2.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c4daa3e42c51be10060a44eae0993b94",
        "sha256": "f2653001a5b725e9b965bfaea31c5f93c7fbb09721a7071c592e8e8ebb74975d"
      },
      "downloads": 0,
      "filename": "django-danceschool-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c4daa3e42c51be10060a44eae0993b94",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 1940257,
      "upload_time": "2017-08-16T18:02:31",
      "url": "https://files.pythonhosted.org/packages/21/8c/e0cc3ebd753ce691496af910d263e9aae83180eac3bdc97070701dda442d/django-danceschool-0.2.1.tar.gz"
    }
  ]
}