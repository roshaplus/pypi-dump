{
  "info": {
    "author": "Bruce Merry",
    "author_email": "bmerry@ska.ac.za",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "fakenewsredis: A fake version of a redis-py\n===========================================\n\n.. image:: https://secure.travis-ci.org/ska-sa/fakenewsredis.svg?branch=master\n   :target: http://travis-ci.org/ska-sa/fakenewsredis\n\n\n.. image:: https://coveralls.io/repos/ska-sa/fakenewsredis/badge.svg?branch=master\n   :target: https://coveralls.io/r/ska-sa/fakenewsredis\n\n\nfakenewsredis is a fork of `fakeredis`_, a pure-Python implementation of the\nredis-py python client that simulates talking to a redis server. It was forked\nbecause pull requests for fakeredis were languishing without being merged or\ngetting feedback.\n\nfakeredis was created for a single\npurpose: **to write unittests**.  Setting up redis is not hard, but\nmany times you want to write unittests that do not talk to an external server\n(such as redis).  This module now allows tests to simply use this\nmodule as a reasonable substitute for redis.\n\n\nHow to Use\n==========\n\nThe intent is for fakenewsredis to act as though you're talking to a real\nredis server.  It does this by storing state in the fakenewsredis module.\nFor example:\n\n.. code-block:: python\n\n  >>> import fakenewsredis\n  >>> r = fakenewsredis.FakeStrictRedis()\n  >>> r.set('foo', 'bar')\n  True\n  >>> r.get('foo')\n  'bar'\n  >>> r.lpush('bar', 1)\n  1\n  >>> r.lpush('bar', 2)\n  2\n  >>> r.lrange('bar', 0, -1)\n  [2, 1]\n\nBy storing state in the fakenewsredis module, instances can share\ndata:\n\n.. code-block:: python\n\n  >>> import fakenewsredis\n  >>> r1 = fakenewsredis.FakeStrictRedis()\n  >>> r1.set('foo', 'bar')\n  True\n  >>> r2 = fakenewsredis.FakeStrictRedis()\n  >>> r2.get('foo')\n  'bar'\n  >>> r2.set('bar', 'baz')\n  True\n  >>> r1.get('bar')\n  'baz'\n  >>> r2.get('bar')\n  'baz'\n\nBecause fakenewsredis stores state at the module level, if you\nwant to ensure that you have a clean slate for every unit\ntest you run, be sure to call `r.flushall()` in your\n``tearDown`` method.  For example::\n\n    def setUp(self):\n        # Setup fake redis for testing.\n        self.r = fakenewsredis.FakeStrictRedis()\n\n    def tearDown(self):\n        # Clear data in fakenewsredis.\n        self.r.flushall()\n\n\nFakenewsredis implements the same interface as `redis-py`_, the\npopular redis client for python, and models the responses\nof redis 2.6.\n\nUnimplemented Commands\n======================\n\nAll of the redis commands are implemented in fakenewsredis with\nthese exceptions:\n\n\nsorted_set\n----------\n\n * zscan\n\n\nhash\n----\n\n * hstrlen\n\n\nstring\n------\n\n * bitop\n * bitpos\n\n\ngeo\n---\n\n * geoadd\n * geopos\n * georadius\n * geohash\n * georadiusbymember\n * geodist\n\n\ngeneric\n-------\n\n * restore\n * dump\n * migrate\n * object\n * wait\n\n\nserver\n------\n\n * client list\n * lastsave\n * slowlog\n * debug object\n * shutdown\n * debug segfault\n * command count\n * monitor\n * client kill\n * cluster slots\n * role\n * config resetstat\n * time\n * config get\n * config set\n * save\n * client setname\n * command getkeys\n * config rewrite\n * sync\n * client getname\n * bgrewriteaof\n * slaveof\n * info\n * client pause\n * bgsave\n * command\n * dbsize\n * command info\n\n\n\ncluster\n-------\n\n * cluster getkeysinslot\n * cluster info\n * readwrite\n * cluster slots\n * cluster keyslot\n * cluster addslots\n * readonly\n * cluster saveconfig\n * cluster forget\n * cluster meet\n * cluster slaves\n * cluster nodes\n * cluster countkeysinslot\n * cluster setslot\n * cluster count-failure-reports\n * cluster reset\n * cluster failover\n * cluster set-config-epoch\n * cluster delslots\n * cluster replicate\n\n\nconnection\n----------\n\n * echo\n * select\n * quit\n * auth\n\n\nscripting\n---------\n\n * script flush\n * script kill\n * script load\n * evalsha\n * eval\n * script exists\n\n\nContributing\n============\n\nContributions are welcome.  Please see the `contributing guide`_ for\nmore details.\n\nIf you'd like to help out, you can start with any of the issues\nlabeled with `HelpWanted`_.\n\n\nRunning the Tests\n=================\n\nTo ensure parity with the real redis, there are a set of integration tests\nthat mirror the unittests.  For every unittest that is written, the same\ntest is run against a real redis instance using a real redis-py client\ninstance.  In order to run these tests you must have a redis server running\non localhost, port 6379 (the default settings).  The integration tests use\ndb=10 in order to minimize collisions with an existing redis instance.\n\n\nTo run all the tests, install the requirements file::\n\n    pip install -r requirements.txt\n\nIf you just want to run the unittests::\n\n    nosetests test_fakenewsredis.py:TestFakeStrictRedis test_fakenewsredis.py:TestFakeRedis\n\nBecause this module is attempting to provide the same interface as `redis-py`_,\nthe python bindings to redis, a reasonable way to test this to to take each\nunittest and run it against a real redis server.  fakenewsredis and the real redis\nserver should give the same result.  This ensures parity between the two.  You\ncan run these \"integration\" tests like this::\n\n    nosetests test_fakenewsredis.py:TestRealStrictRedis test_fakenewsredis.py:TestRealRedis\n\nIn terms of implementation, ``TestRealRedis`` is a subclass of\n``TestFakeRedis`` that overrides a factory method to create\nan instance of ``redis.Redis`` (an actual python client for redis)\ninstead of ``fakenewsredis.FakeStrictRedis``.\n\nTo run both the unittests and the \"integration\" tests, run::\n\n    nosetests\n\nIf redis is not running and you try to run tests against a real redis server,\nthese tests will have a result of 'S' for skipped.\n\nThere are some tests that test redis blocking operations that are somewhat\nslow.  If you want to skip these tests during day to day development,\nthey have all been tagged as 'slow' so you can skip them by running::\n\n    nosetests -a '!slow'\n\n\nRevision history\n================\n\n0.9.4\n-----\nThis is a minor bugfix and optimization release:\n- `#5 <https://github.com/ska-sa/fakenewsredis/issues/5>`_ Update to match redis-py 2.10.6\n- `#7 <https://github.com/ska-sa/fakenewsredis/issues/7>`_ Set with invalid expiry time should not set key\n- Avoid storing useless expiry times in hashes and sorted sets\n- Improve the performance of bulk zadd\n\n0.9.3\n-----\nThis is a minor bugfix release:\n- `#6 <https://github.com/ska-sa/fakenewsredis/pull/6>`_ Fix iteration over pubsub list\n- `#3 <https://github.com/ska-sa/fakenewsredis/pull/3>`_ Preserve expiry time when mutating keys\n- Fixes to typos and broken links in documentation\n\n0.9.2\n-----\nThis is the first release of fakenewsredis, based on `fakeredis`_ 0.9.0, with the following features and fixes:\n\n- fakeredis `#78 <https://github.com/jamesls/fakeredis/issues/78>`_ Behaviour of transaction() does not match redis-py\n- fakeredis `#79 <https://github.com/jamesls/fakeredis/issues/79>`_ Implement redis-py's .lock()\n- fakeredis `#90 <https://github.com/jamesls/fakeredis/issues/90>`_ HINCRBYFLOAT changes hash value type to float\n- fakeredis `#101 <https://github.com/jamesls/fakeredis/issues/101>`_ Should raise an error when attempting to get a key holding a list)\n- fakeredis `#146 <https://github.com/jamesls/fakeredis/issues/146>`_ Pubsub messages and channel names are forced to be ASCII strings on Python 2\n- fakeredis `#163 <https://github.com/jamesls/fakeredis/issues/163>`_ getset does not to_bytes the value\n- fakeredis `#165 <https://github.com/jamesls/fakeredis/issues/165>`_ linsert implementation is incomplete\n- fakeredis `#128 <https://github.com/jamesls/fakeredis/pull/128>`_ Remove `_ex_keys` mapping\n- fakeredis `#139 <https://github.com/jamesls/fakeredis/pull/139>`_ Fixed all flake8 errors and added flake8 to Travis CI\n- fakeredis `#166 <https://github.com/jamesls/fakeredis/pull/166>`_ Add type checking\n- fakeredis `#168 <https://github.com/jamesls/fakeredis/pull/168>`_ Use repr to encode floats in to_bytes\n\n.. _fakeredis: https://github.com/jamesls/fakeredis\n.. _redis-py: http://redis-py.readthedocs.org/en/latest/index.html\n.. _contributing guide: https://github.com/ska-sa/fakenewsredis/blob/master/CONTRIBUTING.rst\n.. _HelpWanted: https://github.com/ska-sa/fakenewsredis/issues?q=is%3Aissue+is%3Aopen+label%3AHelpWanted",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ska-sa/fakenewsredis",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fakenewsredis",
    "platform": "",
    "project_url": "https://pypi.org/project/fakenewsredis/",
    "release_url": "https://pypi.org/project/fakenewsredis/0.9.4/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Fake implementation of redis API for testing purposes.",
    "version": "0.9.4"
  },
  "releases": {
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "aa24fc1f3d968934fa64f06781fb1574",
          "sha256": "c884460b0b6647eb9be6c0a7054ea68db56967c64524426b6905e310065fb067"
        },
        "downloads": -1,
        "filename": "fakenewsredis-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "aa24fc1f3d968934fa64f06781fb1574",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19970,
        "upload_time": "2017-11-10T13:13:00",
        "url": "https://files.pythonhosted.org/packages/e8/bc/721664f9ee427ec08828a07510c8354cf8fe0e7555a43b731d4b43f65d2c/fakenewsredis-0.9.2.tar.gz"
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "40d6d00fd1e82b3988dc66383c410471",
          "sha256": "812744dc0124b95ffa2917725d2649d212763aa67c6d995a9f309f34b49eddfe"
        },
        "downloads": -1,
        "filename": "fakenewsredis-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "40d6d00fd1e82b3988dc66383c410471",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 38519,
        "upload_time": "2018-01-22T08:41:10",
        "url": "https://files.pythonhosted.org/packages/fd/b5/95b0bed4e23c3f9d965c8ed291592d8fa43f814869dbfcf3619705ac3e75/fakenewsredis-0.9.3.tar.gz"
      }
    ],
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3d454a8dd98581bb79d3fdb71c57a521",
          "sha256": "599a03d82e66f366f59ced14e70fd18e6133f08b850953099b7919094cb6aa99"
        },
        "downloads": -1,
        "filename": "fakenewsredis-0.9.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3d454a8dd98581bb79d3fdb71c57a521",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 38924,
        "upload_time": "2018-01-24T14:20:42",
        "url": "https://files.pythonhosted.org/packages/95/37/211afa935a338f1508c537c645bb8c01f60916a8d009d35d3a1c01d216d2/fakenewsredis-0.9.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "3d454a8dd98581bb79d3fdb71c57a521",
        "sha256": "599a03d82e66f366f59ced14e70fd18e6133f08b850953099b7919094cb6aa99"
      },
      "downloads": -1,
      "filename": "fakenewsredis-0.9.4.tar.gz",
      "has_sig": false,
      "md5_digest": "3d454a8dd98581bb79d3fdb71c57a521",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 38924,
      "upload_time": "2018-01-24T14:20:42",
      "url": "https://files.pythonhosted.org/packages/95/37/211afa935a338f1508c537c645bb8c01f60916a8d009d35d3a1c01d216d2/fakenewsredis-0.9.4.tar.gz"
    }
  ]
}