{
  "info": {
    "author": "Hynek Schlawack",
    "author_email": "hs@ox.cx",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "============================================================\nenviron_config: Configuration with env variables for Python.\n============================================================\n\n.. image:: https://travis-ci.org/hynek/environ_config.svg?branch=master\n   :target: https://travis-ci.org/hynek/environ_config\n   :alt: CI status\n\n.. image:: https://codecov.io/gh/hynek/environ_config/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/hynek/environ_config\n   :alt: Test Coverage\n\n.. begin\n\n``environ_config`` allows you to configure your applications using environment variables \u2013 as recommended in `The Twelve-Factor App <https://12factor.net/config>`_ methodology \u2013 with elegant, boilerplate-free, and declarative code:\n\n.. code-block:: pycon\n\n  >>> import environ\n  >>> # Extracts secrets from Vault-via-envconsul: 'secret/your-app':\n  >>> vault = environ.secrets.VaultEnvSecrets(vault_prefix=\"SECRET_YOUR_APP\")\n  >>> @environ.config(prefix=\"APP\")\n  ... class AppConfig:\n  ...    @environ.config\n  ...    class DB:\n  ...        name = environ.var(\"default_db\")\n  ...        host = environ.var(\"default.host\")\n  ...        port = environ.var(5432, convert=int)  # Use attrs's converters and validators!\n  ...        user = environ.var(\"default_user\")\n  ...        password = vault.secret()\n  ...\n  ...    env = environ.var()\n  ...    lang = environ.var(name=\"LANG\")  # It's possible to overwrite the names of variables.\n  ...    db = environ.group(DB)\n  ...    awesome = environ.bool_var()\n  >>> cfg = environ.to_config(\n  ...     AppConfig,\n  ...     environ={\n  ...         \"APP_ENV\": \"dev\",\n  ...         \"APP_DB_HOST\": \"localhost\",\n  ...         \"LANG\": \"C\",\n  ...         \"APP_AWESOME\": \"yes\",  # true and 1 work too, everything else is False\n  ...         # Vault-via-envconsul-style var name:\n  ...         \"SECRET_YOUR_APP_DB_PASSWORD\": \"s3kr3t\",\n  ... })  # Uses os.environ by default.\n  >>> cfg\n  AppConfig(env='dev', lang='C', db=AppConfig.DB(name='default_db', host='localhost', port=5432, user='default_user', password=<SECRET>), awesome=True)\n  >>> cfg.db.password\n  's3kr3t'\n\n\nFeatures\n========\n\n- Declarative & boilerplate-free.\n- Nested config from flat env variable names.\n- Default & mandatory values: enforce configuration structure without writing a line of code.\n- Helpful debug logging that will tell you which variables are present and what ``environ_config`` is looking for.\n- Built on top of `attrs <http://www.attrs.org/>`_ which gives you data validation and conversion for free.\n- Plugable secrets extraction.\n  Ships with:\n\n  * `HashiCorp Vault <https://www.vaultproject.io>`_ support via `envconsul <https://github.com/hashicorp/envconsul>`_.\n  * INI files, because secrets in env variables are `icky <https://diogomonica.com/2017/03/27/why-you-shouldnt-use-env-variables-for-secret-data/>`_.\n\n\nProject Information\n===================\n\n``environ_config`` is released under the `MIT <https://choosealicense.com/licenses/mit/>`_ license.\nIt targets Python 2.7, 3.5 and newer, and PyPy.\n\n\nRelease Information\n===================\n\n17.1.0 (2017-12-14)\n-------------------\n\nInitial release.\n\n`Full changelog <https://github.com/hynek/environ_configen/stable/changelog.html>`_.\n\nCredits\n=======\n\n``environ_config`` is written and maintained by `Hynek Schlawack <https://hynek.me/>`_.\n\nThe development is kindly supported by `Variomedia AG <https://www.variomedia.de/>`_.\n\nA full list of contributors can be found in `GitHub's overview <https://github.com/hynek/environ_config/graphs/contributors>`_.\n\n``environ_config`` wouldn't be possible without the `attrs project <http://www.attrs.org>`_.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/hynek/environ_config",
    "keywords": "app,config,env,cfg",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "environ-config",
    "platform": "",
    "project_url": "https://pypi.org/project/environ-config/",
    "release_url": "https://pypi.org/project/environ-config/17.1.0/",
    "requires_dist": [
      "coverage; extra == 'test'",
      "pytest; extra == 'test'",
      "attrs (>=16.3.0)"
    ],
    "requires_python": "",
    "summary": "Boilerplate-free configuration with env variables.",
    "version": "17.1.0"
  },
  "releases": {
    "17.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fb68b9fd2b098ec16b2b833abb1afe63",
          "sha256": "aec5d85a7d0bb788c01c13fe537e0628b175dafb67a5cc5650ed5f407c3e5508"
        },
        "downloads": -1,
        "filename": "environ_config-17.1.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "fb68b9fd2b098ec16b2b833abb1afe63",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9623,
        "upload_time": "2017-12-14T13:57:25",
        "url": "https://files.pythonhosted.org/packages/04/43/4b79076e141761f3b069a11c3095f706ca32bba16230b67287cecf401530/environ_config-17.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "93010e15d6172610b26b0f2e814724e2",
          "sha256": "ff8b466eb4fe192c04ed672430bc8cfd9d4ee087536554f928010bf94c161fbe"
        },
        "downloads": -1,
        "filename": "environ_config-17.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "93010e15d6172610b26b0f2e814724e2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10232,
        "upload_time": "2017-12-14T13:57:27",
        "url": "https://files.pythonhosted.org/packages/a4/36/182c10ec64cf3effe2b0f80d21a889c15aceb90308d9f5722d914852a655/environ_config-17.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fb68b9fd2b098ec16b2b833abb1afe63",
        "sha256": "aec5d85a7d0bb788c01c13fe537e0628b175dafb67a5cc5650ed5f407c3e5508"
      },
      "downloads": -1,
      "filename": "environ_config-17.1.0-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "fb68b9fd2b098ec16b2b833abb1afe63",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 9623,
      "upload_time": "2017-12-14T13:57:25",
      "url": "https://files.pythonhosted.org/packages/04/43/4b79076e141761f3b069a11c3095f706ca32bba16230b67287cecf401530/environ_config-17.1.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "93010e15d6172610b26b0f2e814724e2",
        "sha256": "ff8b466eb4fe192c04ed672430bc8cfd9d4ee087536554f928010bf94c161fbe"
      },
      "downloads": -1,
      "filename": "environ_config-17.1.0.tar.gz",
      "has_sig": true,
      "md5_digest": "93010e15d6172610b26b0f2e814724e2",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 10232,
      "upload_time": "2017-12-14T13:57:27",
      "url": "https://files.pythonhosted.org/packages/a4/36/182c10ec64cf3effe2b0f80d21a889c15aceb90308d9f5722d914852a655/environ_config-17.1.0.tar.gz"
    }
  ]
}