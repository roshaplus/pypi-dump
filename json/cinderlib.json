{
  "info": {
    "author": "Gorka Eguileor",
    "author_email": "geguileo@redhat.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "Cinder Library\n===============================\n\n\n\n.. image:: https://img.shields.io/pypi/v/cinderlib.svg\n   :target: https://pypi.python.org/pypi/cinderlib\n\n.. image:: https://img.shields.io/travis/akrog/cinderlib.svg\n   :target: https://travis-ci.org/akrog/cinderlib\n\n.. image:: https://readthedocs.org/projects/cinderlib/badge/?version=latest\n   :target: https://cinderlib.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n.. image:: https://img.shields.io/pypi/pyversions/cinderlib.svg\n   :target: https://pypi.python.org/pypi/cinderlib\n\n.. image:: https://pyup.io/repos/github/akrog/cinderlib/shield.svg\n     :target: https://pyup.io/repos/github/akrog/cinderlib/\n     :alt: Updates\n\n.. image:: https://img.shields.io/:license-apache-blue.svg\n   :target: http://www.apache.org/licenses/LICENSE-2.0\n\n\nIntroduction\n------------\n\nCinder Library is a Python library that allows using storage drivers outside of\nCinder.\n\n* Free software: Apache Software License 2.0\n* Documentation: https://cinderlib.readthedocs.io.\n\nThis library is currently at an Alpha status and is primarily intended as a\nproof of concept at this stage.  While some drivers have been manually\nvalidated most drivers have not, so there's a good chance that they could\nexperience issues.\n\nWhen using this library one should be aware that this is in no way close to the\nrobustness or feature richness that the Cinder project provides.  Some of the\nmore obvious limitations are:\n\n* There are no argument validation on the methods so it's a classic GIGO_\n  library.\n* The logic has been kept to a minimum and higher functioning logic is expected\n  to be in the caller. For example you can delete a volume that still has\n  snapshots, and the end results will depend on the Cinder driver and the\n  storage array, so you will have some that will delete the snapshots and\n  others that will leave them there.\n* There is no CI, or unit tests for that matter, and certainly nothing so fancy\n  as third party vendor CIs, so things being broken could be considered the\n  norm.\n* Only a subset number of basic operations are supported by the library.\n\nThe minimum version of Cinder required by this library is Pike; although,\ndepending on my my availability, I may make the library support Ocata as well.\n\nSince it's using Cinder's code the library is still bound by the same\nrestrictions and behaviors of the drivers running under the standard Cinder\nservices, which means that not all operations will behave consistently across\ndrivers.  For example you can find drivers where cloning is a cheap operation\nperformed by the storage array whereas other will actually create a new volume,\nattach the source and the new volume and perform a full copy of the data.\n\nIf a driver in Cinder requires external libraries or packages they will also\nbe required by the library and will need to be manually installed.\n\nFor more detailed information please refer to the `official project\ndocumentation`_ and `OpenStack's Cinder volume driver configuration\ndocumentation`_.\n\nDue to the limited access to Cinder backends and time constraints the list of\ndrivers that have been manually tested are (I'll try to test more):\n\n- LVM\n- XtremIO\n- Kaminario\n\nIf you try the library with another storage array I would appreciate a note on\nthe library version, Cinder release, and results of your testing.\n\nFeatures\n--------\n\n* Use a Cinder driver without running a DBMS, Message broker, or Cinder\n  service.\n* Using multiple simultaneous drivers on the same program.\n* Stateless: Support full serialization of objects and context to json or\n  string so the state can be restored.\n* Basic operations support:\n  - Create volume\n  - Delete volume\n  - Extend volume\n  - Clone volume\n  - Create snapshot\n  - Delete snapshot\n  - Create volume from snapshot\n  - Connect volume\n  - Disconnect volume\n  - Local attach\n  - Local detach\n  - Validate connector\n\nExample\n-------\n\nThe following example uses CentOS 7 and the Cinder LVM driver, which should be\nthe easiest to setup and test.\n\nFirst you need to setup your system::\n\n    # yum install -y centos-release-openstack-pike\n    # yum install -y openstack-cinder targetcli python-pip\n    # pip install cinderlib\n    # dd if=/dev/zero of=cinder-volumes bs=1048576 seek=22527 count=1\n    # lodevice=`losetup -f`\n    # losetup $lodevice ./cinder-volumes\n    # pvcreate $lodevice\n    # vgcreate cinder-volumes $lodevice\n    # vgscan --cache\n\nThen you need to run `python`  with a passwordless sudo user (required to\ncontrol LVM and do the attach) and execute:\n\n.. code-block:: python\n\n    import cinderlib as cl\n    from pprint import pprint as pp\n\n    # We setup the library to setup the driver configuration when serializing\n    cl.setup(output_all_backend_info=True)\n\n    # Initialize the LVM driver\n    lvm = cl.Backend(volume_driver='cinder.volume.drivers.lvm.LVMVolumeDriver',\n                     volume_group='cinder-volumes',\n                     iscsi_protocol='iscsi',\n                     iscsi_helper='lioadm',\n                     volume_backend_name='lvm_iscsi')\n\n    # Show the LVM backend stats\n    pp(lvm.stats())\n\n    # Create a 1GB volume\n    vol = lvm.create_volume(1, name='lvm-vol')\n\n    # Export, initialize, and do a local attach of the volume\n    attach = vol.attach()\n\n    pp('Volume %s attached to %s' % (vol.id, attach.path))\n\n    # Snapshot it\n    snap = vol.create_snapshot('lvm-snap')\n\n    # Save the whole environment to a file\n    with open('cinderlib-test.txt', 'w') as f:\n        f.write(cl.jsons())\n\n    # Exit python\n    exit()\n\nNow we can check that the logical volume is there, exported, and attached to\nour system::\n\n    # lvdisplay\n    # targetcli ls\n    # iscsiadm -m session\n    # lsblk\n\nAnd now let's run a new `python` interpreter and clean things up:\n\n.. code-block:: python\n\n    import cinderlib as cl\n\n    # Get the whole environment up\n    with open('cinderlib-test.txt') as f:\n        backends = cl.load(f.read())\n\n    # Get the volume reference we loaded from file and detach\n    vol = list(backends[0].volumes)[0]\n    vol.detach()\n\n    # Delete the snapshot and delete it\n    snap = list(vol.snapshots)[0]\n    snap.delete()\n\n    # Finally delete the volume\n    vol.delete()\n\n\n\n.. _GIGO: https://en.wikipedia.org/wiki/Garbage_in,_garbage_out\n.. _official project documentation: https://readthedocs.org/projects/cinderlib/badge/?version=latest\n.. _OpenStack's Cinder volume driver configuration documentation: https://docs.openstack.org/cinder/latest/configuration/block-storage/volume-drivers.html\n\n\n=======\nHistory\n=======\n\n0.1.0 (2017-11-03)\n------------------\n\n* First release on PyPI.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/akrog/cinderlib",
    "keywords": "cinderlib",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cinderlib",
    "platform": "",
    "project_url": "https://pypi.org/project/cinderlib/",
    "release_url": "https://pypi.org/project/cinderlib/0.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Cinder Library allows using storage drivers outside of Cinder.",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ad4a795ba09dc0fa2c2d503b947892d1",
          "sha256": "ab438c100c505705f6d15b85fd1080714e378ac2a180dbd9a4faedd1d890e797"
        },
        "downloads": -1,
        "filename": "cinderlib-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ad4a795ba09dc0fa2c2d503b947892d1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24515,
        "upload_time": "2017-11-03T16:08:49",
        "url": "https://files.pythonhosted.org/packages/77/39/5d82c797946a2cbfc31a4083ef012015e57c4b7d18a76f7349dd672bf0a2/cinderlib-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ad4a795ba09dc0fa2c2d503b947892d1",
        "sha256": "ab438c100c505705f6d15b85fd1080714e378ac2a180dbd9a4faedd1d890e797"
      },
      "downloads": -1,
      "filename": "cinderlib-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ad4a795ba09dc0fa2c2d503b947892d1",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 24515,
      "upload_time": "2017-11-03T16:08:49",
      "url": "https://files.pythonhosted.org/packages/77/39/5d82c797946a2cbfc31a4083ef012015e57c4b7d18a76f7349dd672bf0a2/cinderlib-0.1.0.tar.gz"
    }
  ]
}