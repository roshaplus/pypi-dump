{
  "info": {
    "author": "Laurent Bachelier",
    "author_email": "laurent@bachelier.name",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development :: Testing"
    ],
    "description": "===========\nxunitparser\n===========\n\nDescription\n-----------\n\nxunitparser reads a JUnit/XUnit XML file and maps it to Python objects.\nIt tries to use the objects available in the standard ``unittest`` module.\n\n\nUsage\n-----\n\n::\n\n    import xunitparser\n    ts, tr = xunitparser.parse(open('/path/to/unit.xml'))\n\n\n``ts`` is a ``TestSuite`` class, containing ``TestCase`` classes.\n``tr`` is a ``TestResult`` class.\n\nYou can change the classes used (though they probably would not work unless\nthey inherit from the ``xunitparser`` ones) by using your own\n``xunitparser.Parser`` class and changing the ``*_CLASS`` variables.\n\nSome helpful properties are added to the ``TestCase`` class::\n\n    for tc in ts:\n        print('Class %s, method %s' % (tc.classname, tc.methodname))\n        if tc.good:\n            print('went well...', 'but did not run.' if tc.skip else '')\n        else:\n            print('went wrong.')\n\nFor more, please read the source code - it is very minimal.\nThe classes also inherit from the `unittest`__ module so it is actually\na good reference of what you can do with ``xunitparser``.\n\n__ http://docs.python.org/library/unittest.html\n\n\nChanges\n-------\n\n+ 1.3.0\n\n  - Multiple results in a single TestCase are seen as one.\n    The previous way was never validated by real-life examples.\n  - Handle system-out / system-err at the testsuite level\n\n\nDevelopment\n-----------\n\nContributions can be sent in the form of git patches, to laurent@bachelier.name.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://git.p.engu.in/laurentb/xunitparser/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xunitparserx",
    "platform": "",
    "project_url": "https://pypi.org/project/xunitparserx/",
    "release_url": "https://pypi.org/project/xunitparserx/1.3.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Read JUnit/XUnit XML files and map them to Python objects, work for both python2 and python3",
    "version": "1.3.3"
  },
  "releases": {
    "1.3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d1109ddcd5a8a2163349fb12676d3d3d",
          "sha256": "0137858cd153046e053ad507e5931fea9360b861ed32edb500bda11a00a0f2fa"
        },
        "downloads": -1,
        "filename": "xunitparserx-1.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d1109ddcd5a8a2163349fb12676d3d3d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14414,
        "upload_time": "2017-12-13T13:35:46",
        "url": "https://files.pythonhosted.org/packages/da/88/147fd2f81e308a8a5245338a96415eb0e6c7d561d8eb92c3a6120a3a3067/xunitparserx-1.3.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d1109ddcd5a8a2163349fb12676d3d3d",
        "sha256": "0137858cd153046e053ad507e5931fea9360b861ed32edb500bda11a00a0f2fa"
      },
      "downloads": -1,
      "filename": "xunitparserx-1.3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "d1109ddcd5a8a2163349fb12676d3d3d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 14414,
      "upload_time": "2017-12-13T13:35:46",
      "url": "https://files.pythonhosted.org/packages/da/88/147fd2f81e308a8a5245338a96415eb0e6c7d561d8eb92c3a6120a3a3067/xunitparserx-1.3.3.tar.gz"
    }
  ]
}