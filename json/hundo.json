{
  "info": {
    "author": "Joe Brown",
    "author_email": "joe.brown@pnnl.gov",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. figure:: resources/logo.png\n   :alt: logo\n\n   logo\n\n|DOI| |Documentation Status| |bioconda-badge|\n\n-  Performs quality control based on quality, can trim adapters, and\n   remove sequences matching a contaminant database\n-  Handles paired-end read merging\n-  Integrates *de novo* and reference-based chimera filtering\n-  Clusters sequences and annotates using databases that are downloaded\n   as needed\n-  Generates standard outputs for these data like a newick tree, a\n   tabular OTU table with taxonomy, and .biom.\n\nThis workflow is built using\n`Snakemake <https://snakemake.readthedocs.io/en/stable/>`__ and makes\nuse of `Bioconda <https://bioconda.github.io/>`__ to install its\ndependencies.\n\nDocumentation\n=============\n\nFor complete documentation and install instructions, see:\n\nhttps://hundo.readthedocs.io\n\nInstall\n=======\n\nThis protocol leverages the work of Bioconda and depends on ``conda``.\nFor complete setup of these, please see:\n\nhttps://bioconda.github.io/#using-bioconda\n\nReally, you just need to make sure ``conda`` is executable and you've\nset up your channels (numbers 1 and 2). Then:\n\n::\n\n    conda install python=3.5 pyyaml snakemake biopython biom-format=2.1.5\n    pip install hundo\n\nUsage\n=====\n\nRunning samples through annotation requires that input FASTQs be\npaired-end, named in a semi-conventional style starting sample ID,\ncontain \"\\_R1\" (or \"\\_r1\") and \"\\_R2\" (or \"\\_r2\") index identifiers, and\nhave an extension \".fastq\" or \".fq\". The files may be gzipped and end\nwith \".gz\". By default, both R1 and R2 need to be larger than 10K in\nsize. This cutoff is arbitrary and can be set using\n``--prefilter-file-size``.\n\nUsing the example data of the mothur SOP located in our tests directory,\nwe can annotate across SILVA using:\n\n::\n\n    cd example\n    hundo annotate \\\n        --filter-adapters qc_references/adapters.fa.gz \\\n        --filter-contaminants qc_references/phix174.fa.gz \\\n        --out-dir mothur_sop_silva \\\n        --database-dir annotation_references \\\n        --reference-database silva \\\n        mothur_sop_data\n\nDependencies are installed by default in the results directory defined\non the command line as ``--out-dir``. If you want to re-use dependencies\nacross many analyses and not have to re-install each time you update the\noutput directory, use Snakemake's ``--conda-prefix``:\n\n::\n\n    hundo annotate \\\n        --out-dir mothur_sop_silva \\\n        --database-dir annotation_references \\\n        --reference-database silva \\\n        mothur_sop_data \\\n        --conda-prefix /Users/brow015/devel/hundo/example/conda\n\nOutput\n======\n\n**OTU.biom**\n\nBiom table with raw counts per sample and their associated taxonomic\nassignment formatted to be compatible with downstream tools like\nphyloseq.\n\n**OTU.fasta**\n\nRepresentative DNA sequences of each OTU.\n\n**OTU.tree**\n\nNewick tree representation of aligned OTU sequences.\n\n**OTU.txt**\n\nTab-delimited text table with columns OTU ID, a column for each sample,\nand taxonomy assignment in the final column as a comma delimited list.\n\n**OTU\\_aligned.fasta**\n\nOTU sequences after alignment using Clustal Omega.\n\n**all-sequences.fasta**\n\nQuality-controlled, dereplicated DNA sequences of all samples. The\nheader of each record identifies the sample of origin and the count\nresulting from dereplication.\n\n**blast-hits.txt**\n\nThe BLAST assignments per OTU sequence.\n\n**summary.html**\n\nCaptures and summarizes data of the experimental dataset. Things like\nsequence quality:\n\n.. figure:: resources/sequence_quality.png\n   :alt: plot\n\n   plot\n\nAnd counts per sample at varying stages of pre-processing:\n\n.. figure:: resources/count_summary.png\n   :alt: plot\n\n   plot\n\nTaxonomies are also summarized per sample across phylum, class, and\norder:\n\n.. figure:: resources/taxonomy_summary.png\n   :alt: plot\n\n   plot\n\n.. |DOI| image:: https://zenodo.org/badge/83449413.svg\n   :target: https://zenodo.org/badge/latestdoi/83449413\n.. |Documentation Status| image:: https://readthedocs.org/projects/hundo/badge/?version=latest\n   :target: http://hundo.readthedocs.io/en/latest/?badge=latest\n.. |bioconda-badge| image:: https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat-square\n   :target: http://bioconda.github.io\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/pnnl/hundo",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hundo",
    "platform": "",
    "project_url": "https://pypi.org/project/hundo/",
    "release_url": "https://pypi.org/project/hundo/1.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Amplicon processing protocol",
    "version": "1.1.0"
  },
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e1282dec5e5ebcaa636ead0090e74459",
          "sha256": "92cec6cfad4201ac3d99401463e2b12e1c6c634463c74a0f09aa9ef90db753f1"
        },
        "downloads": -1,
        "filename": "hundo-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1282dec5e5ebcaa636ead0090e74459",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 28232,
        "upload_time": "2017-10-14T02:43:07",
        "url": "https://files.pythonhosted.org/packages/50/7c/3dc555f2a0b118c380a753aa70c526be624e518d7929387fefcc22d8aef5/hundo-1.1.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "784bb2c5d0ec3be0dc8aeaf03c243757",
          "sha256": "1cec8c691ff5d3a6497952019bc1558568b34b8a438379d02f75d4142b673e83"
        },
        "downloads": -1,
        "filename": "hundo-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "784bb2c5d0ec3be0dc8aeaf03c243757",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23844,
        "upload_time": "2017-10-14T02:43:08",
        "url": "https://files.pythonhosted.org/packages/11/e8/2a5e5fdfb118bd5e8f78b112a8e0c1e820045ea5688b9e54d9aadce1e432/hundo-1.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e1282dec5e5ebcaa636ead0090e74459",
        "sha256": "92cec6cfad4201ac3d99401463e2b12e1c6c634463c74a0f09aa9ef90db753f1"
      },
      "downloads": -1,
      "filename": "hundo-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e1282dec5e5ebcaa636ead0090e74459",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 28232,
      "upload_time": "2017-10-14T02:43:07",
      "url": "https://files.pythonhosted.org/packages/50/7c/3dc555f2a0b118c380a753aa70c526be624e518d7929387fefcc22d8aef5/hundo-1.1.0-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "784bb2c5d0ec3be0dc8aeaf03c243757",
        "sha256": "1cec8c691ff5d3a6497952019bc1558568b34b8a438379d02f75d4142b673e83"
      },
      "downloads": -1,
      "filename": "hundo-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "784bb2c5d0ec3be0dc8aeaf03c243757",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 23844,
      "upload_time": "2017-10-14T02:43:08",
      "url": "https://files.pythonhosted.org/packages/11/e8/2a5e5fdfb118bd5e8f78b112a8e0c1e820045ea5688b9e54d9aadce1e432/hundo-1.1.0.tar.gz"
    }
  ]
}