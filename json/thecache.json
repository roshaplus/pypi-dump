{
  "info": {
    "author": "Lars Kellogg-Stedman",
    "author_email": "lars@oddbit.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "This is a simple file-based cache implementation that is meant for\nsimple cases where you want to cache some data (maybe you want to\navoid hammering an API server with repeated requests) but you don't\nwant the features and associated configuration tasks associated with a\nmore feature-ful cache module.\n\n## Usage\n\nTo get yourself a cache:\n\n    >>> from thecache.cache import Cache\n    >>> mycache = Cache(__name__)\n\nTo use the cache for small amounts of data (for memory efficient\noperations, read the more detailed explanations below):\n\n    >>> mycache.put('some key', 'a chunk of data')\n    >>> if mycache.has('some key'):\n    ...   print 'Content:', mycache.get('some key')\n    ... else:\n    ...   print 'Key \"some key\" was not in cache'\n    ... \n    Content: a chunk of data\n\nOr:\n\n    >>> try:\n    ...   print 'Content:', mycache.get('some key')\n    ... except KeyError:\n    ...   print 'Key \"some key\" was not in cache'\n    ... \n    Content: a chunk of data\n\n## Storing data\n\n- `store` (also `put`)\n\n  This will write the content of a Python variable to the cache.\n\n- `store_fd`\n\n  This will read from an open file in `chunksize` byte chunks and\n  write the data to the cache.\n\n- `store_iter`\n\n  This will iterate over `content`, writing each chunk of data to the\n  cache.  This is a good choice for handling a response from the\n  `requests` library in streaming mode:\n\n        >>> import requests\n        >>> r = requests.get(url, stream=True)\n        >>> c.store_iter(url, r.iter_content(chunk_size=8192))\n\n- `store_lines`\n\n  This is almost exactly like `store_iter`, except it appends a\n  newline after writing each chunk of data.  This is useful for\n  writing a list of strings to the cache to be read back using the\n  `load_lines` method:\n\n        >>> mydata = ['one', 'two', 'three', 'four']\n        >>> c.store_lines('mykey', mydata)\n\n## Reading data\n\nAll of the following functions raise `KeyError` if you request a key\nthat cannot be found in the cache.\n\n- `load` (also `get`)\n\n  This will read data from the cache into memory and return the data\n  to the caller.\n\n- `load_lines`\n\n  This will return an iterator over the lines store in the cache.  The\n  underlying file will be closed automatically when all lines have\n  been read.\n\n- `load_iter`\n\n  This will return an iterator that yields data in `chunksize` byte\n  chunks.  The underlying file will be closed automatically when all\n  the data has been read.\n\n- `load_fd`\n\n  This will return an open file to the caller.  Is is the caller's job\n  to close the file when it is no longer needed.\n\n## Contributing\n\nTo report problems with this code, use the [issue tracker][].\nChanges may be submitted as GitHub pull requests.\n\n[issue tracker]: https://github.com/larsks/thecache/issues\n\n## License\n\nthecache, a simple Python cache implementation  \nCopyright (C) 2016 Lars Kellogg-Stedman <lars@oddbit.com>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/larsks/thecache",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "thecache",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/thecache/",
    "release_url": "https://pypi.org/project/thecache/0.3/",
    "requires_python": null,
    "summary": "UNKNOWN",
    "version": "0.3"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b55b49e4aaff01b67c3d43e88ecc1adb",
          "sha256": "356919cd566753db34d9092c48bdbf9a9a99203cfd647aa1528e721a865fbe3c"
        },
        "downloads": 445,
        "filename": "thecache-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b55b49e4aaff01b67c3d43e88ecc1adb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16257,
        "upload_time": "2016-02-22T20:52:24",
        "url": "https://files.pythonhosted.org/packages/94/2d/4de1ba594d436d9368b76e3d2d1d2fd63016a1b8202896546f6c7346a38c/thecache-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6095e19b76b9cc3c213e9f07bdef3db3",
          "sha256": "7801453e8f5ce50b2f2e7ab72e8cb047f274371f3ef2856ba438c97479db7532"
        },
        "downloads": 114,
        "filename": "thecache-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6095e19b76b9cc3c213e9f07bdef3db3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16316,
        "upload_time": "2016-02-22T20:59:40",
        "url": "https://files.pythonhosted.org/packages/db/b1/192ade5aa58bbebe03eaf0fe2c9110d737a1b94997f4bf513414383c0b56/thecache-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5efbffd551740ecec5e0cd1dd9231e06",
          "sha256": "7bd23eb24abbd7ee37505ba578a8dcffd0e433e9618e923798bec7b7ee59c0a7"
        },
        "downloads": 140,
        "filename": "thecache-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5efbffd551740ecec5e0cd1dd9231e06",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16863,
        "upload_time": "2016-02-22T22:14:10",
        "url": "https://files.pythonhosted.org/packages/22/41/5519c8b474581d8868ac28aec388cc3c58c567f01a7192a859695768a477/thecache-0.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5efbffd551740ecec5e0cd1dd9231e06",
        "sha256": "7bd23eb24abbd7ee37505ba578a8dcffd0e433e9618e923798bec7b7ee59c0a7"
      },
      "downloads": 140,
      "filename": "thecache-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "5efbffd551740ecec5e0cd1dd9231e06",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 16863,
      "upload_time": "2016-02-22T22:14:10",
      "url": "https://files.pythonhosted.org/packages/22/41/5519c8b474581d8868ac28aec388cc3c58c567f01a7192a859695768a477/thecache-0.3.tar.gz"
    }
  ]
}