{
  "info": {
    "author": "Tuomas Airaksinen",
    "author_email": "tuomas.airaksinen@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6"
    ],
    "description": ".. image:: https://travis-ci.org/tuomas2/serviceform.svg?branch=master\n   :target: https://travis-ci.org/tuomas2/serviceform\n\n.. image:: https://coveralls.io/repos/github/tuomas2/serviceform/badge.svg?branch=master\n   :target: https://coveralls.io/github/tuomas2/serviceform?branch=master\n\n.. image:: https://www.versioneye.com/user/projects/5922f7e68dcc41003af21f61/badge.svg\n   :target: https://www.versioneye.com/user/projects/5922f7e68dcc41003af21f61\n\n===========\nServiceform\n===========\n\nRELEASE IS STILL WORK IN PROGRESS. PLEASE WAIT...\n\n\nWeb application for collecting data from volunteers of willingness to participate.\n\n\n=============================\nInstall as Django application\n=============================\n\nInstall serviceform and its requirements to your virtualenv::\n\n   pip install serviceform\n\nsettings.py modifications\n=========================\n\nIn your Django application's settings.py perform the following modifications.\nAdd following applications to INSTALLED_APPS::\n\n    INSTALLED_APPS = [\n        'grappelli' # optional but recommended, needs django-grappelli\n\n        ...\n\n        'nested_admin',\n        'compressor',\n        'crispy_forms',\n        'guardian',\n        'serviceform.serviceform',\n        'serviceform.tasks',\n        'select2'\n    ]\n\nSettings for Django-compress::\n\n    COMPRESS_PRECOMPILERS = (\n        ('text/x-scss', 'django_libsass.SassCompiler'),\n    )\n\n    STATICFILES_FINDERS = (\"django.contrib.staticfiles.finders.FileSystemFinder\",\n                           \"django.contrib.staticfiles.finders.AppDirectoriesFinder\",\n                           \"compressor.finders.CompressorFinder\",\n    )\n\nSettings for crispy-forms::\n\n   CRISPY_TEMPLATE_PACK = 'bootstrap3'\n\nSettings for Django guardian::\n\n    AUTHENTICATION_BACKENDS = (\n        'django.contrib.auth.backends.ModelBackend', # default\n        'guardian.backends.ObjectPermissionBackend',\n    )\n\nDatabase settings, we need postgresql!::\n\n    DATABASES = {\n        'default': {\n            'ENGINE': 'django.db.backends.postgresql_psycopg2',\n            'NAME': 'serviceform',\n            'USER': 'serviceform',\n            'PASSWORD': 'django',\n            'HOST': 'db',\n            'PORT': 5433,\n        }\n\nWe need to set up named caches::\n\n    CACHES = {\n        'default': {\n            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',\n            'LOCATION': 'default',\n        },\n        'persistent': {\n            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',\n            'LOCATION': 'persistent',\n        },\n        'cachalot': {\n            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',\n            'LOCATION': 'cachalot',\n        }\n    }\n\nIn production, use redis or similar instead at least for persistent cache!\n\nSet up static root::\n\n   STATIC_ROOT = os.path.join(BASE_DIR, 'static')\n\nSet up serviceform specific settings::\n\n    SERVER_URL=\"http://localhost:8000\"\n    # random capital letters that are used to generate unpredictable\n    # links from ids\n    CODE_LETTERS='ABCDE'\n\nurls.py modifications\n=====================\n\nAdd urls that are specific to grappelli (optional), nested_admin, select2 and serviceform::\n\n    urlpatterns = [\n        url(r'^admin/', admin.site.urls),\n\n        url(r'^_grappelli/', include('grappelli.urls')), # optional\n        url(r'^_nested_admin/', include('nested_admin.urls')),\n        url(r'^_select2/', include('select2.urls')),\n\n        url(r'', include('serviceform.serviceform.urls')),\n    ]\n\n\n=============================\nProduction guide using Docker\n=============================\n\nRequirements\n============\n\n - Machine that runs docker\n - Your own web server with SSL sertificates and associated domain name\n - Sendgrid email account for automatic sending emails.\n   Your domain DNS settings need to be set up correctly for sendgrid too.\n - (optional) Sentry / sentry account\n\n\nDocker environment file\n=======================\n\nPut environment variables in file serviceform-env.list::\n\n    PRODUCTION=1\n    # You can choose your credentials here. Initial database will be made according to these\n    # settings\n    POSTGRES_USER=serviceform\n    POSTGRES_DB=serviceform\n    POSTGRES_PASSWORD=django\n    # Django's secret key. Use generator such as this:\n    # http://www.miniwebtool.com/django-secret-key-generator/\n    SECRET_KEY=asdf\n    # API key to Sendgrid email sending service.\n    SENDGRID_API_KEY=asdf\n    # Sentry authentication. Leave this out if you don't have Sentry account.\n    RAVEN_DSN=https://asdf\n    # Your service will be at https://SERVICEFORM_HOST\n    SERVICEFORM_HOST=yourhost.com\n    ADMIN_NAME=Your Name\n    ADMIN_EMAIL=your.name@yourhost.com\n    SERVER_EMAIL=noreply@yourhost.com\n    # This code is used to generate unpredictable id, choose 5 random letters here\n    CODE_LETTERS=ABCDE\n    # Available: en, fi\n    LANGUAGE_CODE=fi\n    TIME_ZONE=Europe/Helsinki\n\nFor the following commands set first environment variable\n\nexport SERVICEFORM_ENV_FILE=/path_to/serviceform-env.list\n\n.. _external:\n\nExternal services\n=================\n\nDocker commands to start external services needed by Serviceform\n\nPostgresql::\n\n   docker run -d --name serviceform-db \\\n            --env-file $SERVICEFORM_ENV_FILE \\\n            --volume serviceform-db:/var/lib/postgresql \\\n            postgres:9.6.2\n\n\nRedis::\n\n   docker run -d --name serviceform-redis \\\n            --volume serviceform-redis:/data \\\n            redis:3.2.8-alpine\n\n\nDjango services\n===============\n\nDocker commands to start services bundled within serviceform docker image.\n\nBuild serviceform docker image first::\n\n    docker build -t tuomasairaksinen/serviceform:latest .\n\nOr alternatively, pull it from the repository::\n\n    docker pull tuomasairaksinen/serviceform:latest\n\n.. _upgrade:\n\nInitialization / upgrade.\n-------------------------\n\nThis migrates database and (re-)creates static files in shared volume (for nginx)::\n\n    docker run --rm -u root \\\n            --link serviceform-db:db \\\n            --link serviceform-redis:redis \\\n            --env-file $SERVICEFORM_ENV_FILE \\\n            --volume serviceform-media:/code/media \\\n            --volume serviceform-static:/code/static \\\n            --volume serviceform-nginx-config:/nginx-config \\\n            --volume serviceform-celery-beat-store:/celery-beat-store \\\n            tuomasairaksinen/serviceform:latest upgrade\n\nCommand can be safely run multiple times.\n\n.. _services:\n\nServiceform services\n--------------------\n\nCelery::\n\n   docker run -d --name serviceform-celery \\\n            --link serviceform-db:db \\\n            --link serviceform-redis:redis \\\n            --env-file $SERVICEFORM_ENV_FILE \\\n            tuomasairaksinen/serviceform:latest celery\n\n\nCelery-beat::\n\n    docker run -d --name serviceform-celery-beat \\\n            --link serviceform-db:db \\\n            --link serviceform-redis:redis \\\n            --volume serviceform-celery-beat-store:/store \\\n            --env-file $SERVICEFORM_ENV_FILE \\\n            tuomasairaksinen/serviceform:latest celery-beat\n\nTask-processor::\n\n   docker run -d --name serviceform-task-processor \\\n            --link serviceform-db:db \\\n            --link serviceform-redis:redis \\\n            --env-file $SERVICEFORM_ENV_FILE \\\n            tuomasairaksinen/serviceform:latest task-processor\n\nSend-emails::\n\n    docker run -d --name serviceform-send-emails \\\n            --link serviceform-db:db \\\n            --env-file $SERVICEFORM_ENV_FILE \\\n            tuomasairaksinen/serviceform:latest send-emails\n\nApp::\n\n    docker run -d --name serviceform-app \\\n            --link serviceform-db:db \\\n            --link serviceform-redis:redis \\\n            --env-file $SERVICEFORM_ENV_FILE \\\n            --volume serviceform-static:/code/static:ro \\\n            --volume serviceform-media:/code/media \\\n            tuomasairaksinen/serviceform:latest app\n\n.. _http_server:\n\nHTTP server\n-----------\n\nWeb server::\n\n    docker run -d --name serviceform-nginx \\\n            --publish 8038:80 \\\n            --link serviceform-app:app \\\n            --volume serviceform-static:/serviceform-static:ro \\\n            --volume serviceform-media:/serviceform-media:ro \\\n            --volume serviceform-nginx-config:/etc/nginx/conf.d:ro \\\n            nginx:1.13-alpine\n\nWith this configuration serviceform will listen HTTP connections to port 8038.\nNow you need to set up your web server (https) to redirect connections to this port.\n\n.. _restarting:\n\nShutting down and starting (system reboot procedures)\n=====================================================\n\nShutting down::\n\n    docker stop serviceform-nginx serviceform-app serviceform-send-emails \\\n                serviceform-task-processor serviceform-celery-beat serviceform-celery \\\n                serviceform-redis serviceform-db\n\nStarting again (set this into your system startup). Notice order.::\n\n    docker start serviceform-db serviceform-redis serviceform-celery serviceform-celery-beat \\\n                 serviceform-task-processor serviceform-send-emails serviceform-app \\\n                 serviceform-nginx\n\n.. _upgrading:\n\nUpgrading system\n================\n\nSimple upgrade procedure::\n\n    docker pull tuomasairaksinen/serviceform:latest\n    docker stop serviceform-nginx serviceform-app serviceform-send-emails \\\n            serviceform-task-processor serviceform-celery-beat serviceform-celery\n\nRun `upgrade`_ command.\nIf that is fine, we can remove old containers::\n\n    docker rm serviceform-nginx serviceform-app serviceform-send-emails \\\n            serviceform-task-processor serviceform-celery-beat serviceform-celery\n\nThen run all docker run all `services`_ and `http_server`_.\n\nZero-downtime upgrade method is planned in the future.\n\n.. _troubleshooting:\n\nTroubleshooting / shell access\n==============================\n\nTo investigate problems these shell commands might prove usefull.\n\nDjango shell::\n\n    docker run --rm -it \\\n            --link serviceform-db:db \\\n            --link serviceform-redis:redis \\\n            --env-file $SERVICEFORM_ENV_FILE \\\n            tuomasairaksinen/serviceform:latest shell\n\nPostgresql root shell::\n\n    docker exec -it -u postgres serviceform-db psql\n\nSame with Django's credentials::\n\n    docker run --rm -it \\\n            --link serviceform-db:db \\\n            --link serviceform-redis:redis \\\n            --env-file $SERVICEFORM_ENV_FILE \\\n            tuomasairaksinen/serviceform:latest dbshell\n\nBash shell (to investigate/edit volumes etc.)::\n\n    docker run --rm -it -u root \\\n            --link serviceform-db:db \\\n            --link serviceform-redis:redis \\\n            --volume serviceform-media:/code/media:ro \\\n            --volume serviceform-static:/code/static \\\n            --volume serviceform-nginx-config:/nginx-config \\\n            --env-file $SERVICEFORM_ENV_FILE \\\n            tuomasairaksinen/serviceform:latest bash\n\nDumping/loading production data as/from sql\n===========================================\n\nDump current data\n-----------------\n\nRun::\n\n   docker exec -u postgres serviceform-db pg_dump serviceform > backup.sql\n\nLoad data from file.\n--------------------\n\nFirst you need to destroy current database from postgres shell::\n\n   DROP DATABASE serviceform;\n   CREATE DATABASE serviceform;\n\nAlternatively, you can stop database, remove volume::\n\n   docker stop serviceform-db\n   docker rm serviceform-db\n   docker volume rm serviceform-db\n\nand then start database server (see external_).\n\nAnd then::\n\n   docker exec -u postgres serviceform-db psql serviceform < backup.sql\n\n===========\nDevelopment\n===========\n\nRunning tests with docker-compose\n=================================\n\nRun::\n\n    docker-compose -f docker-compose-tests.yml run tests\n\nRunning staging system with docker-compose\n==========================================\n\nRun::\n\n   docker-compose -f docker-compose-staging.yml run upgrade # initialize everything\n   docker-compose -f docker-compose-staging.yml run upgrade createsuperuser\n   docker-compose -f docker-compose-staging.yml up -d\n\nthen go to http://localhost:8080 and log in.\n\nHow to set things up and run your local development environment:\n================================================================\n\nInstall dependencies::\n\n    sudo apt-get install docker.io git python-dev python-pip virtualenv libpq-dev postgresql-server-dev-all virtualenvwrapper\n\nNote: Python 3.6 or newer is required.\n\nCreate virtualenv::\n\n    mkvirtualenv -p /usr/bin/python3.6 serviceform_env\n\n\nTo start using it type::\n\n    workon serviceform_env\n\n\nInstall requirements to your virtualenv::\n\n    pip install -r requirements.txt\n\n\nRun external services (redis and postgresql) inside docker::\n\n    docker-compose up\n\n\nWhen DB is set up, you can run initial migrations with command::\n\n    ./manage.py migrate\n\n\nThen you must create your initial account::\n\n    ./manage.py createsuperuser\n\n\nThen run can run development server::\n\n    ./manage.py runserver\n\n\nThen open browser in http://localhost:8000 and use your initial superuser account to log in.\n\n\nDumping and loading database in development environment\n=======================================================\n\nDatabase can be dumped with the following command::\n\n    docker-compose exec -u postgres db pg_dump serviceform > init.sql\n\nTo load dump, you must first clear the current database. This can be done as follows::\n\n    docker-compose exec -u postgres -i db psql serviceform < init.sql\n\nDump data in json format for tests::\n\n    ./manage.py dumpdata -o tests/test_data.json -e serviceform.EmailMessage -e admin.LogEntry --indent 2 -e sessions.Session\n\n\n\n\nTranslations\n============\n\nIf changes to translatable strings are made, run::\n\n    cd serviceform\n    django-admin.py makemessages\n\nThen update translation (.po) files for example with poedit, and then run::\n\n    django-admin.py compilemessages\n\nThen commit your changes (.po and .mo files) to repository.\n\n\n\n=======\nLICENCE\n=======\n\nGPL version 3, see LICENCE.txt\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/tuomas2/serviceform",
    "keywords": "",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "serviceform",
    "platform": "",
    "project_url": "https://pypi.org/project/serviceform/",
    "release_url": "https://pypi.org/project/serviceform/0.9.5/",
    "requires_python": "",
    "summary": "Django web application to collect volunteering willingness data and report to responsible people",
    "version": "0.9.5"
  },
  "releases": {
    "0.9.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ba0e6f761a8e1fd7c00f80bb6670a830",
          "sha256": "c015de9a8f01405888b544d2d9436ac7f71f8770835d350f15dc9f15e0e50099"
        },
        "downloads": 0,
        "filename": "serviceform-0.9.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba0e6f761a8e1fd7c00f80bb6670a830",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 677078,
        "upload_time": "2017-05-24T14:35:19",
        "url": "https://files.pythonhosted.org/packages/4b/10/d4f4278c2680ded5afe843887210f20f99c65e9ea48edee2b7e249e75114/serviceform-0.9.5-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ffffae4a4d5a4dfa1e555546fb649e9d",
          "sha256": "0169b131b2af6862f284aa4ff368dee3eaefe3d384cb55383cde77376cf2f1e2"
        },
        "downloads": 0,
        "filename": "serviceform-0.9.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ffffae4a4d5a4dfa1e555546fb649e9d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 556774,
        "upload_time": "2017-05-24T14:35:24",
        "url": "https://files.pythonhosted.org/packages/f9/1a/342ecdacbd5e7587bc13e62a888071e0538b424c36c3a47b716ebaad471f/serviceform-0.9.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ba0e6f761a8e1fd7c00f80bb6670a830",
        "sha256": "c015de9a8f01405888b544d2d9436ac7f71f8770835d350f15dc9f15e0e50099"
      },
      "downloads": 0,
      "filename": "serviceform-0.9.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ba0e6f761a8e1fd7c00f80bb6670a830",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 677078,
      "upload_time": "2017-05-24T14:35:19",
      "url": "https://files.pythonhosted.org/packages/4b/10/d4f4278c2680ded5afe843887210f20f99c65e9ea48edee2b7e249e75114/serviceform-0.9.5-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "ffffae4a4d5a4dfa1e555546fb649e9d",
        "sha256": "0169b131b2af6862f284aa4ff368dee3eaefe3d384cb55383cde77376cf2f1e2"
      },
      "downloads": 0,
      "filename": "serviceform-0.9.5.tar.gz",
      "has_sig": false,
      "md5_digest": "ffffae4a4d5a4dfa1e555546fb649e9d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 556774,
      "upload_time": "2017-05-24T14:35:24",
      "url": "https://files.pythonhosted.org/packages/f9/1a/342ecdacbd5e7587bc13e62a888071e0538b424c36c3a47b716ebaad471f/serviceform-0.9.5.tar.gz"
    }
  ]
}