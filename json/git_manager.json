{
  "info": {
    "author": "Tom Wiesing",
    "author_email": "tkw01536@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "# GitManager\n\n[![Build Status](https://travis-ci.org/tkw1536/GitManager.svg?branch=master)](https://travis-ci.org/tkw1536/GitManager)\n[![PyPI version](https://badge.fury.io/py/git_manager.svg)](https://pypi.python.org/pypi/git_manager)\n\nA script that can handle multiple Git repositories locally.\nWritten in Python, supports version 3.5 and upwards.\n\n## Installation\n\nMake sure python is installed, then run\n\n```bash\npython setup.py install\n```\n\nor\n\n```bash\npip install git_manager\n```\n\n\nto install the package. This will make it available by running ```git-manager``` (or ```git manager```). \n\n## Usage\n\nGit-Manager has different commands it provides:\n\n1. ```git-manager setup [pattern]``` -- Sets up all repositories as configured in the\nConfiguration file.\n2. ```git-manager clone``` -- Clones a repository to a location determined by\nthe repository url and the root directory. For example:\n`git manager clone --save https://github.com/tkw1536/GitManager`\n3. ```git-manager fetch [pattern]``` -- Updates all local repositories by fetching all\n data from the remotes.\n4. ```git-manager pull [pattern]``` -- Updates all local repositories by pulling all\nrepositories.\n5. ```git-manager push [pattern]``` -- Pushes all repositories to the remote.\n6. ```git-manager ls [pattern]``` -- Lists all locally available repositories.\n7. ```git-manager status [pattern]``` -- Shows all repositories that do not have a\nclean working tree, i.e. those where ```git status``` shows a message.\n8. ```git-manager state [pattern]``` -- Shows all repositories for which the local\nbranch is not equal to the remote branch.\n9. ```git-manager reconfigure``` -- Updates configuration file with\nrepositories found in a specific folder\n10. ```git-manager gc [pattern]``` -- Runs houskeeping tasks on all local repositories\n\nSome commands optionally accept the `pattern` argument.\nThis can be used to filter repository by their name.\n\nRepository patterns are simple `glob-like` pattern matches on standardized remote URLs.\nThey can also be normal glob patterns on full URLs.\n\nFor example:\n\n| Pattern           | Examples                                                             |\n| ----------------- | -------------------------------------------------------------------- |\n| `world`           | `git@github.com:hello/world.git`, `https://github.com/hello/world`   |\n| `hello/*`         | `git@github.com:hello/earth.git`, `git@github.com:hello/mars.git`    |\n| `hello/m*`        | `git@github.com:hello/mars.git`, `git@github.com:hello/mercury.git`  |\n| `github.com/*/*`  | `git@github.com:hello/world.git`, `git@github.com:bye/world.git`     |\n| `github.com/hello`| `git@github.com:hello/world.git`, `git@github.com:hello/mars.git`    |\n\n## Configuration\n\nGit Manager can be configured through its configuration file. \nIn order, it looks for the configuration file in the following locations: \n\n1. ```$GIT_MANAGER_CONFIG``` (if set)\n2. ```~/.config/.gitmanager/config``` (or ```$XDG_CONFIG_HOME/.gitmanager/config``` if set)\n3. ```~/.gitmanager```\n\nThe configuration file is parsed line-by-line and declares which repositories are under\nGitManager control. It consists of three different types of directives: \n\n1. **Root Line**\n    Configure the root folder to clone repositories to automatically.\n    Starts with two hashes, then sets the folder relative to the users home direectory. For example:\n    ```\n    ## /opt/repositories\n    ```\n2. **Comments**\n    Anything starting with a \"#\" will be treated as a comment. The same goes for empty (or whitespace-only)\n    lines.\n3. **Repository instruction**\n    To declare a repository write ```REPOSITORY_URL  \\[FOLDER\\]```. This declares that the repository\n    from ```REPOSITORY_URL``` should be cloned into the folder ```FOLDER```. In case the folder is omitted,\n    the 'humanish' part of the URI will be taken automatically. All folder paths by default are relative to \n    the users home folder, but this can be changed with the instruction below. Example:\n    ```\n    # makes the git/git repository available locally in the folder ~/Projects/git\n    https://github.com/git/git Projects/git\n    \n    # makes the  GitManager repository available in the ~/GitManager repository\n    https://github.com/tkw1536/GitManager\n    ```\n4. **Group Instruction**\n    In the case where multiple repositories should be cloned into the same folder, it is inconvenient to\n    always give the full path to that folder in the configuration file. For this reason GitManager supports\n    the concept of a group. A group can be started by prefixing a line with the \">\" character. A group takes\n    one argument. A path to a folder all repositories should be cloned into. This is best illustrated in the\n    form of an example:\n     ```\n    # We can create a group to store all our atom-related projects. \n    # All repositories are automatically available in the ~/AtomProjects folder. \n    > AtomProjects\n       https://github.com/atom/atom\n       https://github.com/atom/markdown-preview\n       # ...\n\n     ```\n    Groups completely support nesting. A sub-groups path and pattern for origin are relative to\n    the parent group. To create a sub-group, add another \">\" character in front of the line. \n\n\nAn example configuration file can be found in the file [config_example](config_example).\n\n## Development and Testing\n\nThis project is unit tested with a high coverage rate.\nThe tests can be run with:\n\n```bash\nnosetests --with-coverage --cover-package GitManager\n```\n\nTests are automatically run on Travis CI after every commit.\n\n## License\n\n```\nThe MIT License (MIT)\n\nCopyright (c) 2016-17 Tom Wiesing\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/tkw1536/GitManager",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "git_manager",
    "platform": "",
    "project_url": "https://pypi.org/project/git_manager/",
    "release_url": "https://pypi.org/project/git_manager/0.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Manages multiple git repositories",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9351319495e9f4d1f43b640fb502a71b",
          "sha256": "546fe391da3f87699a62847d13aad63a65aba02104710534e132176fcd0f6ba8"
        },
        "downloads": -1,
        "filename": "git_manager-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9351319495e9f4d1f43b640fb502a71b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19593,
        "upload_time": "2017-11-16T19:30:40",
        "url": "https://files.pythonhosted.org/packages/bb/9a/3c3bf030851d6f7a5bf4e75068a1334b653d379968beb85cad93b7789cfe/git_manager-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9351319495e9f4d1f43b640fb502a71b",
        "sha256": "546fe391da3f87699a62847d13aad63a65aba02104710534e132176fcd0f6ba8"
      },
      "downloads": -1,
      "filename": "git_manager-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9351319495e9f4d1f43b640fb502a71b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 19593,
      "upload_time": "2017-11-16T19:30:40",
      "url": "https://files.pythonhosted.org/packages/bb/9a/3c3bf030851d6f7a5bf4e75068a1334b653d379968beb85cad93b7789cfe/git_manager-0.1.0.tar.gz"
    }
  ]
}