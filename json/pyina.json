{
  "info": {
    "author": "Mike McKerns",
    "author_email": "mmckerns@caltech.edu",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "----------------------------------------------\r\npyina: MPI parallel map and cluster scheduling\r\n----------------------------------------------\r\n\r\nThe pyina package provides several basic tools to make MPI-based\r\nhigh-performance computing more accessible to the end user. The goal\r\nof pyina is to allow the user to extend their own code to MPI-based\r\nhigh-performance computing with minimal refactoring.\r\n\r\nThe central element of pyina is the parallel map-reduce algorithm.\r\nPyina currently provides two strategies for executing the parallel-map,\r\nwhere a strategy is the algorithm for distributing the work list of\r\njobs across the available nodes.  These strategies can be used \"in-the-raw\"\r\n(i.e. directly) to provide map-reduce to a user's own mpi-aware code.\r\nFurther, pyina provides the \"ez_map\" interface, which is a map-reduce\r\nimplementation that hides the MPI internals from the user. With ez_map,\r\nthe user can launch their code in parallel batch mode -- using standard\r\npython and without ever having to write a line of parallel python or MPI code.\r\n\r\nThere are several ways that a user would typically launch their code in\r\nparallel -- directly with \"mpirun\" or \"mpiexec\", or through the use of a\r\nscheduler such as torque or slurm. Pyina encapsulates several of these\r\n'launchers', and provides a common interface to the different methods of\r\nlaunching a MPI job.\r\n\r\nPyina is part of pathos, a python framework for heterogenous computing.\r\nPyina is in the early development stages, and any user feedback is\r\nhighly appreciated. Contact Mike McKerns [mmckerns at caltech dot edu]\r\nwith comments, suggestions, and any bugs you may find. A list of known\r\nissues is maintained at http://trac.mystic.cacr.caltech.edu/project/pathos/query.\r\n\r\n\r\nMajor Features\r\n==============\r\n\r\nPyina provides a highly configurable parallel map-reduce interface\r\nto running MPI jobs, with::\r\n\r\n    - a map-reduce interface that extends the python 'map' standard\r\n    - the ability to submit batch jobs to a selection of schedulers\r\n    - the ability to customize node and process launch configurations\r\n    - the ability to launch parallel MPI jobs with standard python\r\n    - ease in selecting different strategies for processing a work list\r\n\r\n\r\nCurrent Release\r\n===============\r\n\r\nThe latest stable release version is pyina-0.1a1. You can download it here.\r\nThe latest stable version of pyina is always available at:\r\n\r\n    http://trac.mystic.cacr.caltech.edu/project/pathos\r\n\r\n\r\nDevelopment Release\r\n===================\r\n\r\nIf you like living on the edge, and don't mind the promise\r\nof a little instability, you can get the latest development\r\nrelease with all the shiny new features at:\r\n\r\n    http://dev.danse.us/packages.\r\n\r\nor even better, fork us on our github mirror of the svn trunk:\r\n\r\n    https://github.com/uqfoundation\r\n\r\n\r\nInstallation\r\n============\r\n\r\nPyina is packaged to install from source, so you must\r\ndownload the tarball, unzip, and run the installer::\r\n\r\n    [download]\r\n    $ tar -xvzf pyina-0.2a.dev.tgz\r\n    $ cd pyina-0.2a.dev\r\n    $ python setup py build\r\n    $ python setup py install\r\n\r\nYou will be warned of any missing dependencies and/or settings after\r\nyou run the \"build\" step above. Pyina depends on dill and mpi4py,\r\nso you should install them first. A version of MPI must also be\r\ninstalled. Pyina's launchers that submit to a scheduler will throw errors\r\nif the underlying scheduler is not available, however a scheduler is not\r\nrequired for pyina to execute.\r\n\r\nThe current implementation of pyina required slight modifications\r\nto one external dependency. This dependency and installation\r\ninstructions are provided in the `pyina.external` directory for users\r\ninstalling without setuptools.\r\n\r\nAlternately, pyina can be installed with easy_install::\r\n\r\n    [download]\r\n    $ easy_install -f . pyina\r\n\r\n\r\nRequirements\r\n============\r\n\r\nPyina requires::\r\n\r\n    - python, version >= 2.5, version < 3.0\r\n    - mpi4py, version >= 1.2.1\r\n    - dill, version >= 0.2a.dev\r\n\r\nOptional requirements::\r\n\r\n    - setuptools, version >= 0.6\r\n    - pyre, version == 0.8\r\n    - mystic, version >= 0.2a2.dev\r\n\r\n\r\nUsage Notes\r\n===========\r\n\r\nProbably the best way to get started is to look at a few of the\r\nexamples provided within pyina. See `pyina.examples` for a\r\nset of scripts that demonstrate the configuration and launching of\r\nmpi-based parallel jobs using the `ez_map` interface. Also see\r\n`pyina.examples_other` for a set of scripts that test the more raw\r\ninternals of pyina.\r\n\r\nImportant classes and functions are found here::\r\n\r\n    - pyina.pyina.ez_map        [the map-reduce API definition]\r\n    - pyina.pyina.mappers       [all available strategies]\r\n    - pyina.pyina.schedulers    [all available schedulers]\r\n    - pyina.pyina.launchers     [all available launchers]\r\n\r\nMapping strategies are found here::\r\n\r\n    - pyina.pyina.parallel_map  [the card-dealer strategy]\r\n    - pyina.pyina.parallel_map2 [the equal-portion strategy]\r\n\r\nPyina also provides two convience scripts that help navigate the\r\nMPI environment. These scripts are installed to a directory on the\r\nuser's $PATH, and thus can be run from anywhere::\r\n\r\n    - machines.py               [list the available MPI nodes]\r\n    - mpi_world.py              [setup/teardown of the MPI environment]\r\n\r\nIf may also be convienent to set a shell alias for the launch of 'raw'\r\nmpi-python jobs. Set something like the following (for bash)::\r\n\r\n    $ alias mpython1='mpiexec -np 1 `which python`'\r\n    $ alias mpython2='mpiexec -np 2 `which python`'\r\n    $ ...\r\n\r\n\r\nLicense\r\n=======\r\n\r\nPyina is distributed under a 3-clause BSD license.\r\n\r\n    >>> import pyina\r\n    >>> print pyina.license()\r\n\r\n\r\nCitation\r\n========\r\n\r\nIf you use pyina to do research that leads to publication,\r\nwe ask that you acknowledge use of pyina by citing the\r\nfollowing in your publication::\r\n\r\n    M.M. McKerns, L. Strand, T. Sullivan, A. Fang, M.A.G. Aivazis,\r\n    \"Building a framework for predictive science\", Proceedings of\r\n    the 10th Python in Science Conference, 2011;\r\n    http://arxiv.org/pdf/1202.1056\r\n\r\n    Michael McKerns and Michael Aivazis,\r\n    \"pathos: a framework for heterogeneous computing\", 2010- ;\r\n    http://trac.mystic.cacr.caltech.edu/project/pathos\r\n\r\n\r\nMore Information\r\n================\r\n\r\nPlease see http://trac.mystic.cacr.caltech.edu/project/pathos or http://arxiv.org/pdf/1202.1056 for further information.",
    "docs_url": "https://pythonhosted.org/pyina/",
    "download_url": "http://dev.danse.us/packages/pyina-0.1a1.tgz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://www.cacr.caltech.edu/~mmckerns/pyina.htm",
    "keywords": "",
    "license": "3-clause BSD",
    "maintainer": "Mike McKerns",
    "maintainer_email": "mmckerns@caltech.edu",
    "name": "pyina",
    "platform": "Linux, Mac",
    "project_url": "https://pypi.org/project/pyina/",
    "release_url": "https://pypi.org/project/pyina/0.1a1/",
    "requires_python": null,
    "summary": "MPI parallel map and cluster scheduling",
    "version": "0.1a1"
  },
  "releases": {
    "0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e6c3c09d6b86f0a47246348680e35fbf",
          "sha256": "a4e04338c66f7754342be9985b22b6f32293e6f7bb75e585865aa073c082f689"
        },
        "downloads": 946,
        "filename": "pyina-0.1a1.tgz",
        "has_sig": false,
        "md5_digest": "e6c3c09d6b86f0a47246348680e35fbf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 35280,
        "upload_time": "2015-12-22T20:26:09",
        "url": "https://files.pythonhosted.org/packages/8d/5d/a4e6c6dc52d2a05e8059a345b31f1b283258ac26c14021aa74e367d37544/pyina-0.1a1.tgz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e6c3c09d6b86f0a47246348680e35fbf",
        "sha256": "a4e04338c66f7754342be9985b22b6f32293e6f7bb75e585865aa073c082f689"
      },
      "downloads": 946,
      "filename": "pyina-0.1a1.tgz",
      "has_sig": false,
      "md5_digest": "e6c3c09d6b86f0a47246348680e35fbf",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 35280,
      "upload_time": "2015-12-22T20:26:09",
      "url": "https://files.pythonhosted.org/packages/8d/5d/a4e6c6dc52d2a05e8059a345b31f1b283258ac26c14021aa74e367d37544/pyina-0.1a1.tgz"
    }
  ]
}