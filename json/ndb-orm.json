{
  "info": {
    "author": "Ulf Bartel",
    "author_email": "elastic.code@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English"
    ],
    "description": "Python-NDB-ORM\n==============\n\nNDB-ORM is a python3 compatible orm for google cloud datastore based on ndb.model (created by Guido van Rossum) and\nmay be used outside of app engine standard environment.\n\n * Plays nicely with datastore entities generated from app engine standard\n * Python3 compatible\n * Usable from outside of app engine standard\n * Based on the original ndb package\n * Protobuffer implementation was ported to google.cloud.proto.datastore.v1.entity_pb2 (which is also used by gcloud-datastore-python)\n * No dependencies to old appengine libraries\n * Makes porting of app engine standard project easier\n * Works with [google-cloud-datastore](https://pypi.python.org/pypi/google-cloud-datastore)\n * Key handling is used from google.cloud.datastore\n\nThis is not a drop-in replacement for the whole ndb package (no ndb.context, ndb.tasklets, ndb.query or ndb.Key), \nbut allows you to use ndb.model classes.\n\nFor more details of all the possobilities of the ndb.model orm, plead have a look at \"[The Python NDB Client Library Overview](https://cloud.google.com/appengine/docs/standard/python/ndb/)\".\n\nATTENTION\n-----------\n\nWhile reading of entities generated with app engine standard should be no problem, threre are limitations reading\nentities written with this package (also also with google-cloud-datastore) from app engine standard. The reason is that\nsome types have changed format (e.g. datetime properties with google-cloud-datastore support timezones).\n\nAdditional (as you might have expected) using the PickleProperty between different Python version\nis expected to fail and thus pickle.loads is disabled by default. You can enable it by setting\nndb_orm.model.ENABLE_PICKLE_LOADS to True.\n\nQuick Start\n-----------\n\n$ pip install --upgrade ndb-orm\n\n\nSimple example session with google-cloud-datastore \n--------------------------------------------------\n\n```python\n>>> #\n>>> # creating an entity with google-cloud-datastore\n>>> #\n\n>>> from google.cloud import datastore\n>>> \n>>> client = datastore.Client()\n>>> \n>>> kind = 'Task' # The kind for the new entity\n>>> name = 'sampletask' # The name/ID for the new entity\n>>> \n>>> key = client.key(kind, name) # The Cloud Datastore key for the new entity\n>>> \n>>> entity = datastore.Entity(key=key, exclude_from_indexes=('text',))\n>>> entity.update({\n...     'text': 'Much to do',\n...     'done': False,\n... })\n>>> \n>>> client.put(entity)\n\n>>> #\n>>> # now getting the just saved entity as ndb.Model by defining an entity\n>>> # 'Task' and enabling ndb_orm\n>>> #\n\n>>> import ndb_orm as ndb\n>>> ndb.enable_use_with_gcd(client.project)\n>>> \n>>> class Task(ndb.Model):\n...     text = ndb.TextProperty(indexed=False)\n...     done = ndb.BooleanProperty()\n...     update = ndb.DateTimeProperty(auto_now=True)\n>>> \n>>> entity = client.get(key) # now get get an ndb model for the same data ! \n>>> print(entity)\nTask(key=<Key('Task', 'sampletask')>, done=False, text='Much to do')\n>>>\n>>> client.put(entity) # save entity ('update' property gets set automatically)\n>>>\n>>> print(client.get(key)) # get entity with 'update' property set\nTask(key=<Key('Task', 'sampletask')>, done=False, text='Much to do', update=datetime.datetime(2017, 8, 28, 22, 16, 15, 652839, tzinfo=<UTC>))\n \n>>> #\n>>> # access to this entity without ndb-orm still possible\n>>> #\n\n>>> ndb.enable_use_with_gcd() # disable ndb-orm - now we wont receive a ndb.Model anymore\n \n>>> print(client.get(key)) # a normale get still works without ndb-orm\n<Entity('Task', 'sampletask') {'done': False, 'update': datetime.datetime(2017, 8, 28, 22, 16, 15, 652839, tzinfo=<UTC>), 'text': 'Much to do'}>\n>>> \n```\n\nMost property types should work just fine. Even the StructuedProperty class, and keywords 'indexed', 'repeated', 'compression', 'name' and 'required'\nshould work as well.\n\nEnjoy this beautiful ORM !\n\nPublic repository\n-----------------\n\nhttps://github.com/berlincode/ndb-orm\n\n\nLicense\n-------\n\nCopyright \"the ndb authors\" and Ulf Bartel. Code is licensed under the\n[Apache 2.0](./LICENSE.txt).\n\n\nv0.1.0, 2017-08-28 -- Initial public release.\nv0.2.0, 2017-08-28 -- First usable version.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/berlincode/ndb-orm",
    "keywords": "ndb",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ndb-orm",
    "platform": "",
    "project_url": "https://pypi.org/project/ndb-orm/",
    "release_url": "https://pypi.org/project/ndb-orm/0.2.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "google datatstore ndb orm which might be used with google-cloud-datastore (python3 compatible)",
    "version": "0.2.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3de7ed9350c951ec5b640cc7588a2d10",
          "sha256": "dcf87b515bc3d6bc727bf1785745df2afe6db0c7b53f5c1d4cc2da022f73acc9"
        },
        "downloads": 0,
        "filename": "ndb-orm-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3de7ed9350c951ec5b640cc7588a2d10",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 49496,
        "upload_time": "2017-08-28T00:17:50",
        "url": "https://files.pythonhosted.org/packages/70/ac/0e40526e63c4cc246ca1b980ef58724f3127b8c8056cec2333508bc04808/ndb-orm-0.1.0.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a10b019422ec5fc9609ff2f79b3bc980",
          "sha256": "a99d30ace2ac048441aa2aa856ec45e9bd8ce899d403e549654f581474048204"
        },
        "downloads": 0,
        "filename": "ndb-orm-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a10b019422ec5fc9609ff2f79b3bc980",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 51533,
        "upload_time": "2017-08-28T22:44:11",
        "url": "https://files.pythonhosted.org/packages/ab/46/1ecd6cf87014a40ffeba8c228a13f911aeae21c0916a09d37f8b3f82604a/ndb-orm-0.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a10b019422ec5fc9609ff2f79b3bc980",
        "sha256": "a99d30ace2ac048441aa2aa856ec45e9bd8ce899d403e549654f581474048204"
      },
      "downloads": 0,
      "filename": "ndb-orm-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a10b019422ec5fc9609ff2f79b3bc980",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 51533,
      "upload_time": "2017-08-28T22:44:11",
      "url": "https://files.pythonhosted.org/packages/ab/46/1ecd6cf87014a40ffeba8c228a13f911aeae21c0916a09d37f8b3f82604a/ndb-orm-0.2.0.tar.gz"
    }
  ]
}