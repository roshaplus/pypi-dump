{
  "info": {
    "author": "Abdulelah Bin Mahfoodh",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: Utilities"
    ],
    "description": "saudiaddress: A simple Python wrapper for the Saudi National Address APIs\n=========================================================================\n\nSaudi National Address API website: `https://api.address.gov.sa <https://api.address.gov.sa>`_\n\nBasic Usage of saudiaddress\n---------------------------\n\n.. code-block:: pycon\n\n    >>> from saudiaddress.api import NationalAddress\n    >>> api_key = os.environ.get('NATIONAL_ADDRESS_API_KEY')\n    >>> na = NationalAddress(key=api_key)\n\n\nReverse geocoding of coordinates to a national address\n\n.. code-block:: pycon\n\n    >>> addresses = na.get_address(lat=26.318922, long=50.228043, language='E')\n    >>> print(\"address:\", addresses.records[0])\n    address: 6418 al kurnaysh road - al kurnaish AL KHUBAR 34412 - 3618\n\nBulk search a list of (building number, post code, additional number)\n\n.. code-block:: pycon\n\n    >>> for address in na.bulk_search([(3468, 23955, 7487), (6418, 34412, 3618)], page=1).records:\n    >>>     print(address)\n    3468  - king abdullah university of science and technology THUWAL 23955 - 7487\n    6418 al kurnaysh road - al kurnaish AL KHUBAR 34412 - 3618\n\nVerify a national address\n\n.. code-block:: pycon\n\n    >>> print(\"the address is\", na.verify_address(6418, 34412, 3618))\n    the address is True\n\nFree text search for a national address\n\n.. code-block:: pycon\n\n    >>> addresses = na.free_text_search('2292  - king abdullah university of science and technology')\n    >>> print(\"count:\", addresses.count)\n    >>> address = addresses.records[0]\n    >>> print('lat={lat}, long={long}, city={city}, region={region}'.format(lat=address.Latitude, long=address.Longitude, city=address.City, region=address.RegionName))\n    count: 1\n    lat=22.324697064547, long=39.0942996143403, city=THUWAL, region=Makkah\n\nSearch nearest services\n\n.. code-block:: pycon\n\n    >>> addresses = na.nearest_poi(lat=22.32, long=39.09, radius=2)\n    >>> for address in addresses.records:\n    >>>     print('title:%s' % address.Title)\n    >>>     print('address:', address)\n    title:Samba atm\n    address: 3468  - king abdullah university of science and technology THUWAL 23955 - 7487\n    title:sabb bank\n    address: 7126  - king abdullah university of science and technology THUWAL 23955 - 3451\n\nSearch services based on fixed parameters\n\n.. code-block:: pycon\n\n    >>> addresses = na.fixed_search(city_name='THUWAL', post_code=23955, additional_number=7487)\n    >>> print(addresses.records[0])\n    3468  - king abdullah university of science and technology THUWAL 23955 - 7487\n\nFind availability of services by providing details in free text\n\n.. code-block:: pycon\n\n    >>> addresses = na.poi_free_text_search('sabb atm', language='E')\n    >>> print('total SABB ATMs found: %d' % addresses.count)\n    >>> print(addresses.records)\n    total SABB ATMs found: 695\n    6897 king fahd road - al ulaya AR RIYADH 12211 - 3388\n    7277 king fahd road - al ulaya AR RIYADH 12212 - 3333\n    7411 king fahd road - al ulaya AR RIYADH 12212 - 3229\n    2946 al amir muhammad ibn abdul aziz branch rd - al ulaya AR RIYADH 12213 - 7929\n    2332 no 92 - al ulaya AR RIYADH 12214 - 9330\n\nGet a list of regions\n\n.. code-block:: pycon\n\n\n    >>> regions = na.get_regions(language='A')\n    >>> for region in regions[:5]:\n    >>>     print(region)\n    Region (ID=12, Name= \u0627\u0644\u0628\u0627\u062d\u0629)\n    Region (ID=13, Name= \u0627\u0644\u062c\u0648\u0641)\n    Region (ID=9, Name= \u0627\u0644\u062d\u062f\u0648\u062f \u0627\u0644\u0634\u0645\u0627\u0644\u064a\u0629)\n    Region (ID=1, Name= \u0627\u0644\u0631\u064a\u0627\u0636)\n    Region (ID=4, Name= \u0627\u0644\u0642\u0635\u064a\u0645)\n\nGet a list of cities within a region\n\n.. code-block:: pycon\n\n    >>> cities = na.get_cities(region_id=1)\n    >>> for city in cities[:5]:\n    >>>     print(city)\n    City (ID=3, Name=AR RIYADH)\n    City (ID=828, Name=AD DIR'IYAH)\n    City (ID=669, Name=AD DUWADIMI)\n    City (ID=1061, Name=AL KHARJ)\n    City (ID=24, Name=AL MAJMA'AH)\n\nGet a list of districts in a city\n\n.. code-block:: pycon\n\n    >>> districts = na.get_districts(city_id=3)\n    >>> for district in districts[:5]:\n    >>>     print(district)\n    District (ID=10100003130, Name=ad dar al baida)\n    District (ID=10100003039, Name=ad difa)\n    District (ID=10100003007, Name=ad dirah)\n    District (ID=10100003116, Name=ad dubiyah)\n    District (ID=10100003076, Name=ad duraihimiyah)\n\nGet a list of service categories\n\n.. code-block:: pycon\n\n    >>> categories = na.get_categories()\n    >>> for category in categories[:5]:\n    >>>     print(category)\n    Category (ID=101, Name=Auto Services)\n    Category (ID=122, Name=CivilDefense)\n    Category (ID=102, Name=Commercial)\n    Category (ID=103, Name=Cultural Sites)\n    Category (ID=104, Name=Diplomatic)\n\nGet a list of sub-service categories\n\n.. code-block:: pycon\n\n    >>> sub_categories = na.get_subcategories(service_category_id=101)\n    >>> for sub_category in sub_categories[:5]:\n    >>>     print(sub_category)\n    Sub-Category (ID=10101, Name=Auto Agency)\n    Sub-Category (ID=10102, Name=Auto Service Station)\n    Sub-Category (ID=10103, Name=Auto Showroom)\n    Sub-Category (ID=10104, Name=Auto Spare Parts)\n    Sub-Category (ID=10105, Name=Auto Workshop)\n\nFina all ATMs in district 'ad dirah' in Riyadh city\n\n.. code-block:: pycon\n\n\n    >>> services = na.poi_fixed_search('atm', district_name='ad dirah', city_name='AR RIYADH', page=1)\n    >>> print(\"total:\", services.count)\n    >>> for service in services.records:\n    >>>     print(service.Title, service)\n    total: 19\n    al rajhi atm 7221  - ad dirah AR RIYADH 12633 - 3262\n    albilad atm 7272 al batha - ad dirah AR RIYADH 12633 - 3394\n    albilad atm 2778 al imam muhammad ibn saud ibn muqrin - ad dirah AR RIYADH 12634 - 6823\n    albilad atm 2760 tariq ibn ziyad - ad dirah AR RIYADH 12634 - 6287\n    alinma atm 2577 al imam muhammad ibn saud ibn muqrin - ad dirah AR RIYADH 12634 - 6681\n    alinma atm 2591 al imam turki ibn abdullah ibn muhammad - ad dirah AR RIYADH 12634 - 6883\n    alinma atm 6774 ash shaikh muhammad ibn abdul wahab - ad dirah AR RIYADH 12634 - 2938\n    anb atm 6645  - ad dirah AR RIYADH 12634 - 2856\n    atm _ national commercial bank 6487 al muqaybirah - ad dirah AR RIYADH 12634 - 2821\n    riyadh atm 7172 al batha - ad dirah AR RIYADH 12633 - 3386\n\n\nInstallation\n------------\n\n    $ pip install saudiaddress\n\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/abduhbm/saudiaddress",
    "keywords": "Saudi National Address",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "saudiaddress",
    "platform": "",
    "project_url": "https://pypi.org/project/saudiaddress/",
    "release_url": "https://pypi.org/project/saudiaddress/0.1.2/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "A simple Python wrapper for the Saudi National Address APIs.",
    "version": "0.1.2"
  },
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bcb76ed325b5e9f3541f2add0a2987f4",
          "sha256": "b4ca670ebd79fb208e90ca2c8607797504dd662ad07331d30c7ffa657e4338b8"
        },
        "downloads": -1,
        "filename": "saudiaddress-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bcb76ed325b5e9f3541f2add0a2987f4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9301,
        "upload_time": "2017-12-14T06:50:07",
        "url": "https://files.pythonhosted.org/packages/a5/7d/274c7b40f3a426042e42549e041031dfef8b87663f02d4729818294a1f4a/saudiaddress-0.1.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d7e4bd3284f198bcc95151659c84ae03",
          "sha256": "1ee240f8fc27589810135302e9f6f56d3d3118528e8d4cca02f9de9ac8ebb26e"
        },
        "downloads": -1,
        "filename": "saudiaddress-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d7e4bd3284f198bcc95151659c84ae03",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9395,
        "upload_time": "2017-12-14T06:50:10",
        "url": "https://files.pythonhosted.org/packages/22/3f/8be5ca401f91f3e1b33ff86f23060fd9c30130358cd0ebba71c5f23f4a14/saudiaddress-0.1.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "bcb76ed325b5e9f3541f2add0a2987f4",
        "sha256": "b4ca670ebd79fb208e90ca2c8607797504dd662ad07331d30c7ffa657e4338b8"
      },
      "downloads": -1,
      "filename": "saudiaddress-0.1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bcb76ed325b5e9f3541f2add0a2987f4",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 9301,
      "upload_time": "2017-12-14T06:50:07",
      "url": "https://files.pythonhosted.org/packages/a5/7d/274c7b40f3a426042e42549e041031dfef8b87663f02d4729818294a1f4a/saudiaddress-0.1.2-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "d7e4bd3284f198bcc95151659c84ae03",
        "sha256": "1ee240f8fc27589810135302e9f6f56d3d3118528e8d4cca02f9de9ac8ebb26e"
      },
      "downloads": -1,
      "filename": "saudiaddress-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d7e4bd3284f198bcc95151659c84ae03",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9395,
      "upload_time": "2017-12-14T06:50:10",
      "url": "https://files.pythonhosted.org/packages/22/3f/8be5ca401f91f3e1b33ff86f23060fd9c30130358cd0ebba71c5f23f4a14/saudiaddress-0.1.2.tar.gz"
    }
  ]
}