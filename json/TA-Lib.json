{
  "info": {
    "author": "John Benediktsson",
    "author_email": "mrjbq7@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Financial and Insurance Industry",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Cython",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Office/Business :: Financial",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "# TA-Lib\n\nThis is a Python wrapper for [TA-LIB](http://ta-lib.org) based on Cython\ninstead of SWIG. From the homepage:\n\n> TA-Lib is widely used by trading software developers requiring to perform\n> technical analysis of financial market data.\n\n> * Includes 150+ indicators such as ADX, MACD, RSI, Stochastic, Bollinger\n>   Bands, etc.\n> * Candlestick pattern recognition\n> * Open-source API for C/C++, Java, Perl, Python and 100% Managed .NET\n\nThe original Python bindings use [SWIG](http://swig.org) which unfortunately\nare difficult to install and aren't as efficient as they could be. Therefore\nthis project uses Cython and Numpy to efficiently and cleanly bind to TA-Lib\n-- producing results 2-4 times faster than the SWIG interface.\n\n## Installation\n\nYou can install from PyPI:\n\n```\n$ pip install TA-Lib\n```\n\nOr checkout the sources and run ``setup.py`` yourself:\n\n```\n$ python setup.py install\n```\n\n### Troubleshooting\n\nSometimes installation will produce build errors like this:\n\n```\nfunc.c:256:28: fatal error: ta-lib/ta_libc.h: No such file or directory\ncompilation terminated.\n```\n\nThis typically means that it can't find the underlying ``TA-Lib`` library,\na dependency which needs to be installed.\n\nSometimes installation will fail with errors like this:\n\n```\ntalib/common.c:8:22: fatal error: pyconfig.h: No such file or directory\n #include \"pyconfig.h\"\n                      ^\ncompilation terminated.\nerror: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n```\n\nThis typically means that you need the Python headers, and should run\nsomething like:\n\n```\n$ sudo apt-get install python3-dev\n```\n\n### Dependencies\n\nTo use TA-Lib for python, you need to have the\n[TA-Lib](http://ta-lib.org/hdr_dw.html) already installed:\n\n##### Mac OS X\n\n```\n$ brew install ta-lib\n```\n\n##### Windows\n\nDownload [ta-lib-0.4.0-msvc.zip](http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-msvc.zip)\nand unzip to ``C:\\ta-lib``\n\n##### Linux\n\nDownload [ta-lib-0.4.0-src.tar.gz](http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz) and:\n```\n$ untar and cd\n$ ./configure --prefix=/usr\n$ make\n$ sudo make install\n```\n\n> If you build ``TA-Lib`` using ``make -jX`` it will fail but that's OK!\n> Simply rerun ``make -jX`` followed by ``[sudo] make install``.\n\n## Function API\n\nSimilar to TA-Lib, the Function API provides a lightweight wrapper of the\nexposed TA-Lib indicators.\n\nEach function returns an output array and have default values for their\nparameters, unless specified as keyword arguments. Typically, these functions\nwill have an initial \"lookback\" period (a required number of observations\nbefore an output is generated) set to ``NaN``.\n\nFor convenience, the Function API supports both ``numpy.ndarray`` and\n``pandas.Series`` types.\n\nAll of the following examples use the Function API:\n\n```python\nimport numpy\nimport talib\n\nclose = numpy.random.random(100)\n```\n\nCalculate a simple moving average of the close prices:\n\n```python\noutput = talib.SMA(close)\n```\n\nCalculating bollinger bands, with triple exponential moving average:\n\n```python\nfrom talib import MA_Type\n\nupper, middle, lower = talib.BBANDS(close, matype=MA_Type.T3)\n```\n\nCalculating momentum of the close prices, with a time period of 5:\n\n```python\noutput = talib.MOM(close, timeperiod=5)\n```\n\n## Abstract API\n\nIf you're already familiar with using the function API, you should feel right\nat home using the Abstract API.\n\nEvery function takes a collection of named inputs, either a ``dict`` of\n``numpy.ndarray`` or ``pandas.Series``, or a ``pandas.DataFrame``. If a\n``pandas.DataFrame`` is provided, the output is returned as a\n``pandas.DataFrame`` with named output columns.\n\nFor example, inputs could be provided for the typical \"OHLCV\" data:\n\n```python\nimport numpy as np\n\n# note that all ndarrays must be the same length!\ninputs = {\n    'open': np.random.random(100),\n    'high': np.random.random(100),\n    'low': np.random.random(100),\n    'close': np.random.random(100),\n    'volume': np.random.random(100)\n}\n```\n\nFunctions can either be imported directly or instantiated by name:\n\n```python\nfrom talib import abstract\n\n# directly\nsma = abstract.SMA\n\n# or by name\nsma = abstract.Function('sma')\n```\n\nFrom there, calling functions is basically the same as the function API:\n\n```python\nfrom talib.abstract import *\n\n# uses close prices (default)\noutput = SMA(inputs, timeperiod=25)\n\n# uses open prices\noutput = SMA(inputs, timeperiod=25, price='open')\n\n# uses close prices (default)\nupper, middle, lower = BBANDS(inputs, 20, 2, 2)\n\n# uses high, low, close (default)\nslowk, slowd = STOCH(inputs, 5, 3, 0, 3, 0) # uses high, low, close by default\n\n# uses high, low, open instead\nslowk, slowd = STOCH(inputs, 5, 3, 0, 3, 0, prices=['high', 'low', 'open'])\n```\n\n## Supported Indicators and Functions\n\nWe can show all the TA functions supported by TA-Lib, either as a ``list`` or\nas a ``dict`` sorted by group (e.g. \"Overlap Studies\", \"Momentum Indicators\",\netc):\n\n```python\nimport talib\n\n# list of functions\nprint talib.get_functions()\n\n# dict of functions by group\nprint talib.get_function_groups()\n```\n\n### Indicator Groups\n\n* Overlap Studies\n* Momentum Indicators\n* Volume Indicators\n* Volatility Indicators\n* Price Transform\n* Cycle Indicators\n* Pattern Recognition\n\n#### Overlap Studies\n```\nBBANDS               Bollinger Bands\nDEMA                 Double Exponential Moving Average\nEMA                  Exponential Moving Average\nHT_TRENDLINE         Hilbert Transform - Instantaneous Trendline\nKAMA                 Kaufman Adaptive Moving Average\nMA                   Moving average\nMAMA                 MESA Adaptive Moving Average\nMAVP                 Moving average with variable period\nMIDPOINT             MidPoint over period\nMIDPRICE             Midpoint Price over period\nSAR                  Parabolic SAR\nSAREXT               Parabolic SAR - Extended\nSMA                  Simple Moving Average\nT3                   Triple Exponential Moving Average (T3)\nTEMA                 Triple Exponential Moving Average\nTRIMA                Triangular Moving Average\nWMA                  Weighted Moving Average\n```\n\n#### Momentum Indicators\n```\nADX                  Average Directional Movement Index\nADXR                 Average Directional Movement Index Rating\nAPO                  Absolute Price Oscillator\nAROON                Aroon\nAROONOSC             Aroon Oscillator\nBOP                  Balance Of Power\nCCI                  Commodity Channel Index\nCMO                  Chande Momentum Oscillator\nDX                   Directional Movement Index\nMACD                 Moving Average Convergence/Divergence\nMACDEXT              MACD with controllable MA type\nMACDFIX              Moving Average Convergence/Divergence Fix 12/26\nMFI                  Money Flow Index\nMINUS_DI             Minus Directional Indicator\nMINUS_DM             Minus Directional Movement\nMOM                  Momentum\nPLUS_DI              Plus Directional Indicator\nPLUS_DM              Plus Directional Movement\nPPO                  Percentage Price Oscillator\nROC                  Rate of change : ((price/prevPrice)-1)*100\nROCP                 Rate of change Percentage: (price-prevPrice)/prevPrice\nROCR                 Rate of change ratio: (price/prevPrice)\nROCR100              Rate of change ratio 100 scale: (price/prevPrice)*100\nRSI                  Relative Strength Index\nSTOCH                Stochastic\nSTOCHF               Stochastic Fast\nSTOCHRSI             Stochastic Relative Strength Index\nTRIX                 1-day Rate-Of-Change (ROC) of a Triple Smooth EMA\nULTOSC               Ultimate Oscillator\nWILLR                Williams' %R\n```\n\n#### Volume Indicators\n```\nAD                   Chaikin A/D Line\nADOSC                Chaikin A/D Oscillator\nOBV                  On Balance Volume\n```\n\n#### Cycle Indicators\n```\nHT_DCPERIOD          Hilbert Transform - Dominant Cycle Period\nHT_DCPHASE           Hilbert Transform - Dominant Cycle Phase\nHT_PHASOR            Hilbert Transform - Phasor Components\nHT_SINE              Hilbert Transform - SineWave\nHT_TRENDMODE         Hilbert Transform - Trend vs Cycle Mode\n```\n\n#### Price Transform\n```\nAVGPRICE             Average Price\nMEDPRICE             Median Price\nTYPPRICE             Typical Price\nWCLPRICE             Weighted Close Price\n```\n\n#### Volatility Indicators\n```\nATR                  Average True Range\nNATR                 Normalized Average True Range\nTRANGE               True Range\n```\n\n#### Pattern Recognition\n```\nCDL2CROWS            Two Crows\nCDL3BLACKCROWS       Three Black Crows\nCDL3INSIDE           Three Inside Up/Down\nCDL3LINESTRIKE       Three-Line Strike\nCDL3OUTSIDE          Three Outside Up/Down\nCDL3STARSINSOUTH     Three Stars In The South\nCDL3WHITESOLDIERS    Three Advancing White Soldiers\nCDLABANDONEDBABY     Abandoned Baby\nCDLADVANCEBLOCK      Advance Block\nCDLBELTHOLD          Belt-hold\nCDLBREAKAWAY         Breakaway\nCDLCLOSINGMARUBOZU   Closing Marubozu\nCDLCONCEALBABYSWALL  Concealing Baby Swallow\nCDLCOUNTERATTACK     Counterattack\nCDLDARKCLOUDCOVER    Dark Cloud Cover\nCDLDOJI              Doji\nCDLDOJISTAR          Doji Star\nCDLDRAGONFLYDOJI     Dragonfly Doji\nCDLENGULFING         Engulfing Pattern\nCDLEVENINGDOJISTAR   Evening Doji Star\nCDLEVENINGSTAR       Evening Star\nCDLGAPSIDESIDEWHITE  Up/Down-gap side-by-side white lines\nCDLGRAVESTONEDOJI    Gravestone Doji\nCDLHAMMER            Hammer\nCDLHANGINGMAN        Hanging Man\nCDLHARAMI            Harami Pattern\nCDLHARAMICROSS       Harami Cross Pattern\nCDLHIGHWAVE          High-Wave Candle\nCDLHIKKAKE           Hikkake Pattern\nCDLHIKKAKEMOD        Modified Hikkake Pattern\nCDLHOMINGPIGEON      Homing Pigeon\nCDLIDENTICAL3CROWS   Identical Three Crows\nCDLINNECK            In-Neck Pattern\nCDLINVERTEDHAMMER    Inverted Hammer\nCDLKICKING           Kicking\nCDLKICKINGBYLENGTH   Kicking - bull/bear determined by the longer marubozu\nCDLLADDERBOTTOM      Ladder Bottom\nCDLLONGLEGGEDDOJI    Long Legged Doji\nCDLLONGLINE          Long Line Candle\nCDLMARUBOZU          Marubozu\nCDLMATCHINGLOW       Matching Low\nCDLMATHOLD           Mat Hold\nCDLMORNINGDOJISTAR   Morning Doji Star\nCDLMORNINGSTAR       Morning Star\nCDLONNECK            On-Neck Pattern\nCDLPIERCING          Piercing Pattern\nCDLRICKSHAWMAN       Rickshaw Man\nCDLRISEFALL3METHODS  Rising/Falling Three Methods\nCDLSEPARATINGLINES   Separating Lines\nCDLSHOOTINGSTAR      Shooting Star\nCDLSHORTLINE         Short Line Candle\nCDLSPINNINGTOP       Spinning Top\nCDLSTALLEDPATTERN    Stalled Pattern\nCDLSTICKSANDWICH     Stick Sandwich\nCDLTAKURI            Takuri (Dragonfly Doji with very long lower shadow)\nCDLTASUKIGAP         Tasuki Gap\nCDLTHRUSTING         Thrusting Pattern\nCDLTRISTAR           Tristar Pattern\nCDLUNIQUE3RIVER      Unique 3 River\nCDLUPSIDEGAP2CROWS   Upside Gap Two Crows\nCDLXSIDEGAP3METHODS  Upside/Downside Gap Three Methods\n```\n",
    "docs_url": null,
    "download_url": "https://github.com/mrjbq7/ta-lib/releases",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/mrjbq7/ta-lib",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "TA-Lib",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/TA-Lib/",
    "release_url": "https://pypi.org/project/TA-Lib/0.4.10/",
    "requires_python": null,
    "summary": "Python wrapper for TA-Lib",
    "version": "0.4.10"
  },
  "releases": {
    "0.4.1": [],
    "0.4.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "49bf27a7106e165aa99d8610b353f7d0",
          "sha256": "1137dedb09d3091563d251f571f4f178ffa16e56ea99b878e0c3e1e1599ff528"
        },
        "downloads": 5062,
        "filename": "TA-Lib-0.4.10.tar.gz",
        "has_sig": false,
        "md5_digest": "49bf27a7106e165aa99d8610b353f7d0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 829840,
        "upload_time": "2016-08-18T14:51:30",
        "url": "https://files.pythonhosted.org/packages/c0/13/3d92ed6c09ed585ed58aeab5da6361ff2aeff7757d8224089bd574945716/TA-Lib-0.4.10.tar.gz"
      }
    ],
    "0.4.2": [],
    "0.4.3": [],
    "0.4.4": [],
    "0.4.5": [],
    "0.4.6": [],
    "0.4.7": [],
    "0.4.8": [],
    "0.4.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2037a26dcb4d862026e342860148df61",
          "sha256": "102f7f763a90ae72dcbe9f842ec7e656007c0b4aa234899425f8be226e9c1cb9"
        },
        "downloads": 11681,
        "filename": "TA-Lib-0.4.9.tar.gz",
        "has_sig": false,
        "md5_digest": "2037a26dcb4d862026e342860148df61",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 495039,
        "upload_time": "2015-06-01T01:41:00",
        "url": "https://files.pythonhosted.org/packages/87/d3/59094a1816233adcb27159d4b0b54982eb5bde4513dba4d4f2e4f0467e3c/TA-Lib-0.4.9.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "07dab6edcb7eb2436705df84204617bd",
          "sha256": "0601c6f7007c3cf4f585dd6fd45df55720ab38bcd91f19abb807cbcbe9f5b42a"
        },
        "downloads": 4045,
        "filename": "TA-Lib-0.4.9.zip",
        "has_sig": false,
        "md5_digest": "07dab6edcb7eb2436705df84204617bd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 527861,
        "upload_time": "2015-06-01T01:57:35",
        "url": "https://files.pythonhosted.org/packages/0d/85/d80e736cafde6239eef73dabf2b5d5db53ccb5552526a1c4b127caafe917/TA-Lib-0.4.9.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "49bf27a7106e165aa99d8610b353f7d0",
        "sha256": "1137dedb09d3091563d251f571f4f178ffa16e56ea99b878e0c3e1e1599ff528"
      },
      "downloads": 5062,
      "filename": "TA-Lib-0.4.10.tar.gz",
      "has_sig": false,
      "md5_digest": "49bf27a7106e165aa99d8610b353f7d0",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 829840,
      "upload_time": "2016-08-18T14:51:30",
      "url": "https://files.pythonhosted.org/packages/c0/13/3d92ed6c09ed585ed58aeab5da6361ff2aeff7757d8224089bd574945716/TA-Lib-0.4.10.tar.gz"
    }
  ]
}