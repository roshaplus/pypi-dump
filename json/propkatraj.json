{
  "info": {
    "author": "David Dotson",
    "author_email": "dotsdl@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# README: propkatraj\n\n`propkatraj.py` can be used to computationally estimate pKa values for\nprotein residues. We use an ensemble approach where many different\nconformations are sampled with equilibrium molecular dynamics\nsimulations. We then apply the fast heuristic pKa predictor\n[PROPKA 3.1](https://github.com/jensengroup/propka-3.1) to individual\nframes of the trajectory. By analysing the statistics of the pKa\npredictions a more consistent picture emerges than from a pKa\nprediction of a single static conformation.\n\n\n## Required software\n\n* [PROPKA 3.1](https://github.com/jensengroup/propka-3.1) (used as a\n  Python package)\n* [MDAnalysis](http://mdanalysis.org)\n* [pandas](http://pandas.pydata.org/)\n\nSee [INSTALL.md](INSTALL.md) for how to install everything.\n\n## Usage\n\nThe `propkatra.get_propka()` function contains all functionality. \n\n    from propkatraj import get_propka\n\nIt takes a `MDAnalysis.Universe` instance as argument and runs PROPKA on each\nframe of the trajectory.\n\n\n    def get_propka(universe, sel='protein', start=None, stop=None, step=None):\n        Get and store pKas for titrateable residues near the binding site.\n    \n        Parameters\n        ----------\n        universe : :class:`MDAnalysis.Universe`\n            Universe to obtain pKas for.\n        sel : str, array_like\n            Selection string to use for selecting atoms to use from given\n            ``universe``. Can also be a numpy array or list of atom indices to use.\n        start : int\n            Frame of trajectory to start from. `None` means start from beginning.\n        stop : int\n            Frame of trajectory to end at. `None` means end at trajectory end.\n        step : int\n            Step by which to iterate through trajectory frames. propka is slow,\n            so set according to how finely you need resulting timeseries.\n    \n        Results\n        -------\n        pkas : :class:`pandas.DataFrame`\n            DataFrame giving estimated pKa value for each residue for each\n            trajectory frame. Residue numbers are given as column labels, times as\n            row labels.\n\nThe function returns a\n[pandas.DataFrame](http://pandas.pydata.org/pandas-docs/stable/dsintro.html#dataframe)\nwhich contains the time as the first column and the residue numbers as\nsubsequent columns. For each time step, the predicted pKa value for\nthis residue is stored. Process the `DataFrame` to obtain statistics\nas shown in the [Documentation](#Documentation).\n\n\n## Documentation\n\nSee the Jupyter notebook\n[docs/propkatraj-example.ipynb](./docs/propkatraj-example.ipynb) for\nhow to use `propkatraj.get_propka` on an example trajectory and how to\nplot the data with [seaborn](https://seaborn.pydata.org/).\n\n## Citation\n\nIf you use `propkatraj` in published work please cite Reference 1 for\nPROPKA 3.1 and Reference 2 for the ensemble method itself.\n\n1. C. R. S\u00f8ndergaard, M. H. M. Olsson, M. Rostkowski, and\n   J. H. Jensen. Improved treatment of ligands and coupling effects in\n   empirical calculation and rationalization of pKa values. *J\n   Chemical Theory and Computation*, 7(7):2284\u20132295, 2011. doi:\n   [10.1021/ct200133y](https://doi.org/10.1021/ct200133y).\n   \n2. C. Lee, S. Yashiro, D. L. Dotson, P. Uzdavinys, S. Iwata,\n   M. S. P. Sansom, C. von Ballmoos, O. Beckstein, D. Drew, and\n   A. D. Cameron. Crystal structure of the sodium-proton antiporter\n   NhaA dimer and new mechanistic insights. *J Gen Physiol*,\n   144(6):529\u2013544, 2014. doi:\n   [10.1085/jgp.201411219](https://doi.org/10.1085/jgp.201411219).\n\n## Contact\n\nPlease raise issues in the\n[issue tracker](https://github.com/Becksteinlab/propkatraj/issues).\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "propkatraj",
    "platform": "",
    "project_url": "https://pypi.org/project/propkatraj/",
    "release_url": "https://pypi.org/project/propkatraj/0.1.0/",
    "requires_python": "",
    "summary": "obtain pKas for titreatable residues from a simulation trajectory",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bad1ba2a0db8e5a82632c609a6ddf503",
          "sha256": "71f0d2fe7d4961a71248c7c4a5ccfdc8da1e971e52e6ca7b6089e81ee3eb06da"
        },
        "downloads": 0,
        "filename": "propkatraj-0.1.0-py2.7.egg",
        "has_sig": false,
        "md5_digest": "bad1ba2a0db8e5a82632c609a6ddf503",
        "packagetype": "bdist_egg",
        "python_version": "2.7",
        "size": 4595,
        "upload_time": "2017-04-18T17:33:30",
        "url": "https://files.pythonhosted.org/packages/31/30/55bf07c9389a27041715b595c9a0f591fff86e1349b98dda6680aa79e966/propkatraj-0.1.0-py2.7.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "758696cd325b57b9a5793b1ec0aa91eb",
          "sha256": "01e095c18b4160b37fe8aa8b6cf909b502d66bb2e4b09a5138e0e04dba225267"
        },
        "downloads": 0,
        "filename": "propkatraj-0.1.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "758696cd325b57b9a5793b1ec0aa91eb",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 7210,
        "upload_time": "2017-04-18T17:33:29",
        "url": "https://files.pythonhosted.org/packages/e2/36/ab13efd8b5b2d9ee13fe92981e1236f437e5484d01e52ee562812af1a97e/propkatraj-0.1.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b789b10eaf368dec667332758b3b4435",
          "sha256": "728dbaaffc37b83b8ea23c0273274ec5ff36ab9bd9ed821085e9f96d4e2147b8"
        },
        "downloads": 0,
        "filename": "propkatraj-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b789b10eaf368dec667332758b3b4435",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3882,
        "upload_time": "2017-04-18T17:33:27",
        "url": "https://files.pythonhosted.org/packages/bb/cb/ed76255345868756bc5142c0f0933390ed2fdb1e385956a8dae4482f8880/propkatraj-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "bad1ba2a0db8e5a82632c609a6ddf503",
        "sha256": "71f0d2fe7d4961a71248c7c4a5ccfdc8da1e971e52e6ca7b6089e81ee3eb06da"
      },
      "downloads": 0,
      "filename": "propkatraj-0.1.0-py2.7.egg",
      "has_sig": false,
      "md5_digest": "bad1ba2a0db8e5a82632c609a6ddf503",
      "packagetype": "bdist_egg",
      "python_version": "2.7",
      "size": 4595,
      "upload_time": "2017-04-18T17:33:30",
      "url": "https://files.pythonhosted.org/packages/31/30/55bf07c9389a27041715b595c9a0f591fff86e1349b98dda6680aa79e966/propkatraj-0.1.0-py2.7.egg"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "758696cd325b57b9a5793b1ec0aa91eb",
        "sha256": "01e095c18b4160b37fe8aa8b6cf909b502d66bb2e4b09a5138e0e04dba225267"
      },
      "downloads": 0,
      "filename": "propkatraj-0.1.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "758696cd325b57b9a5793b1ec0aa91eb",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "size": 7210,
      "upload_time": "2017-04-18T17:33:29",
      "url": "https://files.pythonhosted.org/packages/e2/36/ab13efd8b5b2d9ee13fe92981e1236f437e5484d01e52ee562812af1a97e/propkatraj-0.1.0-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "b789b10eaf368dec667332758b3b4435",
        "sha256": "728dbaaffc37b83b8ea23c0273274ec5ff36ab9bd9ed821085e9f96d4e2147b8"
      },
      "downloads": 0,
      "filename": "propkatraj-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b789b10eaf368dec667332758b3b4435",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3882,
      "upload_time": "2017-04-18T17:33:27",
      "url": "https://files.pythonhosted.org/packages/bb/cb/ed76255345868756bc5142c0f0933390ed2fdb1e385956a8dae4482f8880/propkatraj-0.1.0.tar.gz"
    }
  ]
}