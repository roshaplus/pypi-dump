{
  "info": {
    "author": "Stefan Mavrodiev",
    "author_email": "support@olimex.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Topic :: Home Automation",
      "Topic :: Software Development :: Embedded Systems"
    ],
    "description": "This package provide methods for controlling GPIO pins, I2C and SPI buses.\nThis is written for A20-OLinuXino-MICRO, but it can be used with other boards. If you do\nthis we cannot guarantee proper operation of the module. Before using this\npackage we recommend reading the article at olimex wiki:\n\nhttps://www.olimex.com/wiki/A20-OLinuXino-MICRO\n\nWhen using GPIO make sure that the desired gpio is not used by another periphery.\n\nGPIO METHODS\n============\n\n    init()      -   Make initialization of the module. Always must be called first.\n    getcfg()    -   Read current configuration of gpio.\n    setcfg()    -   Write configuration to gpio.\n    input()     -   Return current value of gpio.\n    output()    -   Set output value.\n    pullup()    -   Set pull-up/pull-down.\n\n\nThe available constants are:\n\n    NAME        -   EQUALS TO\n    ====            =========\n    HIGH        ->      1\n    LOW         ->      0\n    INPUT       ->      0\n    OUPTUT      ->      1\n    PULLUP      ->      1\n    PULLDOWN    ->      2\n\n\nThe gpio are named two ways:\n\n    By port name: PH0, PG2, PE10, etc.\n    These can be imported from port module:\n\n    >>> from pyA20.gpio import port\n    >>> dir(port)\n\n    By connector name and pin number: gpio2p12, gpio3p8, lcdp18, uext1p3 and etc.\n    These can be imported from connector module:\n\n    >>> from pyA20.gpio import connector\n    >>> dir(connector)\n\nGenerally these constants are just an offset in the memory from the base GPIO address, so they can\nbe assigned to a number type variable.\n\n    >>> led = port.PH2\n    >>> print led\n    226\n\n\n\nI2C METHODS\n===========\n\n    init()      -   Make initialization of the module\n    open()      -   Begin communication with slave device\n    read()      -   Read from slave device\n    write()     -   Write data to slave device\n    close()     -   End communication with slave device\n\n\nSPI METHODS\n===========\n\n    open()      -   Open SPI bus with given configuration\n    read()      -   Read data from slave device without write\n    write()     -   Write data to slave device without read\n    xfer()      -   Do write and after that read\n    close()     -   Close SPI bus\n\n\n\nExamples\n========\n\nGPIO::\n\n    #!/usr/bin/env python\n\n    from pyA20.gpio import gpio\n    from pyA20.gpio import port\n    from pyA20.gpio import connector\n\n    gpio.init() #Initialize module. Always called first\n\n    gpio.setcfg(port.PG9, gpio.OUTPUT)  #Configure LED1 as output\n    gpio.setcfg(port.PG9, 1)    #This is the same as above\n\n    gpio.setcfg(port.PE11, gpio.INPUT)   #Configure PE11 as input\n    gpio.setcfg(port.PE11, 0)   #Same as above\n\n    gpio.pullup(port.PE11, 0)   #Clear pullups\n    gpio.pullup(port.PE11, gpio.PULLDOWN)    #Enable pull-down\n    gpio.pullup(port.PE11, gpio.PULLUP)  #Enable pull-up\n\n    while True:\n        if gpio.input(port.PE11) == 1:\n            gpio.output(port.PG9, gpio.LOW)\n            gpio.output(port.PG9, 0)\n        else:\n            gpio.output(port.PG9, gpio.HIGH)\n            gpio.output(port.PG9, 1)\n\n\nI2C::\n\n    #!/usr/bin/env python\n\n    from pyA20 import i2c\n\n    i2c.init(\"/dev/i2c-2\")  #Initialize module to use /dev/i2c-2\n    i2c.open(0x55)  #The slave device address is 0x55\n\n    #If we want to write to some register\n    i2c.write([0xAA, 0x20]) #Write 0x20 to register 0xAA\n    i2c.write([0xAA, 0x10, 0x11, 0x12]) #Do continuous write with start address 0xAA\n\n    #If we want to do write and read\n    i2c.write([0xAA])   #Set address at 0xAA register\n    value = i2c.read(1) #Read 1 byte with start address 0xAA\n\n    i2c.close() #End communication with slave device\n\n\nSPI::\n\n    #!/usr/bin/env python\n\n    from pyA20 import spi\n\n    spi.open(\"/dev/spidev2.0\")\n    #Open SPI device with default settings\n    # mode : 0\n    # speed : 100000kHz\n    # delay : 0\n    # bits-per-word: 8\n\n    #Different ways to open device\n    spi.open(\"/dev/spidev2.0\", mode=1)\n    spi.open(\"/dev/spidev2.0\", mode=2, delay=0)\n    spi.open(\"/dev/spidev2.0\", mode=3, delay=0, bits_per_word=8)\n    spi.open(\"/dev/spidev2.0\", mode=0, delay=0, bits_per_word=8, speed=100000)\n\n    spi.write([0x01, 0x02]) #Write 2 bytes to slave device\n    spi.read(2) #Read 2 bytes from slave device\n    spi.xfer([0x01, 0x02], 2)   #Write 2 byte and then read 2 bytes.\n\n    spi.close() #Close SPI bus\n\n\nIt's important that you run your python script as root!\n    \n\n    Changelog\n=========\n    * pyA20 0.2.1 (30 JUN 2015)\n        * Fixed gpio1 connector constants\n        * Fixed issue with SPI xfer function\n\n    * pyA20 0.2.0 (02 SEP 2014)\n        * Updated to enable SPI and I2C control\n        * GPIO constant in separate modules\n        * Added example files\n        * Added support for Python3",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://www.olimex.com/",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pyA20",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pyA20/",
    "release_url": "https://pypi.org/project/pyA20/0.2.1/",
    "requires_dist": [],
    "requires_python": null,
    "summary": "Control GPIO, I2C and SPI",
    "version": "0.2.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a8e173f7bcad826c4603e026aeb4630b",
          "sha256": "7d0d06bc607dda83e3e06d7dea2751b9e07aad79469f791d83213b27057800d6"
        },
        "downloads": -1,
        "filename": "pyA20-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a8e173f7bcad826c4603e026aeb4630b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4834,
        "upload_time": "2013-08-20T05:33:22",
        "url": "https://files.pythonhosted.org/packages/11/0b/af68c9d306babd6b4d2213d3c925250aea7550adf5deebf08b2e65e28874/pyA20-0.1.0.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "93352b0e371cfc2d71e33de3db0af9cc",
          "sha256": "2f8fcda878e25157145a36cf71c6d1f6d032316bfcbd3c2e9e067d6c05c0efda"
        },
        "downloads": -1,
        "filename": "pyA20-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "93352b0e371cfc2d71e33de3db0af9cc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6731,
        "upload_time": "2013-08-23T14:01:51",
        "url": "https://files.pythonhosted.org/packages/e0/21/ca75df3e5f5ea699ad68454784f5eec621cfe806a3934173769f003da9f1/pyA20-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a08bd8c2851331324b0965b0da90c98c",
          "sha256": "bc06ac950a46bbc530f55a447b08923c43b52ea73a7d0fd9e1baccf26d314e53"
        },
        "downloads": -1,
        "filename": "pyA20-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a08bd8c2851331324b0965b0da90c98c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5850,
        "upload_time": "2013-08-23T14:04:41",
        "url": "https://files.pythonhosted.org/packages/ed/ee/95dae8b01bdf548b3d589239a5ad2de21e876daa1fe8ad212aaa365fa092/pyA20-0.1.3.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "67f228bf5fce2b1a2343ea1320ec4a24",
          "sha256": "0ff2c653596cb88dc70290755ec6ee7277deadcbfc1f0b37e086e07cb4a7dc5a"
        },
        "downloads": -1,
        "filename": "pyA20-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "67f228bf5fce2b1a2343ea1320ec4a24",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6716,
        "upload_time": "2013-09-13T12:54:51",
        "url": "https://files.pythonhosted.org/packages/cc/cc/ce9d9d3e907d11d29fcb35479d76c88a88de52bafa6ad49599f1c5796561/pyA20-0.1.4.tar.gz"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6b2db6d4a9465fda12dd4470113e526b",
          "sha256": "02f05f9be8d4950a2898a2c5f5bc9e427d4a8cac85a19eff37cecb674580e7aa"
        },
        "downloads": -1,
        "filename": "pyA20-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6b2db6d4a9465fda12dd4470113e526b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6650,
        "upload_time": "2013-09-13T12:57:25",
        "url": "https://files.pythonhosted.org/packages/55/2c/8da847bc583f4f23234025c022e5a1a191631a1c3843f46cd6bde60bb0a2/pyA20-0.1.5.tar.gz"
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ee29f1ced6366eced83724a6cd736c0e",
          "sha256": "bc4501dfd2188bed0025db46cea98f14de464ed47d6591e15b22a0ac9a8c684f"
        },
        "downloads": -1,
        "filename": "pyA20-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ee29f1ced6366eced83724a6cd736c0e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6609,
        "upload_time": "2013-09-13T13:00:06",
        "url": "https://files.pythonhosted.org/packages/42/5b/fdc33e58deb009814eb9d5c22f3beeee34d7c70c694b738015f309015796/pyA20-0.1.6.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b4115859834f09ebd389f810f2ffefb9",
          "sha256": "9855747d9bbdfcce6b460fcd67d953155e39f4e002a9a4c573910248b451dad8"
        },
        "downloads": -1,
        "filename": "pyA20-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b4115859834f09ebd389f810f2ffefb9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14433,
        "upload_time": "2014-09-04T10:34:05",
        "url": "https://files.pythonhosted.org/packages/73/8b/b15a0b201b105c85ee0cf33fc485618fcd6c9e1bd91f432cf02d6e74b2d5/pyA20-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2290066bbe274000c53693959a8005b4",
          "sha256": "b15e4ee1016b7eb52001cbccde3751868624a88d2adbb9adc5404628f7e59e7e"
        },
        "downloads": -1,
        "filename": "pyA20-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2290066bbe274000c53693959a8005b4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14520,
        "upload_time": "2015-06-30T08:20:57",
        "url": "https://files.pythonhosted.org/packages/8e/a5/8169ac07290b7d7dfff96dbf68707a2154171e48294e78eb7623758a299f/pyA20-0.2.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2290066bbe274000c53693959a8005b4",
        "sha256": "b15e4ee1016b7eb52001cbccde3751868624a88d2adbb9adc5404628f7e59e7e"
      },
      "downloads": -1,
      "filename": "pyA20-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2290066bbe274000c53693959a8005b4",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 14520,
      "upload_time": "2015-06-30T08:20:57",
      "url": "https://files.pythonhosted.org/packages/8e/a5/8169ac07290b7d7dfff96dbf68707a2154171e48294e78eb7623758a299f/pyA20-0.2.1.tar.gz"
    }
  ]
}