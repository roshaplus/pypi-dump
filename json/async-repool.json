{
  "info": {
    "author": "Bogdan Gladyshev",
    "author_email": "siredvin.dark@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "=================================\nAsyncIO RethinkDB connection pool\n=================================\n\n\n.. image:: https://img.shields.io/pypi/v/async-repool.svg\n        :target: https://pypi.python.org/pypi/async-repool\n.. image:: https://img.shields.io/pypi/l/async-repool.svg\n        :target: https://pypi.python.org/pypi/async-repool\n.. image:: https://gitlab.com/AnjiProject/async-repool/badges/master/build.svg\n        :target: https://gitlab.com/AnjiProject/async-repool\n\n:code:`async-repool` is a Python library which provides a asyncio-based connection pool management for accessing a RethinkDB database. :code:`async-repool` creates and maintains a configurable pool of active connection to a RethinkDB database. These connections are then available individually through a basic API.\n\nInternally, repool uses the Python `AsyncIO Queue`_ class which is not thread-safe. This means that the same connection pool cannot be share between several threads, please, use asyncio with process workers instead.\n\nThis is just asyncio-based clone of repool_.\n\nInstallation\n------------\n\n:code:`async-repool` is available as a python library on Pypi. Installation is very simple using pip :\n\n.. code:: bash\n\n    $ pip install async_repool\n\nThis will install :code:`async-repool` as well as rethinkdb dependency.\n\nBasic usage\n-----------\n\nA new connection pool using default connection configurations can simply be created by:\n\n.. code:: python\n\n    from async_repool import AsyncConnectionPool\n\n    pool = AsyncConnectionPool(dict())  # Required argument is kwargs for R.connect function\n    await pool.init_pool()\n    conn = await pool.acquire()         #returns a Connection instance\n    await r.table('heroes').run(conn)   #do RethinkDB stuff\n    # ...\n    pool.release(conn)          #put back connection to the pool\n    await pool.release_pool()         #release pool (close rethinkdb connections)\n\n    # ...\n    async with pool.connect() as conn1:\n        # do something with conn1\n    # pool.release(conn1) is automatically called after leaving the with code block\n\n\nOptional arguments\n------------------\n\n:code:`AsyncConnectionPool` creation accepts a number of optional arguments:\n\n- :code:`pool_size`: set the pool size, ie. the number of connections opened simultaneously (default=3).\n- :code:`connection_ttl`: set the connection time to live. Connections older than TTL are automatically closed and re-opened when acquire (default=3600 seconds, set to 0 for disable)\n\n.. _`AsyncIO Queue`: https://docs.python.org/3/library/asyncio-queue.html\n.. _repool: https://github.com/njouanin/repool\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://gitlab.com/AnjiProject/async-repool",
    "keywords": "rethinkdb asyncio connection pool",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "async-repool",
    "platform": "",
    "project_url": "https://pypi.org/project/async-repool/",
    "release_url": "https://pypi.org/project/async-repool/0.2.1/",
    "requires_dist": [
      "rethinkdb (>=2.3.0.post6)"
    ],
    "requires_python": "",
    "summary": "AsyncIO connection pool for RethinkDB",
    "version": "0.2.1"
  },
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4172f2f0c3184be57839d442a8605ad6",
          "sha256": "bd9e8b4161066cb9b6bd5610ac44d27ec3d51ef6ac3027a7954605e3f19755b0"
        },
        "downloads": -1,
        "filename": "async_repool-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4172f2f0c3184be57839d442a8605ad6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7032,
        "upload_time": "2017-12-20T11:24:49",
        "url": "https://files.pythonhosted.org/packages/c9/f6/635e07ec0edbff52898ba1631a98e31a44b9693cd3edea9dd52e2fd09e30/async_repool-0.2.1-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4172f2f0c3184be57839d442a8605ad6",
        "sha256": "bd9e8b4161066cb9b6bd5610ac44d27ec3d51ef6ac3027a7954605e3f19755b0"
      },
      "downloads": -1,
      "filename": "async_repool-0.2.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4172f2f0c3184be57839d442a8605ad6",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 7032,
      "upload_time": "2017-12-20T11:24:49",
      "url": "https://files.pythonhosted.org/packages/c9/f6/635e07ec0edbff52898ba1631a98e31a44b9693cd3edea9dd52e2fd09e30/async_repool-0.2.1-py2.py3-none-any.whl"
    }
  ]
}