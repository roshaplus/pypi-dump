{
  "info": {
    "author": "Hubble",
    "author_email": "dev@hubblehq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Heroku Kafka\n\n**THIS IS AN UNOFFICIAL PACKAGE**\n\nHeroku Kafka is a python package to help you get setup quickly and easily with Kafka on Heroku. There is an [offical package](https://github.com/heroku/kafka-helper) that is possibly more secure however it has not been updated to support python 3 correctly and does not seem to be maintained anymore. \n\n\n## Install\n\nThe easiest way to install the package is through pip.\n```\npip install heroku-kafka\n```\n\n## Usage\n\nThis package uses the [kafka-python package](https://github.com/dpkp/kafka-python) and the `HerokuKafkaProducer` and `HerokuKafkaConsumer` classes both inherit from the kafka-python base classes, and will contain all the same methods.\n\nNote: You can use this package on local by setting up an .env file using the same kafka\nenvironment variables as you have on your heroku site.\n\nNote: To test it is working on local I would install [heroku-kafka-util](https://github.com/osada9000/heroku-kafka-util) so you can see messages are being sent etc.\n\n### Producer\n\n```python\nfrom heroku_kafka import HerokuKafkaProducer\n\n\"\"\"\nAll the variable names here match the heroku env variable names.\nJust pass the env values straight in and it will work.\n\"\"\"\nproducer = HerokuKafkaProducer(\n    url: KAFKA_URL, # Url string provided by heroku\n    ssl_cert: KAFKA_CLIENT_CERT, # Client cert string\n    ssl_key: KAFKA_CLIENT_CERT_KEY, # Client cert key string\n    ssl_ca: KAFKA_TRUSTED_CERT, # Client trusted cert string\n    prefix: KAFKA_PREFIX # Prefix provided by heroku\n)\n\n\"\"\"\nThe .send method will automatically prefix your topic with the KAFKA_PREFIX\nNOTE: If the message doesn't seem to be sending try `producer.flush()` to force send.\n\"\"\"\nproducer.send('topic_without_prefix', b\"some message\")\n```\n\nFor all other methods and properties refer to: [KafkaProducer Docs](https://kafka-python.readthedocs.io/en/master/apidoc/KafkaProducer.html).\n\n\n### Consumer\n```python\nfrom heroku_kafka import HerokuKafkaConsumer\n\n\"\"\"\nAll the variable names here match the heroku env variable names,\njust pass the env values straight in and it will work.\n\n*topics are optional and you can pass as many as you want in for the consumer to track,\nhowever if you want to subscribe after creation just use .subscribe as shown below.\n\nNote: The KAFKA_PREFIX will be added on automatically so don't worry about passing it in.\n\"\"\"\nconsumer = HerokuKafkaConsumer(\n    'topic_without_prefix_1', # Optional: You don't need to pass any topic at all\n    'topic_without_prefix_2', # You can list as many topics as you want to consume\n    url: KAFKA_URL, # Url string provided by heroku\n    ssl_cert: KAFKA_CLIENT_CERT, # Client cert string\n    ssl_key: KAFKA_CLIENT_CERT_KEY, # Client cert key string\n    ssl_ca: KAFKA_TRUSTED_CERT, # Client trusted cert string\n    prefix: KAFKA_PREFIX # Prefix provided by heroku\n)\n\n\"\"\"\nTo subscribe to topic(s) after creating a consumer pass in a list of topics without the\nKAFKA_PREFIX.\n\"\"\"\nconsumer.subscribe(topics=('topic_without_prefix'))\n\n\"\"\"\n.assign requires a full topic name with prefix\n\"\"\"\nconsumer.assign([TopicPartition('topic_with_prefix', 2)])\n\n\"\"\"\nListening to events it is exactly the same as in kafka_python.\nRead the documention linked below for more info!\n\"\"\"\nfor msg in consumer:\n    print (msg)\n```\n\nFor all other methods and properties refer to: [KafkaConsumer Docs](https://kafka-python.readthedocs.io/en/master/apidoc/KafkaConsumer.html).\n\n## Known Issues \n- `.assign` does not add in the topic prefix.\n- .NamedTemporaryFile may not work properly on a Windows system\n\n## Contribution\nIf you come across any issues feel free to fork and create a PR!\n\n## Setup\nFork the repo, setup virtualenv and pip install\n```bash\n>>> git clone git@github.com:<fork-repo>.git\n>>> cd <fork-repo>\n>>> virtualenv -p python3 venv\n>>> source venv/bin/activate\n>>> pip install -r requirements.txt\n```\n\nCreate a .env file with working kafka information (that includes 2 working topics at the moment). \n```\nKAFKA_URL=\"\"\nKAFKA_CLIENT_CERT=\"\"\nKAFKA_CLIENT_CERT_KEY=\"\"\nKAFKA_TRUSTED_CERT=\"\"\nKAFKA_PREFIX=\"\"\n\nTOPIC1=\"\"\nTOPIC2=\"\"\n```\n\n## Tests\nPlease make sure that any extra code you write comes with a test, it doesn't need to be over the top but just check what you have written works.\n\nAll tests at the moment require a working kafka setup as its pretty hard to check it is connecting correctly without them. This means it will also require an internet connection.\n\nTo run the tests:\n```bash\n>>> python test.py\n```",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/HubbleHQ/heroku-kafka",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "heroku-kafka",
    "platform": "",
    "project_url": "https://pypi.org/project/heroku-kafka/",
    "release_url": "https://pypi.org/project/heroku-kafka/1.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Python kafka package for use with heroku's kafka.",
    "version": "1.1.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e6c3602d460fb6c4890f954eae6f115e",
          "sha256": "9ec025ce6b8bd5305c1d6640f4b136e1668ad3f7edc8b28730ca966b17a25396"
        },
        "downloads": -1,
        "filename": "heroku-kafka-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e6c3602d460fb6c4890f954eae6f115e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4683,
        "upload_time": "2018-01-04T18:01:16",
        "url": "https://files.pythonhosted.org/packages/24/f6/5d645e47ea76869e492e013d678a1e8d042bb0fddb19d9f2a9c838169762/heroku-kafka-1.0.0.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fd6e17921394ea959c6c79a267b51870",
          "sha256": "983a46391d66ab0c672bc8ba893745694c1311f9cea550d9ede11aa2ec2abf97"
        },
        "downloads": -1,
        "filename": "heroku-kafka-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fd6e17921394ea959c6c79a267b51870",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4626,
        "upload_time": "2018-01-09T17:18:29",
        "url": "https://files.pythonhosted.org/packages/f2/f1/a082cad000c900c125089c775836299cb97a100a8aae6feea3a6998ee5d7/heroku-kafka-1.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fd6e17921394ea959c6c79a267b51870",
        "sha256": "983a46391d66ab0c672bc8ba893745694c1311f9cea550d9ede11aa2ec2abf97"
      },
      "downloads": -1,
      "filename": "heroku-kafka-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fd6e17921394ea959c6c79a267b51870",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4626,
      "upload_time": "2018-01-09T17:18:29",
      "url": "https://files.pythonhosted.org/packages/f2/f1/a082cad000c900c125089c775836299cb97a100a8aae6feea3a6998ee5d7/heroku-kafka-1.1.0.tar.gz"
    }
  ]
}