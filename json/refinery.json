{
  "info": {
    "author": "Devin Bobadilla",
    "author_email": "MosesBobadilla@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "Refinery is a map extractor for games utilizing Bungie's Blam engine.\n\nHere's a list of what Refinery can currently do:\n    * Load and extract tags from Halo 1 Xbox, PC, CE, PC Demo, and Yelo maps\n    * Load and extract tags from Stubbs the Zombie maps on PC and Xbox\n    * Load and extract tags from CE(not PC) resource maps(loc.map, bitmaps.map, and sounds.map)\n\n    * Display all pertinent information contained in the map's header, tag index, \n        scenario bsp headers, and Open sauce header(if it exists).\n    * Has 3 ways to view the map contents: hierarchy, class, and hybrid\n        Hierarchy sorts the tags by folder, like a regular directory structure.\n        Class sorts all tags by their class(bitmap, gbxmodel, weapon, etc)\n        Hybrid combines the two. It sorts everything by class, then inside\n        each class is a directory structure of all tags of that class.\n\n    * Extract all Halo 1 tags\n    * Extract all Open sauce tags\n    * Extract the cheape.map from Yelo maps\n    * Extract most Stubbs the Zombie tags(excludes vege, imef, terr, bipd, vehi, and\n        obje tag classes)\n\n    * Decompress and save Xbox maps\n    * Save any loaded non-resource map(rearranges structures and renames protected\n        tags so the map can be opened by other map tools)\n\n    * Allows you to rename tags and folders of tags in any loaded non-resource map(tags\n        have to at least partially exist in the map to rename them, i.e. they cannot be\n        in a resource map.)\n    * Allowspreviewing any tag in the map as if loaded in Mozzarilla. Changes made\n        to the tag will NOT be saved to the map. Exporting works in the window, but rawdata\n        will be in little-endian and other meta-specific details will not have been tweaked,\n        so don't expect to be able to properly import ANY exported block into a tag.\n    * Allows extraction by tag class as well as by folder or individual tags.\n\n\nHere's what is currently NOT implemented that I plan to add at some point in the future:\n    * Ripping from Yelo resource maps\n    * Fixing mangled class names(aka Zteam protection)\n        Most of the framework is in place to do this, I've just gotta fill in hundreds of offsets.\n    * Recursive extraction.\n    * Recursive renaming(you rename a biped/weapon/etc and it'll intelligently put most\n        tags it references in the same folder).\n    * Using hashcaches of collections of tags to detect and rename any matching ones in the map.\n    * Using heuristics to rename tags based on gleamed information(weapon/vehicle names\n        in the strings list, shaders/bitmaps/physics/collision/animations that go with them, etc).\n    * Using a config file to save your settings between sessions.\n\n\nHere are all the known bugs that I can think of right now(I plan to fix them):\n    * Tag explorers might not be sorted if you edit them(if you rename an entire folder\n        and it disappears from the tree, it will be added to the bottom instead of alphabetically)\n\n\nSo now that you've read all that, here's a few tips on using Refinery:\n    * After you've loaded a map you can extract everything to the \"Default extraction folder\"\n        by leaving the queue empty. Tags will not be overwritten when doing this.\n    * You can double click an item in the map explorer(or select multiple and hit enter) to\n        either rename it/them, add it/them to the queue, or preview the tag(only if selecting\n        individual tags).\n    * Renaming a folder to one that already exists puts all tags in that folder into the new one.\n    * Renaming is case insensitive, and everything gets converted to lowercase. It's just\n        easier this way.\n    * Before you start adding things to the queue you should set the \"Default extraction folder\"\n        in the main window. This way when you add items to the queue, their extraction folder\n        defaults to it and you dont have to keep re-selecting it.\n    * If the project_yellow_globals tag doesnt extract, go into the settings and check\n        \"Use old project_yellow_globals definition\".\n    * If you just want stuff from the bitmaps.map, sounds.map, or loc.map just load that map\n        up instead of an actual map.\n    * If you only want one type of tag(all bitmaps) then change the explorer to \"class\" view,\n        select the tag class(bitm in this case), and add it to the queue.\n    * You can edit the details of something in the queue by double clicking it.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://bitbucket.org/Moses_of_Egypt/refinery",
    "keywords": "refinery,halo",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "refinery",
    "platform": "POSIX",
    "project_url": "https://pypi.org/project/refinery/",
    "release_url": "https://pypi.org/project/refinery/1.2.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A map extractor for games built with the Blam engine",
    "version": "1.2.3"
  },
  "releases": {
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "73123bda1e27962629ecdcaaf694c228",
          "sha256": "e7f4f3349e3fd1e0fbe268d45d73693dc4038b450805aa8be9feb13272afe3f7"
        },
        "downloads": 0,
        "filename": "refinery-1.2.3-py3.5.egg",
        "has_sig": false,
        "md5_digest": "73123bda1e27962629ecdcaaf694c228",
        "packagetype": "bdist_egg",
        "python_version": "3.5",
        "size": 129097,
        "upload_time": "2017-09-06T19:55:52",
        "url": "https://files.pythonhosted.org/packages/41/19/444e398348b4f1127050e72ba49bb2f84dc82788500056ad04c0bd54fd0e/refinery-1.2.3-py3.5.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a5240fa53319462724012f82c946a0e1",
          "sha256": "f102ec998b74bb775ddcc728ab3dfe56d98d2d0f4317f6a1d0b937d214948f18"
        },
        "downloads": 0,
        "filename": "refinery-1.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5240fa53319462724012f82c946a0e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 60975,
        "upload_time": "2017-09-06T19:55:56",
        "url": "https://files.pythonhosted.org/packages/ac/3e/6564bb5b58b23238a3dbd01501d831c4059feb27f9027ca4ab4093459250/refinery-1.2.3-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "73123bda1e27962629ecdcaaf694c228",
        "sha256": "e7f4f3349e3fd1e0fbe268d45d73693dc4038b450805aa8be9feb13272afe3f7"
      },
      "downloads": 0,
      "filename": "refinery-1.2.3-py3.5.egg",
      "has_sig": false,
      "md5_digest": "73123bda1e27962629ecdcaaf694c228",
      "packagetype": "bdist_egg",
      "python_version": "3.5",
      "size": 129097,
      "upload_time": "2017-09-06T19:55:52",
      "url": "https://files.pythonhosted.org/packages/41/19/444e398348b4f1127050e72ba49bb2f84dc82788500056ad04c0bd54fd0e/refinery-1.2.3-py3.5.egg"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "a5240fa53319462724012f82c946a0e1",
        "sha256": "f102ec998b74bb775ddcc728ab3dfe56d98d2d0f4317f6a1d0b937d214948f18"
      },
      "downloads": 0,
      "filename": "refinery-1.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a5240fa53319462724012f82c946a0e1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 60975,
      "upload_time": "2017-09-06T19:55:56",
      "url": "https://files.pythonhosted.org/packages/ac/3e/6564bb5b58b23238a3dbd01501d831c4059feb27f9027ca4ab4093459250/refinery-1.2.3-py3-none-any.whl"
    }
  ]
}