{
  "info": {
    "author": "TripleO Team",
    "author_email": "mbultel@redhat.com, mcornea@redhat.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Topic :: Utilities"
    ],
    "description": "tripleo-upgrade\n=========\n\nThis role aims to provide a unified tool for upgrading TripleO based deploments.\n\nRequirements\n------------\n\nThis role requires:\n\n* An ansible inventory file containing reacheable undercloud and overcloud nodes\n\n* Nodes in the inventory file are placed in groups based on their roles (e.g compute nodes are part of the 'compute' group)\n\n* Repositories containing packages to be upgraded are already installed on undercloud and overcloud nodes (or, for overcloud, define an upgrade_init_command variable)\n\n* The initial overcloud deploy command is placed in a script file located in the path set by the overcloud_deploy_script var. Each option/environment file should be placed on a separate new line, e.g:\n\n    source ~/stackrc\n    export THT=/usr/share/openstack-tripleo-heat-templates/\n\n    openstack overcloud deploy --templates $THT \\\n    -r ~/openstack_deployment/roles/roles_data.yaml \\\n    -e $THT/environments/network-isolation.yaml \\\n    -e $THT/environments/network-management.yaml \\\n    -e $THT/environments/storage-environment.yaml \\\n    -e ~/openstack_deployment/environments/nodes.yaml \\\n    -e ~/openstack_deployment/environments/network-environment.yaml \\\n    -e ~/openstack_deployment/environments/disk-layout.yaml \\\n    -e ~/openstack_deployment/environments/neutron-settings.yaml \\\n    --log-file overcloud_deployment.log &> overcloud_install.log\n\nRole Variables\n--------------\n\nAvailable variables are listed below:\n\n    upgrade_noop: false\n\nOnly create upgrade scripts without running them\n\n    update_noop: false\n\nOnly create update scripts without running them\n\n    undercloud_upgrade: false\n\nRun undercloud upgrade\n\n    overcloud_upgrade: false\n\nRun overcloud upgrade\n\n    undercloud_update: false\n\nRun undercloud update\n\n    overcloud_update: false\n\nRun overcloud update\n\n    overcloud_deploy_script: \"~/overcloud_deploy.sh\"\n\nLocation of the initial overcloud deploy script.\n\n    undercloud_upgrade_script: \"~/undercloud_upgrade.sh\"\n\nLocation of the undercloud upgrade script which is going to be generated by this role.\n\n    overcloud_composable_upgrade_script: \"~/composable_docker_upgrade.sh\"\n\nLocation of the upgrade script used in the composable docker upgrade step which is going to be generated by this role.\n\n    overcloud_converge_upgrade_script: \"~/converge_docker_upgrade.sh\"\n\nLocation of the upgrade script used in the converge docker upgrade step which is going to be generated by this role.\n\n    undercloud_rc: \"~/stackrc\"\n\nLocation of the undercloud credentials file.\n\n    overcloud_rc: \"~/overcloudrc\"\n\nLocation of the overcloud credentials file.\n\n    upgrade_workarounds: false\n\nAllows the user to apply known issues workarounds during the upgrade process. The list of patches/commands used for workarounds should be passed via --extra-vars and it should include dictionaries for undercloud/overcloud workarounds.\n\n    use_oooq: false\n\nSet to true when the deployment has been done by tripleo quickstart.\n\n    workload_launch: false\n\nSet to true to launch an instance before starting upgrade. This can be useful for running tests during upgrade such as live migration or floating IP connectivity checks.\n\n    external_network_name: \"public\"\n\nName of the external network providing floating IPs for instance connectivity. This provides external connectivity and needs to exist beforehand, created by the user.\n\n    workload_image_url: \"http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img\"\n\nURL of the image used for the workload instance.\n\n    workload_memory: \"512\"\n\nAmount of memory assigned for the workload instance.\n\n    tripleo_ci: false\n\nSet to true when running the role in the TripleO CI jobs. It avoids losing connectivity to the undercloud by skipping reboot and ssh kill tasks.\n\n    upgrade_init_command: |\n        sudo tripleo-repos -b pike current\n\nBash commands, defines a custom upgrade init to be taken into account during overcloud upgrade.\n\nDependencies\n------------\n\nNone.\n\nExample Playbook\n----------------\n\nAn example playbook is provided in tests/test.yml:\n\n    - hosts: undercloud\n      gather_facts: true\n      become: yes\n      become_method: sudo\n      become_user: stack\n      roles:\n        - tripleo-upgrade\n\n\nUsage with tripleo Quickstart\n-----------------------------\n\nAfter a successful deployment with OOOQ, you can create the necessary\nscripts using this example playbook (duplicate from\n./tests/oooq-test.yaml):\n\n    ---\n    - hosts: undercloud\n      gather_facts: true\n      become: yes\n      become_method: sudo\n      become_user: stack\n      roles:\n      - { role: tripleo-upgrade, use_oooq: 'true'}\n\n\nAnd then you run it like this (adjust the paths to your oooq specific\none)\n\n   ANSIBLE_SSH_ARGS=\"-F $(pwd)/ssh.config.ansible\" \\\n     ANSIBLE_CONFIG=$PWD/ansible.cfg \\\n     ansible-playbook -i hosts -vvv tripleo-upgrade/tests/oooq-test.yaml\n\nThis will only create the file (without running the actual upgrade):\n - undercloud_upgrade.sh\n - container_images_download.sh\n - local_docker_registry_env.sh\n - composable_docker_upgrade.sh\n - overcloud-compute-*_upgrade_pre.sh\n - overcloud-compute-*_upgrade.sh\n - overcloud-compute-*_upgrade_post.sh\n - converge_docker_upgrade.sh\n\nwith the correct parameters.\n\nUsage with InfraRed\n-----------------------------\n\ntripleo-upgrade comes preinstalled as an InfraRed plugin. After a successful InfraRed\novercloud deployment you need to run the following steps to upgrade the deployment:\n\nSymlink roles path:\n\n    ln -s $(pwd)/plugins $(pwd)/plugins/tripleo-upgrade/infrared_plugin/roles\n\nSet up undercloud upgrade repositories:\n\n    infrared tripleo-undercloud \\\n        --upgrade yes \\\n        --mirror ${mirror_location} \\\n        --ansible-args=\"tags=upgrade_repos\"\n\nSet up undercloud update repositories:\n\n    infrared tripleo-undercloud \\\n        --update-undercloud yes \\\n        --mirror ${mirror_location} \\\n        --build latest \\\n        --version 12 \\\n        --ansible-args=\"tags=upgrade_repos\"\n\nUpgrade undercloud:\n\n    infrared tripleo-upgrade \\\n        --undercloud-upgrade yes\n\nUpdate undercloud:\n\n    infrared tripleo-upgrade \\\n        --undercloud-update yes\n\nSet up overcloud upgrade repositories:\n\n    infrared tripleo-overcloud \\\n        --deployment-files virt \\\n        --upgrade yes \\\n        --mirror ${mirror_location} \\\n        --ansible-args=\"tags=upgrade_collect_info,upgrade_repos\"\n\nSet up overcloud update repositories/containers:\n\n    infrared tripleo-overcloud \\\n        --deployment-files virt \\\n        --ocupdate True \\\n        --build latest \\\n        --ansible-args=\"tags=update_collect_info,update_undercloud_validation,update_repos,update_prepare_containers\"\n\nUpgrade overcloud:\n\n    infrared tripleo-upgrade \\\n        --overcloud-upgrade yes\n\nUpdate overcloud:\n    infrared tripleo-upgrade \\\n        --overcloud-update yes\n\nRunning the role manually from the undercloud\n---------------------------------------------\nThis role can be run manually from the undercloud by doing the following steps:\n\nNote: before starting the upgrade process make sure that both the undercloud\nand overcloud nodes have the repositories with upgraded packages set up\n\nClone this repository\n    git clone https://github.com/redhat-openstack/tripleo-upgrade.git\n\nSet ansible roles path\n    ANSIBLE_ROLES_PATH=$(pwd)\n\nCreate inventory file\n    printf \"[undercloud]\\nlocalhost  ansible_connection=local\" > hosts\n\nRun the playbook including this role\n    ansible-playbook -i hosts tripleo-upgrade/tests/test.yml\n\nLicense\n-------\n\nBSD\n\nAuthor Information\n------------------\n\nAn optional section for the role authors to include contact information, or a website (HTML is not allowed).\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/redhat-openstack/tripleo-upgrade",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tripleo-upgrade",
    "platform": "",
    "project_url": "https://pypi.org/project/tripleo-upgrade/",
    "release_url": "https://pypi.org/project/tripleo-upgrade/1.0.0/",
    "requires_dist": [
      "ansible",
      "pbr (>=1.6)"
    ],
    "requires_python": "",
    "summary": "tripleo-upgrade - An ansible role for upgrade and update a TripleO deployment",
    "version": "1.0.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "69de6586fb8b3e5f4d798a1b39999200",
          "sha256": "f4b3635a93cd98959531e4e442b30ae4c23030be3547a3ec66c917efb1030c75"
        },
        "downloads": -1,
        "filename": "tripleo_upgrade-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69de6586fb8b3e5f4d798a1b39999200",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 53520,
        "upload_time": "2018-01-12T19:29:47",
        "url": "https://files.pythonhosted.org/packages/32/3a/87d04302b21f194e25725ba414b32cb862ddb1f9fc282253e51d0a0c88d7/tripleo_upgrade-1.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "eefb370b59c9b3162ede0e1b94078e86",
          "sha256": "4b7037771a37d967e5246dbc256b0475295b4652213540813c2de9e955427845"
        },
        "downloads": -1,
        "filename": "tripleo-upgrade-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "eefb370b59c9b3162ede0e1b94078e86",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 36068,
        "upload_time": "2018-01-12T19:29:51",
        "url": "https://files.pythonhosted.org/packages/58/18/947b2db6ca9dcd2abf0656244f2de8d61b1d94cc0c7ba711355e3bea40cc/tripleo-upgrade-1.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "69de6586fb8b3e5f4d798a1b39999200",
        "sha256": "f4b3635a93cd98959531e4e442b30ae4c23030be3547a3ec66c917efb1030c75"
      },
      "downloads": -1,
      "filename": "tripleo_upgrade-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "69de6586fb8b3e5f4d798a1b39999200",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 53520,
      "upload_time": "2018-01-12T19:29:47",
      "url": "https://files.pythonhosted.org/packages/32/3a/87d04302b21f194e25725ba414b32cb862ddb1f9fc282253e51d0a0c88d7/tripleo_upgrade-1.0.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "eefb370b59c9b3162ede0e1b94078e86",
        "sha256": "4b7037771a37d967e5246dbc256b0475295b4652213540813c2de9e955427845"
      },
      "downloads": -1,
      "filename": "tripleo-upgrade-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "eefb370b59c9b3162ede0e1b94078e86",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 36068,
      "upload_time": "2018-01-12T19:29:51",
      "url": "https://files.pythonhosted.org/packages/58/18/947b2db6ca9dcd2abf0656244f2de8d61b1d94cc0c7ba711355e3bea40cc/tripleo-upgrade-1.0.0.tar.gz"
    }
  ]
}