{
  "info": {
    "author": "Justin Iso",
    "author_email": "justin+polling@justiniso.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![Build Status](https://travis-ci.org/justiniso/polling.svg?branch=master)](https://travis-ci.org/justiniso/polling)\n\npolling\n=============\n\nPolling is a powerful python utility used to wait for a function to return a certain expected condition.\nSome possible uses cases include:\n\n- Wait for API response to return with code 200\n- Wait for a file to exist (or not exist)\n- Wait for a thread lock on a resource to expire\n\n# Installation\n\n    pip install polling\n\n# Examples\n\n### Example: Poll every minute until a url returns 200 status code\n\n```python\nimport requests\npolling.poll(\n    lambda: requests.get('http://google.com').status_code == 200,\n    step=60,\n    poll_forever=True)\n```\n\nIf you are creating a new cloud provider instance (e.g. waiting for an EC2 instance to come online), you can continue to poll despite getting ConnectionErrors:\n\n```python\nimport requests\npolling.poll(\n    lambda: requests.get('your.instance.ip').status_code == 200,\n    step=60,\n    ignore_exceptions=(requests.exceptions.ConnectionError,),\n    poll_forever=True)\n```\n\n### Example: Poll for a file to exist\n\n```python\n# This call will wait until the file exists, checking every 0.1 seconds and stopping after 3 seconds have elapsed\nfile_handle = polling.poll(\n    lambda: open('/tmp/myfile.txt'),\n    ignore_exceptions=(IOError,),\n    timeout=3,\n    step=0.1)\n\n# Polling will return the value of your polling function, so you can now interact with it\nfile_handle.close()\n```\n    \n### Example: Polling for Selenium WebDriver elements\n\n```python\nfrom selenium import webdriver\ndriver = webdriver.Firefox()\n\ndriver.get('http://google.com')\nsearch_box = polling.poll(\n    lambda: driver.find_element_by_id('search'),\n    step=0.5,\n    timeout=7)\n\nsearch_box.send_keys('python polling')\n```\n\n### Example: Using the polling timeout exception\n\n```python\n# An exception will be raised by the polling function on timeout (or the maximum number of calls is exceeded).\n# This exception will have a 'values' attribute. This is a queue with all values that did not meet the condition.\n# You can access them in the except block.\n\nimport random\ntry:\n    polling.poll(lambda: random.choice([0, (), False]), step=0.5, timeout=1)\nexcept polling.TimeoutException, te:\n    while not te.values.empty():\n        # Print all of the values that did not meet the exception\n        print te.values.get()\n```\n\n\n### Example: Using a custom condition callback function\n\n```python\nimport requests\n\ndef is_correct_response(response):\n    \"\"\"Check that the response returned 'success'\"\"\"\n    return response == 'success'\n\npolling.poll(\n    lambda: requests.put('http://mysite.com/api/user', data={'username': 'Jill'},\n    check_success=is_correct_response,\n    step=1,\n    timeout=10)\n```\n\n# Release notes\n\n## 0.2.0\n\n- Allow users to access a \"last\" attribute on the exceptions. This should hold the last evaluated value, which is the more common use case than getting the first value. \n- Fix a bug that actually ran 1 more time than value specified by max_tries\n\n## 0.1.0\n\n- First version\n\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/justiniso/polling",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "polling",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/polling/",
    "release_url": "https://pypi.org/project/polling/0.3.0/",
    "requires_python": null,
    "summary": "Powerful polling utility with many configurable options",
    "version": "0.3.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "54878e83723d24a82d76f469c691a360",
          "sha256": "6335eab270dfc1abd7f00434ebbd2e3cac1801f2fbcd594e8477f36b3051e776"
        },
        "downloads": 2452,
        "filename": "polling-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "54878e83723d24a82d76f469c691a360",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4426,
        "upload_time": "2015-04-24T16:17:08",
        "url": "https://files.pythonhosted.org/packages/0f/79/b687d75cb6e9aae5c70e2fa251776f067a34e2bb81abd7f7c7517d6e1de5/polling-0.1.0.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fb40aa20df32f152936cd3766efa167b",
          "sha256": "972414e7aaf0df16b9eadb41205e32d479c674e3bb9b57ab561ceb5a0c594c51"
        },
        "downloads": 25289,
        "filename": "polling-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fb40aa20df32f152936cd3766efa167b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4703,
        "upload_time": "2015-08-04T00:53:55",
        "url": "https://files.pythonhosted.org/packages/ef/10/5207cd5bd1c80a6f2959b56ede06806165a122766e1765f6c83db3ef1dad/polling-0.2.0.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d8970fe28e8a0038f4ca954129b55bfc",
          "sha256": "c0f1f804843fe78e09f6fc6de6fb8b11f73be0acce9cde262b18e4a7ad4005a6"
        },
        "downloads": 1444,
        "filename": "polling-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d8970fe28e8a0038f4ca954129b55bfc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5012,
        "upload_time": "2016-03-08T04:51:46",
        "url": "https://files.pythonhosted.org/packages/a1/42/d11fca25b8ee038233bfabdd3dc89c92ce69f551fd9605093570bdfa7f89/polling-0.3.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d8970fe28e8a0038f4ca954129b55bfc",
        "sha256": "c0f1f804843fe78e09f6fc6de6fb8b11f73be0acce9cde262b18e4a7ad4005a6"
      },
      "downloads": 1444,
      "filename": "polling-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d8970fe28e8a0038f4ca954129b55bfc",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5012,
      "upload_time": "2016-03-08T04:51:46",
      "url": "https://files.pythonhosted.org/packages/a1/42/d11fca25b8ee038233bfabdd3dc89c92ce69f551fd9605093570bdfa7f89/polling-0.3.0.tar.gz"
    }
  ]
}