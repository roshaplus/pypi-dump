{
  "info": {
    "author": "Shiwaforce.com",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "Project Compose\n===============\n\n.. image:: https://travis-ci.org/shiwaforce/project-compose.svg?branch=master\n    :target: https://travis-ci.org/shiwaforce/project-compose\n\n.. image:: https://img.shields.io/pypi/v/project-compose.svg\n    :target: https://pypi.python.org/pypi/project-compose\n\nAbout\n-----\n\nProject Compose lets you catalogue and manage your Docker projects using simple YAML files to shorten the route from finding your project to initialising it in your local environment.\n\nThis helps you set up your local development environment and to run demos.\n\n`Shiwaforce.com <https://www.shiwaforce.com>`_\n\nWorking examples can be found here: https://github.com/shiwaforce/project-compose-example\n\nRequirements\n------------\n\n - Docker, version > 17\n - Python, version > 2.7\n\nQuick start\n===========\n\nInstall the latest project-compose:\n\n``$ pip install project-compose``\n\nInitialise sample catalogue:\n\n``$ project-catalog init https://github.com/shiwaforce/project-compose-example.git``\n\nList all projects in the catalogue:\n\n``$ project-catalog ls``\n\nList all available modes of the ex:mple voting app:\n\n``$ project-compose mode ls example-voting-app``\n\nStart the Docker example voting app in javaworker mode:\n\n``$ project-compose start example-voting-app javaworker``\n\nStop the example voting app:\n\n``$ project-compose down example-voting-app javaworker``\n\nStart the Docker example voting app in default mode:\n\n``$ project-compose start example-voting-app default``\n\nStop the example voting app:\n\n``$ project-compose down example-voting-app default``\n\n\nCustom installation and configuration\n=====================================\n\n\nInstallation steps\n------------------\n\nUse pip:\n\npip install project-compose\n\nor\n\npython setup.py install\n\nHome directory\n--------------\n\nThe home directory must exists in the user's local home directory with name: .project-compose\n\nFor example (OSX):\n    /Users/john.doe/.project-compose\n\nBasic configuration file\n------------------------\n\nLocation: under the home directory with name: config\nThe format of the file is YAML, including a default section.\n\nIf the default section is empty the project-catalog.yml file must exist in the config directory\n\nParameters:\n - repositoryType (optional):  git | svn | file\n - url (optional): must be a valid GIT or SVN url\n - file (optional): catalog file path in the repository or local filesystem - default : project-catalog.yml\n - branch (optional): branch name - default : master\n - ssh-key (optional): ssh file location for git repository - default: ~/.ssh/id_rsa\n - workspace (optional): the base directory, where the project will be checked out - default : ~/workspace\n\nExample 1 (empty):\n::\n    default:\n\nExample 2 (Git):\n::\n    default:\n        repositoryType: git\n        url: https://github.com/shiwaforce/project-compose-example.git\n        file: project-catalog.yml\n        branch: master\n\nProject catalog file\n--------------------\n\nIt describes the lists of the projects and the location of the projects' project-compose files in YAML format.\n\nConfiguration:\n - keys: The name of the projects\n - git (optional): must be a valid GIT url for the project\n - svn (optional): must be a valid SVN url for the project\n - branch (optional): branch name - default : master\n - file (optional): path to the project-compose file. - Default : project-compose.yml\n - repository-dir (optional): the base directory name where the project will be checked out. - Default: name of the project\n - ssh-key (optional): ssh file location for the Git repository - default: ~/.ssh/id_rsa\n\nIf you don't define the repository it will be relative to the config file's location\n\nIf the path ends with a name of a directory it will be extended with the default filename : project-compose.yml\n\nFor example:\n::\n    test1:\n        git: https://github.com/shiwaforce/project-compose-example.git\n        branch: master\n    test2:\n        svn: http://svn.apache.org/repos/test2/trunk\n    test3:\n        file: test3\n    test4:\n        git: ssh://git@git.example.com/test4/test4.git\n        file: another/directory/anoter_compose.yml\n\nProject-compose file\n--------------------\n\nIt describes the project's hierarchy divided into several 'modes' in YAML format.\n\nIf you don't declare a section under a mode it will take the compose-files into account.\n\nSteps defined in the before_scripts section will run before the compose command (build, config, up, start)\n\nIn the working-directory section you can change the working directory (the default is the parent\nof the compose file)\n\nEach row in the checkout section will check out a Git repository to the target directory\nwhich is relative to the compose file or the working directory if it is set.\n\nFor example:\n::\n    version: '2.0'\n    maintainer: \"operations@shiwaforce.com\"\n    containers:\n        sample: dc-sample.yml\n        mysql: dc-mysql.yml\n    before_script:\n        - ls -l\n    after_script:\n        - ls -l\n    checkout: bankarmulato ssh://git@git.shiwaforce.com:7999/teszt/teszt.git\n    working-directory: microservice-all-war\n    enviroment:\n        include: conf/default.env\n    mode:\n        demo:\n            enviroment:\n                include: conf/dev/dev.env\n                external: svn\n            docker-compose-file: sample\n        dev/sw: sample\n        dev/default:\n            - docker-compose.yml\n        dev/java: docker-compose.yml\n        dev/js:\n            enviroment:\n                include: conf/dev/dev.env\n            docker-compose-file:\n                  - docker-compose.yml\n                  - docker-compose.yml\n\nCommands\n--------\n\n    project-catalog add [<target-dir>]\nadds the current directory (or target directory) to the project-catalog (if it is a Git repository)\n\n    project-catalog ls\nlists the available projects (from the project catalog file)\n\n    project-catalog config\nprints the local config\n\n    project-catalog init [<repository-url>] [<repository-type>] [<file>]\ncreates the config and project-catalog files if they do not exist. if the repository-url, type, and file references are not empty it will write to the local config\n\n    project-catalog branch <branch> [-f]\nswitches branch in the project-catalog repository, use -f to force\n\n    project-catalog branches\nlists the available project-catalog repository branches\n\n    project-catalog push\npushes project-catalog changes to the repository (if it is not a local file)\n\n    project-catalog remove <project>\nremoves selected project form the project-catalog\n\n    project-compose config <project> [mode]\nprints the full config for selected project with mode (docker-compose file with environment variables)\n\n    project-compose clean\ncleans up all docker images, volumes and pulled repositories and data\n\n    project-compose init <project>\ninitialises selected project with the following steps:\ncreates the project-compose file if it does not exist\ncreates the docker-compose sample file if it does not exist\n\n    project-compose install <project> [mode]\ninstalls selected project with selected mode\ngets project descriptors from repository\n\n    project-compose up <project> [mode]\nstarts the project with selected mode (if exists)\ninstalls if it isn't installed yet\n\n    project-compose down <project> [mode]\nstops docker containers belonging the given project with selected mode\n\n    project-compose build <project> [mode]\nbuilds docker images for the selected project with the specified mode\n\n    project-compose ps <project> [mode]\nlists the state of docker images in selected project\n\n    project-compose mode ls <project>\nlists available modes in selected projects\n\n    project-compose pull <project> [mode]\npulls docker images for the specified project with the selected mode\n\n    project-compose start <project> [mode]\nalternative for up\n\n    project-compose stop <project> [mode]\nstops docker containers which belongs to the specified project with selected mode\n\n    project-compose log <project> [mode]\nprints log from docker containers which belongs to the specified project with selected mode\n\n    project-compose logs <project> [mode]\nprints log from docker containers which belongs to the specified project with selected mode\n\n    project-compose branch <project> <branch>\nswitches branch in the specified project repository\n\n    project-compose branches <project>\nlists the available project-catalog repository branches\n\n    project-service start <project>\nstarts docker containers which belong to the selected project\n\n    project-service stop <project>\nstops docker containers which belong to the selected project\n\n    project-service restart <project>\nrestarts docker containers which belong to the selected project\n\nLocal uninstall\n---------------\n\nDelete the egg file from the current Python site-packages (for example: sf_project_compose-0.3-py2.7)\n\nOSX\n\"\"\"\nremove scripts from /usr/local/bin (project-catalog, project-compose, project-servive)",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://www.shiwaforce.com",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "project-compose",
    "platform": "",
    "project_url": "https://pypi.org/project/project-compose/",
    "release_url": "https://pypi.org/project/project-compose/0.7.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "SF program compose.",
    "version": "0.7.3"
  },
  "releases": {
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "37d5fe8d27f5de378a4058dc77154c2a",
          "sha256": "9b2213bbca451db4fc4c4a640b1b29300ff29f6f604c816864199d27ffb18456"
        },
        "downloads": 0,
        "filename": "project-compose-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "37d5fe8d27f5de378a4058dc77154c2a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17117,
        "upload_time": "2017-07-13T15:17:20",
        "url": "https://files.pythonhosted.org/packages/8a/cb/e8e55aa68112844fca0be9e7874a9334cfec35e0cf204a009070ac79978c/project-compose-0.7.1.tar.gz"
      }
    ],
    "0.7.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "88dc2de77be30d1a4f8e91d7f41b9c8e",
          "sha256": "d50fa685aa5f26660c39ab4bc15454afc10de61ba7249cc8793533cdf36690a5"
        },
        "downloads": 0,
        "filename": "project-compose-0.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "88dc2de77be30d1a4f8e91d7f41b9c8e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17235,
        "upload_time": "2017-07-21T11:17:20",
        "url": "https://files.pythonhosted.org/packages/58/59/ca9ce06f01f4eef686610fcfeb4aecea143c565b7e4c721924a13d644029/project-compose-0.7.2.tar.gz"
      }
    ],
    "0.7.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1e8e4515f61da0eb9e0e9218f7366128",
          "sha256": "9ec9ae0748e64115a442c87e7ebddeb9edca255c7736240fec4363df292a7126"
        },
        "downloads": 0,
        "filename": "project-compose-0.7.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1e8e4515f61da0eb9e0e9218f7366128",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17672,
        "upload_time": "2017-07-31T15:28:05",
        "url": "https://files.pythonhosted.org/packages/8f/86/1f674315e6d779dfd096fee088117e9f69d3200e5ea39318f88577257c3b/project-compose-0.7.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "1e8e4515f61da0eb9e0e9218f7366128",
        "sha256": "9ec9ae0748e64115a442c87e7ebddeb9edca255c7736240fec4363df292a7126"
      },
      "downloads": 0,
      "filename": "project-compose-0.7.3.tar.gz",
      "has_sig": false,
      "md5_digest": "1e8e4515f61da0eb9e0e9218f7366128",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 17672,
      "upload_time": "2017-07-31T15:28:05",
      "url": "https://files.pythonhosted.org/packages/8f/86/1f674315e6d779dfd096fee088117e9f69d3200e5ea39318f88577257c3b/project-compose-0.7.3.tar.gz"
    }
  ]
}