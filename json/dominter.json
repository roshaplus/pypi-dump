{
  "info": {
    "author": "Tamini Bean",
    "author_email": "takd4com@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: User Interfaces"
    ],
    "description": "dominter\n========\ndominter is a simple GUI (Graphical User Interface) Python package for small asynchronous web application.\n\nFeatures\n--------\n* JavaScript style API and other types of API that can be written shorter.\n* Any tags and attributes can be used.\n* Supports 'click', 'change' and any events.\n* Supports multiple window.\n* Supports both multiple-instance and single-instance.\n* Supports Element.className and Element.style properties.\n* Depends only on `Tornado <http://www.tornadoweb.org>`_.\n\nInstallation\n------------\n\n::\n\n    pip install dominter\n\nExample\n-------\n\n* Hello world:\n\n.. code-block:: python\n\n    from dominter.dom import Window, start_app\n\n    class MyWindow(Window):\n        def __init__(self):\n            super().__init__()\n            document = self.document\n            self.p1 = document.createElement('p')\n            self.p1.textContent = \"text content\"\n            self.btn1 = document.createElement('button')\n            self.btn1.textContent = \"button1\"\n            self.btn1.onclick = self.on_btn1\n            document.body.appendChild(self.p1)\n            document.body.appendChild(self.btn1)\n\n        def on_btn1(self, ev):\n            self.p1.textContent = 'Hello world!'\n\n    win = MyWindow()\n    start_app(win)\n\n* Without class:\n\n.. code-block:: python\n\n    from dominter.dom import Window, start_app\n\n    win = Window()\n    document = win.document\n    tag_p1 = document.createElement('p')\n    tag_p1.textContent = \"text content\"\n\n    def on_btn1(ev):\n        tag_p1.textContent = 'Hello world!'\n\n    tag_btn1 = document.createElement('button')\n    tag_btn1.textContent = \"button1\"\n    tag_btn1.onclick = on_btn1\n    document.body.appendChild(tag_p1)\n    document.body.appendChild(tag_btn1)\n    start_app(win)\n\n* Three types of tag creation and childList attribute\n\n.. code-block:: python\n\n    from dominter.dom import Window, start_app\n\n    win = Window()\n    document = win.document\n    # js like\n    p1 = document.createElement('p')\n    p1.textContent = 'by createElement() '\n    # html like : specify all by text excepts event handler\n    p2 = document.tag('p _=\"by tag() \"')  # use '_=' for textContent\n    # individual tag method\n    p3 = document.p('by p() method. ')\n    document.body.childList = [p1, p2, p3]\n    start_app(win)\n\nIndividual tag methods:\ntitle, style, link, script,\nbr, p, span, div, button,\ntext, checkbox, radio, color,\ndate, month, time, week, number,\npassword, range, select, option,\ntextarea, table, tr, th, td,\nfieldset, legend, img, a, label,\nh1, h2, h3, h4, h5, h6, ol, li, ul, section, header, footer\n\n* multiple window\n\n.. code-block:: python\n\n    dominter.dom import Window, start_app\n\n    class MyWindow1(Window):\n        def __init__(self):\n            super(MyWindow1, self).__init__()\n            document = self.document\n            self.txt1 = document.text('windows1')\n            self.btn1 = document.button('test1', onclick=self.on_btn1)\n            document.body.appendChild(self.txt1)\n            document.body.appendChild(self.btn1)\n\n        def on_btn1(self, ev):\n            self.txt1.value = 'changed1'\n\n    class MyWindow2(Window):\n        def __init__(self):\n            super(MyWindow2, self).__init__()\n            document = self.document\n            self.txt1 = document.text('windows2')\n            self.btn1 = document.button('test1', onclick=self.on_btn1)\n            document.body.appendChild(self.txt1)\n            document.body.appendChild(self.btn1)\n\n        def on_btn1(self, ev):\n            self.txt1.value = 'changed2'\n\n    start_app([MyWindow1(),   # localhost:8888/index.html\n               MyWindow2()])  # localhost:8888/index1.html\n\n* multiple-instance and single-instance\n\n.. code-block:: python\n\n    from dominter.dom import Window, start_app\n\n    class MyWindow1(Window):\n        def __init__(self):\n            super(MyWindow1, self).__init__()\n            document = self.document\n            self.txt1 = document.text('windows1')\n            self.btn1 = document.button('test1', onclick=self.on_btn1)\n            document.body.appendChild(self.txt1)\n            document.body.appendChild(self.btn1)\n\n        def on_btn1(self, ev):\n            self.txt1.value = 'changed1'\n\n    class MyWindow2(Window):\n        def __init__(self):\n            super(MyWindow2, self).__init__()\n            document = self.document\n            self.txt1 = document.text('windows2')\n            self.btn1 = document.button('test1', onclick=self.on_btn1)\n            document.body.appendChild(self.txt1)\n            document.body.appendChild(self.btn1)\n\n        def on_btn1(self, ev):\n            self.txt1.value = 'changed2'\n\n\n    start_app([MyWindow1(),   # instance for single-instance. localhost:8888/index.html\n               MyWindow2])    # class for multiple-instance. localhost:8888/index1.html\n\nStatus\n------\nAlpha\n\n\n| Copyright (c) 2017-2018 Tamini Bean\n| License: MIT\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/takd4com/dominter",
    "keywords": "dom browser gui asynchronous web",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dominter",
    "platform": "",
    "project_url": "https://pypi.org/project/dominter/",
    "release_url": "https://pypi.org/project/dominter/0.1.0/",
    "requires_dist": [
      "tornado"
    ],
    "requires_python": "",
    "summary": "A simple GUI package for small asynchronous web application",
    "version": "0.1.0"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a9c438a82b37bfc9bc1823c1d4d63b0b",
          "sha256": "642839988a081ce8a6f7d687a89fff4ad87220fe799f5b0cc48768c03d8c4d97"
        },
        "downloads": -1,
        "filename": "dominter-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9c438a82b37bfc9bc1823c1d4d63b0b",
        "packagetype": "bdist_wheel",
        "python_version": "3.4",
        "size": 15082,
        "upload_time": "2017-11-09T21:05:02",
        "url": "https://files.pythonhosted.org/packages/b1/27/f6dc948490b7380410090b8de9a76c7c257fd4f1a1c4c28496e1c465399e/dominter-0.0.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "84b9726b666cf05f36ff5cfb3edb6ad5",
          "sha256": "7d88b53a2434c7c972eec68b6ccc31287d2a40a7da901fff25e317dbb5ec3aa5"
        },
        "downloads": -1,
        "filename": "dominter-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "84b9726b666cf05f36ff5cfb3edb6ad5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 47657,
        "upload_time": "2017-11-09T21:04:59",
        "url": "https://files.pythonhosted.org/packages/82/96/2bb9601fb212a6870b7bf6321bcdd945758a42acb8bb4ece112ff2d30d91/dominter-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7cd6b29e75aecad9577a5bcb56645724",
          "sha256": "2e10f3a69573770b03d5458d63501db76aa025bbb5a757c5964a0dca3b978a50"
        },
        "downloads": -1,
        "filename": "dominter-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7cd6b29e75aecad9577a5bcb56645724",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 15081,
        "upload_time": "2017-11-09T21:34:25",
        "url": "https://files.pythonhosted.org/packages/98/70/4c751e92893af0c7531b5cfc42d5d6498c1d49032ebe60720c801506affc/dominter-0.0.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b0a7146f1b5894db39a55c483f63fec5",
          "sha256": "c2014ff0ce39ac6ebb20e1fcf33d7b03a6a2f33f12bbeba4976127700c5373fa"
        },
        "downloads": -1,
        "filename": "dominter-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b0a7146f1b5894db39a55c483f63fec5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 48425,
        "upload_time": "2017-11-09T21:34:29",
        "url": "https://files.pythonhosted.org/packages/ae/0f/ecea8d88e10685c809298dacea61744dc1bb85378d9c072dc4918ceee651/dominter-0.0.2.tar.gz"
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5e8852f0e18a1544ad53e06ffde039eb",
          "sha256": "a19169b69048bdd8b4663f03de10fdc1227f48337f9ce4df0ceeb4a6b9b09824"
        },
        "downloads": -1,
        "filename": "dominter-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e8852f0e18a1544ad53e06ffde039eb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 20499,
        "upload_time": "2018-01-14T05:37:37",
        "url": "https://files.pythonhosted.org/packages/bf/34/f95c3d30475f8e6c9c3c6d302bac2a00a93c191c87ca3535ab360681526b/dominter-0.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ae5f332be3fb998138f342ebe4f2b167",
          "sha256": "2c36d2726814605f363837cd4d0e9b38985aa970db9e26f852a94eb25ec62413"
        },
        "downloads": -1,
        "filename": "dominter-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ae5f332be3fb998138f342ebe4f2b167",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 162371,
        "upload_time": "2018-01-14T05:37:41",
        "url": "https://files.pythonhosted.org/packages/08/88/54b15f989c34ca55852a27851003c735b1c2d2fb0f630cd4fc1e44c27043/dominter-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5e8852f0e18a1544ad53e06ffde039eb",
        "sha256": "a19169b69048bdd8b4663f03de10fdc1227f48337f9ce4df0ceeb4a6b9b09824"
      },
      "downloads": -1,
      "filename": "dominter-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5e8852f0e18a1544ad53e06ffde039eb",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 20499,
      "upload_time": "2018-01-14T05:37:37",
      "url": "https://files.pythonhosted.org/packages/bf/34/f95c3d30475f8e6c9c3c6d302bac2a00a93c191c87ca3535ab360681526b/dominter-0.1.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "ae5f332be3fb998138f342ebe4f2b167",
        "sha256": "2c36d2726814605f363837cd4d0e9b38985aa970db9e26f852a94eb25ec62413"
      },
      "downloads": -1,
      "filename": "dominter-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ae5f332be3fb998138f342ebe4f2b167",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 162371,
      "upload_time": "2018-01-14T05:37:41",
      "url": "https://files.pythonhosted.org/packages/08/88/54b15f989c34ca55852a27851003c735b1c2d2fb0f630cd4fc1e44c27043/dominter-0.1.0.tar.gz"
    }
  ]
}