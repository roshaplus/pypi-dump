{
  "info": {
    "author": "Martin Bammer",
    "author_email": "mrbm74@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "An efficient and lightweight thread pool\n========================================\n\nExisting implementations of thread pools have a relatively high overhead in certain\nsituations. Especially apply_async in multiprocessing.pool.ThreadPool and\nconcurrent.futures.ThreadPoolExecutor at all (see benchmarks).\nIn case of ThreadPoolExecutor don't use the **wait**. It is *extremely* slow!\nIf you've only a small number of jobs and the jobs have a relatively long processing\ntime, then these overheads don't count. But in case of high number of jobs with\nshort processing time the overhead of the above implementations will noticably\nslow down the processing speed.\nThe fastthreadpool module solves this issue, because it has a very small overhead in\nall situations.\n\n**API**\n====\n\n**Pool(max_workers = None, thread_name_prefix = \"\", done_callback = None, failed_callback = None)**\n\nCreating a class instance accepts the above optional arguments. The argument's names are self\nexplanatory. Worker threads are created on demand as soon as jobs are submitted to the pool.\nThe **Pool** object contains 3 deque objects **jobs** (pending jobs), **done** (results of successfull\njobs) and **failed** (exceptions of failed jobs).\n\n**submit(fn, *args, **kwargs):**\n\nSubmit a single job to the pool. **fn** is the function to call and *args and **kwargs the arguments.\n\n**submit_done(fn, done_callback, *args, **kwargs):**\n\nThe same as **submit** but with an individual done callback function.\n\n**map(fn, itr, done_append = True):**\n\nSubmit a list of jobs, contained in **itr**, to the pool. **fn** is the function to call.\nIf **done_append** is True then the results of the callback function are appended to the **done** queue.\nSet **done_append** to False to save memory and processing time if the results are not needed.\n\n**imap(fn, itr, done_append = True):**\n\nSame as **map** but with the difference that **fn** is a generator function.\n\n**shutdown(timeout = None):**\n\nShutdown the thread pool. If **timeout** is None wait endless else wait up to **timeout** seconds.\n\n**cancel():**\n\nCancel all remaining jobs. For joining all worker threads call **shutdown** after **cancel**.\n\n**Usage**\n=====\n\nSee benchmark.py.\n\n\n\n",
    "docs_url": null,
    "download_url": "https://github.com/brmmm3/fastthreadpool/archive/fastthreadpool-1.0.1.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/pypa/fastthreadpool",
    "keywords": "threading pool",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fastthreadpool",
    "platform": "",
    "project_url": "https://pypi.org/project/fastthreadpool/",
    "release_url": "https://pypi.org/project/fastthreadpool/1.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "An efficient and leightweight thread pool.",
    "version": "1.0.1"
  },
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cd54cd304887b16e137185474f2d93c5",
          "sha256": "5d6c5596d9374d0513c35945af18c3e82cb42bbcee1faa903072cf28a93226e4"
        },
        "downloads": -1,
        "filename": "fastthreadpool-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd54cd304887b16e137185474f2d93c5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7865,
        "upload_time": "2018-01-01T15:26:38",
        "url": "https://files.pythonhosted.org/packages/88/ef/4b1effee6503bdb92b36a5ad6d14f823b3cf245c3354ca1f5abea3c7ea9f/fastthreadpool-1.0.1-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "cd54cd304887b16e137185474f2d93c5",
        "sha256": "5d6c5596d9374d0513c35945af18c3e82cb42bbcee1faa903072cf28a93226e4"
      },
      "downloads": -1,
      "filename": "fastthreadpool-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cd54cd304887b16e137185474f2d93c5",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 7865,
      "upload_time": "2018-01-01T15:26:38",
      "url": "https://files.pythonhosted.org/packages/88/ef/4b1effee6503bdb92b36a5ad6d14f823b3cf245c3354ca1f5abea3c7ea9f/fastthreadpool-1.0.1-py2.py3-none-any.whl"
    }
  ]
}