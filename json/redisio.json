{
  "info": {
    "author": "Roy",
    "author_email": "cf020031308@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Database"
    ],
    "description": "A tiny and fast redis client for script boys.\n\nInstall\n  pip install redisio\n\nUsage\n  WARNING: The following is the document but don't read it. Instead read the code\u2460 .\n  It's much shorter.\n  [1] ./redisio/redisio.py\n\n Initialize\n  \n  |  import redisio\n  |  rd = redisio.Redis(host='127.0.0.1', port=6379, db=0, password='')\n\n  The arguments above are set as default so can be omitted.\n  Connecting to server via unix sockets is also supported.\n  \n  |  import redisio\n  |  rd = redisio.Redis(socket='/tmp/redis.sock')\n\n\n Commands\n  See the commands list at redis.io\u2460 .\n  [1] https://redis.io/commands\n  Since redisio is designed to translate input and output strictly in protocol\u2460  with\n  little syntax sugar on calling but not any modification on data itself, any future\n  commands of redis can be properly supported without update.\n  [1] https://redis.io/topics/protocol\n\n  Write I: Commands and Pipelines\n  Instance redisio.Redis is callable.\n  Any direct calling on it sends the commands (either single command or multiple in list)\n  to server then return itself immediately without reading replies in order to be called\n  in chain conveniently:\n  \n  |  assert rd == rd('SET', 'x', 3)('GET', 'x')(['SET', 'x', 3], ['GET', 'x'])\n\n\n  Read I: Single Reply\n  Method redisio.Redis.next returns the first reply in queue from server:\n  \n  |  assert 'OK' == rd('SET', 'x', 3)('GET', 'x').next()\n  |  assert '3' == next(rd)\n\n  Note: It will be blocked to call next when there's no reply in queue.\n  A sepecific reply can be reached by index:\n  \n  |  assert '3' == rd('SET', 'x', 3)('GET', 'x')('SET', 'x', 4)[-2]\n\n  Note: It will first iterate the replies queue with a side-effect to empty it.\n  Each redis command is mapped to a method with a same name. Calling it in this method-\n  like way will send the command, then read all the replies, and return the last one.\n  \n  |  assert '3' == rd('SET', 'x', 3).get('x')\n\n  Note: It may be blocked to call rd.shutdown() because no new reply will be received\n  from server after it's shutdown. rd('SHUTDOWN') should be used in this situation.\n\n  Read II: Multiple Replies\n  Instance redisio.Redis is iterable.\n  So iterating it to get all the replies.\n  \n  |  r, = rd(\"HGET\", key, field)\n  |  r1, r2= rd(\"HGET\", key, field)(\"HGET\", key, field2)\n  |  r1, r2= list(rd([\"GET\", key], (\"GET\", key2))([\"SET\", \"X\", \"Y\"]))[:2]\n\n\n  Write II: Massive Insertion\n  If you want to insert a large amount of data into redis without the care of the results,\n  you can close the connection after sending it to avoid parsing the replies by the use of\n  del.\n  \n  |  rd(*large_scale_of_cmds).__del__()\n\n  Benefit from this the massive insertion is blazingly fast: sending a million of HSET\n  cost only 5.355 seconds via redisio while it costs 23.918 seconds via redis-py.\n  Note: Replies are buffered on server if the client does not read them but keeps\n  connection alive. This will eventually make the server crash because of the increasing\n  occupied memory. So be aware.\n  redisio will automatically reset the connection before sending a command in the\n  method-like way while there are more than 1024 replies to read.\n  \n  |  rd(*large_scale_of_cmds).dbsize()\n  |  rd(*large_scale_of_cmds)('DBSIZE')[-1]\n\n  The former is usually faster than the latter because no massive replies need to be read\n  and parsed.\n\n  Pub/Sub/Monitor\n  \n  |  rd.monitor()\n  |  # rd.subscribe('channel')\n  |  while 1:\n  |      print next(rd)\n\n\nQ&A\n  Q: How to use redisio in bash?\n  A: redis-cli\u2460  is available in bash.\n  [1] https://redis.io/download\n  Q: How to use redisio with thread safety?\n  A: redis-py\u2460  is thread safe.\n  [1] https://github.com/andymccurdy/redis-py\n  Q: Why the result of hgetall is not a dict but a list? A: This is the original format of\n  replies from redis-server. Once you get used to this original style, you will be able to\n  process results fluently from redis-cli or Lua Script\u2460  without the mess of confusing\n  types or structures brought by other brilliant libraries. Anyway let's get down to brass\n  tacks. You can get your dict like this:\n  [1] https://redis.io/commands/eval\n  \n  |  hash_values = rd.hgetall('a_hash_key')\n  |  hash_dict = dict(zip(hash_values[::2], hash_values[1::2]))",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/cf020031308/redisio",
    "keywords": "Redis,key-value store",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "redisio",
    "platform": "",
    "project_url": "https://pypi.org/project/redisio/",
    "release_url": "https://pypi.org/project/redisio/0.4/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A tiny and fast redis client for script boys.",
    "version": "0.4"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e7f0bb51e75a780d2bd62b8acc3a1f01",
          "sha256": "dedd036c06363f807d0a64570ebe8caefa4cfa4dc78f9e64054e08991ecca02f"
        },
        "downloads": 0,
        "filename": "redisio-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e7f0bb51e75a780d2bd62b8acc3a1f01",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4539,
        "upload_time": "2017-07-28T16:43:45",
        "url": "https://files.pythonhosted.org/packages/6b/b7/08aac30d9df33f71deec4c1879c86931ede70378a7ffd6ae9c86da43157d/redisio-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4315905b5f3e82b2fe45589c9f455903",
          "sha256": "d863ae3ab028467458c4c2d883e17f5b2e3de09bd3436c80644167bca7848b2e"
        },
        "downloads": 0,
        "filename": "redisio-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4315905b5f3e82b2fe45589c9f455903",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4650,
        "upload_time": "2017-07-28T16:57:26",
        "url": "https://files.pythonhosted.org/packages/85/1a/1361719354f7059a3078b13cf8304f4ec2b0a34f2d77d795adf990190a88/redisio-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "60b8ab6685c9b739d359a82c613aafb5",
          "sha256": "84bf31b4f9309218ffe489ce77fec5c9b28b3572b60a11bc50e544c7a3b38683"
        },
        "downloads": 0,
        "filename": "redisio-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "60b8ab6685c9b739d359a82c613aafb5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5056,
        "upload_time": "2017-07-29T09:42:25",
        "url": "https://files.pythonhosted.org/packages/95/87/b066b729bbaf9de165ce866b581ade79dec2a1b59a840968626afd849d72/redisio-0.3.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "405f10a58d151cf605bf0c8cc6fbfb28",
          "sha256": "5324e86772b955ffe22a52d4225d47c93c531a91d8419082fbbdcd64809fbaf9"
        },
        "downloads": 0,
        "filename": "redisio-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "405f10a58d151cf605bf0c8cc6fbfb28",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5381,
        "upload_time": "2017-08-01T14:06:18",
        "url": "https://files.pythonhosted.org/packages/84/57/b03b8b9638cbd93d5d1d261c759b92482b888e24c05a68a9631551e9fa73/redisio-0.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "405f10a58d151cf605bf0c8cc6fbfb28",
        "sha256": "5324e86772b955ffe22a52d4225d47c93c531a91d8419082fbbdcd64809fbaf9"
      },
      "downloads": 0,
      "filename": "redisio-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "405f10a58d151cf605bf0c8cc6fbfb28",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5381,
      "upload_time": "2017-08-01T14:06:18",
      "url": "https://files.pythonhosted.org/packages/84/57/b03b8b9638cbd93d5d1d261c759b92482b888e24c05a68a9631551e9fa73/redisio-0.4.tar.gz"
    }
  ]
}