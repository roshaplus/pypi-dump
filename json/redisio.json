{
  "info": {
    "author": "Roy",
    "author_email": "cf020031308@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Database"
    ],
    "description": "A tiny and fast redis client for script boys.\n\nInstall\n  pip install redisio\n\nUsage\n  WARNING: The following is the document but don't read it. Instead read the code\u2460 .\n  It's much shorter.\n  [1] ./redisio.py\n\n Initialize\n  \n  |  import redisio\n  |  rd = redisio.Redis(host='127.0.0.1', port=6379, db=0, password='')\n\n  The arguments above are set as default so can be omitted.\n\n Commands\n  See the commands list at redis.io\u2460 .\n  [1] https://redis.io/commands\n  Since redisio is designed to translate input and output strictly in protocol\u2460  with\n  little syntax sugar on calling but not any modification on data itself, any future\n  commands of redis can be properly supported without update.\n  [1] https://redis.io/topics/protocol\n\n  Write I: Commands and Pipelines\n  Instance redisio.Redis is callable.\n  Any direct calling on it sends the commands (either single command or multiple in list)\n  to server then return itself immediately without reading replies in order to be\n  called in chain conveniently:\n  \n  |  assert rd == rd('SET', 'x', 3)('GET', 'x')(['SET', 'x', 3], ['GET', 'x'])\n\n\n  Read I: Single Reply\n  Method redisio.Redis.next returns the first reply in queue from server:\n  \n  |  assert 'OK' == rd('SET', 'x', 3).next()\n  |  assert '3' == next(rd('GET', 'x'))\n\n  Note: It will be blocked to call next when no reply in queue.\n  Or a sepecific reply can be reached by index:\n  \n  |  assert '3' == rd('SET', 'x', 3)('GET', 'x')('SET', 'x', 4)[-2]\n\n  Note: It will first iterate the replies queue with a side-effect to empty it.\n  Each redis command is mapped to a method with a same name. Calling it in this method-\n  way will return the last reply.\n  \n  |  assert '3' == rd.get('x')\n\n  Note: It may be blocked to call rd.shutdown() because no new reply will be received\n  from server after it's shutdown. Use rd('SHUTDOWN') instead.\n\n  Read II: Multiple Replies\n  Instance redisio.Redis is iterable.\n  So iterating it to get all the replies.\n  \n  |  r, = rd(\"HGET\", key, field)\n  |  r1, r2= rd(\"HGET\", key, field)(\"HGET\", key, field2)\n  |  r1, r2= list(rd([\"GET\", key], (\"GET\", key2))([\"SET\", \"X\", \"Y\"]))[:2]\n\n\n  Write II: Massive Insertion\n  If you want to insert a large amount of data into redis without the care of the\n  results, you can close the socket after sending it to avoid parsing the replies by\n  del.\n  \n  |  rd(*large_scale_of_cmds).__del__()\n\n  Because no replies are parsed this is blazingly fast: sending a million of HSET cost\n  5.355 seconds via redisio while 23.918 seconds via redis-py.\n  Note: Replies are buffered on server if the client does not read them but keeps\n  connecting. This will eventually make the server crashing because of the increasing\n  used memory. So take care.\n\n  Pub/Sub/Monitor\n  \n  |  rd.monitor()\n  |  # rd.subscribe('channel')\n  |  while 1:\n  |      print next(rd)\n\n\nQ&A\n  Q: How to use redisio in bash?\n  A: redis-cli\u2460  is available in bash.\n  [1] https://redis.io/download\n  Q: How to be thread safe?\n  A: redis-py\u2460  is thread safe.\n  [1] https://github.com/andymccurdy/redis-py\n  Q: Why the result of hgetall is not a dict but a list? A: This is the original format\n  of replies from redis-server. Once you get used to this original style, you will be\n  able to process results fluently from redis-cli or Lua Script\u2460  without the mess of\n  types or structures brought by other brilliant libraries. Anyway let's get down to\n  brass tacks, you can get your dict like this:\n  [1] https://redis.io/commands/eval\n  \n  |  hash_values = rd.hgetall('a_hash_key')\n  |  hash_dict = dict(zip(hash_values[::2], hash_values[1::2]))",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/cf020031308/redisio",
    "keywords": "Redis,key-value store",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "redisio",
    "platform": "",
    "project_url": "https://pypi.org/project/redisio/",
    "release_url": "https://pypi.org/project/redisio/0.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A tiny and fast redis client for script boys.",
    "version": "0.2"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e7f0bb51e75a780d2bd62b8acc3a1f01",
          "sha256": "dedd036c06363f807d0a64570ebe8caefa4cfa4dc78f9e64054e08991ecca02f"
        },
        "downloads": 0,
        "filename": "redisio-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e7f0bb51e75a780d2bd62b8acc3a1f01",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4539,
        "upload_time": "2017-07-28T16:43:45",
        "url": "https://files.pythonhosted.org/packages/6b/b7/08aac30d9df33f71deec4c1879c86931ede70378a7ffd6ae9c86da43157d/redisio-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4315905b5f3e82b2fe45589c9f455903",
          "sha256": "d863ae3ab028467458c4c2d883e17f5b2e3de09bd3436c80644167bca7848b2e"
        },
        "downloads": 0,
        "filename": "redisio-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4315905b5f3e82b2fe45589c9f455903",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4650,
        "upload_time": "2017-07-28T16:57:26",
        "url": "https://files.pythonhosted.org/packages/85/1a/1361719354f7059a3078b13cf8304f4ec2b0a34f2d77d795adf990190a88/redisio-0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4315905b5f3e82b2fe45589c9f455903",
        "sha256": "d863ae3ab028467458c4c2d883e17f5b2e3de09bd3436c80644167bca7848b2e"
      },
      "downloads": 0,
      "filename": "redisio-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4315905b5f3e82b2fe45589c9f455903",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4650,
      "upload_time": "2017-07-28T16:57:26",
      "url": "https://files.pythonhosted.org/packages/85/1a/1361719354f7059a3078b13cf8304f4ec2b0a34f2d77d795adf990190a88/redisio-0.2.tar.gz"
    }
  ]
}