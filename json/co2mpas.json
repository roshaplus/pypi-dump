{
  "info": {
    "author": "CO2MPAS-Team",
    "author_email": "co2mpas@jrc.ec.europa.eu",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Manufacturing",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: European Union Public Licence 1.1 (EUPL 1.1)",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Information Analysis"
    ],
    "description": "..  doc/_static/CO2MPAS_banner.png\n   :width: 640\n\n.. _start-opening:\n\n######################################################################\n|co2mpas|: Vehicle simulator predicting NEDC |CO2| emissions from WLTP\n######################################################################\n\n:release:       1.5.5.post0\n:date:          2017-02-10 19:31:55\n:home:          http://co2mpas.io/\n:repository:    https://github.com/JRCSTU/CO2MPAS-TA\n:pypi-repo:     https://pypi.org/project/co2mpas/\n:docs:          http://docs.co2mpas.io/ (build-date: x.x.x)\n:wiki:          https://github.com/JRCSTU/CO2MPAS-TA/wiki/\n:download:      http://github.com/JRCSTU/CO2MPAS-TA/releases/\n:keywords:      CO2, fuel-consumption, WLTP, NEDC, vehicle, automotive,\n                EU, JRC, IET, STU, correlation, back-translation, policy, monitoring, M1, N1,\n                simulator, engineering, scientific\n:developers:    see: AUTHORS.rst\n:copyright:     2015-2016 European Commission (`JRC <https://ec.europa.eu/jrc/>`_)\n:license:       `EUPL 1.1+ <https://joinup.ec.europa.eu/software/page/eupl>`_\n\n|co2mpas| is backward-looking longitudinal-dynamics |CO2| and\nfuel-consumption simulator for light-duty M1 & N1 vehicles (cars and vans), specially crafted to\n*calculate CO2 emissions of a vehicle subject to a NEDC test using the results of a WLTP test*,\naccording to the *EU* legislation (see `History`_ section, below).\n\nIt is an open-source project developed with Python-3.5+,\nusing |winpython|_ & |anaconda|_ under Windows 7, Anaconda under MacOS, and\nstandard python environment under Linux.\nIt runs either as a *console command* or as a *desktop GUI application*,\nand it uses Excel-files for its input & output data.\n\n\nQuick Start\n===========\nYou may find usage Guidelines in the wiki:\nhttps://github.com/JRCSTU/CO2MPAS-TA/wiki/CO2MPAS-user-guidelines\n\nIF you are familiar with Python, AND\nIF you already have a full-blown *python-3 environment*\n(i.e. *Linux* or the *all-in-one* archive), AND\nIF you have familiarity with previous releases, THEN\nyou can immediately start working with the following *bash* commands;\notherwise follow the detailed instructions under sections ref: *install* and\nref: *usage*.\n\n.. code-block:: console\n\n    ## Install co2mpas:\n    $ pip uninstall co2mpas\n    $ pip install co2mpas\n\n    ## Create a template excel-file for inputs:\n    $ co2mpas template vehicle_1.xlsx\n\n    ###################################################\n    ## Edit generated `./input/vehicle_1.xlsx` file. ##\n    ###################################################\n\n    ## Launch GUI, select the edited template as Input, and click `Run`:\n    $ co2gui\n\nAnd the GUI pops up:\n\n..  _static/CO2MPAS_GUI.png\n   :width: 640\n\nFurther command-line alternatives:\n\n.. code-block:: console\n\n\n    ## To synchronize the Dyno and OBD data with the theoretical:\n    $ datasync template --cycle wltp.class3b template.xlsx\n    $ datasync -O ./output times velocities template.xlsx#ref! dyno obd -i alternator_currents=integral -i battery_currents=integral\n\n    ## Run batch simulator.\n    $ co2mpas batch vehicle_1.xlsx -O output -f\n\n    ###################################################\n    ## Inspect generated results inside `./output/`. ##\n    ###################################################\n\n    ## Run type approval command.\n    $ co2mpas ta vehicle_1.xlsx -O output -f\n\n    ## Start using the DICE command-line tool:\n    $ co2dice --help\n\n\nHistory\n=======\nThe *European Commission* has introduced the *WLTP* as test procedure for the type I test\nof the European type-approval of Light-duty vehicles as of September 2017.\nIts introduction has required the adaptation of |CO2| certification and monitoring procedures\nset by European regulations (443/2009 and 510/2011).\nEuropean Commission\u00e2\u20ac\u2122s *Joint Research Centre* (JRC) has been assigned the development\nof this vehicle simulator to facilitate this adaptation.\n\nThe European Regulation setting the conditions for using |co2mpas| can be\nfound in `the Comitology Register\n<http://ec.europa.eu/transparency/regcomitology/index.cfm?do=search.documentdetail&dos_id=0&ds_id=45835&version=2>`_\nafter its adoption by the *Climate Change Committee* which took place on\nJune 23, 2016.\n\nFor recent activity, check the ``changes``.\n\n\nLicensing\n=========\nThe |co2mpas| application, both executable and its sources, is distributed under the EUPL license.\nEUPL is `\"eventually\" compatible\n<https://joinup.ec.europa.eu/community/eupl/og_page/eupl-compatible-open-source-licences>`_\nwith all major open-source licenses, whether copy-lefted or not, but in reality\n|co2mpas| does not contain any prior code to derive from - all the code is a property of JRC's\nand covered by the said license.\n\n\nThe *ALLINONE archive* contains many python libraries installed in its standard python -folder,\n(``co2mpas_ALLINONE-XXX\\Apps\\WinPython\\python-YYY.amd64\\Lib\\``)\nso |co2mpas| only `\"links dynamically\"\n<https://joinup.ec.europa.eu/community/eupl/og_page/eupl-compatible-open-source-licences#section-3>`_ to them.\nA non-exhaustive list of python-libraries contained is listed in `WinPython site\n<https://github.com/winpython/winpython/blob/master/changelogs/WinPython-3.5.2.1.md>`_\nplus those manually installed by JRC when installing |co2mpas| in ALLINONE.\nWe are certain that all of them are open-source and can be freely re-distributed.\n\nThe ALLINONE contains also *\"external programs\"*, all of them open-source,\nexcept from the MS redistributable (``Apps/vc_redist.x64.exe`` file)\nwhich is explicitly exempted from the usual `restrictive MS Licenses\n<https://msdn.microsoft.com/en-us/library/ms235299.aspx>`_.\n\n\nAll the *logo and graphic work* is our own, but without having registered for trademark;\nwe are discouraged by the EU guidelines on the subject; subsequently we discourage\ntheir use without our consent, beyond their intended usage, which is to run |co2mpas|.\n\n\n.. _end-opening:\n.. contents:: Table of Contents\n  :backlinks: top\n  :depth: 4\n\n\n.. _install:\n\nInstall\n=======\nOn *Windows* you may install the latest *all-In-One* archive and ensure it\ncontains (or upgrade to) the latest |co2mpas| python package; alternatively,\nyou may install the developer version.\n\n   .. Tip::\n      Installing and using ALLINONE is the official procedure for\n      running |co2mpas| for Type Approval (TA).\n\n.. _all-in-one:\n\n*All-In-One* Installation under Windows\n---------------------------------------\n- Download **all-in-one archive** from https://github.com/JRCSTU/CO2MPAS-TA/releases/\n  (it only runs on **64bit PCs**).\n\n  .. Tip::\n     Search in older releases if the latest does not contain an ALLINONE archive,\n     and remember to upgrade |co2mpas| afterwords.\n\n\n- Use the original `\"7z\" extractor <http://portableapps.com/apps/utilities/7-zip_portable>`_,\n  since \"plain-zip\" application produces *out-of-memory* errors when expanding long\n  directories.\n\n  .. Note::\n     Prefer to **extract it in a folder without any spaces in its path.**\n  ..  _static/Co2mpasALLINONE-Extract.gif\n     :scale: 75%\n     :alt: Extract Co2mpas-ALLINONE into Desktop\n     :align: center\n\n- Run ``INSTALL.bat`` script contained in the root of the unzipped folder.\n  It will install links for commons |co2mpas| tasks under your *Windows*\n  Start-Menu.\n\n  ..  _static/Co2mpasALLINONE-InstallShortcuts.gif\n     :scale: 75%\n     :alt: Install Co2mpas-ALLINONE shortcupts into Window Start-menu.\n     :align: center\n\n- You can start |co2mpas| from *Windows start-menu* by pressing the `[WinKey]` and\n  start typing `'co2mpas'`, or by selecting the |co2mpas| menu item from *All Programs*.\n\n  ..  _static/Co2mpasALLINONE-LaunchGUI.gif\n     :scale: 75%\n     :alt: Launch |co2mpas| from Window Start-menu.\n     :align: center\n\n  Alternatively, advanced users may continue to use the Console.\n\n.. Note::\n   If you have downloaded an *all-in-one* from previous version of |co2mpas|\n   you may upgrade |co2mpas| contained within.\n   Follow the instructions in the \"Upgrade\" section, below.\n\n\nUpgrade |co2mpas|\n-----------------\nUninstall and re-install it from the |co2mpas| CONSOLE::\n\n    pip uninstall co2mpas\n    pip install co2mpas\n\n.. Tip::\n\n    Don't forget verify that the installed version is the correct one by checking\n    the output of this command::\n\n        co2mpas -vV\n\nUpgrade |co2mpas| in a corporate environment\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n.. Note::\n    This option has been retracted - please either download ALLINONE or\n    just the *wheel* from https://pypi.org/project/co2mpas/ and install it,\n    asuming that no other dependencies have changed.\n\nFile Contents\n-------------\n::\n\n    RUN_CO2MPAS.bat            ## Asks for Input & Output folders, and runs CO2MPAS for all Excel-files in Input.\n    CONSOLE.bat                ## Open a python+cygwin enabled `cmd.exe` console.\n\n    co2mpas-env.bat            ## Sets env-vars for python+cygwin and launches arguments as new command\n                               ## !!!!! DO NOT MODIFY !!!!! used by Windows StartMenu shortcuts.\n    bash-console.bat           ## Open a python+cygwin enabled `bash` console.\n\n\n    CO2MPAS/                   ## User's HOME directory containing release-files and tutorial-folders.\n    CO2MPAS/.*                 ## Configuration-files auto-generated by various programs, starting with dot(.).\n\n    Apps/Cygwin/               ## Unix-folders for *Cygwin* environment (i.e. bash).\n    Apps/WinPython/            ## Python environment (co2mpas is pre-installed inside it).\n    Apps/Console2/             ## A versatile console-window supporting decent copy-paste.\n    Apps/graphviz/             ## Graph-plotting library (needed to generate model-plots).\n    Apps/gpg4win-2.3.3.exe     ## GPG cryptographic suite installer for Windows.\n    vc_redist.x64.exe          ## Microsoft Visual C++ Redistributable for Visual Studio 2015\n                               #  (KB2977003 Windows update, prerequisite for running Python-3.5.x).\n    CO2MPAS_logo.ico           ## The logos used by the INSTALL.bat script.\n\n    README                     ## This file, with instructions on this pre-populated folder.\n\n\nGeneric Tips\n------------\n\n- You may freely move & copy this folder around.\n  But prefer NOT TO HAVE SPACES IN THE PATH LEADING TO IT.\n\n- To view & edit textual files, such as ``.txt``, ``.bat`` or config-files\n  starting with dot(``.``), you may use the \"ancient\" Window *notepad* editor,\n  but it will save you from  a lot of trouble if you download and install\n  **notepad++** from: http://portableapps.com/apps/development/notepadpp_portable\n  (no admin-rights needed).\n\n  Even better if you combine it with the \"gem\" file-manager of the '90s,\n  **TotalCommander**, from http://www.ghisler.com/ (no admin-rights needed).\n  From inside this file-manager, ``F3`` key-shortcut views files.\n\n- The **Cygwin** POSIX-environment and its accompanying **bash-shell** are\n  a much better choice to give console-commands compare to `cmd.exe` prompt,\n  supporting *auto-completion* for various commands (with ``[TAB]`` key) and\n  enhanced history search (with ``[UP]/[DOWN]`` cursor-keys).\n\n  There are MANY tutorials and crash-courses for bash:\n\n  - a concise one:\n    http://www.ks.uiuc.edu/Training/Tutorials/Reference/unixprimer.html\n  - a more detailed guide (just ignore the Linux-specific part):\n    http://linuxcommand.org/lc3_lts0020.php\n  - a useful poster with all fundamental bash-commands (eg. `ls`, `pwd`, `cd`):\n    http://www.improgrammer.net/linux-commands-cheat-sheet/\n\n- The console automatically copies into clipboard anything that is selected\n  with the mouse.  In case of errors, copy and paste the offending commands and\n  their error-messages to emails sent to JRC.\n\n- When a new |co2mpas| version comes out it is not necessary to download the full\n  ALLINONE archive, but you choose instead to just *upgrade* co2mpas.\n\n  Please follow the upgrade procedure in the main documentation.\n\n.. _usage:\n\n\nUsage\n=====\nThe sections below constitute a \"reference\" for |co2mpas| - a **tutorial**\nis maintained in the *wiki* for this project at:\nhttps://github.com/JRCSTU/CO2MPAS-TA/wiki/CO2MPAS-user-guidelines\n\n|co2mpas| GUI\n-------------\n>From *\"Rally\"* release, |co2mpas| can be launched through a *Graphical User Interface (GUI)*.\nIts core functionality is provided from within the GUI.\nJust ensure that the latest version of |co2mpas| is properly installed, and\nthat its version is the latest released, by checking the \"About\" menu,\nas shown in the animation, below:\n\n..  _static/Co2mpasALLINONE-About.gif\n   :scale: 75%\n   :alt: Check Co2mpas-ALLINONE Version\n   :align: center\n\n\nAlternatively, open the CONSOLE and type the following command:\n\n.. code-block:: console\n\n    ## Check co2mpas version.\n    $ co2mpas -V\n    co2mpas-1.5.5.post0\n\n\n|co2mpas| command syntax\n------------------------\nTo get the syntax of the |co2mpas| console-command, open a console where\nyou have installed |co2mpas| (see ref: *install* above) and type::\n\n    ## co2mpas help.\n    $ co2mpas --help\n\n    Predict NEDC CO2 emissions from WLTP.\n\n    :Home:         http://co2mpas.io/\n    :Copyright:    2015-2016 European Commission, JRC <https://ec.europa.eu/jrc/>\n    :License:       EUPL 1.1+ <https://joinup.ec.europa.eu/software/page/eupl>\n\n    Use the `batch` sub-command to simulate a vehicle contained in an excel-file.\n\n\n    USAGE:\n      co2mpas gui         [-v | -q | --logconf=<conf-file>]\n      co2mpas ta          [-f] [-O=<output-folder>] [<input-path>]...\n      co2mpas batch       [-v | -q | --logconf=<conf-file>] [-f]\n                          [--overwrite-cache] [-O=<output-folder>]\n                          [--modelconf=<yaml-file>]\n                          [-D=<key=value>]... [<input-path>]...\n      co2mpas demo        [-v | -q | --logconf=<conf-file>] [-f]\n                          [<output-folder>]\n      co2mpas template    [-v | -q | --logconf=<conf-file>] [-f]\n                          [<excel-file-path> ...]\n      co2mpas ipynb       [-v | -q | --logconf=<conf-file>] [-f] [<output-folder>]\n      co2mpas modelgraph  [-v | -q | --logconf=<conf-file>] [-O=<output-folder>]\n                          [--modelconf=<yaml-file>]\n                          (--list | [--graph-depth=<levels>] [<models> ...])\n      co2mpas modelconf   [-v | -q | --logconf=<conf-file>] [-f]\n                          [--modelconf=<yaml-file>] [-O=<output-folder>]\n      co2mpas gui         [-v | -q | --logconf=<conf-file>]\n      co2mpas             [-v | -q | --logconf=<conf-file>] (--version | -V)\n      co2mpas             --help\n\n    Syntax tip:\n      The brackets `[ ]`, parens `( )`, pipes `|` and ellipsis `...` signify\n      \"optional\", \"required\", \"mutually exclusive\", and \"repeating elements\";\n      for more syntax-help see: http://docopt.org/\n\n\n    OPTIONS:\n      <input-path>                Input xlsx-file or folder. Assumes current-dir if missing.\n      -O=<output-folder>          Output folder or file [default: .].\n      <excel-file-path>           Output file.\n      --modelconf=<yaml-file>     Path to a model-configuration file, according to YAML:\n                                    https://docs.python.org/3.5/library/logging.config.html#logging-config-dictschema\n      --overwrite-cache           Overwrite the cached input file.\n      --override, -D=<key=value>  Input data overrides (e.g., `-D fuel_type=diesel`,\n                                  `-D prediction.nedc_h.vehicle_mass=1000`).\n      -l, --list                  List available models.\n      --graph-depth=<levels>      An integer to Limit the levels of sub-models plotted.\n      -f, --force                 Overwrite output/template/demo excel-file(s).\n\n\n    Model flags (-D flag.xxx, example -D flag.engineering_mode=True):\n     engineering_mode=<bool>     Use all data and not only the declaration data.\n     soft_validation=<bool>      Relax some Input-data validations, to facilitate experimentation.\n     use_selector=<bool>         Select internally the best model to predict both NEDC H/L cycles.\n     only_summary=<bool>         Do not save vehicle outputs, just the summary.\n     plot_workflow=<bool>        Open workflow-plot in browser, after run finished.\n     output_template=<xlsx-file> Clone the given excel-file and appends results into\n                                 it. By default, results are appended into an empty\n                                 excel-file. Use `output_template=-` to use\n                                 input-file as template.\n\n    Miscellaneous:\n      -h, --help                  Show this help message and exit.\n      -V, --version               Print version of the program, with --verbose\n                                  list release-date and installation details.\n      -v, --verbose               Print more verbosely messages - overridden by --logconf.\n      -q, --quite                 Print less verbosely messages (warnings) - overridden by --logconf.\n      --logconf=<conf-file>       Path to a logging-configuration file, according to:\n                                    https://docs.python.org/3/library/logging.config.html#configuration-file-format\n                                  If the file-extension is '.yaml' or '.yml', it reads a dict-schema from YAML:\n                                    https://docs.python.org/3.5/library/logging.config.html#logging-config-dictschema\n\n\n    SUB-COMMANDS:\n        gui             Launches co2mpas GUI (DEPRECATED: Use `co2gui` command).\n        ta              Simulate vehicle in type approval mode for all <input-path>\n                        excel-files & folder. If no <input-path> given, reads all\n                        excel-files from current-dir. It reads just the declaration\n                        inputs, if it finds some extra input will raise a warning\n                        and will not produce any result.\n                        Read this for explanations of the param names:\n                          http://co2mpas.io/explanation.html#excel-input-data-naming-conventions\n        batch           Simulate vehicle in scientific mode for all <input-path>\n                        excel-files & folder. If no <input-path> given, reads all\n                        excel-files from current-dir. By default reads just the\n                        declaration inputs and skip the extra inputs. Thus, it will\n                        produce always a result. To read all inputs the flag\n                        `engineering_mode` have to be set to True.\n                        Read this for explanations of the param names:\n                          http://co2mpas.io/explanation.html#excel-input-data-naming-conventions\n        demo            Generate demo input-files for the `batch` cmd inside <output-folder>.\n        template        Generate \"empty\" input-file for the `batch` cmd as <excel-file-path>.\n        ipynb           Generate IPython notebooks inside <output-folder>; view them with cmd:\n                          jupyter --notebook-dir=<output-folder>\n        modelgraph      List or plot available models. If no model(s) specified, all assumed.\n        modelconf       Save a copy of all model defaults in yaml format.\n\n\n    EXAMPLES::\n\n        # Don't enter lines starting with `#`.\n\n        # View full version specs:\n        co2mpas -vV\n\n        # Create an empty vehicle-file inside `input` folder:\n        co2mpas  template  input/vehicle_1.xlsx\n\n        # Create work folders and then fill `input` with sample-vehicles:\n        md input output\n        co2mpas  demo  input\n\n        # View a specific submodel on your browser:\n        co2mpas  modelgraph  co2mpas.model.physical.wheels.wheels\n\n        # Run co2mpas with batch cmd plotting the workflow:\n        co2mpas  batch  input  -O output  -D flag.plot_workflow=True\n\n        # Run co2mpas with ta cmd:\n        co2mpas  batch  input/co2mpas_demo-0.xlsx  -O output\n\n        # or launch the co2mpas GUI:\n        co2mpas  gui\n\n        # View all model defaults in yaml format:\n        co2maps modelconf -O output\n\n\nInput template\n--------------\nThe sub-commands ``batch`` (Run) and ``ta`` (Run TA) accept either a single\n**input-excel-file** or a folder with multiple input-files for each vehicle.\nYou can download an *empty* input excel-file from the GUI:\n\n..  _static/Co2mpasALLINONE-Template.gif\n   :scale: 75%\n   :alt: Generate |co2mpas| input template\n   :align: center\n\nOr you can create an empty vehicle template-file (e.g., ``vehicle_1.xlsx``)\ninside the *input-folder* with the ``template`` sub-command::\n\n        $ co2mpas template input/vehicle_1.xlsx -f\n        Creating TEMPLATE INPUT file 'input/vehicle_1.xlsx'...\n\nThe generated file contains descriptions to help you populate it with vehicle\ndata. For items where an array of values is required (e.g. gear-box ratios) you\nmay reference different parts of the spreadsheet following the syntax of the\n`\"xlref\" mini-language <https://pandalone.readthedocs.org/en/latest/reference.html#module-pandalone.xleash>`_.\n\n.. tip::\n   For an explanation of the naming of the fields, read the ref: *excel-model*\n   section\n\nDemo files\n----------\nThe simulator contains demo-files that are a nice starting point to try out.\nYou can download the *demo* vehicles from the GUI:\n\n..  _static/Co2mpasALLINONE-Demo.gif\n   :scale: 75%\n   :alt: Generate |co2mpas| demo files\n   :align: center\n\nOr you can create the demo files inside the *input-folder* with the ``demo``\nsub-command::\n\n    $ co2mpas demo input -f\n    2016-11-14 16:33:07,520: INFO:co2mpas_main:Creating INPUT-DEMO file 'input\\co2mpas_demo-0.xlsx'...\n    2016-11-14 16:33:07,525: INFO:co2mpas_main:Creating INPUT-DEMO file 'input\\co2mpas_demo-1.xlsx'...\n    2016-11-14 16:33:07,530: INFO:co2mpas_main:Creating INPUT-DEMO file 'input\\co2mpas_demo-2.xlsx'...\n    2016-11-14 16:33:07,535: INFO:co2mpas_main:Creating INPUT-DEMO file 'input\\co2mpas_demo-3.xlsx'...\n    2016-11-14 16:33:07,540: INFO:co2mpas_main:Creating INPUT-DEMO file 'input\\co2mpas_demo-4.xlsx'...\n    2016-11-14 16:33:07,546: INFO:co2mpas_main:Creating INPUT-DEMO file 'input\\co2mpas_demo-5.xlsx'...\n    2016-11-14 16:33:07,551: INFO:co2mpas_main:Creating INPUT-DEMO file 'input\\co2mpas_demo-6.xlsx'...\n    2016-11-14 16:33:07,556: INFO:co2mpas_main:Creating INPUT-DEMO file 'input\\co2mpas_demo-7.xlsx'...\n    2016-11-14 16:33:07,560: INFO:co2mpas_main:Creating INPUT-DEMO file 'input\\co2mpas_demo-8.xlsx'...\n    2016-11-14 16:33:07,565: INFO:co2mpas_main:Creating INPUT-DEMO file 'input\\co2mpas_demo-9.xlsx'...\n    2016-11-14 16:33:07,570: INFO:co2mpas_main:Creating INPUT-DEMO file 'input\\co2mpas_simplan.xlsx'...\n    2016-11-14 16:33:07,574: INFO:co2mpas_main:You may run DEMOS with:\n        co2mpas batch input\n\n\nDemo description\n~~~~~~~~~~~~~~~~\n======= == ========== ========== === ==== ========== ========== ====\n  id    AT cal WLTP-H cal WLTP-L S/S BERS trg NEDC-H trg NEDC-L plan\n======= == ========== ========== === ==== ========== ========== ====\n   0           X                             X\n   1           X                 X    X      X\n   2    X                 X                              X\n   3           X                 X           X\n   4    X                 X           X                  X\n   5           X                      X      X\n   6    X      X                 X           X\n   7    X      X                 X    X      X\n   8           X          X                  X           X\n   9    X      X                 X    X      X\nsimplan        X                             X                   X\n======= == ========== ========== === ==== ========== ========== ====\n\n\nSynchronizing time-series\n-------------------------\nThe model might fail in case your time-series signals are time-shifted and/or\nwith different sampling rates. Even if the run succeeds, the results will not\nbe accurate enough, because the data are not synchronized with the theoretical\ncycle.\n\nAs an aid tool, you may use the ``datasync`` tool to \"synchronize\" and\n\"resample\" your data, which have been acquired from different sources.\n\n..  _static/Co2mpasALLINONE-Datasync.gif\n   :scale: 75%\n   :alt: datasync tool\n   :align: center\n\nTo get the syntax of the ``datasync`` console-command, open a console where\nyou have installed |co2mpas| and type::\n\n    ## datasync help.\n    $ datasync --help\n\n    Shift and resample excel-tables; see http://co2mpas.io/usage.html#Synchronizing-time-series.\n\n    Usage:\n      datasync template [-f] [--cycle <cycle>] <excel-file-path>...\n      datasync          [-v | -q | --logconf=<conf-file>] [--force | -f]\n                        [--interp <method>] [--no-clone] [--prefix-cols]\n                        [-O <output>] <x-label> <y-label> <ref-table>\n                        [<sync-table> ...] [-i=<label=interp> ...]\n      datasync          [-v | -q | --logconf=<conf-file>] (--version | -V)\n      datasync          (--interp-methods | -l)\n      datasync          --help\n\n    Options:\n      <x-label>              Column-name of the common x-axis (e.g. 'times') to be\n                             re-sampled if needed.\n      <y-label>              Column-name of y-axis cross-correlated between all\n                             <sync-table> and <ref-table>.\n      <ref-table>            The reference table, in *xl-ref* notation (usually\n                             given as `file#sheet!`); synced columns will be\n                             appended into this table.\n                             The captured table must contain <x_label> & <y_label>\n                             as column labels.\n                             If hash(`#`) symbol missing, assumed as file-path and\n                             the table is read from its 1st sheet .\n      <sync-table>           Sheets to be synced in relation to <ref-table>, also in\n                             *xl-ref* notation.\n                             All tables must contain <x_label> & <y_label> as column\n                             labels.\n                             Each xlref may omit file or sheet-name parts; in that\n                             case, those from the previous xlref(s) are reused.\n                             If hash(`#`) symbol missing, assumed as sheet-name.\n                             If none given, all non-empty sheets of <ref-table> are\n                             synced against the 1st one.\n      -O=<output>            Output folder or file path to write the results\n                             [default: .]:\n\n                             - Non-existent path: taken as the new file-path; fails\n                               if intermediate folders do not exist, unless --force.\n                             - Existent file: file-path to overwrite if --force,\n                               fails otherwise.\n                             - Existent folder: writes a new file\n                               `<ref-file>.sync<.ext>` in that folder; --force\n                               required if that file exists.\n\n      -f, --force            Overwrite excel-file(s) and create any missing\n                             intermediate folders.\n      --prefix-cols          Prefix all synced column names with their source\n                             sheet-names. By default, only clashing column-names are\n                             prefixed.\n      --no-clone             Do not clone excel-sheets contained in <ref-table>\n                             workbook into output.\n      --interp=<method>      Interpolation method used in the resampling for all\n                             signals [default: linear]: 'linear', 'nearest', 'zero',\n                             'slinear', 'quadratic', 'cubic', 'barycentric',\n                             'polynomial', 'spline' is passed to\n                             scipy.interpolate.interp1d. Both 'polynomial' and\n                             'spline' require that you also specify an order (int),\n                             e.g. df.interpolate(--interp=polynomial4).\n                             'krogh', 'piecewise_polynomial', 'pchip' and 'akima'\n                             are all wrappers around the scipy interpolation methods\n                             of similar names.\n                             'integral' is respect the signal integral.\n      -i=<label=interp>      Interpolation method used in the resampling for a\n                             signal with a specific label\n                             (e.g., `-i alternator_currents=integral`).\n      -l, --interp-methods   List of all interpolation methods that can be used in\n                             the resampling.\n      --cycle=<cycle>        If set (e.g., --cycle=nedc.manual), the <ref-table> is\n                             populated with the theoretical velocity profile.\n                             Options: 'nedc.manual', 'nedc.automatic',\n                             'wltp.class1', 'wltp.class2', 'wltp.class3a', and\n                             'wltp.class3b'.\n\n      <excel-file-path>      Output file.\n\n    Miscellaneous:\n      -h, --help             Show this help message and exit.\n      -V, --version          Print version of the program, with --verbose\n                             list release-date and installation details.\n      -v, --verbose          Print more verbosely messages - overridden by --logconf.\n      -q, --quite            Print less verbosely messages (warnings) - overridden by --logconf.\n      --logconf=<conf-file>  Path to a logging-configuration file, according to:\n                             See https://docs.python.org/3/library/logging.config.html#configuration-file-format\n                             Uses reads a dict-schema if file ends with '.yaml' or '.yml'.\n                             See https://docs.python.org/3.5/library/logging.config.html#logging-config-dictschema\n\n    * For xl-refs see: https://pandalone.readthedocs.org/en/latest/reference.html#module-pandalone.xleash\n\n    SUB-COMMANDS:\n        template             Generate \"empty\" input-file for the `datasync` cmd as\n                             <excel-file-path>.\n\n\n    Examples::\n\n        ## Read the full contents from all `wbook.xlsx` sheets as tables and\n        ## sync their columns using the table from the 1st sheet as reference:\n        datasync times velocities folder/Book.xlsx\n\n        ## Sync `Sheet1` using `Sheet3` as reference:\n        datasync times velocities wbook.xlsx#Sheet3!  Sheet1!\n\n        ## The same as above but with integers used to index excel-sheets.\n        ## NOTE that sheet-indices are zero based!\n        datasync times velocities wbook.xlsx#2! 0\n\n        ## Complex Xlr-ref example:\n        ## Read the table in sheet2 of wbook-2 starting at D5 cell\n        ## or more Down 'n Right if that was empty, till Down n Right,\n        ## and sync this based on 1st sheet of wbook-1:\n        datasync times velocities wbook-1.xlsx  wbook-2.xlsx#0!D5(DR):..(DR)\n\n        ## Typical usage for CO2MPAS velocity time-series from Dyno and OBD\n        ## (the ref sheet contains the theoretical velocity profile):\n        datasync template --cycle wltp.class3b template.xlsx\n        datasync -O ./output times velocities template.xlsx#ref! dyno obd -i alternator_currents=integral -i battery_currents=integral\n\nDatasync input template\n~~~~~~~~~~~~~~~~~~~~~~~\nThe sub-command ``datasync`` accepts a single **input-excel-file**.\nYou can download an *empty* input excel-file from the GUI or you can use the\n``template`` sub-command:\n\n..  _static/Co2mpasALLINONE-Datasync_Template.gif\n   :scale: 75%\n   :alt: datasync template\n   :align: center\n\nOr you can create an empty datasync template-file (e.g., ``datasync.xlsx``)\ninside the *sync-folder* with the ``template`` sub-command::\n\n    $ datasync template sync/datasync.xlsx --cycle wltp.class3b -f\n    2016-11-14 17:14:00,919: INFO:__main__:Creating INPUT-TEMPLATE file 'sync/datasync.xlsx'...\n\nAll sheets must share 2 common columns ``times`` and ``velocities`` (for\ndatasync cmd are ``<x-label>`` and ``<y-label>``). These describe the reference\nsignal that is used to synchronize the data.\n\nThe ``ref`` sheet (``<ref-table>``) is considered to contain the \"theoretical\"\nprofile, while other sheets (``dyno`` and ``obd``, i.e. ``<sync-table>`` for\ndatasync cmd) contains the data to synchronize and resample.\n\nRun datasync\n~~~~~~~~~~~~\nFill the dyno and obd sheet with the raw data. Then, you can synchronize the\ndata, using the GUI as follows:\n\n..  _static/Co2mpasALLINONE-Datasync_Run.gif\n   :scale: 75%\n   :alt: datasync\n   :align: center\n\nOr you can synchronize the data with the ``datasync`` command::\n\n    datasync times velocities template.xlsx#ref! dyno obd -i alternator_currents=integral -i battery_currents=integral\n\n.. note::\n   The synchronized signals are added to the reference sheet (e.g., ``ref``).\n\n   - *synchronization* is based on the *fourier transform*;\n   - *resampling* is performed with a specific interpolation method.\n\n   All tables are read from excel-sheets using the `xl-ref syntax\n   <https://pandalone.readthedocs.org/en/latest/reference.html#module-pandalone.xleash>`_.\n\n\nRun batch\n---------\nThe default sub-command (``batch``) accepts either a single **input-excel-file**\nor a folder with multiple input-files for each vehicle, and generates a\n**summary-excel-file** aggregating the major result-values from these vehicles,\nand (optionally) multiple **output-excel-files** for each vehicle run.\n\nTo run all demo-files (note, it might take considerable time), you can use the\nGUI as follows:\n\n..  _static/Co2mpasALLINONE-Batch_Run.gif\n   :scale: 75%\n   :alt: |co2mpas| batch\n   :align: center\n\n.. note:: the file ``co2mpas_simplan.xlsx`` has the ``flag.engineering_mode``\n   set to ``True``, because it contains a \"simulation-plan\" with non declaration\n   data.\n\nOr you can run |co2mpas| with the ``batch`` sub-command::\n\n   $ co2mpas batch input -O output\n   2016-11-15 17:00:31,286: INFO:co2mpas_main:Processing ['../input'] --> '../output'...\n     0%|          | 0/11 [00:00<?, ?it/s]: Processing ../input\\co2mpas_demo-0.xlsx\n   ...\n   ...\n   Done! [527.420557 sec]\n\n.. Note::\n  For demonstration purposes, some some of the actual models will fail;\n  check the *summary file*.\n\nRun Type-Approval (``ta``) command\n----------------------------------\nThe Type Approval command simulates the NEDC fuel consumption and CO2 emission\nof the given vehicle using just the required `declaration inputs\n<https://github.com/JRCSTU/CO2MPAS-TA/wiki/TA_compulsory_inputs>`_ (marked as\ncompulsory inputs in input file version >= 2.2.5) and produces an NEDC\nprediction. If |co2mpas| finds some extra input it will raise a warning and it\nwill not produce any result. The type approval command is the |co2mpas| running\nmode that is fully aligned to the WLTP-NEDC correlation `Regulation\n<http://ec.europa.eu/transparency/regcomitology/index.cfm?do=search.documentdeta\nil&gYsYfQyLRa3DqHm8YKXObaxj0Is1LmebRoBfg8saKszVqHZGdIwy2rS97ztb5t8b>`_.\n\n\nThe sub-command ``ta`` accepts either a single **input-excel-file** or a folder\nwith multiple input-files for each vehicle, and generates a\n**summary-excel-file** aggregating the major result-values from these vehicles,\nand multiple **output-excel-files** for each vehicle run.\n\n.. note::\n   The user can insert just the input files and the output folder.\n\nTo run the type approval command you can use the GUI as follows:\n\n..  _static/Co2mpasALLINONE-TA_Run.gif\n   :scale: 75%\n   :alt: |co2mpas| ta\n   :align: center\n\nOr you can run |co2mpas| with the ``ta`` sub-command::\n\n   $ co2mpas ta input -O output\n   2016-11-15 17:00:31,286: INFO:co2mpas_main:Processing ['../input'] --> '../output'...\n     0%|          | 0/1 [00:00<?, ?it/s]: Processing ../input\\co2mpas_demo-0.xlsx\n   ...\n   ...\n   Done! [51.6874 sec]\n\nOutput files\n------------\nThe output-files produced on each run are the following:\n\n- One file per vehicle, named as ``<timestamp>-<inp-fname>.xls``:\n  This file contains all inputs and calculation results for each vehicle\n  contained in the batch-run: scalar-parameters and time series for target,\n  calibration and prediction phases, for all cycles.\n  In addition, the file contains all the specific submodel-functions that\n  generated the results, a comparison summary, and information on the python\n  libraries installed on the system (for investigating reproducibility issues).\n\n- A Summary-file named as ``<timestamp>-summary.xls``:\n  Major |CO2| emissions values, optimized |CO2| parameters values and\n  success/fail flags of |co2mpas| submodels for all vehicles in the batch-run.\n\n\nCustom output xl-files as templates\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nYou may have defined customized xl-files for summarizing time-series and\nscalar parameters. To have |co2mpas| fill those \"output-template\" files with\nits results, execute it with the ``-D flag.output_template=file/path.xlsx``\noption.\n\nTo create/modify one output-template yourself, do the following:\n\n1. Open a typical |co2mpas| output-file for some vehicle.\n\n2. Add one or more sheets and specify/referring |co2mpas| result-data using\n   `named-ranges <https://www.google.it/search?q=excel+named-ranges>`_.\n\n   .. Warning::\n      Do not use simple/absolute excel references (e.g. ``=B2``).\n      Use excel functions (indirect, lookup, offset, etc.) and array-functions\n      together with string references to the named ranges\n      (e.g. ``=indirect(\"output.prediction.nedc_h.pa!_co2_emission_value\")``).\n\n3. (Optional) Delete the old sheets and save your file.\n\n4. Use that file together with the ``-D flag.output_template=file/path.xlsx``\n   argument.\n\n\nSimulation plan\n---------------\nIt is possible to launch |co2mpas| once, and have it run the model multiple\ntimes, with variations on the input-data, all contained in a single\n(or more) input file(s).\n\nThe data for **base model** are contained in the regular sheets, and any\nvariations are provided in additional sheets which names starting with\nthe ``plan.`` prefix.\nThese sheets must contain a table where each row is a single simulation,\nwhile the columns names are the parameters that the user want to vary.\nThe columns of these tables can contain the following special names:\n\n- **id**: Identifies the variation id.\n- **base**: this is a file path of a |co2mpas| excel input, this model will be\n  used as new base vehicle.\n- **run_base**: this is a boolean. If true the base model results are computed\n  and stored, otherwise the data are just loaded.\n\nYou can use the GUI as follows:\n\n..  _static/Co2mpasALLINONE-Plan_Run.gif\n   :scale: 75%\n   :alt: |co2mpas| batch simulation plan\n   :align: center\n\n.. note:: the file ``co2mpas_simplan.xlsx`` has the ``flag.engineering_mode``\n   set to ``True``, because it contains a \"simulation-plan\" with non declaration\n   data.\n\nOr you can run |co2mpas| with the ``batch`` sub-command::\n\n   $ co2mpas batch input/co2mpas_simplan.xlsx -O output\n   2016-11-15 17:00:31,286: INFO:co2mpas_main:Processing ['../input/co2mpas_simplan.xlsx'] --> '../output'...\n     0%|          | 0/4 [00:00<?, ?it/s]: Processing ../input\\co2mpas_simplan.xlsx\n   ...\n   ...\n   Done! [180.4692 sec]\n\n\nLaunch |co2mpas| from Jupyter(aka IPython)\n------------------------------------------\nYou may enter the data for a single vehicle and run its simulation, plot its\nresults and experiment in your browser using `IPython <http://ipython.org/>`_.\n\nThe usage pattern is similar to \"demos\" but requires to have **ipython**\ninstalled:\n\n1. Ensure *ipython* with *notebook* \"extra\" is installed:\n\n   .. Warning::\n      This step requires too many libraries to provide as standalone files,\n      so unless you have it already installed, you will need a proper\n      *http-connectivity* to the standard python-repo.\n\n   .. code-block:: console\n\n        $ pip install ipython[notebook]\n        Installing collected packages: ipython[notebook]\n        ...\n        Successfully installed ipython-x.x.x notebook-x.x.x\n\n\n2. Then create the demo ipython-notebook(s) into some folder\n   (i.e. assuming the same setup from above, ``tutorial/input``):\n\n   .. code-block:: console\n\n        $ pwd                     ## Check our current folder (``cd`` alone for Windows).\n        .../tutorial\n\n        $ co2mpas ipynb ./input\n\n3. Start-up the server and open a browser page to run the vehicle-simulation:\n\n   .. code-block:: console\n\n        $ ipython notebook ./input\n\n4. A new window should open to your default browser (AVOID IEXPLORER) listing\n   the ``simVehicle.ipynb`` notebook (and all the demo xls-files).\n   Click on the ``*.ipynb`` file to \"load\" the notebook in a new tab.\n\n   The results are of a simulation run already pre-generated for this notebook\n   but you may run it yourself again, by clicking the menu::\n\n        \"menu\" --> `Cell` --> `Run All`\n\n   And watch it as it re-calculates *cell* by cell.\n\n5. You may edit the python code on the cells by selecting them and clicking\n   ``Enter`` (the frame should become green), and then re-run them,\n   with ``Ctrl + Enter``.\n\n   Navigate your self around by taking the tutorial at::\n\n        \"menu\" --> `Help` --> `User Interface Tour`\n\n   And study the example code and diagrams.\n\n6. When you have finished, return to the console and issue twice ``Ctrl + C``\n   to shutdown the *ipython-server*.\n\n.. _debug:\n\nDebugging and investigating results\n-----------------------------------\n\n- Make sure that you have installed `graphviz`, and when running the simulation,\n  append also the ``-D flag.plot_workflow=True`` option.\n\n  .. code-block:: console\n\n        $ co2mpas batch bad-file.xlsx -D flag.plot_workflow=True\n\n  A browser tab will open at the end with the nodes processed.\n\n- Use the ``modelgraph`` sub-command to plot the offending model (or just\n  out of curiosity).  For instance:\n\n  .. code-block:: console\n\n        $ co2mpas modelgraph co2mpas.model.physical.wheels.wheels\n\n  code-block:: co2mpas\n\n  code-block:: d\n     :alt: Flow-diagram Wheel-to-Engine speed ratio calculations.\n     :height: 240\n     :width: 320\n\n     >>> import co2mpas\n     >>> d = co2mpas.model.physical.wheels.wheels()\n\n- Inspect the functions mentioned in the workflow and models and search them\n  in `CO2MPAS documentation <http://co2mpas.io/>`_ ensuring you are\n  visiting the documents for the actual version you are using.\n\n\n.. _explanation:\n\nModel\n=====\nExecution Model\n---------------\nThe execution of |co2mpas| model for a single vehicle is a stepwise procedure\nof 3 stages: ``precondition``, ``calibration``, and ``prediction``.\nThese are invoked repeatedly, and subsequently combined, for the various cycles,\nas shown in the \"active\" flow-diagram of the execution, below:\n\ncode-block:: co2mpas\n\ncode-block:: dsp\n   :opt: depth=-1\n   :alt: Flow-diagram of the execution of various Stages and Cycles sub-models.\n   :width: 640\n\n   >>> import co2mpas\n   >>> dsp = co2mpas.model.model()\n\n.. Tip:: The models in the diagram are nested; explore by clicking on them.\n\n1. **Precondition:** identifies the initial state of the vehicle by running\n   a preconditioning *WLTP* cycle, before running the *WLTP-H* and *WLTP-L*\n   cycles.\n   The inputs are defined by the ``input.precondition.wltp_p`` node,\n   while the outputs are stored in ``output.precondition.wltp_p``.\n\n2. **Calibration:** the scope of the stage is to identify, calibrate and select\n   (see next sections) the best physical models from the WLTP-H and WLTP-L\n   inputs (``input.calibration.wltp_x``).\n   If some of the inputs needed to calibrate the physical models are not\n   provided (e.g. ``initial_state_of_charge``), the model will select the\n   missing ones from precondition-stage's outputs\n   (``output.precondition.wltp_p``).\n   Note that all data provided in ``input.calibration.wltp_x`` overwrite those\n   in ``output.precondition.wltp_p``.\n\n3. **Prediction:** executed for the NEDC and as well as for the WLTP-H and\n   WLTP-L cycles. All predictions use the ``calibrated_models``. The inputs to\n   predict the cycles are defined by the user in ``input.prediction.xxx`` nodes.\n   If some or all inputs for the prediction of WLTP-H and WLTP-L cycles are not\n   provided, the model will select from ```output.calibration.wltp_x`` nodes a\n   minimum set required to predict |CO2| emissions.\n\n.. _excel-model:\n\nExcel input: data naming conventions\n------------------------------------\nThis section describes the data naming convention used in the |co2mpas| template\n(``.xlsx`` file). In it, the names used as **sheet-names**, **parameter-names**\nand **column-names** are \"sensitive\", in the sense that they construct a\n*data-values tree* which is then fed into into the simulation model as input.\nThese names are split in \"parts\", as explained below with examples:\n\n- **sheet-names** parts::\n\n                  base.input.precondition.WLTP-H.ts\n                  \u00e2\u201d\u201d\u00e2\u201d\u00ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc \u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u00ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc \u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u00ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc \u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u00ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc \u00e2\u201d\u201d\u00e2\u201d\u00ac\u00e2\u201d\u02dc\n      scope\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc     \u00e2\u201d\u201a        \u00e2\u201d\u201a         \u00e2\u201d\u201a     \u00e2\u201d\u201a\n      usage\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc        \u00e2\u201d\u201a         \u00e2\u201d\u201a     \u00e2\u201d\u201a\n      stage\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc         \u00e2\u201d\u201a     \u00e2\u201d\u201a\n      cycle\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc     \u00e2\u201d\u201a\n      sheet_type\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc\n\n\n  First 4 parts above are optional, but at least one of them must be present on\n  a **sheet-name**; those parts are then used as defaults for all\n  **parameter-names** contained in that sheet. **type** is optional and specify\n  the type of sheet.\n\n- **parameter-names**/**columns-names** parts::\n\n                     plan.target.prediction.initial_state_of_charge.WLTP-H\n                     \u00e2\u201d\u201d\u00e2\u201d\u00ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc \u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u00ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc \u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u00ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc \u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u00ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc \u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u00ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc\n      scope(optional)\u00e2\u201d\u20ac\u00e2\u201d\u02dc     \u00e2\u201d\u201a        \u00e2\u201d\u201a                 \u00e2\u201d\u201a               \u00e2\u201d\u201a\n      usage(optional)\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc        \u00e2\u201d\u201a                 \u00e2\u201d\u201a               \u00e2\u201d\u201a\n      stage(optional)\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc                 \u00e2\u201d\u201a               \u00e2\u201d\u201a\n      parameter\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc               \u00e2\u201d\u201a\n      cycle(optional)\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc\n\n  OR with the last 2 parts reversed::\n\n                    plan.target.prediction.WLTP-H.initial_state_of_charge\n                                           \u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u00ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc \u00e2\u201d\u201d\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u00ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc\n      cycle(optional)\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc              \u00e2\u201d\u201a\n      parameter\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u20ac\u00e2\u201d\u02dc\n\n.. note::\n   - The dot(``.``) may be replaced by space.\n   - The **usage** and **stage** parts may end with an ``s``, denoting plural,\n     and are not case-insensitive, e.g. ``Inputs``.\n\n\nDescription of the name-parts\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1. **scope:**\n\n   - ``base`` [default]: values provided by the user as input to |co2mpas|.\n   - ``plan``: values selected (see previous section) to calibrate the models\n     and to predict the |CO2| emission.\n   - ``flag``: values provided by the user as input to ``run_base`` and\n     ``run_plan`` models.\n\n2. **usage:**\n\n   - ``input`` [default]: values provided by the user as input to |co2mpas|.\n   - ``data``: values selected (see previous section) to calibrate the models\n     and to predict the |CO2| emission.\n   - ``output``: |co2mpas| precondition, calibration, and prediction results.\n   - ``target``: reference-values (**NOT USED IN CALIBRATION OR PREDICTION**) to\n     be compared with the |co2mpas| results. This comparison is performed in the\n     *report* sub-model by ``compare_outputs_vs_targets()`` function.\n   - ``config``: values provided by the user that modify the ``model_selector``.\n\n3. **stage:**\n\n   - ``precondition`` [imposed when: ``wltp-p`` is specified as **cycle**]:\n     data related to the precondition stage.\n   - ``calibration`` [default]: data related to the calibration stage.\n   - ``prediction`` [imposed when: ``nedc`` is specified as **cycle**]:\n     data related to the prediction stage.\n   - ``selector``: data related to the model selection stage.\n\n4. **cycle:**\n\n   - ``nedc-h``: data related to the *NEDC High* cycle.\n   - ``nedc-l``: data related to the *NEDC Low* cycle.\n   - ``wltp-h``: data related to the *WLTP High* cycle.\n   - ``wltp-l``: data related to the *WLTP Low* cycle.\n   - ``wltp-precon``: data related to the preconditioning *WLTP* cycle.\n   - ``wltp-p``: is a shortcut of ``wltp-precon``.\n   - ``nedc`` [default]: is a shortcut to set values for both ``nedc-h`` and\n     ``nedc-l`` cycles.\n   - ``wltp`` [default]: is a shortcut to set values for both ``wltp-h`` and\n     ``wltp-l`` cycles.\n   - ``all``: is a shortcut to set values for ``nedc``, ``wltp``,\n     and ``wltp-p`` cycles.\n\n5. **param:** any data node name (e.g. ``vehicle_mass``) used in the physical\n   model.\n\n6. **sheet_type:** there are three sheet types, which are parsed according to\n   their contained data:\n\n   - **pl** [parsed range is ``#A1:__``]: table of scalar and time-depended\n     values used into the simulation plan as variation from the base model.\n   - **pa** [parsed range is ``#B2:C_``]: scalar or not time-depended\n     values (e.g. ``r_dynamic``, ``gear_box_ratios``, ``full_load_speeds``).\n   - **ts** [parsed range is ``#A2:__``]: time-depended values (e.g.\n     ``times``, ``velocities``, ``gears``). Columns without values are skipped.\n     **COLUMNS MUST HAVE THE SAME LENGTH!**\n\n   ..note:: If it is not defined, the default value follows these rules:\n     When **scope** is ``plan``, the sheet is parsed as **pl**.\n     If **scope** is ``base`` and **cycle** is missing in the **sheet-name**,\n     the sheet is parsed as **pa**, otherwise it is parsed as **ts**.\n\nCalibrated Physical Models\n--------------------------\nThere are potentially eight models calibrated from input scalar-values and\ntime-series (see ``reference``):\n\n1. *AT_model*,\n2. *electric_model*,\n3. *clutch_torque_converter_model*,\n4. *co2_params*,\n5. *engine_cold_start_speed_model*,\n6. *engine_coolant_temperature_model*,\n7. *engine_speed_model*, and\n8. *start_stop_model*.\n\nEach model is calibrated separately over *WLTP_H* and *WLTP_L*.\nA model can contain one or several functions predicting different quantities.\nFor example, the electric_model contains the following functions/data:\n\n- *alternator_current_model*,\n- *alternator_status_model*,\n- *electric_load*,\n- *max_battery_charging_current*,\n- *start_demand*.\n\nThese functions/data are calibrated/estimated based on the provided input\n(in the particular case: *alternator current*, *battery current*, and\n*initial SOC*) over both cycles, assuming that data for both WLTP_H and WLTP_L\nare provided.\n\n.. Note::\n    The ``co2_params`` model has a third possible calibration configuration\n    (so called `ALL`) using data from both WLTP_H and WLTP_L combined\n    (when both are present).\n\n\nModel selection\n---------------\n\n.. Note::\n   Since *v1.4.1-Rally*, this part of the model remains disabled,\n   unless the ``flag.use_selector`` is true.\n\nFor the type approval mode the selection is fixed. The criteria is to select the\nmodels calibrated from *WLTP_H* to predict *WLTP_H* and *NEDC_H*; and\nfrom *WLTP_L* to predict *WLTP_L* and *NEDC_L*.\n\nWhile for the engineering mode the automatic selection can be enabled adding\n`-D flag.use_selector=True` to the batch command.\nThen to select which is the best calibration\n(from *WLTP_H* or *WLTP_L* or *ALL*) to be used in the prediction phase, the\nresults of each stage are compared against the provided input data (used in the\ncalibration).\nThe calibrated models are THEN used to recalculate (predict) the inputs of the\n*WLTP_H* and *WLTP_L* cycles. A **score** (weighted average of all computed\nmetrics) is attributed to each calibration of each model as a result of this\ncomparison.\n\n.. Note::\n    The overall score attributed to a specific calibration of a model is\n    the average score achieved when compared against each one of the input\n    cycles (*WLTP_H* and *WLTP_L*).\n\n    For example, the score of `electric_model` calibrated based on *WLTP_H*\n    when predicting *WLTP_H* is 20, and when predicting *WLTP_L* is 14.\n    In this case the overall score of the the `electric_model` calibrated\n    based on *WLTP_H* is 17. Assuming that the calibration of the same model\n    over *WLTP_L* was 18 and 12 respectively, this would give an overall score\n    of 15.\n\n    In this case the second calibration (*WLTP_L*) would be chosen for\n    predicting the NEDC.\n\nIn addition to the above, a success flag is defined according to\nupper or lower limits of scores which have been defined empirically by the JRC.\nIf a model fails these limits, priority is then given to a model that succeeds,\neven if it has achieved a worse score.\n\nThe following table describes the scores, targets, and metrics for each model:\n\n..  _static/CO2MPAS_model_score_targets_limits.png\n   :width: 600 px\n   :align: center\n\n.. _developers:\n\nDevelopers Installation\n=======================\n\nPython Installation\n-------------------\nIf you already have a suitable python-3 installation with all scientific\npackages updated to their latest versions, you may skip this 1st stage.\n\n.. Note::\n    **Installing Python under Windows:**\n\n    The program requires CPython-3, and depends on *numpy*, *scipy*, *pandas*,\n    *sklearn* and *matplotlib* packages, which depend on C-native backends\n    and need a C-compiler to install from sources.\n\n    In *Windows* it is strongly suggested **NOT to install the standard CPython\n    distribution that comes up first(!) when you google for \"python windows\"**,\n    unless you are an experienced python-developer, and you know how to\n    hunt down pre-compiled dependencies from the *PyPi* repository and/or\n    from the `Unofficial Windows Binaries for Python Extension Packages\n    <http://www.lfd.uci.edu/~gohlke/pythonlibs/>`_.\n\n    Therefore we suggest that you download one of the following two\n    *scientific-python* distributions:\n\n      #. `WinPython <https://winpython.github.io/>`_ **python-3** (64 bit)\n      #. `Anaconda <http://continuum.io/downloads>`_ **python-3** (64 bit)\n\n\n\nInstall WinPython\n~~~~~~~~~~~~~~~~~\nThe |winpython|_ distribution is just a collection of the standard pre-compiled\nbinaries for *Windows* containing all the scientific packages, and much more.\nIt is not update-able, and has a quasi-regular release-cycle of 3 months.\n\n\n1. Install the latest **python-3.4+  64 bit** from https://winpython.github.io/.\n   Prefer an **installation-folder without any spaces leading to it**.\n\n2. Open the WinPython's command-prompt console, by locating the folder where\n   you just installed it and run (double-click) the following file::\n\n        <winpython-folder>\\\"WinPython Command Prompt.exe\"\n\n\n3. In the console-window check that you have the correct version of\n   WinPython installed, and expect a similar response:\n\n   .. code-block:: console\n\n        > python -V\n        Python 3.4.3\n\n        REM Check your python is indeed where you installed it.\n        > where python\n        ....\n\n\n4. Use this console and follow ref: *install-co2mpas-package* instructions, below.\n\n\n\nInstall Anaconda\n~~~~~~~~~~~~~~~~\nThe |anaconda|_ distribution is a non-standard Python environment that\nfor *Windows* containing all the scientific packages we need, and much more.\nIt is not update-able, and has a semi-regular release-cycle of 3 months.\n\n1. Install Anaconda **python-3.4+ 64 bit** from http://continuum.io/downloads.\n   Prefer an **installation-folder without any spaces leading to it**.\n\n   .. Note::\n        When asked by the installation wizard, ensure that *Anaconda* gets to be\n        registered as the default python-environment for the user's account.\n\n2. Open a *Windows* command-prompt console::\n\n        \"windows start button\" --> `cmd.exe`\n\n3. In the console-window check that you have the correct version of\n   Anaconda-python installed, by typing:\n\n   .. code-block:: console\n\n        > python -V\n        Python 3.4.3 :: Anaconda 2.3.0 (64-bit)\n\n        REM Check your python is indeed where you installed it.\n        > where python\n        ....\n\n4. Use this console and follow ref: *install-co2mpas-package* instructions, below.\n\n\n.. _install-co2mpas-package:\n\nInstall |co2mpas| package\n-------------------------\n1. Install |co2mpas| executable internally into your python-environment with\n   the following console-commands (there is no prob if the 1st `uninstall`\n   command fails):\n\n   .. code-block:: console\n\n        > pip uninstall co2mpas\n        > pip install co2mpas\n        Collecting co2mpas\n        Downloading http://pypi.co2mpas.io/packages/co2mpas-...\n        ...\n        Installing collected packages: co2mpas\n        Successfully installed co2mpas-1.5.5.post0\n\n   .. Warning::\n        **Installation failures:**\n\n        The previous step require http-connectivity for ``pip`` command to\n        Python's \"standard\" repository (https://pypi.python.org/).\n        In case you are behind a **corporate proxy**, you may try one of the methods\n        described in section `Alternative installation methods`_, below.\n\n        If all methods to install |co2mpas| fail, re-run ``pip`` command adding\n        extra *verbose* flags ``-vv``, copy-paste the console-output, and report it\n        to JRC.\n\n2. Check that when you run |co2mpas|, the version executed is indeed the one\n   installed above (check both version-identifiers and paths):\n\n   .. code-block:: console\n\n       > co2mpas -vV\n       co2mpas_version: 1.5.5.post0\n       co2mpas_rel_date: 2017-02-10 19:31:55\n       co2mpas_path: d:\\co2mpas_ALLINONE-64bit-v1.4.1\\Apps\\WinPython\\python-3.4.3\\lib\\site-packages\\co2mpas\n       python_path: D:\\co2mpas_ALLINONE-64bit-v1.4.1\\WinPython\\python-3.4.3\n       python_version: 3.4.3 (v3.4.3:9b73f1c3e601, Feb 24 2015, 22:44:40) [MSC v.1600 XXX]\n       PATH: D:\\co2mpas_ALLINONE-64bit-v1.4.1\\WinPython...\n\n\n   .. Note::\n       The above procedure installs the *latest* |co2mpas|, which\n       **might be more up-to-date than the version described here!**\n\n       In that case you can either:\n\n       a) Visit the documents for the newer version actually installed.\n       b) \"Pin\" the exact version you wish to install with a ``pip`` command\n          (see section below).\n\n\nInstall extras\n~~~~~~~~~~~~~~\nInternally |co2mpas| uses an algorithmic scheduler to execute model functions.\nIn order to visualize the *design-time models* and *run-time workflows*\nyou need to install the **Graphviz** visualization library  from:\nhttp://www.graphviz.org/.\n\nIf you skip this step, the ``modelgraph`` sub-command and the ``--plot-workflow``\noption would both fail to run (see ref: *debug*).\n\n\n\nUpgrade |co2mpas| (with internet connectivity)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1. Uninstall (see below) and re-install it.\n\n\nUninstall |co2mpas|\n~~~~~~~~~~~~~~~~~~~\nTo uninstall |co2mpas| type the following command, and confirm it with ``y``:\n\n.. code-block:: console\n\n    > pip uninstall co2mpas\n    Uninstalling co2mpas-<installed-version>\n    ...\n    Proceed (y/n)?\n\n\nRe-run the command *again*, to make sure that no dangling installations are left\nover; disregard any errors this time.\n\n\nAlternative installation methods\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nYou may get multiple versions of |co2mpas|, from various places, but all\nrequire the use of ``pip`` command from a *console* to install:\n\n..  Tip::\n    In all cases below, remember to uninstall |co2mpas| if it's already installed.\n\n    Remember also to store the installation logs with the ``-v --log`` options,\n    particularly if you install a specific version from GitHub\n\n- **Latest STABLE:**\n  use the default ``pip`` described command above.\n\n- **Latest PRE-RELEASE:**\n  append the ``--pre`` option in the ``pip`` command.\n\n- **Specific version:**\n  modify the ``pip`` command like that, with optionally appending ``--pre``:\n\n  .. code-block:: console\n\n      pip install co2mpas==1.0.1 --process-dependency-links ... # Other options, like above.\n\n- **Specific branch** from the GitHub-sources:\n\n  .. code-block:: console\n\n      pip install -v log pip.log git+https://github.com/JRCSTU/co2mpas.git@dev --process-dependency-links\n\n- **Specific commit** from the GitHub-sources:\n\n  .. code-block:: console\n\n      pip install -v log pip.log git+https://github.com/JRCSTU/co2mpas.git@2927346f4c513a --process-dependency-links\n\n- **Speed-up download**:\n  append  the ``--use-mirrors`` option in the ``pip`` command.\n\n- (for all of the above) When you are **behind an http-proxy**:\n  append an appropriately adapted option\n  ``--proxy http://user:password@yourProxyUrl:yourProxyPort``.\n\n  .. Important::\n      To avert any security deliberations for this http-proxy \"tunnel\",\n      JRC *cryptographically signs* all *final releases* with one of those\n      keys:\n      - ``GPG key ID: 9CF277C40A8A1B08`` form @ankostis\n      - ``GPG key ID: 1831F9C2294A33CC`` for @vinci1it2000\n\n      Your IT staff may `validate their authenticity\n      <https://www.davidfischer.name/2012/05/signing-and-verifying-python-packages-with-pgp/>`_\n      and detect *man-in-the-middle* attacks, however impossible.\n\n- (for all of the above) **Without internet connectivity** or when the above\n  proxy cmd fails:\n\n  1. Use an existing *Python-3.5* environment; that might be an older *ALLINONE*,\n     |winpython|_, |anaconda|_ or Linux's standard python environment.\n\n  2. With with a \"regular\" browser and when connected to the Internet,\n     pre-download locally and unzip the respective ``co2mpas_DEPENDENCIES-vX.X.XXX.7z`` file\n     from the latest ALLINONE release (e.g. http://github.com/JRCSTU/CO2MPAS-TA/releases/).\n     This archive contains all the dependent packages of |co2mpas|.\n\n  3. Install |co2mpas|, referencing the above folder.\n     Assuming that you unzipped the packages in the folder ``path/to/co2mpas_packages``,\n     use a console-command like this:\n\n     .. code-block:: console\n\n        pip install co2mpas  --no-index  -f path/to/co2mpas_packages --process-dependency-links\n\n\nInstall Multiple versions in parallel\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn order to run and compare results from different |co2mpas| versions,\nyou may use `virtualenv <http://docs.python-guide.org/en/latest/dev/virtualenvs/>`_\ncommand.\n\nThe `virtualenv` command creates isolated python-environments (\"children-venvs\")\nwhere in each one you can install a different versions of |co2mpas|.\n\n.. Note::\n    The `virtualenv` command does NOT run under the \"conda\" python-environment.\n    Use the `conda command <http://conda.pydata.org/docs/using/envs.html>`_\n    in similar manner to create child *conda-environments* instead.\n\n\n1. Ensure `virtualenv` command installed in your \"parent\" python-environment,\n   i.e the \"WinPython\" you use:\n\n   .. code-block:: console\n\n       > pip install virtualenv\n\n   .. Note::\n      The ``pip`` command above has to run only once for each parent python-env.\n      If `virtualenv` is already installed, ``pip`` will exit gracefully.\n\n\n\n2. Ensure |co2mpas| uninstalled in your parent-env:\n\n   .. code-block:: console\n\n       > pip uninstall co2mpas\n\n   .. Warning::\n     It is important for the \"parent\" python-env NOT to have |co2mpas| installed!\n     The reason is that you must set \"children venvs\" to inherit all packages\n     installed on their \"parent\" (i.e. `numpy` and `pandas`), and you cannot\n     update any inherited package from within a child-env.\n\n\n3. Move to the folder where you want your \"venvs\" to reside and create\n   the \"venv\" with this command:\n\n   .. code-block:: console\n\n       > virtualenv --system-site-packages co2mpas_v1.0.1.venv\n\n   The ``--system-site-packages`` option instructs the child-venv to inherit\n   all \"parent\" packages (numpy, pandas).\n\n   Select a venv's  name to signify the version it will contains,\n   e.g. ``co2mpas_v1.0.1.venv``.  The ``.venv`` at the end is not required,\n   it is just for tagging the *venv* folders.\n\n4. \"Activate\" the new \"venv\" by running the following command\n   (notice the dot(``.``) at the begining of the command):\n\n   .. code-block:: console\n\n        > .\\co2mpas_v1.0.1.venv\\Scripts\\activate.bat\n\n   Or type this in *bash*:\n\n   .. code-block:: console\n\n        $ source co2mpas_v1.0.1.venv\\Scripts\\activate.bat\n\n   You must now see that your prompt has been prefixed with the venv's name.\n\n\n6. Install the |co2mpas| version you want inside the activated venv.\n   See the ref: *install-co2mpas-package* section, above.\n\n   .. Tip::\n      Always store the installation logs, particularly if you install a specific version\n      from GitHub::\n\n          pip install -v log pip.log ...  ## co2mpas specifiers follows here...\n\n      Don't forget afterwards to check that what you get when running |co2mpas| is what you\n      installed.\n\n7. To \"deactivate\" the active venv, type:\n\n   .. code-block:: console\n\n       > deactivate\n\n   The prompt-prefix with the venv-name should now dissappear.  And if you\n   try to invoke |co2mpas|, it should fail.\n\n\n\n.. Tip::\n    - Repeat steps 2-->5 to create venvs for different versions of co2mpas.\n    - Use steps (6: Activate) and (9: Deactivate) to switch between different\n      venvs.\n\n\nAutocompletion\n--------------\nIn order to press ``[Tab]`` and get completions, do the following in your\nenvironment (ALLINONE is pre-configured with them):\n\n- For the |clink|_ environment, on `cmd.exe`, add the following *lua* script\n  inside clink's profile folder: ``clink/profile/co2mpas_autocompletion.lua``\n\n  .. code-block:: lua\n\n    --[[ clink-autocompletion for CO2MPAS\n    --]]\n    local handle = io.popen('co2mpas-autocompletions')\n    words_str = handle:read(\"*a\")\n    handle:close()\n\n    function words_generator(prefix, first, last)\n        local cmd = 'co2mpas'\n        local prefix_len = #prefix\n\n        --print('P:'..prefix..', F:'..first..', L:'..last..', l:'..rl_state.line_buffer)\n        if prefix_len == 0 or rl_state.line_buffer:sub(1, cmd:len()) ~= cmd then\n            return false\n        end\n\n        for w in string.gmatch(words_str, \"%S+\") do\n            -- Add matching app-words.\n            --\n            if w:sub(1, prefix_len) == prefix then\n                clink.add_match(w)\n            end\n\n            -- Add matching files & dirs.\n            --\n            full_path = true\n            nf = clink.match_files(prefix..'*', full_path)\n            if nf > 0 then\n                clink.matches_are_files()\n            end\n        end\n        return clink.match_count() > 0\n    end\n\n    sort_id = 100\n    clink.register_match_generator(words_generator)\n\n\n- For the *bash* shell just add this command in your ``~/.bashrc``\n  (or type it every time you open a new console):\n\n  .. code-block:: console\n\n      complete -fdev -W \"`co2mpas-autocompletions`\" co2mpas\n\n.. _substs:\n\n.. |co2mpas| replace:: CO\\ :sub:`2`\\ MPAS\n.. |CO2| replace:: CO\\ :sub:`2`\n.. |clink| replace:: *Clink*\n.. _clink: http://mridgers.github.io/clink/\n.. |winpython| replace:: *WinPython*\n.. _winpython: https://winpython.github.io/\n.. |anaconda| replace:: *Anaconda*\n.. _anaconda: http://continuum.io/downloads\n\n\n",
    "docs_url": null,
    "download_url": "https://github.com/JRCSTU/CO2MPAS-TA/releases/tag/v1.5.5.post0",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://co2mpas.io/",
    "keywords": "CO2,fuel-consumption,WLTP,NEDC,vehicle,automotive,EU,JRC,IET,STU,correlation,back-translation,policy,monitoring,M1,N1,simulator,engineering,scientific",
    "license": "EUPL 1.1+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "co2mpas",
    "platform": "any",
    "project_url": "https://pypi.org/project/co2mpas/",
    "release_url": "https://pypi.org/project/co2mpas/1.5.5.post0/",
    "requires_dist": [
      "xlsxwriter",
      "wltp",
      "transitions",
      "traitlets (>=5.0.0)",
      "tqdm",
      "toolz",
      "six",
      "scipy",
      "scikit-learn",
      "schema",
      "schedula (>=0.1.9)",
      "regex",
      "rainbow-logging-handler",
      "python-gnupg",
      "pykalman",
      "pip",
      "pandas",
      "pandalone[xlrd] (>=0.2.0)",
      "openpyxl (>=2.4.0)",
      "numpy",
      "networkx",
      "matplotlib",
      "lmfit (>=0.9.5)",
      "graphviz",
      "gitpython (>=2.1.0)",
      "formulas (>=0.0.4)",
      "docopt",
      "dill",
      "boltons",
      "PyYAML (>=3.12)",
      "Pillow"
    ],
    "requires_python": "",
    "summary": "The Type-Approving vehicle simulator predicting NEDC CO2 emissions from WLTP",
    "version": "1.5.5.post0"
  },
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "83e9d5cf4aad0b7243332da7c35b20d6",
          "sha256": "367dea2197d154539d7e0bb29782bf95e78649581ff46d261b290f5dc133f630"
        },
        "downloads": 527,
        "filename": "co2mpas-1.0.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "83e9d5cf4aad0b7243332da7c35b20d6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 1295967,
        "upload_time": "2015-11-12T17:15:54",
        "url": "https://files.pythonhosted.org/packages/40/c3/6de77436323254fb85d246cffe970e2ca0ad26b6db9d321213c1364d5493/co2mpas-1.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d957c10beca28050834767b7f3cec403",
          "sha256": "1ec931b451776ebf4a86fb928ec3f22900715ae7929bbcf88fe1d6586103e5d5"
        },
        "downloads": 559,
        "filename": "co2mpas-1.0.1.zip",
        "has_sig": true,
        "md5_digest": "d957c10beca28050834767b7f3cec403",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1312218,
        "upload_time": "2015-11-12T17:16:09",
        "url": "https://files.pythonhosted.org/packages/dc/00/3372954630f2a00d2920f2526185f6a7c6689526eb8fd7d42b0c2475d300/co2mpas-1.0.1.zip"
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "165c34c0613b94d5948497455be0a230",
          "sha256": "9cf34b653c4a029530cae19e8a3286299439c06db753bb0a44cb26d8e7f2dd83"
        },
        "downloads": 526,
        "filename": "co2mpas-1.0.3-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "165c34c0613b94d5948497455be0a230",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 1548105,
        "upload_time": "2015-11-12T17:16:41",
        "url": "https://files.pythonhosted.org/packages/d6/11/39387737c6169ba51452d3a022158cdb7bbb038a54619eebebd8d4e9dec9/co2mpas-1.0.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "dfb09f2bab2f6c8543e1d85da441fd63",
          "sha256": "d67586fb1e3bd35fbf412ec2e1bbba3b308ee6c7a42effdb5efa61ea2ea04880"
        },
        "downloads": 560,
        "filename": "co2mpas-1.0.3.zip",
        "has_sig": true,
        "md5_digest": "dfb09f2bab2f6c8543e1d85da441fd63",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1567744,
        "upload_time": "2015-11-12T17:16:55",
        "url": "https://files.pythonhosted.org/packages/e5/43/63606580f854f9bd51933510d85b802b23eeb99882892e06905029e20810/co2mpas-1.0.3.zip"
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8f7348fadb5fa342f7bb4fe53eff6f3a",
          "sha256": "e6d788f63e7838d62883537bbbf1b0eb361e2b9e54dda7625c5b239ebb63b589"
        },
        "downloads": 694,
        "filename": "co2mpas-1.0.4-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "8f7348fadb5fa342f7bb4fe53eff6f3a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 2066970,
        "upload_time": "2015-11-12T17:18:15",
        "url": "https://files.pythonhosted.org/packages/e5/92/88431a15300b9ee860a33e5792e2fa209ee13ba43b7456863e58559992cf/co2mpas-1.0.4-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f821802867b8ea69def16f17abcdd858",
          "sha256": "8955427681d842eb35ceebd83c43515987c6bebcfb679cea7a0299613bef6298"
        },
        "downloads": 578,
        "filename": "co2mpas-1.0.4.zip",
        "has_sig": true,
        "md5_digest": "f821802867b8ea69def16f17abcdd858",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2089977,
        "upload_time": "2015-11-12T17:18:32",
        "url": "https://files.pythonhosted.org/packages/9c/91/44ad1c843988bdcb4527bcbf5375203ed3fe54edef906f8ab7f4ad7e636e/co2mpas-1.0.4.zip"
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "372d8766e9ce3faffeba093a54c09a54",
          "sha256": "d40745a3beae3995ef3119ec07ebbb38f7066167835285f5148fa68d03ca0ed7"
        },
        "downloads": 380,
        "filename": "co2mpas-1.0.5-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "372d8766e9ce3faffeba093a54c09a54",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 1755383,
        "upload_time": "2015-12-11T00:41:19",
        "url": "https://files.pythonhosted.org/packages/50/8c/dc77c17a346d436238bd41186e088d6d83fd5049c126a79bf58fa2c80ef3/co2mpas-1.0.5-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8abf7497e754a66bf85052ccaf737ca9",
          "sha256": "91f36a34a3bcedf5aad2e8e32ded8d839940d2a01a7f10ed5758edf79714fc57"
        },
        "downloads": 342,
        "filename": "co2mpas-1.0.5.zip",
        "has_sig": true,
        "md5_digest": "8abf7497e754a66bf85052ccaf737ca9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1783109,
        "upload_time": "2015-12-11T00:42:18",
        "url": "https://files.pythonhosted.org/packages/b2/c8/4a4555932780e140fa21430ac31148dfecd21920798b5eba92b45ab716a6/co2mpas-1.0.5.zip"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "39b936c19f05f7e65ca7fbdd7b537b09",
          "sha256": "370d4ddfa9f1eed173852d6540429c427fe40be4bd23f283794b3d56107d8f25"
        },
        "downloads": 165,
        "filename": "co2mpas-1.1.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "39b936c19f05f7e65ca7fbdd7b537b09",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 2239558,
        "upload_time": "2016-02-09T05:19:00",
        "url": "https://files.pythonhosted.org/packages/cd/8c/4568a07f1a86ae5d41ed1c967db69dca2e16239d236458a1eb81b6dc401d/co2mpas-1.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "01dec46472021179e10f487a74542bda",
          "sha256": "052db5c47332d86cb2689ed86ffbca2296acb8815dd4ffc9d972741058b35b0e"
        },
        "downloads": 145,
        "filename": "co2mpas-1.1.0.zip",
        "has_sig": true,
        "md5_digest": "01dec46472021179e10f487a74542bda",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2268941,
        "upload_time": "2016-02-09T05:19:28",
        "url": "https://files.pythonhosted.org/packages/9b/93/5dcf13e5d80623251d5138d332cf30161b63b1d5d489bb4303407aa52130/co2mpas-1.1.0.zip"
      }
    ],
    "1.1.0.dev2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5ab5f04856c9f58d5719169eb4b74142",
          "sha256": "3942660feb7b83eeb849605100ebe82458ce2e8662a4ffb40cf29df6e074d683"
        },
        "downloads": 440,
        "filename": "co2mpas-1.1.0.dev2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "5ab5f04856c9f58d5719169eb4b74142",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 2532802,
        "upload_time": "2015-12-18T18:49:05",
        "url": "https://files.pythonhosted.org/packages/20/12/706561771c0beccb3d7a13ec89f61ed654ba9b82c0dd79144c7418db32e2/co2mpas-1.1.0.dev2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a8d4081c96334144982605e6208a6493",
          "sha256": "2ca4a675240cd16092b0315201223e48a52bb6154a73c518dc454be682b85540"
        },
        "downloads": 433,
        "filename": "co2mpas-1.1.0.dev2.zip",
        "has_sig": true,
        "md5_digest": "a8d4081c96334144982605e6208a6493",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2557382,
        "upload_time": "2015-12-18T18:52:25",
        "url": "https://files.pythonhosted.org/packages/f0/31/4ffe71024ba7f980b653ba0412fed58a04c7e53d32e63f5d1b6848d0b565/co2mpas-1.1.0.dev2.zip"
      }
    ],
    "1.1.0b0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "787474b720f24ab704645902eb296d2c",
          "sha256": "424b43442d56a9afa1f7b7c9b7983a0da4bea0e457b1dfa37ff796812b421d98"
        },
        "downloads": 148,
        "filename": "co2mpas-1.1.0b0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "787474b720f24ab704645902eb296d2c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 2269273,
        "upload_time": "2016-02-05T14:44:26",
        "url": "https://files.pythonhosted.org/packages/a6/d1/eff9aa3fe17b72eb48e0cd2d36eba3f2085cc426fbb770ccb720c496c9a1/co2mpas-1.1.0b0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "db2525967f93976b85e3966f3ba2d912",
          "sha256": "81a5439e8d4821e57fda33dddc0e1343302f2bad734ca10d88715661e0b8a572"
        },
        "downloads": 159,
        "filename": "co2mpas-1.1.0b0.zip",
        "has_sig": true,
        "md5_digest": "db2525967f93976b85e3966f3ba2d912",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2293283,
        "upload_time": "2016-02-05T14:44:59",
        "url": "https://files.pythonhosted.org/packages/13/8d/bcc0d1bf0309b446a107813d8a34425465b8a90205a9dc3ae0909273c20a/co2mpas-1.1.0b0.zip"
      }
    ],
    "1.1.0b1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "31cfea5976fdfeaf9be41253e3905dd7",
          "sha256": "be22c83633dd6c73434dbc64249bb1dba4b94e7399e79815c3c4e828f502170c"
        },
        "downloads": 147,
        "filename": "co2mpas-1.1.0b1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "31cfea5976fdfeaf9be41253e3905dd7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 2464055,
        "upload_time": "2016-02-08T12:13:29",
        "url": "https://files.pythonhosted.org/packages/f7/1b/8fdfcc24b07158071ab0b167cd446e5deeed03a22b094b303f4fa1f79cbf/co2mpas-1.1.0b1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a331ade026064db8498f4fb55ce3fa63",
          "sha256": "ea441e303fc05e50449fa749dfd611750696a0b33221d5035707156a0fb34df6"
        },
        "downloads": 141,
        "filename": "co2mpas-1.1.0b1.zip",
        "has_sig": true,
        "md5_digest": "a331ade026064db8498f4fb55ce3fa63",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2490655,
        "upload_time": "2016-02-08T12:13:52",
        "url": "https://files.pythonhosted.org/packages/01/b9/75172db04f4af5ab1eb6e7615121326b887c18a018e8928ea6bd5a04038d/co2mpas-1.1.0b1.zip"
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1c61424979d66a3dd08cf04795a6af5a",
          "sha256": "d8fccf9c8ca3f43a6cbd5f91abef34c90879aa00304ca330cf04a8ea94f7fd91"
        },
        "downloads": 189,
        "filename": "co2mpas-1.1.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "1c61424979d66a3dd08cf04795a6af5a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 2331951,
        "upload_time": "2016-02-09T06:44:59",
        "url": "https://files.pythonhosted.org/packages/6e/45/0d4d621e8a6d6b658b3190484cb7a6e7d93ea39ac6da97ec2d808ede417d/co2mpas-1.1.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "bf50f72be16c1eed3c8eac3cd0d44577",
          "sha256": "cd9512dd868cb5e6a711e62c6bb3260801687790cf7569435152a94f8dc2d2aa"
        },
        "downloads": 148,
        "filename": "co2mpas-1.1.1.zip",
        "has_sig": true,
        "md5_digest": "bf50f72be16c1eed3c8eac3cd0d44577",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2361353,
        "upload_time": "2016-02-09T06:45:17",
        "url": "https://files.pythonhosted.org/packages/e0/fd/6a53cd06bbfffee1534cb114418b4cb7b6b92b307099d7553aebd2a24fe8/co2mpas-1.1.1.zip"
      }
    ],
    "1.1.1.post1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "039f7cb40933671b129f22ef6bab1f69",
          "sha256": "a03a45183f0c89ce75993df1f4aad767dcf85c66be04f75c4ce6f8cffedddf33"
        },
        "downloads": 152,
        "filename": "co2mpas-1.1.1.post1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "039f7cb40933671b129f22ef6bab1f69",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 1919592,
        "upload_time": "2016-03-03T15:53:21",
        "url": "https://files.pythonhosted.org/packages/91/3e/f4c1dde9239af7d545b69385c57d64952c3b15c6038081ab75a8d6a83995/co2mpas-1.1.1.post1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9d362e17b8de072e95452a0dc7c401a4",
          "sha256": "c0bd9a3c18a0df96be3977f4e01a5b3a9aad424cba9c02708aeb01255e76bf4f"
        },
        "downloads": 151,
        "filename": "co2mpas-1.1.1.post1.zip",
        "has_sig": true,
        "md5_digest": "9d362e17b8de072e95452a0dc7c401a4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1950389,
        "upload_time": "2016-03-03T15:53:37",
        "url": "https://files.pythonhosted.org/packages/9c/1c/e58caa83551113b54b1677635813cbdc72cf4290b60ca8decf5fd1c96709/co2mpas-1.1.1.post1.zip"
      }
    ],
    "1.1.1.post2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "889f005762423b6baf5e46b0687115bc",
          "sha256": "a1bc953337263fef3c8b092834a8863e92e5b11802eee3e1735b9ae07d80de67"
        },
        "downloads": 153,
        "filename": "co2mpas-1.1.1.post2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "889f005762423b6baf5e46b0687115bc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 2013070,
        "upload_time": "2016-03-09T14:36:46",
        "url": "https://files.pythonhosted.org/packages/d2/dd/d51f782f9588d5924edd783856da168f6eafc12537a9b4e8928c5ab347b3/co2mpas-1.1.1.post2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b0d77fda495341cb3d4498c5bb92a29a",
          "sha256": "ad70e3f26399bfe39ebe01b3bfd6be2294107563e0607b2ab350c6ee49f75bb9"
        },
        "downloads": 153,
        "filename": "co2mpas-1.1.1.post2.zip",
        "has_sig": true,
        "md5_digest": "b0d77fda495341cb3d4498c5bb92a29a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2043975,
        "upload_time": "2016-03-09T14:37:04",
        "url": "https://files.pythonhosted.org/packages/51/eb/b0b70d8cdd8e990361eb711ea765f787337da10744e200c939cc9d04aa58/co2mpas-1.1.1.post2.zip"
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "056f32d22c6af332064b3b2736113f1f",
          "sha256": "1d4f2d32f8b289f357a5705e0665d86a87a3d9446ac8226a067bb03a54fc34cf"
        },
        "downloads": 150,
        "filename": "co2mpas-1.2.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "056f32d22c6af332064b3b2736113f1f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 11090135,
        "upload_time": "2016-04-18T15:42:28",
        "url": "https://files.pythonhosted.org/packages/26/48/550481aa11bb0ba01868676164f9912f71702a8abe7aa1d64047527e40d8/co2mpas-1.2.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "edaa9d2a629dfafb72e95661cb997a8b",
          "sha256": "5d33fc15ea51663c0fc5cd97f366678d1730324b6aac4a74cf38746b62a3c269"
        },
        "downloads": 151,
        "filename": "co2mpas-1.2.0.zip",
        "has_sig": true,
        "md5_digest": "edaa9d2a629dfafb72e95661cb997a8b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11126904,
        "upload_time": "2016-04-18T15:43:10",
        "url": "https://files.pythonhosted.org/packages/36/7a/51f2cf104e95ffed1def8e3478fa802aa08af7079747f8bf817ff1ede056/co2mpas-1.2.0.zip"
      }
    ],
    "1.2.0rc2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8f664c0d70d8905ac29f38fcaf66ee6a",
          "sha256": "728a2990ecd78ed8bbd6823e752bb8ff5837a4ca37d52406f8409ffb3eb2a8ec"
        },
        "downloads": 145,
        "filename": "co2mpas-1.2.0rc2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "8f664c0d70d8905ac29f38fcaf66ee6a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9610308,
        "upload_time": "2016-04-13T14:19:30",
        "url": "https://files.pythonhosted.org/packages/6b/9e/3ef5a76db4080d52b18a61c27d52ba1d787b101c2d5d09888f1f9295c2bb/co2mpas-1.2.0rc2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2d083af3dd6b2ba1187f415a45ddae3e",
          "sha256": "c13bfa5333a9736665176c296e898190747ab4789baf49778221143f41d5b28c"
        },
        "downloads": 200,
        "filename": "co2mpas-1.2.0rc2.zip",
        "has_sig": true,
        "md5_digest": "2d083af3dd6b2ba1187f415a45ddae3e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9647126,
        "upload_time": "2016-04-13T14:23:07",
        "url": "https://files.pythonhosted.org/packages/3a/7b/9ec325e54c901565b757c511c35389d562f275e5281970711d099811415e/co2mpas-1.2.0rc2.zip"
      }
    ],
    "1.2.0rc4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "389ab795e86e2895fa87304183b2e368",
          "sha256": "e7b55535991219bf6b8793ae92143c162b552dfb3ec62db738e90a8d18a98b8a"
        },
        "downloads": 151,
        "filename": "co2mpas-1.2.0rc4-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "389ab795e86e2895fa87304183b2e368",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 8885696,
        "upload_time": "2016-04-15T17:51:21",
        "url": "https://files.pythonhosted.org/packages/39/1f/55f1f55380c321891f8416a69f02aea8bf3f79bac0837d050004d0377d10/co2mpas-1.2.0rc4-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c795f24e37bd629ae9e583d93617d19e",
          "sha256": "44d19863d6be8cb52179a6c4c4cc1f5a9ea03b553e49dc2855e391a0ed4b63cc"
        },
        "downloads": 145,
        "filename": "co2mpas-1.2.0rc4.zip",
        "has_sig": true,
        "md5_digest": "c795f24e37bd629ae9e583d93617d19e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8923224,
        "upload_time": "2016-04-15T17:51:51",
        "url": "https://files.pythonhosted.org/packages/5c/5c/822b1df02fcbfe700ba3a43f1d32335da186613d8449f2d02e7d97e1e292/co2mpas-1.2.0rc4.zip"
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a089b250869a3354a982a7f46ebe5ad5",
          "sha256": "4b98dfbcd338d9bbdef1e2d8eedace03a973a31ace38c4eb3c62a68b98397e07"
        },
        "downloads": 167,
        "filename": "co2mpas-1.2.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "a089b250869a3354a982a7f46ebe5ad5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 11090145,
        "upload_time": "2016-04-18T20:52:22",
        "url": "https://files.pythonhosted.org/packages/8d/4e/741fd5ceea95a9965cb551524f64d23107d50014f1543f44d96d4a092804/co2mpas-1.2.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2d70d395af356b4255acb81ba455bc32",
          "sha256": "d47a9de6abf2a5fefd9d3ef53faa3af72c855a3cbce19bdf3779b1835f68dbdf"
        },
        "downloads": 145,
        "filename": "co2mpas-1.2.1.zip",
        "has_sig": true,
        "md5_digest": "2d70d395af356b4255acb81ba455bc32",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11126921,
        "upload_time": "2016-04-18T20:53:08",
        "url": "https://files.pythonhosted.org/packages/a3/68/053e9d6a7c597f55718bfa881566cc80b132b6a23865838abac67a8caf35/co2mpas-1.2.1.zip"
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "74e7859e268b591d0ddd01cc4023e786",
          "sha256": "44ee4accc55539916cf65647a48a64fbb0b07f2fa7333aa5baa1161a8a6a3b27"
        },
        "downloads": 147,
        "filename": "co2mpas-1.2.2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "74e7859e268b591d0ddd01cc4023e786",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9016261,
        "upload_time": "2016-04-18T21:48:15",
        "url": "https://files.pythonhosted.org/packages/59/35/26dfa6e86dd56268bda20091443451db82d0d7032bf2e3eb6551041ed805/co2mpas-1.2.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ab10afc047d913d21d82a477ae0c9322",
          "sha256": "afaceacc8fcdf32f43e9c1c00209432b5e5427832d35398d4a5ee0de63f895a5"
        },
        "downloads": 147,
        "filename": "co2mpas-1.2.2.zip",
        "has_sig": true,
        "md5_digest": "ab10afc047d913d21d82a477ae0c9322",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9053156,
        "upload_time": "2016-04-18T21:49:23",
        "url": "https://files.pythonhosted.org/packages/e0/d5/27ae044e7ab6ffbc8aaade265882f115e48f7252b2de72ef245dc523de2b/co2mpas-1.2.2.zip"
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "30ffe8bc78b88b901640b236c3546dff",
          "sha256": "763a0f6a483fd2a9dc25298cd15f99df773f451a35ae0e7bd3544086c9def768"
        },
        "downloads": 150,
        "filename": "co2mpas-1.2.3-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "30ffe8bc78b88b901640b236c3546dff",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10047161,
        "upload_time": "2016-05-11T10:49:19",
        "url": "https://files.pythonhosted.org/packages/90/a1/994d75485b67efc383670a1d567ba736d3b01958ec4e5c03a8bb6ff478d1/co2mpas-1.2.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "af097ba3c1f771391f94ad8ff553498f",
          "sha256": "ad53c1ce3b759d4abf7910693531ed81c553f25aa8e2efe773503cea3f3ab178"
        },
        "downloads": 149,
        "filename": "co2mpas-1.2.3.zip",
        "has_sig": true,
        "md5_digest": "af097ba3c1f771391f94ad8ff553498f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10084485,
        "upload_time": "2016-05-11T10:49:46",
        "url": "https://files.pythonhosted.org/packages/34/7c/181502438fd5b1cc6fa8bb16f4a04260612be6996c1fd41a8a825e2796f9/co2mpas-1.2.3.zip"
      }
    ],
    "1.2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4194ba9fbc36d8a0ad8060c832d9ccac",
          "sha256": "c4c4c5b09da42bb8b4460b3a5b36746cd158783858a90618c493efffb92cd97e"
        },
        "downloads": 153,
        "filename": "co2mpas-1.2.4-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "4194ba9fbc36d8a0ad8060c832d9ccac",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10047141,
        "upload_time": "2016-05-12T14:57:55",
        "url": "https://files.pythonhosted.org/packages/2f/97/dfa4e4955fad4dc97e4b6403c87e0a6839c90a0aa9e4eb9abef8db6ae2a8/co2mpas-1.2.4-py2.py3-none-any.whl"
      }
    ],
    "1.2.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5f3a22b7090f0968dd0d5af6539a6d18",
          "sha256": "a38ab5651c9acc7cd1c48279c978e9c274c7d9c718aede4c791f8f4065a7d5f4"
        },
        "downloads": 191,
        "filename": "co2mpas-1.2.5-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "5f3a22b7090f0968dd0d5af6539a6d18",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10274082,
        "upload_time": "2016-05-25T11:08:38",
        "url": "https://files.pythonhosted.org/packages/03/61/096b04116862d17a5da7a56f44fda31c16d07cad2ce2f756b2664b7ef0eb/co2mpas-1.2.5-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f1ce238c777109efb1efffb6f3207351",
          "sha256": "940df458a20f6f972e8c169add3fdfcd35c58899fd0645080518542575683b4a"
        },
        "downloads": 156,
        "filename": "co2mpas-1.2.5.zip",
        "has_sig": true,
        "md5_digest": "f1ce238c777109efb1efffb6f3207351",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10311496,
        "upload_time": "2016-05-25T11:09:08",
        "url": "https://files.pythonhosted.org/packages/a6/2e/2933da80056c6be3e40d6c287120e5b06ed30fc8893485f4909fb65872c3/co2mpas-1.2.5.zip"
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1852f220963d8408e201bcb8aabcdca4",
          "sha256": "3ed1a04d14bfa6f428ec54829011f2b031e595ed339525e3f266f6647cbba0e3"
        },
        "downloads": 155,
        "filename": "co2mpas-1.3.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "1852f220963d8408e201bcb8aabcdca4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 16045354,
        "upload_time": "2016-07-18T20:16:06",
        "url": "https://files.pythonhosted.org/packages/79/e8/c7533284f12b619406a6b4f50eaabdf8d705e1be41dc5367ab5bfaa219d5/co2mpas-1.3.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4ff187dc78efc8e0bd9391731256f4b5",
          "sha256": "c6a6088aaf41660208328ed8c9a4298f0b2222eb0383cea4c4453ccac717a58b"
        },
        "downloads": 141,
        "filename": "co2mpas-1.3.1.zip",
        "has_sig": true,
        "md5_digest": "4ff187dc78efc8e0bd9391731256f4b5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16056851,
        "upload_time": "2016-07-18T20:17:25",
        "url": "https://files.pythonhosted.org/packages/c6/39/7c4cb5e8c697caff8eeb846d434a87d349f999364d1b01dceaee0658a1e5/co2mpas-1.3.1.zip"
      }
    ],
    "1.3.1b1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f216fce2344eee58b5d39b8ba9987108",
          "sha256": "73adceedeaa799cd488bced52b1f618d609ddd341c46aca601a9b9bc55e3da53"
        },
        "downloads": 359,
        "filename": "co2mpas-1.3.1b1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "f216fce2344eee58b5d39b8ba9987108",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7839314,
        "upload_time": "2016-07-14T18:15:01",
        "url": "https://files.pythonhosted.org/packages/b9/9e/5390635d2b9c04abcd58e7758d648c7c9588f9fdc15a47ca6e789f5ff524/co2mpas-1.3.1b1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b1c7c24cb37f3dec262b1a397f33ddce",
          "sha256": "6172a30186f057e9ac9f79a4159113cb07a689fdf01c51c5d956c9694472a078"
        },
        "downloads": 357,
        "filename": "co2mpas-1.3.1b1.zip",
        "has_sig": true,
        "md5_digest": "b1c7c24cb37f3dec262b1a397f33ddce",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7878418,
        "upload_time": "2016-07-14T18:15:41",
        "url": "https://files.pythonhosted.org/packages/5b/ba/f63912b1af8c92c6a6649ae2ddbe885d63604eaa5230e59f98e56de321ee/co2mpas-1.3.1b1.zip"
      }
    ],
    "1.3.1b2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "226e6849fdf9fc3378ee4823c246f551",
          "sha256": "5c73b33e50159b64e532de7f0040929584e76e19c28cbac1758b181ce489ccf4"
        },
        "downloads": 615,
        "filename": "co2mpas-1.3.1b2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "226e6849fdf9fc3378ee4823c246f551",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 11643322,
        "upload_time": "2016-07-15T16:20:17",
        "url": "https://files.pythonhosted.org/packages/b2/37/917cabf6d9f070b3e46ae9849e6415c08e855f25a57f2933d2464236bbae/co2mpas-1.3.1b2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "17da05ce2e01c8b35d9cd2b91de9f8f2",
          "sha256": "b7558542b903e821d318a29e5ea1e4bfe060247547ef0cca6090f456c7e1a747"
        },
        "downloads": 340,
        "filename": "co2mpas-1.3.1b2.zip",
        "has_sig": true,
        "md5_digest": "17da05ce2e01c8b35d9cd2b91de9f8f2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11685609,
        "upload_time": "2016-07-15T16:20:42",
        "url": "https://files.pythonhosted.org/packages/59/7b/0dc7b32cc4062d978177ff91cb4599018e8b92fc2ab48ffd92f5ef614920/co2mpas-1.3.1b2.zip"
      }
    ],
    "1.3.1rc0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c699787fe0c72268adc93d1491eed6cb",
          "sha256": "adb2fbe15703ff474caf7820ec45daa5731c7d4e0f95fa1cbd8fe73e1768affa"
        },
        "downloads": 132,
        "filename": "co2mpas-1.3.1rc0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "c699787fe0c72268adc93d1491eed6cb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 16045049,
        "upload_time": "2016-07-18T16:15:37",
        "url": "https://files.pythonhosted.org/packages/e0/39/218276c79c33ee075c246aa062e233bcb5aebe701b5e2fa68ab4b987726c/co2mpas-1.3.1rc0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "14722fa8d4b877d9bbd7bb687b8bec78",
          "sha256": "ab0d66f883f681aff46207a01479ad9aa41610a60e8737ad67ee844e916c7089"
        },
        "downloads": 133,
        "filename": "co2mpas-1.3.1rc0.zip",
        "has_sig": true,
        "md5_digest": "14722fa8d4b877d9bbd7bb687b8bec78",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16057774,
        "upload_time": "2016-07-18T16:24:39",
        "url": "https://files.pythonhosted.org/packages/ea/d4/a90d01744411cfe3740e686673e3a204cbf748a251e549ac3293be2a2213/co2mpas-1.3.1rc0.zip"
      }
    ],
    "1.4.1rc0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7a87930ef3e83162ef296f312467a137",
          "sha256": "79687e4e6d26c0ddb789a41809e29c3fc42bdbf1a0fbca07417c5909c903d790"
        },
        "downloads": 54,
        "filename": "co2mpas-1.4.1rc0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "7a87930ef3e83162ef296f312467a137",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10148797,
        "upload_time": "2016-11-15T21:35:34",
        "url": "https://files.pythonhosted.org/packages/dd/c2/4e53be9f5cd71d9ae3cfe6b5a7790902df29721443c8f21d2d5088e1f93d/co2mpas-1.4.1rc0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "92b6b2d0dca37802c92ad1a9fb85138b",
          "sha256": "c80129988e7dac06fc2c877e5cce04f4cd2106c14269b930d3816cbc37520510"
        },
        "downloads": 55,
        "filename": "co2mpas-1.4.1rc0.tar.gz",
        "has_sig": true,
        "md5_digest": "92b6b2d0dca37802c92ad1a9fb85138b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9994863,
        "upload_time": "2016-11-15T21:38:11",
        "url": "https://files.pythonhosted.org/packages/f6/2c/6b832124f293815be7d6dc69f9781ee9d97c2b6216f6bdc5cd40fd3c1b14/co2mpas-1.4.1rc0.tar.gz"
      }
    ],
    "1.4.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "80526910c7549663e90287d260716d2e",
          "sha256": "ec1983d222f5c795317237936d153a0c47ac90bc9f1a54e77816ead6a1e77cd5"
        },
        "downloads": 81,
        "filename": "co2mpas-1.4.2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "80526910c7549663e90287d260716d2e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10150744,
        "upload_time": "2016-11-17T01:09:06",
        "url": "https://files.pythonhosted.org/packages/d0/1f/57e102538e0d98a40d61a4033ff716fc5c170c96a55192edb790fdd2ac52/co2mpas-1.4.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "65854f7aea2926232f81d3c1a8c5e47c",
          "sha256": "dca83ca570ee90555282aedcad67ba1da2e251666451792aa43190c83e15ed00"
        },
        "downloads": 66,
        "filename": "co2mpas-1.4.2.tar.gz",
        "has_sig": true,
        "md5_digest": "65854f7aea2926232f81d3c1a8c5e47c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9998258,
        "upload_time": "2016-11-17T01:10:24",
        "url": "https://files.pythonhosted.org/packages/3d/14/5cdce168ba56f6a92f576d1dca88083d7a8bc96666dfa3c91ea867289578/co2mpas-1.4.2.tar.gz"
      }
    ],
    "1.5.0b0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c62391c0497a82a04033c226dd9ed3b2",
          "sha256": "ce3a20512688f8087415475d43a4e0db95b7313f84da2eedf275fe8a045dd8c2"
        },
        "downloads": 14,
        "filename": "co2mpas-1.5.0b0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "c62391c0497a82a04033c226dd9ed3b2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 8825481,
        "upload_time": "2017-02-07T05:15:44",
        "url": "https://files.pythonhosted.org/packages/e1/0d/7bef6795944f943c92052f3249b168ae427c465cf11d6af11279b1bff14b/co2mpas-1.5.0b0-py2.py3-none-any.whl"
      }
    ],
    "1.5.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "835136af6485733c39cb5114915d25c6",
          "sha256": "88d1471883c1dd6bc7b92772e829624683c8e4032929b3129e36e75de4bfda94"
        },
        "downloads": 14,
        "filename": "co2mpas-1.5.3-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "835136af6485733c39cb5114915d25c6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 8630806,
        "upload_time": "2017-02-08T22:51:38",
        "url": "https://files.pythonhosted.org/packages/9f/ff/0d72148c43ef8382ba18bfddfbaf80c6028739e78faae98582110d178f35/co2mpas-1.5.3-py2.py3-none-any.whl"
      }
    ],
    "1.5.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "67884a76616405bc078f6b78d7c61890",
          "sha256": "18450e439fec24ca947fd7e83d878a8725a09782ad91cf9d6dd25fe35be823c2"
        },
        "downloads": 16,
        "filename": "co2mpas-1.5.4-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "67884a76616405bc078f6b78d7c61890",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 8630980,
        "upload_time": "2017-02-09T02:19:12",
        "url": "https://files.pythonhosted.org/packages/f0/80/fc557cadb5bf317adfa25662880df2cae934677b279f56dba061e9b52b1f/co2mpas-1.5.4-py2.py3-none-any.whl"
      }
    ],
    "1.5.5.post0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c7c873b7402042c62c39c0ff82fbcb52",
          "sha256": "1ed73533cf479f1fab1f5f5490b7bdd73c432e288988d002612589ed536a5df2"
        },
        "downloads": 15,
        "filename": "co2mpas-1.5.5.post0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "c7c873b7402042c62c39c0ff82fbcb52",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9038437,
        "upload_time": "2017-02-10T18:37:14",
        "url": "https://files.pythonhosted.org/packages/9d/e6/b2dc140fc5ba5751dc30093d7be8d11fa61734fc6173ef5be7c28778afda/co2mpas-1.5.5.post0-py2.py3-none-any.whl"
      }
    ],
    "1.5.6.dev1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d935e8f84d9335bac6dd3bbd8d39ff48",
          "sha256": "65b018694ae284253bd7b9905a4ee7b84d92b9bb95481b8e21a946c9cbc82623"
        },
        "downloads": 15,
        "filename": "co2mpas-1.5.6.dev1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "d935e8f84d9335bac6dd3bbd8d39ff48",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9060559,
        "upload_time": "2017-03-02T12:33:34",
        "url": "https://files.pythonhosted.org/packages/0d/ba/1ad69c083679e8dd2a2d956e1416316ecaa7db9122b1fc214ee833e9ee07/co2mpas-1.5.6.dev1-py2.py3-none-any.whl"
      }
    ],
    "1.5.6.dev2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ef9d73c4cd00fa1829c79b0f16855fc0",
          "sha256": "e1d766401727a9cb9ba4852f85f5f4154e55c6415a543187028b12d09b95d160"
        },
        "downloads": 13,
        "filename": "co2mpas-1.5.6.dev2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "ef9d73c4cd00fa1829c79b0f16855fc0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9060713,
        "upload_time": "2017-03-02T18:23:52",
        "url": "https://files.pythonhosted.org/packages/f3/ff/b6196d072de8c989d700622e8638fef7b38c7056bdc9b42c4cd4a03f76b4/co2mpas-1.5.6.dev2-py2.py3-none-any.whl"
      }
    ],
    "1.5.6.dev3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2c677f626bed2b8bc0e7d93fd81aafc6",
          "sha256": "f634c4ce6fbae44afb5bc6336fb3d36fc042e817c57fbec51efad1bb7434c7e5"
        },
        "downloads": 17,
        "filename": "co2mpas-1.5.6.dev3-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "2c677f626bed2b8bc0e7d93fd81aafc6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9613450,
        "upload_time": "2017-03-10T09:44:06",
        "url": "https://files.pythonhosted.org/packages/68/a5/05074ae0a0356b89910af98d57cfc7bfe2c9f664d057bb346fed67db1dbb/co2mpas-1.5.6.dev3-py2.py3-none-any.whl"
      }
    ],
    "1.6.0.dev1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "30f1de3d6f0bfe048c8319ece55e83c3",
          "sha256": "620e8660413554aaf8de035a2439ecae5554d3a6034207aa3857d7a101e302d0"
        },
        "downloads": 0,
        "filename": "co2mpas-1.6.0.dev1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "30f1de3d6f0bfe048c8319ece55e83c3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9118610,
        "upload_time": "2017-05-04T16:28:48",
        "url": "https://files.pythonhosted.org/packages/80/9b/b00163764b29a3903ad880a795098dc5d264734e3251852f62b568f2105b/co2mpas-1.6.0.dev1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7dc4f6a72c03e989e03bcb9c3b29763b",
          "sha256": "7dd239d0677fa8efb54623467709a6667c7507f994dbf40392a1b8e8dc9f5fbf"
        },
        "downloads": 0,
        "filename": "co2mpas-1.6.0.dev1.tar.gz",
        "has_sig": true,
        "md5_digest": "7dc4f6a72c03e989e03bcb9c3b29763b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8998971,
        "upload_time": "2017-05-04T16:29:55",
        "url": "https://files.pythonhosted.org/packages/57/40/f1e8e38dcb1fda5f867bde4c8a8c884f2adb4bec83a49d312bd8952bc33c/co2mpas-1.6.0.dev1.tar.gz"
      }
    ],
    "1.6.0.dev4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5302f0cee4c0f4a147fa911d64183467",
          "sha256": "6bce707feed3a82661bfec13bcc22d86f598dae1819b9d153ee80ec56ae8af8f"
        },
        "downloads": 0,
        "filename": "co2mpas-1.6.0.dev4-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "5302f0cee4c0f4a147fa911d64183467",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 2495756,
        "upload_time": "2017-05-06T18:28:04",
        "url": "https://files.pythonhosted.org/packages/6a/b8/f0771bb09a8bb16eef8ff33abfc794d9f7af14a76b21c17895832560dc38/co2mpas-1.6.0.dev4-py2.py3-none-any.whl"
      }
    ],
    "1.6.1.dev10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0d9a0620280e0f395e5334c466758f88",
          "sha256": "717bdba2135cfe92fdd5cf45ca0a341260884a4ec2603779bb0de692e6e2cb1a"
        },
        "downloads": 0,
        "filename": "co2mpas-1.6.1.dev10-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "0d9a0620280e0f395e5334c466758f88",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 2515917,
        "upload_time": "2017-07-04T21:56:37",
        "url": "https://files.pythonhosted.org/packages/62/82/836100c47061a4233fe8edb7718044cb559c32ef60e5d72566a60621a8ed/co2mpas-1.6.1.dev10-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "78c78dceeb211c77d89bc8c67affc0b8",
          "sha256": "03ca73ff13a5c6f8b45bfa4e18288479bdd602c3a27d3d6767f468d80c30e714"
        },
        "downloads": 0,
        "filename": "co2mpas-1.6.1.dev10.tar.gz",
        "has_sig": true,
        "md5_digest": "78c78dceeb211c77d89bc8c67affc0b8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1726652,
        "upload_time": "2017-07-04T21:56:52",
        "url": "https://files.pythonhosted.org/packages/35/39/3be760885387182583493607ac42f77c4ac9680159f5fecea4dc925bef00/co2mpas-1.6.1.dev10.tar.gz"
      }
    ],
    "1.6.1.dev11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "323535e1b3d3ca42cfdc341089b4f3c2",
          "sha256": "cade31076fe6bca9fb29078a2bea3bccc3f58ebd5c946d1cf2e97629232cfe57"
        },
        "downloads": 0,
        "filename": "co2mpas-1.6.1.dev11-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "323535e1b3d3ca42cfdc341089b4f3c2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 2516788,
        "upload_time": "2017-07-06T03:32:03",
        "url": "https://files.pythonhosted.org/packages/f0/68/87ae3f01bce97866d1d432b3f213c9b994f818d40f1ab1eda8d52ca54142/co2mpas-1.6.1.dev11-py2.py3-none-any.whl"
      }
    ],
    "1.6.1.dev9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f5ff87d3b2235b6a4eb8a81974323bf6",
          "sha256": "1cd5c16c3e8479e7cf70f95948589274adae50367998d9be458a77ac20d95b04"
        },
        "downloads": 0,
        "filename": "co2mpas-1.6.1.dev9-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "f5ff87d3b2235b6a4eb8a81974323bf6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 2514675,
        "upload_time": "2017-07-02T22:43:45",
        "url": "https://files.pythonhosted.org/packages/4f/85/85900f5ac4f3c44e86269686dfcb1107fe35729f9aff52f2dae8a327a62d/co2mpas-1.6.1.dev9-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "15e791169dd9588d37529b08b84b7fce",
          "sha256": "d3e20420b0de464f393f56d9ac7810ed04b734e438484ef47c3397947c489c2d"
        },
        "downloads": 0,
        "filename": "co2mpas-1.6.1.dev9.tar.gz",
        "has_sig": true,
        "md5_digest": "15e791169dd9588d37529b08b84b7fce",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1724850,
        "upload_time": "2017-07-02T22:44:02",
        "url": "https://files.pythonhosted.org/packages/d7/b1/19d0ef498adf3aa3d909508db781bafde06d6b4d188ee1db53412bf92a5a/co2mpas-1.6.1.dev9.tar.gz"
      }
    ],
    "1.6.1b0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d71d0f76f9187afb81cb5c5fdaf0074a",
          "sha256": "c0d4b41fbe214aeb076fbeaebb0c0ea69dc43b4a99188d02eb3764a797ba3021"
        },
        "downloads": 0,
        "filename": "co2mpas-1.6.1b0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "d71d0f76f9187afb81cb5c5fdaf0074a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 2517500,
        "upload_time": "2017-07-06T17:53:56",
        "url": "https://files.pythonhosted.org/packages/02/b7/6054b90050fa391d9772edcb25599accad7aaf6c4d3835cc5a58e4a04370/co2mpas-1.6.1b0-py2.py3-none-any.whl"
      }
    ],
    "1.6.1b2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3d3f6fbee5823b9f55b4d904add4eb9a",
          "sha256": "58c01ffc89e557496236d08559c7710b8527c1c5a3de6e68b281c2e3dd8b5881"
        },
        "downloads": 0,
        "filename": "co2mpas-1.6.1b2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "3d3f6fbee5823b9f55b4d904add4eb9a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 2449732,
        "upload_time": "2017-07-09T23:00:38",
        "url": "https://files.pythonhosted.org/packages/76/15/37ab2aa00ae47c2b5b8210efc118063a2b62629d3271875921cf820275b9/co2mpas-1.6.1b2-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c7c873b7402042c62c39c0ff82fbcb52",
        "sha256": "1ed73533cf479f1fab1f5f5490b7bdd73c432e288988d002612589ed536a5df2"
      },
      "downloads": 15,
      "filename": "co2mpas-1.5.5.post0-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "c7c873b7402042c62c39c0ff82fbcb52",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 9038437,
      "upload_time": "2017-02-10T18:37:14",
      "url": "https://files.pythonhosted.org/packages/9d/e6/b2dc140fc5ba5751dc30093d7be8d11fa61734fc6173ef5be7c28778afda/co2mpas-1.5.5.post0-py2.py3-none-any.whl"
    }
  ]
}