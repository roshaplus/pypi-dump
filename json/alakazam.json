{
  "info": {
    "author": "Silvio Mayolo",
    "author_email": "mercerenies@comcast.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Alakazam\n========\n\nFunctional programming sugar for Python.\n\nInstalling\n----------\n\nA simple ``pip`` command should do the trick. (In some cases, you may\nneed to use ``sudo``) ::\n\n    pip install alakazam\n\nThe Alakazam library does not, as of now, have any additional\ndependencies and is designed for Python 2 and 3.\n\nUsing\n-----\n\nTo use the stream functionality of Alakazam, import the ``alakazam``\npackage. It is recommended that you alias the package as something\nlike ``zz`` for easier typing.\n\nTo use the Alakazam lambda syntax, import the placeholders from\n``alakazam`` explicitly. ::\n\n    import alakazam as zz\n    from alakazam import _1, _2, _3, _4, _5\n\nThis library aims to make functional-style, and specifically\nstream-oriented programming in Python prettier, more pleasant, and\neasier on the eyes. Python has been capable of many functional\nprogramming tasks, but it has always been a little bit awkward to use\nthose features for anything nontrivial. For instance, suppose we had\nsome list ``arr``, and we wanted to square every element of the list\nand then keep only the even squares. This is how we might approach\nthis problem using Python's built-in functional tools. ::\n\n    list(filter(lambda x: x % 2 == 0, map(lambda x: x ** 2, arr)))\n\nThere's a lot of cruft here, with having to explicitly declare that\nwe're using lambdas every time we need to make a\nfunction. Additionally, we have to read the code almost backward to\nunderstand what it's doing. While this backward sequencing of\noperations is fine in a language like Haskell (where pointfree\nnotation hides the messy bracketing), in Python it would make much\nmore sense if we could read our code in the normal order. This is\nwhere Alakazam comes in. ::\n\n    zz.of(arr).map(_1 ** 2).filter(_1 % 2 == 0).list()\n\nNow the code reads left-to-right, and the lambdas are not nearly as\nbulky. The ``zz.ZZ`` (which is an alias for the class\n``alakazam.Alakazam``) is the entry point to any stream-based\noperations you might want to perform with Alakazam. The ``of`` method\nwraps any iterable in an Alakazam instance. Then the ``map`` and\n``filter`` do the same thing as their global function\nequivalents. Finally, the ``list`` method converts the Alakazam\niterable into an ordinary Python list. The important thing is that,\nnow, a cursory left-to-right reading of the code yields \"arr -> map ->\nfilter -> list\", which is the sequence of operations we're actually\nperforming.\n\nThe lambda syntax is also significantly shortened. In cases where your\nanonymous function merely uses operators, element access, and\nattribute access, you can shorten it by using the placeholder\nlambdas. The placeholder constants ``_1, _2, _3, _4, _5``, based\nloosely on the C++ Boost placeholders with the same names, are each\ndefined as callable objects which return their nth argument. If you\nneed more than five arguments, you can use `zz.arg(n)` directly, which\nis how the placeholders are implemented in the first place. These\nplaceholders can be used with (almost) any built-in Python operator,\nand they can also be subscripted and have arbitrary attributes\naccessed on them. All of these operations will be translated into an\nanonymous function that performs the corresponding operation on its\narguments. So ``_1 ** 2`` is a function that squares its first (and\nonly) argument, ``_1 + _2`` is a function that adds two arguments\ntogether, and ``_1.name == \"Alakazam\"`` is a function which checks\nwhether its argument's name attribute is equal to \"Alakazam\".\n\nReference Material\n------------------\n\nThe `Alakazam Wiki`_ lists the functions available to user\n\n.. _`Alakazam Wiki`: https://github.com/Mercerenies/alakazam/wiki\n\nLicense\n-------\n\nPlease see ``LICENSE.txt`` for licensing information.\n\nAuthor\n------\n\nAlakazam was written by Silvio Mayolo.\n\nRelease Notes (0.2.0)\n---------------------\n\n* Alakazam now uses Python 3 semantics for division (``from __future__\n  import division``) for consistency.\n\n* New functions ``setindex``, ``getindex``, and ``delindex``, for\n  subscripted access and manipulation.\n\n* New utility function ``raise_``.\n\n* Assignment lambdas with ``set``, binder lambdas with ``bind``, and\n  deletion lambdas with ``delete``.\n\n* Errors are reported through ``AlakazamError`` now.\n\n* Changed ``zip_longest`` and ``cross_product`` argument order to\n  better match the ``itertools`` equivalents.\n\n* Static methods on the ``Alakazam`` class can now be called globally.\n\n* Function ``of_dict`` provided to load dictionaries into Alakazam as\n  lists of key-value 2-tuples.",
    "docs_url": null,
    "download_url": "https://github.com/Mercerenies/alakazam/archive/0.2.0.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Mercerenies/alakazam",
    "keywords": "functional,sugar,syntax,lambda,stream,alakazam",
    "license": "BSD3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alakazam",
    "platform": "",
    "project_url": "https://pypi.org/project/alakazam/",
    "release_url": "https://pypi.org/project/alakazam/0.2.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Functional programming sugar for Python",
    "version": "0.2.3"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "78bd5d4cff6d4a5129817ae92ded401b",
          "sha256": "909e17590f57277b57e904bb1cdcb8aee3822a479bd4d70aca861ffa3d3ac54d"
        },
        "downloads": 0,
        "filename": "alakazam-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "78bd5d4cff6d4a5129817ae92ded401b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7960,
        "upload_time": "2017-07-30T23:08:10",
        "url": "https://files.pythonhosted.org/packages/c6/07/2fcfbdabcf075d81321d75c0239035b0d9a10e81d3ac1a41d7d382bd4723/alakazam-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0543a4f3a68604137c0bf16a210cc5c5",
          "sha256": "29b13d2c9790cb3db7d85109b07fc1019256a80fe612168a1a619f05cc4d86be"
        },
        "downloads": 0,
        "filename": "alakazam-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0543a4f3a68604137c0bf16a210cc5c5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7989,
        "upload_time": "2017-07-30T23:10:50",
        "url": "https://files.pythonhosted.org/packages/5c/c0/b2931dbf35368b204a19f891edb118bde27d05ca185a890a84bfdccad189/alakazam-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "608678eddc5ed1cec877ba680ad97888",
          "sha256": "d73a5d2be5c85e9e7e7a2e893f8faf1171003a26be0c2114a635d4db883271a4"
        },
        "downloads": 0,
        "filename": "alakazam-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "608678eddc5ed1cec877ba680ad97888",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7964,
        "upload_time": "2017-07-30T23:14:19",
        "url": "https://files.pythonhosted.org/packages/32/62/9347d74379dd57b475224709bc1ef43eafe609992aba7d4b76e009b1c0f2/alakazam-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6688c78c3c7ce31ba023916846bc71bd",
          "sha256": "194e1156040c7408d4697a3a442bad749d39bbf1bd83568d5fef92e62e7d479e"
        },
        "downloads": 0,
        "filename": "alakazam-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6688c78c3c7ce31ba023916846bc71bd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8370,
        "upload_time": "2017-07-30T23:28:00",
        "url": "https://files.pythonhosted.org/packages/ce/71/ed775ffa1c39c90e6de18a3f5bbac1c7aed9924c28ee9053e4a5e7ee3434/alakazam-0.1.3.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "353352cb270b16e73dae49016910125e",
          "sha256": "b46f589f7b6b8884d456c56946ae68006a5e8ef5b4645f4fc0ba1052cf925b4a"
        },
        "downloads": 0,
        "filename": "alakazam-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "353352cb270b16e73dae49016910125e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10574,
        "upload_time": "2017-08-06T01:16:00",
        "url": "https://files.pythonhosted.org/packages/20/3b/604202b7481d55b1497fbea565797b72f7fbea2372722647699122cbc5a4/alakazam-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "43edea3076c16b1fc92c32da15f517ad",
          "sha256": "df61b20a51ac2f4600311eb376fcd25fcc91a969533f7bd84284f957a4f087be"
        },
        "downloads": 0,
        "filename": "alakazam-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "43edea3076c16b1fc92c32da15f517ad",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10559,
        "upload_time": "2017-08-14T21:05:36",
        "url": "https://files.pythonhosted.org/packages/ae/62/13bcee62cc1c6c8a2da2dab7cd4dc1f3fdabc154abc4e5829bc2067d813e/alakazam-0.2.1.tar.gz"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "73c0185b51b41ccb2b18f97e1f01f14f",
          "sha256": "963d40dff391aba27a31dd5caf2924dc773a561dcb16a8818acd9bb502e7640b"
        },
        "downloads": 0,
        "filename": "alakazam-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "73c0185b51b41ccb2b18f97e1f01f14f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10560,
        "upload_time": "2017-08-14T21:09:14",
        "url": "https://files.pythonhosted.org/packages/53/04/bb384c352359c587fc0ccf64bc42a5d1a79646738daa8b335dfbc419cc3e/alakazam-0.2.2.tar.gz"
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2b072c76756f080ab32bd90d75e6dbe2",
          "sha256": "b39c4718aa60f0a13584241a8b3141c03b241d32bf95c260c4c8ab64b2670e64"
        },
        "downloads": 0,
        "filename": "alakazam-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2b072c76756f080ab32bd90d75e6dbe2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10584,
        "upload_time": "2017-08-15T02:13:14",
        "url": "https://files.pythonhosted.org/packages/ef/1d/54b3f425b10009953053966512bf093ee18d06604433b9c39abfc7054836/alakazam-0.2.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2b072c76756f080ab32bd90d75e6dbe2",
        "sha256": "b39c4718aa60f0a13584241a8b3141c03b241d32bf95c260c4c8ab64b2670e64"
      },
      "downloads": 0,
      "filename": "alakazam-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "2b072c76756f080ab32bd90d75e6dbe2",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 10584,
      "upload_time": "2017-08-15T02:13:14",
      "url": "https://files.pythonhosted.org/packages/ef/1d/54b3f425b10009953053966512bf093ee18d06604433b9c39abfc7054836/alakazam-0.2.3.tar.gz"
    }
  ]
}