{
  "info": {
    "author": "Roland Puntaier",
    "author_email": "roland.puntaier@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Topic :: System :: Archiving",
      "Topic :: System :: Systems Administration",
      "Topic :: Utilities"
    ],
    "description": "================================\nremdups - remove duplicate files\n================================\n\n:Author: Roland Puntaier\n:Homepage: https://github.com/rpuntaie/remdups\n:License: See LICENSE file\n\nremdups\n=======\n\n``remdups`` generates a script that removes duplicate files starting from file hashes.\nIt can also generate a these file hashes. It allows to specify which files to keep \nand which to remove. Byte-wise comparison available to be on the safe side.\n\nThe resulting script should be further inspected, possibly re-generated with different parameters\nand finally executed separately in your shell.\n\nKnown Issues\n============\n\nLinux:\n    None\n\n\nWindows: \n    A gave it a try on Windows Cmd, but ran into problems due to \n    `Python Issue 1602 <http://bugs.python.org/issue1602>`_.\n    So for file names with encodings falling into this issue it won't work.\n\n\nInstall\n=======\n\n\n- Directly from PyPi:\n\n.. code-block:: console\n\n  $ pip install remdups\n\n\n- From github: Clone, change to directory and do\n\n.. code-block:: console\n\n  $ python setup.py install\n\n- If you plan to extend this tool\n\n  - fork on github\n  - clone locally from your fork\n  - do an editable install\n\n  .. code-block:: console\n\n    $ pip install -e .\n\n  - test after change and bring coverage to 100%\n\n  .. code-block:: console\n\n    $ py.test test_remdups.py --cov remdups.py --cov-report term-missing\n\n  - consider sharing changes useful for others (github pull request).\n\nUsage\n=====\n\nThe intended procedure to remove duplicates with remdups is:\n\n1. create file hash list:\n\n   .. code-block:: console\n\n     $ remdups --hash > hashes.txt\n\n   or \n\n   .. code-block:: console\n\n     $ find . -not -type d -exec sha256sum {} \\; > hashes.txt\n\n2. make a script with remove commands\n\n   .. code-block:: console\n     \n     $ remdups [options] hashes.txt nodupes.sh\n\n3. inspect the script and go back to 2., if necessary, else 4.\n\n4. execute script\n\n     $ nodupes.sh\n\n5. remove empty directories:\n\n   .. code-block:: console\n\n     $ find . -empty -type d -delete\n\n\nAll in One\n----------\n\nThis takes long, because all the hashes are create anew.\nIt is therefore not suitable to iterate with new parameters.\n\n.. code-block:: console\n    \n  $ remdups\n\n\nFile Hash List\n--------------\n\nThe file hash list as an intermediate starting point makes it faster to iterate with new parameters.\n\nThere are more ways to generate the file hash list.\n\n- Use find with a checksum generator\n  \n\n.. code-block:: console\n\n  $ find . -not -type d -exec sha256sum {} \\; > hashes.txt\n\n- Use remdups\n\n  ``remdups`` allows to make a file hash list with the ``--hash`` option and no input file.\n\n  .. code-block:: console\n  \n    $ remdups --hash > hashes.txt \n\n\nWith ``--hash`` one can use the ``--exclude-dir`` to ignore certain directories.\n\n``--hash`` together with a file can replace system checksum tools.\n``remdups`` has these source options: ``--name``, ``--namedate``, ``--exif``, ``--content``, ``--block``.\nFor full content ``md5sum`` or ``shaXsum`` (X=1, 224, 256, 384, 512) system tools are faster.\n\n.. hint:: \n\n    For more advanced file selection ``find`` should be used.\n    The following example ignores directory ``old`` and produces a hash for all JPEG files by their EXIF data.\n\n    .. code-block:: console\n\n      $ find . -path \"old\" -prune -or -not -type d -and -iname \"\\*.jpg\" -exec remdups --exif --hash {} \\;\n\n\nGenerate the remove script\n--------------------------\n\nYou start with the file hash list\n  \n.. code-block:: console\n\n  $ remdups [options] hashes.txt > rm.sh\n\nor \n\n.. code-block:: console\n\n  $ remdups [options] hashes.txt rm.sh\n\n\nAt this stage you would use \n\n- ``-i`` and ``-o`` to choose which files get removed\n- ``-c`` to comment out the remove command\n- ``-r`` and ``-d`` to specify alternative remove commands for file and directory\n- ``-x`` to specify the extension used for html files subdirectory.\n  It defaults to ``_files``. If it starts with hyphen like ``-Dateien`` do ``-x=\"-Dateien\"``.\n- ``-n`` ``--only-same-name`` to ignore duplicates with different name\n- ``-s`` ``--safe`` to do a final bytewise compare to make sure that files are really the same.\n  You should add this option for the final remove script version. It can take a long time.\n  After that you possibly still do manual changes to the script and then you execute it.\n\nHelp\n====\n\nCheck out:\n\n  $ remdups --help\n\nFor use from within python check out the code.\n\nSimilar tools\n=============\n\nI had to clean a sprawling directory and used python,\nthen decided to make a little command line tool out of it. \n\nAlthough I did a little googling before, \nonly afterwards I found other links with similar tools.\nI did not test them because my directory is deduped by now. \n\nI have made a Wikipedia page listing similar tools: \n`List of Duplicate File Finders <https://en.wikipedia.org/wiki/List_of_duplicate_file_finders>`_",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/rpuntaie/remdups",
    "keywords": "Duplicate, File",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "remdups",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/remdups/",
    "release_url": "https://pypi.org/project/remdups/1.2/",
    "requires_python": null,
    "summary": "remdups - remove duplicate files",
    "version": "1.2"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8e02e5fd7a4d41c3130ec9ec5d340a18",
          "sha256": "acf2fd657b7fd4a254789e92d66783c029794262c238564e2c48821f447109f0"
        },
        "downloads": 2271,
        "filename": "remdups-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8e02e5fd7a4d41c3130ec9ec5d340a18",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3895,
        "upload_time": "2013-10-08T10:24:20",
        "url": "https://files.pythonhosted.org/packages/08/be/8912e897c99280538d1ed73510016525eedef326f5e11b2062278ed9306c/remdups-1.0.tar.gz"
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "31cf96c5c385e142c36c08ec0fae6797",
          "sha256": "29fcd20f2f903a734d51411fe1f775229eb4db62edc154dc336bc794c2dfa298"
        },
        "downloads": 2228,
        "filename": "remdups-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "31cf96c5c385e142c36c08ec0fae6797",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4070,
        "upload_time": "2013-10-31T21:53:51",
        "url": "https://files.pythonhosted.org/packages/29/89/d2836b4264c37e4d73471fdcafdbda6a2f8363293c1452515d9f34b7b363/remdups-1.1.tar.gz"
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9c53d5d3778e3c78a4ac40e25e3490d7",
          "sha256": "1952452038bdc3e1e6fd1febd0cf303809be609292636063e67a4fecea622169"
        },
        "downloads": 120,
        "filename": "remdups-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9c53d5d3778e3c78a4ac40e25e3490d7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8395,
        "upload_time": "2016-05-29T19:04:04",
        "url": "https://files.pythonhosted.org/packages/d4/f1/deadc508057f6e9fe53a73a74bfdd7d7fc312e74f3d5073b7651c68d37ec/remdups-1.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9c53d5d3778e3c78a4ac40e25e3490d7",
        "sha256": "1952452038bdc3e1e6fd1febd0cf303809be609292636063e67a4fecea622169"
      },
      "downloads": 120,
      "filename": "remdups-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9c53d5d3778e3c78a4ac40e25e3490d7",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8395,
      "upload_time": "2016-05-29T19:04:04",
      "url": "https://files.pythonhosted.org/packages/d4/f1/deadc508057f6e9fe53a73a74bfdd7d7fc312e74f3d5073b7651c68d37ec/remdups-1.2.tar.gz"
    }
  ]
}