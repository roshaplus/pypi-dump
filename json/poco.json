{
  "info": {
    "author": "Shiwaforce.com",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "Poco\n====\n\n.. image:: https://travis-ci.org/shiwaforce/project-compose.svg?branch=master\n    :target: https://travis-ci.org/shiwaforce/project-compose\n\n.. image:: https://img.shields.io/pypi/v/poco.svg\n    :target: https://pypi.python.org/pypi/poco\n\n.. image:: https://img.shields.io/pypi/pyversions/poco.svg\n    :target: https://pypi.python.org/pypi/poco\n\n.. image:: logo.jpg\n    :height: 400px\n    :width: 400px\n\nAbout\n-----\n\n**poco** lets you catalogue and manage your Docker projects using simple YAML files to shorten the route from finding your project to initialising it in your local environment.\n\nThis helps you set up your local development environment and to run demos.\n\nWorking examples can be found here: https://github.com/shiwaforce/poco-example\n\nRequirements\n------------\n\n - Docker, version > 17\n\nQuick start\n===========\n\n.. image:: https://asciinema.org/a/131956.png\n    :target: https://asciinema.org/a/131956\n\nInstall the latest poco:\n\n``$ pip install poco``\n\nList all projects in the catalogue (It will be initialise the sample catalogue at first time):\n\n``$ poco catalog ls``\n\n``example-voting-app``\n\nList all available plans of the example-voting-app:\n\n``$ poco plan ls example-voting-app``\n\n``default``\n\n``javaworker``\n\n``simple``\n\nMake sure your local Docker engine is up and running.\n\nStart the Docker example voting app in javaworker plan:\n\n``$ poco start example-voting-app javaworker``\n\nThis will download all the required Docker images and start them. The last step of the process will issue a \"docker ps\" command listing all the running containers.\n\nVisit http://localhost:5000 to see the application's main page.\n\nThe application was started in javaworker plan, so the examplevotingapp_worker container contains OpenJDK 1.8 to run the worker node.\n\nStop the example voting app:\n\n``$ poco down example-voting-app javaworker``\n\n``Project stopped``\n\nStart the Docker example voting app in default plan:\n\n``$ poco start example-voting-app default``\n\nVisit http://localhost:5000 to see the application's main page.\n\nThe application was started in default plan, so the examplevotingapp_worker container runs .Net in the worker node.\n\nStop the example voting app:\n\n``$ poco down example-voting-app default``\n\n``Project stopped``\n\nCustom installation and configuration\n=====================================\n\nTo be added later.\n\nDetailed installation steps\n---------------------------\n\nUse pip:\n\n``$ pip install poco``\n\nor\n\n``$ python setup.py install``\n\nHome directory\n--------------\n\nThe home directory is in the user's local home directory with the name: .poco\n\nFor example (OSX):\n    /Users/john.doe/.poco\n\nBasic configuration file\n------------------------\n\nLocation: under the home directory with name: config\nThe format of the file is YAML, including a default section.\n\nIf the default section is empty the poco-catalog.yml file looking in the config directory\n\nParameters:\n - repositoryType (optional):  git | svn | file\n - url (optional): must be a valid GIT or SVN url\n - file (optional): catalog file path in the repository or local filesystem - default : poco-catalog.yml\n - branch (optional): branch name - default : master\n - ssh-key (optional): ssh file location for git repository - default: ~/.ssh/id_rsa\n - workspace (optional): the base directory, where the project will be checked out - default : ~/workspace\n\nExample 1 (empty):\n::\n\n    default:\n\nExample 2 (Git, multiple):\n::\n\n    default:\n        repositoryType: git\n        url: https://github.com/shiwaforce/poco-example.git\n        file: poco-catalog.yml\n        branch: master\n    another:\n        repositoryType: git\n        url: https://github.com/shiwaforce/poco-example-another.git\n        file: poco-catalog.yml\n        branch: master\n    workspace: /Users/john.doe/workspace\n\nProject catalog file\n--------------------\n\nIt describes the lists of the projects and the location of the projects' poco files in YAML format.\n\nConfiguration:\n - keys: The name of the projects\n - git (optional): must be a valid GIT url for the project\n - svn (optional): must be a valid SVN url for the project\n - branch (optional): branch name - default : master\n - file (optional): path to the poco file. - Default : poco.yml\n - repository-dir (optional): the base directory name where the project will be checked out. - Default: name of the project\n - ssh-key (optional): ssh file location for the Git repository - default: ~/.ssh/id_rsa\n\nIf you don't define the repository it will be relative to the config file's location\n\nIf the path ends with a name of a directory it will be extended with the default filename : poco.yml\n\nFor example:\n::\n\n    test1:\n        git: https://github.com/shiwaforce/poco-example.git\n        branch: master\n    test2:\n        svn: http://svn.apache.org/repos/test2/trunk\n    test3:\n        file: test3\n    test4:\n        git: ssh://git@git.example.com/test4/test4.git\n        file: another/directory/anoter_compose.yml\n\nPoco file\n---------\n\nIt describes the project's hierarchy divided into several 'plans' in YAML format.\n\nIf you don't declare a section under a plan it will take the compose-files into account.\n\nSteps defined in the before_scripts section will run before the compose command (build, config, up, start)\n\nIn the working-directory section you can change the working directory (the default is the parent\nof the compose file)\n\nEach row in the checkout section will check out a Git repository to the target directory\nwhich is relative to the compose file or the working directory if it is set.\n\nFor example:\n::\n\n    version: '2.0'\n    maintainer: \"operations@shiwaforce.com\"\n    containers:\n        sample: dc-sample.yml\n        mysql: dc-mysql.yml\n    before_script:\n        - ls -l\n    after_script:\n        - ls -l\n    checkout: test ssh://git@git.shiwaforce.com:7999/test/test.git\n    working-directory: microservice-all-war\n    enviroment:\n        include: conf/default.env\n    plan:\n        demo:\n            enviroment:\n                include: conf/dev/dev.env\n                external: svn\n            docker-compose-file: sample\n        dev/sw: sample\n        dev/default:\n            - docker-compose.yml\n        dev/java: docker-compose.yml\n        dev/js:\n            enviroment:\n                include: conf/dev/dev.env\n            docker-compose-file:\n                  - docker-compose.yml\n                  - docker-compose.yml\n\nCommands\n--------\n\n    **poco catalog add [<target-dir>] [<catalog>]**\n\nadds the current directory (or target directory) to the poco-catalog - default or selected (if it is a Git repository)\n\n    **poco catalog ls**\n\nlists the available projects (from the poco-catalog file)\n\n    **poco catalog config**\n\nprints the local config\n\n    **poco catalog branch <branch> [<catalog>] [-f]**\n\nswitches branch in the poco-catalog (default is the name with 'default' or the first) repository, use -f to force\n\n    **poco catalog branches [<catalog>]**\n\nlists the available poco-catalog (default is the name with 'default' or the first) repository branches\n\n    **poco catalog push [<catalog>]**\n\npushes poco-catalog (default is the name with 'default' or the first) changes to the repository (if it is not a local file)\n\n    **poco catalog remove <project>**\n\nremoves selected project form the poco-catalog\n\n    **poco config <project> [plan]**\n\nprints the full config for selected project with plan (docker-compose file with environment variables)\n\n    **poco clean**\n\ncleans up all docker images, volumes and pulled repositories and data\n\n    **poco init <project>**\n\ninitialises selected project with the following steps:\ncreates the poco file if it does not exist\ncreates the docker-compose sample file if it does not exist\n\n    **poco install <project> [plan]**\n\ninstalls selected project with selected plan\ngets project descriptors from repository\n\n    **poco up <project> [plan]**\n\nstarts the project with selected plan (if exists)\ninstalls if it isn't installed yet\n\n    **poco down <project> [plan]**\n\nstops docker containers belonging the given project with selected plan\n\n    **poco build <project> [plan]**\n\nbuilds docker images for the selected project with the specified plan\n\n    **poco ps <project> [plan]**\n\nlists the state of docker images in selected project\n\n    **poco plan ls <project>**\n\nlists available plans in selected projects\n\n    **poco pull <project> [plan]**\n\npulls docker images for the specified project with the selected plan\n\n    **poco start <project> [plan]**\n\nalternative for up\n\n    **poco stop <project> [plan]**\n\nalternative for down\n\n    **poco restart <project>**\n\nrestarts docker containers which belong to the selected project\n\n    **poco log <project> [plan]**\n\nprints log from docker containers which belongs to the specified project with selected plan\n\n    **poco logs <project> [plan]**\n\nprints log from docker containers which belongs to the specified project with selected plan\n\n    **poco branch <project> <branch>**\n\nswitches branch in the specified project repository\n\n    **poco branches <project>**\n\nlists the available project repository branches\n\n\nLocal uninstall\n---------------\n\nDelete the egg file from the current Python site-packages (for example: poco-0.15-py2.7)\n\nOSX\n\"\"\"\nremove script from /usr/local/bin (poco)\n\nLicense\n-------\n\nMIT\n\nContributors\n------------\n\n`ShiwaForce.com Inc.  <https://www.shiwaforce.com/en/>`_",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://www.shiwaforce.com",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "poco",
    "platform": "",
    "project_url": "https://pypi.org/project/poco/",
    "release_url": "https://pypi.org/project/poco/0.16.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "poco lets you catalogue and manage your Docker projects using simple YAML files to shorten the route from finding your project to initialising it in your environment.",
    "version": "0.16.0"
  },
  "releases": {
    "0.15.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "40975a24286e8b4a725a21a0e723e98f",
          "sha256": "68faff0b48db860564d4a6f8624fc14b3d8a13ec72902ca027a60f1aee8373fc"
        },
        "downloads": 0,
        "filename": "poco-0.15.0.tar.gz",
        "has_sig": false,
        "md5_digest": "40975a24286e8b4a725a21a0e723e98f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19037,
        "upload_time": "2017-08-24T14:38:58",
        "url": "https://files.pythonhosted.org/packages/b2/fc/48d84297dbde73ae7e9c36be005a9df91c84d4c8ea0d953aaee28039ba7d/poco-0.15.0.tar.gz"
      }
    ],
    "0.16.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6f92c6f27ab9542f730ebd40edecab4e",
          "sha256": "2b03fdafd94200147898ab8fdd15f78e1275f8d62c68be66b4ded1707beac71d"
        },
        "downloads": 0,
        "filename": "poco-0.16.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6f92c6f27ab9542f730ebd40edecab4e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19048,
        "upload_time": "2017-08-30T14:25:59",
        "url": "https://files.pythonhosted.org/packages/28/8a/b7e99a9467d2c28ec1fa54619c1f368c8f32a09070dda75421d28a33be1c/poco-0.16.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "6f92c6f27ab9542f730ebd40edecab4e",
        "sha256": "2b03fdafd94200147898ab8fdd15f78e1275f8d62c68be66b4ded1707beac71d"
      },
      "downloads": 0,
      "filename": "poco-0.16.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6f92c6f27ab9542f730ebd40edecab4e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 19048,
      "upload_time": "2017-08-30T14:25:59",
      "url": "https://files.pythonhosted.org/packages/28/8a/b7e99a9467d2c28ec1fa54619c1f368c8f32a09070dda75421d28a33be1c/poco-0.16.0.tar.gz"
    }
  ]
}