{
  "info": {
    "author": "httpstan developers",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "Programming Language :: Cython",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "========\nhttpstan\n========\n\nHTTP interface to Stan, a package for Bayesian inference.\n\nAn HTTP 1.1 interface to the Stan_ C++ package, **httpstan** is a shim_ that\nallows users to interact with the Stan C++ library using a `Web API`_. The\npackage is intended for use as a universal backend for frontends which know how\nto make HTTP requests. The primary audience for this package is developers.\n\nIn addition to providing all the functionality of the command-line interface\nto Stan (CmdStan_) over HTTP 1.1, **httpstan** provides:\n\n* Automatic caching of compiled Stan Programs and samples from programs.\n* Parallel sampling.\n\nImportant Disclaimer\n====================\n**httpstan** is experimental software. This software is not intended for general use.\n\nhttpstan currently requires Python 3.6 as it uses asynchronous generators (PEP525). Support for\nPython 3.5 may emerge at some point. No older versions of Python will be supported.\n\nBackground\n==========\n\n**httpstan** is a shim_ allowing clients speaking HTTP to call functions in the\nStan C++ package's ``stan::services`` namespace. **httpstan** was originally\ndeveloped as a \"backend\" for a Python interface to Stan, PyStan_.\n\nInstall\n=======\n\n::\n\n    python3 -m pip install httpstan\n\nUsage\n=====\n\nAfter installing ``httpstan``, running the module will begin listening on\nlocalhost, port 8080::\n\n    python3 -m httpstan\n\nIn a different terminal, make a POST request to\n``http://localhost:8080/v1/programs`` with a Stan Program to compile the\nprogram::\n\n    curl -X POST -H \"Content-Type: application/json\" \\\n        -d '{\"program_code\":\"parameters {real y;} model {y ~ normal(0,1);}\"}' \\\n        http://localhost:8080/v1/programs\n\nThis request will return a program id similar to the following::\n\n    {\"program\": {\"id\": \"8137474d19926b0aa8efd4f1d3944131d59269d97a7bd8dab8e79d667eb314df\"}}\n\n(The program ``id`` will be different on different platforms and with different versions of Stan.)\n\nTo draw samples from this model using default settings, we make the following request::\n\n    curl -X POST -H \"Content-Type: application/json\" \\\n        -d '{\"type\":\"hmc_nuts_diag_e_adapt\"}' \\\n        http://localhost:8080/v1/programs/8137474d19926b0aa8efd4f1d3944131d59269d97a7bd8dab8e79d667eb314df/actions\n\nThis request will return samples from the normal distribution. The output is\ntaken more or less directly from the output of the relevant function defined by\nthe Stan C++ package (in the ``stan::services`` namespace). Consult the Stan\nC++ documentation for details.\n\nContribute\n==========\n\nContribution guidelines are described in ``CONTRIBUTE.rst``.\n\nLicense\n=======\n\nISC License.\n\n.. _shim: https://en.wikipedia.org/wiki/Shim_%28computing%29\n.. _`Web API`: https://en.wikipedia.org/wiki/Web_API\n.. _CmdStan: http://mc-stan.org/interfaces/cmdstan.html\n.. _PyStan: http://mc-stan.org/interfaces/pystan.html\n.. _Stan: http://mc-stan.org/\n.. _`OpenAPI documentation for httpstan`: api.html\n.. _bash: https://en.wikipedia.org/wiki/Bash_%28Unix_shell%29",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "httpstan",
    "platform": "",
    "project_url": "https://pypi.org/project/httpstan/",
    "release_url": "https://pypi.org/project/httpstan/0.1.1/",
    "requires_python": "",
    "summary": "HTTP-based interface to Stan, a package for Bayesian inference.",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0a36dec17b577a3c753c9b308c07b2ef",
          "sha256": "abad5562df162b9dc3d21532968b4e19b6e4239dec3748053fd94f48797a1abf"
        },
        "downloads": 0,
        "filename": "httpstan-0.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "0a36dec17b577a3c753c9b308c07b2ef",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17978721,
        "upload_time": "2017-05-17T17:03:29",
        "url": "https://files.pythonhosted.org/packages/22/e4/092cdc3aeecac975656bcc88b74ad0e6cd6f7ff1adb4f1f859e3c8bb55e5/httpstan-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a4b4a9f94abef29a889ab53c266fde4c",
          "sha256": "582d04e1ea044531db6bcf5a6de5d54513ddb9efc42489a2d8ab426ff62bf76b"
        },
        "downloads": 0,
        "filename": "httpstan-0.1.1.tar.gz",
        "has_sig": true,
        "md5_digest": "a4b4a9f94abef29a889ab53c266fde4c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17978339,
        "upload_time": "2017-05-18T03:10:23",
        "url": "https://files.pythonhosted.org/packages/74/56/8a81b799f731e87da2bc88295745594e0e32434fefd7fa8c0e04635ff9ca/httpstan-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a4b4a9f94abef29a889ab53c266fde4c",
        "sha256": "582d04e1ea044531db6bcf5a6de5d54513ddb9efc42489a2d8ab426ff62bf76b"
      },
      "downloads": 0,
      "filename": "httpstan-0.1.1.tar.gz",
      "has_sig": true,
      "md5_digest": "a4b4a9f94abef29a889ab53c266fde4c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 17978339,
      "upload_time": "2017-05-18T03:10:23",
      "url": "https://files.pythonhosted.org/packages/74/56/8a81b799f731e87da2bc88295745594e0e32434fefd7fa8c0e04635ff9ca/httpstan-0.1.1.tar.gz"
    }
  ]
}