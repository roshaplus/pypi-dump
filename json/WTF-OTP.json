{
  "info": {
    "author": "Hiroaki Yamamoto",
    "author_email": "hiroaki@hysoftware.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Flask",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: CGI Tools/Libraries",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "One-Time Password Field for WT-Forms\n====================================\n\n|Build Status| |Coverage Status|\n\nWhat This?\n----------\n\nThis module has Google's `2 factor authentication\nfields <https://github.com/google/google-authenticator>`__ for\n`WT-Forms <https://wtforms.readthedocs.org/>`__.\n\nFeatures\n--------\n\n-  Single-Page Application driven secret key generation.\n-  **QRCode Generation**\n-  Secret field and authentication validator that is based on [WTForms]\n\nHow to use\n----------\n\nIf you want QR Code:\n~~~~~~~~~~~~~~~~~~~~\n\nFirst, write the form to generate secret key and authenticate it:\n\n``form.py``\n\n.. code:: python\n\n    #!/usr/bin/env python\n    # coding=utf-8\n\n    from flask_wtf import Form\n    import wtforms.fields as fld\n    import wtforms.fields.html5 as fld5\n    import wtforms.validators as vld\n    from wtf_otp import OTPSecretKeyField, OTPCheck\n\n    class UserInfoForm(Form):\n      name = fld.StringField()\n      email = fld5.EmailField(validators=[\n        vld.InputRequired(), vld.Email()\n      ])\n      password = fld.PasswordField()\n      new_password = fld.PasswordField()\n      confirm_password = fld.PasswordField(validators=[\n        vld.EqualTo(\"new_password\")\n      ])\n      secret = OTPSecretKeyField(\n        qrcode_url=\"/qrcode\", validators=[vld.InputRequired()]\n      )\n\n    class LoginForm(Form):\n      email = fld5.EmailField(validators=[\n        vld.InputRequired(), vld.Email()\n      ])\n      passwrd = fld.PasswordField(validators=[\n        vld.InputRequired()\n      ])\n      auth = fld.IntegerField(validators=[\n        validators=[vld.InputRequired(), OTPCheck()]\n      ])\n\nNext, write the app as usual. However, you want to add a new route of\nwhich path is \"/qrcode\" that generates the qrcode. Fortuantely, the\nsufficient function is provided. An instance of ``OTPSecretKeyField``\nprovides ``qrcode`` function:\n\n.. code:: python\n\n    from .form import UserInfoForm\n\n    # /qrcode is assigned to generate_qrcode.\n    def generate_qrcode(req, res):\n      form = UserInfoForm()\n      secret = req.args.get(\"secret\")\n      if not secret:\n          abort(404)\n      res.make_response(form.secret.qrcode(\n          secret, name=\"Test Example\", issuer_name=\"Test Corp\"\n      ))\n      resp.mimetype = \"image/svg+xml\"\n\nNote that you can't get the instance by ``UserInfoForm.secret``, because\n``UserInfoForm.secret`` returns an instance of ``UnboundField``.\n\nIf you don't want QRCode\n------------------------\n\nIf you don't want QRCode, just remove ``qrcode_url`` from the\ncorresponding classes and remove QRCode generation class.\n\nMore detail\n-----------\n\nIf you want more detail, please refer `source code <wtf_otp>`__ and\n`example code <example>`__.\n\nLicense (MIT License)\n---------------------\n\nThe MIT License (MIT) Copyright (c) 2016- Hiroaki Yamamoto\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n.. |Build Status| image:: https://travis-ci.org/hiroaki-yamamoto/WTF-OTP.svg?branch=master\n   :target: https://travis-ci.org/hiroaki-yamamoto/WTF-OTP\n.. |Coverage Status| image:: https://coveralls.io/repos/github/hiroaki-yamamoto/WTF-OTP/badge.svg?branch=master\n   :target: https://coveralls.io/github/hiroaki-yamamoto/WTF-OTP?branch=master",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/hiroaki-yamamoto/WTF-OTP",
    "keywords": "WTForms WT-Forms OTP One Time Password",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "WTF-OTP",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/WTF-OTP/",
    "release_url": "https://pypi.org/project/WTF-OTP/0.5.2/",
    "requires_python": null,
    "summary": "One-Time Password for WTForms",
    "version": "0.5.2"
  },
  "releases": {
    "0.5.0": [],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fb13847d393437dbbfb2ddc758577ce2",
          "sha256": "ac1801e999226c47b53b8c0e0a08c88acfac30b9185ae78336fafb644806d003"
        },
        "downloads": 534,
        "filename": "WTF-OTP-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fb13847d393437dbbfb2ddc758577ce2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13126,
        "upload_time": "2016-07-15T00:13:09",
        "url": "https://files.pythonhosted.org/packages/5f/0c/993e0554c1560d9d1795f44a82b0235822e41a758687b034ebdd80eada98/WTF-OTP-0.5.1.tar.gz"
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0f08fbb4df5b276a215ed046f5cee7ed",
          "sha256": "668472a18998a9375a25f4dd6e3529ac3dc8ee97c822716ce2128878d4f800df"
        },
        "downloads": 379,
        "filename": "WTF-OTP-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0f08fbb4df5b276a215ed046f5cee7ed",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13128,
        "upload_time": "2016-07-15T08:01:42",
        "url": "https://files.pythonhosted.org/packages/e2/39/9123b7f799891e11c34b512d968773bdf5d1fbc68aa79424d1c7652d94da/WTF-OTP-0.5.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "0f08fbb4df5b276a215ed046f5cee7ed",
        "sha256": "668472a18998a9375a25f4dd6e3529ac3dc8ee97c822716ce2128878d4f800df"
      },
      "downloads": 379,
      "filename": "WTF-OTP-0.5.2.tar.gz",
      "has_sig": false,
      "md5_digest": "0f08fbb4df5b276a215ed046f5cee7ed",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 13128,
      "upload_time": "2016-07-15T08:01:42",
      "url": "https://files.pythonhosted.org/packages/e2/39/9123b7f799891e11c34b512d968773bdf5d1fbc68aa79424d1c7652d94da/WTF-OTP-0.5.2.tar.gz"
    }
  ]
}