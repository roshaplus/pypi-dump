{
  "info": {
    "author": "unfoldingWord",
    "author_email": "joel@neutrinographics.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "Master: [![Build Status](https://travis-ci.org/unfoldingWord-dev/python-resource-container.svg?branch=master)](https://travis-ci.org/unfoldingWord-dev/python-resource-container)\n\n# python-resource-container\nA utility for managing Door43 Resource Containers. This follows the specification at http://resource-container.readthedocs.io/en/v0.2/.\n\n## What is an RC?\nA Resource Container (RC) is a modular/portable package of translation data.\n\n## Installation\n```\npip install resource_container\n```\n\n## Requirements\n\npython 2.7+\n\n## Usage\nTo get started you must first load an RC. Then you can read/write as needed.\n\n```python\nfrom resource_container import factory\n\n\nrc = factory.load('/path/to/resource/container/dir')\n\n# some attributes have dedicated properties\nprint(rc.type)\n\n# other attributes are accessible from the manifest\nprint(rc.manifest['dublin_core']['rights'])\n\n# read\nchapter = rc.read_chunk('01', 'title')\n\n# write\nrc.write_chunk('front', 'title', 'Some book title')\n```\n\n### Multiple Projects\nIt is possible for an RC to contain multiple projects.\nIn such cases methods like writing and reading chunks will\nthrow an error telling you to specify the project.\n\n```python\n# assume rc contains the projects: gen, exo.\n\n# this throws an error\nrc.read_chunk('01', 'title')\n\n# you can check how many projects are in an rc\nrc.project_count\n\n# this works as expected\nchapter01title = rc.read_chunk('gen', '01', 'title')\n```\n\n### Strict Mode\n\nBy default the tool will operate in strict mode when loading an RC. \nThis will perform some checks to ensure the RC is valid.\nIf you need to look at an RC regardless of it's validity\nyou can disable strict mode by passing in `False`.\n\n```python\nrc = factory.load('/invalid/rc/dir', False)\n# do stuff with the invalid rc\n```\n\n\n### Creating an RC\n\nThis tool also allows you to create a brand new RC.\n\n> NOTE: currently you must specify the complete manifest manually.\n> This might change a little in the future.\n\n```python\nmanifest = {\n    ...\n}\n\nrc = factory.create('/my/rc/dir/', manifest)\n# do stuff with your new rc\n```",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/unfoldingWord-dev/python-resource-container",
    "keywords": "rc,resource container,client",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "resource_container",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/resource_container/",
    "release_url": "https://pypi.org/project/resource_container/1.0/",
    "requires_python": null,
    "summary": "A utility for managing Door43 Resource Containers",
    "version": "1.0"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4433dfb292759b365c45e8b180b58711",
          "sha256": "26624b5d099873ba4c971131c4941872bb7b5e65e0bc26abcb3a853744c698e3"
        },
        "downloads": 0,
        "filename": "resource_container-1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4433dfb292759b365c45e8b180b58711",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9772,
        "upload_time": "2017-05-22T23:11:37",
        "url": "https://files.pythonhosted.org/packages/e8/89/fb83e5b4be7ef24f07b0772e3b0d8032c11552b55e37e6d28a63117e088c/resource_container-1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "967b1fe4401bd446a708aa3da8f3eeb8",
          "sha256": "7edb21248d0a65904ea5b433f2a86cd2e0c27757bf1e98186e720d60c30861a0"
        },
        "downloads": 0,
        "filename": "resource_container-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "967b1fe4401bd446a708aa3da8f3eeb8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6405,
        "upload_time": "2017-05-22T23:11:39",
        "url": "https://files.pythonhosted.org/packages/13/c1/c716ac343ae02c1ecced1f1b8e7be1e3d9a6ca2d19406247fda8d3d1680a/resource_container-1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4433dfb292759b365c45e8b180b58711",
        "sha256": "26624b5d099873ba4c971131c4941872bb7b5e65e0bc26abcb3a853744c698e3"
      },
      "downloads": 0,
      "filename": "resource_container-1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4433dfb292759b365c45e8b180b58711",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 9772,
      "upload_time": "2017-05-22T23:11:37",
      "url": "https://files.pythonhosted.org/packages/e8/89/fb83e5b4be7ef24f07b0772e3b0d8032c11552b55e37e6d28a63117e088c/resource_container-1.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "967b1fe4401bd446a708aa3da8f3eeb8",
        "sha256": "7edb21248d0a65904ea5b433f2a86cd2e0c27757bf1e98186e720d60c30861a0"
      },
      "downloads": 0,
      "filename": "resource_container-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "967b1fe4401bd446a708aa3da8f3eeb8",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6405,
      "upload_time": "2017-05-22T23:11:39",
      "url": "https://files.pythonhosted.org/packages/13/c1/c716ac343ae02c1ecced1f1b8e7be1e3d9a6ca2d19406247fda8d3d1680a/resource_container-1.0.tar.gz"
    }
  ]
}