{
  "info": {
    "author": "Amazon",
    "author_email": "sockeye-dev@amazon.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Sockeye\n=======\n\n|Documentation Status|\n\nThis package contains the Sockeye project, a sequence-to-sequence\nframework for Neural Machine Translation based on MXNet. It implements\nthe well-known encoder-decoder architecture with attention.\n\nIf you are interested in collaborating or have any questions, please\nsubmit a pull request or issue. You can also send questions to\n*sockeye-dev-at-amazon-dot-com*.\n\nDependencies\n------------\n\nSockeye requires: - **Python3** -\n`MXNet-0.10.0 <https://github.com/dmlc/mxnet/tree/v0.10.0>`__ - numpy\n\nInstall them with:\n\n.. code:: bash\n\n    > pip install -r requirements.txt\n\nOptionally, dmlc's tensorboard fork is supported to track learning\ncurves (``pip install tensorboard``).\n\nFull dependencies are listed in requirements.txt.\n\nInstallation\n------------\n\nIf you want to just use sockeye without extending it, simply install it\nvia\n\n.. code:: bash\n\n    > python setup.py install\n\nafter cloning the repository from git. After installation, command line\ntools such as *sockeye-train, sockeye-translate, sockeye-average* and\n*sockeye-embeddings* are available. Alternatively, if the sockeye\ndirectory is on your PYTHONPATH you can run the modules directly. For\nexample *sockeye-train* can also be invoked as\n\n.. code:: bash\n\n    > python -m sockeye.train <args>\n\nFirst Steps\n-----------\n\nTrain\n~~~~~\n\nIn order to train your first Neural Machine Translation model you will\nneed two sets of parallel files: one for training and one for\nvalidation. The latter will be used for computing various metrics during\ntraining. Each set should consist of two files: one with source\nsentences and one with target sentences (translations). Both files\nshould have the same number of lines, each line containing a single\nsentence. Each sentence should be a whitespace delimited list of tokens.\n\nSay you wanted to train a German to English translation model, then you\nwould call sockeye like this:\n\n.. code:: bash\n\n    > python -m sockeye.train --source sentences.de \\\n                           --target sentences.en \\\n                           --validation-source sentences.dev.de \\\n                           --validation-target sentences.dev.en \\\n                           --use-cpu \\\n                           --output <model_dir>\n\nAfter training the directory ** will contain all model artifacts such as\nparameters and model configuration.\n\nTranslate\n~~~~~~~~~\n\nInput data for translation should be in the same format as the training\ndata (tokenization, preprocessing scheme). You can translate as follows:\n\n.. code:: bash\n\n    > python -m sockeye.translate --models <model_dir> --use-cpu\n\nThis will take the best set of parameters found during training and then\ntranslate strings from STDIN and write translations to STDOUT.\n\nFor more detailed examples check out our user documentation.\n\n.. |Documentation Status| image:: https://readthedocs.org/projects/sockeye/badge/?version=master\n   :target: http://sockeye.readthedocs.io/en/master/?badge=master",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/awslabs/sockeye",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sockeye",
    "platform": "",
    "project_url": "https://pypi.org/project/sockeye/",
    "release_url": "https://pypi.org/project/sockeye/1.0.2/",
    "requires_python": ">=3",
    "summary": "Sequence-to-Sequence framework for Neural Machine Translation",
    "version": "1.0.2"
  },
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "898e454572a685c8e15d4d3cd93c2625",
          "sha256": "deca74705206d85bbaf7fbd0764f31e6f91ffc2672e4491a2ae7ffe759780b76"
        },
        "downloads": 0,
        "filename": "sockeye-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "898e454572a685c8e15d4d3cd93c2625",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 65721,
        "upload_time": "2017-06-12T16:14:52",
        "url": "https://files.pythonhosted.org/packages/0c/c6/3825348c249ee02d20b243a248f148818a0bd56afb52eedd17593fdb56c2/sockeye-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a4084f69c74cd9fe49732b4305956a74",
          "sha256": "713894b2a97fb065e362bef66314463f5d1c16b0d8c77814b959e9e72a87062c"
        },
        "downloads": 0,
        "filename": "sockeye-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a4084f69c74cd9fe49732b4305956a74",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 66300,
        "upload_time": "2017-06-12T16:32:29",
        "url": "https://files.pythonhosted.org/packages/99/63/1182653e9bc899ce12231fc98389f405479a32bef9d9602be82b839f73a5/sockeye-1.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a4084f69c74cd9fe49732b4305956a74",
        "sha256": "713894b2a97fb065e362bef66314463f5d1c16b0d8c77814b959e9e72a87062c"
      },
      "downloads": 0,
      "filename": "sockeye-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a4084f69c74cd9fe49732b4305956a74",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 66300,
      "upload_time": "2017-06-12T16:32:29",
      "url": "https://files.pythonhosted.org/packages/99/63/1182653e9bc899ce12231fc98389f405479a32bef9d9602be82b839f73a5/sockeye-1.0.2.tar.gz"
    }
  ]
}