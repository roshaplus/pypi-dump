{
  "info": {
    "author": "James Campbell",
    "author_email": "james@jamescampbell.us",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Artistic License",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Programming Language :: Python",
      "Topic :: Multimedia :: Graphics",
      "Topic :: Utilities"
    ],
    "description": "# IPTCINFO 3\n### Like IPTCInfo but finally compatible for Python 3\n\nIPTCInfo: extract and modify IPTC (metadata) information on images - port of IPTCInfo.pm by Josh Carter <josh@multipart-mixed.com>'\n\nPorted from Josh Carter's Perl IPTCInfo-1.9.pm by Tamas Gulacsi\n\nEver wish you add information to your photos like a caption, the place\nyou took it, the date, and perhaps even keywords and categories? You\nalready can. The International Press Telecommunications Council (IPTC)\ndefines a format for exchanging meta-information in news content, and\nthat includes photographs. You can embed all kinds of information in\nyour images. The trick is putting it to use.\n\nThat's where this IPTCInfo Python module comes into play. You can embed\ninformation using many programs, including Adobe Photoshop, and\nIPTCInfo will let your web server -- and other automated server\nprograms -- pull it back out. You can use the information directly in\nPython programs, export it to XML, or even export SQL statements ready\nto be fed into a database.\n\n1.9.5-8: https://bitbucket.org/gthomas/iptcinfo/issue/4/file-permissions-for-changed-files-are-not - copy original file's permission bits on save/saveAs\n\n1.9.5-7: https://bitbucket.org/gthomas/iptcinfo/issue/3/images-w-o-iptc-data-should-not-log-errors - have silencable parse errors.\n\n1.9.5-6: to have a nice new upload (seems easy_install grabs an old version).\n\n1.9.5-5: fix some issues with \"super\"\n\n1.9.5-3: use logging module.\n\n1.9.5-2: Emil Stenstr\u00f6m pinpointed some bugs/misleading (un)comments\n    Also a new (mis)feature is implemented: if you don't specify inp_charset\n    (and the image misses such information, too) than no conversion is made\n    to unicode, everything stays bytestring!\n    This way you don't need to deal with charsets, BUT it is your risk to make\n    the modifications with the SAME charset as it is in the image!\n\n1.9.5-1: getting in sync with the Perl version 1.9.5\n\n1.9.2-rc8:\n    charset recognition loosened (failed with some image out of\n    Adobe Lightroom).\n\n1.9.2-rc7: NOT READY\n    IPTCInfo now accepts 'inp_charset' keyword for setting input charset.\n\n1.9.2-rc6: just PyLint-ed out some errors.\n\n1.9.2-rc5: Amos Latteier sent me a patch which releases the requirement of the\n    file objects to be file objects (he uses this on jpeg files stored in\n    databases as strings).\n        It modifies the module in order to look for a read method on the file\n        object. If one exists it assumes the argument is a file object, otherwise it\n        assumes it's a filename.\n\n1.9.2-rc4: on Windows systems, tmpfile may not work correctly - now I use\n    cStringIO on file save (to save the file without truncating it on Exception).\n\n1.9.2-rc3: some little bug fixes, some safety enhancements (now iptcinfo.py\n    will overwrite the original image file (info.save()) only if everything goes\n    fine (so if an exception is thrown at writing, it won't cut your original\n    file).\n\n    This is a pre-release version: needs some testing, and has an unfound bug\n    (yet): some pictures can be enhanced with iptc data, and iptcinfo.py is able\n    to read them, but some other iptc data readers will spit on it.\n\n1.9.1: a first release with some little encoding support\n\n    The class IPTCInfo now has an inp_charset and an out_charset attribute - the\n    first is the read image's charset (defaults to the system default charset),\n    the second is the charset the writer will use (defaults to inp_charset).\n\n    Reader will find the charset included in IPTC data (if any, defaults to the\n    system's default charset), and use it to read to unicode strings. Writer will\n    write using IPTCinfo.out_charset (if it is not set, will not write charset\n    IPTC record).\n\n    With this, it is possible to read and write i18n strings correctly.\n\n    I haven't tested this functionality thoroughly, and that little test was only\n    on my WinXP box only, with the only other IPTC reader: IrfanView.\n\n\nSYNOPSIS\n\n    from iptcinfo import IPTCInfo\n    import sys\n\n    fn = (len(sys.argv) > 1 and [sys.argv[1]] or ['test.jpg'])[0]\n    fn2 = (len(sys.argv) > 2 and [sys.argv[2]] or ['test_out.jpg'])[0]\n\n    # Create new info object\n    info = IPTCInfo(fn)\n\n    # Check if file had IPTC data\n    if len(info.data) < 4: raise Exception(info.error)\n\n    # Print list of keywords, supplemental categories, contacts\n    print info.keywords\n    print info.supplementalCategories\n    print info.contacts\n\n    # Get specific attributes...\n    caption = info.data['caption/abstract']\n\n    # Create object for file that may does have IPTC data.\n    # info = IPTCInfo(fn)\n    # for files without IPTC data, use\n    info = IPTCInfo(fn, force=True)\n\n    # Add/change an attribute\n    info.data['caption/abstract'] = 'Witty caption here'\n    info.data['supplemental category'] = ['portrait']\n\n    # Save new info to file\n    ##### See disclaimer in 'SAVING FILES' section #####\n    info.save()\n    info.saveAs(fn2)\n\n    #re-read IPTC info\n    print IPTCInfo(fn2)",
    "docs_url": null,
    "download_url": "https://github.com/jamesacampbell/iptcinfo3",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jamesacampbell/iptcinfo3",
    "keywords": null,
    "license": "http://www.opensource.org/licenses/gpl-license.php",
    "maintainer": null,
    "maintainer_email": null,
    "name": "IPTCInfo3",
    "platform": "any",
    "project_url": "https://pypi.org/project/IPTCInfo3/",
    "release_url": "https://pypi.org/project/IPTCInfo3/2.0.2/",
    "requires_python": null,
    "summary": "# IPTCINFO 3",
    "version": "2.0.2"
  },
  "releases": {
    "1.9.5-8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5a490e3a08f195b0fdafd604a7be72b6",
          "sha256": "0e43087781dcf22f4efe990c2df830829e4c9a00a00249b6b9cf067133518452"
        },
        "downloads": 111,
        "filename": "IPTCInfo3-1.9.5-8.tar.gz",
        "has_sig": false,
        "md5_digest": "5a490e3a08f195b0fdafd604a7be72b6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3617,
        "upload_time": "2016-10-13T19:01:10",
        "url": "https://files.pythonhosted.org/packages/37/08/4e3b5d061592cdff0ed83047af0c851e64c4db893fba03712b289e14661b/IPTCInfo3-1.9.5-8.tar.gz"
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2188040d187b48d30ae76070f7419e28",
          "sha256": "cb2e4a41b606996f09bf1386cb085442857e11839ac6b75a3626767097dbcb68"
        },
        "downloads": 106,
        "filename": "IPTCInfo3-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2188040d187b48d30ae76070f7419e28",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3617,
        "upload_time": "2016-10-13T19:02:59",
        "url": "https://files.pythonhosted.org/packages/f9/ba/129de6f8ba25896efb6085ac16284aefa4fe3b32213a8c58b83ab2c7c0b4/IPTCInfo3-2.0.0.tar.gz"
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5615974a1147697ca129a3e7360bfa5c",
          "sha256": "3db71f3c89f698626ec4804cbb5a31674e479dfeeb06f4b60c091dd97450d9d8"
        },
        "downloads": 109,
        "filename": "IPTCInfo3-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5615974a1147697ca129a3e7360bfa5c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3550,
        "upload_time": "2016-10-13T19:07:59",
        "url": "https://files.pythonhosted.org/packages/30/70/3ab9c925529fde79dba8f1f8d52363f5ce8d9c2d30f1faa08ecf6c7d6e23/IPTCInfo3-2.0.1.tar.gz"
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1262ab305e5df351647a89c1ff00f1c7",
          "sha256": "12d102a3e4bac5f4ee267489638e701c92bdd5a91907891d8fd2d63beabef97c"
        },
        "downloads": 132,
        "filename": "IPTCInfo3-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1262ab305e5df351647a89c1ff00f1c7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3879,
        "upload_time": "2016-10-13T19:13:34",
        "url": "https://files.pythonhosted.org/packages/2c/05/70b90023567700165c726553da0773ea6e07d6b98f929769d12c909bbeb2/IPTCInfo3-2.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "1262ab305e5df351647a89c1ff00f1c7",
        "sha256": "12d102a3e4bac5f4ee267489638e701c92bdd5a91907891d8fd2d63beabef97c"
      },
      "downloads": 132,
      "filename": "IPTCInfo3-2.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "1262ab305e5df351647a89c1ff00f1c7",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3879,
      "upload_time": "2016-10-13T19:13:34",
      "url": "https://files.pythonhosted.org/packages/2c/05/70b90023567700165c726553da0773ea6e07d6b98f929769d12c909bbeb2/IPTCInfo3-2.0.2.tar.gz"
    }
  ]
}