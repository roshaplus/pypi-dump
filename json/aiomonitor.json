{
  "info": {
    "author": "Nikolay Novik",
    "author_email": "nickolainovik@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "aiomonitor\n==========\n.. image:: https://travis-ci.org/aio-libs/aiomonitor.svg?branch=master\n    :target: https://travis-ci.org/aio-libs/aiomonitor\n.. image:: https://codecov.io/gh/aio-libs/aiomonitor/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/aio-libs/aiomonitor\n.. image:: https://img.shields.io/pypi/v/aiomonitor.svg\n    :target: https://pypi.python.org/pypi/aiomonitor\n.. image:: https://readthedocs.org/projects/aiomonitor/badge/?version=latest\n    :target: http://aiomonitor.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n**aiomonitor** is Python 3.5+ module that adds monitor and cli capabilities\nfor asyncio_ application. Idea and code borrowed from curio_ project.\nTask monitor that runs concurrently to the asyncio_ loop (or fast drop in\nreplacement uvloop_) in a separate thread. This can inspect the loop and\nprovide debugging capabilities.\n\nLibrary provides an python console using aioconsole_ module, it is possible\nto execute asynchronous command inside your running application.\n\n+--------------------------------------------------------------------------------------+\n| .. image:: https://raw.githubusercontent.com/aio-libs/aiomonitor/master/docs/tty.gif |\n+--------------------------------------------------------------------------------------+\n\nInstallation\n------------\nInstallation process is simple, just::\n\n    $ pip install aiomonitor\n\n\nExample\n-------\nMonitor has context manager interface:\n\n.. code:: python\n\n    import aiomonitor\n\n    loop = asyncio.get_event_loop()\n    with aiomonitor.start_monitor(loop=loop):\n        loop.run_forever()\n\nNow from separate terminal it is possible to connect to the application::\n\n    $ nc localhost 50101\n\nor using included python client::\n\n    $ python -m aiomonitor.cli\n\nTutorial\n--------\n\nLets create simple aiohttp_ application, and see how ``aiomonitor`` can\nintegrates with it.\n\n.. code:: python\n\n    import asyncio\n\n    import aiomonitor\n    from aiohttp import web\n\n    # Simple handler that returns response after 100s\n    async def simple(request):\n        loop = request.app.loop\n\n        print('Start sleeping')\n        await asyncio.sleep(100, loop=loop)\n        return web.Response(text=\"Simple answer\")\n\n    loop = asyncio.get_event_loop()\n    # create application and register route create route\n    app = web.Application(loop=loop)\n    app.router.add_get('/simple', simple)\n\n    # init monitor just before run_app\n    with aiomonitor.start_monitor(loop=loop):\n        # run application with built in aiohttp run_app function\n        web.run_app(app, port=8090, host='localhost')\n\nLets save this code in file ``simple_srv.py``, so we can run it with command::\n\n    $ python simple_srv.py\n    ======== Running on http://localhost:8090 ========\n    (Press CTRL+C to quit)\n\nAnd now one can connect running application from separate terminal, with\n``nc`` command, immediately ``aiomonitor`` will respond with prompt::\n\n    $ nc localhost 50101\n    Asyncio Monitor: 1 tasks running\n    Type help for commands\n    monitor >>>\n\nNow you can type commands, for instance ``help``::\n\n    monitor >>> help\n    Commands:\n                 ps               : Show task table\n                 where taskid     : Show stack frames for a task\n                 cancel taskid    : Cancel an indicated task\n                 signal signame   : Send a Unix signal\n                 console          : Switch to async Python REPL\n                 quit             : Leave the monitor\n\n``aiomonitor`` supports also async python console inside running event loop\nso you can explore state of your application::\n\n    monitor >>> console\n    Python 3.5.2 (default, Oct 11 2016, 05:05:28)\n    [GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.38)] on darwin\n    Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n    ---\n    This console is running in an asyncio event loop.\n    It allows you to wait for coroutines using the 'await' syntax.\n    Try: await asyncio.sleep(1, result=3, loop=loop)\n    ---\n    >>> await asyncio.sleep(1, result=3, loop=loop)\n\nTo leave console type ``exit()``::\n\n    >>> exit()\n    monitor >>>\n\n\nRequirements\n------------\n\n* Python_ 3.5+\n* aioconsole_\n* uvloop_ (optional)\n\n\n.. _PEP492: https://www.python.org/dev/peps/pep-0492/\n.. _Python: https://www.python.org\n.. _aioconsole: https://github.com/vxgmichel/aioconsole\n.. _aiohttp: https://github.com/KeepSafe/aiohttp\n.. _asyncio: http://docs.python.org/3.5/library/asyncio.html\n.. _curio: https://github.com/dabeaz/curio\n.. _uvloop: https://github.com/MagicStack/uvloop\n\nCHANGES\n=======\n\n0.2.1 (2016-01-03)\n------------------\n\n* Fixed import in telnet cli in #12 (thanks @hellysmile)\n\n\n0.2.0 (2016-01-01)\n------------------\n\n* Added basic documentation\n\n* Most of methods of Monitor class are not not private api\n\n\n0.1.0 (2016-12-14)\n------------------\n\n* Added missed LICENSE file\n\n* Updated API, added start_monitor() function\n\n\n0.0.3 (2016-12-11)\n------------------\n\n* Fixed README.rst\n\n\n0.0.2 (2016-12-11)\n------------------\n\n* Tests more stable now\n\n* Added simple tutorial to README.rst\n\n\n0.0.1 (2016-12-10)\n------------------\n\n* Initial release.",
    "docs_url": null,
    "download_url": "https://github.com/aio-libs/aiomonitor",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/aio-libs/aiomonitor",
    "keywords": "",
    "license": "Apache 2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiomonitor",
    "platform": "POSIX",
    "project_url": "https://pypi.org/project/aiomonitor/",
    "release_url": "https://pypi.org/project/aiomonitor/0.2.1/",
    "requires_python": "",
    "summary": "aiomonitor adds monitor and python REPL capabilities for asyncio application",
    "version": "0.2.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "509530e2c6804e30b7c2ca227e4d6236",
          "sha256": "102669079dd672d983238ef0ef3da2d19d545012eaa23991bbf8131227cf8720"
        },
        "downloads": 69,
        "filename": "aiomonitor-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "509530e2c6804e30b7c2ca227e4d6236",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5994,
        "upload_time": "2016-12-09T23:07:00",
        "url": "https://files.pythonhosted.org/packages/f9/e5/fed2dc5ac31ca0c6f5a829e6acd223485912b11470c1cf9c4c2420d78dc4/aiomonitor-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "02ec5eecf5991c60d5b37ab31950cf06",
          "sha256": "1a25fed9d744e330d7f6134b35dc5cb3155efdc13b6306910cd3b3f9a3411fc5"
        },
        "downloads": 65,
        "filename": "aiomonitor-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "02ec5eecf5991c60d5b37ab31950cf06",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6677,
        "upload_time": "2016-12-10T22:36:45",
        "url": "https://files.pythonhosted.org/packages/87/2f/b8f017e427a27552c142ba360a95b1ad0544221c6ac91c7f2b1bbc8cdabe/aiomonitor-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "71e29bbc8f5882742bb4f0d75e79bdba",
          "sha256": "08666b59849c640e89d47dfdb4ec92542642b1ef5c9f966974600a80fe73add0"
        },
        "downloads": 63,
        "filename": "aiomonitor-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "71e29bbc8f5882742bb4f0d75e79bdba",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6681,
        "upload_time": "2016-12-10T22:54:16",
        "url": "https://files.pythonhosted.org/packages/f3/63/13c5e05ed981e9a24af75eb4d639d68a478a2a7cdb02ec1a312426ddfb14/aiomonitor-0.0.3.tar.gz"
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3ac415be70e4138f082732543f02debe",
          "sha256": "658041bcd65d1937665548d9b1f7cd060846c873dce62ed1411989f4510d3dab"
        },
        "downloads": 102,
        "filename": "aiomonitor-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3ac415be70e4138f082732543f02debe",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10990,
        "upload_time": "2016-12-14T19:57:59",
        "url": "https://files.pythonhosted.org/packages/fc/cc/871a5c8fd3ae077cad1b3224309875dd975c198e654232e94fa1b5875302/aiomonitor-0.1.0.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e45951a79de04f7a6949fbefb08ed568",
          "sha256": "f81db345475f12354b7eb03cf10ec3e311fd0350e8bea718740a7f550aaaca3a"
        },
        "downloads": 56,
        "filename": "aiomonitor-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e45951a79de04f7a6949fbefb08ed568",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12809,
        "upload_time": "2017-01-01T20:34:12",
        "url": "https://files.pythonhosted.org/packages/0d/cd/2c720dde59577688aaf6538f5140488dc2a8f159e90cacad7cae517e7fef/aiomonitor-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "51fc96ddb91c45b19cbefb2ff8a358d4",
          "sha256": "410b502d9061889f861b138e60cf634cf71f4a5f2b4cd36beb1510e1da0ee36d"
        },
        "downloads": 303,
        "filename": "aiomonitor-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "51fc96ddb91c45b19cbefb2ff8a358d4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13090,
        "upload_time": "2017-01-03T13:54:46",
        "url": "https://files.pythonhosted.org/packages/6f/c5/436718e519e0a58c38a868afd07b430096f24097c10ab12caca23a6dab08/aiomonitor-0.2.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "51fc96ddb91c45b19cbefb2ff8a358d4",
        "sha256": "410b502d9061889f861b138e60cf634cf71f4a5f2b4cd36beb1510e1da0ee36d"
      },
      "downloads": 303,
      "filename": "aiomonitor-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "51fc96ddb91c45b19cbefb2ff8a358d4",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 13090,
      "upload_time": "2017-01-03T13:54:46",
      "url": "https://files.pythonhosted.org/packages/6f/c5/436718e519e0a58c38a868afd07b430096f24097c10ab12caca23a6dab08/aiomonitor-0.2.1.tar.gz"
    }
  ]
}