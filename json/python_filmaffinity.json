{
  "info": {
    "author": "sergiormb",
    "author_email": "sergiormb88@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4"
    ],
    "description": "*******************\r\nPython Filmaffinity\r\n*******************\r\nThis is a simple python scraping for the Filmaffinity.\r\n\r\n.. image:: https://travis-ci.org/sergiormb/python_filmaffinity.svg?branch=master\r\n    :target: https://travis-ci.org/sergiormb/python_filmaffinity\r\n.. image:: https://coveralls.io/repos/github/sergiormb/python_filmaffinity/badge.svg?branch=master\r\n    :target: https://coveralls.io/github/sergiormb/python_filmaffinity?branch=master\r\n.. image:: https://img.shields.io/github/license/mashape/apistatus.svg   \r\n    :target: https://github.com/sergiormb/python_filmaffinity/blob/master/LICENSE.rst\r\n.. image:: https://img.shields.io/pypi/pyversions/Django.svg   \r\n    :target: https://pypi.python.org/pypi/python_filmaffinity/\r\n.. image:: https://readthedocs.org/projects/python-filmaffinity/badge/?version=latest\r\n    :target: http://python-filmaffinity.readthedocs.io/en/latest/?badge=latest\r\n\r\n\r\nInstallation\r\n============\r\n\r\n**omdb** requires Python >= 2.6 or >= 3.4.\r\n\r\nTo install from `PyPi <https://pypi.python.org/pypi/omdb>`_:\r\n\r\n::\r\n\r\n    pip install omdb\r\n\r\n\r\nPip\r\n***\r\n::\r\n\r\n    pip install python_filmaffinity\r\n\r\n\r\nFrom Source\r\n***********\r\n\r\n::\r\n\r\n    git clone git@github.com:sergiormb/python_filmaffinity.git`\r\n    cd python_filmaffinity`\r\n    python setup.py install`\r\n\r\n\r\nRequirements\r\n**********************\r\n\r\n::\r\n\r\n    requests >= 2.0.1`\r\n    bs4 >= 0.0.1`\r\n\r\n\r\nExamples\r\n========\r\n\r\n.. code-block:: python\r\n\r\n    import python_filmaffinity\r\n    service = python_filmaffinity.Filmaffinity()\r\n    movie = service.get_movie(title='Celda 211')\r\n    movie['title']\r\n    Celda 211\r\n    movie['rating']\r\n    7.7\r\n    movie['directors']\r\n    ['Daniel Monz\u00f3n']\r\n    movie['actors']\r\n    ['Luis Tosar', 'Alberto Ammann', 'Antonio Resines', 'Carlos Bardem', 'Marta Etura', 'Vicente Romero', 'Manuel Mor\u00f3n', 'Manolo Solo', 'Fernando Soto', 'Luis Zahera', 'Patxi Bisquert', 'F\u00e9lix Cubero', 'Josean Bengoetxea', 'Juan Carlos Mangas', 'Jes\u00fas Carroza']\r\n\r\nUsage\r\n=====\r\n\r\nlanguage\r\n********\r\n\r\n- Spanish: 'es'\r\n- USA, UK: 'en'\r\n- M\u00e9xico: 'mx'\r\n- Argentina: 'ar'\r\n- Chile: 'cl'\r\n- Colombia: 'co'\r\n\r\n\r\n- Example\r\n\r\n.. code-block:: python\r\n\r\n    import python_filmaffinity\r\n    service = python_filmaffinity.Filmaffinity(lang='en')\r\n\r\n\r\nsearch\r\n******\r\n\r\n+-----------+----------+--------+-----------------------------------+\r\n| Parameter | Required |   Type | Description                       |\r\n+===========+==========+========+===================================+\r\n| title     |   False  | String | Search for the title of the movie |\r\n+-----------+----------+--------+-----------------------------------+\r\n| cast      |   False  | String | Search movies by actor            |\r\n+-----------+----------+--------+-----------------------------------+\r\n| director  |   False  | String | Search movies by the director     |\r\n+-----------+----------+--------+-----------------------------------+\r\n| from_year |   False  | String | Search start date                 |\r\n+-----------+----------+--------+-----------------------------------+\r\n| to_year   |   False  | String | Search end date                   |\r\n+-----------+----------+--------+-----------------------------------+\r\n\r\n- Example\r\n\r\n.. code-block:: python\r\n\r\n    movies = service.search(cast='Nicolas Cage')\r\n\r\n\r\nget_movie\r\n*********\r\n\r\n+-----------+----------+--------+-----------------------------------+\r\n| Parameter | Required |   Type | Description                       |\r\n+===========+==========+========+===================================+\r\n| id        |   False  | String | Filmaffinity id                   |\r\n+-----------+----------+--------+-----------------------------------+\r\n| title     |   False  | String | Get movie by title                |\r\n+-----------+----------+--------+-----------------------------------+\r\n\r\n- Example\r\n\r\n.. code-block:: python\r\n\r\n    movies = service.get_movie(title='Avatar')\r\n    movies = service.get_movie(id='495280')\r\n\r\n\r\ntop_filmaffinity\r\n****************\r\n\r\n+-----------+----------+--------+-----------------------------------+\r\n| Parameter | Required |   Type | Description                       |\r\n+===========+==========+========+===================================+\r\n| from_year |   False  | String | Search start date                 |\r\n+-----------+----------+--------+-----------------------------------+\r\n| to_year   |   False  | String | Search end date                   |\r\n+-----------+----------+--------+-----------------------------------+\r\n\r\n- Example\r\n\r\n.. code-block:: python\r\n\r\n    movies = service.top_filmaffinity()\r\n    movies = service.top_filmaffinity(from_year=2010, to_year=2011)\r\n\r\n\r\ntop_premieres\r\n*************\r\n\r\n- Example\r\n\r\n.. code-block:: python\r\n\r\n    movies = service.top_premieres()\r\n\r\n\r\nChangelog\r\n=========\r\n\r\n\r\nv0.0.2 (31-05-2017)\r\n*******************\r\n\r\n- Search movies by title, year, director or cast.\r\n- Get the filmaffinity top and search by year\r\n- Get the premieres top\r\n\r\n\r\nv0.0.1 (29-05-2017)\r\n*******************\r\n\r\n- Initial release.\r\n\r\n\r\n\r\nAuthors\r\n*******\r\n\r\n\r\nLead\r\n====\r\n\r\n- Sergio Pino, sergiormb88@gmail.com, `sergiormb.github.io <https://sergiormb.github.io>`_\r\n\r\nLicense\r\n=======\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014 Derrick Gilland\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.",
    "docs_url": null,
    "download_url": "https://github.com/sergiormb/python_filmaffinity/tarball/0.0.2",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/sergiormb/python_filmaffinityy",
    "keywords": "filmaffinity movies films",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python_filmaffinity",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/python_filmaffinity/",
    "release_url": "https://pypi.org/project/python_filmaffinity/0.0.2/",
    "requires_python": null,
    "summary": "Python wrapper for Filmaffinity",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.1": [],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4e0fcc34062613c2d3999a9a160d013a",
          "sha256": "edf01a66ccdc3803180b1a7813d313013af2b61dab5ba5504f74b0bd3cbbd4e2"
        },
        "downloads": 0,
        "filename": "python_filmaffinity-0.0.2.zip",
        "has_sig": false,
        "md5_digest": "4e0fcc34062613c2d3999a9a160d013a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9712,
        "upload_time": "2017-06-02T09:30:50",
        "url": "https://files.pythonhosted.org/packages/32/6e/a6fd2fee53dea7f97972635cca164bbefbc41ebd4fac784da867414e211a/python_filmaffinity-0.0.2.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4e0fcc34062613c2d3999a9a160d013a",
        "sha256": "edf01a66ccdc3803180b1a7813d313013af2b61dab5ba5504f74b0bd3cbbd4e2"
      },
      "downloads": 0,
      "filename": "python_filmaffinity-0.0.2.zip",
      "has_sig": false,
      "md5_digest": "4e0fcc34062613c2d3999a9a160d013a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9712,
      "upload_time": "2017-06-02T09:30:50",
      "url": "https://files.pythonhosted.org/packages/32/6e/a6fd2fee53dea7f97972635cca164bbefbc41ebd4fac784da867414e211a/python_filmaffinity-0.0.2.zip"
    }
  ]
}