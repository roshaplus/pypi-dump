{
  "info": {
    "author": "Tim Savannah",
    "author_email": "kata198@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "func_timeout\n=============\nPython module to support running any existing function with a given timeout.\n\n\nPackage Includes\n----------------\n\n**func_timeout**\n\nThis is the function wherein you pass the timeout, the function you want to call, and any arguments, and it runs it for up to #timeout# seconds, and will return/raise anything the passed function would otherwise return or raise.\n\n        def func_timeout(timeout, func, args=(), kwargs=None):\n\n                '''\n\n                        func_timeout - Runs the given function for up to #timeout# seconds.\n\n\n                        Raises any exceptions #func# would raise, returns what #func# would return (unless timeout is exceeded), in which case it raises FunctionTimedOut\n\n\n                        @param timeout <float> - Maximum number of seconds to run #func# before terminating\n\n                        @param func <function> - The function to call\n\n                        @param args    <tuple> - Any ordered arguments to pass to the function\n\n                        @param kwargs  <dict/None> - Keyword arguments to pass to the function.\n\n\n                        @raises - FunctionTimedOut if #timeout# is exceeded, otherwise anything #func# could raise will be raised\n\n\n                        @return - The return value that #func# gives\n\n                '''\n\n\n**func_set_timeout**\n\nThis is a decorator you can use on functions to apply func_timeout.\n\nTakes two arguments, \"timeout\" and \"allowOverride\"\n\nIf \"allowOverride\" is present, an optional keyword argument is added to the wrapped function, 'forceTimeout'. When provided, this will override the timeout used on this function.\n\n\nThe \"timeout\" parameter can be either a number (for a fixed timeout), or a function/lambda. If a function/lambda is used, it will be passed the same arguments as the called function was passed. It should return a number which will be used as the timeout for that paticular run. For example, if you have a method that calculates data, you'll want a higher timeout for 1 million records than 50 records.\n\nExample:\n\n        @func_set_timeout(2.5)\n\n        def myFunction(self, arg1, arg2):\n\n                ...\n\n\n**FunctionTimedOut**\n\nException raised if the function times out.\n\n\nHas a \"retry\" method which takes the following arguments:\n\n        * No argument - Retry same args, same function, same timeout\n\n        * Number argument - Retry same args, same function, provided timeout\n\n        * None - Retry same args, same function, no timeout\n\n\nStoppableThread\n---------------\n\nStoppableThread is a subclass of threading.Thread, which supports stopping the thread (supports both python2 and python3). It will work to stop even in C code.\n\nThe way it works is that you pass it an exception, and it raises it via the cpython api (So the next time a \"python\" function is called from C api, or the next line is processed in python code, the exception is raised).\n\nIt is recommended that you create an exception that extends BaseException instead of Exception, otherwise code like this will never stop:\n\n        while True:\n\n                try:\n\n                        doSomething()\n\n                except Exception as e:\n\n                        continue\n\n\nIf you can't avoid such code (third-party lib?) you can set the \"repeatEvery\" to a very very low number (like .00001 ), so hopefully it will raise, go to the except clause, and then raise again before \"continue\" is hit.\n\n\n\nExample\n-------\nSo, for esxample, if you have a function \"doit('arg1', 'arg2')\" that you want to limit to running for 5 seconds, with func_timeout you can call it like this:\n\n\n        from func_timeout import func_timeout, FunctionTimedOut\n\n\n        ...\n\n\n        try:\n\n\n                doitReturnValue = func_timeout(5, doit, args=('arg1', 'arg2'))\n\n\n        except FunctionTimedOut:\n\n                print ( \"doit('arg1', 'arg2') could not complete within 5 seconds and was terminated.\\n\")\n\n        except Exception as e:\n\n                # Handle any exceptions that doit might raise here\n\nHow it works\n------------\n\nfunc_timeout will run the specified function in a thread with the specified arguments until it returns, raises an exception, or the timeout is exceeded.\nIf there is a return or an exception raised, it will be returned/raised as normal.\n\nIf the timeout has exceeded, the \"FunctionTimedOut\" exception will be raised in the context of the function being called, as well as from the context of \"func_timeout\". You should have your function catch the \"FunctionTimedOut\" exception and exit cleanly if possible. Every 2 seconds until your function is terminated, it will continue to raise FunctionTimedOut. The terminating of the timed-out function happens in the context of the thread and will not block main execution.\n\n\nPydoc\n-----\n\nFind pydoc at https://pythonhosted.org/func_timeout\n\n\nSupport\n-------\n\nI've tested func_timeout with python 2.7, 3.4, 3.5, 3.6. It should work on other versions as well.\n\nWorks on windows, linux/unix, cygwin, mac\n\nChangeLog can be found at https://raw.githubusercontent.com/kata198/func_timeout/master/ChangeLog\n\nPydoc can be found at: http://htmlpreview.github.io/?https://github.com/kata198/func_timeout/blob/master/doc/func_timeout.html?vers=1",
    "docs_url": "https://pythonhosted.org/func_timeout/",
    "download_url": null,
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/kata198/func_timeout",
    "keywords": "function,timeout,call,terminate,runtime,max,seconds,after,execution",
    "license": "LGPLv2",
    "maintainer": null,
    "maintainer_email": null,
    "name": "func_timeout",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/func_timeout/",
    "release_url": "https://pypi.org/project/func_timeout/4.2.0/",
    "requires_python": null,
    "summary": "Python module which allows you to specify timeouts when calling any existing function. Also provides support for stoppable-threads",
    "version": "4.2.0"
  },
  "releases": {
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "46a568b746da4544960d98c15676f757",
          "sha256": "e844126dc35682ca81da5e848b964671f18416ec70b3414e5b2c95fd2ea67d14"
        },
        "downloads": 536,
        "filename": "func_timeout-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "46a568b746da4544960d98c15676f757",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10917,
        "upload_time": "2016-03-18T18:29:37",
        "url": "https://files.pythonhosted.org/packages/b5/41/3b79deaa0de5efc34bf7bee163df239c858dd15a3a3e267edff10cbcff55/func_timeout-3.0.0.tar.gz"
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2132fb601887a82f0d33398160d946c1",
          "sha256": "5cce7b02ccffcd78133b2cc86fd6cf6fc0a00d6124fe059676b4e61052029689"
        },
        "downloads": 244,
        "filename": "func_timeout-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2132fb601887a82f0d33398160d946c1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11673,
        "upload_time": "2016-03-21T15:25:13",
        "url": "https://files.pythonhosted.org/packages/18/33/383839ebd594ae77bbb72481a014983b69e0c0ea9f6130533298e0d12145/func_timeout-3.0.1.tar.gz"
      }
    ],
    "3.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "efff0a547e91388773d84857632bdb64",
          "sha256": "6a4d0ef13027f9b387fa4ce014c71e863104a250126542fc046a4f1cad8a79c8"
        },
        "downloads": 257,
        "filename": "func_timeout-3.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "efff0a547e91388773d84857632bdb64",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13267,
        "upload_time": "2017-01-04T22:08:41",
        "url": "https://files.pythonhosted.org/packages/60/7d/507b6315f09610ab5559479115b551f41338792e2f2cc6e3788290b9acf3/func_timeout-3.1.0.tar.gz"
      }
    ],
    "4.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "33a9f19e4e97d0bd7fe18bb618ca5710",
          "sha256": "fcdb61648adc842df5ee73639eaf0fcff9fea892a5391b138beca7bf3706bfae"
        },
        "downloads": 0,
        "filename": "func_timeout-4.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "33a9f19e4e97d0bd7fe18bb618ca5710",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28253,
        "upload_time": "2017-05-21T01:42:24",
        "url": "https://files.pythonhosted.org/packages/ae/84/26691c29163b898a66aeb13946ac9bb6597fcb9b047cd6b0c27c81dd39da/func_timeout-4.0.0.tar.gz"
      }
    ],
    "4.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "31e4f15cf85deae6932de0bce5cd4e7d",
          "sha256": "66fd9ba5b695f851ebe0155fb367c4076f99c504d07666c02e96c29f5981ce92"
        },
        "downloads": 0,
        "filename": "func_timeout-4.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "31e4f15cf85deae6932de0bce5cd4e7d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29670,
        "upload_time": "2017-05-24T06:15:15",
        "url": "https://files.pythonhosted.org/packages/47/c8/fba59aeda3a5470b52198e4ba6ec5344f0031283dfef9516b92063b4df0b/func_timeout-4.1.0.tar.gz"
      }
    ],
    "4.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "715c362e5335b62682c77d542e31e1d2",
          "sha256": "6f12ca0f249c0c403811334985c57aea794ef42b735eda031f0bab3ce917c046"
        },
        "downloads": 0,
        "filename": "func_timeout-4.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "715c362e5335b62682c77d542e31e1d2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32082,
        "upload_time": "2017-06-04T08:48:56",
        "url": "https://files.pythonhosted.org/packages/29/d1/3e3f310ebbcb3300fb26a2035882efe382dc9b4a84da47b20bf8c699894a/func_timeout-4.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "715c362e5335b62682c77d542e31e1d2",
        "sha256": "6f12ca0f249c0c403811334985c57aea794ef42b735eda031f0bab3ce917c046"
      },
      "downloads": 0,
      "filename": "func_timeout-4.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "715c362e5335b62682c77d542e31e1d2",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 32082,
      "upload_time": "2017-06-04T08:48:56",
      "url": "https://files.pythonhosted.org/packages/29/d1/3e3f310ebbcb3300fb26a2035882efe382dc9b4a84da47b20bf8c699894a/func_timeout-4.2.0.tar.gz"
    }
  ]
}