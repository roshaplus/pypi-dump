{
  "info": {
    "author": "clintval",
    "author_email": "valentine.clint@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": ".. raw:: html\n\n   <h1 align=\"center\">\n\nsample-sheet\n\n.. raw:: html\n\n   </h2>\n\n.. raw:: html\n\n   <p align=\"center\">\n\nA Python 3.6 library for handling Illumina sample sheets\n\n.. raw:: html\n\n   </p>\n\n.. raw:: html\n\n   <p align=\"center\">\n\nInstallation \u00b7 Tutorial \u00b7 Command Line Utility \u00b7 Contributing\n\n.. raw:: html\n\n   </p>\n\n.. raw:: html\n\n   <p align=\"center\">\n\n.. raw:: html\n\n   </p>\n\n.. raw:: html\n\n   <h3 align=\"center\">\n\nInstallation\n\n.. raw:: html\n\n   </h3>\n\n::\n\n    \u276f pip install sample_sheet\n\n.. raw:: html\n\n   <h3 align=\"center\">\n\nTutorial\n\n.. raw:: html\n\n   </h3>\n\nA sample sheet can be read from S3, HDFS, WebHDFS, HTTP as well as local\n(compressed or not).\n\n.. code:: python\n\n    >>> from sample_sheet import SampleSheet \n    >>> SampleSheet('s3://bucket/prefix/SampleSheet.csv')\n    SampleSheet(\"s3://bucket/prefix/SampleSheet.csv\")\n\nAn example sample sheet can be found at\n```tests/resources/paired-end-single-index.csv`` <tests/resources/paired-end-single-index.csv>`__.\n\n.. code:: python\n\n    >>> from sample_sheet import SampleSheet\n    >>>\n    >>> url = 'https://raw.githubusercontent.com/clintval/sample-sheet/master/tests/resources/paired-end-single-index.csv'\n    >>> sample_sheet = SampleSheet(url)\n\nThe metadata of the sample sheet can be accessed with the ``Header``,\n``Reads`` and, ``Settings`` attributes:\n\n.. code:: python\n\n    >>> sample_sheet.header.Assay\n    'SureSelectXT'\n\n    >>> sample_sheet.Reads\n    [151, 151]\n\n    >>> sample_sheet.is_paired_end\n    True\n\n    >>> sample_sheet.Settings.BarcodeMismatches\n    '2'\n\nThe samples can be accessed directly or *via* iteration:\n\n.. code:: python\n\n    >>> sample_sheet.samples\n    [Sample({\"Sample_ID\": \"1823A\", \"Sample_Name\": \"1823A-tissue\", \"index\": \"GAATCTGA\"}),\n     Sample({\"Sample_ID\": \"1823B\", \"Sample_Name\": \"1823B-tissue\", \"index\": \"AGCAGGAA\"}),\n     Sample({\"Sample_ID\": \"1824A\", \"Sample_Name\": \"1824A-tissue\", \"index\": \"GAGCTGAA\"}),\n     Sample({\"Sample_ID\": \"1825A\", \"Sample_Name\": \"1825A-tissue\", \"index\": \"AAACATCG\"}),\n     Sample({\"Sample_ID\": \"1826A\", \"Sample_Name\": \"1826A-tissue\", \"index\": \"GAGTTAGC\"}),\n     Sample({\"Sample_ID\": \"1826B\", \"Sample_Name\": \"1823A-tissue\", \"index\": \"CGAACTTA\"}),\n     Sample({\"Sample_ID\": \"1829A\", \"Sample_Name\": \"1823B-tissue\", \"index\": \"GATAGACA\"})]\n\n    >>> for sample in sample_sheet:\n    >>>     print(sample)\n    >>>     break\n    \"1823A\"\n\nIf a column labeled ``Read_Structure`` is provided *per* sample, then\nadditional functionality is enabled.\n\n.. code:: python\n\n    >>> first_sample, *_ = sample_sheet.samples\n    >>> first_sample.Read_Structure\n    ReadStructure(structure=\"151T8B151T\")\n\n    >>> first_sample.Read_Structure.total_cycles\n    310\n\n    >>> first_sample.Read_Structure.tokens\n    ['151T', '8B', '151T']\n\nSample Sheet Creation\n^^^^^^^^^^^^^^^^^^^^^\n\nSample sheets can be created *de novo* and written to a file-like\nobject:\n\n.. code:: python\n\n    >>> sample_sheet = SampleSheet()\n    >>>\n    >>> sample_sheet.Header.IEM4FileVersion = 4\n    >>> sample_sheet.Header.add_attr(\n    >>>     attr='Investigator_Name',\n    >>>     value='jdoe',\n    >>>     name='Investigator Name')\n    >>>\n    >>> sample_sheet.Settings.CreateFastqForIndexReads = 1\n    >>> sample_sheet.Settings.BarcodeMismatches = 2\n    >>>\n    >>> sample_sheet.Reads = [151, 151]\n    >>>\n    >>> sample = Sample(dict(\n    >>>     Sample_ID='1823A',\n    >>>     Sample_Name='1823A-tissue',\n    >>>     index='ACGT'))\n    >>>\n    >>> sample_sheet.add_sample(sample)\n    >>>\n    >>> import sys\n    >>> sample_sheet.write(sys.stdout)\n    \"\"\"\n    [Header],,\n    IEM4FileVersion,4,\n    Investigator Name,jdoe,\n    ,,\n    [Reads],,\n    151,,\n    151,,\n    ,,\n    [Settings],,\n    BarcodeMismatches,2,\n    ,,\n    [Data],,\n    Sample_ID,Sample_Name,index\n    1823A,1823A-tissue,ACGT\n    \"\"\"\n\nIPython Integration\n^^^^^^^^^^^^^^^^^^^\n\nA quick summary of the samples can be displayed in Markdown ASCII or\nHTML rendered Markdown if run in an IPython environment:\n\n.. code:: python\n\n    >>> sample_sheet.experimental_design\n    \"\"\"\n    | Sample_ID   | Sample_Name   | Library_ID   | Description      |\n    |:------------|:--------------|:-------------|:-----------------|\n    | 1823A       | 1823A-tissue  | 2017-01-20   | 0.5x treatment   |\n    | 1823B       | 1823B-tissue  | 2017-01-20   | 0.5x treatment   |\n    | 1824A       | 1824A-tissue  | 2017-01-20   | 1.0x treatment   |\n    | 1825A       | 1825A-tissue  | 2017-01-20   | 10.0x treatment  |\n    | 1826A       | 1826A-tissue  | 2017-01-20   | 100.0x treatment |\n    | 1826B       | 1823A-tissue  | 2017-01-17   | 0.5x treatment   |\n    | 1829A       | 1823B-tissue  | 2017-01-17   | 0.5x treatment   |\n    \"\"\"\n\n.. raw:: html\n\n   <h3 align=\"center\">\n\nCommand Line Utility\n\n.. raw:: html\n\n   </h3>\n\nPrints a tabular summary of the sample sheet.\n\n.. code:: bash\n\n    \u276f sample-sheet summary paired-end-single-index.csv\n    \u250cHeader\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502 IEM1FileVersion   \u2502 4                               \u2502\n    \u2502 Investigator_Name \u2502 jdoe                            \u2502\n    \u2502 Experiment_Name   \u2502 exp001                          \u2502\n    \u2502 Date              \u2502 11/16/2017                      \u2502\n    \u2502 Workflow          \u2502 SureSelectXT                    \u2502\n    \u2502 Application       \u2502 NextSeq FASTQ Only              \u2502\n    \u2502 Assay             \u2502 SureSelectXT                    \u2502\n    \u2502 Description       \u2502 A description of this flow cell \u2502\n    \u2502 Chemistry         \u2502 Default                         \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n    \u250cSettings\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502 CreateFastqForIndexReads \u2502 1        \u2502\n    \u2502 BarcodeMismatches        \u2502 2        \u2502\n    \u2502 Reads                    \u2502 151, 151 \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n    \u250cIdentifiers\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502 Sample_ID \u2502 Sample_Name  \u2502 Library_ID \u2502 index    \u2502 index2 \u2502\n    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n    \u2502 1823A     \u2502 1823A-tissue \u2502 2017-01-20 \u2502 GAATCTGA \u2502        \u2502\n    \u2502 1823B     \u2502 1823B-tissue \u2502 2017-01-20 \u2502 AGCAGGAA \u2502        \u2502\n    \u2502 1824A     \u2502 1824A-tissue \u2502 2017-01-20 \u2502 GAGCTGAA \u2502        \u2502\n    \u2502 1825A     \u2502 1825A-tissue \u2502 2017-01-20 \u2502 AAACATCG \u2502        \u2502\n    \u2502 1826A     \u2502 1826A-tissue \u2502 2017-01-20 \u2502 GAGTTAGC \u2502        \u2502\n    \u2502 1826B     \u2502 1823A-tissue \u2502 2017-01-17 \u2502 CGAACTTA \u2502        \u2502\n    \u2502 1829A     \u2502 1823B-tissue \u2502 2017-01-17 \u2502 GATAGACA \u2502        \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n    \u250cDescriptions\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502 Sample_ID \u2502 Description      \u2502\n    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n    \u2502 1823A     \u2502 0.5x treatment   \u2502\n    \u2502 1823B     \u2502 0.5x treatment   \u2502\n    \u2502 1824A     \u2502 1.0x treatment   \u2502\n    \u2502 1825A     \u2502 10.0x treatment  \u2502\n    \u2502 1826A     \u2502 100.0x treatment \u2502\n    \u2502 1826B     \u2502 0.5x treatment   \u2502\n    \u2502 1829A     \u2502 0.5x treatment   \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n.. raw:: html\n\n   <h3 align=\"center\">\n\nContributing\n\n.. raw:: html\n\n   </h3>\n\nPull requests and issues welcome!\n\nTo make a development install:\n\n.. code:: bash\n\n    \u276f git clone git@github.com:clintval/sample-sheet.git\n    \u276f pip install -e 'sample-sheet[fancytest]'\n\nTo run the tests:\n\n::\n\n    \u276f ./sample-sheet/tests/run-tests\n    Name                            Stmts   Miss  Cover\n    ---------------------------------------------------\n    sample_sheet/__init__.py            1      0   100%\n    sample_sheet/_sample_sheet.py     280      0   100%\n    ---------------------------------------------------\n    TOTAL                             281      0   100%\n\n    OK!  58 tests, 0 failures, 0 errors in 0.0s\n",
    "docs_url": null,
    "download_url": "https://github.com/clintval/sample-sheet/archive/v0.3.0.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/clintval/sample-sheet",
    "keywords": "illumina samplesheet sample sheet parser bioinformatics",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sample_sheet",
    "platform": "",
    "project_url": "https://pypi.org/project/sample_sheet/",
    "release_url": "https://pypi.org/project/sample_sheet/0.3.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "An Illumina Sample Sheet parsing utility.",
    "version": "0.3.0"
  },
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "73fc1145549e2c4cbfcf008299f6057e",
          "sha256": "98f299074d78419cb4959ddb8fc05e47151f2232c8080dc01afbf01b071ba635"
        },
        "downloads": -1,
        "filename": "sample_sheet-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "73fc1145549e2c4cbfcf008299f6057e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10543,
        "upload_time": "2017-12-27T17:56:41",
        "url": "https://files.pythonhosted.org/packages/e3/8b/a2b5d194fb1efa39b5260446684cc0864d304a853d8f96e9707c7f70b5f2/sample_sheet-0.0.2.tar.gz"
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "06178b3ee919f5c7a2c7aa9fb82ad983",
          "sha256": "0d1c8bcf556bf227e7ff5148c9b94ddb8b35fbbefd54465730c499aa1e6cc04b"
        },
        "downloads": -1,
        "filename": "sample_sheet-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "06178b3ee919f5c7a2c7aa9fb82ad983",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11972,
        "upload_time": "2017-12-31T05:06:59",
        "url": "https://files.pythonhosted.org/packages/c2/11/929b20b8e5e0e77a14e57a0f23a70178482f84fa766f236e54d7e94fc58a/sample_sheet-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "daf3355933d0763223b4e99c2a7bc24d",
          "sha256": "7b75a77073e043505a682c38183541e6eb7a8cb4e1aeb68a9681d80fbe6e0c81"
        },
        "downloads": -1,
        "filename": "sample_sheet-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "daf3355933d0763223b4e99c2a7bc24d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12156,
        "upload_time": "2017-12-31T05:16:31",
        "url": "https://files.pythonhosted.org/packages/fd/98/fc423199c66c513773a1394828a5e3b599bc4492f79fae087e92f01eb1d5/sample_sheet-0.1.1.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4886a045facb420e6f9302abbd21e86f",
          "sha256": "9f0aa8bfede8db0662e0196a7f345399a7089a0a1bcc34f899c4533eeaed5167"
        },
        "downloads": -1,
        "filename": "sample_sheet-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4886a045facb420e6f9302abbd21e86f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13554,
        "upload_time": "2018-01-19T20:33:44",
        "url": "https://files.pythonhosted.org/packages/67/20/1ec78b851d28f7f127e7da3afbfaa2af6af71d7bf842a231a1da14cd630e/sample_sheet-0.2.0.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c98f553ffc9137b9dfb50c4b1e8e59e1",
          "sha256": "0041ab64dfee120ac702b599a8cf9eb7e858cfe2670821f9f1bb2a2f4777636c"
        },
        "downloads": -1,
        "filename": "sample_sheet-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c98f553ffc9137b9dfb50c4b1e8e59e1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15354,
        "upload_time": "2018-02-04T03:25:02",
        "url": "https://files.pythonhosted.org/packages/c7/0f/9c6472a5fc35000499a78b8449ee95b9c7f01afd82e4f34310c43a658f83/sample_sheet-0.3.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c98f553ffc9137b9dfb50c4b1e8e59e1",
        "sha256": "0041ab64dfee120ac702b599a8cf9eb7e858cfe2670821f9f1bb2a2f4777636c"
      },
      "downloads": -1,
      "filename": "sample_sheet-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c98f553ffc9137b9dfb50c4b1e8e59e1",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15354,
      "upload_time": "2018-02-04T03:25:02",
      "url": "https://files.pythonhosted.org/packages/c7/0f/9c6472a5fc35000499a78b8449ee95b9c7f01afd82e4f34310c43a658f83/sample_sheet-0.3.0.tar.gz"
    }
  ]
}