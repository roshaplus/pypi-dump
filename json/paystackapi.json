{
  "info": {
    "author": "Samuel James and Issa Jubril",
    "author_email": "samuel.james@andela.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "paystack-python\r\n===============\r\n\r\n|Coverage Status| |Scrutinizer Code Quality| |Circle CI| |Build Status|\r\n|PyPI version|\r\n\r\n| Python plugin for `Paystack <https://paystack.com/>`__\r\n| View on `pypi.python.org <https://pypi.python.org/pypi/paystackapi>`__\r\n\r\nInstallation\r\n============\r\n\r\n::\r\n\r\n    pip install paystackapi\r\n\r\nInstantiate Paystack\r\n====================\r\n\r\n.. code:: python\r\n\r\n    from paystackapi.paystack import Paystack\r\n    paystack_secret_key = \"5om3secretK3y\"  \r\n    paystack = Paystack(secret_key=paystack_secret_key)\r\n\r\n    # to use transaction class  \r\n    paystack.transaction.list()  \r\n\r\n    # to use customer class  \r\n    paystack.customer.get(transaction_id)\r\n\r\n    # to use plan class  \r\n    paystack.plan.get(plan_id)\r\n\r\nOther methods can be found below...\r\n'''''''''''''''''''''''''''''''''''\r\n\r\nStatic Use\r\n==========\r\n\r\nTo start using the Paystack Python API, you need to start by setting\r\nyour secret key.\r\n\r\nYou can set your secret key in your environment by running:\r\n\r\n.. code:: bash\r\n\r\n    export PAYSTACK_SECRET_KEY = 'your_secret_key'\r\n\r\n    Don't forget to get your API key from\r\n    `Paystack <https://paystack.com/>`__ and assign to the variable\r\n    ``PAYSTACK_SECRET_KEY``\r\n\r\nTransactions\r\n\r\n------------\r\n\r\n``Transaction.initialize(reference, amount, email, plan)`` - Initialize transaction.\r\n''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\r\n\r\n*Usage*\r\n\r\n.. code:: python\r\n\r\n    from paystackapi.transaction import Transaction\r\n    response = Transaction.initialize(reference='reference', \r\n                                      amount='amount', email='email')\r\n\r\n*Arguments*\r\n\r\n-  ``reference``: Unique transaction reference\r\n-  ``amount``: Amount\r\n-  ``email``: Email address\r\n-  ``plan``: Specified plan (optional)\r\n\r\n*Returns*\r\n\r\nJSON data from Paystack API.\r\n\r\n``Transaction.charge(reference, authorization_code, email, amount)`` - Charge authorization.\r\n''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    from paystackapi.transaction import Transaction\r\n    response = Transaction.charge(reference='reference', \r\n                                  authorization_code='authorization_code',\r\n                                  email='email',\r\n                                  amount='amount')\r\n\r\n*Arguments*\r\n\r\n-  ``reference``: Unique transaction reference\r\n-  ``authorization_code``: Authorization code for the transaction\r\n-  ``email``: Email Address of the user with the authorization code\r\n-  ``amount``: Amount in kobo\r\n\r\n*Returns*\r\n\r\nJSON data from Paystack API.\r\n\r\n``Transaction.charge_token(reference, token, email, amount)`` - Charge Token.\r\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    from paystackapi.transaction import Transaction\r\n    response = Transaction.charge_token(reference='reference',\r\n                                        token='token', email='email',\r\n                                        amount='amount')\r\n\r\n*Arguments*\r\n\r\n-  reference: unique transaction reference\r\n-  token: paystack token\r\n-  email: Email Address\r\n-  amount: Amount in Kobo\r\n\r\n*Returns*\r\n\r\nJSON data from Paystack API.\r\n\r\n``Transaction.get(transaction_id)`` - Get a single transaction.\r\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    from paystackapi.transaction import Transaction\r\n    response = Transaction.get(transaction_id=23)\r\n\r\n*Arguments*\r\n\r\n-  ``id``: Transaction id(integer).\r\n\r\n*Returns*\r\n\r\nJSON data from paystack API.\r\n\r\n``Transaction.list()`` - List transactions.\r\n'''''''''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    from paystackapi.transaction import Transaction\r\n    response = Transaction.list()\r\n\r\n*Arguments*\r\n\r\nNo argument required.\r\n\r\n*Returns*\r\n\r\nJSON data from paystack API.\r\n\r\n``Transaction.totals()`` - Get totals.\r\n''''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    from paystackapi.transaction import Transaction\r\n    response = Transaction.totals()\r\n\r\n*Arguments*\r\n\r\nNo argument required.\r\n\r\n*Returns*\r\n\r\nJSON data from paystack API.\r\n\r\n``Transaction.verify(reference)`` - Verify transactions.\r\n''''''''''''''''''''''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    from paystackapi.transaction import Transaction\r\n    response = Transaction.verify(reference='reference')\r\n\r\n*Arguments*\r\n\r\n-  ``reference``: a unique value needed for transaction.\r\n\r\n*Returns*\r\n\r\nJSON data from paystack API.\r\n\r\nPlans\r\n-----\r\n\r\n``Plan.create(name, description, amount, interval, send_invoices, send_sms, hosted_page, hosted_page_url, hosted_page_summary, currency)`` - Create a plan\r\n''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    from paystackapi.plan import Plan  \r\n    response = Plan.create(name='value', description='value', \r\n                           amount=amount, interval='value', \r\n                           send_invoices='value', \r\n                           send_sms='value',\r\n                           hosted_page='value', \r\n                           hosted_page_url='value',\r\n                           hosted_page_summary='value', \r\n                           currency='value')\r\n\r\n*Arguments*\r\n\r\n-  ``name``: plan's name.\r\n-  ``description``: description of the plan.\r\n-  ``amount``: amount for the plan in kobo\r\n-  ``interval``: plan's interval(daily...etc)\r\n-  ``send_invoices``: boolean\r\n-  ``send_sms``: (optional)\r\n-  ``hosted_page``: (optional)\r\n-  ``hosted_page_url``: url of hosted page (optional)\r\n-  ``hosted_page_summary``: summary of the hosted page\r\n-  ``currency``: plans currency (NGN)\r\n\r\n*Returns*\r\n\r\nJSON data from paystack API.\r\n\r\n``Plan.get(plan_id)`` - Get a single plan.\r\n''''''''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    from paystackapi.plan import Plan  \r\n    response = Plan.get(plan_id=25)\r\n\r\n*Arguments*\r\n\r\n-  ``id``: paystack plan id.\r\n\r\n*Returns*\r\n\r\nJSON data from paystack API.\r\n\r\n``Plan.list()`` - List paystack plan\r\n''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    from paystackapi.plan import Plan  \r\n    response = Plan.list()\r\n\r\n*Arguments*\r\n\r\nNo argument required.\r\n\r\n*Returns*\r\n\r\nJSON data from paystack API.\r\n\r\n``Plan.update(plan_id=88, name=None, description=None, amount=None, interval=None, send_invoices=None, send_sms=None, hosted_page=None, hosted_page_url=None, hosted_page_summary=None, currency=None)`` - Update paystack plan\r\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    from paystackapi.plan import Plan  \r\n    response = Plan.update(plan_id=23, name=None, description=None,\r\n                           amount=None, interval=None,\r\n                           send_invoices=None, send_sms=None,\r\n                           hosted_page=None, hosted_page_url=None,\r\n                           hosted_page_summary=None, currency=None)\r\n\r\n*Arguments*\r\n\r\n-  ``plan_id``: plan identity number.\r\n-  ``name``: name of plan\r\n-  ``description``: plan description(optional)\r\n-  ``amount``: plan amount in Kobo\r\n-  ``interval``: plan interval9(monthly, yearly, quarterly...etc)\r\n-  ``send_invoice``: (optional)\r\n-  ``send_sms``: (optional)\r\n-  ``hosted_page``: (optional)\r\n-  ``hosted_page_url``: (optional)\r\n-  ``hosted_page_summary``: (optional)\r\n-  ``currency``: Naira in kobo(NGN)\r\n\r\n*Returns*\r\n\r\nJSON data from paystack API.\r\n\r\nCustomers\r\n---------\r\n\r\n``Customer.create(first_name, last_name, email, phone)`` - Create customer\r\n''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    from paystackapi.customer import Customer  \r\n    response = Customer.create(first_name='first_name', \r\n                               last_name='last_name',\r\n                               email='email', phone='phone')\r\n\r\n*Arguments*\r\n\r\n-  ``first_name``: customer's first name.\r\n-  ``last_name``: customer's last name.\r\n-  ``email``: customer's email address.\r\n-  ``phone``: customer's phone number.\r\n\r\n*Returns*\r\n\r\nJSON data from paystack API.\r\n\r\n``Customer.get(customer_id)`` - Get customers by id\r\n'''''''''''''''''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    from paystackapi.customer import Customer  \r\n    response = Customer.get(customer_id=24)\r\n\r\n*Arguments*\r\n\r\n-  ``id``: paystack customer id\r\n\r\n*Returns*\r\n\r\nJSON data from paystack API.\r\n\r\n``Customer.list()`` - List paystack customers\r\n'''''''''''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    from paystackapi.customer import Customer  \r\n    response = Customer.list()\r\n\r\n*Arguments*\r\n\r\nNo argument required.\r\n\r\n*Returns*\r\n\r\nJSON data from paystack API.\r\n\r\n``Customer.update(customer_id, first_name=None, last_name=None, email=None, phone=None)`` - Update paystack customer data by id.\r\n''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    from paystackapi.customer import Customer  \r\n    response = Customer.update(customer_id=24, first_name=None, \r\n                               last_name=None, email=None, \r\n                               phone=None)\r\n\r\n*Arguments* - ``customer_id``: paystack customer id. - ``first_name``:\r\ncustomer's first name(optional). - ``last_name``: customer's last\r\nname(optional). - ``email``: customer's email address(optional). -\r\n``phone``: customer's phone number(optional).\r\n\r\n*Returns*\r\n\r\nJSON data from paystack API.\r\n\r\n.. |Coverage Status| image:: https://coveralls.io/repos/github/andela-sjames/paystack-python/badge.svg?branch=develop\r\n   :target: https://coveralls.io/github/andela-sjames/paystack-python?branch=master\r\n.. |Scrutinizer Code Quality| image:: https://scrutinizer-ci.com/g/andela-sjames/paystack-python/badges/quality-score.png?b=master\r\n   :target: https://scrutinizer-ci.com/g/andela-sjames/paystack-python/?branch=master\r\n.. |Circle CI| image:: https://img.shields.io/badge/license-MIT-blue.svg\r\n   :target: https://img.shields.io/badge/license-MIT-blue.svg\r\n.. |Build Status| image:: https://travis-ci.org/andela-sjames/paystack-python.svg?branch=master\r\n   :target: https://travis-ci.org/andela-sjames/paystack-python\r\n.. |PyPI version| image:: https://badge.fury.io/py/paystackapi.svg\r\n   :target: https://badge.fury.io/py/paystackapi",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/andela-sjames/paystack-python",
    "keywords": "paystack python library",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "paystackapi",
    "platform": "",
    "project_url": "https://pypi.org/project/paystackapi/",
    "release_url": "https://pypi.org/project/paystackapi/1.2.6/",
    "requires_python": "",
    "summary": "A python library to consume Paystack API",
    "version": "1.2.6"
  },
  "releases": {
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "58ebc239d731bd3e0ba7f7d241730be6",
          "sha256": "159f74eb68897615703cf95f59200e68167f5455a54f026ecf22568938978b1e"
        },
        "downloads": 126,
        "filename": "paystackapi-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "58ebc239d731bd3e0ba7f7d241730be6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5732,
        "upload_time": "2016-03-11T12:21:09",
        "url": "https://files.pythonhosted.org/packages/f2/85/8a2ca8d6d5a45dfc21c991a8f393d800588b8bbdec0be00c51b77babcc3b/paystackapi-1.2.1.tar.gz"
      }
    ],
    "1.2.2": [],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8603e9727256378597435dec09bfed53",
          "sha256": "e3b4a829f4451742ae96e3c1f80adeaa987bf58a85fab50d0f5159e91966fb1a"
        },
        "downloads": 113,
        "filename": "paystackapi-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8603e9727256378597435dec09bfed53",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7511,
        "upload_time": "2016-04-03T19:16:56",
        "url": "https://files.pythonhosted.org/packages/08/02/0a2a955b0f870d9eb6805adb81a743c60da96e029942c50d7446208f8b33/paystackapi-1.2.3.tar.gz"
      }
    ],
    "1.2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "46f6445fd5340b3780a8c9946c55adb0",
          "sha256": "d0fd1e300d08ea36d598cbdd0a65826a5ad0bddb35f3290fe9b565db7ee46856"
        },
        "downloads": 464,
        "filename": "paystackapi-1.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "46f6445fd5340b3780a8c9946c55adb0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7523,
        "upload_time": "2016-04-09T07:34:55",
        "url": "https://files.pythonhosted.org/packages/e1/d3/5e8313684032df339d4d0629544035141391d5d22818f53bdd8c0afa773e/paystackapi-1.2.4.tar.gz"
      }
    ],
    "1.2.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d88885184814d5f666464e063615a0c4",
          "sha256": "1307b5875caa588db731310b21f0e2b58dd366fdbb0c51d26c876c676913023a"
        },
        "downloads": 0,
        "filename": "paystackapi-1.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d88885184814d5f666464e063615a0c4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7118,
        "upload_time": "2017-04-25T19:50:59",
        "url": "https://files.pythonhosted.org/packages/62/61/42ad1c5b069cc634beab3243be19a62fd431e4ffa5bb4297245c1daef60f/paystackapi-1.2.5.tar.gz"
      }
    ],
    "1.2.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9d316427d955ea73a081ec4a5a0e52be",
          "sha256": "fe0633f2d653ab29cc26899d91b271b2e19c2c0e1d1ea65cc215cee0ea038e2f"
        },
        "downloads": 0,
        "filename": "paystackapi-1.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9d316427d955ea73a081ec4a5a0e52be",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7117,
        "upload_time": "2017-04-28T10:32:52",
        "url": "https://files.pythonhosted.org/packages/1b/3d/d75f73d1f4d7b7fb6cbfe225b7eab7041ac283a408cead79975a8a192d59/paystackapi-1.2.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9d316427d955ea73a081ec4a5a0e52be",
        "sha256": "fe0633f2d653ab29cc26899d91b271b2e19c2c0e1d1ea65cc215cee0ea038e2f"
      },
      "downloads": 0,
      "filename": "paystackapi-1.2.6.tar.gz",
      "has_sig": false,
      "md5_digest": "9d316427d955ea73a081ec4a5a0e52be",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7117,
      "upload_time": "2017-04-28T10:32:52",
      "url": "https://files.pythonhosted.org/packages/1b/3d/d75f73d1f4d7b7fb6cbfe225b7eab7041ac283a408cead79975a8a192d59/paystackapi-1.2.6.tar.gz"
    }
  ]
}