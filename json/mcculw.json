{
  "info": {
    "author": "Measurement Computing",
    "author_email": "info@mccdaq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: System :: Hardware :: Hardware Drivers"
    ],
    "description": "======  ===========================================================================================\r\nInfo    Contains a Python API for interacting with Measurement Computing's Universal Library. See\r\n        `GitHub <https://github.com/mccdaq/mcculw>`_ for the latest source.\r\nAuthor  Measurement Computing\r\n======  ===========================================================================================\r\n\r\nAbout\r\n=====\r\nThe **mcculw** package contains an API (Application Programming Interface) for interacting with the\r\nI/O Library for Measurement Computing Data Acquisition products, Universal Library. This package\r\nwas created and is supported by MCC. The package is implemented in Python as a wrapper around the\r\nUniversal Library C API using the `ctypes <https://docs.python.org/3/library/ctypes.html>`_ Python\r\nLibrary. \r\n\r\n**mcculw** is supported for Universal Library 6.55 and later. Some functions in the **mcculw**\r\npackage may be unavailable with earlier versions of Universal Library. Visit\r\n`http://www.mccdaq.com/Software-Downloads.aspx <http://www.mccdaq.com/Software-Downloads.aspx>`_ to\r\nupgrade your version of UL. \r\n\r\n**mcculw** supports only the Windows operating system.\r\n\r\n**mcculw** supports CPython 2.7 and 3.4+.\r\n\r\nInstallation\r\n============\r\nRunning **mcculw** requires InstaCal. Visit\r\n`http://www.mccdaq.com/Software-Downloads.aspx <http://www.mccdaq.com/Software-Downloads.aspx>`_ to\r\ndownload the latest version of InstaCal.\r\n\r\n**mcculw** can be installed with pip::\r\n\r\n  $ python pip install mcculw\r\n\r\nExamples\r\n========\r\nDownload the examples from the **mcculw**\r\n`GitHub examples.zip <https://github.com/mccdaq/mcculw/raw/master/examples.zip>`_.\r\n\r\n\r\nUnzip the examples to a known location, such as::\r\n\r\n  C:\\Users\\Public\\Documents\\Measurement Computing\\DAQ\\Python\r\n\r\n\r\nRefer to the\r\n`Universal Library Help <https://www.mccdaq.com/PDFs/Manuals/Mcculw_WebHelp/ULStart.htm>`_ for\r\ndetailed instructions on how to import examples into the Eclipse IDE or Visual Studio. \r\n\r\nUsage\r\n=====\r\nThe following is a basic example of using the Universal Library to perform analog input. Further\r\nexamples may be found on `GitHub <https://github.com/mccdaq/mcculw>`_.\r\n\r\n.. code-block:: python\r\n\r\n  from mcculw import ul\r\n  from mcculw.enums import ULRange\r\n  from mcculw.ul import ULError\r\n\r\n  board_num = 0\r\n  channel = 0\r\n  ai_range = ULRange.BIP5VOLTS\r\n\r\n  try:\r\n      # Get a value from the device\r\n      value = ul.a_in(board_num, channel, ai_range)\r\n      # Convert the raw value to engineering units\r\n      eng_units_value = ul.to_eng_units(board_num, ai_range, value)\r\n\r\n      # Display the raw value\r\n      print(\"Raw Value: \" + str(value))\r\n      # Display the engineering value\r\n      print(\"Engineering Value: \" + '{:.3f}'.format(eng_units_value))\r\n  except ULError as e:\r\n      # Display the error\r\n      print(\"A UL error occurred. Code: \" + str(e.errorcode)\r\n            + \" Message: \" + e.message)\r\n\r\nSupport/Feedback\r\n================\r\nThe **mcculw** package is supported by MCC. For support for **mcculw**, contact technical support\r\nthrough `mccdaq.com/Support.aspx <http://www.mccdaq.com/Support.aspx>`_. Please include version\r\ninformation for Python, Universal Library and the **mcculw** packages used as well as detailed\r\nsteps on how to reproduce the problem in your request.\r\n\r\nBugs/Feature Requests\r\n=====================\r\nTo report a bug or submit a feature request, please use the **mcculw**\r\n`GitHub <https://github.com/mccdaq/mcculw>`_ issues page.\r\n\r\nDocumentation\r\n=============\r\nDocumentation is available in the\r\n`Universal Library Help <https://www.mccdaq.com/PDFs/Manuals/Mcculw_WebHelp/ULStart.htm>`_.\r\n\r\nLicense\r\n=======\r\nmcculw is licensed under an MIT-style license. Other incorporated projects may be licensed under \r\ndifferent licenses. All licenses allow for non-commercial and commercial use.\r\n\r\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://www.mccdaq.com",
    "keywords": "development mcc daq data acquisition",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mcculw",
    "platform": "",
    "project_url": "https://pypi.org/project/mcculw/",
    "release_url": "https://pypi.org/project/mcculw/0.9.0/",
    "requires_dist": [
      "future",
      "enum34",
      "aenum"
    ],
    "requires_python": "",
    "summary": "MCC Universal Library Python API for Windows",
    "version": "0.9.0"
  },
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cb33075dfb3dd7ea0ee96e585b8918c7",
          "sha256": "3a5a9a11c4134a1cb6eca28a3e6537861e222f0e61271383b2c3f3ac7bd28fb2"
        },
        "downloads": 0,
        "filename": "mcculw-0.9.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb33075dfb3dd7ea0ee96e585b8918c7",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 79028,
        "upload_time": "2017-07-17T15:36:08",
        "url": "https://files.pythonhosted.org/packages/ee/d4/8f0c0597004e04c06dbbc064431dc4ec0e7f836bd321692abf693dff7071/mcculw-0.9.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c856f9e0a3fea167cdb99e6758f56680",
          "sha256": "292c8fdec63e53ce54a4f70bf8823788dc653f28b2d7c91bc2830911269bf8f4"
        },
        "downloads": 0,
        "filename": "mcculw-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c856f9e0a3fea167cdb99e6758f56680",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 76565,
        "upload_time": "2017-07-17T15:36:11",
        "url": "https://files.pythonhosted.org/packages/e3/a9/0c13125e2cccbcf42198c0bd70397650433568637d56a1b0aa61d52c9a57/mcculw-0.9.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "cb33075dfb3dd7ea0ee96e585b8918c7",
        "sha256": "3a5a9a11c4134a1cb6eca28a3e6537861e222f0e61271383b2c3f3ac7bd28fb2"
      },
      "downloads": 0,
      "filename": "mcculw-0.9.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "cb33075dfb3dd7ea0ee96e585b8918c7",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 79028,
      "upload_time": "2017-07-17T15:36:08",
      "url": "https://files.pythonhosted.org/packages/ee/d4/8f0c0597004e04c06dbbc064431dc4ec0e7f836bd321692abf693dff7071/mcculw-0.9.0-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "c856f9e0a3fea167cdb99e6758f56680",
        "sha256": "292c8fdec63e53ce54a4f70bf8823788dc653f28b2d7c91bc2830911269bf8f4"
      },
      "downloads": 0,
      "filename": "mcculw-0.9.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c856f9e0a3fea167cdb99e6758f56680",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 76565,
      "upload_time": "2017-07-17T15:36:11",
      "url": "https://files.pythonhosted.org/packages/e3/a9/0c13125e2cccbcf42198c0bd70397650433568637d56a1b0aa61d52c9a57/mcculw-0.9.0.tar.gz"
    }
  ]
}