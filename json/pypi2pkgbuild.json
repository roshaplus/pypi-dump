{
  "info": {
    "author": "Antony Lee",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: System :: Software Distribution"
    ],
    "description": "PyPI2PKGBUILD\n=============\n\nConvert PyPI packages to Arch Linux packages, inspired from\n`pip2arch <https://github.com/bluepeppers/pip2arch>`_.\n\n.. contents:: :local:\n\nDependencies and installation\n-----------------------------\n\n``pypi2pkgbuild.py`` depends on the Arch Linux packages\n`namcap <https://wiki.archlinux.org/index.php/Namcap>`_,\n`pkgfile <https://wiki.archlinux.org/index.php/Pkgfile>`_ and\n`python-pip <https://wiki.archlinux.org/index.php/Python#Package_management>`_.\n\nThe script can be installed with ``pip install [--user] .``, or can also be run\ndirectly.\n\nOne can even run ``pypi2pkgbuild.py`` on itself to create a proper Arch package\n(``pypi2pkgbuild.py git+https://github.com/anntzer/pypi2pkgbuild``).\n\nA minimal test suite (checking that ``pypi2pkgbuild.py`` can indeed package\nitself) can by run with ``pytest`` (``pytest -s`` to keep the output to the\nterminal).\n\nUsage\n-----\n\n``pypi2pkgbuild.py PYPINAME`` creates a PKGBUILD for the latest version of the\ngiven PyPI package (including prereleases if the ``--pre`` flag is passed.\nBecause PyPI's dependencies are somewhat unreliable, it installs the package\nin a virtualenv to figure out the dependencies.  Note that thanks to ``pip``'s\nwheel cache, the build is later reused; i.e. the procedure entails no extra\nwork.\n\nA ``-git`` package can be built with ``pypi2pkbguild.py git+https://...``.\n\nThe package is then built and verified with ``namcap``.\n\nThe goal is to make this tool as automated as possible: if all the information\nto build a package is (reasonably) accessible, this tool should be able to\nbuild it.\n\nIn order to provide additional information to ``makepkg``, edit\n``PKGBUILD_EXTRAS``, which is sourced at the *end* of ``PKGBUILD``.\n\nUsage notes\n```````````\n\n- It is suggested to create an alias with standard options set, e.g.\n\n.. code-block:: sh\n\n    alias pypi2pkgbuild.py='PKGEXT=.pkg.tar pypi2pkgbuild.py -g cython -b /tmp/pypi2pkgbuild/ -f'\n\n- By default, the ``pkgrel`` of (standard) packages is set to ``00``.  This\n  allows automatic upgrading into official packages (and AUR ones, if an AUR\n  helper is used) whenever the repositories are updated.  Additionally, the use\n  of ``00`` rather than ``0`` serves as a (weak) marker that the package was\n  automatically generated by this tool.  In order to prevent such an upgrade,\n  one can use the ``--pkgrel`` flag to set ``pkgrel`` to, e.g., ``99``.\n\n- If one wishes to completely bypass AUR Python packages while maintaining the\n  use of an AUR helper for non-Python packages, one can define a shell function\n  that excludes ``pypi2pkgbuild.py``-generated packages that do not appear in\n  the official repositories, e.g., for ``pacaur``:\n\n  .. code-block:: sh\n\n     pacaur() {\n        if [[ \"$1\" = \"-Syu\" ]]; then\n           # Update, in case some packages moved in or out of the official repos.\n           sudo pacman -Sy\n           # Update everything except python packages with pkgver=00 or 99.\n           PKGEXT=.pkg.tar command pacaur -Su --ignore \\\n                 \"$(pacman -Qm | grep '^python-.*-\\(00\\|99\\)$' | cut -d' ' -f1 | paste -sd,)\"\n        else\n           command pacaur \"$@\"\n        fi\n     }\n\n  This function will not bypass Python packages explicitly installed from\n  the AUR, as the user may have done so to bypass some incorrect packaging\n  by ``pypi2pkgbuild.py``.  It is recommended to use the ``-i`` flag to\n  calls to ``pypi2pkgbuild.py`` (e.g. in an alias) to exclude packages\n  that are mishandled by ``pypi2pkgbuild.py`` (see `mispackaged packages\n  <TODO.rst#mispackaged-packages>`_).  The ``-i`` flag can be passed multiple\n  times; passing an empty argument to it will clear the ignore list defined so\n  far.\n\n- In order to package a locally available git repository, use\n\n  .. code-block:: sh\n\n     $ pypi2pkgbuild.py git+file://$absolute_path_to_repo  # (e.g. file:///home/...)\n\n  In order to package a locally available sdist or wheel, use\n\n  .. code-block:: sh\n\n     $ pypi2pkgbuild.py file://$absolute_path_to_file  # (e.g. file:///home/...)\n\n  Note that in both cases *absolute* paths are necessary.\n\n  Building packages from local repos or wheels needs to be done in topological\n  order of the dependencies (so that ``pypi2pkgbuild.py`` can find that\n  the dependencies are actually present), or by passing the ``-d`` flag\n  (\"do not build dependencies\"); if it is used, the Arch package may\n  not use the correct dependency names (if they are not of the form\n  ``python-pep503-normalized-name``).\n\n- By default, ``pypi2pkgbuild.py`` ignores ``pip`` config files such as\n  ``~/.config/pip/pip.conf``.  An explicitly set ``PIP_CONFIG_FILE`` will be\n  respected, but may cause ``pypi2pkgbuild.py`` to fail as some ``pip`` calls\n  will be unexpectedly modified.\n\n  Likewise, user-site packages are ignored unless ``PYTHONNOUSERSITE`` is\n  explicitly set to an empty value.\n\nBuild-time dependencies of packages\n-----------------------------------\n\n``pypi2pkgbuild.py`` attempts to guess whether ``Cython`` and ``SWIG`` are\nbuild-time dependencies by checking for the presence of ``.pyx`` and ``.i``\nfiles, respectively.  If this is not desired, set the ``--guess-makedepends``\noption accordingly.\n\n``pypi2pkgbuild.py`` guesses whether ``numpy`` is a build-time dependency by\nattempting a build without ``numpy``, then, in case of failure, a build with\n``numpy``.\n\nAdditional Python build-time dependencies (i.e., ``setup_requires``) can be\nspecified (as PyPI names) using the ``--setup-requires`` flag.\n\nVendored packages\n-----------------\n\nSome Arch packages (e.g. ``ipython``) include a number of smaller PyPI\npackages.\n\nBecause it is not possible to assign a meaningful version automatically,\n``pypi2pkgbuild.py`` instead creates an independent Arch package for each of\nthe PyPI packages (with two dashes in the name, to prevent name conflicts) and\na master package that depends on all of them.  The ``pkgrel`` of the master\npackage is set to ``$official_pkgrel.99``, so that the package appears more\nrecent than the current official version but older than any future official\nversion.  All these packages ``conflict`` with all versions of the official\npackage (except the newly created package), so updating should work fine when\nthe official package is actually updated.\n\nHowever, dependencies are still expressed using the master package (to avoid\nbreakage on update into an official package), so internal dependencies will\nappear be circular.\n\nAll the packages are placed in a subfolder named ``meta:$pkgname``, so one can\neasily install everything by ``cd``'ing there and running\n\n.. code-block:: sh\n\n    $ sudo pacman -U --asdeps **/*.xz\n    $ sudo pacman -D --asexplicit $pkgname/$pkgname.tar.xz\n\nComparison with other tools\n---------------------------\n\nComparison with pip2arch\n````````````````````````\n\n``pypi2pkgbuild.py`` includes many improvements over ``pip2arch``:\n\n- Supports wheels (the default is to prefer ``any``-platform wheels, then\n  ``sdist``\\s, then ``manylinux1`` wheels, but this can be changed using\n  ``--pkgtypes``).\n- Resolves Python dependencies via installation in a temporary virtualenv, and\n  also creates PKGBUILDs for those that are not available as official packages.\n- Resolves binary dependencies via ``namcap`` and adds them to the ``depends``\n  array if they are installed (thus, it is suggested to first install\n  them as ``--asdeps`` and then let the generated PKGBUILD pick them up as\n  dependencies).  Note that some packages are distributed with a copy of the\n  required libraries; in this case, ``pypi2pkgbuild.py``\u2019s behavior will depend\n  on whether the package defaults to using the system-wide library or its own\n  copy.\n- Automatically tries to fetch a missing license file from Github, if\n  applicable.\n- Automatically builds the package (with options given in ``--makepkg=...``)\n  and run ``namcap``.\n- Automatically builds all outdated dependencies via ``-u``.\n\nComparison with fpm\n```````````````````\n\nAnother tool for converting PyPI packages to Arch Linux packages is the generic\nconverter `fpm <https://github.com/jordansissel/fpm>`; however, it seems to be\nincompatible with recent versions of ``pip``.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/anntzer/pypi2pkgbuild",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pypi2pkgbuild",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pypi2pkgbuild/",
    "release_url": "https://pypi.org/project/pypi2pkgbuild/0.1/",
    "requires_python": ">=3.5",
    "summary": "A PyPI to PKGBUILD converter.",
    "version": "0.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e156ff45f44aeb8c8075ccd80eda8bde",
          "sha256": "9b29e7192746732cfa6a446bed048a3f73c004d06332379bcc6c49c638ba0225"
        },
        "downloads": 0,
        "filename": "pypi2pkgbuild-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e156ff45f44aeb8c8075ccd80eda8bde",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 23268,
        "upload_time": "2017-04-12T08:09:26",
        "url": "https://files.pythonhosted.org/packages/c6/e3/57d9b15ff4d697da87dce2b8adb27d735e54bb3fe2076d0041abd527286a/pypi2pkgbuild-0.1-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e156ff45f44aeb8c8075ccd80eda8bde",
        "sha256": "9b29e7192746732cfa6a446bed048a3f73c004d06332379bcc6c49c638ba0225"
      },
      "downloads": 0,
      "filename": "pypi2pkgbuild-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e156ff45f44aeb8c8075ccd80eda8bde",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 23268,
      "upload_time": "2017-04-12T08:09:26",
      "url": "https://files.pythonhosted.org/packages/c6/e3/57d9b15ff4d697da87dce2b8adb27d735e54bb3fe2076d0041abd527286a/pypi2pkgbuild-0.1-py3-none-any.whl"
    }
  ]
}