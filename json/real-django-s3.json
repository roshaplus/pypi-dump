{
  "info": {
    "author": "Raydel Miranda",
    "author_email": "raydel.miranda.gomez@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development"
    ],
    "description": "Django application for handling graphics resources served in a S3 Amazon webservice\n===================================================================================\n\nSettings\n--------\n\nSettings example:\n\n.. code:: python\n\n    # Configuration example\n\n    S3_BUCKET_NAME = 'bucket-name'                      # The name of the bucket we are working with\n    S3_AWS_ACCESS_KEY_ID = 'AWS_ACCESS_KEY_ID'          # AWS access key\n    S3_AWS_SECRET_ACCESS_KEY = 'AWS_SECRET_ACCESS_KEY'  # AWS secret access key\n    S3_LOCAL_PATH = tempfile.gettempdir()               # Path where to put downloaded files.\n    S3_UPLOAD_DIR_PATH = tempfile.gettempdir()          # Path where to search files for uploading.\n    S3_AWS_BASE_URL = 'http://s3.amazonaws.com/'        # Base url for Amazon S3 services.\n    S3_CATEGORY_MAP = {                                 # Map code - category, this is for organizing the \n        'B':  'BACKGROUND',                              # the folders in the bucket.\n        'F':  'VASE',\n        'CF': 'CLIPPING-FLOWER',\n        'WF': 'WRAPPING-FLOWER',\n        'CR': 'CATALOGUE-PRODUCT',\n        'PP': 'PERSONALIZED-PRODUCT',\n        'CM': 'COMPOSITION'\n    }\n\n    INSTALLED_APPS = [\n        'django_s3',                                    # Add the app to installed apps.\n    ]\n\nTransport\n=========\n\nTransport is the class for download and upload resources.\n\nDownloading a resource\n----------------------\n\n.. code:: python\n\n     from django_s3.transport import Transport\n     from django_s3.resource import Resource\n\n     rource = Resource('some_name.jpg')\n     transport = Transport()\n     filename = transport.download(resource)\n     \n\nUploading a resource\n--------------------\n\n.. code:: python\n\n     from django_s3.transport import Transport\n     from django_s3.resource import Resource\n\n     rource = Resource('some_name.jpg')\n     transport = Transport()\n     filename = transport.upload(resource)\n\nDownloading a resource by name\n------------------------------\n\n.. code:: python\n\n     from django_s3.transport import Transport\n     from django_s3.resource import Resource\n\n     filename = transport.download('some_name.jpg')\n\nResource\n========\n\nClass for holding information about resources. A resource's name has to\nfollow the following name convention:\n\n``<code><serial>_<rest_of_the_resource_name><size>.<extension>``\n\n-  : Upper case letters that identify the resource type (Ex. 'BG' for\n   Backgrounds)\n-  : A serial number unique for every resource.\n-  : String for a name.\n-  : The size of the image (Ex. 800x600)\n-  : The image's extension.\n\n.. code:: python\n\n    # Example that shows how to get info about a resource.\n\n    from django_s3.resource import Resource\n\n     rource = Resource('some_name.jpg')\n     code = resource.code               # The code of the type.\n     size = resource.size               # The size, as a 2-tuple value.    \n     extension = resource.extension     # The extension\n     category = resource.category       # The category mapped to the code.\n     url = resource.url                 # The url where to find the resource\n\n    All this attributes are read-only, and computed at creation time.\n\nBrowser\n=======\n\nA class for walking through the bucket filesystem.\n\n.. code:: python\n\n\n    from django_s3.browser import Browser\n    from django_s3.browser import FileTreeNode\n\n\n    browser = Browser()\n    root_node = browser.walk()                  # Returns the whole directory tree. \n    node = browser.walk('path/to/some/node')    # Returns the directory tree relative to the path\n                                                # passed by parameter\n                                                \n    # You can check for the node type as well\n    if node.type == FileTreeNode.DIR:\n        pass\n\n    if node.type == FileTreeNode.File:\n        pass\n\nAccessing resource info using Resource class.\n---------------------------------------------\n\nJust create a new resource instance and query it for its metadata.\n\n.. code:: python\n\n\n    from django_s3.browser import Browser\n\n    browser = Browser()\n    node = browser.walk('path/to/some/node')    # Returns the directory tree relative to the path\n                                                # passed by parameter\n    resource = Resource(node.name)              # Now you can see metadata for resources.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/RaydelMiranda/django-s3",
    "keywords": "development web django amazon s3",
    "license": "GPL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "real-django-s3",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/real-django-s3/",
    "release_url": "https://pypi.org/project/real-django-s3/1.1/",
    "requires_python": null,
    "summary": "A simple API for download and upload resources to/from a Amazon S3 bucket",
    "version": "1.1"
  },
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cae30cc4d9f95c7a80aa920b8fb60a90",
          "sha256": "2aaa7159dbfa82a60817208ad742e704a9fda8b285145b10fe5f98cb50368d74"
        },
        "downloads": 0,
        "filename": "real-django-s3-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cae30cc4d9f95c7a80aa920b8fb60a90",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18055,
        "upload_time": "2017-06-16T14:32:21",
        "url": "https://files.pythonhosted.org/packages/33/bc/ff15b0f40bb380af43fd585042233fb6f80531d142cad1295350261223d9/real-django-s3-0.2.tar.gz"
      }
    ],
    "0.2.post1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "db2f59559157469780d64ee7c4c31cba",
          "sha256": "b1e63807383ec7fe5850a39367d81845217c7a949242d89c635b16d67d0a533f"
        },
        "downloads": 0,
        "filename": "real-django-s3-0.2.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "db2f59559157469780d64ee7c4c31cba",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21405,
        "upload_time": "2017-06-20T22:23:05",
        "url": "https://files.pythonhosted.org/packages/ad/28/cec31a360e8c599f34840e5f3ea1e61a8c3ff819907751faff5f2be0a9e9/real-django-s3-0.2.post1.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4910c15a20ee602068f4797c4f985246",
          "sha256": "81e30951561dd2fb64f01167f74ba2ddeab1a3deecf4266e249a217a8828b514"
        },
        "downloads": 0,
        "filename": "real-django-s3-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4910c15a20ee602068f4797c4f985246",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21380,
        "upload_time": "2017-06-20T22:29:32",
        "url": "https://files.pythonhosted.org/packages/27/1a/1c07d3d6b698ad5cc9849557e93ce8f9c02cc3eb01e64fb8540368e2c504/real-django-s3-0.3.tar.gz"
      }
    ],
    "1.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "74a66e77ca17044a8213d27139279169",
          "sha256": "7d1726ec653f64143b1ee692babf7c1ba0696c48a152d3d6f52d9d9883e95ba3"
        },
        "downloads": 0,
        "filename": "real-django-s3-1.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "74a66e77ca17044a8213d27139279169",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21671,
        "upload_time": "2017-06-21T14:55:15",
        "url": "https://files.pythonhosted.org/packages/b0/5b/b6f67fcf3468bb7efd63ca109e035b88795e266f47ca9078c7ea4733226d/real-django-s3-1.0.post1.tar.gz"
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4940dee27517b377cd0139572377b58a",
          "sha256": "4394f25c3dab68e9df18f2553434fcbfc5141a2c8ee59fd0a5417df188e6b6cd"
        },
        "downloads": 0,
        "filename": "real-django-s3-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4940dee27517b377cd0139572377b58a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21725,
        "upload_time": "2017-06-21T15:38:20",
        "url": "https://files.pythonhosted.org/packages/1c/a4/517a4078a3052d806f1c548ff8d8472224af475a5399d3fd8e3cc4c1e2fc/real-django-s3-1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4940dee27517b377cd0139572377b58a",
        "sha256": "4394f25c3dab68e9df18f2553434fcbfc5141a2c8ee59fd0a5417df188e6b6cd"
      },
      "downloads": 0,
      "filename": "real-django-s3-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4940dee27517b377cd0139572377b58a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 21725,
      "upload_time": "2017-06-21T15:38:20",
      "url": "https://files.pythonhosted.org/packages/1c/a4/517a4078a3052d806f1c548ff8d8472224af475a5399d3fd8e3cc4c1e2fc/real-django-s3-1.1.tar.gz"
    }
  ]
}