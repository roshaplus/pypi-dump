{
  "info": {
    "author": "Joe Kington",
    "author_email": "joferkington@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "python-geoprobe\n===============\npython-geoprobe is a python module to read and write geoprobe horizons,\nvolumes, and faults.\n\nNotes\n-----\n\nThis implementation is based on reverse-engineering the file formats, and as\nsuch, is certainly not complete. However, things seem to work. \n\nExamples\n--------\n\n``python-geoprobe`` supports basic reading and writing of geoprobe-formatted\nvolumes, horizons, fault sticks, 2D seismic, colormaps, and TSurfs.\n\nAs an example of reading and display a slice from a volume::\n\n        import matplotlib.pyplot as plt\n        import geoprobe\n\n        vol = geoprobe.volume('examples/data/Volumes/example.vol')\n\n        # By default, this will not load the data into RAM. Instead,\n        # ``vol.data`` will be a memmapped numpy array\n        print vol.data\n\n        # Now let's load everythign into RAM. Note that ``vol.load()`` returns the\n        # array, but ``vol.data`` will be the same in-memory array after this, as well\n        vol.load()\n\n        # Indexing the volume works in \"model\" (inline/crossline/z) coordinates.\n        # We could also use ``vol.XSlice(2300)``, but indexing gives more flexibility.\n        data = vol[2300, :, :].T\n\n        # Display stretched. Note that for no vertical exaggeration, we'd use\n        # ``aspect=1/vol.dyW``\n        fig, ax = plt.subplots()\n        ax.imshow(data, cmap='gray_r', aspect='auto',\n                  extent=[vol.ymin, vol.ymax, vol.zmax, vol.zmin])\n        ax.set(title='Inline 2300', xlabel='Crossline', ylabel='Depth (m)')\n\n        plt.show()\n\n\n.. image:: http://joferkington.github.io/python-geoprobe/images/vol_example.png\n    :alt: An inline from the 3D seismic volume.\n    :align: center\n\nWe can also read/write geoprobe-formatted binary horizons (ascii horizons\ncurrently not supported)::\n\n        import matplotlib.pyplot as plt\n        import geoprobe\n\n        hor = geoprobe.horizon('examples/data/Horizons/channels.hzn')\n\n        # Some basic information about the horizon, to show useful attributes\n        print ('The horizon has a total of %i points, %i of which are'\n               ' auto-tracked' % (hor.data.size, hor.surface.size))\n        print 'The horizon has %i manually picked lines' % len(hor.lines)\n        print 'The inline coordinates range from', hor.xmin, 'to', hor.xmax\n        print 'The crossline coordinates range from', hor.ymin, 'to', hor.ymax\n        print 'The depth/time coordinates range from', hor.zmin, 'to', hor.zmax\n\n        # Display the horizon:\n        fig, ax = plt.subplots()\n\n        # hor.grid is a 2D array of the Z-values stored in the horizon\n        im = ax.imshow(hor.grid, cmap='gist_earth_r', origin='lower',\n                       extent=(hor.xmin, hor.xmax, hor.ymin, hor.ymax))\n\n        # Plot the manual picks\n        # Here, \"line\" is a numpy structured array with fields 'x', 'y', 'z', etc.\n        # \"line_info\" is a 4-tuple of (xdir, ydir, zdir, ID) (and is unused here)\n        for line_info, line in hor.lines:\n           ax.plot(line['x'], line['y'], color='gray')\n\n        # Other information...\n        cb = fig.colorbar(im, orientation='horizontal')\n        cb.set_label('Depth in meters below sea level')\n        ax.set(title='An example horizon file', xlabel='Inline', ylabel='Crossline')\n        ax.axis('tight')\n\n        plt.show()\n\n.. image:: http://joferkington.github.io/python-geoprobe/images/hor_example.png\n    :alt: A 3D horizon and manual picks.\n    :align: center\n\nAuthor\n------\n\nJoe Kington <joferkington@gmail.com>\n\nDependencies\n------------\n\nRequires python >= 2.5 and numpy. Some functions (e.g.  horizon.toGeotiff)\nrequire gdal and its python bindings. The plotting functions in utilities (e.g.\nutilities.wiggles) and some swfault functionality requires matplotlib.\n\nInstallation\n------------\n\nInstallation should be as simple as \"python setup.py install\"\n",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/joferkington/python-geoprobe",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "geoprobe",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/geoprobe/",
    "release_url": "https://pypi.org/project/geoprobe/0.3.1/",
    "requires_python": null,
    "summary": "Reads and (partially) writes seismic data in Landmark's Geoprobe format",
    "version": "0.3.1"
  },
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ece62f69b632c11455e41deb0956b0c8",
          "sha256": "58f84aa88a1a534d939c0fbc479ec40e8c1da8fd5222deb23058f1e60f222eec"
        },
        "downloads": 3210,
        "filename": "geoprobe-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ece62f69b632c11455e41deb0956b0c8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 35270,
        "upload_time": "2012-05-27T18:34:41",
        "url": "https://files.pythonhosted.org/packages/09/9b/66a3cc294a7e6643f9b63b0fd059047842f0dabb598bede116158a2221c0/geoprobe-0.3.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0548f161659f4e320dd2fd95aca5e2f8",
          "sha256": "83c29b3a396bea7d311defc477280f3ac07f6dc7ca1c9b590676442d226822b3"
        },
        "downloads": 722,
        "filename": "geoprobe-0.3.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "0548f161659f4e320dd2fd95aca5e2f8",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 40734,
        "upload_time": "2015-09-26T21:48:40",
        "url": "https://files.pythonhosted.org/packages/08/ba/97b0d272b60b1848139d379a57145fd3acb7971f2ac23569de5e3d5bca99/geoprobe-0.3.1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "411b46b629394059d8bb818f890fdb9f",
          "sha256": "60e26fa05d917275f3cb51c7a412ec77d6d0bb4147dd363bc22eb3bc06451642"
        },
        "downloads": 707,
        "filename": "geoprobe-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "411b46b629394059d8bb818f890fdb9f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 36057,
        "upload_time": "2015-09-26T21:48:44",
        "url": "https://files.pythonhosted.org/packages/f7/13/01a9d59c77bd02ab924e6fd35150b33ab1bab488e8f979bc67a07d15c824/geoprobe-0.3.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "0548f161659f4e320dd2fd95aca5e2f8",
        "sha256": "83c29b3a396bea7d311defc477280f3ac07f6dc7ca1c9b590676442d226822b3"
      },
      "downloads": 722,
      "filename": "geoprobe-0.3.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "0548f161659f4e320dd2fd95aca5e2f8",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 40734,
      "upload_time": "2015-09-26T21:48:40",
      "url": "https://files.pythonhosted.org/packages/08/ba/97b0d272b60b1848139d379a57145fd3acb7971f2ac23569de5e3d5bca99/geoprobe-0.3.1-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "411b46b629394059d8bb818f890fdb9f",
        "sha256": "60e26fa05d917275f3cb51c7a412ec77d6d0bb4147dd363bc22eb3bc06451642"
      },
      "downloads": 707,
      "filename": "geoprobe-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "411b46b629394059d8bb818f890fdb9f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 36057,
      "upload_time": "2015-09-26T21:48:44",
      "url": "https://files.pythonhosted.org/packages/f7/13/01a9d59c77bd02ab924e6fd35150b33ab1bab488e8f979bc67a07d15c824/geoprobe-0.3.1.tar.gz"
    }
  ]
}