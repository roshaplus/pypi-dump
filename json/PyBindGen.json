{
  "info": {
    "author": "Gustavo Carneiro",
    "author_email": "gjcarneiro@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "About\n=====\nPyBindGen is (surprise!) a python bindings generator.  The main features are:\n\n * Generates clean C or C++ code, nearly as readable as code written\n   manually by a developer;\n * Generated code is self contained and does not require any external\n   libraries or macros; after generating the python module only python\n   header files are required, nothing else;\n * Does not require Boost.Python (no C++ template magic, also works in C);\n * The interface for code generation is a simple Python API, not some\n   obscure interface definition language.  Additionally PyBindGen can\n   parse header files with gccxml, if gccxml and pygccxml are\n   installed in the system (note: pygccxml has not been ported to Python 3 yet);\n * Can be easily extended with new type handlers;\n * Type handlers can allocate memory and register cleanup code to free;\n * Supports in, out, and inout parameters (e.g. with pointers or C++ references);\n * Supports multiple return values (e.g. due to out/inout parameters);\n * Supports wrapping of simple C++ classes;\n * Supports virtual methods in classes;\n * Supports reference counted classes and, to some extent, smart pointers;\n * Multiple inheritance;\n * Wrapping templated classes;\n\nNotable features NOT implemented:\n\n * Converting exceptions from Python to C++ (only from C++ to Python is currently supported);\n * Callbacks.\n\nSupported Python versions\n=========================\n\nSee the `documentation <http://pybindgen.readthedocs.org/en/latest/tutorial/#supported-python-versions>`_.\n\nInstallation\n============\n\nNOTE: if checking out pybindgen from bazaar, do not forget to see the\nfile HACKING for additional instructions.\n\nBefore proceeding make sure the system requirements are met.  PyBindGen requires:\n\n 1. Python (http://www.python.org)\n 2. Python development files (the `python-dev` package in Ubuntu/Debian, for example)\n 3. A C/C++ Compilation tool-chain (`apt-get install build-essential`)\n 4. (optional) GCCXML and `PyGCCXML <http://www.language-binding.net/pygccxml/download.html>`_\n\nYou can install PyBindGen using either the `setup.py` or WAF.  Note: to\nbe able to run all tests, which involve code generation, and\nsubsequent compilation, you need to use WAF.\n\nInstallation using setup.py:\n----------------------------\n\n\tpython setup.py install\n\nInstallation using WAF\n----------------------\n\nPyBindGen uses `WAF <http://code.google.com/p/waf/>`_ as main build system.\nHowever, WAF does not have to be previously installed, as it is\nshipped with PyBindGen in a single `waf` script.\n\nTo install PyBindGen, issue the following commands (win32 users should omit the ./ prefix in commands):\n\n1. ./waf configure\n   - optionally you may add the option --prefix /foo/bar. To select a non-defaul python version, use the PYTHON environment variable, e.g.::\n\n        PYTHON=/usr/bin/python2.4 ./waf configure\n\n2. ./waf\n    - possible options: `-jN` for parallel build, `-p` for progress bar\n3. ./waf check\n    - optional step, runs the unit tests\n4. ./waf --examples\n    - optional step, compiles the examples\n5. ./waf install\n    - may require sudo\n\n\nWindows specific notes\n----------------------\n\nWAF concurrency bugs\n++++++++++++++++++++\n\n\nWAF automatically detects the number of cores and tries to activate\nmultiple build threads accordingly.  However, this concurrency support\nappears to be buggy on Windows, therefore you should disable it with the\n-j1 option, if you have multiple CPUs:\n\n\twaf check -j1\n\nCompiler selection\n++++++++++++++++++\n\nNote that if you are compiling on win32, WAF will look for MSVC\n(MicroSoft Visual C) by default and give up on finding a C/C++\ncompiler if not found.  If you do not have MSVC installed but instead\nhave MinGW or CygWin GCC, you have to tell WAF to look for GCC in the\nconfigure stage:\n\n\twaf configure --check-c-compiler=gcc --check-cxx-compiler=g++\n\nInstallation\n++++++++++++\n\nOn win32, `waf install` installs to a Temp folder by default.  To have\nit install for a certain Python version, use the --prefix option to\nwaf configure.  For instance:\n   \n\twaf configure --prefix C:\\Python26\n\twaf install\n\n\n\nInstallation failsafe\n---------------------\n\nIf by any chance you have trouble with WAF and are just looking to\ninstall PyBindGen, you should know that PyBindGen is entirely\nself-contained in the `pybindgen` directory.  You can simply\nrecursively copy the entire pybindgen folder into Python's\nsite-packages directory, and that's it!  PyBindGen is a pure Python\npackage and does not actually require a C/C++ compiler; a C++ compiler is only\nused for code generation unit tests and compiling the example modules, and it is not needed to generate code.\n\n\nDocumentation\n=============\n\nThe following documentation is available:\n\n 1. `API docs (with introductory tutorial) <http://pybindgen.readthedocs.org/en/latest/>`_ \n 2. Many simple examples in the `examples` directory\n 3. Advanced examples in the unit tests (`tests/`)\n 4. The source code!\n\n.. image:: https://travis-ci.org/gjcarneiro/pybindgen.svg?branch=master\n    :target: https://travis-ci.org/gjcarneiro/pybindgen\n\n",
    "docs_url": "https://pythonhosted.org/PyBindGen/",
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://launchpad.net/pybindgen",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyBindGen",
    "platform": "",
    "project_url": "https://pypi.org/project/PyBindGen/",
    "release_url": "https://pypi.org/project/PyBindGen/0.18.0/",
    "requires_python": "",
    "summary": "Python Bindings Generator",
    "version": "0.18.0"
  },
  "releases": {
    "0.10": [],
    "0.11": [],
    "0.12": [],
    "0.13": [],
    "0.14": [],
    "0.15.0": [],
    "0.16.0": [],
    "0.17.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7d8fe2b3b4646c3c1d9e5342b1645f6a",
          "sha256": "22e08bfcc6746abc9fe54ca13524a22b3543079b42fd441c48e6b6e89bd53d9a"
        },
        "downloads": 5132,
        "filename": "PyBindGen-0.17.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7d8fe2b3b4646c3c1d9e5342b1645f6a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 277021,
        "upload_time": "2014-02-15T19:26:19",
        "url": "https://files.pythonhosted.org/packages/00/e5/0a183a9f28092fafdde1613fc0d67776dd2a01ea83f075cfcac9cf300273/PyBindGen-0.17.0.tar.gz"
      }
    ],
    "0.18.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "318d885d0c9bf749b0b1b6a6be978ebb",
          "sha256": "d9bd4d0878b6e9090ab65c4074f63d31e4b230c4a36922f452161fba909275f6"
        },
        "downloads": 0,
        "filename": "PyBindGen-0.18.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "318d885d0c9bf749b0b1b6a6be978ebb",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 143811,
        "upload_time": "2017-05-21T11:05:01",
        "url": "https://files.pythonhosted.org/packages/c3/d8/1c32614c6aaad09e9692384c366fe815c6bb1024580fd6c5e22a92f15f24/PyBindGen-0.18.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e994673f0ffcd8f152abc206127c466e",
          "sha256": "867a72684e09e8a5687afc1dda95823db2900e376629268c33bbd198919584ea"
        },
        "downloads": 0,
        "filename": "PyBindGen-0.18.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e994673f0ffcd8f152abc206127c466e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 434595,
        "upload_time": "2017-05-21T11:04:57",
        "url": "https://files.pythonhosted.org/packages/64/bf/75eaf49a10212a79af0266175a9df4e660f34c1cd3c86b545d3a054a2e82/PyBindGen-0.18.0.tar.gz"
      }
    ],
    "0.7": [],
    "0.9": []
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "318d885d0c9bf749b0b1b6a6be978ebb",
        "sha256": "d9bd4d0878b6e9090ab65c4074f63d31e4b230c4a36922f452161fba909275f6"
      },
      "downloads": 0,
      "filename": "PyBindGen-0.18.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "318d885d0c9bf749b0b1b6a6be978ebb",
      "packagetype": "bdist_wheel",
      "python_version": "3.5",
      "size": 143811,
      "upload_time": "2017-05-21T11:05:01",
      "url": "https://files.pythonhosted.org/packages/c3/d8/1c32614c6aaad09e9692384c366fe815c6bb1024580fd6c5e22a92f15f24/PyBindGen-0.18.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "e994673f0ffcd8f152abc206127c466e",
        "sha256": "867a72684e09e8a5687afc1dda95823db2900e376629268c33bbd198919584ea"
      },
      "downloads": 0,
      "filename": "PyBindGen-0.18.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e994673f0ffcd8f152abc206127c466e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 434595,
      "upload_time": "2017-05-21T11:04:57",
      "url": "https://files.pythonhosted.org/packages/64/bf/75eaf49a10212a79af0266175a9df4e660f34c1cd3c86b545d3a054a2e82/PyBindGen-0.18.0.tar.gz"
    }
  ]
}