{
  "info": {
    "author": "Slack",
    "author_email": "opensource@slack.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Slack Events API adapter for Python\n===================================\n\n.. image:: https://travis-ci.org/slackapi/python-slack-events-api.svg?branch=master\n    :target: https://travis-ci.org/slackapi/python-slack-events-api\n.. image:: https://codecov.io/gh/slackapi/python-slack-events-api/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/slackapi/python-slack-events-api\n\n\nThe Slack Events Adapter is a Python-based solution to receive and parse events\nfrom Slack\u2019s Events API. This library uses an event emitter framework to allow\nyou to easily process Slack events by simply attaching functions\nto event listeners.\n\nThis adapter enhances and simplifies Slack's Events API by incorporating useful best practices, patterns, and opportunities to abstract out common tasks.\n\n\ud83d\udca1  We wrote a `blog post which explains how`_ the Events API can help you, why we built these tools, and how you can use them to build production-ready Slack apps.\n\n.. _blog post which explains how: https://medium.com/@SlackAPI/enhancing-slacks-events-api-7535827829ab\n\n\n\ud83e\udd16  Installation\n------------\n\n.. code::\n\n  pip install slackeventsapi\n\n\ud83e\udd16  App Setup\n--------------------\n\nBefore you can use the `Events API`_ you must\n`create a Slack App`_, and turn on\n`Event Subscriptions`_.\n\n\ud83d\udca1  When you add the Request URL to your app's Event Subscription settings,\nSlack will send a request containing a `challenge` code to verify that your\nserver is alive. This package handles that URL Verification event for you, so\nall you need to do is start the example app, start ngrok and configure your\nURL accordingly.\n\n\u2705  Once you have your `Request URL` verified, your app is ready to start\nreceiving Team Events.\n\n\ud83d\udd11  Your server will begin receiving Events form Slack's Events API as soon as a\nuser has authorized your app.\n\n\ud83e\udd16  Development workflow:\n------------------------------\n\n(1) Create a Slack app on https://api.slack.com/apps/\n(2) Add a `bot user` for your app\n(3) Start the example app on your **Request URL** endpoint\n(4) Start ngrok and copy the **HTTPS** URL\n(5) Add your **Request URL** and subscribe your app to events\n(6) Go to your ngrok URL (e.g. https://myapp12.ngrok.com/) and auth your app\n\n**\ud83c\udf89 Once your app has been authorized, you will begin receiving Slack Events**\n\n    \u26a0\ufe0f  We strongly discourage using ngrok for\n    anything but development. It\u2019s not well-suited for production use.\n\n    \ud83d\udca1  See the example app included in this repository for more information\n    on implementing OAuth.\n\n\ud83e\udd16  Usage\n-----\n  **\u26a0\ufe0f  Keep your app's credentials safe!**\n\n  - For development, keep them in virtualenv variables.\n\n  - For production, use a secure data store.\n\n  - Never post your app's credentials to github.\n\n.. code:: python\n\n  SLACK_VERIFICATION_TOKEN = os.environ[\"SLACK_VERIFICATION_TOKEN\"]\n\nCreate a Slack Event Adapter for receiving actions via the Events API\n\n.. code:: python\n\n  from slackeventsapi import SlackEventAdapter\n\n  slack_events_adapter = SlackEventAdapter(SLACK_VERIFICATION_TOKEN, endpoint=\"/slack_events\")\n\nCreate an event listener for \"reaction_added\" events and print the emoji name\n\n.. code:: python\n\n  @slack_events_adapter.on(\"reaction_added\")\n  def reaction_added(event):\n    emoji = event.get(\"reaction\")\n    print(emoji)\n\n\nStart the server on port 3000\n\n.. code-block:: python\n\n  slack_events_adapter.start(port=3000)\n\nFor a comprehensive list of available Slack `Events` and more information on\n`Scopes`, see https://api.slack.com/events-api\n\n\ud83e\udd16  Examples\n--------\n\nSee `example.py`_ for usage examples. This example also utilizes OAuth and the\nSlackClient Web API client.\n\n.. _example.py: /example/\n\n\ud83e\udd14  Support\n-------\n\nNeed help? Join `Bot Developer Hangout`_ and talk to us in `#slack-api`_.\n\nYou can also `create an Issue`_ right here on GitHub.\n\n.. _Events API: https://api.slack.com/events-api\n.. _create a Slack App: https://api.slack.com/apps/new\n.. _Event Subscriptions: https://api.slack.com/events-api#subscriptions\n.. _Bot Developer Hangout: http://dev4slack.xoxco.com/\n.. _#slack-api: https://dev4slack.slack.com/messages/slack-api/\n.. _create an Issue: https://github.com/slackapi/python-slack-events-api/issues/new\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/slackapi/python-slack-events-api",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "slackeventsapi",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/slackeventsapi/",
    "release_url": "https://pypi.org/project/slackeventsapi/1.0.0/",
    "requires_dist": [],
    "requires_python": null,
    "summary": "Python Slack Events API adapter",
    "version": "1.0.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9e04f9580214399730928de7ab14863e",
          "sha256": "ce44a51be82ca4c661c4b92cc18f62c51e45a8a08e977206aaa1462be3cb287d"
        },
        "downloads": 15,
        "filename": "slackeventsapi-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9e04f9580214399730928de7ab14863e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3937,
        "upload_time": "2017-02-22T17:42:51",
        "url": "https://files.pythonhosted.org/packages/96/5e/2cae437518a480275cd6c105e36eaaa4fceffff12576a2bdf7f05cfe7732/slackeventsapi-1.0.0.tar.gz"
      }
    ],
    "1.0.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2118a742794a5b51f6269adc09be584f",
          "sha256": "4aebbf4ad332881d65eeb8489e7538f1d4b614f04ed46cf5cdfd8d8e0193fd6c"
        },
        "downloads": 19,
        "filename": "slackeventsapi-1.0.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "2118a742794a5b51f6269adc09be584f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3709,
        "upload_time": "2017-02-17T22:29:47",
        "url": "https://files.pythonhosted.org/packages/7d/91/b8b513c3c26810b4c33afee1773997da452c913c01602a26bb09eccbbd4c/slackeventsapi-1.0.0rc1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9e04f9580214399730928de7ab14863e",
        "sha256": "ce44a51be82ca4c661c4b92cc18f62c51e45a8a08e977206aaa1462be3cb287d"
      },
      "downloads": 15,
      "filename": "slackeventsapi-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9e04f9580214399730928de7ab14863e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3937,
      "upload_time": "2017-02-22T17:42:51",
      "url": "https://files.pythonhosted.org/packages/96/5e/2cae437518a480275cd6c105e36eaaa4fceffff12576a2bdf7f05cfe7732/slackeventsapi-1.0.0.tar.gz"
    }
  ]
}