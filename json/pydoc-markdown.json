{
  "info": {
    "author": "Niklas Rosenstein",
    "author_email": "rosensteinniklas@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Code Generators",
      "Topic :: Utilities"
    ],
    "description": "pydocmd\n=======\n\n\u00e2\u20ac\u201c *insipired by the `Keras <https://keras.io/>`__ Documentation*\n\nPydocmd uses `MkDocs <www.mkdocs.org/>`__ and extended\n`Markdown <https://pythonhosted.org/Markdown/>`__ syntax to generate\nbeautiful Python API documentation.\n\n**Todo**\n\n-  [x] Support ``+`` suffix to include documented members of a\n   module/class\n-  [ ] Expand and link cross-references (eg. ``#SomeClass``)\n-  [ ] Parse, format and link types listed in\n   parameter/member/raise/return type docstrings (eg.\n   ``someattr (int): This is...``)\n\nInstallation\n============\n\n::\n\n    pip install pydoc-markdown\n    pip install git+https://github.com/NiklasRosenstein/pydoc-markdown.git  # latest development version\n\nUsage\n=====\n\nPydocmd can generate plain Markdown files from Python modules using the\n``pydocmd simple`` command. Specify one or more module names on the\ncommand-line. Supports the ``+`` syntax to include members of the module\n(or ``++`` to include members of the members, etc.)\n\n::\n\n    pydocmd simple mypackage+ mypackage.mymodule+ > docs.md\n\nAlternatively, pydocmd wraps the MkDocs command-line interface and\ngenerates the markdown pages beforehand. Simply use ``pydocmd build`` to\nbuild the documentation, or ``pydocmd serve`` to serve the documentation\non a local HTTP server. The ``pydocmd gh-deploy`` from MkDocs is also\nsupported.\n\nA configuration file ``pydocmd.yml`` is required to use pydocmd in this\nmode. Below is an example configuration. To get started, create\n``docs/`` directory and a file ``pydocmd.yml`` inside of it. Copy the\nconfiguration below and adjust it to your needs, then run\n``pydocmd build`` from the ``docs/`` directory.\n\n.. code:: yaml\n\n    site_name: \"My Documentation\"\n\n    # This tells pydocmd which pages to generate from which Python modules,\n    # functions and classes. At the first level is the page name, below that\n    # is a tree of Python member names (modules, classes, etc.) that should be\n    # documented. Higher indentation leads to smaller header size.\n    generate:\n    - baz/cool-stuff.md:\n      - foobar.baz:\n        - foobar.baz.CoolClass+     # (+ to include members)\n        - foobar.baz.some_function\n    - baz/more-stuff.md:\n      - foobar.more++               # (++ to include members, and their members)\n\n    # MkDocs pages configuration. The `<<` operator is sugar added by pydocmd\n    # that allows you to use an external Markdown file (eg. your project's README)\n    # in the documentation. The path must be relative to current working directory.\n    pages:\n    - Home: index.md << ../README.md\n    - foobar.baz:\n      - Cool Stuff: baz/cool-stuff.md\n\n    # These options all show off their default values. You don't have to add\n    # them to your configuration if you're fine with the default.\n    docs_dir: sources\n    gens_dir: _build/pydocmd     # This will end up as the MkDocs 'docs_dir'\n    site_dir: _build/site\n    theme:    readthedocs\n    loader:   pydocmd.loader.PythonLoader\n    preprocessor: pydocmd.preprocessor.Preprocessor\n\n    # Additional search path for your Python module. If you use Pydocmd from a\n    # subdirectory of your project (eg. docs/), you may want to add the parent\n    # directory here.\n    additional_search_paths:\n    - ..\n\nSyntax\n======\n\nCross-references\n----------------\n\nSymbols in the same namespace may be referenced by using a hash-symbol\n(``#``) directly followed by the symbols' name, including relative\nreferences. Note that using parentheses for function names is encouraged\nand will be ignored and automatically added when converting docstrings.\nExamples: ``#ClassName.member`` or ``#mod.function()``.\n\nFor absolute references for modules or members in names that are not\navailable in the current global namespace, ``#::mod.member`` must be\nused (note the two preceeding two double-colons).\n\nFor long reference names where only some part of the name should be\ndisplayed, the syntax ``#X~some.reference.name`` can be used, where\n``X`` is the number of elements to keep. If ``X`` is omitted, it will be\nassumed 1. Example: ``#~some.reference.name`` results in only ``name``\nbeing displayed.\n\nIn order to append additional characters that are not included in the\nactual reference name, another hash-symbol can be used, like\n``#Signal#s``.\n\n**pydoc-markdown** can be extended to find other cross-references using\nthe `Extension\nAPI <https://niklasrosenstein.github.io/pydoc-markdown/extensions/loader/>`__.\n\nSections\n--------\n\nSections can be generated with the Markdown ``# <Title>`` syntax. It is\nimportant to add a whitespace after the hash-symbol (``#``), as\notherwise it would represent a cross-reference. Some special sections\nalter the rendered result of their content, including\n\n-  Arguments (1)\n-  Parameters (1)\n-  Attributes (1)\n-  Members (1)\n-  Raises (2)\n-  Returns (2)\n\n(1): Lines beginning with ``<ident> [(<type>[, ...])]:`` are treated as\nargument/parameter or attribute/member declarations. Types listed inside\nthe parenthesis (optional) are cross-linked, if possible. For\nattribute/member declarations, the identifier is typed in a monospace\nfont.\n\n(2): Lines beginning with ``<type>[, ...]:`` are treated as raise/return\ntype declarations and the type names are cross-linked, if possible.\n\nLines following a name's description are considered part of the most\nrecent documentation unless separated by another declaration or an empty\nline. ``<type>`` placeholders can also be tuples in the form\n``(<type>[, ...])``.\n\nCode Blocks\n-----------\n\nGitHub-style Markdown code-blocks with language annotations can be used.\n\n::\n\n    ```python\n    >>> for i in range(100):\n    ...\n    ```\n\n--------------\n\nChanges\n=======\n\nv2.0.1\n------\n\n-  Support ``additional_search_path`` key in configuration\n-  Render headers as HTML ``<hX>`` tags rather than Markdown tags, so we\n   assign a proper ID to them\n-  Fix #21 -- AttributeError: 'module' object has no attribute\n   'signature'\n-  Now requires the ``six`` module\n-  FIx #22 -- No blank space after header does not render codeblocks\n\nv2.0.0\n------\n\n-  Complete overhaul of **pydoc-markdown** employing MkDocs and the\n   Markdown module.\n\n--------------\n\n.. raw:: html\n\n   <p align=\"center\">\n\nCopyright \u00c2\u00a9 2017 Niklas Rosenstein\n\n.. raw:: html\n\n   </p>",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/NiklasRosenstein/pydoc-markdown",
    "keywords": "markdown pydoc generator docs documentation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pydoc-markdown",
    "platform": "",
    "project_url": "https://pypi.org/project/pydoc-markdown/",
    "release_url": "https://pypi.org/project/pydoc-markdown/2.0.1/",
    "requires_python": "",
    "summary": "Create Python API documentation in Markdown format",
    "version": "2.0.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2e819c18fc4c56002c3848dc852b8d30",
          "sha256": "6b281cee1909b96f8b4f4d6ada7b4a1ee7c50564fa18c1392cf23372c590227b"
        },
        "downloads": 2320,
        "filename": "pydoc-markdown-0.1.0.zip",
        "has_sig": false,
        "md5_digest": "2e819c18fc4c56002c3848dc852b8d30",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12057,
        "upload_time": "2016-04-04T09:53:05",
        "url": "https://files.pythonhosted.org/packages/90/4a/e30686ea4a7068960ec2385e4745b9deceb1090cff06d222a0c0127b2d12/pydoc-markdown-0.1.0.zip"
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "89e357ace2d90e61a8f37fdbe524d6e2",
          "sha256": "c5f3a3f607d426f9d5cd6a1bb517b0e830f8c96b3ae8ba096511ae2fe229783b"
        },
        "downloads": 0,
        "filename": "pydoc-markdown-2.0.0.zip",
        "has_sig": false,
        "md5_digest": "89e357ace2d90e61a8f37fdbe524d6e2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26064,
        "upload_time": "2017-05-02T10:44:37",
        "url": "https://files.pythonhosted.org/packages/4c/54/da010c09bac1a5fff2bb19c0e894ca88c3373d47ba22917881253fc9e634/pydoc-markdown-2.0.0.zip"
      }
    ],
    "2.0.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "26ff3c4c9364af9645c27a531349d0a9",
          "sha256": "2737f042c7094be103c8655fab444d1b7dadf6d9b659fa7708ba2be226d848ca"
        },
        "downloads": 223,
        "filename": "pydoc-markdown-2.0.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "26ff3c4c9364af9645c27a531349d0a9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12641,
        "upload_time": "2017-01-05T19:25:02",
        "url": "https://files.pythonhosted.org/packages/82/27/5ca6e9167935e4a2587445a7119bd043a57fc187cb5c9eaa079e51579975/pydoc-markdown-2.0.0.dev0.tar.gz"
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1d45602d536c1b23c8dc6b8dadad1584",
          "sha256": "ba8a74936cd7f95ab90176623a61b04fbf001fe95a5b14babc94252aa4b7ae92"
        },
        "downloads": 0,
        "filename": "pydoc-markdown-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1d45602d536c1b23c8dc6b8dadad1584",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15660,
        "upload_time": "2017-05-27T10:29:23",
        "url": "https://files.pythonhosted.org/packages/ac/82/8240092e3892e7f6114b4d0dddf9dd9e97117422f8dad11f3a022ceb3c23/pydoc-markdown-2.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "1d45602d536c1b23c8dc6b8dadad1584",
        "sha256": "ba8a74936cd7f95ab90176623a61b04fbf001fe95a5b14babc94252aa4b7ae92"
      },
      "downloads": 0,
      "filename": "pydoc-markdown-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1d45602d536c1b23c8dc6b8dadad1584",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15660,
      "upload_time": "2017-05-27T10:29:23",
      "url": "https://files.pythonhosted.org/packages/ac/82/8240092e3892e7f6114b4d0dddf9dd9e97117422f8dad11f3a022ceb3c23/pydoc-markdown-2.0.1.tar.gz"
    }
  ]
}