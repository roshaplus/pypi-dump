{
  "info": {
    "author": "Open Knowledge International",
    "author_email": "info@okfn.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "tableschema-spss-py\n===================\n\n| |Travis|\n| |Coveralls|\n| |PyPi|\n| |Gitter|\n\nGenerate and load SPSS files based on `Table\nSchema <http://specs.frictionlessdata.io/table-schema/>`__ descriptors.\n\nFeatures\n--------\n\n-  implements ``tableschema.Storage`` interface\n\nGetting Started\n---------------\n\nInstallation\n~~~~~~~~~~~~\n\nThe package use semantic versioning. It means that major versions could\ninclude breaking changes. It's highly recommended to specify ``package``\nversion range in your ``setup/requirements`` file e.g.\n``package>=1.0,<2.0``.\n\n.. code:: bash\n\n    pip install tableschema-spss\n\nExamples\n~~~~~~~~\n\nCode examples in this readme requires Python 3.3+ interpreter. You could\nsee even more example in\n`examples <https://github.com/frictionlessdata/tableschema-spss-py/tree/master/examples>`__\ndirectory.\n\n    For this example your schema should be compatible with SPSS storage\n    -\n    https://github.com/frictionlessdata/tableschema-spss-py#creating-sav-files\n\n.. code:: python\n\n    from tableschema import Table\n\n    # Load and save table to SPSS\n    table = Table('data.csv', schema='schema.json')\n    table.save('data', storage='spss', base_path='dir/path')\n\nDocumentation\n-------------\n\nThe whole public API of this package is described here and follows\nsemantic versioning rules. Everyting outside of this readme are private\nAPI and could be changed without any notification on any new version.\n\nStorage\n~~~~~~~\n\nPackage implements `Tabular\nStorage <https://github.com/frictionlessdata/tableschema-py#storage>`__\ninterface (see full documentation on the link):\n\n|Storage|\n\nThis driver provides an additional API:\n\n``Storage(base_path=None)``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  ``base_path (str)`` - a valid directory path where .sav files can be\n   created and read. If no base\\_path is provided, the Storage object\n   methods will accept file paths rather than bucket names.\n\n``storage.buckets``\n^^^^^^^^^^^^^^^^^^^\n\nList all .sav and .zsav files at base path. Bucket list is only\nmaintained if Storage has a valid base path, otherwise will return None.\n\n-  ``(str[]/None)`` - returns bucket list or None\n\nWith a base path\n^^^^^^^^^^^^^^^^\n\nWe can get storage with a specified base path this way:\n\n.. code:: python\n\n    from tableschema_spss import Storage\n\n    storage_base_path = 'path/to/storage/dir'\n    storage = Storage(storage_base_path)\n\nWe can then interact with storage buckets ('buckets' are SPSS .sav/.zsav\nfiles in this context):\n\n.. code:: python\n\n    storage.buckets  # list buckets in storage\n    storage.create('bucket', descriptor)\n    storage.delete('bucket')  # deletes named bucket\n    storage.delete()  # deletes all buckets in storage\n    storage.describe('bucket') # return tableschema descriptor\n    storage.iter('bucket') # yields rows\n    storage.read('bucket') # return rows\n    storage.write('bucket', rows)\n\nWithout a base path\n^^^^^^^^^^^^^^^^^^^\n\nWe can also create storage without a base path this way:\n\n.. code:: python\n\n    from tableschema_spss import Storage\n\n    storage = Storage()  # no base path argument\n\nThen we can specify SPSS files directly by passing their file path\n(instead of bucket names):\n\n.. code:: python\n\n    storage.create('data/my-bucket.sav', descriptor)\n    storage.delete('data/my-bucket.sav')  # deletes named file\n    storage.describe('data/my-bucket.sav') # return tableschema descriptor\n    storage.iter('data/my-bucket.sav') # yields rows\n    storage.read('data/my-bucket.sav') # return rows\n    storage.write('data/my-bucket.sav', rows)\n\nNote that storage without base paths does not maintain an internal list\nof buckets, so calling ``storage.buckets`` will return ``None``.\n\nReading .sav files\n^^^^^^^^^^^^^^^^^^\n\nWhen reading SPSS data, SPSS date formats, ``DATE``, ``JDATE``,\n``EDATE``, ``SDATE``, ``ADATE``, ``DATETIME``, and ``TIME`` are\ntransformed into Python ``date``, ``datetime``, and ``time`` objects,\nwhere appropriate.\n\nOther SPSS date formats, ``WKDAY``, ``MONTH``, ``MOYR``, ``WKYR``,\n``QYR``, and ``DTIME`` are not supported for native transformation and\nwill be returned as strings.\n\nCreating .sav files\n^^^^^^^^^^^^^^^^^^^\n\nWhen creating SPSS files from Table Schemas, ``date``, ``datetime``, and\n``time`` field types must have a format property defined with the\nfollowing patterns:\n\n-  ``date``: ``%Y-%m-%d``\n-  ``datetime``: ``%Y-%m-%d %H:%M:%S``\n-  ``time``: ``%H:%M:%S.%f``\n\nTable Schema descriptors passed to ``storage.create()`` should include a\ncustom ``spss:format`` property, defining the SPSS type format the data\nis expected to represent. E.g.:\n\n.. code:: json\n\n    {\n        \"fields\": [\n            {\n                \"name\": \"person_id\",\n                \"type\": \"integer\",\n                \"spss:format\": \"F8\"\n            },\n            {\n                \"name\": \"name\",\n                \"type\": \"string\",\n                \"spss:format\": \"A10\"\n            },\n            {\n                \"type\": \"number\",\n                \"name\": \"salary\",\n                \"title\": \"Current Salary\",\n                \"spss:format\": \"DOLLAR8\"\n            },\n            {\n               \"type\": \"date\",\n               \"name\": \"bdate\",\n               \"title\": \"Date of Birth\",\n               \"format\": \"%Y-%m-%d\",\n               \"spss:format\": \"ADATE10\"\n            }\n        ]\n    }\n\nContributing\n------------\n\nThe project follows the `Open Knowledge International coding\nstandards <https://github.com/okfn/coding-standards>`__.\n\n| Recommended way to get started is to create and activate a project\nvirtual environment.\n| To install package and development dependencies into active\nenvironment:\n\n::\n\n    $ make install\n\nTo run tests with linting and coverage:\n\n.. code:: bash\n\n    $ make test\n\n| For linting ``pylama`` configured in ``pylama.ini`` is used. On this\nstage it's already\n| installed into your environment and could be used separately with more\nfine-grained control\n| as described in documentation -\nhttps://pylama.readthedocs.io/en/latest/.\n\nFor example to sort results by error type:\n\n.. code:: bash\n\n    $ pylama --sort <path>\n\n| For testing ``tox`` configured in ``tox.ini`` is used.\n| It's already installed into your environment and could be used\nseparately with more fine-grained control as described in documentation\n- https://testrun.org/tox/latest/.\n\n| For example to check subset of tests against Python 2 environment with\nincreased verbosity.\n| All positional arguments and options after ``--`` will be passed to\n``py.test``:\n\n.. code:: bash\n\n    tox -e py27 -- -v tests/<path>\n\n| Under the hood ``tox`` uses ``pytest`` configured in ``pytest.ini``,\n``coverage``\n| and ``mock`` packages. This packages are available only in tox\nenvionments.\n\nChangelog\n---------\n\nHere described only breaking and the most important changes. The full\nchangelog and documentation for all released versions could be found in\nnicely formatted `commit\nhistory <https://github.com/frictionlessdata/tableschema-spss-py/commits/master>`__.\n\nv0.x\n~~~~\n\nInitial driver implementation.\n\n.. |Travis| image:: https://img.shields.io/travis/frictionlessdata/tableschema-spss-py/master.svg\n   :target: https://travis-ci.org/frictionlessdata/tableschema-spss-py\n.. |Coveralls| image:: http://img.shields.io/coveralls/frictionlessdata/tableschema-spss-py/master.svg\n   :target: https://coveralls.io/r/frictionlessdata/tableschema-spss-py?branch=master\n.. |PyPi| image:: https://img.shields.io/pypi/v/tableschema-spss.svg\n   :target: https://pypi.python.org/pypi/tableschema-spss\n.. |Gitter| image:: https://img.shields.io/gitter/room/frictionlessdata/chat.svg\n   :target: https://gitter.im/frictionlessdata/chat\n.. |Storage| image:: https://i.imgur.com/RQgrxqp.png\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/frictionlessdata/tableschema-spss-py",
    "keywords": "frictionless data,datapackage,tableschema,spss",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tableschema-spss",
    "platform": "",
    "project_url": "https://pypi.org/project/tableschema-spss/",
    "release_url": "https://pypi.org/project/tableschema-spss/0.3.0/",
    "requires_dist": [
      "tox; extra == 'develop'",
      "pylama; extra == 'develop'",
      "tableschema (>=1.0,<2.0)",
      "six (>=1.9,<2.0)",
      "savReaderWriter (>=3.0,<4.0)"
    ],
    "requires_python": "",
    "summary": "",
    "version": "0.3.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "727f517b92cd80994b4f4ee42e0ca2ff",
          "sha256": "9e9d2ea02bb3c5f933d8b28111f5ec0197ba3b206921f29c2e1dbd1eb033b8c1"
        },
        "downloads": 0,
        "filename": "tableschema_spss-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "727f517b92cd80994b4f4ee42e0ca2ff",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9100,
        "upload_time": "2017-07-31T10:00:34",
        "url": "https://files.pythonhosted.org/packages/7c/b9/c3a81f405a3062037ebb8f188417a855a6f380d1840673ca750a494c7095/tableschema_spss-0.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "98092b0add7a2f0e43f98aa9f7e1e7f5",
          "sha256": "2404a78a976e66d2b30fb306511dbce70f28fa76a6169ff0c1298ffadc36b41f"
        },
        "downloads": 0,
        "filename": "tableschema-spss-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "98092b0add7a2f0e43f98aa9f7e1e7f5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8084,
        "upload_time": "2017-07-31T10:00:36",
        "url": "https://files.pythonhosted.org/packages/b1/04/09dd86ee89cda4b869a45f1b570ad7519d705e83e0dbd579dca9dcf7ec02/tableschema-spss-0.1.0.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8d4bb9350f0e33424a2de421ded3275e",
          "sha256": "0b0a8a8b14b8b3e206c63d3fdf942ff2b5ffe60c1bdfd295a76c947b25e88dd2"
        },
        "downloads": 0,
        "filename": "tableschema_spss-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d4bb9350f0e33424a2de421ded3275e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9720,
        "upload_time": "2017-08-24T14:58:09",
        "url": "https://files.pythonhosted.org/packages/1f/72/77bc4b919a3ed9a2bdc800080fdbe1e0836b6dbc6605b8bd825f1d3b22bf/tableschema_spss-0.2.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "118c585ad42129f089531f9eb740caba",
          "sha256": "b87021aa85e83e1e7b5e771649bbeb253cb6d8ddf73634cf9714634fc77a71a0"
        },
        "downloads": 0,
        "filename": "tableschema-spss-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "118c585ad42129f089531f9eb740caba",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8614,
        "upload_time": "2017-08-24T14:58:14",
        "url": "https://files.pythonhosted.org/packages/d9/9b/9f6890f2992b2c6ef839c96ee5b7fdde362f64f4dda33660db30a0b4adcf/tableschema-spss-0.2.0.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8b99c51be034672d1bc93b31a975cd86",
          "sha256": "829789e55c9c58526e4e568608334167a0794d54c1450761b17e0a3b8062e383"
        },
        "downloads": 0,
        "filename": "tableschema_spss-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b99c51be034672d1bc93b31a975cd86",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 13030,
        "upload_time": "2017-09-30T09:30:14",
        "url": "https://files.pythonhosted.org/packages/3f/bf/a18e46431286c2e959c1b4f4b97d3e14b7dc2b43b2c64e98e0c5bfece1d0/tableschema_spss-0.3.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "18a71078e74b0bceca3aed5c9045fbbe",
          "sha256": "9c7d434e277c177a44223e9af948a9f21b0c8409554e0ed0f160d835b6057088"
        },
        "downloads": 0,
        "filename": "tableschema-spss-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "18a71078e74b0bceca3aed5c9045fbbe",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10501,
        "upload_time": "2017-09-30T09:30:15",
        "url": "https://files.pythonhosted.org/packages/fa/ca/d638842a1ae534579970ce433860a0882a89b5098996c68e3db7bef8f7f1/tableschema-spss-0.3.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "8b99c51be034672d1bc93b31a975cd86",
        "sha256": "829789e55c9c58526e4e568608334167a0794d54c1450761b17e0a3b8062e383"
      },
      "downloads": 0,
      "filename": "tableschema_spss-0.3.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8b99c51be034672d1bc93b31a975cd86",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 13030,
      "upload_time": "2017-09-30T09:30:14",
      "url": "https://files.pythonhosted.org/packages/3f/bf/a18e46431286c2e959c1b4f4b97d3e14b7dc2b43b2c64e98e0c5bfece1d0/tableschema_spss-0.3.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "18a71078e74b0bceca3aed5c9045fbbe",
        "sha256": "9c7d434e277c177a44223e9af948a9f21b0c8409554e0ed0f160d835b6057088"
      },
      "downloads": 0,
      "filename": "tableschema-spss-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "18a71078e74b0bceca3aed5c9045fbbe",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 10501,
      "upload_time": "2017-09-30T09:30:15",
      "url": "https://files.pythonhosted.org/packages/fa/ca/d638842a1ae534579970ce433860a0882a89b5098996c68e3db7bef8f7f1/tableschema-spss-0.3.0.tar.gz"
    }
  ]
}