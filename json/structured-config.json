{
  "info": {
    "author": "Andrew Leech",
    "author_email": "andrew@alelec.net",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Structured Config\n=================\n\nA configuration module for python where the config structure is solely\ndefined in python.\n\nThere are lots of different modules and formats available for creating\nconfiguration files in a python project.\n\nAll of the ones I've used in the past have one main limitations in common however;\nthe primary definition of the configuration elements it either not written in python,\nor it's written in something like a python dict where you don't get particularly\ngood static inspection of elements.\n\nI personally like to do my python development in a smart ide like pycharm where\nI can take full advantage of inspection and auto-completion. If you config is\nnot written in python however, I don't get to do this.\n\nIf you want any kind of introspection of config files, you end up having some\nkind of python parser of the config file with all the configuration elements\nrepeated in both the default template and in some kind of mirror class.\n\nThis module aims to remove this limitation.\n\nBasic Usage\n-----------\n\nNow, your config.py file in your project can be something like ::\n\n    from structured_config import ConfigFile, Structure\n\n    class Config(Structure):\n\n        class server(Structure):\n            url = 'https:www.example.com'\n            username = '<user>'\n            password = '<password>'\n\n\n        # Max number of tcp connections at any one time\n        concurrent_connections =  32\n\n        # Local service port\n        service_port = 45080\n\n\n    config = Config('/path/to/config.yaml')\n\nAny other modules in your project can then simply ::\n\n    from config import config\n\n    import requests\n    from requests.auth import HTTPBasicAuth\n\n    r = requests.get(config.server.url, auth=HTTPBasicAuth(config.server.username, config.server.password))\n\nand so on. Your IDE should give you full autocomplete on all these elements, becuase as far as it knows your config is\na normal class with normal static attributes.\n\nIf you want to change these config items in code it's as simple as setting the attribute ::\n\n    from config import config\n\n    config.concurrent_connections = 64\n\nThat's it. The config is written to disk in the yaml file pointed to in Config() instantiation\n\nThe yaml file can be manually changed on disk of course. At this stage it'll require\na restart of the app to reload the file however ::\n\n    !config\n    server: !server\n      password: <password>\n      url: https:www.example.com\n      username: <user>\n    concurrent_connections: 32\n    service_port: 45080\n\nLists of elements\n-----------------\n\nIf you want a slightly more complex config file with a list of elements, this can be handled too ::\n\n    import structured_config\n    from structured_config import Structure, ConfigFile\n\n    # Pre-define the object we want to store a list of.\n    class Map(Structure):\n        remote_path = None\n        local_path = None\n\n\n    # Default configuration for the application\n    class Config(Structure):\n\n        class server(Structure):\n            url = 'https:www.example.com'\n            username = '<user>'\n            password = '<password>'\n\n        mapping = [\n            Map(\n                remote_path=\"/test/\",\n                local_path=\"~/test/\"\n            ),\n            Map(\n                remote_path=\"/one/\",\n                local_path=\"~/two/\"\n            ),\n            Map(\n                remote_path=\"/two/\",\n                local_path=\"~/one/\"\n            )\n        ]\n\n    config = Config('config.yaml')\n\nYour main code can access the Map items in the list by all the normal means.\nif you append() new ones onto the list or pop() old ones off the list, the\nconfig will automatically write them to disk. Same goes for editing either of the\nattributes in any of the Map objects that have been added to the list.\n\nFormat convertions\n------------------\n\nIf you want to enforce the type of some attributes, we've got that covered as well ::\n\n    from structured_config import ConfigFile, Structure, TypedField, IntField\n\n    class config(Structure):\n\n        concurrent_connections = IntField(32)\n\n        path = TypedField('$HOME', os.path.expandvars)\n\n\n    config = Config('config.yaml')\n\nCurrently available TypeFields include:\n * IntField : converts to int()\n * FloatField : converts to float()\n * StrField : converts to str()\n * PathField : converts to pathlib.Path()\n\nOthers can be created on demand by using `TypeField(value, converter_funtion)` \nor by subclassing TypeField as per the ones above.\n\nAny time a config attribute is set, it will be passed through the validation\nfunction first. The raw (unconverted) value will be saved to disk.\n\nGet's on the config objects attribute return the converted value, not the Field object.\n\nConfig file location\n--------------------\n\nWhen instantiating your Config object, the yaml filename needs to be passed in.  \n\nIf an absolute path is provided this will be used verbatim. \n\nA relative path is assumed to be stored in the standard system location for config \nfiles, as handled by `appdirs <https://pypi.python.org/pypi/appdirs/1.4.3>`_.\n\nIn this case the projects appname should be provided as well to create the folder\n the config file will be stored in ::\n\n    config = Config('config.yaml', 'ExampleApp')\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://gitlab.com/alelec/structured_config",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "structured-config",
    "platform": "",
    "project_url": "https://pypi.org/project/structured-config/",
    "release_url": "https://pypi.org/project/structured-config/2.2/",
    "requires_dist": [
      "appdirs",
      "wrapt",
      "PyYAML"
    ],
    "requires_python": "",
    "summary": "Configuration module for python where the config structure is solely defined in python with full autocomplete support.",
    "version": "2.2"
  },
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ad33cb6491d8d6323b470d96783e5ed6",
          "sha256": "babc3f6b919fdfd1ede4c4b1a93b74d9fd6fa17edda0f02cd734053946ac3a98"
        },
        "downloads": 11,
        "filename": "structured_config-1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad33cb6491d8d6323b470d96783e5ed6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 6846,
        "upload_time": "2017-02-11T09:26:37",
        "url": "https://files.pythonhosted.org/packages/2a/79/1ae469f708eaa00525ca2ecd0742b1ebeace2b0c2faae251d02c9d1df61a/structured_config-1.1-py2.py3-none-any.whl"
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b31195d451c1a5cd40bd0ab2b9d91892",
          "sha256": "a5f6f1e520e8063b9ee570fe3fd0580fc7d21cb3be09e5fc5373ca9969247d3d"
        },
        "downloads": 12,
        "filename": "structured_config-1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b31195d451c1a5cd40bd0ab2b9d91892",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7554,
        "upload_time": "2017-02-12T09:45:40",
        "url": "https://files.pythonhosted.org/packages/6f/f8/ce0ac6186a784cce1e47b4e38d7230d48c2cb442ad46c452e761036e6692/structured_config-1.2-py2.py3-none-any.whl"
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "11c27ed053e421d7d5018231b46b8b9f",
          "sha256": "66d4b6f001512fe85549702cc8ef17fa3a78b6b15f19b015bcf4bb8291ce271f"
        },
        "downloads": 11,
        "filename": "structured_config-1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11c27ed053e421d7d5018231b46b8b9f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7587,
        "upload_time": "2017-02-12T12:26:55",
        "url": "https://files.pythonhosted.org/packages/f4/52/1d38ffe5a5dc6e5a7aab43a3d920ccb014cd9e2d1916d94bac29fe91eb0c/structured_config-1.3-py2.py3-none-any.whl"
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "11b413dca69d3bdb1a2bfa07e91c9ffa",
          "sha256": "ce6f863837418001e8755c95016707bbf938404ef431318753781a4bf6bf2efb"
        },
        "downloads": 14,
        "filename": "structured_config-1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11b413dca69d3bdb1a2bfa07e91c9ffa",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7587,
        "upload_time": "2017-02-19T11:52:09",
        "url": "https://files.pythonhosted.org/packages/68/13/9928a810e80e177f3d1f63c493e2505b489209e9ccd18099089ff6ee7a20/structured_config-1.4-py2.py3-none-any.whl"
      }
    ],
    "1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "85ac2fbe1c3f29418a37e942d476f3b5",
          "sha256": "db8e65776d1335ea15d4e2ef8ddaef7fd606fca3dd8ab33fee8628ba7440f459"
        },
        "downloads": 14,
        "filename": "structured_config-1.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85ac2fbe1c3f29418a37e942d476f3b5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7657,
        "upload_time": "2017-02-20T10:14:05",
        "url": "https://files.pythonhosted.org/packages/ac/44/a505312c9bab5061e4ed2b3e5cf1f3be3a9b639bee1709c15d9d4f3e6787/structured_config-1.5-py2.py3-none-any.whl"
      }
    ],
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "020658b295069b9ff82b96d1b93b0e55",
          "sha256": "d32b6bcb958fc43a34bd8e1d904b694c0015227dea3ead8fba04f8bf8b0cefc4"
        },
        "downloads": 16,
        "filename": "structured_config-1.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "020658b295069b9ff82b96d1b93b0e55",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7650,
        "upload_time": "2017-03-05T21:57:33",
        "url": "https://files.pythonhosted.org/packages/ba/10/5ef90ddff950e8af44a174c7c9dd78e637ea8e06a753200ef2e3fbc8a613/structured_config-1.6-py2.py3-none-any.whl"
      }
    ],
    "1.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a856c68b29e17e44ac5b1a84e13cc1cd",
          "sha256": "c535a8295270e57b829e03619098cdbc8c97dc0c0b722cf4aa082d3a373e3dbf"
        },
        "downloads": 0,
        "filename": "structured_config-1.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a856c68b29e17e44ac5b1a84e13cc1cd",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7774,
        "upload_time": "2017-04-25T04:23:36",
        "url": "https://files.pythonhosted.org/packages/fd/6f/c2577f98083ddad8ddcefa27dd2ae0b0c7eb51cfa0e862b18a6259855fae/structured_config-1.7-py2.py3-none-any.whl"
      }
    ],
    "1.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d06d26e4b011c00389b1b81a15ec840f",
          "sha256": "4c18578551ba7f1d0b43b5e7f3876bf46ac646445c3f2ff94828053c5a1dd4fd"
        },
        "downloads": 0,
        "filename": "structured_config-1.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d06d26e4b011c00389b1b81a15ec840f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7925,
        "upload_time": "2017-08-20T05:44:23",
        "url": "https://files.pythonhosted.org/packages/61/c5/f7fc3bc8e51ec6df1128b80c1dc1a239e6dcfcafb6a2fa41f02e661917ac/structured_config-1.8-py2.py3-none-any.whl"
      }
    ],
    "1.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "11b2ae00374314a4a83a1986b2de7984",
          "sha256": "3578cb7f2610ae6e9bab06feb18e574824b1179477b8b07c3a3fd6b38d9e71b5"
        },
        "downloads": 0,
        "filename": "structured_config-1.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11b2ae00374314a4a83a1986b2de7984",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 8066,
        "upload_time": "2017-09-26T00:07:36",
        "url": "https://files.pythonhosted.org/packages/09/e0/edc41103a04d5cd09fa76e790d8732f1a5998780a570cdbb55f8ca96ff66/structured_config-1.9-py2.py3-none-any.whl"
      }
    ],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "54d8d17c3dc0c57b74f11a785f6a29b3",
          "sha256": "490c974239b72b4b6131db0634d52cd412161eead376d54bc67acd9426c7fdd7"
        },
        "downloads": 0,
        "filename": "structured_config-2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54d8d17c3dc0c57b74f11a785f6a29b3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 8247,
        "upload_time": "2017-09-27T14:06:57",
        "url": "https://files.pythonhosted.org/packages/96/d8/9613470ea2347e7896da4fc6b4050508072965309714bff49ec1a41917d6/structured_config-2.0-py2.py3-none-any.whl"
      }
    ],
    "2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e08ceb88eaf636fc2c2ff8d225f4b5fe",
          "sha256": "3d15a595395c1b67c615a5e409fb5489d73ee8381eae284211a72b120af84be6"
        },
        "downloads": 0,
        "filename": "structured_config-2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e08ceb88eaf636fc2c2ff8d225f4b5fe",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9039,
        "upload_time": "2017-09-28T03:23:20",
        "url": "https://files.pythonhosted.org/packages/e2/ab/4d1a984a71018aa5e79df37f82ec2e59bb3c2d8e046465a7936259c6a874/structured_config-2.1-py2.py3-none-any.whl"
      }
    ],
    "2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c606ca914d69df2aab725851c34f4743",
          "sha256": "7b60701d033b3fa75cfe97353a7fb4813b699ae139687c94d64020d796065027"
        },
        "downloads": 0,
        "filename": "structured_config-2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c606ca914d69df2aab725851c34f4743",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9887,
        "upload_time": "2017-10-07T09:53:26",
        "url": "https://files.pythonhosted.org/packages/23/48/34de06956943bd1b40a199f935a5cb6264b32543a99f89a71a9c10b2ccec/structured_config-2.2-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c606ca914d69df2aab725851c34f4743",
        "sha256": "7b60701d033b3fa75cfe97353a7fb4813b699ae139687c94d64020d796065027"
      },
      "downloads": 0,
      "filename": "structured_config-2.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c606ca914d69df2aab725851c34f4743",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 9887,
      "upload_time": "2017-10-07T09:53:26",
      "url": "https://files.pythonhosted.org/packages/23/48/34de06956943bd1b40a199f935a5cb6264b32543a99f89a71a9c10b2ccec/structured_config-2.2-py2.py3-none-any.whl"
    }
  ]
}