{
  "info": {
    "author": "Ofek Lev",
    "author_email": "ofekmeister@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "Hatch\n=====\n\n.. image:: https://img.shields.io/pypi/v/hatch.svg?style=flat-square\n    :target: https://pypi.org/project/hatch\n    :alt: Latest PyPI version\n\n.. image:: https://img.shields.io/travis/ofek/hatch/master.svg?style=flat-square\n    :target: https://travis-ci.org/ofek/hatch\n    :alt: Travis CI\n\n.. image:: https://img.shields.io/codecov/c/github/ofek/hatch/master.svg?style=flat-square\n    :target: https://codecov.io/gh/ofek/hatch\n    :alt: Codecov\n\n.. image:: https://img.shields.io/pypi/pyversions/hatch.svg?style=flat-square\n    :target: https://pypi.org/project/hatch\n    :alt: Supported Python versions\n\n.. image:: https://img.shields.io/pypi/l/hatch.svg?style=flat-square\n    :target: https://choosealicense.com/licenses\n    :alt: License\n\n-----\n\nHatch is a productivity tool designed to make your workflow easier and more\nefficient, while also reducing the number of other tools you need to know.\nIt aims to make the 90% use cases as pleasant as possible.\n\nFor me personally, Hatch has entirely replaced the manual (or entire!)\nuse of these:\n\n- `Cookiecutter PyPackage <https://github.com/audreyr/cookiecutter-pypackage>`_\n- `pip <https://github.com/pypa/pip>`_\n- `virtualenv <https://github.com/pypa/virtualenv>`_\n- `pyenv <https://github.com/pyenv/pyenv>`_\n- `Pew <https://github.com/berdario/pew>`_\n- `inve <https://gist.github.com/datagrok/2199506>`_\n- `pytest`_\n- `Coverage.py <https://github.com/nedbat/coveragepy>`_\n- `twine <https://github.com/pypa/twine>`_\n- `bumpversion <https://github.com/peritus/bumpversion>`_\n- `zest.releaser <https://github.com/zestsoftware/zest.releaser>`_\n- `Incremental <https://github.com/twisted/incremental>`_\n- ``python setup.py ...``\n\n.. code-block::\n\n               /^\\/^\\\n             _|__|  O|\n    \\/     /~     \\_/ \\\n     \\____|__________/  \\\n            \\_______      \\\n                    `\\     \\                 \\\n                      |     |                  \\\n                     /      /                    \\\n                    /     /                       \\\n                  /      /                         \\ \\\n                 /     /                            \\  \\\n               /     /             _----_            \\   \\\n              /     /           _-~      ~-_         |   |\n             (      (        _-~    _--_    ~-_     _/   |\n              \\      ~-____-~    _-~    ~-_    ~-_-~    /\n                ~-_           _-~          ~-_       _-~\n                   ~--______-~                ~-___-~\n\n\n.. contents:: **Table of Contents**\n    :backlinks: none\n\nFeatures\n--------\n\n- Completely cross-platform \\\\(\\*_^)/\n- Configurable project creation! CI service files, readme format/badges, licenses, etc.\n- Easiest virtual environment management available\n- Activation of virtual envs without disruption of current environments\n- Ability to send commands to virtual envs without the need for activation\n- Changed prompts when in a virtual env\n- Installing/updating packages defaults to a per-user basis, allowing global\n  usage with elevated privileges\n- Configurable semantic version bumping\n- Robust build/package cleanup\n- Easy testing with code coverage\n- Simple building and releasing for PyPI\n- All commands are environment-aware w.r.t. python/pip\n- Virtual envs can be the target for relevant commands\n- Editable packages can be the target for relevant commands\n\nInstallation\n------------\n\nHatch is distributed on `PyPI`_ as a universal wheel and is available on\nLinux/macOS and Windows and supports Python 3.5+ and PyPy.\n\n.. code-block:: bash\n\n    $ pip3 install --user hatch\n\nor simply ``pip`` if that already points to a Python 3 version.\n\nIf ``hatch`` doesn't work on your system immediately after that, please\nrun `this command <https://github.com/ofek/pybin#pybin-put>`_.\n\nAfter the first installation, you may want to run ``hatch config --restore`` to\nensure your config file is available.\n\nCommands\n--------\n\nFor your convenience, anything after a ``--`` will be treated as arguments.\n\n``config``\n^^^^^^^^^^\n\nLocates, updates, or restores the config file.\n\n.. code-block:: bash\n\n    $ hatch config\n    Settings location: /home/ofek/.local/share/hatch/settings.json\n\n..\n\n    **Options:**\n\n*-u/--update*\n    Updates the config file with any new fields.\n\n*--restore*\n    Restores the config file to default settings.\n\n``new``\n^^^^^^^\n\nCreates a new Python project.\n\nValues from your config file such as ``name`` and ``pyversions`` will be used\nto help populate fields. You can also specify things like the readme format\nand which CI service files to create. All options override the config file.\n\nHere is an example using an unmodified config file:\n\n.. code-block:: bash\n\n    $ hatch new my-app\n    Created project `my-app`\n    $ tree --dirsfirst my-app\n    my-app\n    \u251c\u2500\u2500 my_app\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 tests\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 LICENSE-APACHE\n    \u251c\u2500\u2500 LICENSE-MIT\n    \u251c\u2500\u2500 MANIFEST.in\n    \u251c\u2500\u2500 README.rst\n    \u251c\u2500\u2500 requirements.txt\n    \u251c\u2500\u2500 setup.py\n    \u2514\u2500\u2500 tox.ini\n\n    2 directories, 8 files\n\n..\n\n    **Arguments:**\n\n*name*\n    The desired name of package.\n\n..\n\n    **Options:**\n\n*--basic*\n    Disables third-party services and readme badges.\n\n*--cli*\n    Creates a ``cli.py`` in the package directory and an entry point in\n    ``setup.py`` pointing to the properly named function within. Also, a\n    ``__main__.py`` is created so it can be invoked via ``python -m pkg_name``.\n\n*-l/--licenses*\n    Comma-separated list of licenses to use.\n\n``init``\n^^^^^^^^\n\nSame as ``new`` but the project target is the current directory.\n\n``grow``\n^^^^^^^^\n\nIncrements a project's version number using semantic versioning.\nValid choices for the part are ``major``, ``minor``, ``patch``\n(``fix`` alias), ``pre``, and ``build``.\n\nThe path to the project is derived in the following order:\n\n1. The optional argument, which should be the name of a package\n   that was installed via ``hatch install -l`` or ``pip install -e``.\n2. The option --path, which can be a relative or absolute path.\n3. The current directory.\n\nIf the path is a file, it will be the target. Otherwise, the path, and\nevery top level directory within, will be checked for a ``__version__.py``,\n``__about__.py``, and ``__init__.py``, in that order. The first encounter of\na ``__version__`` variable that also appears to equal a version string will\nbe updated. Probable package paths will be given precedence.\n\nThe default tokens for the prerelease and build parts, *rc* and *build*\nrespectively, can be altered via the options ``--pre`` and ``--build``, or\nthe config entry ``semver``.\n\n.. code-block:: bash\n\n    $ git clone -q https://github.com/requests/requests && cd requests\n    $ hatch grow build\n    Updated /home/ofek/requests/requests/__version__.py\n    2.18.4 -> 2.18.4+build.1\n    $ hatch grow fix\n    Updated /home/ofek/requests/requests/__version__.py\n    2.18.4+build.1 -> 2.18.5\n    $ hatch grow pre\n    Updated /home/ofek/requests/requests/__version__.py\n    2.18.5 -> 2.18.5-rc.1\n    $ hatch grow minor\n    Updated /home/ofek/requests/requests/__version__.py\n    2.18.5-rc.1 -> 2.19.0\n    $ hatch grow major\n    Updated /home/ofek/requests/requests/__version__.py\n    2.19.0 -> 3.0.0\n\n..\n\n    **Arguments:**\n\n*part*\n    The part of version to bump.\n\n*package*\n    The editable package to target (optional).\n\n..\n\n    **Options:**\n\n*-p/--path*\n    A relative or absolute path to a project or file.\n\n*--pre*\n    The token to use for ``pre`` part, overriding the config file. Default: *rc*\n\n*--build*\n    The token to use for ``build`` part, overriding the config file. Default: *build*\n\n``test``\n^^^^^^^^\n\nRuns tests using ``pytest``, optionally checking coverage.\n\nThe path is derived in the following order:\n\n1. The optional argument, which should be the name of a package\n   that was installed via ``hatch install -l`` or ``pip install -e``.\n2. The option --path, which can be a relative or absolute path.\n3. The current directory.\n\nIf the path points to a package, it should have a ``tests`` directory.\n\n.. code-block:: bash\n\n    $ git clone https://github.com/ofek/privy && cd privy\n    $ hatch test -c\n    ========================= test session starts ==========================\n    platform linux -- Python 3.5.2, pytest-3.2.1, py-1.4.34, pluggy-0.4.0\n    rootdir: /home/ofek/privy, inifile:\n    plugins: xdist-1.20.0, mock-1.6.2, httpbin-0.0.7, forked-0.2, cov-2.5.1\n    collected 10 items\n\n    tests/test_privy.py ..........\n\n    ====================== 10 passed in 4.34 seconds =======================\n\n    Tests completed, checking coverage...\n\n    Name                  Stmts   Miss Branch BrPart  Cover   Missing\n    -----------------------------------------------------------------\n    privy/__init__.py         1      0      0      0   100%\n    privy/core.py            30      0      0      0   100%\n    privy/utils.py           13      0      4      0   100%\n    tests/__init__.py         0      0      0      0   100%\n    tests/test_privy.py      57      0      0      0   100%\n    -----------------------------------------------------------------\n    TOTAL                   101      0      4      0   100%\n\n..\n\n    **Arguments:**\n\n*package*\n    The editable package to target (optional).\n\n..\n\n    **Options:**\n\n*-p/--path*\n    A relative or absolute path to a project or test directory.\n\n*-c/--cov*\n    Computes, then outputs coverage after testing.\n\n*-m/--merge*\n    If --cov, coverage will run using --parallel-mode and combine the results.\n\n*-ta/--test-args*\n    Pass through to ``pytest``, overriding defaults. Example: ``hatch test -ta \"-k test_core.py -vv\"``\n\n*-ca/--cov-args*\n    Pass through to ``coverage run``, overriding defaults. Example: ``hatch test -ca \"--timid --pylib\"``\n\n*-e/--env-aware*\n    Invokes ``pytest`` and ``coverage`` as modules instead of directly, i.e. ``python -m pytest``.\n\n``pypath``\n^^^^^^^^^^\n\nNames an absolute path to a Python executable. You can also modify\nthese in the config file entry ``pypaths``.\n\nHatch can then use these paths by name when creating virtual envs, building\npackages, etc.\n\n.. code-block:: bash\n\n    $ hatch pypath -l\n    There are no saved Python paths. Add one via `hatch pypath NAME PATH`.\n    $ hatch pypath py2 /usr/bin/python\n    Successfully saved Python `py2` located at `/usr/bin/python`.\n    $ hatch pypath py3 /usr/bin/python3\n    Successfully saved Python `py3` located at `/usr/bin/python3`.\n    $ hatch pypath -l\n    py2 -> /usr/bin/python\n    py3 -> /usr/bin/python3\n\n..\n\n    **Arguments:**\n\n*name*\n    The desired name of the Python path.\n\n*path*\n    An absolute path to a Python executable.\n\n..\n\n    **Options:**\n\n*-l/--list*\n    Shows available Python paths.\n\n``env``\n^^^^^^^\n\nCreates a new virtual env that can later be utilized with the ``use`` command.\n\n.. code-block:: bash\n\n    $ hatch pypath -l\n    py2 -> /usr/bin/python\n    py3 -> /usr/bin/python3\n    $ hatch env -l\n    No virtual environments found in /home/ofek/.local/share/hatch/venvs. To create one do `hatch env NAME`.\n    $ hatch env -q my-app\n    Already using interpreter /usr/bin/python3\n    Successfully saved virtual env `my-app` to `/home/ofek/.local/share/hatch/venvs/my-app`.\n    $ hatch env -q -py py2 old\n    Successfully saved virtual env `old` to `/home/ofek/.local/share/hatch/venvs/old`.\n    $ hatch env -q -pp ~/pypy3/bin/pypy fast\n    Successfully saved virtual env `fast` to `/home/ofek/.local/share/hatch/venvs/fast`.\n    $ hatch env -l\n    Virtual environments found in /home/ofek/.local/share/hatch/venvs:\n\n    fast ->\n      Version: 3.5.3\n      Implementation: PyPy\n    my-app ->\n      Version: 3.5.2\n      Implementation: CPython\n    old ->\n      Version: 2.7.12\n      Implementation: CPython\n\n..\n\n    **Arguments:**\n\n*name*\n    The desired name of the virtual environment.\n\n..\n\n    **Options:**\n\n*-py/--python*\n    The named Python path to use. This overrides --pypath.\n\n*-pp/--pypath*\n    An absolute path to a Python executable.\n\n*-c/--clone*\n    Specifies an existing virtual env to clone. (Experimental)\n\n*-r/--restore*\n    Attempts to make all virtual envs in the venvs directory usable by fixing the\n    executable paths in scripts and removing  all compiled ``*.pyc`` files. (Experimental)\n\n*-q/--quiet*\n    Decreases verbosity.\n\n*-l/--list*\n    Shows available virtual envs.\n\n``shed``\n^^^^^^^^\n\nRemoves named Python paths or virtual environments.\n\n.. code-block:: bash\n\n    $ hatch pypath -l\n    py2 -> /usr/bin/python\n    py3 -> /usr/bin/python3\n    invalid -> :\\/:\n    $ hatch env -l\n    Virtual environments found in /home/ofek/.local/share/hatch/venvs:\n\n    duplicate ->\n      Version: 3.5.2\n      Implementation: CPython\n    fast ->\n      Version: 3.5.3\n      Implementation: PyPy\n    my-app ->\n      Version: 3.5.2\n      Implementation: CPython\n    old ->\n      Version: 2.7.12\n      Implementation: CPython\n    $ hatch shed -p invalid -e duplicate,old\n    Successfully removed Python path named `invalid`.\n    Successfully removed virtual env named `duplicate`.\n    Successfully removed virtual env named `old`.\n\n..\n\n    **Options:**\n\n*-p/-py/--pypath*\n    Comma-separated list of named Python paths.\n\n*-e/--env*\n    Comma-separated list of named virtual envs.\n\n``use``\n^^^^^^^\n\nActivates or sends a command to a virtual environment. A default shell\nname (or command) can be specified in the config file entry ``shell``. If\nthere is no entry nor shell option provided, a system default will be used:\n``cmd`` on Windows, ``bash`` otherwise.\n\nAny arguments provided after the first will be sent to the virtual env as\na command without activating it. If there is only the env without args,\nit will be activated similarly to how you are accustomed.\n\nActivation will not do anything to your current shell, but will rather\nspawn a subprocess to avoid any unwanted strangeness occurring in your\ncurrent environment. If you would like to learn more about the benefits\nof this approach, be sure to read `<https://gist.github.com/datagrok/2199506>`_.\nTo leave a virtual env, type ``exit``, or you can do ``Ctrl-D`` on non-Windows\nmachines.\n\nNon-nesting:\n\n.. code-block:: bash\n\n    $ hatch env -l\n    Virtual environments found in `/home/ofek/.local/share/hatch/venvs`:\n\n    fast ->\n      Version: 3.5.3\n      Implementation: PyPy\n    my-app ->\n      Version: 3.5.2\n      Implementation: CPython\n    old ->\n      Version: 2.7.12\n      Implementation: CPython\n    $ python -c \"import sys;print(sys.executable)\"\n    /usr/bin/python\n    $ hatch use my-app\n    (my-app) $ python -c \"import sys;print(sys.executable)\"\n    /home/ofek/.local/share/hatch/venvs/my-app/bin/python\n    (my-app) $ hatch use fast\n    (my-app) $ exit\n    (fast) $ python -c \"import sys;print(sys.executable)\"\n    /home/ofek/.local/share/hatch/venvs/fast/bin/python\n    (fast) $ exit\n    $\n\nNesting:\n\n.. code-block:: bash\n\n    $ hatch use my-app\n    (my-app) $ hatch use -n fast\n    2 (fast) $ hatch use -n old\n    3 (old) $ exit\n    2 (fast) $ exit\n    (my-app) $ exit\n    $\n\nCommands:\n\n.. code-block:: bash\n\n    $ hatch use my-app pip list --format=columns\n    Package    Version\n    ---------- -------\n    pip        9.0.1\n    setuptools 36.3.0\n    wheel      0.29.0\n    $ hatch use my-app hatch install -q requests six\n    $ hatch use my-app pip list --format=columns\n    Package    Version\n    ---------- -----------\n    certifi    2017.7.27.1\n    chardet    3.0.4\n    idna       2.6\n    pip        9.0.1\n    requests   2.18.4\n    setuptools 36.3.0\n    six        1.10.0\n    urllib3    1.22\n    wheel      0.29.0\n\n..\n\n    **Arguments:**\n\n*env_name*\n    The name of the desired virtual environment to use.\n\n*command*\n    The command to send to the virtual environment (optional).\n\n..\n\n    **Options:**\n\n*-s/--shell*\n    The name of shell to use e.g. ``bash``. If the shell name is not\n    supported, e.g. ``bash -O``, it will be treated as a command and\n    no custom prompt will be provided. This overrides the config file\n    entry ``shell``.\n\n*-n, --nest / -k, --kill*\n    Whether or not to nest shells, instead of killing them to mirror the\n    infamous activate script's behavior. Some shells can only be nested. By\n    default the shell will not be nested if possible. This flag overrides\n    the config file entry ``nest_shells``.\n\n``clean``\n^^^^^^^^^\n\nRemoves a project's build artifacts.\n\nThe path to the project is derived in the following order:\n\n1. The optional argument, which should be the name of a package\n   that was installed via ``hatch install -l`` or ``pip install -e``.\n2. The option --path, which can be a relative or absolute path.\n3. The current directory.\n\nAll ``*.pyc``/``*.pyd`` files and ``__pycache__`` directories will be removed.\nAdditionally, the following patterns will be removed from the root of the path:\n``.cache``, ``.coverage``, ``.eggs``, ``.tox``, ``build``, ``dist``, and ``*.egg-info``.\n\nIf the path was derived from the optional package argument, the pattern\n``*.egg-info`` will not be applied so as to not break that installation.\n\n..\n\n    **Arguments:**\n\n*package*\n    The editable package to target (optional).\n\n..\n\n    **Options:**\n\n*-p/--path*\n    A relative or absolute path to a project.\n\n*-c/--compiled-only*\n    Removes only .pyc files.\n\n*-v/--verbose*\n    Shows removed paths.\n\n``build``\n^^^^^^^^^\n\nBuilds a project, producing a source distribution and a wheel.\n\nThe path to the project is derived in the following order:\n\n1. The optional argument, which should be the name of a package\n   that was installed via ``hatch install -l`` or ``pip install -e``.\n2. The option --path, which can be a relative or absolute path.\n3. The current directory.\n\nThe path must contain a ``setup.py`` file.\n\n..\n\n    **Arguments:**\n\n*package*\n    The editable package to target (optional).\n\n..\n\n    **Options:**\n\n*-p/--path*\n    A relative or absolute path to a project.\n\n*-py/--python*\n    The named Python path to use. This overrides --pypath.\n\n*-pp/--pypath*\n    An absolute path to a Python executable.\n\n*-u/--universal*\n    Indicates compatibility with both Python 2 and 3.\n\n*-n/--name*\n    Forces a particular platform name, e.g. linux_x86_64.\n\n*-d/--build-dir*\n    An absolute path to the desired build directory.\n\n*-c/--clean*\n    Removes build artifacts before building.\n\n``release``\n^^^^^^^^^^^\n\nUploads all files in a directory to PyPI using Twine.\n\nThe path to the build directory is derived in the following order:\n\n1. The optional argument, which should be the name of a package\n   that was installed via ``hatch install -l`` or ``pip install -e``.\n2. The option --path, which can be a relative or absolute path.\n3. The current directory.\n\nIf the path was derived from the optional package argument, the\nfiles must be in a directory named ``dist``.\n\nThe PyPI username can be saved in the config file entry ``pypi_username``.\nIf the ``TWINE_PASSWORD`` environment variable is not set, a hidden prompt\nwill be provided for the password.\n\n..\n\n    **Arguments:**\n\n*package*\n    The editable package to target (optional).\n\n..\n\n    **Options:**\n\n*-p/--path*\n    A relative or absolute path to a build directory.\n\n*-u/--username*\n    The PyPI username to use.\n\n*-t/--test*\n    Uses the test version of PyPI.\n\n*-s/--strict*\n    Aborts if a distribution already exists.\n\n``install``\n^^^^^^^^^^^\n\nIf the option --env is supplied, the install will be applied using\nthat named virtual env. Unless the option --global is selected, the\ninstall will only affect the current user. Of course, this will have\nno effect if a virtual env is in use. The desired name of the admin\nuser can be set with the ``_DEFAULT_ADMIN_`` environment variable.\n\nWith no packages selected, this will install using a ``setup.py`` in the\ncurrent directory.\n\n..\n\n    **Arguments:**\n\n*packages*\n    The packages to install (optional).\n\n..\n\n    **Options:**\n\n*-e/--env*\n    The named virtual env to use.\n\n*-l/--local*\n    Corresponds to ``pip``'s --editable option, allowing a local package to be\n    automatically updated when modifications are made.\n\n*-g/--global*\n    Installs globally, rather than on a per-user basis. This has no effect if\n    a virtual env is in use.\n\n*-q/--quiet*\n    Decreases verbosity.\n\n``uninstall``\n^^^^^^^^^^^^^\n\nIf the option --env is supplied, the uninstall will be applied using\nthat named virtual env. Unless the option --global is selected, the\nuninstall will only affect the current user. Of course, this will have\nno effect if a virtual env is in use. The desired name of the admin\nuser can be set with the ``_DEFAULT_ADMIN_`` environment variable.\n\nWith no packages selected, this will uninstall using a ``requirements.txt``\nor a dev version of that in the current directory.\n\n..\n\n    **Arguments:**\n\n*packages*\n    The packages to uninstall (optional).\n\n..\n\n    **Options:**\n\n*-e/--env*\n    The named virtual env to use.\n\n*-g/--global*\n    Uninstalls globally, rather than on a per-user basis. This has no effect if\n    a virtual env is in use.\n\n*-d/--dev*\n    When locating a requirements file, only use the dev version.\n\n*-y/--yes*\n    Confirms the intent to uninstall without a prompt.\n\n*-q/--quiet*\n    Decreases verbosity.\n\n``update``\n^^^^^^^^^^\n\nIf the option --env is supplied, the update will be applied using\nthat named virtual env. Unless the option --global is selected, the\nupdate will only affect the current user. Of course, this will have\nno effect if a virtual env is in use. The desired name of the admin\nuser can be set with the ``_DEFAULT_ADMIN_`` environment variable.\n\nWhen performing a global update, your system may use an older version\nof pip that is incompatible with some features such as --eager. To\nforce the use of these features, use --force.\n\nWith no packages nor options selected, this will update packages by looking\nfor a ``requirements.txt`` or a dev version of that in the current directory.\n\nTo update this tool, use the --self flag. After the update, you may want\nto press Enter. All other methods of updating will ignore ``hatch``. See:\n`<https://github.com/pypa/pip/issues/1299>`_\n\n..\n\n    **Arguments:**\n\n*packages*\n    The packages to update (optional).\n\n..\n\n    **Options:**\n\n*-e/--env*\n    The named virtual env to use.\n\n*--eager*\n    Updates all dependencies regardless of whether they still satisfy the\n    new parent requirements. See: `<https://github.com/pypa/pip/pull/3972>`_\n\n*--all*\n    Updates all currently installed packages. The packages ``pip``,\n    ``setuptools``, and ``wheel`` are excluded.\n\n*--infra*\n    Updates only the packages ``pip``, ``setuptools``, and ``wheel``.\n\n*-g/--global*\n    Updates globally, rather than on a per-user basis. This has no effect if\n    a virtual env is in use.\n\n*-f/--force*\n    Forces the use of newer features in global updates.\n\n*-d/--dev*\n    When locating a requirements file, only use the dev version.\n\n*-m/--module*\n    Invokes ``pip`` as a module instead of directly, i.e. ``python -m pip``.\n\n*--self*\n    Updates ``hatch`` itself.\n\n*-q/--quiet*\n    Decreases verbosity.\n\nEnvironment awareness\n---------------------\n\nHatch will always try to use the correct python/pip, however, when a virtual\nenv is not in use, things get a bit ambiguous. Therefore, you can set the\n``_DEFAULT_PYTHON_`` and ``_DEFAULT_PIP_`` environment variables to a command\nname (recommended) or absolute path so the correct executable gets called. If\na virtual env is not in use and no env var is detected, the Python 3 versions\nwill be used on non-Windows machines.\n\nHere is the literal implementation:\n\n.. code-block:: python\n\n    def get_proper_python():\n        if not venv_active():\n            default_python = os.environ.get('_DEFAULT_PYTHON_')\n            if default_python:\n                return default_python\n            elif not ON_WINDOWS:\n                return 'python3'\n        return 'python'\n\n    def get_proper_pip():\n        if not venv_active():\n            default_pip = os.environ.get('_DEFAULT_PIP_')\n            if default_pip:\n                return default_pip\n            elif not ON_WINDOWS:\n                return 'pip3'\n        return 'pip'\n\nConfig file\n-----------\n\n*shell*\n    The shell name or command to use when activating virtual envs.\n\n*nest_shells*\n    Whether or not to nest shells, instead of killing them to prevent stacking.\n\n*pypaths*\n    Maps names to an absolute path to a Python executable.\n\n*semver*\n    Maps ``pre`` and ``build`` semver parts to a textual representation.\n\n*pypi_username*\n    The username to use when uploading to PyPI.\n\n*name*\n    Your name e.g. Bob Saget.\n\n*email*\n    Your email.\n\n*basic*\n    If true, disables third-party services and readme badges during project creation.\n\n*pyversions*\n    The default versions of Python to support. Must be in the form major.minor e.g.\n    ``3.7``. The values ``pypy`` and ``pypy3`` are also accepted.\n\n*licenses*\n    The default licenses to use. Defaults to\n    `dual MIT/Apache-2.0 <https://github.com/sfackler/rust-postgres-macros/issues/19>`_,\n    which is `desirable <https://github.com/facebook/react/issues/10191>`_.\n    Hatch currently supports:\n\n    - ``mit``, which represents the\n      `MIT License <https://choosealicense.com/licenses/mit>`_\n    - ``apache2``, which represents the\n      `Apache License, Version 2.0 <https://choosealicense.com/licenses/apache-2.0>`_\n    - ``mpl``, which represents the\n      `Mozilla Public License 2.0 <https://choosealicense.com/licenses/mpl-2.0>`_\n    - ``cc0``, which represents the\n      `Creative Commons Zero v1.0 Universal <https://choosealicense.com/licenses/cc0-1.0>`_\n\n*readme*\n    Mapping which helps construct your readme file. Hatch currently supports\n    ``rst`` and ``md`` for the ``format`` key.\n\n    Badges have the attributes ``image``, ``target``, and ``alt``. Any others\n    you add will become url parameters for the ``image``. Also, if a ``{}``\n    appears in the ``image`` or ``target``, the name of the created package\n    will be formatted there.\n\n*vc*\n    The version control system to initialize when creating a project. Hatch\n    currently only supports ``git``.\n\n*vc_url*\n    Your version control url e.g. ``https://github.com/ofek``.\n\n*ci*\n    A list of third-party service files to create. Hatch currently only supports ``travis``.\n    Can be empty.\n\n*coverage*\n    A code coverage service to use. Hatch currently only supports ``codecov``. Can be null.\n\n*extras*\n    A list of glob patterns to copy to new projects.\n\nContributing\n------------\n\nTODO\n^^^^\n\n*meta*\n    - start using AppVeyor\n    - next to the snake ascii art, put a ``hatch``\\ ed egg\n\n*issues*\n    - I really, really need help with\n      `this <https://github.com/ofek/hatch/blob/5293e418c52fb6b0417fcbff0ea17ccd01bbdab1/hatch/cli.py#L1347-L1363>`_\n\n*third-party services*\n    Support `AppVeyor <https://www.appveyor.com/>`_ and `CircleCI <https://circleci.com/>`_.\n\n*Commands*\n    - ``bench`` - use `<https://github.com/ionelmc/pytest-benchmark>`_\n    - ``style`` - maybe not needed. use `<https://github.com/PyCQA/flake8>`_\n    - ``docs`` - maybe not needed. use `<https://github.com/sphinx-doc/sphinx/>`_\n\nLicense\n-------\n\nHatch is distributed under the terms of both\n\n- `Apache License, Version 2.0 <https://choosealicense.com/licenses/apache-2.0>`_\n- `MIT License <https://choosealicense.com/licenses/mit>`_\n\nat your option.\n\nCredits\n-------\n\n- All the people who work on `Click <https://github.com/pallets/click>`_\n- All the people involved in the `Python packaging <https://github.com/pypa>`_ ecosystem\n- All the people involved in the `pytest`_ ecosystem\n- `Ned Batchelder <https://twitter.com/nedbat>`_, for his\n  `Coverage.py <https://github.com/nedbat/coveragepy>`_ is the unsung heroic tool of the\n  Python community. Without it, users would be exposed to more bugs before we are.\n- `Te-j\u00e9 Rodgers <https://github.com/te-je>`_ for bestowing me the name ``hatch`` on `PyPI`_\n\nHistory\n-------\n\nImportant changes are emphasized.\n\n0.4.0\n^^^^^\n\n- **Change:** ``egg`` command is now ``new``\n- Removed ``download_url`` attribute from ``setup.py``. See:\n  `<https://github.com/pypa/python-packaging-user-guide/pull/264>`_\n\n0.3.0\n^^^^^\n\n- Initial release\n\n.. _pytest: https://github.com/pytest-dev\n.. _PyPI: https://pypi.org\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ofek/hatch",
    "keywords": "productivity,virtual env,packaging,package manager,cookiecutter,project template,bump version,versioning,cleanup,testing,cli",
    "license": "MIT/Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hatch",
    "platform": "",
    "project_url": "https://pypi.org/project/hatch/",
    "release_url": "https://pypi.org/project/hatch/0.4.0/",
    "requires_dist": [
      "wheel (>=0.27.0)",
      "virtualenv",
      "twine (>=1.9.1)",
      "setuptools (>=36.0.0)",
      "semver (>=2.7.8)",
      "pytest",
      "pip (>=9.0.1)",
      "coverage",
      "click",
      "atomicwrites",
      "appdirs"
    ],
    "requires_python": "",
    "summary": "A modern project, package, and virtual env manager",
    "version": "0.4.0"
  },
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9e3d078973fcbae916d69cf629e05db0",
          "sha256": "9fa9e4943eda1431b7d37499bfb48ed4bcec57b8f1ad0304a920da9eb037306a"
        },
        "downloads": 0,
        "filename": "hatch-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e3d078973fcbae916d69cf629e05db0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 91075,
        "upload_time": "2017-09-05T06:24:23",
        "url": "https://files.pythonhosted.org/packages/8f/24/1acfd926630bcbe1b448fee71bed8ebde9d6b9f6e13716630f819a0de426/hatch-0.3.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9249101877eddf2ebe9a726b6ed9fd9f",
          "sha256": "a649d588f350c8db8d0309128656e59622b445914399318dd3db48f2381f4b47"
        },
        "downloads": 0,
        "filename": "hatch-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9249101877eddf2ebe9a726b6ed9fd9f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 73904,
        "upload_time": "2017-09-05T06:24:24",
        "url": "https://files.pythonhosted.org/packages/a4/8b/70cca9fa0c6d1520934fac987ed09cb0851088e983c49e311868db352c25/hatch-0.3.0.tar.gz"
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "167c30c9b4c219bea1f886badbd5f537",
          "sha256": "b151ea7971402a7ccc2e90751d6c908fce80f0b3a30153c5c90cf7314c439c53"
        },
        "downloads": 0,
        "filename": "hatch-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "167c30c9b4c219bea1f886badbd5f537",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 91122,
        "upload_time": "2017-09-05T16:15:53",
        "url": "https://files.pythonhosted.org/packages/0d/97/052a8eed4683ec09051c72470cd3dbe3ed0203036d93c6ac646ac375f08a/hatch-0.4.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9f6f29cd6109a6eab067e400f7916440",
          "sha256": "4534d858797ffaa2fb8a9af51940a390d699d9ae96aab4b9acdaab98c6663c56"
        },
        "downloads": 0,
        "filename": "hatch-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9f6f29cd6109a6eab067e400f7916440",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 73915,
        "upload_time": "2017-09-05T16:15:55",
        "url": "https://files.pythonhosted.org/packages/5b/1e/ed82346e1ac8de1e62e49ed6d1e2f9cc86c334814bde8fe69253d1407017/hatch-0.4.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "167c30c9b4c219bea1f886badbd5f537",
        "sha256": "b151ea7971402a7ccc2e90751d6c908fce80f0b3a30153c5c90cf7314c439c53"
      },
      "downloads": 0,
      "filename": "hatch-0.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "167c30c9b4c219bea1f886badbd5f537",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 91122,
      "upload_time": "2017-09-05T16:15:53",
      "url": "https://files.pythonhosted.org/packages/0d/97/052a8eed4683ec09051c72470cd3dbe3ed0203036d93c6ac646ac375f08a/hatch-0.4.0-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "9f6f29cd6109a6eab067e400f7916440",
        "sha256": "4534d858797ffaa2fb8a9af51940a390d699d9ae96aab4b9acdaab98c6663c56"
      },
      "downloads": 0,
      "filename": "hatch-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9f6f29cd6109a6eab067e400f7916440",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 73915,
      "upload_time": "2017-09-05T16:15:55",
      "url": "https://files.pythonhosted.org/packages/5b/1e/ed82346e1ac8de1e62e49ed6d1e2f9cc86c334814bde8fe69253d1407017/hatch-0.4.0.tar.gz"
    }
  ]
}