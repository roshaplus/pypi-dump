{
  "info": {
    "author": "Andrei Surzhan",
    "author_email": "surzhan.a.y@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Other Audience",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Topic :: Utilities"
    ],
    "description": "Description\n\n-----------\n\n\n\nUtility that allows to read and parse json config files.\n\n\n\nPossible to specify links to the default values in the config (See Usage\n\nsection).\n\n\n\nInstallation\n\n------------\n\n\n\n1. Install python 3.6+\n\n2. Ensure pip, setuptools, and wheel are installed and up to date\n\n\n\n``python -m pip install --upgrade pip setuptools wheel``\n\n\n\n3. Create virtual enviroment (make sure that is not part of the project)\n\n\n\n``python -m venv <ENV NAME>``\n\n\n\nor\n\n\n\n``python -m venv %path%\\to\\<ENV NAME>``\n\n\n\n4. Active virtual enviroment\n\n\n\n``%path%\\to\\<ENV NAME>\\Script\\activate``\n\n\n\n5. Install all project dependencies if needed\n\n\n\n``pip install -r requirements.txt``\n\n\n\nNOTE: if pypandoc didn\u2019t get installed. `Please install it\n\nmanually <https://pypi.python.org/pypi/pypandoc>`__\n\n\n\nUsage\n\n-----\n\n\n\nExample of the config file:\n\n\n\n::\n\n\n\n    C:\\User\\test\\qa_hotfix_config.json\n\n\n\n    {\n\n        \"defaults\": {\n\n            \"dataBaseUrl\": \"http://db:5000\"\n\n        },\n\n        \"dataBase1\": \"<defaults.dataBaseUrl>\",\n\n        \"dataBase2\": \"<defaults.dataBaseUrl>\"\n\n    }\n\n\n\n1. Specify that lib in your project dependencies\n\n2. Import\n\n   ``from jsonconfigparser.json_config_reader import JsonConfigReader``\n\n3. Create an instance of the class passing config folder path and\n\n   options\n\n\n\n::\n\n\n\n    config_path = 'C:\\User\\test'\n\n    json_config_reader = JsonConfigReader(config_path,\n\n                            options={'env': {'name': 'qa', 'branch': 'hotfix'},\n\n                                     'file_pattern': '{env[name]}_{env[branch]}_config'})\n\n    config = json_config_reader.get()\n\n    file_path = json_config_reader.get_config_file_path()\n\n    print(config['dataBase1'])\n\n    print(file_path)\n\n\n\n    >> http://db:5000\n\n    >> C:\\User\\test\\qa_hotfix_config.json\n\n\n\nNOTE: ``options`` is an optional argumet. It is possible to speficy\n\n``config_path`` as ``C:\\User\\test\\qa_hotfix_config.json``\n\n\n\nUploading project to PyPi\n\n-------------------------\n\n\n\n1. Change version in ``setup.py``\n\n2. Upload changes to PyPi server\n\n\n\n``python setup.py sdist upload -r <Repository URL to the PyPi server>``\n\n\n\nRun unit tests (Example for Visual Studio)\n\n------------------------------------------\n\n\n\n1. From Visual Studio\n\n\n\n   1. Click ``Test`` -> ``Run`` -> ``All Test``\n\n   2. View Test run in ``Test Explorer``\n\n\n\n2. From CLI\n\n\n\n   1. Navigate into project directory\n\n   2. ``python -m unittest``\n\n\n\nGenerate docs\n\n-------------\n\n\n\n1. Run ``easy_install -U sphinx``\n\n2. Navigate to ``docs`` folder\n\n3. Run ``sphinx-quickstart``\n\n\n\nUpdated documentation\n\n---------------------\n\n\n\n1. From project root directory run ``make clean`` to clean\n\n   ``./docs/_build`` folder\n\n2. Run ``make html`` to generate new documentation",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/AndreySurzhan/jsonconfigreader",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jsonconfigreader",
    "platform": "",
    "project_url": "https://pypi.org/project/jsonconfigreader/",
    "release_url": "https://pypi.org/project/jsonconfigreader/1.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Python JSON configuration reader and parser",
    "version": "1.1.0"
  },
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "976c65e742d40dee6f3d8cfdabd4a6c4",
          "sha256": "ae89f7870d60b204617793a4f67e66c4c20908e63f89e6a0e8fd23a8d3be9484"
        },
        "downloads": -1,
        "filename": "jsonconfigreader-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "976c65e742d40dee6f3d8cfdabd4a6c4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4215,
        "upload_time": "2017-12-23T16:42:57",
        "url": "https://files.pythonhosted.org/packages/68/d6/3fe7e7ad2719d201eb8374c23468290b6d05211c74437dc449d3fe2add3a/jsonconfigreader-1.0.2.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6d1f0e118ab16d8bdf625cefcad481a6",
          "sha256": "f547bfad05e972f578803ceb7700e0108808e71300c5a37ed2bea169d1335428"
        },
        "downloads": -1,
        "filename": "jsonconfigreader-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6d1f0e118ab16d8bdf625cefcad481a6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4005,
        "upload_time": "2017-12-28T20:02:04",
        "url": "https://files.pythonhosted.org/packages/6e/6f/fec554e5950ef38db27c96104a0767f4eccc135b8fc116225ac0d0af4741/jsonconfigreader-1.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "6d1f0e118ab16d8bdf625cefcad481a6",
        "sha256": "f547bfad05e972f578803ceb7700e0108808e71300c5a37ed2bea169d1335428"
      },
      "downloads": -1,
      "filename": "jsonconfigreader-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6d1f0e118ab16d8bdf625cefcad481a6",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4005,
      "upload_time": "2017-12-28T20:02:04",
      "url": "https://files.pythonhosted.org/packages/6e/6f/fec554e5950ef38db27c96104a0767f4eccc135b8fc116225ac0d0af4741/jsonconfigreader-1.1.0.tar.gz"
    }
  ]
}