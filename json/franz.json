{
  "info": {
    "author": "Carta, Inc.",
    "author_email": "engineering@carta.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Franz\n\nA lite wrapper around [Kafka](https://kafka.apache.org/) and [RabbitMQ](https://www.rabbitmq.com/).\n\n# Usage\n\n## Installation\n- `pip install franz` (recommended)\n- `pip -e git+git@github.com:eshares/franz.git@master#egg=franz`\n  - Change `@master` to a version or commit if required.\n \n## RabbitMQ\n### Sending a message\n```python\nimport random\nimport time\n\nimport franz\n\n\nclass FranzData(franz.FranzEvent):\n    def serialize(self):\n        return {'data': time.time()}\n\n\nwith franz.RabbitProducer(exchange='topic_link') as p:\n    while True:\n        key = random.choice(['hello.world', 'hello.bob'])\n        p.send_message(key, FranzData())\n        time.sleep(1)\n```\n\n### Consuming messages\n```python\nimport franz\n\ndef callback(ch, method, properties, body):\n    print('[+] {} from {}'.format(body, method.routing_key))\n\nwith franz.RabbitConsumer('hello.*', exchange='topic_link') as c:\n    c.consume_messages(callback)\n```\n\n\n## Kafka\n### Sending a message\n```python\nimport franz\nfrom myapp.models import SomeModel  # SomeModel must inherit `franz.FranzEvent`\n\ninstance = SomeModel.objects.get(pk=1)\nproducer = franz.KafkaProducer()\nproducer.send_message('TopicA', instance)\n```\n\n### Consuming messages\n```python\nimport franz\n\nconsumer = franz.KafkaConsumer('TopicA')\nfor message in consumer:\n    print(message.value)\n```\n\n### Kafka/Docker Resources\n\n- [Docker image](https://github.com/spotify/docker-kafka)\n- [Helpful article](https://howtoprogram.xyz/2016/07/21/using-apache-kafka-docker/)\n- Create topic\n```\n./kafka-topics.sh --create --topic test --replication-factor 1 --partitions 1 --zookeeper 0.0.0.0:2181\n```\n- Consuming\n```\n./kafka-console-consumer.sh --topic test --from-beginning --zookeeper 0.0.0.0:2181\n```\n- Producing\n```\n./kafka-console-producer.sh --topic test --broker-list 0.0.0.0:9092\n```\n",
    "docs_url": null,
    "download_url": "https://github.com/eshares/franz/tarball/0.0.2",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/eshares/franz",
    "keywords": "microservices broker event kafka rabbitmq",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "franz",
    "platform": "",
    "project_url": "https://pypi.org/project/franz/",
    "release_url": "https://pypi.org/project/franz/0.0.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Event broker built on top of kafka and rabbitmq; used to handle micro services message exchange.",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b099098c999c68032e7412d6d55eb8a3",
          "sha256": "4c77a3727e38f805322e4eac144517ff9a79c1722055306dcdb9f11d010a7cda"
        },
        "downloads": -1,
        "filename": "franz-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b099098c999c68032e7412d6d55eb8a3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2810,
        "upload_time": "2017-11-30T19:25:11",
        "url": "https://files.pythonhosted.org/packages/2f/79/20bbd51548144cf877cc2baaa2416853619f055df42b6e19a9061b3f68f4/franz-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fda332d137dbe57965b83f8cff45a0da",
          "sha256": "a13b9b991a5a7c49612a694ebd7153b9fd464f00c51ad258d25609733e948d6e"
        },
        "downloads": -1,
        "filename": "franz-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fda332d137dbe57965b83f8cff45a0da",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2820,
        "upload_time": "2017-11-30T19:42:13",
        "url": "https://files.pythonhosted.org/packages/5d/ed/e39d0f782981fd8b04a62c66fa6a412220cf0fef58042e94dc7558d9f0e4/franz-0.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fda332d137dbe57965b83f8cff45a0da",
        "sha256": "a13b9b991a5a7c49612a694ebd7153b9fd464f00c51ad258d25609733e948d6e"
      },
      "downloads": -1,
      "filename": "franz-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "fda332d137dbe57965b83f8cff45a0da",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 2820,
      "upload_time": "2017-11-30T19:42:13",
      "url": "https://files.pythonhosted.org/packages/5d/ed/e39d0f782981fd8b04a62c66fa6a412220cf0fef58042e94dc7558d9f0e4/franz-0.0.2.tar.gz"
    }
  ]
}