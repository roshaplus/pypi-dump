{
  "info": {
    "author": "XESS Corp.",
    "author_email": "info@xess.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "===============================\nskidl\n===============================\n\n.. .. image:: https://img.shields.io/travis/xesscorp/skidl.svg\n        :target: https://travis-ci.org/xesscorp/skidl\n\n.. image:: https://img.shields.io/pypi/v/skidl.svg\n        :target: https://pypi.python.org/pypi/skidl\n\n\nSKiDL is a module that allows you to compactly describe the interconnection of \nelectronic circuits and components using Python.\nThe resulting Python program performs electrical rules checking\nfor common mistakes and outputs a netlist that serves as input to\na PCB layout tool.\n\n* Free software: MIT license\n* Documentation: http://xesscorp.github.io/skidl\n\nFeatures\n--------\n\n* Has a powerful, flexible syntax (because it *is* Python).\n* Permits compact descriptions of electronic circuits (think about *not* tracing\n  signals through a multi-page schematic).\n* Allows textual descriptions of electronic circuits (think about using \n  ``diff`` and `git <https://en.wikipedia.org/wiki/Git_(software)>`_ for circuits).\n* Performs electrical rules checking (ERC) for common mistakes (e.g., unconnected device I/O pins).\n* Supports linear / hierarchical / mixed descriptions of electronic designs.\n* Fosters design reuse (think about using `PyPi <https://pypi.org/>`_ and `Github <https://github.com/>`_\n  to distribute electronic designs).\n* Makes possible the creation of *smart circuit modules* whose behavior / structure are changed parametrically\n  (think about filters whose component values are automatically adjusted based on your\n  desired cutoff frequency).\n* Can work with any ECAD tool (only two methods are needed: one for reading the part libraries and another\n  for outputing the correct netlist format).\n* Takes advantage of all the benefits of the Python ecosystem (because it *is* Python).\n\nAs a very simple example, the SKiDL program below describes a circuit that\ntakes an input voltage, divides it by three, and outputs it::\n\n    from skidl import *\n\n    gnd = Net('GND')  # Ground reference.\n    vin = Net('VI')   # Input voltage to the divider.\n    vout = Net('VO')  # Output voltage from the divider.\n    r1, r2 = 2 * Part('device', 'R', TEMPLATE)  # Create two resistors.\n    r1.value, r1.footprint = '1K',  'Resistors_SMD:R_0805'  # Set resistor values\n    r2.value, r2.footprint = '500', 'Resistors_SMD:R_0805'  # and footprints.\n    r1[1] += vin      # Connect the input to the first resistor.\n    r2[2] += gnd      # Connect the second resistor to ground.\n    vout += r1[2], r2[1]  # Output comes from the connection of the two resistors.\n\n    generate_netlist()\n\nAnd this is the output that can be fed to a program like KiCad's ``PCBNEW`` to\ncreate the physical PCB::\n\n    (export (version D)\n      (design\n        (source \"C:/Users/DEVB/PycharmProjects/test1\\test.py\")\n        (date \"08/12/2016 11:13 AM\")\n        (tool \"SKiDL (0.0.1)\"))\n      (components\n        (comp (ref R1)\n          (value 1K)\n          (footprint Resistors_SMD:R_0805))\n        (comp (ref R2)\n          (value 500)\n          (footprint Resistors_SMD:R_0805)))\n      (nets\n        (net (code 0) (name \"VI\")\n          (node (ref R1) (pin 1)))\n        (net (code 1) (name \"GND\")\n          (node (ref R2) (pin 2)))\n        (net (code 2) (name \"VO\")\n          (node (ref R1) (pin 2))\n          (node (ref R2) (pin 1))))\n    )\n\n\n\n\nHistory\n-------\n\n\n0.0.12 (2017-04-20)\n______________________\n\n* Use of builtin now works with Python 2 & 3.\n* Started using namedtuple in some places (like net traversal) for clarity.\n* Corrected pin-to-pin connections so if a net is created, it goes into the same Circuit the pins are members of.\n* Part templates can now contain a reference to a Circuit object that will be applied when the template is instantiated.\n* When pins are connected to nets, or nets to nets, the resulting set of connected nets are all given the same name.\n* Buses are not added to a Circuit object if they are already members of it. This fix caused the next problem.\n* Buses weren't getting added to the Circuit object because they already contained a reference to the Circuit. Fixed by clearing ref before adding to Circuit.\n* Created mini_reset() method to clear circuitry without clearing library cache so the libraries don't have to be loaded again (slow).\n* search() utility now prints the names of libraries as they are searched so user sees progress.\n* Fixed exceptions if part definition contained non-unicode stuff.\n* Hide exceptions that occur when using the show() utility.\n* More tests added for NC nets and hand-crafted parts.\n* default_circuit and the NC net for the active circuit are now made accessible in all modules using __builtin__.\n* Corrected error messages that referenced wrong/non-existing variable.\n* Inserted NO_LIB for the library if it doesn't exist when generating KiCad netlists or XML.\n* Attributes can now be passed when creating a Circuit object.\n* Pins are now associated with part when added to the part.\n* Minimum and maximum pins for a part are now computed as needed.\n* Each Circuit object now has its own NC net.\n* Added tests for bus movement and copying.\n* Implemented bus movement between Circuit objects.\n* Additional test cases were created.\n* Nets and Parts can now be removed from Circuits.\n* The circuit that pins and nets are in is now checked before connections are made so cross-circuit connections are not created.\n* Default members were added to Pin and Part objects so they would always exist and not cause errors when missing.\n* Implemented moving Parts and Nets from one circuit to another (almost).\n* Nets with no attached pins are now added to a circuit.\n* Re-wrote some tests to account for the presence of no-pin nets in a circuit.\n* A class method was missing its 'self' argument.\n* Fixed @subcircuit decorator so it won't cause an error if the function it decorates doesn't have a 'circuit' keyword argument.\n* Split the unit tests across multiple files. Added setup/teardown code.\n* Added capability to create multiple, independent Circuit objects to which Parts and Nets can be assigned. The default circuit is still the target if not Circuit is explicitly referenced.\n* Added IOError to exception list for opening a SKiDL part library.\n\n\n0.0.11 (2017-04-04)\n______________________\n\n* Part libraries in SKiDL format are now supported.\n* Parts can now be created on-the-fly and instantiated or added to libraries.\n* The parts used in a circuit can be stored in a backup SKiDL library and used if the original libraries are missing.\n* The KiCad standard part libraries were converted to SKiDL libraries and placed in skidl.libs.\n\n\n0.0.10 (2017-03-13)\n______________________\n\n* Nets without pins can now be merged.\n* Parts and Pins are now sorted when netlists are generated.\n* For an existing Bus, new bus lines can be inserted at any position or the bus can be extended.\n\n\n0.0.9 (2017-02-16)\n______________________\n\n* Use getattr() instead of __class__.__dict__ so that subclasses of SKiDL objects\n  can find attributes named within strings without searching the __mor__.\n\n\n0.0.8 (2017-01-11)\n______________________\n\n* skidl_to_netlist now uses templates.\n* Default operation of search() is now less exacting.\n* Traceback is now suppressed if show() is passed a part name not in a library.\n\n\n0.0.7 (2016-09-11)\n______________________\n\n* Lack of KISYSMOD environment variable no longer causes an exception.\n* requirements.txt file now references the requirements from setup.py.\n* Changed setup so it generates a pckg_info file with version, author, email.\n\n\n0.0.6 (2016-09-10)\n______________________\n\n* Fixed error caused when trying to find script name when SKiDL is run in interactive mode.\n* Silenced errors/warnings when loading KiCad part description (.dcm) files.\n\n\n0.0.5 (2016-09-07)\n______________________\n\n* SKiDL now searches for parts with a user-configurable list of library search paths.\n* Part descriptions and keywords are now loaded from the .dcm file associated with a .lib file.\n\n\n0.0.4 (2016-08-27)\n______________________\n\n* SKiDL scripts can now output netlists in XML format.\n\n\n0.0.3 (2016-08-25)\n______________________\n\n* Added command-line utility to convert netlists into SKiDL programs.\n\n\n0.0.2 (2016-08-17)\n______________________\n\n* Changed the link to the documentation.\n\n\n0.0.1 (2016-08-16)\n______________________\n\n* First release on PyPI.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/xesscorp/skidl",
    "keywords": "skidl electronic circuit schematics",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "skidl",
    "platform": "",
    "project_url": "https://pypi.org/project/skidl/",
    "release_url": "https://pypi.org/project/skidl/0.0.12/",
    "requires_python": "",
    "summary": "A Python package for textually describing electronic circuit schematics.",
    "version": "0.0.12"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5a3abb9ba20758d3cd59c016d835e9df",
          "sha256": "9ee6c9f8a7f77fdc225223a5b5ad4024bb90a7a03ecd4beef4821cf432dc4880"
        },
        "downloads": 156,
        "filename": "skidl-0.0.1.zip",
        "has_sig": false,
        "md5_digest": "5a3abb9ba20758d3cd59c016d835e9df",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 70436,
        "upload_time": "2016-08-16T19:12:16",
        "url": "https://files.pythonhosted.org/packages/7e/51/79f3458bad5cca6ba8d27cd39efff6f6361d87bdbe8476a1f4ac98615dd4/skidl-0.0.1.zip"
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c2c69d837bb03c42bebf8590fadabd12",
          "sha256": "cb9b2048cebfc4c67530f86bc1564b436a7b4dcbdcc3c8234a04572cefbb1bc1"
        },
        "downloads": 23,
        "filename": "skidl-0.0.10.zip",
        "has_sig": false,
        "md5_digest": "c2c69d837bb03c42bebf8590fadabd12",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 222641,
        "upload_time": "2017-03-13T16:08:50",
        "url": "https://files.pythonhosted.org/packages/35/1d/7221be9e71cd584db25f1c8937fa689c87e5b8350f70cbf45fb1c2294c61/skidl-0.0.10.zip"
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8fdbda810ef1353ffc473b002cf846d0",
          "sha256": "5fe654bc739ab51c9dc8bb4e4fd80b1cf216a14a416717c4472231cd0575f672"
        },
        "downloads": 29,
        "filename": "skidl-0.0.11.zip",
        "has_sig": false,
        "md5_digest": "8fdbda810ef1353ffc473b002cf846d0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 777563,
        "upload_time": "2017-04-04T15:52:04",
        "url": "https://files.pythonhosted.org/packages/31/f2/203ac4973db706bb35b74b490d211638e974421112b0063e598e440ac450/skidl-0.0.11.zip"
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ef4ead2c704744f63c1b9236a00cb460",
          "sha256": "eac54cd02c25727d33a4f96c911ba50a594bd37462bf9736190c171da8a692bd"
        },
        "downloads": 0,
        "filename": "skidl-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "ef4ead2c704744f63c1b9236a00cb460",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 694152,
        "upload_time": "2017-04-20T18:05:35",
        "url": "https://files.pythonhosted.org/packages/0a/fc/5af09ff256f77ac81716a70d19bac58c957a761660154e0867235ed71c55/skidl-0.0.12.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ce57d03c1533671749af2c68619a4572",
          "sha256": "67f3ad1f9123070d87aca84da0d7fea548485d41109ffa181ec5159ab6e65191"
        },
        "downloads": 105,
        "filename": "skidl-0.0.2.zip",
        "has_sig": false,
        "md5_digest": "ce57d03c1533671749af2c68619a4572",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 70457,
        "upload_time": "2016-08-17T18:55:30",
        "url": "https://files.pythonhosted.org/packages/25/4e/d0b66f1e9fb76912d074e5f43254611812001b2f04b5ff7acce13d6c1ffa/skidl-0.0.2.zip"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b83fada4e0c2c4c877e53229ebc0c79c",
          "sha256": "60839c141021a2b8ee891f3056b695fd3deac38b621e68637518bcce819355fb"
        },
        "downloads": 339,
        "filename": "skidl-0.0.3.zip",
        "has_sig": false,
        "md5_digest": "b83fada4e0c2c4c877e53229ebc0c79c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 235121,
        "upload_time": "2016-08-26T01:23:47",
        "url": "https://files.pythonhosted.org/packages/29/0b/313a1176ea7acf96a4042b35a5ab29bc0787ad1e756fb6a0570901d2b699/skidl-0.0.3.zip"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "afc6bb50d16fcc41bb51d53a208c9e44",
          "sha256": "c3a419d09fc309d6d4d6059b2647df769e4c8f0f41b4b395495ec0e2a8306b5b"
        },
        "downloads": 368,
        "filename": "skidl-0.0.4.zip",
        "has_sig": false,
        "md5_digest": "afc6bb50d16fcc41bb51d53a208c9e44",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 253451,
        "upload_time": "2016-08-28T03:36:50",
        "url": "https://files.pythonhosted.org/packages/f5/e7/b5ce5ddb38553d34437d7f9e756b9d80cff5dd86c912dac5db44b0812d40/skidl-0.0.4.zip"
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ced701c11f59842d572b8ca0955defc4",
          "sha256": "391ff48fb17cb6c74125d3530a2e556d9db97e95fe8d6d5bd9e5dfa1d91f966c"
        },
        "downloads": 270,
        "filename": "skidl-0.0.5.zip",
        "has_sig": false,
        "md5_digest": "ced701c11f59842d572b8ca0955defc4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 254479,
        "upload_time": "2016-09-07T18:00:45",
        "url": "https://files.pythonhosted.org/packages/11/1b/e0d6ff2be7b29ad4817a2a2518ee51430c73b07f70b790a8441e7f780862/skidl-0.0.5.zip"
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c0e0e0e39372ad522e6a9481e78286ba",
          "sha256": "1424b640c00942433f8561b7db1207ac2bd6523cb658f8561ebc5fe20802d7f3"
        },
        "downloads": 298,
        "filename": "skidl-0.0.6.zip",
        "has_sig": false,
        "md5_digest": "c0e0e0e39372ad522e6a9481e78286ba",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 254786,
        "upload_time": "2016-09-10T12:36:06",
        "url": "https://files.pythonhosted.org/packages/a3/e8/dbf5a2df1d2c913044fa70fa1f0ea10a783980b680da89d0d1bc47aac9c7/skidl-0.0.6.zip"
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ec03e49d09200028a541a8dd5f28def9",
          "sha256": "aa87d647db8685db04caf47fe80b77c29d1bcc967646f40dcb24489311dc9be8"
        },
        "downloads": 325,
        "filename": "skidl-0.0.7.zip",
        "has_sig": false,
        "md5_digest": "ec03e49d09200028a541a8dd5f28def9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 255384,
        "upload_time": "2016-09-11T17:47:01",
        "url": "https://files.pythonhosted.org/packages/8c/e5/4aa36b6299c6349e6a07f72b53d49bcb86a2d2f4381d90c6413b67db4cb2/skidl-0.0.7.zip"
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4c7facb3a0df8fad4b8db83ef1573700",
          "sha256": "268901ed7e68a9fb7d3e8f245ce7e6a631b324e31446ebf8dcb28bb137c27ba4"
        },
        "downloads": 7,
        "filename": "skidl-0.0.8.zip",
        "has_sig": false,
        "md5_digest": "4c7facb3a0df8fad4b8db83ef1573700",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 257117,
        "upload_time": "2017-01-11T21:03:57",
        "url": "https://files.pythonhosted.org/packages/ab/c2/e0f966f776439b21030ef3e0eb8d5f68f326139663bc9f66868f56fbcac6/skidl-0.0.8.zip"
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e42e9e12d662d9e30208312ae5f92031",
          "sha256": "19f656704c75b5a244eb04d561332cf20b0fd0ce84a8bc9835f99acf88270ac0"
        },
        "downloads": 9,
        "filename": "skidl-0.0.9.zip",
        "has_sig": false,
        "md5_digest": "e42e9e12d662d9e30208312ae5f92031",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 431095,
        "upload_time": "2017-02-17T01:15:12",
        "url": "https://files.pythonhosted.org/packages/77/32/344998a91166884448554521633a3ab373a01ae303c06d1c51c31defb0c6/skidl-0.0.9.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ef4ead2c704744f63c1b9236a00cb460",
        "sha256": "eac54cd02c25727d33a4f96c911ba50a594bd37462bf9736190c171da8a692bd"
      },
      "downloads": 0,
      "filename": "skidl-0.0.12.tar.gz",
      "has_sig": false,
      "md5_digest": "ef4ead2c704744f63c1b9236a00cb460",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 694152,
      "upload_time": "2017-04-20T18:05:35",
      "url": "https://files.pythonhosted.org/packages/0a/fc/5af09ff256f77ac81716a70d19bac58c957a761660154e0867235ed71c55/skidl-0.0.12.tar.gz"
    }
  ]
}