{
  "info": {
    "author": "Vikas Sharma",
    "author_email": "macvjuhu@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Security",
      "Topic :: System :: Networking :: Firewalls"
    ],
    "description": "## FMC REST CLIENT\nEasy to use REST Client for Firepower Management Center REST API\n\n### Features\n* Create object for FMC REST resources and perform CRUD operations\n* Maintains REST connection with FMC\n* Listing for a particular resource type supports fetching all results in single go\n* Easy to add support for new resources or url endpoints\n\n### Enhancements in future\n* Support for bulk operations, leveraging FMC REST API where available or support in client\n* Iterator for list operation\n* Get by name\n\n## How to use\n\n### Using REST Client\nCreate FMCRestClient instance\n```\nfmc = FMCRestClient(fmc_server_url, username, password)\n# create a resource instance\nhost1 = Host('host1', '1.1.1.1')\n# create in FMC\nhost1 = fmc.create(host1)\n# get all Host objects\nhosts = fmc.list(Host())\nfor host in hosts:\n    print(host.name)\n    print(host.json())\n# update value for host1\nhost1.value = '2.2.2.2'\nfmc.update(host1)\n# get host1 from FMC\nhost1 = fmc.load(host1)\nprint(host1.json())\n# delete host1 from FMC\nfmc.remove(host1)\n```\n### Adding a new FMC resource class\nTo add a new class representing FMC REST API resource, follow the below guideline\n * Class name should be singular name of the FMC REST resource or url endpoint.\n * The class should extend the appropriate base classes defined in 'fmc_rest_client.core.base_resources' module.\n * The member variables name should match the attribute names in json\n * Complex structure or nested attributes in json can be models as dictionary or another object of a class extending BaseContainedResource class.\n\n#### Examples <br>\n##### Resource having list attribute\nFor Network Group object we have following json -\n```\n{\n  \"id\": \"005056A9-0AC2-0ed3-0000-025769807771\",\n  \"name\": \"nog1\",\n  \"type\": \"NetworkGroup\"\n  \"objects\": {\n      \"type\": \"Range\",\n      \"id\": \"005056A9-0AC2-0ed3-0000-025769808881\",\n      \"name\": \"range1\",\n    }\n  ],\n  \"literals\": [\n    {\n      \"type\": \"Network\",\n      \"value\": \"1.2.3.0/24\"\n    }\n  ]\n}\n\n```\nA simple resource class for this can be like below -\n```\nclass NetworkGroup(ObjectResource):\n    def __init__(self, name=None, objects=None, literals=None):\n        super().__init__(name)\n        self.objects = objects\n        self.literals = literals\n```\nOr a complex resource class can look like following -\n```\nclass NetworkGroup(ObjectResource):\n    def __init__(self, name=None, objects=None, literals=None):\n        super().__init__(name)\n        if objects == None:\n            objects = []\n        super().__setattr__('objects',objects)\n        if literals == None:\n            literals = []\n        super().__setattr__('literals', literals)\n\n    def __setattr__(self, name, value):\n        if name in ['objects', 'literals']:\n            raise Exception(\"You cannot set value for attribute {}. Its a list, operate on that, \"\n                            \"e.g net_grp_obj.{}.append(host1)\".format(name, name))\n        else:\n            super().__setattr__(name, value)\n```\n##### Resource with complex structure\nRefer AccessPolicy and AccessRule class examples in fmc_rest_client.resources module.\nAccessPolicy uses a AccessPolicyDefaultAction for a nested structure for defaultAction field, while AccessRule\nuses a dict for field sourceNetworks.\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/macvjuhu/fmc_rest_client",
    "keywords": "firepower management rest-api",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fmc-rest-client",
    "platform": "",
    "project_url": "https://pypi.org/project/fmc-rest-client/",
    "release_url": "https://pypi.org/project/fmc-rest-client/0.2/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "FMC REST API Client",
    "version": "0.2"
  },
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cec3f3150adc08b37e54ba0a676558b5",
          "sha256": "e41f00d0776a2eace6622a0452b3b68dd232c1fe7a32a7bfa435482b8c8f3f6d"
        },
        "downloads": -1,
        "filename": "fmc_rest_client-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cec3f3150adc08b37e54ba0a676558b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 13412,
        "upload_time": "2017-10-31T03:19:40",
        "url": "https://files.pythonhosted.org/packages/99/5e/d4cac31e7042ff4da94a6943006cbcf2747316cf0cefc8ec13694460717e/fmc_rest_client-0.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f4892308898124405a5da99d55c45975",
          "sha256": "70ef7c1ba62bd9ce0c46534960931cfdea753ee5f19a3cbc03fe17e33060cdf8"
        },
        "downloads": -1,
        "filename": "fmc_rest_client-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f4892308898124405a5da99d55c45975",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8681,
        "upload_time": "2017-10-31T03:19:44",
        "url": "https://files.pythonhosted.org/packages/9a/54/43ddf6aed098c8e2e1c556fda6120d00cc1873dffd5d71c95282ab207af9/fmc_rest_client-0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "cec3f3150adc08b37e54ba0a676558b5",
        "sha256": "e41f00d0776a2eace6622a0452b3b68dd232c1fe7a32a7bfa435482b8c8f3f6d"
      },
      "downloads": -1,
      "filename": "fmc_rest_client-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cec3f3150adc08b37e54ba0a676558b5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 13412,
      "upload_time": "2017-10-31T03:19:40",
      "url": "https://files.pythonhosted.org/packages/99/5e/d4cac31e7042ff4da94a6943006cbcf2747316cf0cefc8ec13694460717e/fmc_rest_client-0.2-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "f4892308898124405a5da99d55c45975",
        "sha256": "70ef7c1ba62bd9ce0c46534960931cfdea753ee5f19a3cbc03fe17e33060cdf8"
      },
      "downloads": -1,
      "filename": "fmc_rest_client-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f4892308898124405a5da99d55c45975",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8681,
      "upload_time": "2017-10-31T03:19:44",
      "url": "https://files.pythonhosted.org/packages/9a/54/43ddf6aed098c8e2e1c556fda6120d00cc1873dffd5d71c95282ab207af9/fmc_rest_client-0.2.tar.gz"
    }
  ]
}