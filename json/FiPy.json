{
  "info": {
    "author": "Jonathan Guyer, Daniel Wheeler, & Jim Warren",
    "author_email": "fipy@nist.gov",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Environment :: X11 Applications",
      "Intended Audience :: Science/Research",
      "License :: Public Domain",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "========\nOverview\n========\n\n.. only:: latex\n\n   :term:`FiPy` is an object oriented, partial differential equation (PDE)\n   solver, written in :term:`Python`, based on a standard finite volume\n   (FV) approach. The framework has been developed in the Materials Science\n   and Engineering Division (MSED_) and Center for Theoretical and\n   Computational Materials Science (CTCMS_), in the Material Measurement\n   Laboratory (MML_) at the National Institute of Standards and Technology\n   (NIST_).\n\n   The solution of coupled sets of PDEs is ubiquitous to the numerical\n   simulation of science problems.  Numerous PDE solvers exist, using a\n   variety of languages and numerical approaches. Many are proprietary,\n   expensive and difficult to customize.  As a result, scientists spend\n   considerable resources repeatedly developing limited tools for\n   specific problems.  Our approach, combining the FV method and :term:`Python`,\n   provides a tool that is extensible, powerful and freely available. A\n   significant advantage to :term:`Python` is the existing suite of tools for\n   array calculations, sparse matrices and data rendering. \n\nThe :term:`FiPy` framework includes terms for transient diffusion,\nconvection and standard sources, enabling the solution of arbitrary\ncombinations of coupled elliptic, hyperbolic and parabolic PDEs. Currently\nimplemented models include phase field :cite:`BoettingerReview:2002`\n:cite:`ChenReview:2002` :cite:`McFaddenReview:2002` treatments of polycrystalline,\ndendritic, and electrochemical phase transformations, as well as drug\neluting stents :cite:`Saylor:2011p2794`, reactive wetting :cite:`PhysRevE.82.051601`,\nphotovoltaics :cite:`Hangarter:2011p2795` and a level set treatment of the\nelectrodeposition process :cite:`NIST:damascene:2001`.\n\n.. only:: latex\n  \n   The latest information about :term:`FiPy` can be found at\n   http://www.ctcms.nist.gov/fipy/.\n\n---------------------------------\nEven if you don't read manuals...\n---------------------------------\n\n...please read :ref:`INSTALLATION`, :ref:`USAGE` and :ref:`FAQ`, as well \nas :mod:`examples.diffusion.mesh1D`.\n\n--------------------------------\nWhat's new in version |release|?\n--------------------------------\n\nThe significant changes since version 3.0 are:\n\n- Level sets are now handled by :ref:`LSMLIBDOC` or :ref:`SCIKITFMM` \n  solver libraries. These libraries are orders of magnitude faster than the \n  original, :term:`Python`-only prototype.\n- The :term:`Matplotlib` :func:`streamplot()` function can be used to display \n  vector fields.\n- Version control was switched to the Git_ distributed version control \n  system. This system should make it much easier for :term:`FiPy` users to \n  participate in development.\n\nTickets fixed in this release::\n    \n    62  \"Move 'ImplicitDiffusionTerm().solve(var) == 0' \"\"failure\"\" from examples.phase.simple to examples.diffusion.mesh1D?\"\n    118 subscriber()._markStale() AttributeError\n    138 `numerix.dot` doesn't support tensors\n    143 \"Trying to \"\"solve\"\" an integer `CellVariable` should raise an error\"\n    195 broken arithmetic face to cell distance calculations\n    197 ~binOp doesn't work on branches/version-2_0\n    305 add rhie chow correction term in stokes cavity example\n    321 Windows interactive plotting mostly broken\n    324 --pysparse configuration should never attempt MPI imports\n    341 Fix fipy.terms._BinaryTerm test failure in parallel\n    365 Rename GridXD\n    368 Error adding meshes\n    370 Epetra Norm2 failure in parallel\n    383 move FiPy to distributed version control\n    385 `diffusionTerm._test()` requires PySparse\n    391 efficiency_test chokes on liquidVapor2D.py\n    432 LSMLIB refactor\n    441 Explicit convetion terms should fail when the equation has no TransientTerm (dt=None)\n    445 getFaceCenters() should return a FaceVariable\n    448 Gmsh2D does not respect background mesh\n    452 Gmsh background mesh doesn't work in parallel\n    453 faceValue as FaceCenters gives inline failures\n    454 Assorted errors\n    456 Web page links seem to be broken\n    457 Make the citation links go to the DOI links\n    460 Clean up interaction between dependencies and installation process\n    461 SvnToGit clean up\n    462 Fix for test failures on loki\n    465 sign issues for equation with transient, convection and implicit terms\n    466 \"multiplying equation by \"\"x\"\" changes the solution\"\n    469 text in source:trunk/examples/convection/source.py is out of date\n    470 Include mailing list activity frame on front page\n    473 Gmsh importer can't read mesh elements with no tags\n    475 getVersion() fails on Py3k\n    477 Update Ohloh to point at git repo\n    480 link to mailing list is wrong\n    481 constrain should return a handle to the constraint for later deletion\n    484 NIST CSS changed\n    486 Using `Popen('gmsh ...', shell=True)` rather than `shell=False` security danger\n    490 Parallel bug in non-uniform grids and conflicting mesh class and factory function names\n    491 Rename communicator instances\n    492 unOps can't be pickled\n    493 Change documentation to promote use of stackoverflow\n    494 Viewers don't inline well in IPython notebook\n    496 FIPY_DISPLAY_MATRIX is broken\n    497 examples/phase/binary.py has problems\n    513 convection problem with cylindrical grid\n    539 Bug with numpy 1.7.0\n    557 NumPy 1.7.0 doesn't have _formatInteger\n    564 VanLeerConvectionTerm MinMod slope limiter is broken\n    638 numpy 1.7.1 test failures with physicalField.py\n    639 Neumann boundary conditions not clearly documented\n    641 Add support for Matplotlib streamplot\n    648 Peclet inequalities have the wrong sign\n    650 CylindricalNonUniformGrid2D doesn't make a FaceVariable for exteriorFaces\n    652 Documentation change for Ubuntu install\n    653 enable google analytics\n    654 Switch to sphinxcontrib-bibtex\n    655 Home page needs out-of-NIST redirects\n\n.. warning::\n\n   :term:`FiPy` 3 brought unavoidable syntax changes from :term:`FiPy` 2.\n   Please see :mod:`examples.updating.update2_0to3_0` for guidance on the\n   changes that you will need to make to your :term:`FiPy` 2.x scripts.\n\n.. _Git: http://git-scm.com/ \n\n-------------------------\nDownload and Installation\n-------------------------\n\nPlease refer to :ref:`INSTALLATION` for details on download and\ninstallation. :term:`FiPy` can be redistributed and/or modified\nfreely, provided that any derivative works bear some notice that they\nare derived from it, and any modified versions bear some notice that\nthey have been modified.\n\n-------\nSupport\n-------\n\nYou can communicate with the :term:`FiPy` developers and with other\nusers via our `mailing list`_ and we welcome you to use the `issue\ntracker`_ for bugs, support requests, feature requests and patch\nsubmissions <https://github.com/usnistgov/fipy/issues>. We also monitor \nStackOverflow_ for questions tagged with \"fipy\". We welcome\ncollaborative efforts on this project.\n\n:term:`FiPy` is a member of MatForge_, a project of the `Materials\nDigital Library Pathway`_. This National Science Foundation funded\nservice provides a \"wiki\" space for public contributions of\ncode snippets, discussions, and tutorials and hosts our testing framework.\n\n.. toctree::\n\n   documentation/MAIL\n\n------------------------\nConventions and Notation\n------------------------\n\n:term:`FiPy` is driven by :term:`Python` script files than you can view or modify in any\ntext editor.  :term:`FiPy` sessions are invoked from a command-line shell, such\nas :command:`tcsh` or :command:`bash`.\n\nThroughout, text to be typed at the keyboard will appear ``like this``.\nCommands to be issued from an interactive shell will appear::\n\n    $ like this\n\nwhere you would enter the text (\"``like this``\") following the shell prompt,\ndenoted by \"``$``\".\n\nText blocks of the form::\n\n    >>> a = 3 * 4\n    >>> a\n    12\n    >>> if a == 12:\n    ...     print \"a is twelve\"\n    ...\n    a is twelve\n\nare intended to indicate an interactive session in the :term:`Python` interpreter.\nWe will refer to these as \"interactive sessions\" or as \"doctest blocks\".\nThe text \"``>>>``\" at the beginning of a line denotes the *primary prompt*,\ncalling for input of a :term:`Python` command.  The text \"``...``\" denotes the\n*secondary prompt*, which calls for input that continues from the line\nabove, when required by :term:`Python` syntax.  All remaining lines, which begin\nat the left margin, denote output from the :term:`Python` interpreter.  In all\ncases, the prompt is supplied by the :term:`Python` interpreter and should not be\ntyped by you.\n\n.. warning::\n\n   :term:`Python` is sensitive to indentation and care should be taken to enter\n   text exactly as it appears in the examples.\n\nWhen references are made to file system paths, it is assumed that the\ncurrent working directory is the :term:`FiPy` distribution directory, refered to\nas the \"base directory\", such that::\n\n    examples/diffusion/steadyState/mesh1D.py\n\nwill correspond to, *e.g.*::\n\n    /some/where/FiPy-X.Y/examples/diffusion/steadyState/mesh1D.py\n\nPaths will always be rendered using POSIX conventions (path elements\nseparated by \"``/``\").  Any references of the form::\n\n    examples.diffusion.steadyState.mesh1D\n\nare in the :term:`Python` module notation and correspond to the equivalent POSIX\npath given above.\n\nWe may at times use a \n\n.. note::\n\n   to indicate something that may be of interest\n\nor a\n\n.. warning::\n\n   to indicate something that could cause serious problems.\n\n.. _MML:                  http://www.nist.gov/mml/\n.. _CTCMS:                http://www.ctcms.nist.gov/\n.. _MSED:                 http://www.nist.gov/mml/msed/\n.. _NIST:                 http://www.nist.gov/\n.. _compressed archive:   http://www.ctcms.nist.gov/fipy/download/FiPy-1.1.tar.gz\n.. _issue tracker:        https://github.com/usnistgov/fipy/issues\n.. _mailing list:         http://www.ctcms.nist.gov/fipy/documentation/MAIL.html\n.. _Sourceforge:          http://www.sourceforge.net/projects/fipy\n.. _Materials Digital Library Pathway: http://matdl.org\n.. _MatForge:             http://matforge.org/\n.. _StackOverflow:        http://stackoverflow.com/questions/tagged/fipy",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://www.ctcms.nist.gov/fipy/",
    "keywords": null,
    "license": "------------\n        Terms of Use\n        ------------\n        \n        This software was developed at the `National Institute of Standards\n        and Technology`_ by employees of the Federal Government in the course\n        of their official duties.  Pursuant to `title 17 section 105`_ of the\n        United States Code this software is not subject to copyright\n        protection and is in the public domain.  FiPy is an experimental\n        system.  NIST_ assumes no responsibility whatsoever for its use by\n        other parties, and makes no guarantees, expressed or implied, about\n        its quality, reliability, or any other characteristic.  We would\n        appreciate acknowledgement if the software is used.\n        \n        This software can be redistributed and/or modified freely\n        provided that any derivative works bear some notice that they are\n        derived from it, and any modified versions bear some notice that\n        they have been modified.\n        \n        \n        .. _National Institute of Standards and Technology: http://www.nist.gov/\n        .. _NIST:                 http://www.nist.gov/\n        .. _title 17 section 105: http://uscode.house.gov/uscode-cgi/fastweb.exe?getdoc+uscview+t17t20+9+0++",
    "maintainer": null,
    "maintainer_email": null,
    "name": "FiPy",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/FiPy/",
    "release_url": "https://pypi.org/project/FiPy/3.1.3/",
    "requires_python": null,
    "summary": "A finite volume PDE solver in Python",
    "version": "3.1.3"
  },
  "releases": {
    "0.1": [],
    "2.1": [],
    "2.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6d18c1a7f0c220dc6a762c0dd74d195d",
          "sha256": "d08fe77e5f127853cf185e775b3cd6ba6c21703dceb8d133976c238e70a50177"
        },
        "downloads": 4574,
        "filename": "FiPy-2.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6d18c1a7f0c220dc6a762c0dd74d195d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2384704,
        "upload_time": "2011-05-06T22:17:27",
        "url": "https://files.pythonhosted.org/packages/2b/59/8f2295cc1fcf5dd6a71635f20f85458660128889514e63f8f1f8738eb4ef/FiPy-2.1.2.tar.gz"
      }
    ],
    "3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "41a6b68fae2498d8129781c87c7c1f43",
          "sha256": "405e35fea921a57bf2a206ab0a805632198609dd0b95a2268f1b2f4ad7d43761"
        },
        "downloads": 4494,
        "filename": "FiPy-3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "41a6b68fae2498d8129781c87c7c1f43",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2342182,
        "upload_time": "2012-08-21T15:52:10",
        "url": "https://files.pythonhosted.org/packages/06/be/611855b59c08f4aa8b0aadde6a609f7159254c6c8bd82ed9a8fcd2485be4/FiPy-3.0.tar.gz"
      }
    ],
    "3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2bde149633f54c5375e030994daf78da",
          "sha256": "54a4bc2ed6562bd402890ddd257220cf092438db1941427035412813415bd0c7"
        },
        "downloads": 12980,
        "filename": "FiPy-3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2bde149633f54c5375e030994daf78da",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5705309,
        "upload_time": "2013-12-12T14:43:26",
        "url": "https://files.pythonhosted.org/packages/f8/19/7be806173ba563d7a05f760b0af39915ecadf8f4f1a50b380888d64ca002/FiPy-3.1.tar.gz"
      }
    ],
    "3.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b9f87f145b897f3ca193b5b961f208d5",
          "sha256": "88d72fea482492634696e7f8705c604c138264b64765ca4dd62245360f704f4b"
        },
        "downloads": 73,
        "filename": "FiPy-3.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b9f87f145b897f3ca193b5b961f208d5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5640711,
        "upload_time": "2017-01-18T04:51:34",
        "url": "https://files.pythonhosted.org/packages/46/74/4f214247c4063f6e00837b31a1f836b659ead172e1abae702540eaaaef94/FiPy-3.1.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b9f87f145b897f3ca193b5b961f208d5",
        "sha256": "88d72fea482492634696e7f8705c604c138264b64765ca4dd62245360f704f4b"
      },
      "downloads": 73,
      "filename": "FiPy-3.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "b9f87f145b897f3ca193b5b961f208d5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5640711,
      "upload_time": "2017-01-18T04:51:34",
      "url": "https://files.pythonhosted.org/packages/46/74/4f214247c4063f6e00837b31a1f836b659ead172e1abae702540eaaaef94/FiPy-3.1.3.tar.gz"
    }
  ]
}