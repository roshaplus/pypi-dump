{
  "info": {
    "author": "SET by Conversant",
    "author_email": "adrielvelazquez@gmail.com",
    "bugtrack_url": "",
    "classifiers": [],
    "description": "SQLAlchemy Sphinx\r\n=================\r\n\r\nSQLAlchemy Sphinx is a dialect for SQLalchemy which converts SQLAlchemy\r\nmodel into compatible sql for sphinx.\r\n\r\nThis dialect works for both python 2 and 3. Currently you need to import\r\nsqlalchemy\\_sphinx to properly register for python 3.\r\n\r\nInstallation\r\n------------\r\n\r\nSQLAlchemy Sphinx is available on pypi under the package name\r\n``sqlalchemy-sphinx``, you can get it by running:\r\n\r\n.. code:: sh\r\n\r\n    pip install sqlalchemy-sphinx\r\n\r\nUsage\r\n-----\r\n\r\nDefining a Sphinx SQLAlchemy is exactly the same way you would create a\r\nsqlalchemy model.\r\n\r\n.. code:: python\r\n\r\n\r\n    from sqlalchemy import create_engine, Column, Integer, String, BigInteger, Unicode, Enum\r\n    from sqlalchemy.ext.declarative import declarative_base\r\n    from sqlalchemy.orm import deferred, sessionmaker\r\n\r\n    sphinx_engine = create_engine('sphinx://your.sphinx.host:9008')\r\n    SphinxBase = declarative_base(bind=sphinx_engine)\r\n    SphinxSession = sessionmaker(bind=sphinx_engine)\r\n    sphinx_session = SphinxSession()\r\n\r\n\r\n    class MockSphinxModel(Base):\r\n        __tablename__ = \"mock_table\"\r\n        name = Column(String)\r\n        id = Column(Integer, primary_key=True)\r\n        country = Column(String)\r\n        ranker = deferred(Column(String))\r\n        group_by_dummy = deferred(Column(String))\r\n        max_matches = deferred(Column(String))\r\n        field_weights = deferred(Column(String))\r\n\r\nAfter the model is created we can run queries against the model:\r\n\r\n.. code:: python\r\n\r\n    query = session.query(MockSphinxModel).limit(100)\r\n    # 'SELECT name, id, country FROM mock_table LIMIT 0, 100'\r\n\r\nWe can also do matching\r\n\r\n.. code:: python\r\n\r\n    base_query = session.query(MockSphinxModel.id)\r\n    query = base_query.filter(MockSphinxModel.country.match(\"US\"))\r\n    # \"SELECT id FROM mock_table WHERE MATCH('(@country US)')\"\r\n\r\n    query = base_query.filter(MockSphinxModel.name.match(\"adriel\"), MockSphinxModel.country.match(\"US\"))\r\n    # \"SELECT id FROM mock_table WHERE MATCH('(@name adriel) (@country US)')\"\r\n\r\nOptions:\r\n\r\n.. code:: python\r\n\r\n    query = session.query(MockSphinxModel.id)\r\n    query = query.filter(func.options(MockSphinxModel.field_weights == [\"title=10\", \"body=3\"]))\r\n    # 'SELECT id FROM mock_table OPTION field_weights=(title=10, body=3)'\r\n\r\n    query = session.query(MockSphinxModel.id)\r\n    query = query.filter(MockSphinxModel.country.match(\"US\"), func.options(MockSphinxModel.max_matches == 1))\r\n    # \"SELECT id FROM mock_table WHERE MATCH('(@country US)') OPTION max_matches=1\"",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/AdrielVelazquez/sqlalchemy-sphinx",
    "keywords": "SQLAlchemy Sphinx",
    "license": "",
    "maintainer": "Adriel Velazquez",
    "maintainer_email": "adrielvelazquez@gmail.com",
    "name": "sqlalchemy_sphinx",
    "platform": "Python",
    "project_url": "https://pypi.org/project/sqlalchemy_sphinx/",
    "release_url": "https://pypi.org/project/sqlalchemy_sphinx/0.8.3/",
    "requires_python": null,
    "summary": "SQLAlchemy extension for dealing with SphinxQL",
    "version": "0.8.3"
  },
  "releases": {
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a24ea8e6600058a5992e31a91ee78553",
          "sha256": "beb3a561eb0778d951e0cb403b6da1585326c4db40530f0bbe55ae5db0d88bda"
        },
        "downloads": 446,
        "filename": "sqlalchemy_sphinx-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a24ea8e6600058a5992e31a91ee78553",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5253,
        "upload_time": "2016-02-25T21:03:03",
        "url": "https://files.pythonhosted.org/packages/df/e5/10656dbb6ce75be26eb81c4fda57698609f0002541440fd7c7286d698eb6/sqlalchemy_sphinx-0.8.1.tar.gz"
      }
    ],
    "0.8.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a608294f5300266332e12454813eea83",
          "sha256": "2b8e9731391705e4e6d3a36915be9dc590bbf7c1aeea275fa16c9da4d20ba365"
        },
        "downloads": 424,
        "filename": "sqlalchemy_sphinx-0.8.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a608294f5300266332e12454813eea83",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5455,
        "upload_time": "2016-02-25T21:13:07",
        "url": "https://files.pythonhosted.org/packages/69/f8/b2f7a19c9e22e18c7d0e38e277c0c3b27939c118951b2e1ca4c8366aec61/sqlalchemy_sphinx-0.8.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a608294f5300266332e12454813eea83",
        "sha256": "2b8e9731391705e4e6d3a36915be9dc590bbf7c1aeea275fa16c9da4d20ba365"
      },
      "downloads": 424,
      "filename": "sqlalchemy_sphinx-0.8.3.tar.gz",
      "has_sig": false,
      "md5_digest": "a608294f5300266332e12454813eea83",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5455,
      "upload_time": "2016-02-25T21:13:07",
      "url": "https://files.pythonhosted.org/packages/69/f8/b2f7a19c9e22e18c7d0e38e277c0c3b27939c118951b2e1ca4c8366aec61/sqlalchemy_sphinx-0.8.3.tar.gz"
    }
  ]
}