{
  "info": {
    "author": "VRT Systems",
    "author_email": "support@vrt.com.au",
    "bugtrack_url": "https://github.com/vrtsystems/hszinc/issues",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: No Input/Output (Daemon)",
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "HSZinc\n======\n\n.. image:: https://travis-ci.org/vrtsystems/hszinc.svg?branch=master\n    :target: https://travis-ci.org/vrtsystems/hszinc\n.. image:: https://coveralls.io/repos/vrtsystems/hszinc/badge.svg?branch=master&service=github\n    :target: https://coveralls.io/github/vrtsystems/hszinc?branch=master\n\nHSZinc is an implementation of the `ZINC`_ grid serialisation format used in\n`Project Haystack`_.  Additionally, the module implements code for parsing and\ndumping grids in the JSON format.\n\nThe aim of this project is to provide a simple Python module that allows easy\nmanipulation of Project Haystack grids in both ZINC and JSON formats.\n\nREQUIREMENTS\n============\n\n- `parsimonious`_\n- `pytz`_\n- `iso8601`_\n- `six`_\n\nTYPICAL USAGE\n=============\n\nMaking a grid\n-------------\n\n::\n\n  Python 2.7.10 (default, Dec 26 2015, 09:36:51)\n  Type \"copyright\", \"credits\" or \"license\" for more information.\n\n  IPython 2.2.0 -- An enhanced Interactive Python.\n  ?         -> Introduction and overview of IPython's features.\n  %quickref -> Quick reference.\n  help      -> Python's own help system.\n  object?   -> Details about 'object', use 'object??' for extra details.\n\n  In [1]: import hszinc\n\n  In [2]: import datetime\n\n  In [3]: g = hszinc.Grid()\n\n  In [4]: g.metadata['aMarker'] = hszinc.MARKER\n\n  In [5]: g.metadata['today'] = datetime.date.today()\n\n  In [6]: g.column['firstColumn'] = {'metaData':'in no particular order', 'abc': 123}\n\n  In [7]: g.column['secondColumn'] = {}\n\n  In [8]: g.extend([\n    {'firstColumn': hszinc.Quantity(154, 'commits'), 'secondColumn': 'and counting'},\n    {'firstColumn': hszinc.MARKER, 'secondColumn': 'supported on Python 2.7 and 3.x'},\n    {'firstColumn': hszinc.Coordinate(-27.4725,153.003), 'secondColumn': 'Made in Australia from local and imported ingredients'},\n  ])\n\n  In [9]: print hszinc.dump(g)\n  ver:\"2.0\" aMarker today:2016-01-18\n  firstColumn abc:123 metaData:\"in no particular order\",secondColumn\n  154commits,\"and counting\"\n  M,\"supported on Python 2.7 and 3.x\"\n  C(-27.472500,153.003000),\"Made in Australia from local and imported ingredients\"\n\n\n  In [10]: print hszinc.dump(g, mode=hszinc.MODE_JSON)\n  {\"rows\": [{\"secondColumn\": \"s:and counting\", \"firstColumn\": \"n:154.000000 commits\"}, {\"secondColumn\": \"s:supported on Python 2.7 and 3.x\", \"firstColumn\": \"m:\"}, {\"secondColumn\": \"s:Made in Australia from local and imported ingredients\", \"firstColumn\": \"c:-27.472500,153.003000\"}], \"meta\": {\"ver\": \"2.0\", \"aMarker\": \"m:\", \"today\": \"d:2016-01-18\"}, \"cols\": [{\"abc\": \"n:123.000000\", \"name\": \"firstColumn\", \"metaData\": \"s:in no particular order\"}, {\"name\": \"secondColumn\"}]}\n\nParsing a grid in ZINC format\n-----------------------------\n\n`parse` returns a list of grids found in the input text.  Since there can be\nmore than one grid in a block of text, we process all grids found and return\na list.\n\n::\n\n  Python 2.7.10 (default, Dec 26 2015, 09:36:51)\n  Type \"copyright\", \"credits\" or \"license\" for more information.\n\n  IPython 2.2.0 -- An enhanced Interactive Python.\n  ?         -> Introduction and overview of IPython's features.\n  %quickref -> Quick reference.\n  help      -> Python's own help system.\n  object?   -> Details about 'object', use 'object??' for extra details.\n\n  In [1]: import hszinc\n\n  In [2]: grids = hszinc.parse('''ver:\"2.0\" database:\"test\" dis:\"Site Energy Summary\"\n  siteName dis:\"Sites\", val dis:\"Value\" unit:\"kW\"\n  \"Site 1\", 356.214kW\n  \"Site 2\", 463.028kW''')\n\n  In [3]: grids\n  Out[3]: [<hszinc.grid.Grid at 0x7fb9eb7ee990>]\n\n  In [4]: g = grids.pop(0)\n\n  In [5]: g.metadata\n  Out[5]: MetadataObject{'database'=u'test', 'dis'=u'Site Energy Summary'}\n\n  In [6]: g.column\n  Out[6]: SortableDict{'siteName'=MetadataObject{'dis'=u'Sites'}, 'val'=MetadataObject{'dis'=u'Value', 'unit'=u'kW'}}\n\n  In [7]: g[:]\n  Out[7]:\n  [{'siteName': u'Site 1', 'val': Quantity(356.214, 'kW')},\n   {'siteName': u'Site 2', 'val': Quantity(463.028, 'kW')}]\n\nParsing a grid in JSON format\n-----------------------------\n\nThe Project Haystack site only defines how individual grids are handled, and\nwhen given a single grid, we return just that grid.  Otherwise if multiple grids\nare placed in a JSON array, they will be returned as a list:\n\n::\n\n  In [1]: import hszinc\n\n  In [2]: grids = hszinc.parse('''{\n    \"meta\": {\"ver\":\"2.0\", \"projName\":\"test\"},\n    \"cols\":[\n      {\"name\":\"dis\", \"dis\":\"Equip Name\"},\n      {\"name\":\"equip\"},\n      {\"name\":\"siteRef\"},\n      {\"name\":\"installed\"}\n    ],\n    \"rows\":[\n      {\"dis\":\"RTU-1\", \"equip\":\"m:\", \"siteRef\":\"r:153c-699a HQ\", \"installed\":\"d:2005-06-01\"},\n      {\"dis\":\"RTU-2\", \"equip\":\"m:\", \"siteRef\":\"r:153c-699a HQ\", \"installed\":\"d:999-07-12\"}\n    ]\n  }''', mode=hszinc.MODE_JSON)\n\n  In [3]: grids\n  Out[3]: <hszinc.grid.Grid at 0x7f2ce556f990>\n\n  In [4]: grids.metadata\n  Out[4]: MetadataObject{u'projName'=u'test'}\n\n  In [5]: grids.column\n  Out[5]: SortableDict{u'dis'={u'dis': u'Equip Name'}, u'equip'={}, u'siteRef'={}, u'installed'={}}\n\n  In [6]: grids[:]\n  Out[6]:\n  [{u'dis': u'RTU-1',\n    u'equip': MARKER,\n    u'installed': datetime.date(2005, 6, 1),\n    u'siteRef': Ref(u'153c-699a', u'HQ', True)},\n   {u'dis': u'RTU-2',\n    u'equip': MARKER,\n    u'installed': u'd:999-07-12',\n    u'siteRef': Ref(u'153c-699a', u'HQ', True)}]\n\nWorking with grids\n------------------\n\nThe grid itself behaves like a `list` containing `dict` objects, one per row.\nThe usual insert/append/extend methods as well as the `del`, `len` and `[]`\noperators work the way the ones in `list` do.  Iterating over the grid iterates\nover its rows.\n\nGrid metadata is represented by the `MetadataObject` class, a subclass of\n`SortableDict`.  `SortableDict` behaves like a regular `dict`, except that it\nmaintains the order of keys.  New values can be `insert`-ed at any point in the\n`SortableDict`, or the entire set of keys may be `sort()`-ed or `reverse()`-d\nin-place.  `MetadataObject` supports appending and insertion of strings, which\nget stored as `MARKER` objects to create markers.\n\nData types\n----------\n\n`hszinc` converts the common Python data types:\n\nNull, Boolean, Date, Time, Date/Time and strings.\n  Standard Python types.  In the case of Date/Time, the `tzinfo` parameter is\n  set to the equivalent timezone provided by the `pytz` library where possible.\n\nNumbers\n  Numbers without a unit are represented as `float` objects.\n  Numbers with a unit are represented by the `hszinc.Quantity` custom type which\n  has two attributes: `value` and `unit`.\n\nMarker and Remove\n  These are singletons, represented by `hszinc.MARKER` and `hszinc.REMOVE`.\n  They behave and are intended to be used like the `None` object.\n\nURI and Bin\n  These are represented as subclasses of `unicode` type (Python 2.7; `str` in\n  Python 3.x).\n\nRef\n  Represented by the custom type `hszinc.Ref` which has `name` (`str`),\n  `has_value` (`bool`) and `value` (any type) attributes.\n\nCoord\n  Represented by the custom type `hszinc.Coordinate`, which has `latitude` and\n  `longitude` types (both `float`)\n\nSTATUS\n======\n\nThis is early days, absolutely nothing is guaranteed.\n\n.. _`Project Haystack`: http://www.project-haystack.org/\n.. _`ZINC`: http://project-haystack.org/doc/Zinc\n.. _`parsimonious`: https://github.com/erikrose/parsimonious\n.. _`pytz`: http://pytz.sourceforge.net/\n.. _`iso8601`: http://pyiso8601.readthedocs.org/en/latest/\n.. _`six`: https://pythonhosted.org/six/\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/vrtsystems/hszinc",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hszinc",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/hszinc/",
    "release_url": "https://pypi.org/project/hszinc/0.1.1/",
    "requires_python": "",
    "summary": "Parser and dumper for Project Haystack ZINC (Zinc is not CSV) file format",
    "version": "0.1.1"
  },
  "releases": {
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "146ef8fef4588a8d31881dcb69fe0cc4",
          "sha256": "8fb9bd6f5ef50774e6fbe02bdbb95d33666d79ef0ed08e02afa787235a5de4bd"
        },
        "downloads": 121,
        "filename": "hszinc-0.0.6.tar.gz",
        "has_sig": true,
        "md5_digest": "146ef8fef4588a8d31881dcb69fe0cc4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28668,
        "upload_time": "2016-04-29T06:59:06",
        "url": "https://files.pythonhosted.org/packages/2d/c3/9018c56073c9abe3f2d35501ac3302c6a30161231c6a83bf0d216f0a8586/hszinc-0.0.6.tar.gz"
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7a9489bb0db20cedd906c26afea0beb7",
          "sha256": "a4c8e99748f0026465e05cfaba66587ee7e2cdc67d4766c3546b2c10ace317f3"
        },
        "downloads": 119,
        "filename": "hszinc-0.0.7.tar.gz",
        "has_sig": true,
        "md5_digest": "7a9489bb0db20cedd906c26afea0beb7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29224,
        "upload_time": "2016-04-29T22:47:58",
        "url": "https://files.pythonhosted.org/packages/b0/3e/06400508c85c800f0c7d6578b16f43935acf016c6b4e52dc8bb7ab0cd0b2/hszinc-0.0.7.tar.gz"
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "90ac4f8533de3b556c43a80b9ea98666",
          "sha256": "7d933e0c445b3d8aa5f1f276560bd5210a0a0d5b79e0984c1dea9a30475e1edb"
        },
        "downloads": 120,
        "filename": "hszinc-0.0.8.tar.gz",
        "has_sig": true,
        "md5_digest": "90ac4f8533de3b556c43a80b9ea98666",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29317,
        "upload_time": "2016-05-03T10:22:10",
        "url": "https://files.pythonhosted.org/packages/49/9f/70abd94d00e06f466d58e1a3ead818a38eb37abe882ed4b8d2b4cdc870dd/hszinc-0.0.8.tar.gz"
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3f27b68d7537ae472b6c666cfcb753b4",
          "sha256": "f53374bfc7aad4c93e4eb1c096d3ae9e2e23b0dd0bb9de0ef9476ec19c4b1e5d"
        },
        "downloads": 495,
        "filename": "hszinc-0.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "3f27b68d7537ae472b6c666cfcb753b4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 45610,
        "upload_time": "2016-06-29T05:02:35",
        "url": "https://files.pythonhosted.org/packages/f0/a7/b868eab4dd3bfab29b70efb057f9ec532d5de7c782476d8dd02a364b3a49/hszinc-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "567fa26b5d2de19a1454f202911b5418",
          "sha256": "349bf60d404e32e0214fb3555fa6106cc3ae65b9e1cf83208957dcaf085c7d3d"
        },
        "downloads": 188,
        "filename": "hszinc-0.1.1.tar.gz",
        "has_sig": true,
        "md5_digest": "567fa26b5d2de19a1454f202911b5418",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 45421,
        "upload_time": "2016-07-30T03:34:52",
        "url": "https://files.pythonhosted.org/packages/67/a9/aaff2d94bb0f425aa0700b2f520e5e9622436fcf8406b1ef5726d99b90b0/hszinc-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "567fa26b5d2de19a1454f202911b5418",
        "sha256": "349bf60d404e32e0214fb3555fa6106cc3ae65b9e1cf83208957dcaf085c7d3d"
      },
      "downloads": 188,
      "filename": "hszinc-0.1.1.tar.gz",
      "has_sig": true,
      "md5_digest": "567fa26b5d2de19a1454f202911b5418",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 45421,
      "upload_time": "2016-07-30T03:34:52",
      "url": "https://files.pythonhosted.org/packages/67/a9/aaff2d94bb0f425aa0700b2f520e5e9622436fcf8406b1ef5726d99b90b0/hszinc-0.1.1.tar.gz"
    }
  ]
}