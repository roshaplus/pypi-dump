{
  "info": {
    "author": "Aryeh Leib Taurog",
    "author_email": "python@aryehleib.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Database"
    ],
    "description": "pgcopy\n=================\n\n.. image:: https://travis-ci.org/altaurog/pgcopy.svg?branch=master\n    :target: https://travis-ci.org/altaurog/pgcopy\n\npgcopy is a small system for very fast bulk insertion of data into a\nPostgreSQL database table using `binary copy`_.\n\nInstallation\n-------------\n\nTo install::\n\n    $ pip install pgcopy\n\npgcopy requires pytz_ and the psycopg2_ db adapter.\nnose_ is required to run the tests.\n\nUse\n---------\n\npgcopy provides facility for copying data from an iterable of tuple-like\nobjects using a ``CopyManager``, which must be instantiated with a psycopg2\ndb connection, the table name, and an iterable containing the names of the\ncolumns to be inserted in the order in which they will be provided.\npgcopy inspects the database to determine the datatypes of the columns.\n\nFor example::\n\n    from datetime import datetime\n    from pgcopy import CopyManager\n    import psycopg2\n    cols = ('id', 'timestamp', 'location', 'temperature')\n    now = datetime.now()\n    records = [\n            (0, now, 'Jerusalem', 72.2),\n            (1, now, 'New York', 75.6),\n            (2, now, 'Moscow', 54.3),\n        ]\n    conn = psycopg2.connect(database='weather_db')\n    mgr = CopyManager(conn, 'measurements_table', cols)\n    mgr.copy(records)\n\nBy default, a temporary file on disk is used.  If there's enough memory,\nyou can get a slight performance benefit with in-memory storage::\n\n    from cStringIO import StringIO\n    mgr.copy(records, StringIO)\n\nA db schema can be specified in the table name using dot notation::\n\n    mgr = CopyManager(conn, 'myschema.measurements', cols)\n\nSupported datatypes\n-------------------\n\nCurrently the following PostgreSQL datatypes are supported:\n\n* bool\n* smallint\n* integer\n* bigint\n* real\n* double precision\n* char\n* varchar\n* text\n* bytea\n* date\n* timestamp\n* timestamp with time zone\n* numeric (data must be ``decimal.Decimal``)\n* json\n* jsonb\n* uuid\n\n.. note::\n\n    PostgreSQL numeric does not support ``Decimal('Inf')`` or\n    ``Decimal('-Inf')``.  pgcopy serializes these as ``NaN``.\n\nTesting\n--------\n\nFor a fast test run using current environment, use nose_::\n\n    $ nosetests\n\nFor more thorough testing, Tox_ configuration will run tests on python\nversions 2.7 and 3.3 - 3.6::\n\n    $ tox\n\nAdditionally, test can be run with no local requirements other than the\nubiquitous docker::\n\n    $ docker-compose up pgcopy\n\n\nBenchmarks\n-----------\n\nBelow are simple benchmarks for 100000 records.\nThis gives a general idea of the kind of speedup\navailable with pgcopy::\n\n    $ nosetests -c tests/benchmark.cfg\n              ExecuteManyBenchmark:   7.75s\n                   PGCopyBenchmark:   0.54s\n    ----------------------------------------------------------------------\n    Ran 2 tests in 9.101s\n\nReplacing a Table\n------------------\n\nWhen possible, faster insertion may be realized by inserting into an empty\ntable with no indices or constraints.  In a case where the entire contents\nof the table can be reinserted, the ``Replace`` context manager automates\nthe process.  On entry, it creates a new table like the original, with a\ntemporary name.  Default column values are included.  It provides the\ntemporary name for populating the table within the context.  On exit, it\nrecreates the constraints, indices, triggers, and views on the new table,\nthen replaces the old table with the new.  It can be used so::\n\n    from pgcopy import CopyManager, Replace\n    with Replace(conn, 'mytable') as temp_name:\n        mgr = CopyManager(conn, temp_name, cols)\n        mgr.copy(records)\n\n``Replace`` renames new db objects like the old, where possible.\nNames of foreign key and check constraints will be mangled.\nAs of v0.6 there is also ``pgcopy.util.RenameReplace``, which instead of\ndropping the original objects renames them using a transformation function.\n\nNote that on PostgreSQL 9.1 and earlier, concurrent queries on the table\n`will fail`_ once the table is dropped.\n\n.. _will fail: https://gist.github.com/altaurog/ab0019837719d2a93e6b\n\nSee Also\n--------\n\ncpgcopy_, a Cython implementation, about twice as fast.\n\n\n.. _binary copy: http://www.postgresql.org/docs/9.3/static/sql-copy.html\n.. _psycopg2: https://pypi.python.org/pypi/psycopg2/\n.. _pytz: https://pypi.python.org/pypi/pytz/\n.. _nose: https://pypi.python.org/pypi/nose/\n.. _cpgcopy: https://github.com/altaurog/cpgcopy\n.. _Tox: https://tox.readthedocs.io/en/latest/\n\n\nChangelog\n-----------\n1.2.0\n\"\"\"\"\"\n:date: 25 Mar, 2017\n\n* Support db schema (Thanks Marcin Gozdalik)\n\n1.1.0\n\"\"\"\"\"\n:date: 26 Jan, 2017\n\n* Support `uuid`, `json`, and `jsonb` types\n  (Thanks Igor Mastak)\n* Integrate Travis CI\n* Add docker test strategy\n\n1.0.0\n\"\"\"\"\"\n:date: 19 Jan, 2017\n\n* Run tests with tox\n* Support Python 3\n* Initial release on PyPi\n\n0.7\n\"\"\"\n:date: 19 Jan, 2017\n\n* Add support for serializing Python ``decimal.Decimal`` to PostgreSQL ``numeric``.\n\n0.6\n\"\"\"\n:date: 21 Oct, 2014\n\n* ``RenameReplace`` variant\n\n0.5\n\"\"\"\n:date: 14 Jul, 2014\n\n* Support default values and sequences\n\n0.4\n\"\"\"\n:date: 14 Jul, 2014\n\n* Fix ``Replace`` utility class bugs\n* Add view support to ``Replace``\n\n0.3\n\"\"\"\n:date: 8 Jul, 2014\n\n*  Move Cython optimization to separate project\n*  Add ``Replace`` utility class\n\n0.2\n\"\"\"\n:date: 7 Jul, 2014\n\n*  Cython optimization\n\n0.1\n\"\"\"\n:date: 29 Jun, 2014\n\n*  Initial version",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/altaurog/pgcopy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pgcopy",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pgcopy/",
    "release_url": "https://pypi.org/project/pgcopy/1.2.0/",
    "requires_python": "",
    "summary": "Fast db insert with postgresql binary copy",
    "version": "1.2.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "99ddf47e19be10e2dcd11c71f2520cac",
          "sha256": "3c4fe40b6b36a0d3e2cc59517787743f8b5602528d10e603d54cf14a8b14f9bd"
        },
        "downloads": 10,
        "filename": "pgcopy-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "99ddf47e19be10e2dcd11c71f2520cac",
        "packagetype": "bdist_wheel",
        "python_version": "any",
        "size": 11359,
        "upload_time": "2017-01-18T21:56:18",
        "url": "https://files.pythonhosted.org/packages/63/f5/61d8cf9b6748c9b1b94c34fd9e2bd1928f3bd4de893cead16d96083d19f6/pgcopy-1.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4b53fcd573c6265df4005cb566d14234",
          "sha256": "24353ee668b9689c1a12259ea5500478a2ae3fdc4d101f551b598e1462097440"
        },
        "downloads": 12,
        "filename": "pgcopy-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4b53fcd573c6265df4005cb566d14234",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9134,
        "upload_time": "2017-01-18T21:56:00",
        "url": "https://files.pythonhosted.org/packages/ff/a9/0fdf80f7961e9fbe2b773ce2a4f3de6fedc84dba682acf3740daa9148c8f/pgcopy-1.0.0.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9245e56994f11ea12d556a3e08b9354b",
          "sha256": "b3d2d056d39d245d03c607be0dcb8d3b687ebabd35d1da8ef20561762df20938"
        },
        "downloads": 12,
        "filename": "pgcopy-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9245e56994f11ea12d556a3e08b9354b",
        "packagetype": "bdist_wheel",
        "python_version": "any",
        "size": 12097,
        "upload_time": "2017-01-26T18:25:11",
        "url": "https://files.pythonhosted.org/packages/fb/29/62a36db269f9947a9347bb367d5002e8493005e01bde81e501db783bf843/pgcopy-1.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6b4c6a37af313beb93ac615000c6fc56",
          "sha256": "7be81703a8e505d7d981881757c750cbcddf8a5d51576c8aa0a9b644c9a58ab6"
        },
        "downloads": 13,
        "filename": "pgcopy-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6b4c6a37af313beb93ac615000c6fc56",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9788,
        "upload_time": "2017-01-26T18:24:50",
        "url": "https://files.pythonhosted.org/packages/1d/ae/e43ba315d67907dfb02743e446f8e47add4843b763c2fbcc7c8c3d4a4076/pgcopy-1.1.0.tar.gz"
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6477f2a766ca48cb591d108f29acd200",
          "sha256": "1b7e8b780a95b9524a4cd2836be02080e340c7380d2347ffbcb31d2db97f1b9b"
        },
        "downloads": 17,
        "filename": "pgcopy-1.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6477f2a766ca48cb591d108f29acd200",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 12340,
        "upload_time": "2017-03-25T20:05:42",
        "url": "https://files.pythonhosted.org/packages/ac/00/fb00549a610f0b31fee04a3d9bbc76fc921f31c9957e638bde2501c1754c/pgcopy-1.2.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e84c12101b68e4543fe70e1b1c618fa4",
          "sha256": "b8b5c21b687a55aa6aab2df01cbf600bddb785e476b5646270961c79eedfcfb7"
        },
        "downloads": 15,
        "filename": "pgcopy-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e84c12101b68e4543fe70e1b1c618fa4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9985,
        "upload_time": "2017-03-25T20:05:44",
        "url": "https://files.pythonhosted.org/packages/5f/2f/4a4cc9bddbcc0d2d6915019d5e83766f8e3181cf5d05f2119cf29307662d/pgcopy-1.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "6477f2a766ca48cb591d108f29acd200",
        "sha256": "1b7e8b780a95b9524a4cd2836be02080e340c7380d2347ffbcb31d2db97f1b9b"
      },
      "downloads": 17,
      "filename": "pgcopy-1.2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6477f2a766ca48cb591d108f29acd200",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 12340,
      "upload_time": "2017-03-25T20:05:42",
      "url": "https://files.pythonhosted.org/packages/ac/00/fb00549a610f0b31fee04a3d9bbc76fc921f31c9957e638bde2501c1754c/pgcopy-1.2.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "e84c12101b68e4543fe70e1b1c618fa4",
        "sha256": "b8b5c21b687a55aa6aab2df01cbf600bddb785e476b5646270961c79eedfcfb7"
      },
      "downloads": 15,
      "filename": "pgcopy-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e84c12101b68e4543fe70e1b1c618fa4",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9985,
      "upload_time": "2017-03-25T20:05:44",
      "url": "https://files.pythonhosted.org/packages/5f/2f/4a4cc9bddbcc0d2d6915019d5e83766f8e3181cf5d05f2119cf29307662d/pgcopy-1.2.0.tar.gz"
    }
  ]
}