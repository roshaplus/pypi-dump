{
  "info": {
    "author": "Noah Hoffman",
    "author_email": "noah.hoffman@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "============\n barcodecop\n============\n\nEnforce exact barcode matches in demultiplexed MiSeq reads\n\n.. image:: https://travis-ci.org/nhoffman/barcodecop.svg?branch=master\n    :target: https://travis-ci.org/nhoffman/barcodecop\n\nThe onboard software used for demultiplexing on the Illumina MiSeq\ncannot be configured to enforce exact barcode matches. As a result, a\nminority of reads (up to about 5% in my tests) are assigned to a\nspecimen on the basis of a partial barcode match. It turns out that\nsome fraction of these less-than-exact matches are mis-assigned from\nother specimens (as of course are some smaller fraction of the exact\nmatches, but we can't identify these as easily). This mis-assignment\nis a problem for ultra sensitive assays that attempt to draw\nconclusions from the presence of very low prevalence reads.\n\nThis package provides the ``barcodecop`` command that uses the index\nreads to determine the most prevalent barcode sequence and filter\nreads from an accompanying fastq file.\n\nCommand line arguments::\n\n  usage: barcodecop [-h] [-f file.fastq[.bz2|.gz]] [-o OUTFILE] [--snifflimit N]\n\t\t    [--head N] [--min-pct-assignment PERCENT] [--invert] [-c]\n\t\t    [-q] [-V]\n\t\t    file.fastq[.bz2|.gz] [file.fastq[.bz2|.gz] ...]\n\n  Filter fastq files, limiting to exact barcode matches.\n\n  Input and output files may be compressed as indicated by a .bz2 or .gz\n  suffix.\n\n  positional arguments:\n    file.fastq[.bz2|.gz]  one or two files containing index reads in fastq\n\t\t\t  format\n\n  optional arguments:\n    -h, --help            show this help message and exit\n    -f file.fastq[.bz2|.gz], --fastq file.fastq[.bz2|.gz]\n\t\t\t  reads to filter in fastq format\n    -o OUTFILE, --outfile OUTFILE\n\t\t\t  output fastq\n    --snifflimit N        read no more than N records from the index file\n\t\t\t  [10000]\n    --head N              limit the output file to N records\n    --min-pct-assignment PERCENT\n\t\t\t  raise error unless the most common barcode represents\n\t\t\t  at least PERCENT of the total [90.0]\n    --invert              include only sequences *not* matching the most common\n\t\t\t  barcode\n    -c, --show-counts     tabulate barcode counts and exit\n    -q, --quiet           minimize messages to stderr\n    -V, --version         Print the version number and exit\n\n\nBoth single and dual-indexing are supported. For example::\n\n  barcodecop input_I1.fastq --fastq input_R1.fastq -o output_R1.fastq\n\nOr, using a dual index::\n\n  barcodecop input_I1.fastq input_I2.fastq --fastq input_R1.fastq -o output_R1.fastq\n\n\nInstallation\n============\n\nInstall from PyPi using pip::\n\n  pip install barcodecop\n\nOr install directly from the git repository::\n\n  pip install git+https://github.com/nhoffman/barcodecop.git\n\n\nTesting\n=======\n\nRun all tests like this::\n\n  python setup.py test\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/nhoffman/barcodecop",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "barcodecop",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/barcodecop/",
    "release_url": "https://pypi.org/project/barcodecop/0.2/",
    "requires_python": null,
    "summary": "Enforce exact barcode matches in demultiplexed MiSeq reads",
    "version": "0.2"
  },
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3b0eaabf3dc77d50c079896c7608c23e",
          "sha256": "53ee19303dcd131a0b83d8bfad70eba4f3de45cd485b92a25f21a4049d362c14"
        },
        "downloads": 20,
        "filename": "barcodecop-0.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b0eaabf3dc77d50c079896c7608c23e",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 6446,
        "upload_time": "2017-03-28T22:41:31",
        "url": "https://files.pythonhosted.org/packages/36/64/7fdf4bb819a7e4c0c633d8a8887381441e21fbc86bd77474ae7c23a76ec3/barcodecop-0.2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "220ac240dc212016a1f8e3b6a9b40703",
          "sha256": "7a4f14b4442b4eb2bca3138877a15a1fd4a94392a375772e5611a8117e7131ed"
        },
        "downloads": 20,
        "filename": "barcodecop-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "220ac240dc212016a1f8e3b6a9b40703",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5395,
        "upload_time": "2017-03-28T22:41:32",
        "url": "https://files.pythonhosted.org/packages/c9/c9/7db6bd1904bc4a598d92c7f10062e77d885ea45600aad3f155259a9bc042/barcodecop-0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "3b0eaabf3dc77d50c079896c7608c23e",
        "sha256": "53ee19303dcd131a0b83d8bfad70eba4f3de45cd485b92a25f21a4049d362c14"
      },
      "downloads": 20,
      "filename": "barcodecop-0.2-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "3b0eaabf3dc77d50c079896c7608c23e",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 6446,
      "upload_time": "2017-03-28T22:41:31",
      "url": "https://files.pythonhosted.org/packages/36/64/7fdf4bb819a7e4c0c633d8a8887381441e21fbc86bd77474ae7c23a76ec3/barcodecop-0.2-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "220ac240dc212016a1f8e3b6a9b40703",
        "sha256": "7a4f14b4442b4eb2bca3138877a15a1fd4a94392a375772e5611a8117e7131ed"
      },
      "downloads": 20,
      "filename": "barcodecop-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "220ac240dc212016a1f8e3b6a9b40703",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5395,
      "upload_time": "2017-03-28T22:41:32",
      "url": "https://files.pythonhosted.org/packages/c9/c9/7db6bd1904bc4a598d92c7f10062e77d885ea45600aad3f155259a9bc042/barcodecop-0.2.tar.gz"
    }
  ]
}