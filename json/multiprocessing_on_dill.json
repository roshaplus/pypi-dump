{
  "info": {
    "author": "Robert Smallshire",
    "author_email": "rob@sixty-north.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Python Software Foundation License",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Multiprocessing on Dill\n=======================\n\nThis project is a friendly fork \u2013 for Python 3 \u2013 of the Python Standard Library `multiprocessing\n<https://docs.python.org/3/library/multiprocessing.html>`_ module, which uses the third-party\n`dill <https://pypi.python.org/pypi/dill>`_ serializer instead of the standard ``pickle`` serializer.  This overcomes\nmany shortcomings of ``pickle`` which prevent multiprocessing being used with lambdas, closures and other useful Python\nobjects.\n\nThe easiest way to use ``multiprocessing_on_dill`` in place of ``multiprocessing`` is simply to replace any import\nstatements like this::\n\n    import multiprocessing\n\nwith::\n\n    import multiprocessing_on_dill as multiprocessing\n\nand import statements like this::\n\n    from multiprocessing import Pool\n\nwith::\n\n    from multiprocessing_on_dill import Pool\n\nWith such import changes in place, it will now be possible to use functions like ``Pool.map()`` with lambdas::\n\n    pool = Pool(12)\n    result = pool.map(lambda x: x*x, range(10000))\n\nEverything else should be identical to the Python version.\n\nYou can determine from which version of the Python Standard Library ``multiprocessing_on_dill`` has been forked, by\nexamining the ``multiprocessing_on_dill.__version__`` attribute.\n\n\nFuture\n======\n\nIt is our hope that one day the Python Standard Library ``pickle`` module will gain the additional capabilities of\n``dill`` and there will no longer be a need for ``multiprocessing_on_dill`` to exist.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/sixty-north/multiprocessing_on_dill",
    "keywords": "multiprocessing parallel",
    "license": "PSFL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "multiprocessing_on_dill",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/multiprocessing_on_dill/",
    "release_url": "https://pypi.org/project/multiprocessing_on_dill/3.5.0a4/",
    "requires_python": null,
    "summary": "A friendly fork of multiprocessing which uses dill instead of pickle",
    "version": "3.5.0a4"
  },
  "releases": {
    "3.5.0a4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cd9da5a57987eddb0040939296fe3c3d",
          "sha256": "d6d50c300ff4bd408bb71eb78725e60231039ee9b3d0d9bb7697b9d0e15045e7"
        },
        "downloads": 11701,
        "filename": "multiprocessing_on_dill-3.5.0a4.tar.gz",
        "has_sig": false,
        "md5_digest": "cd9da5a57987eddb0040939296fe3c3d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 53330,
        "upload_time": "2015-05-17T12:05:20",
        "url": "https://files.pythonhosted.org/packages/86/4d/4b135e2e5cd0194eb29f2ed36e9a77a07596787a9a8ac2279bd4445398f2/multiprocessing_on_dill-3.5.0a4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "cd9da5a57987eddb0040939296fe3c3d",
        "sha256": "d6d50c300ff4bd408bb71eb78725e60231039ee9b3d0d9bb7697b9d0e15045e7"
      },
      "downloads": 11701,
      "filename": "multiprocessing_on_dill-3.5.0a4.tar.gz",
      "has_sig": false,
      "md5_digest": "cd9da5a57987eddb0040939296fe3c3d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 53330,
      "upload_time": "2015-05-17T12:05:20",
      "url": "https://files.pythonhosted.org/packages/86/4d/4b135e2e5cd0194eb29f2ed36e9a77a07596787a9a8ac2279bd4445398f2/multiprocessing_on_dill-3.5.0a4.tar.gz"
    }
  ]
}