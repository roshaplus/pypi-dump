{
  "info": {
    "author": "Corey Hammerton",
    "author_email": "corey.hammerton@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Flask",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3"
    ],
    "description": "###########\nPuppetboard\n###########\n\n.. image:: https://travis-ci.org/voxpupuli/puppetboard.svg?branch=master\n   :target:  https://travis-ci.org/voxpupuli/puppetboard\n\n.. image:: https://coveralls.io/repos/github/voxpupuli/puppetboard/badge.svg?branch=master\n   :target:  https://coveralls.io/github/voxpupuli/puppetboard?branch=master\n\nPuppetboard is a web interface to `PuppetDB`_ aiming to replace the reporting\nfunctionality of `Puppet Dashboard`_.\n\nPuppetboard relies on the `pypuppetdb`_ library to fetch data from PuppetDB\nand is built with the help of the `Flask`_ microframework.\n\nAs of version 0.1.0 and higher, Puppetboard **requires** PuppetDB 3.\n\n.. _pypuppetdb: https://pypi.python.org/pypi/pypuppetdb\n.. _PuppetDB: http://docs.puppetlabs.com/puppetdb/latest/index.html\n.. _Puppet Dashboard: http://docs.puppetlabs.com/dashboard/\n.. _Flask: http://flask.pocoo.org\n.. _FlaskSession: http://flask.pocoo.org/docs/0.11/quickstart/#sessions\n\nAt the current time of writing, Puppetboard supports the following Python versions:\n    * Python 2.6\n    * Python 2.7\n\n.. image:: screenshots/overview.png\n   :alt: View of a node\n   :width: 1024\n   :height: 700\n   :align: center\n\n.. contents::\n\nWord of caution\n===============\n\nPuppetboard is very, very young but it works fairly well.\n\nThat being said a lot of the code is very experimental, just trying\nto figure out what works and what not, what we need to do different\nand what features we need on the PuppetDB side of things.\n\nAs such you should be at least comfortable handling a few errors\nthis might throw at you.\n\nInstallation\n============\n\nPuppetboard is now packaged and available on PyPi.\n\nProduction\n----------\n\nPuppet module\n^^^^^^^^^^^^^\nThere is a `Puppet module`_ by `Spencer Krum`_ that takes care of installing Puppetboard for you.\n\nYou can install it with:\n\n    puppet module install puppet-puppetboard\n\n.. _Spencer Krum: https://github.com/nibalizer\n.. _Puppet module: https://forge.puppetlabs.com/puppet/puppetboard\n\nManual\n^^^^^^\n\nTo install it simply issue the following command:\n\n.. code-block:: bash\n\n   $ pip install puppetboard\n\nThis will install Puppetboard and take care of the dependencies. If you\ndo this Puppetboard will be installed in the so called site-packages or\ndist-packages of your Python distribution.\n\nThe complete path on Debian and Ubuntu systems would be ``/usr/local/lib/pythonX.Y/lib/dist-packages/puppetboard`` and on Fedora would be ``/usr/lib/pythonX.Y/site-packages/puppetboard``\n\nwhere X and Y are replaced by your major and minor python versions.\n\nYou will need this path in order to configure your HTTPD and WSGI-capable\napplication server.\n\nPackages\n^^^^^^^^\nNative packages for your operating system will be provided in the near future.\n\n+-------------------+-----------+--------------------------------------------+\n| OS                | Status    |                                            |\n+===================+===========+============================================+\n| Debian 6/Squeeze  | planned   | Requires Backports                         |\n+-------------------+-----------+--------------------------------------------+\n| Debian 7/Wheezy   | planned   |                                            |\n+-------------------+-----------+--------------------------------------------+\n| Ubuntu 13.04      | planned   |                                            |\n+-------------------+-----------+--------------------------------------------+\n| Ubuntu 13.10      | planned   |                                            |\n+-------------------+-----------+--------------------------------------------+\n| CentOS/RHEL 5     | n/a       | Python 2.4                                 |\n+-------------------+-----------+--------------------------------------------+\n| CentOS/RHEL 6     | planned   |                                            |\n+-------------------+-----------+--------------------------------------------+\n| `OpenSuSE 12/13`_ | available | Maintained on `OpenSuSE Build Service`_    |\n+-------------------+-----------+--------------------------------------------+\n| `SuSE LE 11 SP3`_ | available | Maintained on `OpenSuSE Build Service`_    |\n+-------------------+-----------+--------------------------------------------+\n| `ArchLinux`_      | available | Maintained by `Tim Meusel`_                |\n+-------------------+-----------+--------------------------------------------+\n| `OpenBSD`_        | available | Maintained by `Jasper Lievisse Adriaanse`_ |\n+-------------------+-----------+--------------------------------------------+\n\n.. _ArchLinux: https://aur.archlinux.org/packages/python2-puppetboard/\n.. _Tim Meusel: https://github.com/bastelfreak\n.. _Jasper Lievisse Adriaanse: https://github.com/jasperla\n.. _OpenBSD: http://www.openbsd.org/cgi-bin/cvsweb/ports/www/puppetboard/\n.. _OpenSuSE Build Service: https://build.opensuse.org/package/show/systemsmanagement:puppet/python-puppetboard\n.. _OpenSuSE 12/13: https://build.opensuse.org/package/show/systemsmanagement:puppet/python-puppetboard\n.. _SuSE LE 11 SP3: https://build.opensuse.org/package/show/systemsmanagement:puppet/python-puppetboard\n\nDocker Images\n^^^^^^^^^^^^^\n\nA `Dockerfile`_ was added to the source-code in the 0.2.0 release. An officially\nimage is planned for the 0.2.x series.\n\n.. _Dockerfile: https://github.com/voxpupuli/puppetboard/blob/master/Dockerfile\n\nUsage:\n.. code-block:: bash\n  $ docker build -t puppetboard .\n  $ docker run -it -p 9080:80 -v /etc/puppetlabs/puppet/ssl:/etc/puppetlabs/puppet/ssl \\\n    -e PUPPETDB_HOST=<hostname> \\\n    -e PUPPETDB_PORT=8081 \\\n    -e PUPPETDB_SSL_VERIFY=/etc/puppetlabs/puppetdb/ssl/ca.pem \\\n    -e PUPPETDB_KEY=/etc/puppetlabs/puppetdb/ssl/private.pem \\\n    -e PUPPETDB_CERT=/etc/puppetlabs/puppetdb/ssl/public.pem \\\n    -e INVENTORY_FACTS='Hostname,fqdn, IP Address,ipaddress' \\\n    -e ENABLE_CATALOG=true \\\n    -e GRAPH_FACTS='architecture,puppetversion,osfamily' \\\n    puppetboard\n\nDevelopment\n-----------\n\nIf you wish to hack on Puppetboard you should fork/clone the Github repository\nand then install the requirements through:\n\n.. code-block:: bash\n\n   $ pip install -r requirements.txt\n\nYou're advised to do this inside a virtualenv specifically created to work on\nPuppetboard as to not pollute your global Python installation.\n\nConfiguration\n=============\nThe following instructions will help you configure Puppetboard and your HTTPD.\n\nPuppet\n------\nPuppetboard is built completely around PuppetDB which means your environment\nneeds to be configured `to do that`_.\n\nIn order to get the reports to show up in Puppetboard you need to configure\nyour environment to store those reports in PuppetDB. Have a look at\n`the documentation`_ about this, specifically the *Enabling report storage*\nsection.\n\n.. _to do that: https://docs.puppetlabs.com/puppetdb/latest/connect_puppet_master.html#step-2-edit-config-files\n.. _the documentation: https://docs.puppetlabs.com/puppetdb/latest/connect_puppet_master.html#edit-puppetconf\n\nSettings\n--------\nPuppetboard will look for a file pointed at by the ``PUPPETBOARD_SETTINGS``\nenvironment variable. The file has to be identical to ``default_settings.py``\nbut should only override the settings you need changed.\n\nYou can grab a copy of ``default_settings.py`` from the path where pip\ninstalled Puppetboard to or by looking in the source checkout.\n\nIf you run PuppetDB and Puppetboard on the same machine the default settings\nprovided will be enough to get you started and you won't need a custom\nsettings file.\n\nAssuming your webserver and PuppetDB machine are not identical you will at\nleast have to change the following settings:\n\n* ``PUPPETDB_HOST``\n* ``PUPPETDB_PORT``\n\nBy default PuppetDB requires SSL to be used when a non-local client wants to\nconnect. Therefor you'll also have to supply the following settings:\n\n* ``PUPPETDB_SSL_VERIFY = /path/to/ca/keyfile.pem``\n* ``PUPPETDB_KEY = /path/to/private/keyfile.pem``\n* ``PUPPETDB_CERT = /path/to/public/keyfile.crt``\n\nFor information about how to generate the correct keys please refer to the\n`pypuppetdb documentation`_.\n\nOther settings that might be interesting in no particular order:\n\n* ``SECRET_KEY``: Refer to `Flask documentation`_, section sessions: How to\n  generate good secret keys, to set the value. Defaults to a random 24-char\n  string generated by os.random(24)\n* ``PUPPETDB_TIMEOUT``: Defaults to 20 seconds but you might need to increase\n  this value. It depends on how big the results are when querying PuppetDB.\n  This behaviour will change in a future release when pagination will be\n  introduced.\n* ``UNRESPONSIVE_HOURS``: The amount of hours since the last check-in after\n  which a node is considered unresponsive.\n* ``LOGLEVEL``: A string representing the loglevel. It defaults to ``'info'``\n  but can be changed to ``'warning'`` or ``'critical'`` for less verbose\n  logging or ``'debug'`` for more information.\n* ``ENABLE_QUERY``: Defaults to ``True`` causing a Query tab to show up in the\n  web interface allowing users to write and execute arbitrary queries against\n  a set of endpoints in PuppetDB. Change this to ``False`` to disable this.\n* ``GRAPH_TYPE```: Specify the type of graph to display.   Default is\n  pie, other good option is donut.   Other choices can be found here:\n  `_C3JS_documentation`\n* ``GRAPH_FACTS``: A list of fact names to tell PuppetBoard to generate a\n  pie-chart on the fact page. With some fact values being unique per node,\n  like ipaddress, uuid, and serial number, as well as structured facts it was\n  no longer feasible to generate a graph for everything.\n* ``INVENTORY_FACTS``: A list of tuples that serve as the column header and\n  the fact name to search for to create the inventory page. If a fact is not\n  found for a node then ``undef`` is printed.\n* ``ENABLE_CATALOG``: If set to ``True`` allows the user to view a node's\n  latest catalog. This includes all managed resources, their file-system\n  locations and their relationships, if available. Defaults to ``False``.\n* ``REFRESH_RATE``: Defaults to ``30`` the number of seconds to wait until\n  the index page is automatically refreshed.\n* ``DEFAULT_ENVIRONMENT``: Defaults to ``'production'``, as the name\n  suggests, load all information filtered by this environment value.\n* ``REPORTS_COUNT``: Defaults to ``10`` the limit of the number of reports\n  to load on the node or any reports page.\n* ``OFFLINE_MODE``: If set to ``True`` load static assets (jquery,\n  semantic-ui, etc) from the local web server instead of a CDN.\n  Defaults to ``False``.\n\n.. _pypuppetdb documentation: http://pypuppetdb.readthedocs.org/en/v0.1.0/quickstart.html#ssl\n.. _Flask documentation: http://flask.pocoo.org/docs/0.10/quickstart/#sessions\n.. _C3JS_documentation:  http://c3js.org/examples.html#chart\n\nPuppet Enterprise\n-----------------\n\nPuppet Enterprise maintains a certificate white-list for which certificates\nare allowed to access data from PuppetDB. This whitelist is maintained in\n``/etc/puppetlabs/puppetdb/certificate-whitelist`` and you have to add the\ncertificate name to that file.\n\nAfterwards you'll need to restart ``pe-puppetdb`` and you should be able to\nquery PuppetDB freely now.\n\nDevelopment\n-----------\n\nYou can run it in development mode by simply executing:\n\n.. code-block:: bash\n\n   $ python dev.py\n\nUse ``PUPPETBOARD_SETTINGS`` to change the different settings or patch\n``default_settings.py`` directly. Take care not to include your local changes on\nthat file when submitting patches for Puppetboard. Place a settings.py file\ninside the base directory of the git repository that will be used, if the\nenvironment variable is not set.\n\nProduction\n----------\nTo run Puppetboard in production we provide instructions for the following\nscenarios:\n\n* Apache + mod_wsgi\n* Apache + mod_passenger\n* nginx + uwsgi\n* nginx + gunicorn\n\nIf you deploy Puppetboard through a different setup we'd welcome a pull\nrequest that adds the instructions to this section.\n\nApache + mod_wsgi\n^^^^^^^^^^^^^^^^^\n\nFirst we need to create the necessary directories:\n\n.. code-block:: bash\n\n   $ mkdir -p /var/www/html/puppetboard\n\nCopy Puppetboard's ``default_settings.py`` to the newly created puppetboard\ndirectory and name the file ``settings.py``. This file will be available\nat the path Puppetboard was installed, for example:\n``/usr/local/lib/pythonX.Y/lib/dist-packages/puppetboard/default_settings.py``.\n\nChange the settings that need changing to match your environment and delete\nor comment with a ``#`` the rest of the entries.\n\nIf you don't need to change any settings you can skip the creation of the\n``settings.py`` file entirely.\n\nNow create a ``wsgi.py`` with the following content in the newly created\npuppetboard directory:\n\n.. code-block:: python\n\n    from __future__ import absolute_import\n    import os\n\n    # Needed if a settings.py file exists\n    os.environ['PUPPETBOARD_SETTINGS'] = '/var/www/html/puppetboard/settings.py'\n    from puppetboard.app import app as application\n\nMake sure this file is readable by the user the webserver runs as.\n\nFlask requires a static secret_key, see `FlaskSession`_, in order to protect\nitself from CSRF exploits.  The default secret_key in ``default_settings.py``\ngenerates a random 24 character string, however this string is re-generated\non each request under httpd >= 2.4.\n\nTo generate your own secret_key create a python script with the following content\nand run it once:\n\n.. code-block:: python\n\n    import os\n    os.urandom(24)\n    '\\xfd{H\\xe5<\\x95\\xf9\\xe3\\x96.5\\xd1\\x01O<!\\xd5\\xa2\\xa0\\x9fR\"\\xa1\\xa8'\n\nCopy the output and add the following to your ``wsgi.py`` file:\n\n.. code-block:: python\n\n   application.secret_key = '<your secret key>'\n\nThe last thing we need to do is configure Apache.\n\nHere is a sample configuration for Debian and Ubuntu:\n\n.. code-block:: apache\n\n    <VirtualHost *:80>\n        ServerName puppetboard.example.tld\n        WSGIDaemonProcess puppetboard user=www-data group=www-data threads=5\n        WSGIScriptAlias / /var/www/html/puppetboard/wsgi.py\n        ErrorLog /var/log/apache2/puppetboard.error.log\n        CustomLog /var/log/apache2/puppetboard.access.log combined\n\n        Alias /static /usr/local/lib/pythonX.Y/dist-packages/puppetboard/static\n        <Directory /usr/local/lib/pythonX.X/dist-packages/puppetboard/static>\n            Satisfy Any\n            Allow from all\n        </Directory>\n\n        <Directory /usr/local/lib/pythonX.Y/dist-packages/puppetboard>\n            WSGIProcessGroup puppetboard\n            WSGIApplicationGroup %{GLOBAL}\n            Order deny,allow\n            Allow from all\n        </Directory>\n    </VirtualHost>\n\nHere is a sample configuration for Fedora:\n\n.. code-block:: apache\n\n    <VirtualHost *:80>\n        ServerName puppetboard.example.tld\n        WSGIDaemonProcess puppetboard user=apache group=apache threads=5\n        WSGIScriptAlias / /var/www/html/puppetboard/wsgi.py\n        ErrorLog logs/puppetboard-error_log\n        CustomLog logs/puppetboard-access_log combined\n\n        Alias /static /usr/lib/pythonX.Y/site-packages/puppetboard/static\n        <Directory /usr/lib/python2.X/site-packages/puppetboard/static>\n            Satisfy Any\n            Allow from all\n        </Directory>\n\n        <Directory /usr/lib/pythonX.Y/site-packages/puppetboard>\n            WSGIProcessGroup puppetboard\n            WSGIApplicationGroup %{GLOBAL}\n            Require all granted\n        </Directory>\n    </VirtualHost>\n\n\nNote the directory path, it's the path to where pip installed Puppetboard; X.Y\nmust be replaced with your python version. We also alias the ``/static`` path\nso that Apache will serve the static files like the included CSS and Javascript.\n\nApache + mod_passenger\n^^^^^^^^^^^^^^^^^^^^^^\n\nIt is possible to run Python applications through Passenger. Passenger has\nsupported this since version 3 but it's considered experimental. Since the\nrelease of Passenger 4 it's a 'core' feature of the product.\n\nPerformance wise it also leaves something to be desired compared to the\nmod_wsgi powered solution. Application start up is noticeably slower and\nloading pages takes a fraction longer.\n\nFirst we need to create the necessary directories:\n\n.. code-block:: bash\n\n   $ mkdir -p /var/www/puppetboard/{tmp,public}\n\nCopy Puppetboard's ``default_settings.py`` to the newly created puppetboard\ndirectory and name the file ``settings.py``. This file will be available\nat the path Puppetboard was installed, for example:\n``/usr/local/lib/pythonX.Y/lib/dist-packages/puppetboard/default_settings.py``.\n\nChange the settings that need changing to match your environment and delete\nor comment with a ``#`` the rest of the entries.\n\nIf you don't need to change any settings you can skip the creation of the\n``settings.py`` file entirely.\n\nNow create a ``passenger_wsgi.py`` with the following content in the newly\ncreated puppetboard directory:\n\n.. code-block:: python\n\n    from __future__ import absolute_import\n    import os\n    import logging\n\n    logging.basicConfig(filename='/path/to/file/for/logging', level=logging.INFO)\n\n    # Needed if a settings.py file exists\n    os.environ['PUPPETBOARD_SETTINGS'] = '/var/www/puppetboard/settings.py'\n\n    try:\n        from puppetboard.app import app as application\n    except Exception, inst:\n        logging.exception(\"Error: %s\", str(type(inst)))\n\nUnfortunately due to the way Passenger works we also need to configure logging\ninside ``passenger_wsgi.py`` else application start up issues won't be logged.\n\nThis means that even though ``LOGLEVEL`` might be set in your ``settings.py``\nthis setting will take precedence over it.\n\nNow the only thing left to do is configure Apache:\n\n.. code-block:: apache\n\n   <VirtualHost *:80>\n       ServerName puppetboard.example.tld\n       DocumentRoot /var/www/puppetboard/public\n       ErrorLog /var/log/apache2/puppetboard.error.log\n       CustomLog /var/log/apache2/puppetboard.access.log combined\n\n       RackAutoDetect On\n       Alias /static /usr/local/lib/pythonX.Y/dist-packages/puppetboard/static\n   </VirtualHost>\n\nNote the ``/static`` alias path, it's the path to where pip installed\nPuppetboard. This is needed so that Apache will serve the static files like\nthe included CSS and Javascript.\n\nnginx + uwsgi\n^^^^^^^^^^^^^\nA common Python deployment scenario is to use the uwsgi application server\n(which can also serve rails/rack, PHP, Perl and other applications) and proxy\nto it through something like nginx or perhaps even HAProxy.\n\nuwsgi has a feature that every instance can run as its own user. In this\nexample we'll use the ``www-data`` user but you can create a separate user\nsolely for running Puppetboard and use that instead.\n\nFirst we need to create the necessary directories:\n\n.. code-block:: bash\n\n   $ mkdir -p /var/www/puppetboard\n\nCopy Puppetboard's ``default_settings.py`` to the newly created puppetboard\ndirectory and name the file ``settings.py``. This file will be available\nat the path Puppetboard was installed, for example:\n``/usr/local/lib/pythonX.Y/lib/dist-packages/puppetboard/default_settings.py``.\n\nChange the settings that need changing to match your environment and delete\nor comment with a ``#`` the rest of the entries.\n\nIf you don't need to change any settings you can skip the creation of the\n``settings.py`` file entirely.\n\nNow create a ``wsgi.py`` with the following content in the newly created\npuppetboard directory:\n\n.. code-block:: python\n\n    from __future__ import absolute_import\n    import os\n\n    # Needed if a settings.py file exists\n    os.environ['PUPPETBOARD_SETTINGS'] = '/var/www/puppetboard/settings.py'\n    from puppetboard.app import app as application\n\nMake sure this file is owned by the user and group the uwsgi instance will run\nas.\n\nNow we need to start uwsgi:\n\n.. code-block:: bash\n\n   $ uwsgi --socket :9090 --wsgi-file /var/www/puppetboard/wsgi.py\n\nFeel free to change the port to something other than ``9090``.\n\nThe last thing we need to do is configure nginx to proxy the requests:\n\n.. code-block:: nginx\n\n   upstream puppetboard {\n       server 127.0.0.1:9090;\n   }\n\n   server {\n       listen      80;\n       server_name puppetboard.example.tld;\n       charset     utf-8;\n\n       location /static {\n           alias /usr/local/lib/pythonX.Y/dist-packages/puppetboard/static;\n       }\n\n       location / {\n           uwsgi_pass puppetboard;\n           include    /path/to/uwsgi_params/probably/etc/nginx/uwsgi_params;\n       }\n   }\n\nIf all went well you should now be able to access to Puppetboard. Note the\n``/static`` location block to make nginx serve static files like the included\nCSS and Javascript.\n\nBecause nginx natively supports the uwsgi protocol we use ``uwsgi_pass``\ninstead of the traditional ``proxy_pass``.\n\nnginx + gunicorn\n^^^^^^^^^^^^^\nYou can use gunicorn instead of uwsgi if you prefer, the process doesn't\ndiffer too much. As we can't use ``uwsgi_pass`` with gunicorn, the nginx configuration file is going to differ a bit:\n\n.. code-block:: nginx\n\n    server {\n        listen      80;\n        server_name puppetboard.example.tld;\n        charset     utf-8;\n\n        location /static {\n            alias /usr/local/lib/pythonX.Y/dist-packages/puppetboard/static;\n        }\n\n        location / {\n            add_header Access-Control-Allow-Origin *;\n            proxy_pass_header Server;\n            proxy_set_header Host $http_host;\n            proxy_redirect off;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Scheme $scheme;\n            proxy_connect_timeout 10;\n            proxy_read_timeout 10;\n            proxy_pass http://127.0.0.1:9090;\n        }\n    }\n\nNow, for running it with gunicorn:\n\n.. code-block:: bash\n\n   $ cd /usr/local/lib/pythonX.Y/dist-packages/puppetboard\n   $ gunicorn -b 127.0.0.1:9090 puppetboard.app:app\n\nAs we may want to serve in the background, and we need ``PUPPETBOARD_SETTINGS`` as an environment variable, is recommendable to run this under supervisor. An example supervisor config with basic settings is the following:\n\n.. code-block:: ini\n\n    [program:puppetboard]\n    command=gunicorn -b 127.0.0.1:9090 puppetboard.app:app\n    user=www-data\n    stdout_logfile=/var/log/supervisor/puppetboard/puppetboard.out\n    stderr_logfile=/var/log/supervisor/puppetboard/puppetboard.err\n    environment=PUPPETBOARD_SETTINGS=\"/var/www/puppetboard/settings.py\"\n\n\nFor newer systems with systemd (for example CentOS7), you can use the following service file (``/usr/lib/systemd/system/gunicorn@.service``):\n\n.. code-block:: ini\n\n    [Unit]\n    Description=gunicorn daemon for %i\n    After=network.target\n\n    [Service]\n    ExecStart=/usr/bin/gunicorn --config /etc/sysconfig/gunicorn/%i.conf %i\n    ExecReload=/bin/kill -s HUP $MAINPID\n    PrivateTmp=true\n    User=gunicorn\n    Group=gunicorn\n\nAnd the corresponding gunicorn config (``/etc/sysconfig/gunicorn/puppetboard.app\\:app.conf``):\n\n.. code-block:: ini\n\n    import multiprocessing\n\n    bind    = '127.0.0.1:9090'\n    workers = multiprocessing.cpu_count() * 2 + 1\n    chdir   = '/usr/lib/python2.7/site-packages/puppetboard'\n    raw_env = ['PUPPETBOARD_SETTINGS=/var/www/puppetboard/settings.py', 'http_proxy=']\n\nSecurity\n--------\n\nIf you wish to make users authenticate before getting access to Puppetboard\nyou can use one of the following configuration snippets.\n\nApache\n^^^^^^\n\nInside the ``VirtualHost``:\n\n.. code-block:: apache\n\n    <Location \"/\">\n        AuthType Basic\n        AuthName \"Puppetboard\"\n        Require valid-user\n        AuthBasicProvider file\n        AuthUserFile /path/to/a/file.htpasswd\n    </Location>\n\nnginx\n^^^^^\n\nInside the ``location / {}`` block that has the ``uwsgi_pass`` directive:\n\n.. code-block:: nginx\n\n    auth_basic \"Puppetboard\";\n    auth_basic_user_file /path/to/a/file.htpasswd;\n\nGetting Help\n============\nThis project is still very new so it's not inconceivable you'll run into\nissues.\n\nFor bug reports you can file an `issue`_. If you need help with something\nfeel free to hit up the maintainers by e-mail or on IRC. They can usually\nbe found on `IRCnet`_ and `Freenode`_ and idles in #puppetboard.\n\nThere's now also the #puppetboard channel on `Freenode`_ where we hang out\nand answer questions related to pypuppetdb and Puppetboard.\n\nThere is also a `GoogleGroup`_ to exchange questions and discussions. Please\nnote that this group contains discussions of other Puppet Community projects.\n\n.. _issue: https://github.com/voxpupuli/puppetboard/issues\n.. _IRCnet: http://www.ircnet.org\n.. _Freenode: http://freenode.net\n.. _GoogleGroup: https://groups.google.com/forum/?hl=en#!forum/puppet-community\n\nThird party\n===========\nSome people have already started building things with and around Puppetboard.\n\n`Hunter Haugen`_ has provided a Vagrant setup:\n\n* https://github.com/hunner/puppetboard-vagrant\n\n.. _Hunter Haugen: https://github.com/hunner\n\nPackages\n--------\n* An OpenBSD port is being maintained by `Jasper Lievisse Adriaanse`_ and can be viewed `here <http://www.openbsd.org/cgi-bin/cvsweb/ports/www/puppetboard/>`_.\n\n* A Docker image is being maintained by `Julien K.`_ and can be viewed `here <https://registry.hub.docker.com/u/kassis/puppetboard/>`_.\n\n.. _Jasper Lievisse Adriaanse: https://github.com/jasperla\n.. _Julien K.: https://github.com/juliengk\n\nContributing\n============\nWe welcome contributions to this project. However, there are a few ground\nrules contributors should be aware of.\n\nLicense\n-------\nThis project is licensed under the Apache v2.0 License. As such, your\ncontributions, once accepted, are automatically covered by this license.\n\nCommit messages\n---------------\nWrite decent commit messages. Don't use swear words and refrain from\nuninformative commit messages as 'fixed typo'.\n\nThe preferred format of a commit message:\n\n::\n\n    docs/quickstart: Fixed a typo in the Nodes section.\n\n    If needed, elaborate further on this commit. Feel free to write a\n    complete blog post here if that helps us understand what this is\n    all about.\n\n    Fixes #4 and resolves #2.\n\nIf you'd like a more elaborate guide on how to write and format your commit\nmessages have a look at this post by `Tim Pope`_.\n\n.. _Tim Pope: http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html\n\nExamples\n========\n\n`vagrant-puppetboard`_\n\n.. _vagrant-puppetboard: https://github.com/visibilityspots/vagrant-puppet/tree/puppetboard\n\nA vagrant project to show off the puppetboard functionallity using the puppetboard puppet module on a puppetserver with puppetdb.\n\nScreenshots\n===========\n\n.. image:: screenshots/overview.png\n   :alt: Overview / Index / Homepage\n   :width: 1024\n   :height: 700\n   :align: center\n\n.. image:: screenshots/nodes.png\n   :alt: Nodes view, all active nodes\n   :width: 1024\n   :height: 700\n   :align: center\n\n.. image:: screenshots/node.png\n   :alt: Single node page / overview\n   :width: 1024\n   :height: 700\n   :align: center\n\n.. image:: screenshots/report.png\n   :alt: Report view\n   :width: 1024\n   :height: 700\n   :align: center\n\n.. image:: screenshots/facts.png\n   :alt: Facts view\n   :width: 1024\n   :height: 700\n   :align: center\n\n.. image:: screenshots/fact.png\n   :alt: Single fact, with graphs\n   :width: 1024\n   :height: 700\n   :align: center\n\n.. image:: screenshots/fact_value.png\n   :alt: All nodes that have this fact with that value\n   :width: 1024\n   :height: 700\n   :align: center\n\n.. image:: screenshots/metrics.png\n   :alt: Metrics view\n   :width: 1024\n   :height: 700\n   :align: center\n\n.. image:: screenshots/metric.png\n   :alt: Single metric\n   :width: 1024\n   :height: 700\n   :align: center\n\n.. image:: screenshots/query.png\n   :alt: Query view\n   :width: 1024\n   :height: 700\n   :align: center\n\n.. image:: screenshots/broken.png\n   :alt: Error page\n   :width: 1024\n   :height: 700\n   :align: center\n\n#########\nChangelog\n#########\n\nThis is the changelog for Puppetboard.\n\n0.2.2\n=====\n * Ensure Werkzeug <= 0.11.5\n\n0.2.1\n=====\n\n* Daily Charts\n* Fixed missing javascript files on radiator view.\n* TravisCI and Coveralls integration.\n* Fixed app crash in catalog view.\n* Upgrade pypuppetdb to 0.3.2\n* Enhanced queries for Node and Report (#271)\n* Optimize Inventory Code.\n* Use certname instead of hostname to identify nodes when applicable.\n* Add environment filter for facts.\n* Update cs.js to 0.4.11\n* Fix radiator column alignment\n* Security checks with bandit\n* Dockerfile now uses gunicorn and environment variables for\n  configuration.\n* Handle division by zero errors.\n* Implement new Jquery Datatables.\n* JSON output for radiator. * Move javascript to head tag.\n* Optimize reports and node page queries.\n* Fix all environments for PuppetDB 3.2\n* Fact graph chart now configurable.\n* Support for Flask 0.12 and Jinja2 2.9\n* Fix misreporting noops as changes.\n\n0.2.0\n=====\n\n* Full support for PuppetDB 4.x\n* Updating Semantic UI to 2.1.8\n* Updating Flask-WTF requirements to 0.12\n* Updating WTForms to 2.x\n* Restored CSRF protection on the Query Tab form\n* Updating Pypuppetdb requirement to 0.3.x\n* New configuration option OVERVIEW_FILTER allows users to add custom\n  PuppetDB query clauses to include/exclude nodes displayed on the\n  index page\n* Adding Radiator view similar to what is available in Puppet Dashboard\n* Adding a drop-down list in the Reports tab to configure the number of\n  reports displayed\n* Removing unneeded report_latest() endpoint. This endpoint was deprecated\n  with the addition of the `latest_report_hash` field in the Nodes\n  PuppetDB endpoint\n* Enhancing Report pagination\n* Using the OOP Query Builder available in Pypuppetdb 0.3.x\n* Allowing PQL queries in the Query Tab\n* Fixing double url-quoting bug on Metric endpodint calls\n* Adding a Boolean field to the Query form to prettyprint responses from\n  PuppetDB\n* Fixing corner-case where empty environments would trigger a ZeroDivisionError\n  due to the Number of Nodes divided by the Number of Resources calculation\n* Adding additional logging in `utils.py`\n\n0.1.2\n====\n\n* Add configuration option to set the default environment with new\n  configuration option DEFAULT_ENVIRONMENT, defaults to 'production'.\n* Loading all available environments with every page load.\n* Adding an \"All Environments\" item to the Environments dropdown to\n  remove all environment filters on PuppetDB data.\n* Updating README.rst to update links and describe new configuration\n  options.\n* Fixing Query form submission problem by disabling CSRF protection.\n  Needs to be re-implemented.\n* Updating the pypuppetdb requirement to >= 0.2.1, using information\n  available in PuppetDB 3.2 and higher\n** latest_report_hash and latest_report_status fields from the Nodes\n   endpoint, this effectively deprecates the report_latest() function\n** code_id from the Catalogs endpoint (current unused)\n* Adding a automatic refresh on the overview page to reload the page\n  every X number of seconds, defaults to 30. This is configurable\n  with the configuration option REFRESH_RATE\n* Fixing the table alignment in the catalog_compare() page by switching\n  to fixed tables from basic tables.\n* Using colors similar to Puppet Dashboard and Foreman for the status\n  counts sections\n\n0.1.1\n====\n\n* Fix bug where the reports template was not generating the report links\n  with the right environment\n\n0.1.0\n====\n\n* Requires pypuppetdb >= 0.2.0\n* Drop support for PuppetDB 2 and earlier\n* Full support for PuppetDB 3.x\n* The first directory location is now a Puppet environment which is filtered\n  on all supported queries. Users can browse different environments with a\n  select field in the top NavBar\n* Using limit, order_by and offset parameters adding pagaination on the Reports\n  page (available in the NavBar). Functionality is available to pages that\n  accept a page attribute.\n* The report page now directly queries pypuppetdb to match the report_id\n  value with the report hash or configuration_version fields.\n* Catching and aborting with a 404 if the report and report_latest function\n  queries do not return a generator object.\n* Adding a Catalogs page (similar to the Nodes page) with a form to compare\n  one node's catalog information with that of another node.\n* Updating the Query Endpoints for the Query page.\n* Adding to ``templates/_macros.html`` status_counts that shows node/report\n  status information, like what is avaiable on the index and nodes pages,\n  available to the reports pages and tables also.\n* Showing report logs and metrics in the report page.\n* Removing ``limit_reports`` from ``utils.py`` because this helper function\n  has been replaced by the limit PuppetDB paging function.\n\n**Known Issues**\n\n* fact_value pages rendered from JSON valued facts return no results. A more\n  sophisticated API is required to make use of JSON valued facts (through the\n  factsets, fact-paths and/or fact-contents endpoints for example)\n\n0.0.5\n=====\n\n* Now requires WTForms versions less than 2.0\n* Adding a Flask development server in ``dev.py``.\n* Adding CSRF protection VIA the flask_wtf CsrfProtect object.\n* Allowing users to configure the report limit on pages where reports are\n  listed with the LIMIT_REPORTS configuration option.\n* Adding an inventory page to users to be able to see all available nodes\n  and a configure lists of facts to display VIA the INVENTORY_FACTS\n  configuration option.\n* Adding a page to view a node's catalog information if enabled, disabled\n  by default. Can be changed with the ENABLE_CATALOG configuration attribute.\n* New configuration option GRAPH_FACTS allows the user to choose which graphs\n  will generate pie on the fact pages.\n* Replacing Chart.js with c3.js and d3.js.\n* Adding Semantic UI 0.16.1 and removing unused bootstrap styles.\n* Adding an OFFLINE_MODE configuration option to load local assets or from a\n  CDN service. This is useful in environments without internet access.\n\n0.0.4\n=====\n\n* Fix the sorting of the different tables containing facts.\n* Fix the license in our ``setup.py``. The license shouldn't be longer than\n  200 characters. We were including the full license tripping up tools like\n  bdist_rpm.\n\n0.0.3\n=====\nThis release introduces a few big changes. The most obvious one is the\nrevamped Overview page which has received significant love. Most of the work\nwas done by Julius H\u00e4rtl. The Nodes tab has been given a slight face-lift\ntoo.\n\nOther changes:\n\n* This release depends on the new pypuppetdb 0.1.0. Because of this the SSL\n  configuration options have been changed:\n\n  * ``PUPPETDB_SSL`` is gone and replaced by ``PUPPETDB_SSL_VERIFY`` which\n    now defaults to ``True``. This only affects connections to PuppetDB that\n    happen over SSL.\n  * SSL is automatically enabled if both ``PUPPETDB_CERT`` and\n    ``PUPPETDB_KEY`` are provided.\n\n* Display of deeply nested metrics and query results have been fixed.\n* Average resources per node metric is now displayed as a natural number.\n* A link back to the node has been added to the reports.\n* A few issues with reports have been fixed.\n* A new setting called ``UNRESPONSIVE_HOURS`` has been added which denotes\n  the amount of hours after which Puppetboard will display the node as\n  unreported if it hasn't checked in. We default to ``2`` hours.\n* The event message can now be viewed by clicking on the event.\n\nPuppetboard is now neatly packaged up and available on PyPi. This should\nsignificantly help reduce the convoluted installation instructions people had\nto follow.\n\nUpdated installation instructions have been added on how to install from PyPi\nand how to configure your HTTPD.\n\n0.0.2\n=====\nIn this release we've introduced a few new things. First of all we now require\npypuppetdb version 0.0.4 or later which includes support for the v3 API\nintroduced with PuppetDB 1.5.\n\nBecause of changes in PuppetDB 1.5 and therefor in pypuppetdb users of the v2\nAPI, regardless of the PuppetDB version, will no longer be able to view reports\nor events.\n\nIn light of this the following settings have been removed:\n\n* ``PUPPETDB_EXPERIMENTAL``\n\nTwo new settings have been added:\n\n* ``PUPPETDB_API``: an integer, defaulting to ``3``, representing the API\n  version we want to use.\n* ``ENABLE_QUERY``: a boolean, defaulting to ``True``, on wether or not to\n  be able to use the Query tab.\n\nWe've also added a few new features:\n\n* Thanks to some work done during PuppetConf together with Nick Lewis (from\n  Puppet Labs) we now expose all of PuppetDB's metrics in the Metrics tab. The\n  formatting isn't exactly pretty but it's a start.\n* Spencer Krum added the graphing capabilities to the Facts tab.\n* Daniel Lawrence added a feature so that facts on the node view are clickable\n  and take you to the complete overview of that fact for your infrastructure\n  and made the nodes in the complete facts list clickable so you can jump to a\n  node.\n* Klavs Klavsen contributed some documentation on how to run Puppetboard with\n  Passenger.\n\n0.0.1\n=====\nInitial release.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/voxpupuli/puppetboard",
    "keywords": "puppet puppetdb puppetboard",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "puppetboard",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/puppetboard/",
    "release_url": "https://pypi.org/project/puppetboard/0.2.2/",
    "requires_python": "",
    "summary": "Web frontend for PuppetDB",
    "version": "0.2.2"
  },
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d4b9384d61438ce54c715812a5fb17a1",
          "sha256": "a49abbf3b422fa54fd1309b12e9e2af86b381f2ffa6a3fe8d77984dae2fc2964"
        },
        "downloads": 1899,
        "filename": "puppetboard-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d4b9384d61438ce54c715812a5fb17a1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 57280,
        "upload_time": "2014-01-16T11:02:55",
        "url": "https://files.pythonhosted.org/packages/5a/29/fcbec60cc83fc3e875d276ec51dbf28cb460ebc9cbaa25d6a969fde07f7d/puppetboard-0.0.3.tar.gz"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "441d98db4126f7cf5c7394c8d3cd90b4",
          "sha256": "bceca6939f520a8cbd290c5d22174700332cb66493d09e5001ee80cb13ac62c8"
        },
        "downloads": 15942,
        "filename": "puppetboard-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "441d98db4126f7cf5c7394c8d3cd90b4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 53854,
        "upload_time": "2014-01-21T14:14:48",
        "url": "https://files.pythonhosted.org/packages/39/66/38550954008bbe493379619f1f5b48b87da273262bba4d81dc897212211e/puppetboard-0.0.4.tar.gz"
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f38924551b2b05ec0a3c1c1c650251d1",
          "sha256": "ee6da440c6425a1b746bb3ae498a7b9c2003952d7260d5ee25f1cdf997b56969"
        },
        "downloads": 4771,
        "filename": "puppetboard-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f38924551b2b05ec0a3c1c1c650251d1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 589918,
        "upload_time": "2015-10-21T22:56:22",
        "url": "https://files.pythonhosted.org/packages/7d/2a/c832cb3277d919e13d3e84c337833fb99a54144a12733bea289e63bfcb42/puppetboard-0.0.5.tar.gz"
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "72b1775e5b7aae79857839de3173632b",
          "sha256": "0a4ceb5156779b4e620e099e01e018c4cceed2ce4627b3d39cacaa73e60e22b0"
        },
        "downloads": 1370,
        "filename": "puppetboard-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "72b1775e5b7aae79857839de3173632b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 595077,
        "upload_time": "2015-11-10T01:55:46",
        "url": "https://files.pythonhosted.org/packages/fd/35/659f4a186afdfe9a9d6ce266c6289e9310841bfcd3b6dfdb14aec11b02ad/puppetboard-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "513b51d2bd5729664e34b7fce25f6695",
          "sha256": "0ecf680f1036441fe9302a83c14b783262eefaba692a57a6dbc3e19db6306bbd"
        },
        "downloads": 12547,
        "filename": "puppetboard-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "513b51d2bd5729664e34b7fce25f6695",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 595075,
        "upload_time": "2015-11-13T00:50:51",
        "url": "https://files.pythonhosted.org/packages/36/85/d47f56b613ae48cfe8fb3f9ec1b6f8fc788c0732e73655f2b60ac989381b/puppetboard-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6672bbc1592d3563a0fb917c594a19f9",
          "sha256": "e41b0ee5f4dead765922b4247f6d3a05f6373040aae2690035cca34f3f2f72cc"
        },
        "downloads": 146,
        "filename": "puppetboard-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6672bbc1592d3563a0fb917c594a19f9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 598857,
        "upload_time": "2016-03-22T00:31:19",
        "url": "https://files.pythonhosted.org/packages/a4/1f/e1423b4bb9f6439df0e816b5befdbcc9205c19297a73aa145e1abc9e42fe/puppetboard-0.1.3.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4dbf3e3305eb421ea6952f3aabe40ab1",
          "sha256": "25f4a4d847bdaf9125add6a42c802cd39b15350d8d01a21d63177367c4a78e02"
        },
        "downloads": 420,
        "filename": "puppetboard-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4dbf3e3305eb421ea6952f3aabe40ab1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 778843,
        "upload_time": "2016-06-29T00:45:38",
        "url": "https://files.pythonhosted.org/packages/42/05/947aed8b8d0cbdea06ff3e82f855d8a0b7be6e908ba8b1bded64c107eea6/puppetboard-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0e07aaf30ecefee8bc1e7822df86f509",
          "sha256": "1471c2555c9dbb3a651d64fb428fac3591caf1e70ed45f3cad6455044dc6a8d1"
        },
        "downloads": 18,
        "filename": "puppetboard-0.2.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "0e07aaf30ecefee8bc1e7822df86f509",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 844424,
        "upload_time": "2017-02-03T12:24:55",
        "url": "https://files.pythonhosted.org/packages/b3/b8/6d658dad27e02b365f1f231a8913f372f2fb1d6a01b688e70b9de0697dc3/puppetboard-0.2.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ec4634f2ad5a3d10fa70fec14537d96a",
          "sha256": "c3dc8679274306660cf3d9892f7202e96b6b7ec7ed7048e5a2d68481789cab76"
        },
        "downloads": 15,
        "filename": "puppetboard-0.2.1.tar.gz",
        "has_sig": true,
        "md5_digest": "ec4634f2ad5a3d10fa70fec14537d96a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 846574,
        "upload_time": "2017-02-03T12:24:58",
        "url": "https://files.pythonhosted.org/packages/0c/df/116a5fef08fc08e207ea47760a4defa7604102caf61e285a55b23a0b7da6/puppetboard-0.2.1.tar.gz"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "499e98e4c891b1e0a7b3dbe6b2a13fe4",
          "sha256": "4c6892bf3a1fc308a98e9b6343a503202dfaafbc5ce2c4e1a99aaf9a7490bfda"
        },
        "downloads": 42,
        "filename": "puppetboard-0.2.2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "499e98e4c891b1e0a7b3dbe6b2a13fe4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 844262,
        "upload_time": "2017-03-20T18:26:18",
        "url": "https://files.pythonhosted.org/packages/39/61/232691a3ad578df41bb57b8f352085687c5ab13b9d91c0a98c35f01adf9a/puppetboard-0.2.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9f2cfcaef52b0ea52bb23f6ebfc57b3a",
          "sha256": "60de9c2e92ea47e3d6bcfbcff48de6791760b31bae33218092ee9f2ac87825b4"
        },
        "downloads": 15,
        "filename": "puppetboard-0.2.2.tar.gz",
        "has_sig": true,
        "md5_digest": "9f2cfcaef52b0ea52bb23f6ebfc57b3a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 846428,
        "upload_time": "2017-03-20T18:26:23",
        "url": "https://files.pythonhosted.org/packages/17/ed/82dd834330ee8b5c1101874362f84523ef7ef9863fce76b8c2542621fb04/puppetboard-0.2.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "499e98e4c891b1e0a7b3dbe6b2a13fe4",
        "sha256": "4c6892bf3a1fc308a98e9b6343a503202dfaafbc5ce2c4e1a99aaf9a7490bfda"
      },
      "downloads": 42,
      "filename": "puppetboard-0.2.2-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "499e98e4c891b1e0a7b3dbe6b2a13fe4",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 844262,
      "upload_time": "2017-03-20T18:26:18",
      "url": "https://files.pythonhosted.org/packages/39/61/232691a3ad578df41bb57b8f352085687c5ab13b9d91c0a98c35f01adf9a/puppetboard-0.2.2-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "9f2cfcaef52b0ea52bb23f6ebfc57b3a",
        "sha256": "60de9c2e92ea47e3d6bcfbcff48de6791760b31bae33218092ee9f2ac87825b4"
      },
      "downloads": 15,
      "filename": "puppetboard-0.2.2.tar.gz",
      "has_sig": true,
      "md5_digest": "9f2cfcaef52b0ea52bb23f6ebfc57b3a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 846428,
      "upload_time": "2017-03-20T18:26:23",
      "url": "https://files.pythonhosted.org/packages/17/ed/82dd834330ee8b5c1101874362f84523ef7ef9863fce76b8c2542621fb04/puppetboard-0.2.2.tar.gz"
    }
  ]
}