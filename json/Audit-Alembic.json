{
  "info": {
    "author": "John Passaro",
    "author_email": "john.a.passaro@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Utilities"
    ],
    "description": "========\nOverview\n========\n\n\n\nAn Alembic plugin to keep records of upgrades and downgrades.\n\n* Free software: MIT license\n\nInstallation\n============\n\n::\n\n    pip install Audit-Alembic\n\nGetting started\n===============\n\nQuickstart\n----------\n\nAdd the following lines to your Alembic ``env.py``::\n\n    from audit_alembic import Auditor\n    from myapp import version\n\n    Auditor.create(version).setup()\n\nSlightly more involved::\n\n    # myapp.py\n    alembic_auditor = Auditor.create(version, ...)\n\n    # env.py\n    from myapp import alembic_auditor\n\n    def run_migrations_offline():\n        ...\n        context.configure(\n            ...\n            on_version_apply=alembic_auditor.listen\n        )\n        ...\n\n    def run_migrations_offline():\n        ...\n        context.configure(\n            ...\n            on_version_apply=alembic_auditor.listen\n        )\n    ...\n\nMore involved\n-------------\n\nThese functions create an alembic history table and merely ask\nyou to specify your application version (though they allow much\nelse to be customized as well). If you already have a table you\nwish to add records to whenever an alembic operation takes place,\nand you have a callable that creates a row for that table,\nyou can instantiate ``Auditor`` directly::\n\n    alembic_auditor = Auditor(HistoryTable, HistoryTable.alembic_version_applied)\n\nIn this case ``alembic_version_applied`` specifies how to build the row\nbased on Alembic's ``on_version_apply`` hook.\n\nCustomizing not just what data to populate a row with but whehter the row\nshould appear at all is not currently supported. If you wish to do so, directly\nusing Alembic's ``on_version_apply`` hook may be a better fit for you.\n\nDocumentation\n=============\n\nhttps://Audit-Alembic.readthedocs.io/ (not available yet)\n\nDevelopment\n===========\n\nStatus\n------\n\nThe most basic tests, for using Audit-Alembic \"correctly\", pass for Postgres,\nMYSQL, and SQLite as a file. Travis does not appear to support MSSQL or Oracle\nso test status for those DB backends is not known.\n\nThe next tests that need to be written should get us to 100% code coverage\nas well as covering various error cases.\n\nPlease feel free to expand from there. See the issues for a list of known\nissues to work on.\n\nTesting\n-------\n\nTo run basic tests::\n\n    $ virtualenv venv && source venv/bin/activate\n    (venv) $ python setup.py install\n    (venv) $ pip install pytest psycopg2\n    (venv) $ pytest\n\nTo run all tests (i.e. py2 + py3, across all database drivers), run::\n\n    $ tox\n\nAlso see our `Travis setup <https://travis-ci.org/jpassaro/Audit-Alembic>`_.\n\nNote, to combine the coverage data from all the tox environments run:\n\n.. list-table::\n    :widths: 10 90\n    :stub-columns: 1\n\n    - - Windows\n      - ::\n\n            set PYTEST_ADDOPTS=--cov-append\n            tox\n\n    - - Other\n      - ::\n\n            PYTEST_ADDOPTS=--cov-append tox\n\n\nChangelog\n=========\n\n0.1.0 (2017-06-21)\n------------------\n\n* First release on PyPI. (powered by cookiecutter-pylibrary_)\n\n.. _cookiecutter-pylibrary: https://github.com/ionelmc/cookiecutter-pylibrary",
    "docs_url": null,
    "download_url": "https://jpassaro/Audit-Alembic/archive/0.1.0.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jpassaro/Audit-Alembic",
    "keywords": "database,migration,db",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Audit-Alembic",
    "platform": "",
    "project_url": "https://pypi.org/project/Audit-Alembic/",
    "release_url": "https://pypi.org/project/Audit-Alembic/0.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "An Alembic plugin to keep records of upgrades and downgrades.",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "39d0778c66b8726ecb48f1146aaf71b9",
          "sha256": "c1aaf97abb2ad8d71051959a6d1327ce355e90eb12586b13682f888f6eca7089"
        },
        "downloads": 0,
        "filename": "Audit-Alembic-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "39d0778c66b8726ecb48f1146aaf71b9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26024,
        "upload_time": "2017-07-06T19:38:02",
        "url": "https://files.pythonhosted.org/packages/79/ab/47991bc0e292438c54a94aeec9f0a5c9b7ec1fae84db1e216e97111a655a/Audit-Alembic-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "39d0778c66b8726ecb48f1146aaf71b9",
        "sha256": "c1aaf97abb2ad8d71051959a6d1327ce355e90eb12586b13682f888f6eca7089"
      },
      "downloads": 0,
      "filename": "Audit-Alembic-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "39d0778c66b8726ecb48f1146aaf71b9",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 26024,
      "upload_time": "2017-07-06T19:38:02",
      "url": "https://files.pythonhosted.org/packages/79/ab/47991bc0e292438c54a94aeec9f0a5c9b7ec1fae84db1e216e97111a655a/Audit-Alembic-0.1.0.tar.gz"
    }
  ]
}