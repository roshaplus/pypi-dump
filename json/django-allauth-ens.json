{
  "info": {
    "author": "cof-geek",
    "author_email": "cof-geek@ens.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "##################\ndjango-allauth-ens\n##################\n\nThis package is meant to ease the management of authentication of django-apps\nat the ENS.\n\nOn top of django-allauth_, which provides easy ways to configure the\nauthentication of django-apps, this package provides:\n\n* social authentication using Clipper (*cas.eleves*);\n\n* ready-to-use templates in replacement of allauth' ones;\n\n* helpers to use *allauth*'s login and logout views instead of those\n  provided by third-parties (Django admin, wagtail, *etc*).\n\n\n**Contents**\n\n.. contents:: :local:\n\n\n************\nInstallation\n************\n\nFirst, `install django-allauth`_.\n\nThen, install *django-allauth-ens*:\n\n.. code-block:: bash\n\n  $ pip install django-allauth-ens\n\nAnd edit your settings file:\n\n.. code-block:: python\n\n  INSTALLED_APPS = [\n      # \u2026\n\n      # Above allauth to replace its templates.\n      'allauth_ens',\n\n      # Added when you installed allauth.\n      'allauth',\n      'allauth.account',\n      'allauth.socialaccount',\n\n      # Required to use CAS-based providers (e.g. Clipper).\n      'allauth_cas',\n\n      # \u2026\n  ]\n\n\n*************\nConfiguration\n*************\n\nSee also the `allauth configuration`_ and `advanced usage`_ docs pages.\n\n``ACCOUNT_HOME_URL``\n  *Optional* \u2014 A view name or an url path.\n\n  Used as a link from the templates of ``allauth_ens`` to return to your\n  application.\n\n  **Examples:** ``'home'``, ``'/home/'``\n\n``ACCOUNT_DETAILS_URL``\n  *Optional* \u2014 A view name or an url path.\n\n  Used as a link from the templates of ``allauth_ens`` for a logged in user to\n  access their profile in your app.\n\n  **Examples:** ``'my-account'``, ``'/my-account/'``\n\n*****\nViews\n*****\n\nCapture other login and logout views\n====================================\n\nYou can use the ``capture_login`` and ``capture_logout`` views to replace the\nlogin and logout views of other applications. They redirect to their similar\n*allauth*'s view and forward the query string, so that if a GET parameter\n``next`` is given along the initial request, user is redirected to this url on\nsuccessful login and logout.\n\nThis requires to add urls before the include of the app' urls.\n\nFor example, to replace the Django admin login and logout views with allauth's\nones:\n\n.. code-block:: python\n\n  from allauth_ens.views import capture_login, capture_logout\n\n  urlpatterns = [\n      # \u2026\n\n      # Add it before include of admin urls.\n      url(r'^admin/login/$', capture_login),\n      url(r'^admin/logout/$', capture_logout),\n\n      url(r'^admin/$', include(admin.site.urls)),\n\n      # \u2026\n  ]\n\n\n*********\nTemplates\n*********\n\nThe templates provided by *allauth* only contains the bare minimum. Hopefully,\nthis package includes ready-to-use templates. They are automatically used if\nyou put ``'allauth_ens'`` before ``'allauth'`` in your ``INSTALLED_APPS``,\n\n\n*********\nProviders\n*********\n\n*Google, Facebook\u00b8 but also Clipper\u2026*\n\nTo interact with an external authentication service, you must add the\ncorresponding provider application to your ``INSTALLED_APPS``.\n\n*allauth* already includes `several providers`_ (see also `their python path`_).\nIn addition to that, this package adds the following providers:\n\nClipper\n=======\n\nIt uses the CAS server `<https://cas.eleves.ens.fr/>`_.\n\nInstallation\n  Add\u00a0``'allauth_ens.providers.clipper'`` to the ``INSTALLED_APPS``.\n\nConfiguration\n  Available settings and their default value:\n\n  .. code-block:: python\n\n    SOCIALACCOUNT_PROVIDERS = {\n        # \u2026\n\n        'clipper': {\n\n            # These settings control whether a message containing a link to\n            # disconnect from the CAS server is added when users log out.\n            'MESSAGE_SUGGEST_LOGOUT_ON_LOGOUT': True,\n            'MESSAGE_SUGGEST_LOGOUT_ON_LOGOUT_LEVEL': messages.INFO,\n\n        },\n    }\n\nAuto-signup\n  Poulated data\n    - username: ``<clipper>``\n    - email (primary and verified): ``<clipper>@clipper.ens.fr``\n\n\n*********\nDemo Site\n*********\n\nSee ``example/README``.\n\n\n***********\nDevelopment\n***********\n\nFirst, you need to clone the repository.\n\nStylesheets\n===========\n\nThis project uses `compass`_ to compile SCSS files to CSS.\n\nUsing bundler\n-------------\n\nRequirements\n  * Ensure Ruby is installed (``$ ruby -v``) or `install Ruby`_\n  * Ensure bundler is installed (``$ bundle -v``) or install bundler\n    (``$ gem install bundler``)\n  * Install dependencies: ``$ bundle install``\n\nCompile\n  * Watch changes and recompile: ``$ bundle exec compass watch``\n\nTests\n=====\n\nLocal environment\n-----------------\n\n``$ ./runtests.py``\n\nAll\n---\n\nRequirements\n  * tox, install with ``$ pip install tox``\n  * ``python{2.7,3.4,3.5,3.6}`` must be available on your system path\n\nRun\n  * all (django/python with combined coverage + flake8 + isort): ``$ tox``\n\n\n******\nHowtos\n******\n\nAssuming you use the following settings (when needed):\n\n.. code-block:: python\n\n  ACCOUNT_ADAPTER = 'shared.allauth_adapter.AccountAdapter'\n  SOCIALACCOUNT_ADAPTER = 'shared.allauth_adapter.SocialAccountAdapter'\n\nSignup disabled, except for clipper provider (auto-signup)\n==========================================================\n\nIn ``shared/allauth_adapter.py``:\n\n.. code-block:: python\n\n  class AccountAdapter(DefaultAccountAdapter):\n      def is_open_for_signup(self, request):\n          return False\n\n  class SocialAccountAdapter(DefaultSocialAccountAdapter):\n      def is_open_for_signup(self, request, sociallogin):\n          # sociallogin.account is a SocialAccount instance.\n          # See https://github.com/pennersr/django-allauth/blob/master/allauth/socialaccount/models.py\n\n          if sociallogin.account.provider == 'clipper':\n              return True\n\n          # It returns AccountAdapter.is_open_for_signup().\n          # See https://github.com/pennersr/django-allauth/blob/master/allauth/socialaccount/adapter.py\n          return super().is_open_for_signup(request, sociallogin)\n\n\n.. _django-allauth: https://django-allauth.readthedocs.io/en/latest/overview.html\n.. _install django-allauth: https://django-allauth.readthedocs.io/en/latest/installation.html\n.. _several providers: https://django-allauth.readthedocs.io/en/latest/providers.html\n.. _allauth configuration: https://django-allauth.readthedocs.io/en/latest/configuration.html\n.. _advanced usage: https://django-allauth.readthedocs.io/en/latest/advanced.html\n.. _their python path: https://django-allauth.readthedocs.io/en/latest/installation.html\n.. _compass: https://compass-style.org/\n.. _install Ruby: https://www.ruby-lang.org/en/documentation/installation/\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://git.eleves.ens.fr/cof-geek/django-allauth-ens",
    "keywords": "django allauth cas authentication",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-allauth-ens",
    "platform": "",
    "project_url": "https://pypi.org/project/django-allauth-ens/",
    "release_url": "https://pypi.org/project/django-allauth-ens/1.0.0b2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Providers for django-allauth allowing using the ENS' auth-systems.",
    "version": "1.0.0b2"
  },
  "releases": {
    "0.0.1.dev1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "688d3dc5f5c7424e6ef11b5765f14abd",
          "sha256": "9524dc8bb4eb8f7053576aa57f43a65eea52eb2a11b957c7dd14e240313eb744"
        },
        "downloads": -1,
        "filename": "django-allauth-ens-0.0.1.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "688d3dc5f5c7424e6ef11b5765f14abd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 66305,
        "upload_time": "2017-10-18T14:50:55",
        "url": "https://files.pythonhosted.org/packages/d9/99/4bef933f802b7266f0dfffb0a3ba2e77a282230bcc21752f9fd0079b2113/django-allauth-ens-0.0.1.dev1.tar.gz"
      }
    ],
    "1.0.0b1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c5033889974672d30f1707927f9f5266",
          "sha256": "132c470b47f51551923488f141509e8c3019b3c1fba91e6f81d0677e8373fe8f"
        },
        "downloads": -1,
        "filename": "django-allauth-ens-1.0.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "c5033889974672d30f1707927f9f5266",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 63085,
        "upload_time": "2018-01-16T15:59:34",
        "url": "https://files.pythonhosted.org/packages/46/48/0181bd04ebd917b119219c746f38f13a6c8c893234725baaf8de960db5ca/django-allauth-ens-1.0.0b1.tar.gz"
      }
    ],
    "1.0.0b2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b01f7897fd5ae2da2d6e3a4325f1cda5",
          "sha256": "8f2ee40fac8603db473a5d99057c3c3d6a28d0881f90d9629121c701d86e3d11"
        },
        "downloads": -1,
        "filename": "django-allauth-ens-1.0.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "b01f7897fd5ae2da2d6e3a4325f1cda5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 65446,
        "upload_time": "2018-01-25T21:53:54",
        "url": "https://files.pythonhosted.org/packages/58/01/1087517cff95d942b56b71a682f36ce2be337e5adc4dc15d2252bca8fe79/django-allauth-ens-1.0.0b2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b01f7897fd5ae2da2d6e3a4325f1cda5",
        "sha256": "8f2ee40fac8603db473a5d99057c3c3d6a28d0881f90d9629121c701d86e3d11"
      },
      "downloads": -1,
      "filename": "django-allauth-ens-1.0.0b2.tar.gz",
      "has_sig": false,
      "md5_digest": "b01f7897fd5ae2da2d6e3a4325f1cda5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 65446,
      "upload_time": "2018-01-25T21:53:54",
      "url": "https://files.pythonhosted.org/packages/58/01/1087517cff95d942b56b71a682f36ce2be337e5adc4dc15d2252bca8fe79/django-allauth-ens-1.0.0b2.tar.gz"
    }
  ]
}