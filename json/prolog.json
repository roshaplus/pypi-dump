{
  "info": {
    "author": "David Krauth",
    "author_email": "dakrauth@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: System :: Logging",
      "Topic :: Utilities"
    ],
    "description": "======\nprolog\n======\n\nTools and convenience methods to simplify and expedite Python logging.\n\n* Simple - though opinionated - setup for common use-cases\n* Extensively and easily configurable via user and local files, as well as environ variables\n* Comes with full featured formatters and handlers that can also be used\n  in normal ``logging`` situations\n\nUsage\n=====\n\n``basic_config``\n----------------\n\nThe easiest way to begin using ``prolog`` is to add the following to your\napplication code::\n\n    import prolog\n    prolog.basic_config()\n\nThis will configure the ``root`` logger for the default level ``logging.INFO``\nand set up two handlers: a colorized, console streaming handler, as well as a file\nhandler set to log to the default file - ``pypro.log`` - in the main app's directory.\n\nTo specify select loggers defined in application or library code, you pass the\ncomma-seperated names of the desired loggers::\n\n    prolog.basic_config('myapp,another_app')\n\n``basic_config`` accepts the following parameters:\n\n\n``loggers``\n    The desired loggers to configure; can be either a comma-separated\n    string of logger names, a list of ``Logger`` instances, or ``None``\n    for the root logger.\n\n``level``\n    Specify the logging level for all loggers and handlers. Can be\n    either the numeric value or string name for the desired level.\n\n``handlers``\n    The handlers to add to the given ``loggers``; can be a comma-separated\n    string of shortcut names ('stream' or 'file', by default) or a list\n    of ``Handler`` instances.\n\n``propagate``\n    Indicates whether each ``logger`` instance will be set to propagte.\n\n``reset_handlers``\n    If True, force a reset of all currently configured handlers.\n\n``cfg``\n    The ``prolog.config.PrologConfig`` instance to use. If not given,\n    the default will be used (``prolog.config.config``). For all\n    preceding parameters except for ``loggers`` set to None (the default),\n    ``cfg`` will be used to determine the appropriate setting.\n\n\nExamples\n--------\n\nOnce installed, **prolog** can be invoked to show configuration settings or\nsample usage::\n\n    $ python -m prolog sample --level=DEBUG basic\n\n.. image:: https://raw.githubusercontent.com/dakrauth/prolog/master/resources/basic-output.png\n\nSetting colors via environments variables::\n\n    $ export PYPROLOG_LEVEL_COLORS='CRITICAL:white,red;ERROR:lightred;DEBUG:lightgray,cyan;*:gray,gray'\n    $ python -m prolog sample --level=DEBUG basic\n\n.. image:: https://raw.githubusercontent.com/dakrauth/prolog/master/resources/env-color-output.png\n\nDevelop and testing\n===================\n\n::\n\n    $ pip install invoke\n    $ inv develop\n    $ inv test\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/dakrauth/prolog",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "prolog",
    "platform": "",
    "project_url": "https://pypi.org/project/prolog/",
    "release_url": "https://pypi.org/project/prolog/0.1.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Simple, robust features for expediting application logging configuration",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1fc03c07b908fea5e02305d27626bc47",
          "sha256": "a297954379293e58b62da40e3297801fda0a00b84d65691bcc987ef49d1aeebb"
        },
        "downloads": 0,
        "filename": "prolog-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1fc03c07b908fea5e02305d27626bc47",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9344,
        "upload_time": "2017-09-22T22:15:21",
        "url": "https://files.pythonhosted.org/packages/69/33/37eff63f647a7e2d23c64fa4bba9381a2b40b990b770dd5327882ac731ff/prolog-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "1fc03c07b908fea5e02305d27626bc47",
        "sha256": "a297954379293e58b62da40e3297801fda0a00b84d65691bcc987ef49d1aeebb"
      },
      "downloads": 0,
      "filename": "prolog-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1fc03c07b908fea5e02305d27626bc47",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9344,
      "upload_time": "2017-09-22T22:15:21",
      "url": "https://files.pythonhosted.org/packages/69/33/37eff63f647a7e2d23c64fa4bba9381a2b40b990b770dd5327882ac731ff/prolog-0.1.1.tar.gz"
    }
  ]
}