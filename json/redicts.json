{
  "info": {
    "author": "adnymics",
    "author_email": "dev@adnymics.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Topic :: Database",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": ".. image:: docs/logo.svg\n    :width: 55%\n\nA utilty package to save arbitary nested python dicts and objects in redis.\n\n|rtd| |nbsp| |travis| |nbsp| |coverage| |nbsp| |pypi| |nbsp| |pep8|\n\n.. |rtd| image:: https://readthedocs.org/projects/redicts/badge/?version=latest\n   :target: http://redicts.readthedocs.io/en/latest/\n\n.. |coverage| image:: https://coveralls.io/repos/github/adnymics/redicts/badge.svg\n   :target: https://coveralls.io/github/adnymics/redicts\n\n.. |travis| image:: https://travis-ci.org/adnymics/redicts.svg?branch=master\n    :target: https://travis-ci.org/adnymics/redicts\n\n.. |pypi| image:: https://badge.fury.io/py/redicts.svg\n    :target: https://badge.fury.io/py/redicts\n\n.. |pep8| image:: https://img.shields.io/badge/code%20style-pep8-green.svg\n    :target: https://www.python.org/dev/peps/pep-0008\n\n.. |nbsp| unicode:: 0xA0\n   :trim:\n\nUsage\n=====\n\nThis package can be used to save arbitary values in a hierarchy. Each element\nof this hierarchy is referenced by a dotted path like this: ``a.b.c``. When\nsaving a nested dictionary, it's nested contents automatically get translated\nto such a dotted path by it's string keys:\n\n.. code-block:: python\n\n    # `23` can be read by specifying the path \"a.b.c\":\n    {\n        \"a\": {\n            \"b\": {\n                \"c\": 23\n            }\n        }\n    }\n\nA special feature of this package is concurrent access: It can be safely used\nfrom more than one process. The locking implementation is also separated and\ncan be used on it's one if desirable. Also, the implementation is clever enough\nto not require a global lock if changes are done in different parts of the\nhierarchy.\n\nYou can store every object in ``redicts`` that works with ``json.dumps()``.\n\nWhy?\n====\n\nWe use ``redis`` quite a lot in our day-to-day work and often want to share\nvalues between different (micro-)services. This package helps us to do that\nsafely and easily.\n\nDocumentation\n=============\n\nDocumentation can be found on readthedocs:\n\n    http://redicts.readthedocs.io/en/latest\n\nExample\n=======\n\nIf redis is started with default host/port/password, this should work:\n\n.. code-block:: pycon\n\n    >>> from redicts import Section\n    >>> with Section(\"a.b.c\") as sec:\n    ...     #  Setting values:\n    ...     sec[\"my-value\"] = 42\n    ...     sec[\"my-part\"] = {\"key\": \"value\"}\n    ...\n    ...     # Reading values:\n    ...     sec[\"my-value\"].val()     # => 42\n    ...     sec[\"my-part.key\"].val()  # => \"value\"\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/adnymics/redicts",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "redicts",
    "platform": "",
    "project_url": "https://pypi.org/project/redicts/",
    "release_url": "https://pypi.org/project/redicts/1.0.4/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Save arbitary nested python dicts and objects in redis",
    "version": "1.0.4"
  },
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c5167ede6f25867fad51f2a9c791069d",
          "sha256": "f6931d65b354cdd4d06ae79a57c67c5150e7487784f3e08f2266dafeb52cbd33"
        },
        "downloads": -1,
        "filename": "redicts-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c5167ede6f25867fad51f2a9c791069d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11413,
        "upload_time": "2018-01-10T12:58:28",
        "url": "https://files.pythonhosted.org/packages/bb/dc/91a47d39f79d40727e879d968a0711f01976a113d10809fbe46c898057fe/redicts-1.0.3.tar.gz"
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5338c9101bcb11d08458102e396bd41a",
          "sha256": "ee7a491cf6c92ac24b8a1b9f4cb15f2920ff537d5ec5cf23d18d97eef132c475"
        },
        "downloads": -1,
        "filename": "redicts-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5338c9101bcb11d08458102e396bd41a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11550,
        "upload_time": "2018-01-16T12:26:36",
        "url": "https://files.pythonhosted.org/packages/98/55/d3a66656fea01fe8d56f8d17e44c993ad5c063d2b9f32acd58344b049cf9/redicts-1.0.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5338c9101bcb11d08458102e396bd41a",
        "sha256": "ee7a491cf6c92ac24b8a1b9f4cb15f2920ff537d5ec5cf23d18d97eef132c475"
      },
      "downloads": -1,
      "filename": "redicts-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "5338c9101bcb11d08458102e396bd41a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 11550,
      "upload_time": "2018-01-16T12:26:36",
      "url": "https://files.pythonhosted.org/packages/98/55/d3a66656fea01fe8d56f8d17e44c993ad5c063d2b9f32acd58344b049cf9/redicts-1.0.4.tar.gz"
    }
  ]
}