{
  "info": {
    "author": "utapyngo",
    "author_email": "ut@pyngo.tom.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development"
    ],
    "description": "Datatable View\n==============\n\nThis package is used in conjunction with the jQuery plugin\n`DataTables <http://datatables.net/>`__, and supports state-saving\ndetection with\n`fnSetFilteringDelay <http://datatables.net/plug-ins/api>`__. The\npackage consists of a class-based view, and a small collection of\nutilities for rendering table data from models.\n\nDependencies:\n\n-  `dateutil <http://labix.org/python-dateutil>`__ library for flexible,\n   fault-tolerant date parsing.\n-  `Django <http://www.djangoproject.com/>`__ >= 2.0\n\nUpdate Note\n===========\n\nThis is a fork of the\n`0.8.3 <https://github.com/pivotal-energy-solutions/django-datatable-view/tree/django-datatable-view-0.8.3>`__\nrelease that has been updated to be compatible with Django >= 2.0.\n\nThis fork is useful if you would like to use django-datatable-view\nwithout jumping to the 0.9/1.0 release which has a number of changes in\nthe structure of ``datatableview``. If you are starting out a new\nproject, you are better off working with the `latest official\nrelease <https://github.com/pivotal-energy-solutions/django-datatable-view>`__.\n\nFeatures at a glance\n====================\n\n-  ``DatatableView``, a drop-in replacement for ``ListView`` that allows\n   options to be specified for the datatable that will be rendered on\n   the page.\n-  Verbose names as column headers\n-  Customizable table headers\n-  Compound columns (columns representing more than one model field)\n-  Columns backed by methods or callbacks instead of model fields\n-  Easy related fields\n-  Automatic searching support\n-  Ajax paging\n-  Zero queries on initial page load (no queryset evaluation is done\n   until AJAX requests)\n-  Multiple tables on the same view\n-  Non-\\ ``DatatableView`` showing a table powered by another view\n-  100% customization for all cell values\n-  Ajax search\n-  Search data fields that aren't present on the table\n-  Customization hook for each row's JSON object\n-  Customization hook for full JSON response object\n-  Drop-in x-editable support, per-column\n-  Customizable table templates\n-  Easy Bootstrap integration\n-  Allows all normal dataTables.js and x-editable Javascript options\n-  Javascript global object to do automatic or late initialization for\n   tables\n-  Library of common column markup options\n-  Full test suite\n\nDemos & Examples\n================\n\nThere is an example project wrapped up inside of the ``tests`` component\nof the resuable app, which can be executed using the following basic\nsetup:\n\n.. code:: bash\n\n    $ git clone https://github.com/utapyngo/django-datatable-view.git\n    $ cd django-datatable-view\n    $ mkvirtualenv datatableview\n    (datatableview)$ pip install -r requirements.txt\n    (datatableview)$ datatableview/tests/example_project/manage.py migrate\n    (datatableview)$ datatableview/tests/example_project/manage.py runserver\n\nThe example project is configured to use a local sqlite3 database, and\nrelies only on the ``django-datatable-view`` app itself. In fact, it\ndisables the normal ``django.contrib`` apps (except for\n``django.contrib.staticfiles``, so that the dev server can serve the\nincluded statics) and disables all default middleware but the\n``CommonMiddlware`` and ``CsrfViewMiddleware`` (the latter for\nsupporting the x-editable demonstrations.)\n\nA public online version of the example project can be found here:\n\nhttp://django-datatable-view.appspot.com/\n\nAuthors\n-------\n\n-  Tim Valenta\n-  Steven Klass\n\nContributors\n------------\n\n-  azreda\n-  utapyngo\n-  Alexandr Artemyev\n\nCopyright and license\n---------------------\n\nCopyright (c) 2012-2013 Pivotal Energy Solutions. All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may\nnot use this work except in compliance with the License. You may obtain\na copy of the License in the LICENSE file, or at:\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
    "docs_url": null,
    "download_url": "https://github.com/utapyngo/django-datatable-view/tarball/django20",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/utapyngo/django-datatable-view",
    "keywords": "",
    "license": "Apache License (2.0)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-datatable-view-compat",
    "platform": "",
    "project_url": "https://pypi.org/project/django-datatable-view-compat/",
    "release_url": "https://pypi.org/project/django-datatable-view-compat/0.8.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "This package is used in conjunction with the jQuery plugin (http://http://datatables.net/), and supports state-saving detection with (http://datatables.net/plug-ins/api).  The package consists of a class-based view, and a small collection of utilities for rendering table data from models.",
    "version": "0.8.3"
  },
  "releases": {
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "29afe44ec5a356e67e7f3a54f013d983",
          "sha256": "7fc39505b5099e0f4209d895dea2b5390a337ee4c3a7143f1865a90c21c0f222"
        },
        "downloads": -1,
        "filename": "django-datatable-view-compat-0.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "29afe44ec5a356e67e7f3a54f013d983",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40754,
        "upload_time": "2017-06-22T09:42:47",
        "url": "https://files.pythonhosted.org/packages/8f/07/cbd0df0ea73a10788e381cd55193e17384415b86fab38818371fbac22ffa/django-datatable-view-compat-0.8.2.tar.gz"
      }
    ],
    "0.8.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "483979388fbe044ba03a3b2b4ebf3e5e",
          "sha256": "1034f3c868a816798afbb3fab1eec78e8ece69bf2ebfddd69e32c9dad3e5575f"
        },
        "downloads": -1,
        "filename": "django-datatable-view-compat-0.8.3.tar.gz",
        "has_sig": false,
        "md5_digest": "483979388fbe044ba03a3b2b4ebf3e5e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42922,
        "upload_time": "2017-12-22T08:05:45",
        "url": "https://files.pythonhosted.org/packages/14/91/a3491b46126abd9a1712ddb427869a4fd0092789a6c8421bf87fe8938e38/django-datatable-view-compat-0.8.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "483979388fbe044ba03a3b2b4ebf3e5e",
        "sha256": "1034f3c868a816798afbb3fab1eec78e8ece69bf2ebfddd69e32c9dad3e5575f"
      },
      "downloads": -1,
      "filename": "django-datatable-view-compat-0.8.3.tar.gz",
      "has_sig": false,
      "md5_digest": "483979388fbe044ba03a3b2b4ebf3e5e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 42922,
      "upload_time": "2017-12-22T08:05:45",
      "url": "https://files.pythonhosted.org/packages/14/91/a3491b46126abd9a1712ddb427869a4fd0092789a6c8421bf87fe8938e38/django-datatable-view-compat-0.8.3.tar.gz"
    }
  ]
}