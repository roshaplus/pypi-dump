{
  "info": {
    "author": "Joohwan Oh",
    "author_email": "joohwan.oh@outlook.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "BinaryTree: Python Library for Learning Binary Trees\n----------------------------------------------------\n\n.. image:: https://travis-ci.org/joowani/binarytree.svg?branch=master\n    :target: https://travis-ci.org/joowani/binarytree\n    :alt: Build Status\n\n.. image:: https://badge.fury.io/py/binarytree.svg\n    :target: https://badge.fury.io/py/binarytree\n    :alt: Package Version\n\n.. image:: https://img.shields.io/badge/python-2.7%2C%203.4%2C%203.5-blue.svg\n    :target: https://github.com/joowani/binarytree\n    :alt: Python Versions\n\n.. image:: https://coveralls.io/repos/github/joowani/binarytree/badge.svg?branch=master\n    :target: https://coveralls.io/github/joowani/binarytree?branch=master\n    :alt: Test Coverage\n\n.. image:: https://img.shields.io/github/issues/joowani/binarytree.svg\n    :target: https://github.com/joowani/binarytree/issues\n    :alt: Issues Open\n\n.. image:: https://img.shields.io/badge/license-MIT-blue.svg\n    :target: https://raw.githubusercontent.com/joowani/binarytree/master/LICENSE\n    :alt: MIT License\n\n|\n\n.. image:: https://cloud.githubusercontent.com/assets/2701938/19216253/5063b602-8d82-11e6-9f54-977bee2147a0.gif\n    :alt: Demo GIF\n\nIntroduction\n============\n\nAre you studying binary trees for your next exam, assignment or technical interview?\n\n**BinaryTree** is a minimal Python library which provides you with a simple API\nto generate, visualize and inspect binary trees so you can skip the tedious\nwork of mocking up test trees, and dive right into practising your algorithms!\nHeaps and BSTs (binary search trees) are also supported.\n\n\nInstallation\n============\n\nTo install a stable version from PyPi_:\n\n.. code-block:: bash\n\n    ~$ pip install binarytree\n\n\nTo install the latest version directly from GitHub_:\n\n.. code-block:: bash\n\n    ~$ git clone https://github.com/joowani/binarytree.git\n    ~$ python binarytree/setup.py install\n\nYou may need to use ``sudo`` depending on your environment setup.\n\n.. _PyPi: https://pypi.python.org/pypi/binarytree\n.. _GitHub: https://github.com/joowani/binarytree\n\n\nGetting Started\n===============\n\nBy default, **BinaryTree** uses the following class to represent a tree node:\n\n.. code-block:: python\n\n    class Node(object):\n\n        def __init__(self, value):\n            self.value = value\n            self.left = None\n            self.right = None\n\n\nGenerate and pretty-print all kinds of binary trees:\n\n.. code-block:: python\n\n    from binarytree import tree, bst, heap, pprint\n\n    # Generate a random binary tree and return its root\n    my_tree = tree(height=5, balanced=False)\n\n    # Generate a random BST and return its root\n    my_bst = bst(height=5)\n\n    # Generate a random max heap and return its root\n    my_heap = heap(height=3, max=True)\n\n    # Pretty print the trees in stdout\n    pprint(my_tree)\n    pprint(my_bst)\n    pprint(my_heap)\n\n\n`List representations`_ are supported as well:\n\n.. _List representations:\n    https://en.wikipedia.org/wiki/Binary_tree#Arrays\n\n\n.. code-block:: python\n\n    from heapq import heapify\n    from binarytree import tree, convert, pprint\n\n    my_list = [7, 3, 2, 6, 9, 4, 1, 5, 8]\n\n    # Convert the list into a tree and return its root\n    my_tree = convert(my_list)\n\n    # Convert the list into a heap and return its root\n    heapify(my_list)\n    my_tree = convert(my_list)\n\n    # Convert the tree back to a list\n    my_list = convert(my_tree)\n\n    # Pretty-printing also works on lists\n    pprint(my_list)\n\n\nInspect a tree to quickly see its various properties:\n\n.. code-block:: python\n\n    from binarytree import tree, inspect\n\n    my_tree = tree(height=10)\n\n    result = inspect(my_tree)\n    print(result['height'])\n    print(result['node_count'])\n    print(result['leaf_count'])\n    print(result['min_value'])\n    print(result['max_value'])\n    print(result['min_leaf_depth'])\n    print(result['max_leaf_depth'])\n    print(result['is_bst'])\n    print(result['is_max_heap'])\n    print(result['is_min_heap'])\n    print(result['is_height_balanced'])\n    print(result['is_weight_balanced'])\n\n\nImport the `Node` class and build your own trees:\n\n.. code-block:: python\n\n    from binarytree import Node, pprint\n\n    root = Node(1)\n    root.left = Node(2)\n    root.right = Node(3)\n    root.left.left = Node(4)\n    root.left.right = Node(5)\n\n    pprint(root)\n\n\nIf the default `Node` class does not meet your requirements, you can define\nand use your own custom node specification:\n\n.. code-block:: python\n\n    from binarytree import Node, setup, tree, pprint\n\n    # Define your own null/sentinel value\n    my_null = -1\n\n    # Define your own node class\n    class MyNode(object):\n\n        def __init__(self, data, left, right):\n            self.data = data\n            self.l_child = left\n            self.r_child = right\n\n    # Call setup in the beginning to apply your specification\n    setup(\n        node_init_func=lambda v: MyNode(v, my_null, my_null),\n        node_class=MyNode,\n        null_value=my_null,\n        value_attr='data',\n        left_attr='l_child',\n        right_attr='r_child'\n    )\n    my_custom_tree = tree()\n    pprint(my_custom_tree)\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/joowani/binarytree",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "binarytree",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/binarytree/",
    "release_url": "https://pypi.org/project/binarytree/1.1.1/",
    "requires_python": null,
    "summary": "Python Library for Learning Binary Trees",
    "version": "1.1.1"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "93f62747091f27ef365a69753b8c75ec",
          "sha256": "9993cacdc835b647a35c7696a285eb5ab8e4fc43130602679feac9d1fd493c76"
        },
        "downloads": 90,
        "filename": "binarytree-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "93f62747091f27ef365a69753b8c75ec",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5240,
        "upload_time": "2016-10-08T22:30:06",
        "url": "https://files.pythonhosted.org/packages/64/32/6d36214647ff560a402d4a67544e11ab3d4dc88e73190361993d914447c8/binarytree-1.0.tar.gz"
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "54edea15067ee954e006ec68ea3f2632",
          "sha256": "bff56bd346bbbaff33f80471d4194aa0465315e8e5b8004f1bdff97e7cbc72d3"
        },
        "downloads": 156,
        "filename": "binarytree-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "54edea15067ee954e006ec68ea3f2632",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5804,
        "upload_time": "2016-10-10T06:14:25",
        "url": "https://files.pythonhosted.org/packages/3b/a0/ac29f4d7448a5929b4edbd36a7e61d079c41848b54f0c3d8bb3446c60bee/binarytree-1.1.tar.gz"
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "36bb0c2da989745053d4f6071f8835b3",
          "sha256": "ea8c2b4a65785c21d561e4eea04777a79bf55c26a506f80c7682248b17a4afaf"
        },
        "downloads": 21,
        "filename": "binarytree-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "36bb0c2da989745053d4f6071f8835b3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6206,
        "upload_time": "2017-01-12T05:58:14",
        "url": "https://files.pythonhosted.org/packages/03/22/2f4bf81baa8f19e212dd894b68da3b6073a5ecf57a1572ce2c950f0264c8/binarytree-1.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "36bb0c2da989745053d4f6071f8835b3",
        "sha256": "ea8c2b4a65785c21d561e4eea04777a79bf55c26a506f80c7682248b17a4afaf"
      },
      "downloads": 21,
      "filename": "binarytree-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "36bb0c2da989745053d4f6071f8835b3",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6206,
      "upload_time": "2017-01-12T05:58:14",
      "url": "https://files.pythonhosted.org/packages/03/22/2f4bf81baa8f19e212dd894b68da3b6073a5ecf57a1572ce2c950f0264c8/binarytree-1.1.1.tar.gz"
    }
  ]
}