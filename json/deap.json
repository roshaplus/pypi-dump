{
  "info": {
    "author": "deap Development Team",
    "author_email": "deap-users@googlegroups.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "DEAP\n====\n\nDEAP is a novel evolutionary computation framework for rapid prototyping\nand testing of ideas. It seeks to make algorithms explicit and data\nstructures transparent. It works in perfect harmony with parallelisation\nmechanism such as multiprocessing and\n`SCOOP <http://scoop.googlecode.com>`__.\n\nDEAP includes the following features:\n\n-  Genetic algorithm using any imaginable representation\n\n   -  List, Array, Set, Dictionary, Tree, Numpy Array, etc.\n\n-  Genetic programing using prefix trees\n\n   -  Loosely typed, Strongly typed\n   -  Automatically defined functions\n\n-  Evolution strategies (including CMA-ES)\n-  Multi-objective optimisation (NSGA-II, SPEA-II)\n-  Co-evolution (cooperative and competitive) of multiple populations\n-  Parallelization of the evaluations (and more)\n-  Hall of Fame of the best individuals that lived in the population\n-  Checkpoints that take snapshots of a system regularly\n-  Benchmarks module containing most common test functions\n-  Genealogy of an evolution (that is compatible with\n   `NetworkX <http://networkx.lanl.gov>`__)\n-  Examples of alternative algorithms : Particle Swarm Optimization,\n   Differential Evolution, Estimation of Distribution Algorithm\n\nDownloads\n---------\n\nFollowing acceptation of `PEP\n438 <http://www.python.org/dev/peps/pep-0438/>`__ by the Python\ncommunity, we have moved DEAP's source releases on\n`PyPI <https://pypi.python.org>`__.\n\nYou can find the most recent releases at:\nhttps://pypi.python.org/pypi/deap/.\n\nDocumentation\n-------------\n\nSee the `DEAP User's Guide <http://deap.readthedocs.org/en/1.0.x/>`__\nfor DEAP documentation.\n\nIn order to get the tip documentation, change directory to the ``doc``\nsubfolder and type in ``make html``, the documentation will be under\n``_build/html``. You will need `Sphinx <http://sphinx.pocoo.org>`__ to\nbuild the documentation.\n\nNotebooks\n~~~~~~~~~\n\nAlso checkout our new `notebook\nexamples <https://github.com/DEAP/notebook>`__. Using\n`IPython's <http://ipython.org/>`__ notebook feature you'll be able to\nnavigate and execute each block of code individually and fell what every\nline is doing. Either, look at the notebooks online using the notebook\nviewer links at the botom of the page or download the notebooks,\nnavigate to the you download directory and run\n\n.. code:: bash\n\n    ipython notebook --pylab inline\n\nInstallation\n------------\n\nWe encourage you to use easy\\_install or pip to install DEAP on your\nsystem. Other installation procedure like apt-get, yum, etc. usually\nprovide an outdated version.\n\n.. code:: bash\n\n    pip install deap\n\nIf you wish to build from sources, download or clone the repository and\ntype\n\n.. code:: bash\n\n    python setup.py install\n\nRequirements\n------------\n\nThe most basic features of DEAP requires Python2.6. In order to combine\nthe toolbox and the multiprocessing module Python2.7 is needed for its\nsupport to pickle partial functions. CMA-ES requires Numpy, and we\nrecommend matplotlib for visualization of results as it is fully\ncompatible with DEAP's API.\n\nSince version 0.8, DEAP is compatible out of the box with Python 3. The\ninstallation procedure automatically translates the source to Python 3\nwith 2to3.\n\nExample\n-------\n\nThe following code gives a quick overview how simple it is to implement\nthe Onemax problem optimization with genetic algorithm using DEAP. More\nexamples are provided\n`here <http://deap.gel.ulaval.ca/doc/default/examples/index.html>`__.\n\n.. code:: python\n\n    import array, random\n    from deap import creator, base, tools, algorithms\n\n    creator.create(\"FitnessMax\", base.Fitness, weights=(1.0,))\n    creator.create(\"Individual\", array.array, typecode='b', fitness=creator.FitnessMax)\n\n    toolbox = base.Toolbox()\n\n    toolbox.register(\"attr_bool\", random.randint, 0, 1)\n    toolbox.register(\"individual\", tools.initRepeat, creator.Individual, toolbox.attr_bool, 100)\n    toolbox.register(\"population\", tools.initRepeat, list, toolbox.individual)\n\n    def evalOneMax(individual):\n        return sum(individual),\n\n    toolbox.register(\"evaluate\", evalOneMax)\n    toolbox.register(\"mate\", tools.cxTwoPoint)\n    toolbox.register(\"mutate\", tools.mutFlipBit, indpb=0.05)\n    toolbox.register(\"select\", tools.selTournament, tournsize=3)\n\n    population = toolbox.population(n=300)\n\n    NGEN=40\n    for gen in range(NGEN):\n        offspring = algorithms.varAnd(population, toolbox, cxpb=0.5, mutpb=0.1)\n        fits = toolbox.map(toolbox.evaluate, offspring)\n        for fit, ind in zip(fits, offspring):\n            ind.fitness.values = fit\n        population = offspring\n\nHow to cite DEAP\n----------------\n\nAuthors of scientific papers including results generated using DEAP are\nencouraged to cite the following paper.\n\n.. code:: xml\n\n    @article{DEAP_JMLR2012, \n        author    = \" F\\'elix-Antoine Fortin and Fran\\c{c}ois-Michel {De Rainville} and Marc-Andr\\'e Gardner and Marc Parizeau and Christian Gagn\\'e \",\n        title     = { {DEAP}: Evolutionary Algorithms Made Easy },\n        pages    = { 2171--2175 },\n        volume    = { 13 },\n        month     = { jul },\n        year      = { 2012 },\n        journal   = { Journal of Machine Learning Research }\n    }\n\nPublications on DEAP\n--------------------\n\n-  Fran\u00e7ois-Michel De Rainville, F\u00e9lix-Antoine Fortin, Marc-Andr\u00e9\n   Gardner, Marc Parizeau and Christian Gagn\u00e9, \"DEAP -- Enabling Nimbler\n   Evolutions\", SIGEVOlution, vol. 6, no 2, pp. 17-26, February 2014.\n   `Paper <http://goo.gl/tOrXTp>`__\n-  F\u00e9lix-Antoine Fortin, Fran\u00e7ois-Michel De Rainville, Marc-Andr\u00e9\n   Gardner, Marc Parizeau and Christian Gagn\u00e9, \"DEAP: Evolutionary\n   Algorithms Made Easy\", Journal of Machine Learning Research, vol. 13,\n   pp. 2171-2175, jul 2012. `Paper <http://goo.gl/amJ3x>`__\n-  Fran\u00e7ois-Michel De Rainville, F\u00e9lix-Antoine Fortin, Marc-Andr\u00e9\n   Gardner, Marc Parizeau and Christian Gagn\u00e9, \"DEAP: A Python Framework\n   for Evolutionary Algorithms\", in !EvoSoft Workshop, Companion proc.\n   of the Genetic and Evolutionary Computation Conference (GECCO 2012),\n   July 07-11 2012. `Paper <http://goo.gl/pXXug>`__\n\nProjects using DEAP\n-------------------\n\n-  Macret, M. and Pasquier, P. (2013). Automatic Tuning of the OP-1\n   Synthesizer Using a Multi-objective Genetic Algorithm. In Proceedings\n   of the 10th Sound and Music Computing Conference (SMC). (pp 614-621).\n-  Fortin, F. A., Grenier, S., & Parizeau, M. (2013, July). Generalizing\n   the improved run-time complexity algorithm for non-dominated sorting.\n   In Proceeding of the fifteenth annual conference on Genetic and\n   evolutionary computation conference (pp. 615-622). ACM.\n-  Fortin, F. A., & Parizeau, M. (2013, July). Revisiting the NSGA-II\n   crowding-distance computation. In Proceeding of the fifteenth annual\n   conference on Genetic and evolutionary computation conference (pp.\n   623-630). ACM.\n-  Marc-Andr\u00e9 Gardner, Christian Gagn\u00e9, and Marc Parizeau. Estimation of\n   Distribution Algorithm based on Hidden Markov Models for\n   Combinatorial Optimization. in Comp. Proc. Genetic and Evolutionary\n   Computation Conference (GECCO 2013), July 2013.\n-  J. T. Zhai, M. A. Bamakhrama, and T. Stefanov. \"Exploiting\n   Just-enough Parallelism when Mapping Streaming Applications in Hard\n   Real-time Systems\". Design Automation Conference (DAC 2013), 2013.\n-  V. Akbarzadeh, C. Gagn\u00e9, M. Parizeau, M. Argany, M. A Mostafavi,\n   \"Probabilistic Sensing Model for Sensor Placement Optimization Based\n   on Line-of-Sight Coverage\", Accepted in IEEE Transactions on\n   Instrumentation and Measurement, 2012.\n-  M. Reif, F. Shafait, and A. Dengel. \"Dataset Generation for\n   Meta-Learning\". Proceedings of the German Conference on Artificial\n   Intelligence (KI'12). 2012.\n-  M. T. Ribeiro, A. Lacerda, A. Veloso, and N. Ziviani.\n   \"Pareto-Efficient Hybridization for Multi-Objective Recommender\n   Systems\". Proceedings of the Conference on Recommanders Systems\n   (!RecSys'12). 2012.\n-  M. P\u00e9rez-Ortiz, A. Arauzo-Azofra, C. Herv\u00e1s-Mart\u00ednez, L.\n   Garc\u00eda-Hern\u00e1ndez and L. Salas-Morera. \"A system learning user\n   preferences for multiobjective optimization of facility layouts\".\n   Pr,oceedings on the Int. Conference on Soft Computing Models in\n   Industrial and Environmental Applications (SOCO'12). 2012.\n-  L\u00e9vesque, J.C., Durand, A., Gagn\u00e9, C., and Sabourin, R.,\n   Multi-Objective Evolutionary Optimization for Generating Ensembles of\n   Classifiers in the ROC Space, Genetic and Evolutionary Computation\n   Conference (GECCO 2012), 2012.\n-  Marc-Andr\u00e9 Gardner, Christian Gagn\u00e9, and Marc Parizeau, \"Bloat\n   Control in Genetic Programming with Histogram-based Accept-Reject\n   Method\", in Proc. Genetic and Evolutionary Computation Conference\n   (GECCO 2011), 2011.\n-  Vahab Akbarzadeh, Albert Ko, Christian Gagn\u00e9, and Marc Parizeau,\n   \"Topography-Aware Sensor Deployment Optimization with CMA-ES\", in\n   Proc. of Parallel Problem Solving from Nature (PPSN 2010), Springer,\n   2010.\n-  DEAP is also used in ROS as an optimization package\n   http://www.ros.org/wiki/deap.\n-  DEAP is an optional dependency for\n   `PyXRD <https://github.com/mathijs-dumon/PyXRD>`__, a Python\n   implementation of the matrix algorithm developed for the X-ray\n   diffraction analysis of disordered lamellar structures.\n\nIf you want your project listed here, send us a link and a brief\ndescription and we'll be glad to add it.",
    "docs_url": "https://pythonhosted.org/deap/",
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://www.github.com/deap",
    "keywords": "evolutionary algorithms,genetic algorithms,genetic programming,cma-es,ga,gp,es,pso",
    "license": "LGPL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "deap",
    "platform": "any",
    "project_url": "https://pypi.org/project/deap/",
    "release_url": "https://pypi.org/project/deap/1.0.2/",
    "requires_python": null,
    "summary": "Distributed Evolutionary Algorithms in Python",
    "version": "1.0.2"
  },
  "releases": {
    "0.6": [],
    "0.7": [],
    "0.7.1": [],
    "0.8": [],
    "0.8.1": [],
    "0.8.2": [],
    "0.9.0": [],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d844135eb93573c45e45f6dd8b15e2dc",
          "sha256": "3179a64dd459bb204c81228be05f27fa3a1e920c710d3a02aaae5198b524ebd0"
        },
        "downloads": 3105,
        "filename": "deap-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d844135eb93573c45e45f6dd8b15e2dc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 969160,
        "upload_time": "2014-02-19T13:52:52",
        "url": "https://files.pythonhosted.org/packages/8c/f8/693ae0704656b6c0f44cc6e693b058dbaaf0af0d28e5ee1332152ff5fa49/deap-0.9.1.tar.gz"
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9455e43a88f9f3afc46163f499c8eae5",
          "sha256": "ce5e950474a83323c98e3f5d55aa044054a96a89b56d5bc46b2037f983908f80"
        },
        "downloads": 2126,
        "filename": "deap-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9455e43a88f9f3afc46163f499c8eae5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 969252,
        "upload_time": "2014-02-19T14:06:21",
        "url": "https://files.pythonhosted.org/packages/d5/ca/2cf98e1e0d4e3643d5ac2097136bfd6a401414a324629655d23a1fab26fd/deap-0.9.2.tar.gz"
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "59a5aee238326e6d948883a6b2b12924",
          "sha256": "724720ababf419a82754b95da765fe228acb382f776e3df74222055d27a28754"
        },
        "downloads": 3507,
        "filename": "deap-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "59a5aee238326e6d948883a6b2b12924",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 847713,
        "upload_time": "2014-02-20T16:16:49",
        "url": "https://files.pythonhosted.org/packages/7a/00/a67c0751b8bda3b419ec942a7cc532bf4bda666b4cfe27eb355e53159190/deap-1.0.0.tar.gz"
      }
    ],
    "1.0.0rc3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "099279fd19578ca32f50ecf46988d87b",
          "sha256": "59ba8c96865d5f401f5dc2a2c72bb14f57824bab64b782eef1c3cd3d75eb357d"
        },
        "downloads": 1990,
        "filename": "deap-1.0.0rc3.tar.gz",
        "has_sig": false,
        "md5_digest": "099279fd19578ca32f50ecf46988d87b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 845392,
        "upload_time": "2014-02-17T01:57:35",
        "url": "https://files.pythonhosted.org/packages/90/c6/946f7474b18600ae189fc5b81fa3ceac6a7bed7633d0825a8e1cb16f72ea/deap-1.0.0rc3.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f1d948500ac658af6d072cb2e74030d9",
          "sha256": "142ba4139b9d4adfab842b8d2192adf991d95998ccfb78f14155e3d2eed91fb2"
        },
        "downloads": 14681,
        "filename": "deap-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f1d948500ac658af6d072cb2e74030d9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 848514,
        "upload_time": "2014-04-08T14:11:50",
        "url": "https://files.pythonhosted.org/packages/70/25/a58a5eee102f9486b9aa729e43de438c6cedbe6dbad8a1705a2902311397/deap-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ccf5ed7562e4d6236c9416e3b5a9d941",
          "sha256": "c52bd32b8f0143db3a0b90f2b976c920b588638d6999ca0d038d8b1c07f7950b"
        },
        "downloads": 33426,
        "filename": "deap-1.0.2.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "ccf5ed7562e4d6236c9416e3b5a9d941",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 852627,
        "upload_time": "2015-05-13T13:03:06",
        "url": "https://files.pythonhosted.org/packages/5b/d7/a49d3dd7aa8cbaf2b1ac8f4d6495824c886fea8b3dac4a73dc4df94cad76/deap-1.0.2.post2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ccf5ed7562e4d6236c9416e3b5a9d941",
        "sha256": "c52bd32b8f0143db3a0b90f2b976c920b588638d6999ca0d038d8b1c07f7950b"
      },
      "downloads": 33426,
      "filename": "deap-1.0.2.post2.tar.gz",
      "has_sig": false,
      "md5_digest": "ccf5ed7562e4d6236c9416e3b5a9d941",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 852627,
      "upload_time": "2015-05-13T13:03:06",
      "url": "https://files.pythonhosted.org/packages/5b/d7/a49d3dd7aa8cbaf2b1ac8f4d6495824c886fea8b3dac4a73dc4df94cad76/deap-1.0.2.post2.tar.gz"
    }
  ]
}