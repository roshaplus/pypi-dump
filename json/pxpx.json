{
  "info": {
    "author": "Johan Walles",
    "author_email": "walles@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Monitoring",
      "Topic :: System :: Systems Administration",
      "Topic :: Utilities"
    ],
    "description": "|Build Status| |Coverage Status|\n\n``ps`` and ``top`` for Human Beings\n===================================\n\nInstallation\n------------\nFor a standalone install, copy / paste this command into a terminal::\n\n  curl -Ls https://github.com/walles/px/raw/python/install.sh | bash\n\nOr you can install from Pypi::\n\n  sudo pip install --upgrade pxpx\n\nNow, you should be able to run ``px``, ``px --help`` or ``ptop`` from the command\nline. Otherwise please verify that ``/usr/local/bin`` is in your ``$PATH``.\n\nTo try ``px`` without installing it, just `download the latest px.pex`_,\n``chmod a+x px.pex``, then run ``./px.pex``.\n\nUsage\n-----\nJust type ``px`` or ``ptop``, that's a good start!\n\nTo exit ``ptop``, press \"``q``\".\n\nAlso try ``px --help`` to see what else ``px`` can do except for just listing all\nprocesses.\n\nOutput\n======\n\n``px``\n-------------\nRunning just ``px`` lists all running processes, with the most interesting ones last.\nOutput truncated for brevity.\n\n::\n\n  PID   COMMAND                         USERNAME            CPU RAM COMMANDLINE\n      0 kernel                          root                 --  -- kernel PID 0\n    116 KernelEventAgent                root              0.01s  0% /usr/sbin/KernelEventAgent\n    426 corestoragehelperd              root              0.05s  0% corestoragehelperd\n    808 PluginXPCService                johan             0.05s  0% /System/Library/PrivateFrameworks/StoreXPCServices.framework/Versions/A/XPCServices/com.apple.appsto\n  ...\n  80678 -fish                           johan             0.25s  0% -fish\n  80490 Google Chrome Helper            johan            14.76s  1% /Applications/Google Chrome.app/Contents/Versions/58.0.3029.110/Google Chrome Helper.app/Contents/MacOS/Google Chrome Helper --type=renderer --field-trial-handle=1 --lang=sv --enable-offline-auto-reload --enable-offline-auto-reload-visible-only --blink-settings=disallowFetchForDocWrittenScriptsInMainFrame=false,disallowFetchForDocWrittenScriptsInMainFrameOnSlowConnections=false --enable-pinch --num-raster-threads=2 --enable-zero-copy --enable-gpu-memory-buffer-compositor-resources --enable-main-frame-before-activation --content-image-texture-target=0,0,3553;0,1,3553;0,2,3553;0,3,3553;0,4,3553;0,5,3553;0,6,3553;0,7,3553;0,8,3553;0,9,3553;0,10,34037;0,11,34037;0,12,34037;0,13,3553;0,14,3553;0,15,3553;1,0,3553;1,1,3553;1,2,3553;1,3,3553;1,4,3553;1,5,3553;1,6,3553;1,7,3553;1,8,3553;1,9,3553;1,10,34037;1,11,34037;1,12,34037;1,13,3553;1,14,3553;1,15,3553;2,0,3553;2,1,3553;2,2,3553;2,3,3553;2,4,3553;2,5,3553;2,6,3553;2,7,3553;2,8,3553;2,9,3553;2,10,34037;2,11,34037;2,12,34037;2,13,3553;2,14,3553;2,15,3553;3,0,3553;3,1,3553;3,2,3553;3,3,3553;3,4,3553;3,5,34037;3,6,3553;3,7,3553;3,8,3553;3,9,3553;3,10,3553;3,11,3553;3,12,34037;3,13,3553;3,14,34037;3,15,34037;4,0,3553;4,1,3553;4,2,3553;4,3,3553;4,4,3553;4,5,34037;4,6,3553;4,7,3553;4,8,3553;4,9,3553;4,10,3553;4,11,3553;4,12,34037;4,13,3553;4,14,34037;4,15,34037 --disable-accelerated-video-decode --disable-webrtc-hw-vp8-encoding --renderer-client-id=1309\n  80729 mdworker                        johan             0.06s  0% /System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Versions/A/Support/mdworker -s mdworker -c MDSImporterWorker -m com.apple.mdworker.shared\n  80728 AddressBookSourceSync           johan             0.28s  0% /System/Library/Frameworks/AddressBook.framework/Versions/A/Helpers/AddressBookSourceSync.app/Contents/MacOS/AddressBookSourceSync\n  80720 GradleWrapperMain               johan              2.6s  1% /usr/bin/java -Xdock:name=Gradle -Xdock:icon=/Users/johan/src/flickr-uploader/FlickrUploaderAndroid/media/gradle.icns -Dorg.gradle.appname=gradlew -classpath /Users/johan/src/flickr-uploader/FlickrUploaderAndroid/gradle/wrapper/gradle-wrapper.jar org.gradle.wrapper.GradleWrapperMain build\n  80727 GradleDaemon                    johan            25.56s  2% /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/bin/java -Xmx1536M -Dfile.encoding=UTF-8 -Duser.country=SE -Duser.language=sv -Duser.variant -cp /Users/johan/.gradle/wrapper/dists/gradle-3.5-all/7s64ktr9gh78lhv83n6m1hq9u6/gradle-3.5/lib/gradle-launcher-3.5.jar org.gradle.launcher.daemon.bootstrap.GradleDaemon 3.5\n\n* To give you the most interesting processes close to your next prompt, ``px``\n  puts last in its output processes that:\n\n  * Have been started recently (can be seen in the list as high PIDs)\n\n  * Are using lots of memory\n\n  * Have used lots of CPU time\n\n* Java processes are presented as their main class (``GradleDaemon``) rather\n  than as their executable (``java``). `This support is available for many VMs`_.\n\n``px java``\n-----------\nThis lists all Java processes. Note how they are presented as their main class\n(``GradleDaemon``) rather than as their executable (``java``). `This support is available for many VMs`_.\n\n::\n\n  PID   COMMAND      USERNAME        CPU   RAM COMMANDLINE\n  80727 GradleDaemon johan         1m46s  5% /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/bin/java -Xmx1536M -Dfile.encoding=UTF-8 -Duser.country=SE -Duser.language=sv -Duser.variant -cp /Users/johan/.gradle/wrapper/dists/gradle-3.5-all/7s64ktr9gh78lhv83n6m1hq9u6/gradle-3.5/lib/gradle-launcher-3.5.jar org.gradle.launcher.daemon.bootstrap.GradleDaemon 3.5\n  81192 GradleWrapperMain johan    2.57s  1% /usr/bin/java -Xdock:name=Gradle -Xdock:icon=/Users/johan/src/flickr-uploader/FlickrUploaderAndroid/media/gradle.icns -Dorg.gradle.appname=gradlew -classpath /Users/johan/src/flickr-uploader/FlickrUploaderAndroid/gradle/wrapper/gradle-wrapper.jar org.gradle.wrapper.GradleWrapperMain build\n\n``px _coreaudiod``\n------------------\nThis lists all processes owned by the ``_coreaudiod`` user.\n\n::\n\n  PID COMMAND      USERNAME       CPU RAM COMMANDLINE\n  204 DriverHelper _coreaudiod  6.67s  0% /System/Library/Frameworks/CoreAudio.framework/Versions/A/XPCServices/com.apple.audio.DriverHelper.xpc/Contents/MacOS/com.apple.audio.DriverHelper\n  195 coreaudiod   _coreaudiod 43m10s  0% /usr/sbin/coreaudiod\n\n``sudo px 80727``\n-----------------\nThis shows detailed info about PID 80727.\n\n::\n\n  /Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/bin/java\n    -Xmx1536M\n    -Dfile.encoding=UTF-8\n    -Duser.country=SE\n    -Duser.language=sv\n    -Duser.variant\n    -cp\n    /Users/johan/.gradle/wrapper/dists/gradle-3.5-all/7s64ktr9gh78lhv83n6m1hq9u6/gradle-3.5/lib/gradle-launcher-3.5.jar\n    org.gradle.launcher.daemon.bootstrap.GradleDaemon\n    3.5\n\n  kernel(0)                root\n    launchd(1)             root\n  --> GradleDaemon(80727)  johan\n\n  31m33s ago GradleDaemon was started, at 2017-06-18T13:47:53+02:00.\n  7.6% has been its average CPU usage since then, or 2m22s/31m33s\n\n  Other processes started close to GradleDaemon(80727):\n    -fish(80678) was started 9.0s before GradleDaemon(80727)\n    iTerm2(80676) was started 9.0s before GradleDaemon(80727)\n    login(80677) was started 9.0s before GradleDaemon(80727)\n    mdworker(80729) was started just after GradleDaemon(80727)\n    mdworker(80776) was started 21.0s after GradleDaemon(80727)\n\n  Users logged in when GradleDaemon(80727) started:\n    _mbsetupuser\n    johan\n\n  2017-06-18T14:19:26.521988: Now invoking lsof, this can take over a minute on a big system...\n  2017-06-18T14:19:27.070396: lsof done, proceeding.\n\n  File descriptors:\n    stdin : [PIPE] <not connected> (0x17d7619d3ae04819)\n    stdout: [CHR] /dev/null\n    stderr: [CHR] /dev/null\n\n  Network connections:\n    [IPv6] *:56789 (LISTEN)\n    [IPv6] *:62498 (LISTEN)\n\n  Inter Process Communication:\n    mDNSResponder(201): [unix] ->0xe32cbd7be6021f1f\n\n  For a list of all open files, do \"sudo lsof -p 80727\", or \"sudo watch lsof -p 80727\" for a live view.\n\n* The command line has been split with one argument per line. This makes long\n  command lines readable.\n* The process tree shows how the Gradle Daemon relates to other processes.\n* Details on how long ago Gradle Daemon was started, and how much CPU it has been\n  using since.\n* A list of other processes started around the same time as Gradle Daemon.\n* A section describing where the standard file descriptors of the process go.\n* A list of users logged in when the Gradle Daemon was started.\n* A list of network connections the process has open.\n* The IPC section shows that the Gradle Daemon is talking to ``mDNSResponder``\n  using `Unix domain sockets`_.\n\nThe IPC data comes from ``lsof``. ``sudo`` helps ``lsof`` get more detailed\ninformation; the command will work without it but might miss some information.\n\n``ptop``\n--------\n|ptop screenshot|\n\n* Note how the default sort order of CPU-usage-since-``ptop``-started makes the\n  display rather stable.\n* Note the system load bar that correlates the system load with the number of\n  CPU cores in the system. Green is load handled by physical cores, yellow\n  (not shown here) is load handled by hyperthreading cores, and red is load\n  over the number of cores.\n* Note the fifteen minute load history graph in the load bar. On this system the\n  load has been high for the last fifteen minutes. This is a visualization of\n  the numbers you get from ``uptime``.\n* Note that after you press ``q`` to quit, the display is retained and some\n  lines at the bottom are removed to prevent the information you want from\n  scrolling out of view.\n\nDevelopment\n===========\nNote that the build infrastructure here is designed to create a ``px.pex`` file\nthat works on both Python 2 and Python 3, and on \"all\" machines with Python\ninterpreters (tested on Linux and OS X).\n\n* Clone: ``git clone git@github.com:walles/px.git ; cd px``\n* Build and test: ``./test.sh``\n* Run: ``./px.pex``\n* To add dependencies, edit ``requirements.txt``\n* To run the same testing that CI does: ``./ci.sh``\n\nReleasing a new Version\n-----------------------\n1. Consider updating `the Output section`_, push those changes.\n2. Do ``git tag`` and think about what the next version number should be.\n3. Do ``git tag --annotate 1.2.3`` to set the next version number. The\n   text you write for this tag will show up as the release description on Github,\n   write something nice! And remember that the first line is the subject line for\n   the release.\n4. ``./ci.sh``\n5. ``git push --tags``\n6. Go to the `Releases`_ page on GitHub,\n   click your new release, click the ``Edit tag`` button, then attach your ``px.pex``\n   file that you just built to the release.\n7. Upload ``pxpx.egg-info/PKG-INFO`` to `the Pypi Package submission page`_.\n8. Go to the `pxpx page on Pypi`_ and click the \"files\" link. Upload ``dist/pxpx-<version>-py2.py3-none-any.whl`` here.\n\nPerformance testing\n-------------------\n* Store the output of ``lsof -F fnaptd0i`` from a big system in lsof.txt.\n* ``./tests/benchmark_ipcmap.py lsof.txt``\n\nKeeping this benchmark performant is important to be able to use ``px`` on big\nsystems.\n\nTODO ``top`` replacement\n------------------------\n\n* Disable terminal line wrapping for smoother handling of terminal window\n  resizes.\n\nTODO ``iotop`` replacement\n--------------------------\n\n* When given the ``--top`` flag and enough permissions, record per process IO\n  usage and present that in one or more columns.\n\nTODO misc\n---------\n\n* Details: When no users were found to be logged in at process start,\n  automatically detect whether it's because we don't have history that far back or\n  whether it seems to be that nobody was actually logged in. Inform the user about\n  the outcome.\n* In the px / top views, in the process owner column, maybe print other non-root\n  process owners of parent processes inside parentheses?\n* In the details report, if the current process has a working directory that\n  isn't ``/``, list all other processes that have the same working directory.\n* Ignore -E switch on Python command lines\n\n\nDONE\n----\n* Make ``px`` list all processes with PID, owner, memory usage (in % of available\n  RAM), used CPU time, full command line\n* Output should be in table format just like ``top`` or ``ps``.\n* Output should be truncated at the rightmost column of the terminal window\n* Output should be sorted by ``score``, with ``score`` being ``(used CPU time) *\n  (memory usage)``. The intention here is to put the most interesting processes on\n  top.\n* Each column should be wide enough to fit its widest value\n* Add a section about installation instructions to this document.\n* Add making-a-release instructions to this document\n* Add a ``.travis.yml`` config to the project that:\n  * OK: Runs ``flake8`` on the code\n  * OK: Tests the code on OS X\n  * OK: Tests the code on Linux\n\n* When piping to some other command, don't truncate lines to terminal width\n* If we get one command line argument, only show processes matching that string\n  as either a user or the name of an executable.\n* If we get something looking like a PID as a command line argument, show that\n  PID process in a tree with all parents up to the top and all children down. This\n  would replace ``pstree``.\n* If we get something looking like a PID as a command line argument, for that\n  PID show:\n  * A list of all open files, pipes and sockets\n  * For each pipe / domain socket, print the process at the other end\n  * For each socket, print where it's going\n\n* Doing ``px --version`` prints a ``git describe`` version string.\n* Add a column with the name of each running process\n* Put column headings at the top of each column\n* In the details view, list processes as ``Name(PID)`` rather than ``PID:Name``.\n  To humans the name is more important than the PID, so it should be first.\n* In the details view, list a number of processes that were created around the\n  same time as the one we're currently looking at.\n* Implement support for ``px --top``\n* If the user launches ``px`` through a symlink that's called something ending in\n  ``top``, enter ``top`` mode.\n* top: On pressing \"q\" to exit, redraw the screen one last time with a few less\n  rows than usual before exiting.\n* top: Print system load before the process listing.\n* Parse Java and Python command lines and print the name of the program being\n  executed rather than the VM.\n* In the details view, list users that were logged in when the process was\n  started.\n* In the details tree view, print process owners for each line\n* Print ``$SUDO_USER`` value with process details, if set\n* Run CI on both Python 2 and Python 3\n\n.. _the Output section: #output\n.. _download the latest px.pex: https://github.com/walles/px/releases/latest\n.. _Unix domain sockets: https://en.wikipedia.org/wiki/Unix_domain_socket\n.. _This support is available for many VMs: https://github.com/walles/px/blob/python/tests/px_commandline_test.py\n.. _Releases: https://github.com/walles/px/releases\n.. _the Pypi Package submission page: https://pypi.python.org/pypi?%3Aaction=submit_form\n.. _pxpx page on Pypi: https://pypi.python.org/pypi/pxpx\n\n.. |Build Status| image:: https://travis-ci.org/walles/px.svg?branch=python\n   :target: https://travis-ci.org/walles/px\n.. |Coverage Status| image:: https://coveralls.io/repos/github/walles/px/badge.svg?branch=python\n   :target: https://coveralls.io/github/walles/px?branch=python\n.. |ptop screenshot| image:: https://github.com/walles/px/raw/python/ptop-screenshot.gif\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/walles/px",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pxpx",
    "platform": "",
    "project_url": "https://pypi.org/project/pxpx/",
    "release_url": "https://pypi.org/project/pxpx/1.0.9/",
    "requires_dist": [
      "python-dateutil (==2.6.1)",
      "docopt (==0.6.2)"
    ],
    "requires_python": "",
    "summary": "ps and top for Human Beings",
    "version": "1.0.9"
  },
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ca6a8c8e294c79d05b47632bc66734e1",
          "sha256": "08845a572c6507aed09fd0517e14fac0e0db49be90c8d68482f6ad7e99554660"
        },
        "downloads": -1,
        "filename": "pxpx-1.0.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca6a8c8e294c79d05b47632bc66734e1",
        "packagetype": "bdist_wheel",
        "python_version": "any",
        "size": 31313,
        "upload_time": "2017-02-13T21:09:25",
        "url": "https://files.pythonhosted.org/packages/df/13/5d19d65030b6e84250f3c7dc1acef2b4a0f2f915ef6f08e5e954b04a3c52/pxpx-1.0.3-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "794f564102990459370deadfdad379aa",
          "sha256": "121825b7bd99aa3036df398c5bb309d23f6ad4563b9772685651a57a9f4f36fd"
        },
        "downloads": -1,
        "filename": "pxpx-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "794f564102990459370deadfdad379aa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25959,
        "upload_time": "2017-02-13T20:59:30",
        "url": "https://files.pythonhosted.org/packages/a4/81/98114634a3e4698ed2ceb39694605f7694d6eed9824804803b70f6f61b60/pxpx-1.0.3.tar.gz"
      }
    ],
    "1.0.4": [],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0ec28a4f95fd9d8219fc9fabf6178cad",
          "sha256": "ab91acdfc5414c3e164627220670c5db4b2483cf39bb9f8e5c0583d9ccf5b334"
        },
        "downloads": -1,
        "filename": "pxpx-1.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ec28a4f95fd9d8219fc9fabf6178cad",
        "packagetype": "bdist_wheel",
        "python_version": "any",
        "size": 34142,
        "upload_time": "2017-02-24T18:08:48",
        "url": "https://files.pythonhosted.org/packages/19/99/be7950ebadd4cd04e6de7754cf4332d3b9e1a342fa4fac3be4c54e0ae828/pxpx-1.0.5-py2.py3-none-any.whl"
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d24db739f123ac5598c6e33cacdd0b34",
          "sha256": "fcf3cd8370f2d9432b3d29db65616bfdeef0c47e21ff29842eeab832c729ff1f"
        },
        "downloads": -1,
        "filename": "pxpx-1.0.6.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d24db739f123ac5598c6e33cacdd0b34",
        "packagetype": "bdist_wheel",
        "python_version": "any",
        "size": 38340,
        "upload_time": "2017-06-18T13:47:13",
        "url": "https://files.pythonhosted.org/packages/a8/62/e467eaef1138615c58fe75ae55384bbc6cf767f49ac32eef87bb168fe7c9/pxpx-1.0.6.1-py2.py3-none-any.whl"
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5049afea5ab7c02ef6001648f3d487d4",
          "sha256": "086ac916a705d69e43339457c38100cac29d9e9c3d1aabf156f89f145f302f85"
        },
        "downloads": -1,
        "filename": "pxpx-1.0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5049afea5ab7c02ef6001648f3d487d4",
        "packagetype": "bdist_wheel",
        "python_version": "any",
        "size": 38528,
        "upload_time": "2017-06-25T07:13:13",
        "url": "https://files.pythonhosted.org/packages/4a/8f/cb9413823d06b9624cb4032dbb057e77825bfa695674b5cdd3fea50800da/pxpx-1.0.7-py2.py3-none-any.whl"
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e569011077ba695ff616d9c54c45ae13",
          "sha256": "b63c1a9390ee1b58ca76f44b4225e719c59149b4e74ae3c2d6bc425bf1298b7a"
        },
        "downloads": -1,
        "filename": "pxpx-1.0.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e569011077ba695ff616d9c54c45ae13",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 39743,
        "upload_time": "2017-08-18T17:33:03",
        "url": "https://files.pythonhosted.org/packages/c5/09/0b8666babe5a1f04b69699e98026b6fdbf44ec8acf8f286aea11850a2068/pxpx-1.0.8-py2.py3-none-any.whl"
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bf2781ea810b9cacd7ca3ff70c53dcb1",
          "sha256": "a5062ac3e87f4b32a5ac978bb2b7e15fe55be88e105bcad2f6531692c2359119"
        },
        "downloads": -1,
        "filename": "pxpx-1.0.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf2781ea810b9cacd7ca3ff70c53dcb1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 39744,
        "upload_time": "2017-11-15T13:55:25",
        "url": "https://files.pythonhosted.org/packages/93/88/8d88f20446ea00e669dda32fe85fcdfcc09b884a3afab6a0dbe65715cb6d/pxpx-1.0.9-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "bf2781ea810b9cacd7ca3ff70c53dcb1",
        "sha256": "a5062ac3e87f4b32a5ac978bb2b7e15fe55be88e105bcad2f6531692c2359119"
      },
      "downloads": -1,
      "filename": "pxpx-1.0.9-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bf2781ea810b9cacd7ca3ff70c53dcb1",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 39744,
      "upload_time": "2017-11-15T13:55:25",
      "url": "https://files.pythonhosted.org/packages/93/88/8d88f20446ea00e669dda32fe85fcdfcc09b884a3afab6a0dbe65715cb6d/pxpx-1.0.9-py2.py3-none-any.whl"
    }
  ]
}