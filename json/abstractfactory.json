{
  "info": {
    "author": "David Betz",
    "author_email": "dfb@davidbetz.net",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "Abstract Factory for Python\n===========================\n\nCopyright (c) 2016-2017 David Betz\n\n|Build Status|\n\nSee test\\_provider.py unit test for usage.\n\nBasically an implementation of an abstract factory pattern.\n\nIn one system where I use this, I create factories for eachs type of\nthing in my system. So, SearchFactory, CloudStorageFactory,\nQueueFactory, AristotleFactory, etc... These would implement for ID\ninterface like ICloudStorageProvider (in Node, it's just a class).\n\nEach of these would have their own switch/case (or whatever) to create\nthe factory for it. So, for example, I may have config in a YAML file\nspecifying that I want to use Mongo for my Aristotle provider\n(\"Aristotle\" is what most people incorrectly call \"NoSQL\").\n\nTo begin, create the factory (do this one for the entirety of your\nsystem):\n\n::\n\n    abstractFactory = AbstractFactory()\n\nThen, add your factories:\n\n::\n\n        abstractFactory.set(SearchFactory)\n        abstractFactory.set(CloudStorageFactory)\n        abstractFactory.set(QueueFactory)\n        abstractFactory.set(AristotleFactory)\n\nWhen the time comes, just ask for your provider:\n\n::\n\n    provider = abstractFactory.resolve(IAristotleProvider)\n\nYour code SHOULD. NOT. CARE. ABOUT. MONGO. It should the your\nconfiguration or something handle that. Don't tightly couple your\nproviders.\n\nAlso note that the resolver also accepts various arguments for extra\nflexibility:\n\n::\n\n    provider = abstractFactory.resolve(IAristotleProvider, \"alternateConnectionString\", collection=\"log\") \n\nDespite what random bloggers say, service locators are awesome and\nprovide excellent decoupling.\n\nLook at the ``Mock`` examples provided with the tests; they're rather\nextensive.\n\n.. |Build Status| image:: https://travis-ci.org/davidbetz/pyabstractfactory.svg?branch=master\n   :target: https://travis-ci.org/davidbetz/pyabstractfactory",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/davidbetz/pyabstractfactory",
    "keywords": "abstract-factory,patterns",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "abstractfactory",
    "platform": "",
    "project_url": "https://pypi.org/project/abstractfactory/",
    "release_url": "https://pypi.org/project/abstractfactory/1.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Abstract Factory functionality for Python",
    "version": "1.0.1"
  },
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4a8545f5337e85dc56e67569eb2502ab",
          "sha256": "92b5e51d4577942976f7410479d01b56cc1dcdc89ac70d20b2c42b5ce16cb9ac"
        },
        "downloads": 0,
        "filename": "abstractfactory-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4a8545f5337e85dc56e67569eb2502ab",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4388,
        "upload_time": "2017-07-15T14:43:47",
        "url": "https://files.pythonhosted.org/packages/08/db/3c90172325d1bd4c28a30eb87610e08ff1167b919f68d60b7e4c7ff0bbf4/abstractfactory-1.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4a8545f5337e85dc56e67569eb2502ab",
        "sha256": "92b5e51d4577942976f7410479d01b56cc1dcdc89ac70d20b2c42b5ce16cb9ac"
      },
      "downloads": 0,
      "filename": "abstractfactory-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4a8545f5337e85dc56e67569eb2502ab",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4388,
      "upload_time": "2017-07-15T14:43:47",
      "url": "https://files.pythonhosted.org/packages/08/db/3c90172325d1bd4c28a30eb87610e08ff1167b919f68d60b7e4c7ff0bbf4/abstractfactory-1.0.1.tar.gz"
    }
  ]
}