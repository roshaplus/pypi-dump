{
  "info": {
    "author": "Volcyy",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# pyflight\n[![Documentation Status](https://readthedocs.org/projects/pyflight/badge/?version=latest)](http://pyflight.readthedocs.io/en/latest/?badge=latest)\n\nA Python Wrapper around the Google QPX Flights API that supports both synchronous and asynchronous operation.\n\n## Features\n- Fully asynchronous using aiohttp 2.0, or non-async using `requests`.\n- Automatic saving of results in useful structures which provide easy-to-use interfaces\n- Rate Limiting to your liking\n\n## Installation\n```bash\npip3 install pyflight \npython3 -m pip install pyflight\n\n# Up-to-date version from GitHub (currently recommended):\npython3 -m pip install -U git+https://github.com/Volcyy/pyflight\n```  \n   \n## Example\n**Find flights from San Francisco (SFO) to Los Angeles (LAX), limited to one solution** \n\nThe rate limiting call is omitted here, but we keep it in mind for now. We send a request structured as\ndescribed [here](https://developers.google.com/qpx-express/v1/trips/search). We execute the API call synchronously \nand specify that we do not want to use the supplied containers and would like to receive the \"raw\" JSON response \ninstead, to write the response to a file using Python's built-in `json` module.\nTo execute this call asynchronously, simply replace `send_sync` with `send_async` and \n`await` it like any coroutine. Note that asynchronous API calls are designed to be used within\nasynchronous applications.\n```python\nimport pyflight\nimport json\n\npyflight.set_api_key('<my-api-key>')\n# pyflight.set_queries_per_day(<my-limit>)\n\nquery_data = {\n  \"request\": {\n    \"passengers\": {\n      \"adultCount\": \"1\"\n    },\n    \"slice\": [\n      {\n        \"origin\": \"SFO\",\n        \"destination\": \"LAX\",\n        \"date\": \"2017-09-19\"\n      }\n    ],\n    \"solutions\": \"1\"\n  }\n}\nresp = pyflight.send_sync(query_data, use_containers=False)\nwith open('response.json', 'w+') as f:\n    json.dump(resp, f)\n```\n\n## Dependencies\n- Python 3.5+\n- aiohttp\n- requests\n\n\n## Tests\nIf you're interested in running the tests, download the two example responses given on the bottom of \n[this page](https://developers.google.com/qpx-express/v1/requests) and save them in the `tests` directory named\n`response_1.json` and `response_2.json`. Afterwards, from the root directory, run `python3 -m pytest tests/`. \nYou can also use the `-v` flag to enable a more detailed overview of the tests.\n \n \n## Disclaimer\npyflight is not endorsed by Google and does not reflect the views or opinions of Google.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyflight",
    "platform": "",
    "project_url": "https://pypi.org/project/pyflight/",
    "release_url": "https://pypi.org/project/pyflight/0.0.3/",
    "requires_python": "",
    "summary": "A Python Wrapper around Google's QPX Express API",
    "version": "0.0.3"
  },
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8cd55da01e171f918dc7b27dc6c7b635",
          "sha256": "21529efcda66f36fa29922c7eec593df024cfeae68322d7c63a56894146f3648"
        },
        "downloads": 228,
        "filename": "pyflight-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8cd55da01e171f918dc7b27dc6c7b635",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10768,
        "upload_time": "2017-04-06T11:44:29",
        "url": "https://files.pythonhosted.org/packages/f1/98/fe5be72de2dc0b88530ab1ec1a513f4a1e0b1a3edcd2fbee0b7c4e48e9f2/pyflight-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "61f98b6c6857f0d28db15546dd8abea9",
          "sha256": "a9e065ebda45ebc4be1bce26e82b93e621ae7df4dd69259b5292d1c8e7018bd7"
        },
        "downloads": 0,
        "filename": "pyflight-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "61f98b6c6857f0d28db15546dd8abea9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15721,
        "upload_time": "2017-06-09T13:50:38",
        "url": "https://files.pythonhosted.org/packages/c8/cd/ec355fb8d8d91bf2b50461163372d351b12256a5a6a0f46803d60d5ddcac/pyflight-0.0.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "61f98b6c6857f0d28db15546dd8abea9",
        "sha256": "a9e065ebda45ebc4be1bce26e82b93e621ae7df4dd69259b5292d1c8e7018bd7"
      },
      "downloads": 0,
      "filename": "pyflight-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "61f98b6c6857f0d28db15546dd8abea9",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15721,
      "upload_time": "2017-06-09T13:50:38",
      "url": "https://files.pythonhosted.org/packages/c8/cd/ec355fb8d8d91bf2b50461163372d351b12256a5a6a0f46803d60d5ddcac/pyflight-0.0.3.tar.gz"
    }
  ]
}