{
  "info": {
    "author": "ixokai",
    "author_email": "me+ccf@ixokai.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "Cascading Configuration Files\n\nThis is a very simple system for reading vaguely INI-like configuration files. Now, the first question any sane\nperson should ask is: why the hell did I write this, even if its only like 90 lines?\n\nThere's ConfigParser in the stdlib, and endless other options on PyPi. Most are better written, many more\nfeatureful, but by the time I got halfway through the list I was frustrated with none quite doing what I wanted,\nso gave up.\n\nSo we have this.\n\nThe design goals are twofold:\n1. Python 3 only\n2. INI-ish, for ease of use by the non-technicals\n3. 'Cascading' configuration files, thus the name; so if file 1 has [database] username=foo, but file 2 has\n       [database] username=bar, then reading cfg.database.username would return 'bar'. The system is designed for\n       situations where you read multiple files and where later ones override defaults in earlier ones.\n4. To use Python 3-style 'str.format()' interpolation, because I use it elsewhere in my app and I want users to\n       need to learn only one interpolation language.\n\nThis is a VERY SIMPLE LIBRARY that I threw together, and may be of no interest to anyone else, ever. I intend on\nexpanding its functionality over time, but if anyone else (shock) has a use for it, keep the design goals above in\nmind. I don't have any intention of changing it against those goals.\n\nExample usage:\n\nmyapp.conf\n.. code-block:: ini\n    [database]\n    connection = mongodb+srv://{database[username]}:{database[password}@myservice.mongodb.net/test\n\n\nsecrets.conf\n.. code-block:: ini\n    [database]\n    username = foo\n    password = bar\n\n\ndb.py\n.. code-block:: ini\nfrom ccf import ConfigReader\ncfg = ConfigReader([\"myapp.conf\", \"secrets.conf\"])\nprint(\"Connect to: {cfg.database.connection}\".format(cfg=cfg)",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ixokai/ccf",
    "keywords": "config",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ccf",
    "platform": "",
    "project_url": "https://pypi.org/project/ccf/",
    "release_url": "https://pypi.org/project/ccf/0.0.1/",
    "requires_dist": [],
    "requires_python": ">=3",
    "summary": "Simple Cascading Config Files for Py3",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "27e3928fc5006b9c648f4c609f86d27a",
          "sha256": "ff900b6f41ab6953fab1e377c046192775bf3294daab9553b89b94027718c0ec"
        },
        "downloads": -1,
        "filename": "ccf-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "27e3928fc5006b9c648f4c609f86d27a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2112,
        "upload_time": "2018-02-02T08:50:35",
        "url": "https://files.pythonhosted.org/packages/2d/a7/d551defbfeecd8ad299519e13596c1f031d702f4438645250d15bd1063a1/ccf-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "27e3928fc5006b9c648f4c609f86d27a",
        "sha256": "ff900b6f41ab6953fab1e377c046192775bf3294daab9553b89b94027718c0ec"
      },
      "downloads": -1,
      "filename": "ccf-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "27e3928fc5006b9c648f4c609f86d27a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 2112,
      "upload_time": "2018-02-02T08:50:35",
      "url": "https://files.pythonhosted.org/packages/2d/a7/d551defbfeecd8ad299519e13596c1f031d702f4438645250d15bd1063a1/ccf-0.0.1.tar.gz"
    }
  ]
}