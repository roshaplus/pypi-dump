{
  "info": {
    "author": "Sergey Satskiy",
    "author_email": "sergey.satskiy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: C",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "cdm-pythonparser \n-------------------------------\n\n`cdm-pythonparser\nrepository <https://github.com/SergeySatskiy/cdm-pythonparser>`__\ncontains a source code for a Python 2 and Python 3 extension module\ncalled ``cdmpyparser``. The module exposes a couple of functions which\nbasically take a file with a python code or a character buffer, parse it\nand provide back what is found in the code: functions, classes, global\nvariables etc.\n\nThe module is used in the `Codimension Python\nIDE <http://codimension.org>`__ to show in a structured way a content of\nan arbitrary python code and for some other features however, it could\nbe used in other projects which need a python code retrospection.\n\nPython 3\n--------\n\nThe `master\nbranch <https://github.com/SergeySatskiy/cdm-pythonparser>`__ contains\ncode for Python 3 (3.5/3.6 grammar is covered).\n\nThe installation of the module is supported via pip:\n\n.. code:: shell\n\n    pip install cdmpyparser\n\nIf you like to have the full source code which also includes a few\nutilities to play with, please follow these steps:\n\n.. code:: shell\n\n    git clone https://github.com/SergeySatskiy/cdm-pythonparser.git\n    cd cdm-pythonparser\n    make\n    make check\n    make localinstall\n\nPython 2\n--------\n\n**Attention:** Python 2 version is not supported anymore.\n\nThe latest Python 2 supporting release is 2.0.1. Both pre-built modules\nand source code are available in the releases area. Here is a link:\n`latest Python 2 release\n2.0.1 <https://github.com/SergeySatskiy/cdm-pythonparser/releases/tag/v2.0.1>`__.\n\nIf you like to build a Python 2 module from sources please follow these\nsteps:\n\n.. code:: shell\n\n    cd\n    wget https://github.com/SergeySatskiy/cdm-pythonparser/archive/v2.0.1.tar.gz\n    gunzip v2.0.1.tar.gz\n    tar -xf v2.0.1.tar\n    cd cdm-pythonparser-2.0.1/\n    make\n    make localinstall\n    make check\n\nUsage\n-----\n\n**Note:** the example output is provided for the Python 2 module. The\nmodule name for Python 2 is ``cdmbriefparser``. In Python 3 version the\nname of the module differs and is ``cdmpyparser``. The output of the\nPython 3 module may be slightly different because more information is\nextracted. However, conceptually pretty much the same information is\nprovided for both Python 2 and 3 implementations.\n\nSuppose there is the following file ~/my-file.py with the following\ncontent:\n\n.. code:: python\n\n    #!/usr/bin/python\n    import sys\n\n    # global variable\n    A = 154\n\n    class C( BaseClass ):\n        \" class docstring \"\n        @decor\n        def f( arg ):\n            \" func doc \"\n            return 154\n\nThen the following python session may take place:\n\n.. code:: shell\n\n    $ python\n    Python 2.7.9 (default, Mar 30 2015, 11:26:35)\n    [GCC 4.4.7 20120313 (Red Hat 4.4.7-11)] on linux2\n    Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n    >>> import cdmbriefparser\n    >>> c = cdmbriefparser.getBriefModuleInfoFromFile( \"my-file.py\" )\n    >>> print c.niceStringify()\n    Import[2:8:25]: 'sys'\n    Global[5:1:48]: 'A'\n    Class[7:1:7:7:63:7:21]: 'C'\n    Base class: 'BaseClass'\n    Docstring[8]: 'class docstring'\n        Function[10:5:10:9:122:10:17]: 'f'\n        Argument: 'arg'\n        Decorator[9:6:108]: 'decor\n        Docstring[11]: 'func doc'\n    >>> c.imports[0].what\n    []\n    >>> c.imports[0].name\n    'sys'\n    >>>\n\nSee the 'cdmbriefparser.py' (Python 2) or 'cdmpyparser.py' (Python3)\nfile for the members which are supplied along with all the recognized\nitems.\n\nComparison to the standard pyclbr module\n----------------------------------------\n\n**Note:** the comparison results are provided for the Python 2 module.\nThe Python 3 module yeilds pretty much the same results in terms of\nperformance while extracts more information because the grammar was\nextended for Python 3.\n\nThe table below shows the comparison between the standard ``pyclbr``\nmodule and the Codimension's ``cdmbriefparser`` module.\n\n+--------------+-------------+---------------------+\n| *feature*    | *pyclbr*    | *cdmbriefparser*    |\n+==============+=============+=====================+\n| Extracting   | N           | Y                   |\n| coding       |             |                     |\n| string       |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | N           | Y                   |\n| module       |             |                     |\n| docstring    |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | N           | Y                   |\n| global       |             |                     |\n| variables    |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | N           | Y                   |\n| imports      |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | Y           | Y                   |\n| top level    |             |                     |\n| functions    |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | N           | Y                   |\n| nested       |             |                     |\n| functions    |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | N           | Y                   |\n| functions    |             |                     |\n| arguments    |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | N           | Y                   |\n| functions    |             |                     |\n| docstrings   |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | N           | Y                   |\n| functions    |             |                     |\n| decorators   |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | Y           | Y                   |\n| classes      |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | Y           | Y                   |\n| base classes |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | N           | Y                   |\n| class        |             |                     |\n| attributes   |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | N           | Y                   |\n| class        |             |                     |\n| instance     |             |                     |\n| attributes   |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | Y           | Y                   |\n| class        |             |                     |\n| methods      |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | N           | Y                   |\n| class        |             |                     |\n| methods      |             |                     |\n| arguments    |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | N           | Y                   |\n| nested       |             |                     |\n| classes      |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | N           | Y                   |\n| classes      |             |                     |\n| docstrings   |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | N           | Y                   |\n| class        |             |                     |\n| methods      |             |                     |\n| docstrings   |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | N           | Y                   |\n| classes      |             |                     |\n| decorators   |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | N           | Y                   |\n| decorators   |             |                     |\n| arguments    |             |                     |\n+--------------+-------------+---------------------+\n| Keeping the  | N           | Y                   |\n| hierarchy of |             |                     |\n| the          |             |                     |\n| classes/func |             |                     |\n| tions        |             |                     |\n| of the       |             |                     |\n| arbitrary    |             |                     |\n| depth        |             |                     |\n+--------------+-------------+---------------------+\n| Ability to   | Y (silent)  | Y (error messages   |\n| work with    |             | are provided)       |\n| partially    |             |                     |\n| syntacticall |             |                     |\n| y            |             |                     |\n| correct      |             |                     |\n| files        |             |                     |\n+--------------+-------------+---------------------+\n| Ability to   | Y           | Y                   |\n| parse python |             |                     |\n| code from a  |             |                     |\n| file         |             |                     |\n+--------------+-------------+---------------------+\n| Ability to   | N           | Y                   |\n| parse python |             |                     |\n| code from    |             |                     |\n| memory       |             |                     |\n+--------------+-------------+---------------------+\n| Extracting   | N           | Y                   |\n| classes and  |             |                     |\n| functions    |             |                     |\n| with the     |             |                     |\n| same names   |             |                     |\n+--------------+-------------+---------------------+\n| Supported    | ANY         | Up to 2.7 (series 3 |\n| python       |             | has not been        |\n| version      |             | tested)             |\n+--------------+-------------+---------------------+\n| Time to      | 2 min 37    | 24 sec              |\n| process      | sec         |                     |\n| 11365 python |             |                     |\n| files        |             |                     |\n| (python 2.7  |             |                     |\n| distribution |             |                     |\n| and some     |             |                     |\n| third party  |             |                     |\n| packages).   |             |                     |\n+--------------+-------------+---------------------+\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/SergeySatskiy/cdm-pythonparser",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cdmpyparser",
    "platform": "any",
    "project_url": "https://pypi.org/project/cdmpyparser/",
    "release_url": "https://pypi.org/project/cdmpyparser/3.0.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Fast and comprehensive Python language parser. Written as a part of the Codimension project, this parser aims at pulling the most data from Python sources while exceeding the speed of existing parsers.",
    "version": "3.0.0"
  },
  "releases": {
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1db3c4ca2524bfe94c59060eb813e2c5",
          "sha256": "39294de350db3884715cde9290e932f7aa1ddc75ec21a4e90e14e4a88dd26baf"
        },
        "downloads": 0,
        "filename": "cdmpyparser-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1db3c4ca2524bfe94c59060eb813e2c5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42333,
        "upload_time": "2017-08-21T03:59:42",
        "url": "https://files.pythonhosted.org/packages/53/d7/ac57904695c662aa2af4d4d27c826a11d9731d997c87708d3162cf17ae7f/cdmpyparser-3.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "1db3c4ca2524bfe94c59060eb813e2c5",
        "sha256": "39294de350db3884715cde9290e932f7aa1ddc75ec21a4e90e14e4a88dd26baf"
      },
      "downloads": 0,
      "filename": "cdmpyparser-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1db3c4ca2524bfe94c59060eb813e2c5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 42333,
      "upload_time": "2017-08-21T03:59:42",
      "url": "https://files.pythonhosted.org/packages/53/d7/ac57904695c662aa2af4d4d27c826a11d9731d997c87708d3162cf17ae7f/cdmpyparser-3.0.0.tar.gz"
    }
  ]
}