{
  "info": {
    "author": "ASF Student Development Team 2017",
    "author_email": "eng.accts@asf.alaska.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Topic :: Scientific/Engineering :: GIS"
    ],
    "description": "==========\nHYP3 CLASS\n==========\n Works with the hyp3-api and does all the get requests as well as saving\n the repeated data between request, like the username and api_key.\n\n   formats: json by default which will be converted into appropriate data type,\n            csv or any orther format returns string of data recieved\n\n   functions are:\n       get_jobs\n       get_job\n       get_products\n       get_process\n       get_processes\n       one_time_process\n\n       get_subscriptions\n       get_subscription\n       create_subscription\n       remove_subscription\n       enable_subscription\n       disable_subscription\n\n\nget_jobs\n--------\nParameters: Required - None\n            Optional - id(can be a list of ids), status, sub_id, granule, format\n\nReturns a list of dictionaries containing job information with the specified attributes.\n       Job info:\n            - id, sub_id, user_id, process_id, status, granule,\n              granule_url, other_granules, other_granule_urls,\n              request_time, processed_time, priority, message\n\nget_job\n-------\nParameters: Required - id\n            Optional - None\n\nReturns a dictionary just like the one referenced in get_jobs\n\nget_products\n------------\nParameters: Required - None\n            Optional - id, sub_id, creation_date, name, format\n\nReturns a list of dictionaries product information with the specified\n       attributes.\n    Product info contains fields:\n        - id, sub_id, name, url, browse_url,\n          size, creation_date\n\nget_product\n-----------\nParameters: Required - id\n            Optional - None\n\nReturns a dictionary just like the one referenced in get_product\n\nget_process\n-----------\nParameters: Required - id\n            Optional - format\n\nReturns a dictionary or a string depending on format containing information about the process.\n        return fields are:\n\n        - id, name, description, requires_pair,\n          supports_time_series_processing, requires_dual_pol\n\nget_processes\n-------------\nParameters: Required - None\n            Optional - format\n\nReturns a list of dictionaries all available processes. Each entry is as\n       described by get_process.\n\none_time_process\n----------------\nParameters: Required - granule, process_id\n            Optional - other_granules, priority, message\n\ngranule: can be passed a single granule, a list of granule strings, a file name\n         or an open file with granules in it.\n         All granule operations are done with the given process_id.\n\nSchedules a new processing request and returns a dictionary\n       indicating whether or not the request succeeded, and an error message.\n       If the process_id specifies a process that requires a granule pair,\n       then other_granules must also be supplied.\n\n    Returns:\n        {\"status\": \"SUCCESS\", \"message\": null} or\n        {\"status\": \"SUCCESS\", \"id\": 1234} or\n        {\"status\": \"ERROR\", \"message\": *A Contextual Message*}\n\none_time_process_batch\n----------------------\nSchedules any number of new processing requests through an input file containing\n        descriptions of the jobs.\n\nParameters: Required - filename\n\nFile (CSV):\n        granule,process_id,other_granules,priority,message\n        S1_GRANULE,2,,10,sample message\n        S1_GRANULE,10,S1_GRANULE,,,\n\ncreate_subscription\n-------------------\nParameters: Required - polarization, crop_to_selection, name, process_id,\n                       platform\n            Optional - location, start_date, end_date, description,\n                       extra_arguments, enable, shapefilepath\n\nSchedules a new subscription and returns a dictionary indicating\n       whether or not the request succeeded, as well as an error message in\n       the event of failure. If you pass a file path to shapefilepath this will\n       override your entry for location. The shapefilepath must point to one of\n       the files necessary to create your geometry object, not simply their parent\n       directory.\n\n       Returns:\n        {\"status\": \"SUCCESS\", \"id\": 1234} or\n        {\"status\": \"ERROR\", \"message\": *A Contextual Message*}\n\nget_subscriptions\n-----------------\nParameters: Required - None\n            Optional - id, process_id, name, location, start_date, end_date,\n                       enable, format\n\nReturns a array of subscription information with the specified\n       attributes or a string depending on format. Subscription info contains fields:\n\n        - id, process_id, user_id, name, location,\n          start_date, end_date, enabled\n\nget_subscription\n----------------\nParameters: Required - id\n            Optional - None\n\nReturns a JSON or CSV array with information belonging to the subscription holding\n      the subscription id passed. Subscriptions info contains fields:\n\n       - id, process_id, user_id, name, location,\n        start_date, end_date, enabled\n\ndisable_subscription\n--------------------\nReturns a dictionary just like the one referenced in get_subscriptions\nSets the property 'enabled' of a subscription to False. No further\n       actions will be taken based on this subscription until it is enabled\n       again. Returns a dictionary indicating whether or not the request\n       succeeded, and an error message in the event it did not.\n\nenable_subscription\n-------------------\nReturns a dictionary just like the one referenced in get_subscriptions\nSets the property 'enabled' of a subscription to False. No further\n      actions will be taken based on this subscription until it is enabled\n      again. Returns a dictionary indicating whether or not the request\n      succeeded, and an error message in the event it did not.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/asfadmin/hyp3-api",
    "keywords": "hyp3 api hyp3-api asf",
    "license": "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asf-hyp3-api",
    "platform": "",
    "project_url": "https://pypi.org/project/asf-hyp3-api/",
    "release_url": "https://pypi.org/project/asf-hyp3-api/0.9.0/",
    "requires_dist": [
      "requests (>=2.14.0)",
      "pyshp (>=1.2.11)",
      "pygeoif (>=0.7)"
    ],
    "requires_python": "",
    "summary": "Api for ASF's hyp3 system",
    "version": "0.9.0"
  },
  "releases": {
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5e0174957a6414db413f41382caa7900",
          "sha256": "15bea6e232b9958fbac1a663546547f24362273ba5077360a151520f1024e2cf"
        },
        "downloads": 0,
        "filename": "asf_hyp3_api-0.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e0174957a6414db413f41382caa7900",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 15551,
        "upload_time": "2017-06-14T17:40:22",
        "url": "https://files.pythonhosted.org/packages/e2/42/e80227378021aca235a7646cfd2ac5efa8b16a13b341131e6a0426046c65/asf_hyp3_api-0.0.5-py2.py3-none-any.whl"
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "458fc383eb05561073c0449850b68af3",
          "sha256": "4472dfdc04521d7d0d25eeba1dcd06c747a801a34fe6450f13baec775e0051b7"
        },
        "downloads": 0,
        "filename": "asf_hyp3_api-0.8.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "458fc383eb05561073c0449850b68af3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 24826,
        "upload_time": "2017-06-13T21:59:57",
        "url": "https://files.pythonhosted.org/packages/0e/1e/5bf098abb7386089a8ac1a58c796a3b2bc8e1cb6f9ff798b857cda14339a/asf_hyp3_api-0.8.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "05c4bf973fb9b6277a5d74e905d6f55b",
          "sha256": "3da3068106aa1dc3fa6bf2253464d8da1953259cda6a6eb9fd338c0112e06e8e"
        },
        "downloads": 0,
        "filename": "asf_hyp3_api-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "05c4bf973fb9b6277a5d74e905d6f55b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12854,
        "upload_time": "2017-06-13T21:59:59",
        "url": "https://files.pythonhosted.org/packages/ed/d6/6ff557fbca1dc998e418d7fccf379fca080c8f3a04b3a98d86b30256d689/asf_hyp3_api-0.8.0.tar.gz"
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b3ddef015375faa7ce456a000b44e2f8",
          "sha256": "54c78684c73cfcebf4fda49d127397abad4731208861c8b4bf73d55f63a5791c"
        },
        "downloads": 0,
        "filename": "asf_hyp3_api-0.9.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3ddef015375faa7ce456a000b44e2f8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 24869,
        "upload_time": "2017-06-14T16:54:02",
        "url": "https://files.pythonhosted.org/packages/68/99/e87afa8c9b2d5134db92f24ee46dea2da65676cd55fd91a5d9135eccf2bd/asf_hyp3_api-0.9.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "815167ce81bb39b3b4c47535ee5c1843",
          "sha256": "11013e8fa08dd261e25420a934813e00b4e5577eed6e83f59f675d419077be1e"
        },
        "downloads": 0,
        "filename": "asf_hyp3_api-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "815167ce81bb39b3b4c47535ee5c1843",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12950,
        "upload_time": "2017-06-14T16:54:04",
        "url": "https://files.pythonhosted.org/packages/ec/31/c6cd83759546dbe26f28de7d8dc3ea63b7b94fcc3ebfcbab646ab2de9ed1/asf_hyp3_api-0.9.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b3ddef015375faa7ce456a000b44e2f8",
        "sha256": "54c78684c73cfcebf4fda49d127397abad4731208861c8b4bf73d55f63a5791c"
      },
      "downloads": 0,
      "filename": "asf_hyp3_api-0.9.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b3ddef015375faa7ce456a000b44e2f8",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 24869,
      "upload_time": "2017-06-14T16:54:02",
      "url": "https://files.pythonhosted.org/packages/68/99/e87afa8c9b2d5134db92f24ee46dea2da65676cd55fd91a5d9135eccf2bd/asf_hyp3_api-0.9.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "815167ce81bb39b3b4c47535ee5c1843",
        "sha256": "11013e8fa08dd261e25420a934813e00b4e5577eed6e83f59f675d419077be1e"
      },
      "downloads": 0,
      "filename": "asf_hyp3_api-0.9.0.tar.gz",
      "has_sig": false,
      "md5_digest": "815167ce81bb39b3b4c47535ee5c1843",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 12950,
      "upload_time": "2017-06-14T16:54:04",
      "url": "https://files.pythonhosted.org/packages/ec/31/c6cd83759546dbe26f28de7d8dc3ea63b7b94fcc3ebfcbab646ab2de9ed1/asf_hyp3_api-0.9.0.tar.gz"
    }
  ]
}