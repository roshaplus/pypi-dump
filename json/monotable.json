{
  "info": {
    "author": "Mark Taylor",
    "author_email": "mark66547ta2@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": ".. |apache| image:: https://img.shields.io/pypi/l/monotable.svg\n   :target: http://www.apache.org/licenses/LICENSE-2.0\n   :alt: License: Apache 2.0\n\n.. |py_versions| image::\n    https://img.shields.io/pypi/pyversions/monotable.svg\n    :target: https://pypi.python.org/pypi/monotable\n    :alt: Python versions supported\n\n|apache| |py_versions|\n\n.. This file is used by Sphinx and for the setup.py long_description.\n.. The examples are doctested by Sphinx.\n.. The doctest directives here are replaced when setup.py creates\n.. the setup() argument long_description.\n\n.. _Format Specification Mini-Language:\n   https://docs.python.org\n   /3/library/string.html#format-specification-mini-language\n.. _Format String Syntax:\n   https://docs.python.org/3/library/string.html#format-string-syntax\n.. _Template Strings:\n   https://docs.python.org/3/library/string.html#template-strings\n.. _Printf Style:\n   https://docs.python.org\n   /3/library/stdtypes.html#printf-style-string-formatting\n.. _Apache 2.0:\n   http://www.apache.org/licenses/LICENSE-2.0\n.. _Documentation:\n   https://monotable.readthedocs.io/en/latest//index.html\n.. _More Examples:\n   https://monotable.readthedocs.io/en/latest/more_examples.html\n.. _Read the Docs:\n   https://readthedocs.org\n.. _Repository:\n   https://github.com/tmarktaylor/monotable\n.. _Issue Tracker:\n   https://github.com/tmarktaylor/monotable/issues\n.. _Python Package Index/monotable:\n   https://pypi.python.org/pypi/monotable\n.. _Master branch build status, coverage, testing:\n   https://github.com/tmarktaylor/monotable/blob/master/README.md\n\nIntroduction\n============\n\nmonotable is a Python library that generates an ASCII table from\ntabular data that looks *pretty* when printed in a monospaced font.\n\nmonotable eliminates the need to pre-format\nyour data objects before generating the table.\n\nmonotable will do the formatting for you using your format function\nor one of its own general purpose format functions; on a per column basis.\n\nmonotable handles multi-line content.\n\nmonotable is *thoroughly* documented and tested.\n\nFirst Example\n-------------\n\n.. code:: python\n\n    import monotable\n    headings = ['int', 'percent']\n    formats = [',', '.1%']\n    t1 = monotable.MonoTable(headings, formats)\n    cells = [[123456789, 0.33], [2345678, 0.995]]\n    print(t1.table(cells,\n                   title='=Comma and percent formats.'))\n\n.. code::\n\n     Comma and percent\n          formats.\n    --------------------\n            int  percent\n    --------------------\n    123,456,789    33.0%\n      2,345,678    99.5%\n    --------------------\n\n- The built-in function **format(value, format_spec)** is used by default\n  for each column.\n- The string in the list **formats** is passed as format_spec for the column.\n- To write a format_spec, consult Python's\n  `Format Specification Mini-Language`_.\n\nInstallation\n------------\n\n::\n\n    pip install monotable\n\n\nLinks to License, Docs, Repos, Issues, PYPI page\n------------------------------------------------\n- License: `Apache 2.0`_\n- Full `Documentation`_ on `Read the Docs`_\n- `Repository`_\n- `Issue Tracker`_\n- `Python Package Index/monotable`_\n- `Master branch build status, coverage, testing`_\n\nDescription\n-----------\n\nYou can specify the format spec and the format function on a per column\nbasis as needed.\n\nThese format functions are available:\n\n   - The default is built-in function **format**\\ (value, format_spec).\n   - An unlimited number of user defined plug-in format functions.\n   - An adapter to standard library string.format().\n   - An adapter to pass a mapping to string.format().\n   - An adapter to percent operator % formatting.\n   - An adapter to standard library Template.substitute().\n\nWhen custom formatting code is needed for an object type,\nput it in a plug-in format function and reuse it in other tables that\nprocess the same type.\n\nmonotable supports multi-line content in headings, formatted cells,\nand titles.\n\nmonotable can limit column width on a per column basis and\ntruncates or wraps the text to fit.  Maximum cell height\nis configurable.  A more marker is placed to show where text was omitted.\n\nmonotable auto-aligns each column.  Auto-alignment is overridden by\nusing one of ``'<'``, ``'^'``, ``'>'`` prefixes\non a heading string, format string, or title.\n\nmonotable does not do the following:\n\n    - Produce terminal graphics characters.  Try PYPI terminaltables.\n    - Produce markup source text.  Try PYPI tabulate instead.\n    - Handle CJK wide characters.\n    - Handle ANSI escape terminal color sequences. Try PYPI terminaltables.\n\nHowever, monotable does make the output of its formatting and\nalignment engine available in list form.  Please look for the function\n**MonoTable.row_strings()** in the API documentation.\n\nMore features are described in the documentation section\n'Full List of Features'.\n\n.. Reserved for recognizing contributors\n.. Contributors\n.. ============\n\nRecent Changes\n==============\n1.0.2 - 2017-04-06\n\n- Bug fix, incorrect cell auto-alignment when mixed types in a column.\n- Bug fix, format_none_as cell ignoring column format string's align_spec.\n- Remove and re-add files to git index so stored with LFs.\n- Add complexity inspections to CI.\n- Refactor 2 functions to reduce McCabe complexity.\n- Code inspection fixes.  Docs and comments fixed.\n\n1.0.1 - 2017-03-26\n\n- MANIFEST.in and doc fixes.\n\n1.0.0 - 2017-03-25\n\n- Initial upload.\n\n\n\nExamples\n========\n\nPer column formatting with format spec\n--------------------------------------\n\nIn the example below formats is a list of format strings, one for each column.\nFormat strings are assigned to columns from left to right.\n\n.. code:: python\n\n    import datetime\n    import monotable\n\n    d = datetime.datetime(2016, 9, 16)\n\n    headings = ['precision\\n1', 'precision\\n3', 'default', '9/16/16']\n    formats = ['.1f', '.3f', '', 'week-%U-day-%j']\n    t2 = monotable.MonoTable(headings, formats)\n\n    cells = [[1.23456789,   1.23456789,   1.23456789, d],\n             [999.87654321, 999.87654321, 999.87654321, None]]\n\n    print(t2.table(cells, title='Different float precisions.'))\n\n.. code::\n\n               Different float precisions.\n    -------------------------------------------------\n    precision  precision\n            1          3     default  9/16/16\n    -------------------------------------------------\n          1.2      1.235    1.234568  week-37-day-260\n        999.9    999.877  999.876543\n    -------------------------------------------------\n\n- For type float, when the format_spec is empty, a default format_spec\n  of ``'.6f'`` is used.  This is configurable.\n- Auto-alignment is right justifying a cell that is an instance of\n  numbers.Number.\n- Auto alignment aligns the heading the same way as the alignment of\n  the cell in the first row of the column.\n- The title is centered by default.\n\n\nSelecting keys from a dictionary\n--------------------------------\n\nThis example uses monotable's extended format string notation to set\nthe format function of the second column. A format string has the form:\n\n    ``[align_spec][option_spec][format_spec]``\n\nalign_spec is one of the characters '<', '^', '>' to override auto-alignment.\nalign_spec is not used in this example.\n\noption_spec is one or more monotable options enclosed by ``'('``\nand ``')'`` separated by ``';'``.  In the second column the option_spec\nis ``(mformat)``.\nmformat selects the function **monotable.plugin.mformat()**\nas the format function.\nThe API section MonoTable.__init__() in the docs describes the other options.\n\n.. code:: python\n\n    import monotable\n\n    headings = ['int', 'Formatted by mformat()']\n    formats = ['',\n        '(mformat)name= {name}\\nage= {age:.1f}\\ncolor= {favorite_color}']\n    t3 = monotable.MonoTable(headings, formats)\n\n    cells = [[2345, dict(name='Row Zero',\n                         age=888.000,\n                         favorite_color='blue')],\n\n             [6789, dict(name='Row One',\n                         age=999.111,\n                         favorite_color='No! Red!')]]\n\n    print(t3.bordered_table(cells, title='mformat() Formatting.'))\n\n.. code::\n\n          mformat() Formatting.\n    +------+------------------------+\n    |  int | Formatted by mformat() |\n    +======+========================+\n    | 2345 | name= Row Zero         |\n    |      | age= 888.0             |\n    |      | color= blue            |\n    +------+------------------------+\n    | 6789 | name= Row One          |\n    |      | age= 999.1             |\n    |      | color= No! Red!        |\n    +------+------------------------+\n\n- Note the age fixed precision formatting.  This is not possible with\n  template substitution provided by option tformat.\n- Format a bordered table by calling **bordered_table()**\n  instead of **table()**.\n- This example also shows formatted cells with newlines.\n\n\nUser defined format function\n----------------------------\n\nSet a user defined format function for the 3rd column.\n\nThe user defined function is plugged in to the table by overriding the\nMonoTable class variable **format_func_map** with a dictionary that contains\nthe name of the function as the key and function object as the value.\n\nThe keys in **format_func_map** become option names that can be specified\nin the option_spec.\n\n.. code:: python\n\n    import monotable\n\n    # User defined format function.\n    def fulfill_menu_request(value, spec):\n        _, _ = value, spec          # avoid unused variable nag\n        return 'Spam!'              # ignore both args\n\n    # Configure MonoTable subclass with the dictionary\n    # of user defined format functions.\n    class FormatFuncsMonoTable(monotable.MonoTable):\n        format_func_map = {'fulfill_menu_request': fulfill_menu_request}\n\n    headings = ['Id Number', 'Duties', 'Meal\\nPreference']\n    formats = ['', '', '(fulfill_menu_request)']\n    t4 = FormatFuncsMonoTable(headings, formats)\n\n    cells = [[1, 'President and CEO', 'steak'],\n             [2, 'Raise capital', 'eggs'],\n             [3, 'Oversee day to day operations', 'toast']]\n\n    print(t4.table(cells, title='>User defined format function.'))\n\n.. code::\n\n                           User defined format function.\n    ----------------------------------------------------\n                                              Meal\n    Id Number  Duties                         Preference\n    ----------------------------------------------------\n            1  President and CEO              Spam!\n            2  Raise capital                  Spam!\n            3  Oversee day to day operations  Spam!\n    ----------------------------------------------------\n\n- The user defined format function **fulfill_menu_request()**\n  ignores the arguments and returns the string 'Spam!'.\n- Keys in the dictionary **my_format_func_map** become option names\n  that can be used in an option_spec.\n- The dictionary is configured into a MonoTable subclass called\n  FormatFuncsMonoTable by overriding the class variable **format_func_map**.\n- Alternatively, you can override on an instance by assignment\n  like this:\n\n.. code:: python\n\n  t4 = monotable.MonoTable(headings, formats)\n  t4.format_func_map = {'fulfill_menu_request': fulfill_menu_request}\n\n- The Duties column auto-aligns to the left since the cells\n  are strings.\n- The headings auto-align to the alignment of the cell in the first row.\n- The title starts with an ``'>'`` align_spec_char which right aligns\n  the title over the table.\n\n.. admonition:: More ...\n\n   If you are not already there, please continue reading\n   `More Examples`_ in the `Documentation`_ on `Read the Docs`_.\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/tmarktaylor/monotable",
    "keywords": "ascii table pretty",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "monotable",
    "platform": "",
    "project_url": "https://pypi.org/project/monotable/",
    "release_url": "https://pypi.org/project/monotable/1.0.2/",
    "requires_python": "",
    "summary": "ASCII table with per column format specs, multi-line content, plug-in format functions, column width control.",
    "version": "1.0.2"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d638ea3bfa2f906e66e69c1676b862f1",
          "sha256": "6f31ef73687901c31cb55e4cd2da643240751c75369e29023871aac28887eafe"
        },
        "downloads": 15,
        "filename": "monotable-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d638ea3bfa2f906e66e69c1676b862f1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 32829,
        "upload_time": "2017-03-25T16:07:19",
        "url": "https://files.pythonhosted.org/packages/7a/07/13b92021f26c2e258c8319f5d7cb9632a302477a0b388c7f3b96e7fa4dd9/monotable-1.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "63a0300efba3305530e87950d1ba884a",
          "sha256": "ef28a70744d67e6e9971a81493750bec39ed8309b10c734937ce80dd8da2274e"
        },
        "downloads": 14,
        "filename": "monotable-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "63a0300efba3305530e87950d1ba884a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 62342,
        "upload_time": "2017-03-25T16:07:20",
        "url": "https://files.pythonhosted.org/packages/b8/69/65db4d69d60c173c2240504debedfc3b8849187bd42d72e9dcaaf9dd45fd/monotable-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "263a8f5b66b6fe8ed0bff86d8130dc8b",
          "sha256": "8de8522be88eb268f50382d01b4fc476fbdea1fe3722f4a158d2b92bd91c3bcd"
        },
        "downloads": 14,
        "filename": "monotable-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "263a8f5b66b6fe8ed0bff86d8130dc8b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 33257,
        "upload_time": "2017-03-26T21:55:18",
        "url": "https://files.pythonhosted.org/packages/e3/88/900092890689988f96a48b0977b1a41da2291e4b4b8deda2c06d3b7ef1af/monotable-1.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "db0912dd0b5683010777c25b933e41df",
          "sha256": "c92bab1df2c3078d1bbe73598198c7b4b3669b0ea34370fc9fddbf46e1702019"
        },
        "downloads": 15,
        "filename": "monotable-1.0.1.zip",
        "has_sig": false,
        "md5_digest": "db0912dd0b5683010777c25b933e41df",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 83247,
        "upload_time": "2017-03-26T21:55:19",
        "url": "https://files.pythonhosted.org/packages/f0/a7/74e79021a1b411a18f9a7f51092948dda1f15cf5b0f5ba28c1324a95f239/monotable-1.0.1.zip"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b2ea169c78a659011871782718c301df",
          "sha256": "c0bc8c12f5b6026616a842eedb7a5df752a1c8b8f8fcd293f42dcffd719e4990"
        },
        "downloads": 203,
        "filename": "monotable-1.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2ea169c78a659011871782718c301df",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 33783,
        "upload_time": "2017-04-06T18:55:39",
        "url": "https://files.pythonhosted.org/packages/5f/8b/322aa0282d8c531edc50ecec49da4576230860311c60b65f99269cc8c07e/monotable-1.0.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b37b0baaa57f762fe9f83663e46a2429",
          "sha256": "d4f62d8e423bbf7429e47676269d724ec755aedb585716d4d82dcf4b10cfb7eb"
        },
        "downloads": 205,
        "filename": "monotable-1.0.2.zip",
        "has_sig": false,
        "md5_digest": "b37b0baaa57f762fe9f83663e46a2429",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 84972,
        "upload_time": "2017-04-06T18:55:40",
        "url": "https://files.pythonhosted.org/packages/86/44/6150937c654a9c1487ff9e717c521741e66f3261cc5beca584482c0035d3/monotable-1.0.2.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b2ea169c78a659011871782718c301df",
        "sha256": "c0bc8c12f5b6026616a842eedb7a5df752a1c8b8f8fcd293f42dcffd719e4990"
      },
      "downloads": 203,
      "filename": "monotable-1.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b2ea169c78a659011871782718c301df",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 33783,
      "upload_time": "2017-04-06T18:55:39",
      "url": "https://files.pythonhosted.org/packages/5f/8b/322aa0282d8c531edc50ecec49da4576230860311c60b65f99269cc8c07e/monotable-1.0.2-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "b37b0baaa57f762fe9f83663e46a2429",
        "sha256": "d4f62d8e423bbf7429e47676269d724ec755aedb585716d4d82dcf4b10cfb7eb"
      },
      "downloads": 205,
      "filename": "monotable-1.0.2.zip",
      "has_sig": false,
      "md5_digest": "b37b0baaa57f762fe9f83663e46a2429",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 84972,
      "upload_time": "2017-04-06T18:55:40",
      "url": "https://files.pythonhosted.org/packages/86/44/6150937c654a9c1487ff9e717c521741e66f3261cc5beca584482c0035d3/monotable-1.0.2.zip"
    }
  ]
}