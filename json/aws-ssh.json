{
  "info": {
    "author": "Aru Sahni",
    "author_email": "arusahni@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Systems Administration"
    ],
    "description": "AWS-SSH\n=======\n\nSSH into your project-specific AWS EC2 instances by name, without having\nto remember IP addresses & private keys, or a curating a SSH config.\n\nTurn this: ``ssh -i ~/.ssh/project-key.pem ubuntu@198.51.100.13``\n\nInto this: ``aws-ssh compute``\n\nGetting Started\n---------------\n\nPrerequisites\n~~~~~~~~~~~~~\n\nAWS-SSH requires Python 2.7 or greater on a POSIX system. You will also\nneed to have `the AWS CLI <https://aws.amazon.com/cli/>`__ installed and\nconfigured.\n\nInstalling\n~~~~~~~~~~\n\nPip is the recommended method:\n\n.. code:: console\n\n    $ pip install aws-ssh\n\nI recommend installing this into a virtualenv, and then symlinking the\nbinaries to your PATH. For example:\n\n.. code:: console\n\n    $ mkvirtualenv -p $(which python3) aws-ssh # Python 3 recommended\n    $ pip install aws-ssh\n    # Assuming ~/bin/ is in your $PATH...\n    $ ln -s ~/.virtualenvs/aws-ssh/bin/{aws-ssh,awssh,ssh-ec2} ~/bin/\n    $ deactivate\n\nYou should now be able to use AWS-SSH outside of your virtualenv!\n\nUsage\n~~~~~\n\nOnce installed, you need to create a project. Projects are collections\nof EC2 instances that share a common set of parameters. For example, I\nmay be working on the ``squanch`` project, with the following instances\nin my AWS account:\n\n-  squanch-compute - 198.51.100.13\n-  squanch-web - 198.51.100.14\n-  squanch-data - 198.51.100.15\n\nAssuming I keep my ``squanch``-related code in ``~/code/squanch``, I\nwill first need to initialize an AWS-SSH project within that directory:\n\n.. code:: console\n\n    $ cd ~/code/squanch\n    $ aws-ssh --init\n    Please provide the full path ot the directory containing all private keys: ~/.ssh/\n    Please provide a name for this project: squanch\n    Please provide the AWS profile to use: default\n    Please provide the name of the private key used for authentication (including extension): squanch.pem\n    Please provide the prefix for EC2 names: squanch-\n    Please provide the root directory for the project: ~/code/squanch\n\nThis will create an ``.awssshconfig`` file in the project root\ndirectory. You can manage it under version control to get the team on\nthe same page :-)\n\nNow that AWS-SSH has been configured, time to connect to an instance!\n\n.. code:: console\n\n    $ cd ~/code/squanch\n    $ aws-ssh web\n    # Successful SSH connection to 198.51.100.14\n\nBoom.\n\nNotes\n-----\n\n-  AWS-SSH attempts to guess the username for an instance by testing\n   various usernames. Right now, the sequence of user names is fixed\n   (and based off common AMI usernames). In a future release, this will\n   be configurable.\n-  If your access is dependent on custom routing (e.g., behind a lazy\n   VPN), you may need to abort the connection attempt (via ``^C``) and\n   manually add a route for the instance.\n\nContributing\n------------\n\nContributions welcome! Be sure to use the development package, available\nunder the ``dev`` extra.\n\n.. code:: console\n\n    $ git clone git@github.com:arusahni/aws-ssh\n    $ cd aws-ssh\n    $ pip install -e .[dev]\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/arusahni/aws-ssh",
    "keywords": "aws ssh ec2 iam amazon web services remote",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aws-ssh",
    "platform": "",
    "project_url": "https://pypi.org/project/aws-ssh/",
    "release_url": "https://pypi.org/project/aws-ssh/0.0.1/",
    "requires_python": "",
    "summary": "A utility to enable easy SSH connections to AWS EC2 instances.",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a9b37d5b488bd051992d006f2b2da9e7",
          "sha256": "9300936a633d7b66f1e7a92fe61ecd34d25071d737f2967bc3c807a79bbfea2d"
        },
        "downloads": 0,
        "filename": "aws-ssh-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a9b37d5b488bd051992d006f2b2da9e7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9954,
        "upload_time": "2017-05-17T23:59:24",
        "url": "https://files.pythonhosted.org/packages/81/3e/a9ec548bd7c1895ded22b9ef381b3fc99a45c10a60f85bfbca73f7f6b6b7/aws-ssh-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a9b37d5b488bd051992d006f2b2da9e7",
        "sha256": "9300936a633d7b66f1e7a92fe61ecd34d25071d737f2967bc3c807a79bbfea2d"
      },
      "downloads": 0,
      "filename": "aws-ssh-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a9b37d5b488bd051992d006f2b2da9e7",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9954,
      "upload_time": "2017-05-17T23:59:24",
      "url": "https://files.pythonhosted.org/packages/81/3e/a9ec548bd7c1895ded22b9ef381b3fc99a45c10a60f85bfbca73f7f6b6b7/aws-ssh-0.0.1.tar.gz"
    }
  ]
}