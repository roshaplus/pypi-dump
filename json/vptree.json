{
  "info": {
    "author": "Rickard Sj\u00f6gren",
    "author_email": "r.sjogren89@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "VP-Tree\n=======\n\nThis package contains an implementation of a `vantage-point tree <https://en.wikipedia.org/wiki/Vantage-point_tree>`_ data structure.\n\nInstallation\n------------\n\nSimply install through pip:\n\n.. code-block::\n\n  pip install vptree\n\nExample\n-------\n\nExample usage:\n\n.. code-block:: python\n\n  import numpy as np\n  import vptree\n\n  # Define distance function.\n  def euclidean(p1, p2):\n    return np.sqrt(np.sum(np.power(p2 - p1, 2)))\n\n  # Generate some random points.\n  points = np.random.randn(20000, 10)\n  query = [.5] * 10\n\n  # Build tree in O(n log n) time complexity, optionally specify minimum\n  # leaf size passing 'leaf_size'  key word.\n  tree = vptree.VPTree(points, euclidean)\n\n  # Query single point.\n  tree.get_nearest_neighbor(query)\n\n  # Query n-points.\n  tree.get_n_nearest_neighbors(query, 10)\n\n  # Get all points within certain distance.\n  tree.get_all_in_range(query, 3.14)",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/RickardSjogren/vptree",
    "keywords": "python machine learning search",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "vptree",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/vptree/",
    "release_url": "https://pypi.org/project/vptree/1.0.2/",
    "requires_python": null,
    "summary": "A package implementing a vantage-point data structure, for efficient nearest neighbor searching.",
    "version": "1.0.2"
  },
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4dee01b61af6ec7d9531b0b4c18c6a41",
          "sha256": "c19d8b8b6cb67cd79327661eb13a5064c786124c546ee132dcc32661ae6493d8"
        },
        "downloads": 0,
        "filename": "vptree-1.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4dee01b61af6ec7d9531b0b4c18c6a41",
        "packagetype": "bdist_wheel",
        "python_version": "any",
        "size": 4890,
        "upload_time": "2017-04-13T08:40:51",
        "url": "https://files.pythonhosted.org/packages/87/57/6a07b00285b4dffc788cd10c9cd1de104db6bdb17944a34275dd357fec36/vptree-1.0.2-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4dee01b61af6ec7d9531b0b4c18c6a41",
        "sha256": "c19d8b8b6cb67cd79327661eb13a5064c786124c546ee132dcc32661ae6493d8"
      },
      "downloads": 0,
      "filename": "vptree-1.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4dee01b61af6ec7d9531b0b4c18c6a41",
      "packagetype": "bdist_wheel",
      "python_version": "any",
      "size": 4890,
      "upload_time": "2017-04-13T08:40:51",
      "url": "https://files.pythonhosted.org/packages/87/57/6a07b00285b4dffc788cd10c9cd1de104db6bdb17944a34275dd357fec36/vptree-1.0.2-py2.py3-none-any.whl"
    }
  ]
}