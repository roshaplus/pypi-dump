{
  "info": {
    "author": "Rob McMullen",
    "author_email": "feedback@playermissile.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Topic :: Software Development :: Assemblers",
      "Topic :: Software Development :: Disassemblers",
      "Topic :: Utilities"
    ],
    "description": "========\nOmnivore\n========\n\n\n\nAbstract\n========\n\nOmnivore - the Atari 8-bit binary editor sponsored by the Player/Missile Podcast\n\nWhile producing the Player/Missile podcast, I have had many ideas about hacking\ncode on the 8-bits like I used to as a kid.  One of the tools I had was the\nOmnimon system monitor board by CDY Consulting, an add-on board for the Atari\n800 that provided a ROM-resident monitor similiar to what was available by\ndefault on the Apple ][ series.  In fact, I originally named this program\nOmnimon but felt that would be too confusing as there are people in the 8-bit\ncommunity who still use the original Omnimon hardware.  Using the prefix\n\"Omni-\" is my tribute to all the fun I had with the Omnimon hardware.\n\nOmnivore is a cross-platform app for modern hardware (running linux, OS X and\nWindows) to work with executables or disk images of Atari 8-bit machines.  (I\nhave long- term goals to support editing MAME ROMS and disk images of other\n8-bit machines like the C64 and Apple ][.)\n\nOmnivore is more than an Atari binary editor.  It can also create and edit maps\nusing character-based graphic tiles.  For instance: many games use the 5-color\nANTIC modes 4 or 5 to provide a complex scrolling background while using much\nless memory than the multi-color bit-mapped modes.\n\nIn addition to supporting more platforms, I also intend to add support for\nediting character sets and player-missile graphic shapes.\n\n\nHow To Run Omnivore\n===================\n\nNote that this is still beta-level software, so caveat emptor.\n\nBinaries are available for Windows 7 and later (64-bit\nonly) and Mac OS X 10.9 and later and at the `home page\n<http://playermissile.com/omnivore/>`_ or directly through the `github\nreleases <https://github.com/robmcmullen/omnivore/releases>`_ page.\n\nBinaries for linux are not currently available, although I would like to\nprovide packages for Ubuntu, Linux Mint and Gentoo at some point.  To run\non linux, you'll have to install it from source.  It's not that complicated;\napart from wxPython, everything can be installed from the `Python Package\nIndex <https://pypi.python.org/pypi>`_ using pip.\n\n\nInstalling From Source\n======================\n\nIf you're interested in hacking on the code or making bug fixes or\nimprovements, you can install and run the source distribution.\n\nIf you're running linux (like me!), I'd recommend you set up a python\nvirtual environment with all the dependencies you need in there, rather than\ncluttering up your system's python.\n\nOn OS X, I have had difficulty with installing wxPython in a virtualenv, so\nI had to resort to installing it using the `default DMG on the wxPython site\n<http://wxpython.org/download.php#osxdefault>`_ and using the `framework\ninstall of python 2.7 <https://www.python.org/downloads/mac-osx/>`_, not the\nsystem's python.\n\nI do not develop on Windows at all, but for testing purposes I have a virtual\nmachine dedicated to Omnivore development and install everything in the system\npython in that VM.\n\nPrerequisites\n-------------\n\n* python 2.7 (but not 3.x yet) capable of building C extensions\n* wxPython 3.0.x\n\nYour version of python must be able to build C extensions, which should be\nautomatic in most linux and on OS X. You may have to install the python\ndevelopment packages on linux distributions like Ubuntu or Linux Mint.\n\nWindows doesn't come with a C compiler, but happily, Microsoft provides a\ncut-down version of their Visual Studio compiler just for compiling Python\nextensions! Download and install it from\n`here <https://www.microsoft.com/en-us/download/details.aspx?id=44266>`_.\n\nVirtualenv Setup -- *Linux Only*\n----------------------------------\n\nFirst: download the `wxPython 3.0.2.0 <http://downloads.sourceforge.net/wxpython/wxPython-src-3.0.2.0.tar.bz2>`_ source.\n\nNext, setup the virtual environment::\n\n    virtualenv /data/virtualenv/wx3\n\nThe ``activate`` script needs to be modified in order for the dynamic libraries\nto be discovered correctly.  You can do this with a simple multi-line shell\ncommand::\n\n    cat <<EOF >> $VIRTUAL_ENV/bin/activate\n    LD_LIBRARY_PATH=\"$VIRTUAL_ENV/lib:$LD_LIBRARY_PATH\"\n    export LD_LIBRARY_PATH\n    EOF\n\nBegin using the virtualenv with::\n\n    source $VIRTUAL_ENV/bin/activate\n\nwxPython -- *Linux*\n---------------------\n\nwxPython is the GUI toolkit, and unfortunately it is not able to be installed\nusing pip, so you have to compile it yourself::\n\n    mkdir src\n    cd src\n    tar xvf ~/Downloads/wxPython-src-3.0.2.0.tar.bz2 \n    cd wxPython-src-3.0.2.0/\n    ./configure --prefix=$VIRTUAL_ENV\n    make -j 8\n    make install\n    cd wxPython\n    python setup.py install\n\nwxPython -- *Other Plaftorms*\n-------------------------------\n\n* OS X: `download the package installer <http://wxpython.org/download.php#osxdefault>`_\n* Windows: `download and run the installer http://wxpython.org/download.php#msw>`_\n\nInstalling Omnivore -- *Unix-like Platforms*\n--------------------------------------------\n\nGet the source from cloning it from github::\n\n    $ git clone https://github.com/robmcmullen/omnivore.git\n    $ cd omnivore\n    $ ./rebuild_enthought.sh\n    $ python setup.py build_ext --inplace\n\nYou'll need the git package on your system, which is available through\nyour package manager on linux, or from the `git homepage \n<https://git-scm.com/downloads>`_ on other platforms.\n\nMy modified versions of the Enthought libraries must be checked out before\nsetup.py will work.  Because I have used a unix shell script, this won't work\non windows.  Until I get this fixed, you can check out a source distribution\nfrom the `github releases <https://github.com/robmcmullen/omnivore/releases>`_\npage which has bundled all of the Enthough source.\n\n\nRunning the Program -- *All Platforms*\n----------------------------------------\n\nOnce the C modules are built (the Enthought library requires a C module and\nOmnivore has those several Cython modules for graphic speedups), you can run\nthe program from the main source directory using::\n\n    $ python run.py\n\n\nDevelopment\n===========\n\nGraphics Speedups\n-----------------\n\nThe Cython extension is used to speed up some of the time-critical code (like\nrepainting all the character graphics), but it is only required if you were\ngoing to debug or recompile those specific .pyx files.  Cython is not needed\nfor hacking on the python code.\n\nShould you change a cython file (currently only\nomnivore/utils/wx/bitviewscroller_speedups.pyx), use the command ``python\nsetup-cython.py`` to turn that into a C extension, then use ``python setup.py\nbuild_ext --inplace`` to regenerate the dynamic libraries.\n\nPlugins\n-------\n\nOmnivore is extended by plugins.  Plugins are based on the `Enthought Framework`__\nand are discovered using setuptools plugins.\n\n__ http://docs.enthought.com/envisage/envisage_core_documentation/index.html\n\nThe plugin architecture is documented by Enthought, but is not terribly easy to\nunderstand.  I intend to produce some sample plugins to provide some examples\nin case others would like to provide more functionality to Omnivore.\n\n\nSome Boring History\n===================\n\nOmnivore provides an XEmacs-like multi-window/multi-tabbed user interface and\nis written in and extensible through Python.  It is built around the emacs\nconcept of major modes -- different views are presented to the user depending\non the type of data being edited.\n\nIt is a rewrite of peppy (my previous editor framework), but now it's based\non the Enthought Tasks framework instead of my old custom framework.  (Note\nthat even though Enthought has moved mostly toward Qt as the supported GUI\ntoolkit, I have forked Enthought's code and extended it with better wxPython\nsupport.  Only wxPython is supported as a GUI backend for Omnivore.  I have\nattempted to submit patches back to Enthough but they have not been interested\nin further wx support).  The architectural goal is to provide a system with\nlow coupling in order to reduce the work required to extend the editor with\nnew major modes, minor modes, and sidebars.\n\nWhy a rewrite of the original peppy_ editor?\n\n.. _peppy: http://peppy.flipturn.org\n\n* **Simplify the code.**\n  Peppy had the ability to have any major mode in any window, but this needed\n  a lot of code to support minor modes switching in and out as tabs changed.\n  I got it to work and all, but the code was quite convoluted.  Omnivore only\n  allows similar major modes in a window, and different major modes require\n  a new window.  Not a huge inconvenience but saves a considerable amount of\n  coding, so I'm happy with this tradeoff.  It allows me to use the Enthought\n  Tasks framework pretty much as-is.\n\n* **Make it easier for others to contribute.**\n  Peppy was using my own framework which had a steep learning curve.\n  Hopefully by moving to Enthought's framework, it will have a broader appeal.\n\n* **Leverage other people's code.**\n  I wrote a lot of custom code for stuff that I needed at the time, but now\n  there are similar packages that others support and maintain.  For example,\n  I wrote a virtual file system implementation that worked, but was a whole\n  project in itself.  In the intervening years, PyFilesystem_ was written,\n  removing the need for me to use my own code.\n\n.. _PyFilesystem: http://packages.python.org/fs/index.html\n\n\nDisclaimer\n==========\n\nOmnivore, the Atari 8-bit binary editor sponsored by the Player/Missile Podcast\nCopyright (c) 2014-2017 Rob McMullen (feedback@playermissile.com)\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program; if not, write to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\n\nEnthought License\n-----------------\n\nCopyright (c) 2006-2014, Enthought, Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n* Neither the name of Enthought, Inc. nor the names of its contributors may\n  be used to endorse or promote products derived from this software without\n  specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
    "docs_url": null,
    "download_url": "https://github.com/robmcmullen/omnivore/archive/0.15.1.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://playermissile.com/omnivore",
    "keywords": "",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Omnivore",
    "platform": "Windows",
    "project_url": "https://pypi.org/project/Omnivore/",
    "release_url": "https://pypi.org/project/Omnivore/0.15.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "The Atari 8-bit binary editor sponsored by the Player/Missile Podcast.",
    "version": "0.15.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f9074c732354330498b58c376b70c4a9",
          "sha256": "eef4c2972ea2f5ed7901c04294c09f5f59b35ad449bb429ecb0f223e05c45366"
        },
        "downloads": -1,
        "filename": "omnivore-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f9074c732354330498b58c376b70c4a9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2025168,
        "upload_time": "2016-01-02T06:20:34",
        "url": "https://files.pythonhosted.org/packages/66/82/42aaa5d3bd0be0b24cdca51dcf23699ae21678257f60b92e909db5f3ce94/omnivore-0.1.tar.gz"
      }
    ],
    "0.13.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f424160c29a596a575b94a6a875fea55",
          "sha256": "ea16011f979db7173eb2d0104c9c5c5ebe7d3549ff1a147a224b54c8571db4e8"
        },
        "downloads": -1,
        "filename": "Omnivore-0.13.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f424160c29a596a575b94a6a875fea55",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2778810,
        "upload_time": "2016-07-26T23:36:51",
        "url": "https://files.pythonhosted.org/packages/d2/f3/657c4220024a4f671db5d1710bb404a2c6e8844b5a7a30465a31ae97bde3/Omnivore-0.13.0.tar.gz"
      }
    ],
    "0.13.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "30253b5f02c0849232c44aaf8dba1169",
          "sha256": "031b2f7a904594acf59aa06369e73fee03c10154f540de897f73d3e205367bbe"
        },
        "downloads": -1,
        "filename": "Omnivore-0.13.1.tar.gz",
        "has_sig": false,
        "md5_digest": "30253b5f02c0849232c44aaf8dba1169",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2779935,
        "upload_time": "2016-08-05T16:51:04",
        "url": "https://files.pythonhosted.org/packages/8e/a2/160bea2f243709e4e46a2d3c0603bb403a15dfa8bf3648dc1a3ad1121add/Omnivore-0.13.1.tar.gz"
      }
    ],
    "0.13.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "df1772f4a48a2b9a230cfd402427b720",
          "sha256": "2d6e091f018598a731333b552d5771e80c64908bbe3fcd484400f9349d103a93"
        },
        "downloads": -1,
        "filename": "Omnivore-0.13.2.tar.gz",
        "has_sig": false,
        "md5_digest": "df1772f4a48a2b9a230cfd402427b720",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2756225,
        "upload_time": "2016-08-07T20:13:57",
        "url": "https://files.pythonhosted.org/packages/55/68/370215880578a8d8d5035e9ae053c13e21c3ce38cd28fb18fcceb5525dd2/Omnivore-0.13.2.tar.gz"
      }
    ],
    "0.13.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b02776011aded0af80ba6f4094330899",
          "sha256": "4ef1367d3d7299185fbdf304264a2150644df1bb9fd77394c5358c9f32993ee0"
        },
        "downloads": -1,
        "filename": "Omnivore-0.13.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b02776011aded0af80ba6f4094330899",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2759244,
        "upload_time": "2016-08-26T03:03:56",
        "url": "https://files.pythonhosted.org/packages/0e/61/f16b2c617b3163ad817d25a76014116ae8f0135592fce2b3307a68b6036e/Omnivore-0.13.4.tar.gz"
      }
    ],
    "0.13.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3f80f07031b8bdaa56b77dac55cdb472",
          "sha256": "36632c6c6623afa4e61d244dc23828fd80119d754353c7181e4d6ea63345afe2"
        },
        "downloads": -1,
        "filename": "Omnivore-0.13.7.tar.gz",
        "has_sig": false,
        "md5_digest": "3f80f07031b8bdaa56b77dac55cdb472",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2762420,
        "upload_time": "2016-09-16T19:31:31",
        "url": "https://files.pythonhosted.org/packages/1c/a9/964e71c6816db8bf27f453bb63ba881c54153dadca51d4f524d3c14ce2ff/Omnivore-0.13.7.tar.gz"
      }
    ],
    "0.15.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "714ebb61f218c5b03379c5583b01dd1c",
          "sha256": "b66b690536a25658e77587fc26e475461e0e8c17f6161d6ea1c95e18b5b0d55c"
        },
        "downloads": -1,
        "filename": "Omnivore-0.15.1.tar.gz",
        "has_sig": false,
        "md5_digest": "714ebb61f218c5b03379c5583b01dd1c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3495427,
        "upload_time": "2018-01-04T15:17:51",
        "url": "https://files.pythonhosted.org/packages/56/14/1cb2555d89182ff353681f101da3116eabe03e27b6d89e8d8f09cbcb095a/Omnivore-0.15.1.tar.gz"
      }
    ],
    "0.5.3": [],
    "0.8.0": [],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "85e9fb060192c0885e6fc78644613594",
          "sha256": "c8ea9c5f5edb459ac46773a0a4d54a84da273f3791c1a80c0ca3eb7d5c469e71"
        },
        "downloads": -1,
        "filename": "Omnivore-0.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "85e9fb060192c0885e6fc78644613594",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2566256,
        "upload_time": "2016-02-03T00:17:48",
        "url": "https://files.pythonhosted.org/packages/c1/1c/1072a9e0eea51f100093301222f2e9a763b7f9cc93ddfd57c4bb6b33c9f9/Omnivore-0.8.2.tar.gz"
      }
    ],
    "0.8.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "868af5f451a1cddc46edf5c5886a117c",
          "sha256": "03edfc9c6eef50c84d77c4b630ef868afba10c5053ab9a1e3a431f006e76f1a8"
        },
        "downloads": -1,
        "filename": "Omnivore-0.8.3.tar.gz",
        "has_sig": false,
        "md5_digest": "868af5f451a1cddc46edf5c5886a117c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2564566,
        "upload_time": "2016-02-04T21:26:38",
        "url": "https://files.pythonhosted.org/packages/12/81/794dd4daed7b7bde8d437de119221e50a890757ccf0ebf9d635eef1bb912/Omnivore-0.8.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "714ebb61f218c5b03379c5583b01dd1c",
        "sha256": "b66b690536a25658e77587fc26e475461e0e8c17f6161d6ea1c95e18b5b0d55c"
      },
      "downloads": -1,
      "filename": "Omnivore-0.15.1.tar.gz",
      "has_sig": false,
      "md5_digest": "714ebb61f218c5b03379c5583b01dd1c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3495427,
      "upload_time": "2018-01-04T15:17:51",
      "url": "https://files.pythonhosted.org/packages/56/14/1cb2555d89182ff353681f101da3116eabe03e27b6d89e8d8f09cbcb095a/Omnivore-0.15.1.tar.gz"
    }
  ]
}