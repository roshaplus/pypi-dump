{
  "info": {
    "author": "Alexandre Varas",
    "author_email": "alej0varas@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "Generic application to handle https://ejabberd-saas.com/ Remote Data API calls\n\n==========\n djabberd\n==========\n\nFor each specific tasks a handler function must be implemented.\n\nInstall\n-------\n::\n\n   pip install djabberd\n\nQuick start\n-----------\n\n1. Include the django-ejabberd URLconf in your project urls.py like this::\n::\n\n   url(r'', include('djabberd.urls'),\n\n::\n\n   # For Django==1.8\n   url(r'', include('djabberd.urls'), namespace='djabberd')\n\n2. Setup the handler in your Django settings::\n::\n\n    DJABBERD_API_HANDLERS='your.module.path'\n\nBased on ejabberd-saas's documentation those endpoints are required(01-Feb-2016):\n\n1. User management:\n\n   1. Authentication ('/auth')\n   2. User exists ('/user')\n\n2. Roster management:\n\n   1. Retrieve user roster ('/roster')\n\n3. Archive:\n\n   1. Store ('/archive')\n   2. Get ('/archive')\n\nThere must be one function for each endpoint that should be implemented like this:\n\n* user_authentication(username, password):\n\n  - Returns `True` if authentication is valid\n  - Returns `False` if authentication is *not* valid\n\n* user_exists(username):\n\n  - Returns `True` if user exists\n  - Returns `False` if not(or if it is not active)\n\n* retrieve_user_roster(username):\n\n  - Returns the roster in JSON format\n  - Returns `False` if user does not exist\n\n* archive_store(payload)\n\n  - Returns `True` if message has been stored\n  - Returns a string containing an error message if message has *not* been stored\n\n* archive_get(username[, peer, after, before, limit])\n\n  - Returns the message history in JSON format\n  - Returns `False` in any other case\n\nFormats\n-------\n\n* retrieve_user_roster::\n\n   {\"roster\": [\n       {\"username\": \"CONTACT\",\n        \"subscription\": \"both\",\n        \"nick\": \"NICK\"},\n        ...\n     ]}\n\n* archive_store::\n\n     {\"username\": \"USERNAME1\",\n      \"peer\": \"USERNAME2\",\n      \"xml\": \"MESSAGE_STANZA\",\n      \"body\": \"TEXT\",\n      \"timestamp\": \"TIMESTAMP\",\n      \"direction\": \"DIRECTION\"}\n\n* archive_get::\n\n     {\"archive\": [{\"username\": \"USERNAME1\",\n                   \"peer\": \"USERNAME2\",\n                   \"xml\": \"MESAGE_STANZA\",\n                   \"body\": \"TEXT\",\n                   \"timestamp\": \"TIMESTAMP\",\n                   \"direction\": \"DIRECTION\"}, ...]\n                   \"count\" : MESSAGES_NUMBER\n     }\n\n\nConsiderations\n--------------\n\nBased on ejabberd-saas's documentation:\n\n- If XMPP JID is \"userid@xmppdomain\", just pass \"userid\"\n- If XMPP JID of USER is \"userid@xmppdomain\", just pass \"xmppdomain\"\n- If an exception is raised from your handler it would be treated as a server error\n- Return HTTP 200 for the successful case\n- Return HTTP 401 if authentication fails\n- Return HTTP 401 if it's not the successful case\n- Return HTTP 500 for server errors, this is the Django's default behavior\n\nRunning Tests\n=============\n::\n\n   python runtests.py [tests.<tests_module>[.<TestClass>[.<test_method>]]]",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/alej0varas/djabberd",
    "keywords": "",
    "license": "GPL v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djabberd",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/djabberd/",
    "release_url": "https://pypi.org/project/djabberd/0.9.1/",
    "requires_python": "",
    "summary": "Generic application to handle https://ejabberd-saas.com/ Remote Data API calls",
    "version": "0.9.1"
  },
  "releases": {
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "94fe7144c5da3aff1c0d5adfb31df8b1",
          "sha256": "3814263c810cc6d9aebce144509775918fc63a1467c2233eaee0d4517a14c3cc"
        },
        "downloads": 32,
        "filename": "djabberd-0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94fe7144c5da3aff1c0d5adfb31df8b1",
        "packagetype": "bdist_wheel",
        "python_version": "3.4",
        "size": 4532,
        "upload_time": "2016-12-30T11:28:12",
        "url": "https://files.pythonhosted.org/packages/a9/51/ca0cf38644cd4a1100a160ff335905783bff26cc47d284d33405cea10be3/djabberd-0.9-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "058a99cf6a1c43eedf43d34a0c1ae1f8",
          "sha256": "d36f36619752794c7a85407b079ff5b28cca600f5281bacba44eab4b2a65fe6b"
        },
        "downloads": 32,
        "filename": "djabberd-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "058a99cf6a1c43eedf43d34a0c1ae1f8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3725,
        "upload_time": "2016-12-30T11:28:10",
        "url": "https://files.pythonhosted.org/packages/b0/47/9ca64be7583354c2eb7cf35b14415ed2c76bf64270f8f53f0532a2f7f8d1/djabberd-0.9.tar.gz"
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "766b6ec6a337b53fdd365e9787ee1bce",
          "sha256": "48c1e9acdb44a097494b0ce83e83502951e5e0568784172d890d19d797c1ed77"
        },
        "downloads": 32,
        "filename": "djabberd-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "766b6ec6a337b53fdd365e9787ee1bce",
        "packagetype": "bdist_wheel",
        "python_version": "3.4",
        "size": 9489,
        "upload_time": "2016-12-30T13:15:55",
        "url": "https://files.pythonhosted.org/packages/a2/49/e3c803fc968e820edddc09c5126e30a22fd0fa8c6181333e80cfe47c3c4f/djabberd-0.9.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "87d021a148ecb5eafac0f38b78a0c4ab",
          "sha256": "9bffce415f327bdfc851d391b5bc6662b87200b1d1c72bc7887bd67047669781"
        },
        "downloads": 37,
        "filename": "djabberd-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "87d021a148ecb5eafac0f38b78a0c4ab",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5240,
        "upload_time": "2016-12-30T13:15:53",
        "url": "https://files.pythonhosted.org/packages/0b/8b/08697d0d495cbbcf9acd9a6f8177e6995e8b23770bb84a477ddc3359db2a/djabberd-0.9.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "766b6ec6a337b53fdd365e9787ee1bce",
        "sha256": "48c1e9acdb44a097494b0ce83e83502951e5e0568784172d890d19d797c1ed77"
      },
      "downloads": 32,
      "filename": "djabberd-0.9.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "766b6ec6a337b53fdd365e9787ee1bce",
      "packagetype": "bdist_wheel",
      "python_version": "3.4",
      "size": 9489,
      "upload_time": "2016-12-30T13:15:55",
      "url": "https://files.pythonhosted.org/packages/a2/49/e3c803fc968e820edddc09c5126e30a22fd0fa8c6181333e80cfe47c3c4f/djabberd-0.9.1-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "87d021a148ecb5eafac0f38b78a0c4ab",
        "sha256": "9bffce415f327bdfc851d391b5bc6662b87200b1d1c72bc7887bd67047669781"
      },
      "downloads": 37,
      "filename": "djabberd-0.9.1.tar.gz",
      "has_sig": false,
      "md5_digest": "87d021a148ecb5eafac0f38b78a0c4ab",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5240,
      "upload_time": "2016-12-30T13:15:53",
      "url": "https://files.pythonhosted.org/packages/0b/8b/08697d0d495cbbcf9acd9a6f8177e6995e8b23770bb84a477ddc3359db2a/djabberd-0.9.1.tar.gz"
    }
  ]
}