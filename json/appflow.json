{
  "info": {
    "author": "TTSS",
    "author_email": "dev@appflow.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# AppFlow\n\n[![Join the chat at https://gitter.im/ttssdev/appflow](https://badges.gitter.im/ttssdev/appflow.svg)](https://gitter.im/ttssdev/appflow?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nAppFlow is a multitenant environment automation tool based on Ansible.\n\n## Auto installation\n\n```\nbash <(curl -s https://raw.githubusercontent.com/ttssdev/appflow/master/utils/appflow.sh)\n```\n\non macOS install [brew](http://brew.sh), on GNU/Linux install [VirtualBox](https://www.virtualbox.org/wiki/Linux_Downloads) before.\n\n## Manual installation\n\n```\ncd ~/ ; git clone git@github.com:ttssdev/appflow.git\ncd ~/appflow ; make install ; source ~/.zshrc\nappflow local\n```\n\n## Local development\n\n```\nappflow vagrant reload atlantis ; ssh atlantis\n```\n\n## Remote provisioning\n\n```\nappflow provision env=production limit=webservers tenant=mrrobot tags=base_packages\n```\n\n## Features\n\nProvisioning:\n\n* Multitenant architecture (different teams with different environments)\n* Supports `development`, `testing`, `staging` and `production`\n* All configuration files are encrypted in git with `ansible-vault`\n* Provision all nodes with one command\n\nDevelopment:\n\n* Provides a Vagrant based development environment called `atlantis`\n* Code locally on any Unix-like system or Windows (cygwin)\n\nDeployment:\n\n* Made for [Bedrock](https://roots.io/bedrock/) projects and [bedrock-capistrano](https://github.com/roots/bedrock-capistrano) deployments\n* Deploy and rollback with one command\n\nInfrastructure:\n\n* Builtin [Percona XtraDB Cluster 5.6](https://www.percona.com/software/mysql-database/percona-xtradb-cluster) and [GlusterFS](http://www.gluster.org) support for sharing web uploads on multiple nodes\n* Easy development environments with [Vagrant](http://www.vagrantup.com/)\n* Easy server provisioning with [Ansible](http://www.ansible.com/) (Ubuntu 14.04, PHP 5.6)\n\n## Deployment requirements\n\n### Capistrano\n\n#### Ubuntu\n\n```\nsudo apt-get install software-properties-common\nsudo apt-add-repository ppa:brightbox/ruby-ng\nsudo apt-get update\nsudo apt-get install ruby2.3 libxml2-dev zlib1g-dev\nsudo gem2.3 install bundler\n```\n\n## Installation\n\n1. Create new config directory layout - `mkdir -p ~/.appflow/{tenant,vault}`\n2. Copy `config.example` to `~/.appflow/config` and update variables:\n  * `CFG_TENANT_ID` - identity of the own tenant\n  * `CFG_TENANT_NAME` - name of the own tenant\n  * `CFG_TENANT_ENV` - default provisioning environment\n  * `CFG_APPFLOW_SUPPORT_MAIL` - e-mail address to send support requests to\n3. Copy the `appflow-mrrobot` folder in `examples` to `~/.appflow/tenant/`\n4. Link the folder: `ln -s ~/.appflow/tenant/appflow-mrrobot ~/.appflow/tenant/mrrobot`\n5. Copy the `vault` folder in `examples` to `~/.appflow/vault`\n\nNow you are ready to deploy!\nIn the main appflow folder (where you cloned the repo) you can start provisioning with:\n\t`appflow provision env=development tenant=mrrobot`\n\n## Documentation\n\nTake a look at the [walkthrough](https://github.com/ttssdev/appflow/wiki/Walkthrough) for initial setup.\n\nFor easy code management, just use:\n\n```\nappflow checkout env=production tenant=mrrobot\nappflow decrypt env=production tenant=mrrobot\nedit tenant's configs in ~/.appflow/tenant/appflow-mrrobot/production\nappflow status env=production tenant=mrrobot\nappflow checkin env=production tenant=mrrobot\n```\n\nForgot what you've done? go back:\n\n`appflow reset env=production tenant=mrrobot`\n\nWant to update everything and provision?\n\n`appflow update ; appflow checkout ; appflow provision local=true`\n\n## Tags\n\n`appflow tags`\n\n```\nplaybook: playbooks/generic.yml\n\n  play #1 (all): all\tTAGS: []\n      TASK TAGS: [ansible, apache2, apache2-conf, apt, apt-listchanges,\n      apticron, assh, assh-conf, autossh, autossh-conf, base_packages, borg,\n      borgmatic, cloud, clustercheck, common, composer, env, environment,\n      etckeeper, fstab, geoip, glusterfs, golang, grafana, groups, haproxy,\n      haproxy-acl, haproxy-conf, hold, hosts, htaccess, htpasswd, icinga,\n      icinga-conf, icinga-conf-etc, icinga-conf-hosts, icinga-ssh, jenkins,\n      keepalived, keepalived-conf, letsencrypt, letsencrypt-conf, lvm, motd,\n      munin, munin-conf, mysql, mysql-conf, mysql-users, mysqlpass, nodejs, ntp,\n      nullmailer, percona, php, php-conf, pkg, rsyslog, shell, shell-users,\n      smtpd, ssh, ssh-keys, ssl, ssl-conf, sudo, swap, update, users, varnish,\n      varnish-conf, vhosts, web_packages, wp-cli, xfs, yum_proxy]\n```\n\n## Vagrant\n\n```\nvagrant plugin install vagrant-vbguest\nvagrant vbguest --status\n```\n\nBefore you can `appflow vm reload atlantis`. This will download the needed trusty64 box.\n```\nappflow vagrant\n```\n\n### Troubleshooting\n\n#### [vagrant] Missing Vagrantfile.local.yml\n\n```\nIssue: There was an error loading a Vagrantfile. The file being loaded\n       and the error message are shown below. This is usually caused by\n       a syntax error.\n\n       Path: /Users/foo/Documents/webdev/appflow/Vagrantfile\n       Line number: 0\n       Message: Errno::ENOENT: No such file or directory @ rb_sysopen - Vagrantfile.local.yml`\n\nSolve: add Vagrantfile.local.yml to the appflow folder with this content:\n\n       synced_folder:\n         appflow_folder: \"~/Documents/webdev/appflow\"\n         webdev_folder: \"~/Documents/webdev/development\"\n```\n\n#### [vagrant] Vagrant was unable to mount VirtualBox shared folders\n\n```\nIssue: Vagrant was unable to mount VirtualBox shared folders.\n       This is usually because the filesystem \"vboxsf\" is not available.\n       This filesystem is made available via the VirtualBox Guest Additions\n       and kernel module. Please verify that these guest additions are properly\n       installed in the guest. This is not a bug in Vagrant and is usually\n       caused by a faulty Vagrant box. For context, the command attempted was:\n\n       id -u deploy\n\n       The error output from the command was:\n\n       id: deploy: no such user\n\nSolve: appflow provision limit=atlantis firstrun=true (password is vagrant).\n```\n\n#### [vagrant] The box you attempted to add doesn't match the provider you specified\n\n```\nIssue: The box you attempted to add doesn't match the provider you specified.\n\nSolve: vagrant up --provider=virtualbox atlantis\n```\n\n#### [vagrant] Lost Vagrant reference to VirtualBox VM\n\n```\nIssue: Lost Vagrant reference to VirtualBox VM\n\nSolve:\nVBoxManage list vms\n  \"vagrant-atlantis\" {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx}\necho xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx > ~/appflow/.vagrant/machines/atlantis/virtualbox/id\n```\n\n#### [vagrant] Warning: Authentication failure. Retrying...\n\n```\nIssue: vagrant Warning: Authentication failure. Retrying...\n```\n\nSolve: [http://stackoverflow.com/a/30792296](http://stackoverflow.com/a/30792296)\n\n#### [vagrant] an error occurred while downloading the remote file\n\n```\nIssue: An error occurred while downloading the remote file.\n       The error message, if any, is reproduced below. Please fix this error and try again.\n\nSolve: sudo mv /opt/vagrant/embedded/bin/curl /tmp\n```\n\nSee also: [https://github.com/mitchellh/vagrant/issues/7997](https://github.com/mitchellh/vagrant/issues/7997)\n\n#### [boot] An error occurred while mounting /\n\n```\nIssue: An error occurred while mounting /.\nKeys: Press S to skip mounting or M for manual recovery\n\nSolve:\nPress S and try to see if atlantis boots up.\nssh atlantis\nmount -o remount,rw / (optional)\ne2fsck /dev/sda1\nreboot\n```\n\n### Developers\n\n#### Contribute a new feature\n\n - Create a new issue, e.g. #XX new superfeature\n - Create local branch: `git checkout -b XX-new-superfeature`\n - Code on it.\n - Push it to remote as new branch: `git push -u origin XX-new-superfeature`\n - Create new pull request (`base: master ... compare: XX-new-superfeature`)\n\n#### Get all vars\n\n`ansible all -m setup --tree /tmp/facts -i examples/appflow-mrrobot/local/inventory -a \"filter=ansible_distribution*\"`\n\n## Contributing\n\nContributions are welcome from everyone. [Join the chat](https://gitter.im/ttssdev/appflow?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge).",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ttssdev/appflow",
    "keywords": "ansible tenant provision deploy setuptools development",
    "license": "AGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "appflow",
    "platform": "",
    "project_url": "https://pypi.org/project/appflow/",
    "release_url": "https://pypi.org/project/appflow/1.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "AppFlow is a multitenant environment automation tool based on Ansible.",
    "version": "1.0.1"
  },
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "89234aec46e62fa78c5904e612ea6508",
          "sha256": "3ace9937e45bd8346ea474292cd9eb984a1767fefc63b03fb1ca887bcc45d21b"
        },
        "downloads": -1,
        "filename": "appflow-1.0.1.tar.gz",
        "has_sig": true,
        "md5_digest": "89234aec46e62fa78c5904e612ea6508",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20988,
        "upload_time": "2018-01-11T18:02:14",
        "url": "https://files.pythonhosted.org/packages/03/92/c12a435a1f8d6d956e899da0e1345914b7b3f7a453660de2e53f5313bf3e/appflow-1.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "89234aec46e62fa78c5904e612ea6508",
        "sha256": "3ace9937e45bd8346ea474292cd9eb984a1767fefc63b03fb1ca887bcc45d21b"
      },
      "downloads": -1,
      "filename": "appflow-1.0.1.tar.gz",
      "has_sig": true,
      "md5_digest": "89234aec46e62fa78c5904e612ea6508",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 20988,
      "upload_time": "2018-01-11T18:02:14",
      "url": "https://files.pythonhosted.org/packages/03/92/c12a435a1f8d6d956e899da0e1345914b7b3f7a453660de2e53f5313bf3e/appflow-1.0.1.tar.gz"
    }
  ]
}