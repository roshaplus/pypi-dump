{
  "info": {
    "author": "Daniel Himmelstein",
    "author_email": "daniel.himmelstein@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Information Analysis"
    ],
    "description": "obonet: load OBO-formatted ontologies into networkx\n===================================================\n\n|Build Status|\n\nRead OBO-formatted ontologies in Python. ``obonet`` is\n\n-  user friendly\n-  no nonsense\n-  pythonic\n-  modern\n-  simple and tested\n-  lightweight\n-  ```networkx`` <https://networkx.readthedocs.io/en/stable/overview.html>`__\n   leveraging\n\nThis Python 3.4+ package loads OBO serialized ontologies into networks.\nThe function ``obonet.read_obo()`` takes an ``.obo`` file and returns a\n```networkx.MultiDiGraph`` <http://networkx.readthedocs.io/en/stable/reference/classes.multidigraph.html>`__\nrepresentation of the ontology. The parser was designed for the OBO\nspecification version\n`1.2 <https://owlcollab.github.io/oboformat/doc/GO.format.obo-1_2.html>`__\n&\n`1.4 <https://owlcollab.github.io/oboformat/doc/GO.format.obo-1_4.html>`__.\n\nUsage\n-----\n\nThis package is designed and tested on python \u2265 3.4. OBO files can be\nread from a path, URL, or open file handle. Compression is inferred from\nthe path's extension. See example usage below:\n\n.. code:: python\n\n    import networkx\n    import obonet\n\n    # Read the taxrank ontology\n    url = 'https://github.com/dhimmel/obonet/raw/master/tests/data/taxrank.obo'\n    graph = obonet.read_obo(url)\n\n    # Or read the xz-compressed taxrank ontology\n    url = 'https://github.com/dhimmel/obonet/raw/master/tests/data/taxrank.obo.xz'\n    graph = obonet.read_obo(url)\n\n    # Number of nodes\n    len(graph)\n\n    # Number of edges\n    graph.number_of_edges()\n\n    # Check if the ontology is a DAG\n    networkx.is_directed_acyclic_graph(graph)\n\n    # Mapping from term ID to name\n    id_to_name = {id_: data['name'] for id_, data in graph.nodes(data=True)}\n    id_to_name['TAXRANK:0000006']  # TAXRANK:0000006 is species\n\n    # Find all superterms of species. Note that networkx.descendants gets\n    # superterms, while networkx.ancestors returns subterms.\n    networkx.descendants(graph, 'TAXRANK:0000006')\n\nFor a more detailed tutorial, see the `**Gene Ontology example\nnotebook** <examples/go-obonet.ipynb>`__.\n\nInstallation\n------------\n\n|PyPI|\n\nThe recommended approach is to install the latest release from\n`PyPI <https://pypi.python.org/pypi/obonet>`__ using:\n\n.. code:: sh\n\n    pip install obonet\n\nHowever, if you'd like to install the most recent version from GitHub,\nuse:\n\n.. code:: sh\n\n    pip install git+https://github.com/dhimmel/obonet.git#egg=obonet\n\nContributing\n------------\n\n|GitHub issues|\n\nWe welcome feature suggestions and community contributions. Currently,\nonly reading OBO files is supported. Please open an issue if you're\ninterested in writing OBO files in Python.\n\nRelease instructions\n--------------------\n\nThis section is only relevant for project maintainers. Travis CI\ndeployments are used to upload releases to\n`PyPI <https://pypi.org/project/hetio>`__. To create a new release, do\nthe following:\n\n1. Bump the ``__version__`` in\n   ```obonet/__init__.py`` <obonet/__init__.py>`__.\n\n2. Run the following commands:\n\n``sh   TAG=v`python setup.py --version`   git add obonet/__init__.py   git commit --message=\"Upgrade to $TAG\"   git push   git tag --annotate $TAG --message=\"Upgrade to $TAG\"   git push --tags``\n\n.. |Build Status| image:: https://travis-ci.org/dhimmel/obonet.svg?branch=master\n   :target: https://travis-ci.org/dhimmel/obonet\n.. |PyPI| image:: https://img.shields.io/pypi/v/obonet.svg\n   :target: https://pypi.python.org/pypi/obonet\n.. |GitHub issues| image:: https://img.shields.io/github/issues/dhimmel/obonet.svg\n   :target: https://github.com/dhimmel/obonet/issues",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/dhimmel/obonet",
    "keywords": "obo ontology networkx parser network",
    "license": "CC0 1.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "obonet",
    "platform": "",
    "project_url": "https://pypi.org/project/obonet/",
    "release_url": "https://pypi.org/project/obonet/0.2.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Parse OBO formatted ontologies into networkx",
    "version": "0.2.2"
  },
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "86e6891f2084c1aab15225a9106a5b85",
          "sha256": "145b740a90a76bf317efe4edbd4134430b0fad6b2a6d6d92d8861f82a311806b"
        },
        "downloads": -1,
        "filename": "obonet-0.2.0-py3.6.egg",
        "has_sig": false,
        "md5_digest": "86e6891f2084c1aab15225a9106a5b85",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "size": 9461,
        "upload_time": "2017-03-26T19:08:51",
        "url": "https://files.pythonhosted.org/packages/7c/ac/79a0ff3d586b06f33b1068064ff89a2ecb3c1c9795f6b9df161ed77dd23e/obonet-0.2.0-py3.6.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "727dd030f6dfebec52f6d198f33f5b83",
          "sha256": "10f14dc123476e57b0ba37be8362f350ff6d631e76d6a7c4c8669e9a9a749298"
        },
        "downloads": -1,
        "filename": "obonet-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "727dd030f6dfebec52f6d198f33f5b83",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 7721,
        "upload_time": "2017-03-26T19:08:49",
        "url": "https://files.pythonhosted.org/packages/d4/6c/08fd1d74ca46aa78b70dec2a083e4165d5046f219f1a018f7a94319a8b0f/obonet-0.2.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "216040bc64fe09d0fe7c53dd679606ac",
          "sha256": "8cbe2b1fa43b757def7ef0b864a9dcaf73fe73349076efefde541528378e2f97"
        },
        "downloads": -1,
        "filename": "obonet-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "216040bc64fe09d0fe7c53dd679606ac",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5121,
        "upload_time": "2017-03-26T19:08:53",
        "url": "https://files.pythonhosted.org/packages/2f/38/f94b60412292b43e4ec3a9866eb721d9032c25984d5d02c6caaed5ce2f93/obonet-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "569ec1cee9d059bd85dd8995df246224",
          "sha256": "5f77ff6e1e66a6ed1f4782a014d21536230d5ab5fb54370594407a4ab2e4df4b"
        },
        "downloads": -1,
        "filename": "obonet-0.2.1-py3.6.egg",
        "has_sig": false,
        "md5_digest": "569ec1cee9d059bd85dd8995df246224",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "size": 9674,
        "upload_time": "2017-03-26T21:06:19",
        "url": "https://files.pythonhosted.org/packages/53/52/58ead98ce5fe48eb8eb5730a4be8323f4a91a2b7af9a2194fc9306dc7352/obonet-0.2.1-py3.6.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "13dae743a8460d8cf3cff5586280b796",
          "sha256": "aeca8a617d0a3eb96ad8ed338669d8408a87de5fe9fe449487e308778ede022c"
        },
        "downloads": -1,
        "filename": "obonet-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13dae743a8460d8cf3cff5586280b796",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 8138,
        "upload_time": "2017-03-26T21:06:17",
        "url": "https://files.pythonhosted.org/packages/03/cc/720970a1beb1db1b59417ea76fe6469ab2c197f300bee3cec2a12e0b5df5/obonet-0.2.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "aee088b15144ab49662c4c5b829f6f17",
          "sha256": "e566b6694c6ad008738eba54745c4145e639c1bcaa9ddfc2600de648496a7c69"
        },
        "downloads": -1,
        "filename": "obonet-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aee088b15144ab49662c4c5b829f6f17",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5406,
        "upload_time": "2017-03-26T21:06:21",
        "url": "https://files.pythonhosted.org/packages/97/f6/91bb5fd8eab322a73c1a1efd6bf1d3a33b70f5499a466d483604133f1844/obonet-0.2.1.tar.gz"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7c3e51894610c382dc33e8b8b5bc61aa",
          "sha256": "64995a37b4c6bd8dd343f87b93f2cbe307a993b7dbef7fd3c00dc8cc5eaa5bf3"
        },
        "downloads": -1,
        "filename": "obonet-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7c3e51894610c382dc33e8b8b5bc61aa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5868,
        "upload_time": "2017-10-30T14:24:11",
        "url": "https://files.pythonhosted.org/packages/2b/29/dd70839bf7b5480f268d803477e12d46288e42e6498fe0d5f49fca9e3efc/obonet-0.2.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "7c3e51894610c382dc33e8b8b5bc61aa",
        "sha256": "64995a37b4c6bd8dd343f87b93f2cbe307a993b7dbef7fd3c00dc8cc5eaa5bf3"
      },
      "downloads": -1,
      "filename": "obonet-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7c3e51894610c382dc33e8b8b5bc61aa",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5868,
      "upload_time": "2017-10-30T14:24:11",
      "url": "https://files.pythonhosted.org/packages/2b/29/dd70839bf7b5480f268d803477e12d46288e42e6498fe0d5f49fca9e3efc/obonet-0.2.2.tar.gz"
    }
  ]
}