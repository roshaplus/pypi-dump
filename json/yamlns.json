{
  "info": {
    "author": "David Garcia Garzon",
    "author_email": "voki@canvoki.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# yamlns.namespace\n\n[![Build Status](https://travis-ci.org/GuifiBaix/python-yamlns.svg?branch=master)\n\t](https://travis-ci.org/GuifiBaix/python-yamlns)\n\nAn ordered dictionary whose values can be accessed\neither as items or as attributes,\nlike in Javascript Objects but with Pythonic sugar and YAML I/O.\n\nIt also provides some goodies:\n\n- Direct mapping to YAML using `dump()` and `load()` methods.\n- There are several convenient variations from the YAML specs in the way value types are mapped between YAML and Python:\n    - Inner YAML mappings (`dict`s) are loaded as `namespace`s as well instead of Python `dict`.\n    - Namespaces preserve the insertion order, as they are based on `odict`.\n      This way the insertion order and the order in the original loaded file is preserved when stored.\n    - YAML floats are loaded as `Decimal` and `Decimal` objects are stored as regular YAML floats.\n      This avoids losing precision when succesive load/store cycles are alternated.\n    - YAML dates are maped to an extension of `datetime.date` which provides output formats as attributes\n      which are convenient to call in `format` templates.\n- Tools to `format` templates with complex namespace structures.\n    - Given the attribute like access `format` templates result cleaner.\n    - API to fill a `format` template like file with a YAML one.\n    - API to extract an empty YAML scheletton given a template with substitutions.\n    - Command line tool to make those two functions\n\n\n\n## Example\n\n```python\n>>> from yamlns import namespace as ns\n>>> n = ns()\n>>> n.attribute1 = \"value1\"\n>>> ns['attribute2'] = \"value2\"\n>>> print(n.dump())\nattribute1: value1\nattribute2: value2\n\n>>> n.attribute2\n'value2'\n>>> n['attribute1']\n'value1'\n\n>>> n.update(ns.loads(\"\"\"\n... attribute3: value3\n... attribute4:\n...   attribute5: [ 4,3,2,value5 ] \n...   attribute6: 2015-09-23\n... attribute7:\n... - value7.1\n... - value7.2\n... \"\"\"))\n>>> n.attribute4.attribute5\n[4, 3, 2, 'value5']\n>>> n.attribute4.attribute6\ndatetime.date(2015,9,23)\n>>> n.attribute7\n['value7.1', 'value7.2']\n```\n\n### Templating example:\n\n```python\n>>> template = (\n... \t\"{client.name} {client.midname[0]}. {client.surname} buys {item.name} \"\n...     \"by {item.price.amount:0.02f} {item.price.coin}.\"\n... )\n...\n>>> print(ns.fromTemplate(template).dump())\nclient:\n  name: ''\n  midname: ''\n  surname: ''\nitem:\n  name: ''\n  price:\n    amount: ''\n    coin: ''\n\n>>> template.format(**ns.loads(\"\"\"\nclient:\n  name: 'John'\n  midname: 'Archivald'\n  surname: 'Doe'\nitem:\n  name: 'Apples'\n  price:\n    amount: 30\n    coin: 'dollars'\n\"\"\"))\nJohn A. Doe buys Apples by 30.00 dollars.\n\n```\n\n## Command line tools usage\n\n```bash\nnstemplate apply <template> <yamlfile> <output>\nnstemplate extract <template> <yamlskeleton>\n```\n\n# Change log\n\n## yamlns 0.4\n\n- Fix: file dumping in 2.7 used 3.0 encoding parameter\n\n## yamlns 0.3\n\n- Supported Python 2.7\n\n## yamlns 0.2\n\n- Include README.md in the distribution\n\n## yamlns 0.1\n\n- First PyPI release\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/GuifiBaix/python-yamlns",
    "keywords": "",
    "license": "GNU General Public License v3 or later (GPLv3+)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yamlns",
    "platform": "",
    "project_url": "https://pypi.org/project/yamlns/",
    "release_url": "https://pypi.org/project/yamlns/0.4/",
    "requires_python": "",
    "summary": "YAML serializable dictionary with dual item and attribute accessors",
    "version": "0.4"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b550caf98b38fcaea66e67c71ddc5d8b",
          "sha256": "ba8ce5ca75e8e495d64e2884d35b0c375783e9e36aa5d9e838fcd561122c8dd9"
        },
        "downloads": 876,
        "filename": "yamlns-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b550caf98b38fcaea66e67c71ddc5d8b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9270,
        "upload_time": "2015-11-26T09:05:18",
        "url": "https://files.pythonhosted.org/packages/8b/1b/81591b57e4f846bf9c032b50faa8680e0901f41ccd3b2c3d5397aa62573a/yamlns-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9cc65147ba3e5bc1b1e893bb1d10e893",
          "sha256": "34119ea4cc7c6d92cd4c1436ab4f03f1376a06c7334d65a447cf22c01d54b0c3"
        },
        "downloads": 352,
        "filename": "yamlns-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9cc65147ba3e5bc1b1e893bb1d10e893",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11108,
        "upload_time": "2016-01-21T14:50:31",
        "url": "https://files.pythonhosted.org/packages/02/e5/49324ed1583e5fd20c58e8eb0701b633c3e699f6cf61c6891b967b211bfe/yamlns-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d742eaceac13226b9e6a6e239571bf6e",
          "sha256": "3347fa06d5649751bc7626fc0d1ae5b5d55b9ea876882a42bf477d5a8ec26649"
        },
        "downloads": 310,
        "filename": "yamlns-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d742eaceac13226b9e6a6e239571bf6e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9991,
        "upload_time": "2016-06-24T16:17:45",
        "url": "https://files.pythonhosted.org/packages/32/be/0ece03d47fa6e7027b704ef593ae47f1c9ac0286592bc9039e5cdb783832/yamlns-0.3.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a596c7766fab81202969fc86f109be43",
          "sha256": "eaf51781b0da78f5dba64bff07c0ed7d193426837e9bb71a0a8dadad5a12f56d"
        },
        "downloads": 166,
        "filename": "yamlns-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a596c7766fab81202969fc86f109be43",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10463,
        "upload_time": "2016-12-17T11:41:59",
        "url": "https://files.pythonhosted.org/packages/6e/27/8bdfc13dc9e62eaa46dbecee582496e2ab068355998d3c20a55f1d3f1f33/yamlns-0.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a596c7766fab81202969fc86f109be43",
        "sha256": "eaf51781b0da78f5dba64bff07c0ed7d193426837e9bb71a0a8dadad5a12f56d"
      },
      "downloads": 166,
      "filename": "yamlns-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "a596c7766fab81202969fc86f109be43",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 10463,
      "upload_time": "2016-12-17T11:41:59",
      "url": "https://files.pythonhosted.org/packages/6e/27/8bdfc13dc9e62eaa46dbecee582496e2ab068355998d3c20a55f1d3f1f33/yamlns-0.4.tar.gz"
    }
  ]
}