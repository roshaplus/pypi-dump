{
  "info": {
    "author": "A. Svensson",
    "author_email": "lmasvensson@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Topic :: Communications :: File Sharing",
      "Topic :: Multimedia :: Video",
      "Topic :: Utilities"
    ],
    "description": "======\nyanktv\n======\nThis simple tool will try to scrape a torrent site for new episodes to your\nfavorite tv shows and download the torrents for you.\n\n\nInstallation\n============\nSimply install it with pip: ::\n\n    $ pip install yanktv\n\n\nUsage\n=====\n(**Optional**) Initiate the database and fill it with old episodes you might\nalready have watched, thus avoiding having to download old torrents: ::\n\n    $ yanktv --init\n\nWhenever you want to check for new episodes and download the associated\ntorrents, simply run: ::\n\n    $ yanktv\n\nIf you have set up a virtualenv and installed yanktv inside it, you can\nalways reach yanktv by calling: ::\n\n    $ /PATH/TO/VENV/bin/yanktv\n\n\nCommand line\n============\nOptional arguments: ::\n\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n  -c PATH, --config PATH\n                        path to config file (defaults to XDG_CONFIG_HOME:\n                        /home/USER/.config/.yanktvrc)\n  -i, --init            initiate the database and fill it with episode data,\n                        but does NOT download torrents\n\n\nConfiguration\n=============\nThe config file for yanktv is a regular python module, that can be placed\nanywhere in your system. The default location is **~/.yanktvrc**.\n\n\nTV_SHOWS\n--------\n(**Required**) A python list of the tv shows you want to yank. Example: ::\n\n    TV_SHOWS = ('south park')\n\n\nNEW_ITEM\n--------\n(**Required**) A python function, which yanktv calls whenever it finds a new\nepisode for a tv show. Required function arguments are **episode** name and\n**url** to the torrent. Example: ::\n\n    def NEW_ITEM(episode, url):\n        print('New episode found, called:', episode)\n        print('Torrent URL:', url)\n\n\nBASE_URL\n--------\nA python string, telling yanktv from where it should scrape for new\ntorrents. If you insert **{SEARCH}** in the URL, it will be replaced with\nthe name of the current tv show that's being scraped. Example: ::\n\n    BASE_URL = 'https://somewhere.com/tvshow/{SEARCH}'\n\n\nDATABASE_FILE\n-------------\nA python string, it should contain a full path to where yanktv will\nstore it's database. Default is **~/.yanktv.db**. Example: ::\n\n    DATABASE_FILE = '/var/cache/yanktv.db'\n\n\nDEBUG\n-----\nA python boolean, if it's set to **True**, yanktv will show some extra\ninformation when it's running. Example: ::\n\n    DEBUG = True\n\n\nLicense\n=======\nMIT License, see LICENSE.txt",
    "docs_url": null,
    "download_url": "https://github.com/lmas/yanktv/releases",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/lmas/yanktv",
    "keywords": "tv show torrent episodes",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "yanktv",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/yanktv/",
    "release_url": "https://pypi.org/project/yanktv/0.3/",
    "requires_python": null,
    "summary": "Yank torrents for the latest episodes of your tv shows.",
    "version": "0.3"
  },
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "243d2eecea9e7d1c8fd9a19ce7e55dd6",
          "sha256": "7bebb51b1b573339f50655e1e7ca87db128ac0df375aa5e95903f09340e4ca3f"
        },
        "downloads": 1228,
        "filename": "yanktv-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "243d2eecea9e7d1c8fd9a19ce7e55dd6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5487,
        "upload_time": "2014-10-25T16:56:49",
        "url": "https://files.pythonhosted.org/packages/56/e3/09127771f8cfee571855566f2400eb2290f5a3d09ffe11ebb4d32bffff95/yanktv-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d7b88d1d0e5b06c444e11676c2a12e28",
          "sha256": "84f60a68c64bfb134ca1c981dc967c109bee683998b41781257e9ffee2df98b5"
        },
        "downloads": 1799,
        "filename": "yanktv-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d7b88d1d0e5b06c444e11676c2a12e28",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5539,
        "upload_time": "2014-10-25T18:01:26",
        "url": "https://files.pythonhosted.org/packages/14/e7/e1639ea4eca918d8bb1067e5382790422712f36f67ec616f3c6595164471/yanktv-0.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d7b88d1d0e5b06c444e11676c2a12e28",
        "sha256": "84f60a68c64bfb134ca1c981dc967c109bee683998b41781257e9ffee2df98b5"
      },
      "downloads": 1799,
      "filename": "yanktv-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "d7b88d1d0e5b06c444e11676c2a12e28",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5539,
      "upload_time": "2014-10-25T18:01:26",
      "url": "https://files.pythonhosted.org/packages/14/e7/e1639ea4eca918d8bb1067e5382790422712f36f67ec616f3c6595164471/yanktv-0.3.tar.gz"
    }
  ]
}