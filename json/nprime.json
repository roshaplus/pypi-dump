{
  "info": {
    "author": "sylhare",
    "author_email": "sylhare@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# PyPrime  [![Build Status](https://travis-ci.org/Sylhare/PyPrime.svg?branch=master)](https://travis-ci.org/Sylhare/PyPrime) [![codecov](https://codecov.io/gh/Sylhare/PyPrime/branch/master/graph/badge.svg)](https://codecov.io/gh/Sylhare/PyPrime) [![Codacy Badge](https://api.codacy.com/project/badge/Grade/e5a9dd6a55fb4709becbb84b8c538d54)](https://www.codacy.com/app/Sylhare/PyPrime?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Sylhare/PyPrime&amp;utm_campaign=Badge_Grade) \n\n[![forthebadge](http://forthebadge.com/images/badges/made-with-python.svg)](http://forthebadge.com) [![forthebadge](http://forthebadge.com/images/badges/built-with-science.svg)](http://forthebadge.com)\n\n\n## Introduction\n\nSome algorithm on prime numbers. \n\nAlgorithm developed : \n\n- Native one (prime through divisions)\n- Eratosthenes sieve based\n- Fermat's test (based on Fermat's theorem)\n- Prime generating functions\n- Miller Rabin predictive algorithm\n\n## Specifications\n\n- Language: Python **3.5.2** \n- Package:\n\t- Basic python packages were preferred\n\t- Matplotlib v2.0 - graph and math\n\n#### Continuous integration\n\nTravis will be used to run the tests automatically.\n\n#### Code Quality\n\nEnsured with PEP-8 (for the language format) and [Pylint](https://www.pylint.org/) (for the code quality).\nPyLint is now only run by an other review tool integrated to this repo ([codacity](https://www.codacy.com/app/Sylhare/PyPrime/dashboard), [erbert](https://ebertapp.io/github/Sylhare/PyPrime), ...)\n\n## Math\n\nHere are a bit of information to help understand some of the algorithms\n\n### Congruence\n\n \"`\u2261`\" means congruent, `a \u2261 b (mod m)` implies that \n`m / (a-b), \u2203 k \u2208 Z` that verifies `a = kn + b`\n   \n which implies:\n\n    a \u2261 0 (mod n) <-> a = kn <-> \"a\" is divisible by \"n\" \n\n### Fermart's Theorem\n\n if `n` is prime then `\u2200 a \u2208[1, ..., n-1]`\n\n\ta^(n-1) \u2261 1 (mod n) \u21d4 a^(n-1) = kn + 1\n   \n### Miller rabin\n\n  Take a random `a \u2208 {1,...,n\u22121}` and `n > 2`, </br>\n  Find `d` and `s` such as with `n - 1 = 2^s * d` (with d odd) </br>\n  if `(a^d)^2^r \u2261 1 mod n` for all `r` in `0` to `s-1` </br>\n  Then `n` is prime.\n    \n  The test output is false of 1/4 of the \"a values\" possible in `n`, \n  so the test is repeated t times.\n\n\n### Strong Pseudoprime\n\nA strong [pseudoprime](http://mathworld.wolfram.com/StrongPseudoprime.html) to a base `a` is an odd composite number `n` \nwith `n-1 = d\u00b72^s` (for d odd) for which either `a^d = 1(mod n)` or `a^(d\u00b72^r) = -1(mod n)` for some `r = 0, 1, ..., s-1` </br>",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Sylhare/PyPrime",
    "keywords": "prime,fermat,miller rabin,math",
    "license": "GNU",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nprime",
    "platform": "any",
    "project_url": "https://pypi.org/project/nprime/",
    "release_url": "https://pypi.org/project/nprime/0.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Python library for primes",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0aa89701322349dfbebc2106d0b1045b",
          "sha256": "9423722925033c6466bf27f636951a4999121c3c060202d95413b124310a0feb"
        },
        "downloads": -1,
        "filename": "nprime-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0aa89701322349dfbebc2106d0b1045b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12531,
        "upload_time": "2018-01-28T15:40:56",
        "url": "https://files.pythonhosted.org/packages/68/c4/78200d38c6d9e85c347d9449d14c005a66044114531af4118528472a93d5/nprime-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "0aa89701322349dfbebc2106d0b1045b",
        "sha256": "9423722925033c6466bf27f636951a4999121c3c060202d95413b124310a0feb"
      },
      "downloads": -1,
      "filename": "nprime-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0aa89701322349dfbebc2106d0b1045b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 12531,
      "upload_time": "2018-01-28T15:40:56",
      "url": "https://files.pythonhosted.org/packages/68/c4/78200d38c6d9e85c347d9449d14c005a66044114531af4118528472a93d5/nprime-0.0.1.tar.gz"
    }
  ]
}