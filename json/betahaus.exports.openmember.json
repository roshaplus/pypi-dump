{
  "info": {
    "author": "Betahaus",
    "author_email": "martin@betahaus.net",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Plone",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Introduction\n============\n\n* `Extensions`_\n\n\nExtension package for `betahaus.openmember <http://pypi.python.org/pypi/betahaus.openmember>`_ that \nexports searches and full database to CVS. It is also has support for registering own exporters.\n\nExtensions\n----------\n\nIt is possible to extend with custom exporters. You need one Adapter and a browser view\n\nThe adapter is created by making a interface that inherits from the betahaus.exports.openmember.interfaces.IExporter\ninterface.\n\n>>> from betahaus.exports.openmember.interfaces import IExporter\n>>> class IExportCustomAdapter(IExporter):\n...    \"\"\" Interface for registering custom exporter\"\"\" \n\nWith code that implements the adapter interface.\n\n>>> from betahaus.exports.openmember.browser.export import make_url\n>>> class ExportCustomAdapter(object):\n...    \"\"\"Another exporter\"\"\"\n...    implements(IExportCustomAdapter)\n...    adapts(IExportable)\n...\n...    def __init__(self, context):\n...        self.context = context\n...        \n...    def url(self):\n...        return '%s/custom_exporter%s' % (self.context.portal_url(), make_url(self.context.request))\n...    \n...    def Title(self):\n...        return _('Custom Export from table')\n\nThis then needs to be registered as a exporter by calling:\n\n>>> registerExporter(IExportContactsAdapter)\n\nWe also needs some zcml to register the adapter, since everything is defined in the adapter the only thing we need is:\n\n<adapter factory=\".export.ExportCustomAdapter\" />\n    \nAssuming that the file is called ``export.py``\n\nNow we only need a browser view to handle the exporting \n\n>>> from betahaus.exports.openmember.browser.export import ExportBase\n>>> class ExportCustom(ExportBase):\n...    \"\"\"Download as csv\"\"\"\n...\n... def __call__(self):\n...     # here you can do the changes that you need to do for your custom exporter. \n\nLook at ExportBase for more information about what functions are available.\n\n\n\nChangelog\n=========\n\n0.1b2 (2010-04-16)\n------------------\n\n* Fixed bug with full database csv export. [mlundwall]\n* Updated the loading of exporters from the action. [mlundwall]\n\n0.1b (2010-02-10)\n-----------------\n\n* Initial release",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://www.betahaus.net",
    "keywords": "openmember plone csv exports",
    "license": "GPL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "betahaus.exports.openmember",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/betahaus.exports.openmember/",
    "release_url": "https://pypi.org/project/betahaus.exports.openmember/0.1b2/",
    "requires_python": null,
    "summary": "Exports for the betahaus.openmember",
    "version": "0.1b2"
  },
  "releases": {
    "0.1b": [
      {
        "comment_text": "",
        "digests": {
          "md5": "da9cd27a3dc075d43fc0303a08eb8d7d",
          "sha256": "02f609bac0e21825eda695d9f137b51cec6087d3e325ad80271ce34a6dabcb97"
        },
        "downloads": 2733,
        "filename": "betahaus.exports.openmember-0.1b.tar.gz",
        "has_sig": false,
        "md5_digest": "da9cd27a3dc075d43fc0303a08eb8d7d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14941,
        "upload_time": "2010-02-10T11:49:50",
        "url": "https://files.pythonhosted.org/packages/4a/66/6d456bdea27c66b8ca4d47bc1afe52f960af5927ef53ed2a155637474620/betahaus.exports.openmember-0.1b.tar.gz"
      }
    ],
    "0.1b2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7fe54e85f22d60ce71b8c48bf8f1d5b7",
          "sha256": "d0bcdbebb4c1f2b3c26df423fb880793c4ad1cb8b9e01f807bfd2fedbf4a5c2d"
        },
        "downloads": 3275,
        "filename": "betahaus.exports.openmember-0.1b2.zip",
        "has_sig": false,
        "md5_digest": "7fe54e85f22d60ce71b8c48bf8f1d5b7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 27631,
        "upload_time": "2010-04-16T14:25:21",
        "url": "https://files.pythonhosted.org/packages/b5/0b/163063ce1423b07f6b5d100424a50696617c563d62ce721c55f32e3bd3c9/betahaus.exports.openmember-0.1b2.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "7fe54e85f22d60ce71b8c48bf8f1d5b7",
        "sha256": "d0bcdbebb4c1f2b3c26df423fb880793c4ad1cb8b9e01f807bfd2fedbf4a5c2d"
      },
      "downloads": 3275,
      "filename": "betahaus.exports.openmember-0.1b2.zip",
      "has_sig": false,
      "md5_digest": "7fe54e85f22d60ce71b8c48bf8f1d5b7",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 27631,
      "upload_time": "2010-04-16T14:25:21",
      "url": "https://files.pythonhosted.org/packages/b5/0b/163063ce1423b07f6b5d100424a50696617c563d62ce721c55f32e3bd3c9/betahaus.exports.openmember-0.1b2.zip"
    }
  ]
}