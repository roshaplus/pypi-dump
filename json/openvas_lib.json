{
  "info": {
    "author": "Daniel Garcia Garcia (cr0hn)",
    "author_email": "cr0hn@cr0hn.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: BSD :: FreeBSD",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Security"
    ],
    "description": "What's this lib?\n================\n\nThis project is a Python library to connect and manage the OpenVAS servers using the OMP protocol. OpenVAS 6, 7 and 8 are supported (7 and 8 versions are still experimental)\n\nAlso, you can parse and interpret OpenVas XML reports.\n\nWhy this lib?\n=============\n\nThere is an [official python library](https://pypi.python.org/pypi/openvas.omplib) for OpenVAS, but it doesn't work with OMPv4 based versions (OpenVAS 6).\n\nAlso, the official library has many unfixed bugs, and it's not capable to read and interpret the XML reports.\n\n\nLicense\n=======\n\nThis library is released under standard GPL 2 license.\n\nPython versions\n===============\n\nCurrently, this library only runs under Python 2.7 and above. Port to Python 3.x is not scheduled.\n\nBug, ports and new features\n===========================\n\nFeel free to port, patch or add any new feature to this library, and send us the pull request. We thank you in advance :)\n\nQuick start\n===========\n\nInstalling\n----------\n\nDownloading from code\n_____________________\n\nTo download the latest source code enter the following command:\n\n.. code-block:: bash\n\n    git clone https://github.com/golismero/openvas_lib.git\n\nThen, install the library in your default Python installation run the following command:\n\n.. code-block:: bash\n\n    python setup.py install\n\nInstall using pip\n_________________\n\n.. code-block:: bash\n\n    pip install openvas_lib\n\nManage OpenVas server\n---------------------\n\nConnect to the server\n_____________________\n\n\n.. code-block:: python\n\n    from openvas_lib import VulnscanManager, VulnscanException\n\n    try:\n        scanner = VulnscanManager(HOST, USER, PASSWORD, PORT, TIMEOUT)\n    except VulnscanException as e:\n        print(\"Error:\")\n        print(e)\n\nLaunch a simple scan\n____________________\n\n.. code-block:: python\n\n    from openvas_lib import VulnscanManager, VulnscanException\n\n    scanner = VulnscanManager(HOST, USER, PASSWORD, PORT, TIMEOUT)\n    scan_id, target_id = scanner.launch_scan(target = \"127.0.0.1\", # Target to scan\n                                             profile = \"Full and fast\")\n\nLaunch advanced scan\n____________________\n\nThe library supports callbacks. They will be run every 10 seconds and report the status of the scan (\"callback_progress\") or the end of the scan (\"callback_end\").\n\n.. code-block:: python\n\n    from threading import Semaphore\n    from functools import partial\n\n    from openvas_lib import VulnscanManager, VulnscanException\n\n    def my_print_status(i):\n        print(str(i))\n\n    def my_launch_scanner():\n\n        sem = Semaphore(0)\n\n        # Configure\n        manager = VulnscanManager(\"localhost\", \"admin\", \"admin\")\n\n        # Launch\n        manager.launch_scan(target,\n                            profile = \"empty\",\n                            callback_end = partial(lambda x: x.release(), sem),\n                            callback_progress = my_print_status)\n\n        # Wait\n        Sem.acquire()\n\n        # Finished scan\n        print(\"finished\")\n\nRunning it:\n\n.. code-block:: python\n\n    >>> my_launch_scanner() # It can take some time\n    0\n    10\n    39\n    60\n    90\n    finished\n\nGet results of scan\n___________________\n\n.. code-block:: python\n\n    from __future__ import print_function\n    from openvas_lib import VulnscanManager, VulnscanException\n\n    scanner = VulnscanManager(HOST, USER, PASSWORD, PORT, TIMEOUT)\n    openvas_results = scanner.get_results(SCAN_ID)\n\nDelete scan\n___________\n\n.. code-block:: python\n\n    from __future__ import print_function\n    from openvas_lib import VulnscanManager, VulnscanException\n\n    scanner = VulnscanManager(HOST, USER, PASSWORD, PORT, TIMEOUT)\n    scanner.delete_scan(SCAN_ID)\n\nDelete target\n_____________\n\n.. code-block:: python\n\n    from __future__ import print_function\n    from openvas_lib import VulnscanManager, VulnscanException\n\n    scanner = VulnscanManager(HOST, USER, PASSWORD, PORT, TIMEOUT)\n    scanner.delete_target(TARGET_ID)\n\n\nParse OpenVas XML report\n------------------------\n\nYou can use examples reports, available in test/ folder, as \"xml\" extension. This reports was made using Metasploitable\nLinux distribution.\n\n.. code-block:: pycon\n\n    >>> from __future__ import print_function\n    >>> from openvas_lib import report_parser\n    >>> results = report_parser(\"tests/metasploitable_all.xml\")\n    >>> print(results)\n    [<openvas_lib.data.OpenVASResult object at 0x108f2d250>, <openvas_lib.data.OpenVASResult object at 0x108f2d290>, <openvas_lib.data.OpenVASResult object at 0x108e7fcd0>, <openvas_lib.data.OpenVASResult object at 0x108e88e90>, <openvas_lib.data.OpenVASResult object at 0x108e88050>, <openvas_lib.data.OpenVASResult object at 0x108e88410>, <openvas_lib.data.OpenVASResult object at 0x108e88550>, <openvas_lib.data.OpenVASResult object at 0x108f2d650>, <openvas_lib.data.OpenVASResult object at 0x108f2d750>, <openvas_lib.data.OpenVASResult object at 0x108f2d850>, <openvas_lib.data.OpenVASResult object at 0x108f2d950>, <openvas_lib.data.OpenVASResult object at 0x108f2da50>, <openvas_lib.data.OpenVASResult object at 0x108f2db50>, <openvas_lib.data.OpenVASResult object at 0x108f2dc50>, <openvas_lib.data.OpenVASResult object at 0x108eb56d0>, <openvas_lib.data.OpenVASResult object at 0x108eb5750>, <openvas_lib.data.OpenVASResult object at 0x108f2ded0>, <openvas_lib.data.OpenVASResult object at 0x108f2dfd0>, <openvas_lib.data.OpenVASResult object at 0x108f35110>, <openvas_lib.data.OpenVASResult object at 0x108eb5950>, <openvas_lib.data.OpenVASResult object at 0x108f35210>, <openvas_lib.data.OpenVASResult object at 0x108eb5a90>, <openvas_lib.data.OpenVASResult object at 0x108eb5ad0>, <openvas_lib.data.OpenVASResult object at 0x108f355d0>, <openvas_lib.data.OpenVASResult object at 0x108f356d0>, <openvas_lib.data.OpenVASResult object at 0x108eb5dd0>, <openvas_lib.data.OpenVASResult object at 0x108f357d0>, <openvas_lib.data.OpenVASResult object at 0x108eb5f90>, <openvas_lib.data.OpenVASResult object at 0x108e101d0>, <openvas_lib.data.OpenVASResult object at 0x108e10390>, <openvas_lib.data.OpenVASResult object at 0x108eb5d90>, <openvas_lib.data.OpenVASResult object at 0x108f35910>, <openvas_lib.data.OpenVASResult object at 0x108f35a10>, <openvas_lib.data.OpenVASResult object at 0x108f35b10>, <openvas_lib.data.OpenVASResult object at 0x108f35c10>, <openvas_lib.data.OpenVASResult object at 0x108f35d10>, <openvas_lib.data.OpenVASResult object at 0x108f35e10>, <openvas_lib.data.OpenVASResult object at 0x108f35f10>, <openvas_lib.data.OpenVASResult object at 0x108f3a050>, <openvas_lib.data.OpenVASResult object at 0x108e102d0>, <openvas_lib.data.OpenVASResult object at 0x108e10910>, <openvas_lib.data.OpenVASResult object at 0x108e10ad0>, <openvas_lib.data.OpenVASResult object at 0x108e10c10>, <openvas_lib.data.OpenVASResult object at 0x108f3a150>, <openvas_lib.data.OpenVASResult object at 0x108f3a250>, <openvas_lib.data.OpenVASResult object at 0x108f3a350>, <openvas_lib.data.OpenVASResult object at 0x108f3a450>, <openvas_lib.data.OpenVASResult object at 0x108f3a550>, <openvas_lib.data.OpenVASResult object at 0x108e10e50>, <openvas_lib.data.OpenVASResult object at 0x108e10e90>, <openvas_lib.data.OpenVASResult object at 0x108e28090>, <openvas_lib.data.OpenVASResult object at 0x108f3a750>, <openvas_lib.data.OpenVASResult object at 0x108f3a910>, <openvas_lib.data.OpenVASResult object at 0x108f3aa10>, <openvas_lib.data.OpenVASResult object at 0x108e28250>, <openvas_lib.data.OpenVASResult object at 0x108e28210>, <openvas_lib.data.OpenVASResult object at 0x108e28350>, <openvas_lib.data.OpenVASResult object at 0x108e28450>, <openvas_lib.data.OpenVASResult object at 0x108f3ad10>, <openvas_lib.data.OpenVASResult object at 0x108f3ae10>, <openvas_lib.data.OpenVASResult object at 0x108f3ac10>, <openvas_lib.data.OpenVASResult object at 0x108e287d0>, <openvas_lib.data.OpenVASResult object at 0x108e28890>, <openvas_lib.data.OpenVASResult object at 0x108e289d0>, <openvas_lib.data.OpenVASResult object at 0x108e28ad0>, <openvas_lib.data.OpenVASResult object at 0x108e28c10>, <openvas_lib.data.OpenVASResult object at 0x108f3e210>, <openvas_lib.data.OpenVASResult object at 0x108e28710>, <openvas_lib.data.OpenVASResult object at 0x108e28d90>, <openvas_lib.data.OpenVASResult object at 0x108e28ed0>, <openvas_lib.data.OpenVASResult object at 0x108e28f10>, <openvas_lib.data.OpenVASResult object at 0x108e28f90>, <openvas_lib.data.OpenVASResult object at 0x108f3e510>, <openvas_lib.data.OpenVASResult object at 0x108f3e610>, <openvas_lib.data.OpenVASResult object at 0x108f3e710>, <openvas_lib.data.OpenVASResult object at 0x108f3e810>, <openvas_lib.data.OpenVASResult object at 0x108f3e910>, <openvas_lib.data.OpenVASResult object at 0x108f3ea10>, <openvas_lib.data.OpenVASResult object at 0x108f3eb10>]\n    # get properties from a vuln with more info\n    >>> r = None\n    >>> for x in results:\n      if x.id == \"07cdd3dc-9f5b-4a75-a173-f7ca50bfb4f3\":\n        r = x\n    >>> r.id\n    '07cdd3dc-9f5b-4a75-a173-f7ca50bfb4f3'\n    >>> r.host\n    '10.211.55.35'\n    >>> r.raw_description\n    \"\\n  Summary:\\n  The host is running MySQL and is prone to Denial Of Service\\n  vulnerability.\\n\\n  Vulnerability Insight:\\n  The flaw is due to an error when processing the 'ALTER DATABASE' statement and\\n  can be exploited to corrupt the MySQL data directory using the '#mysql50#'\\n  prefix followed by a '.' or '..'.\\n\\n  NOTE: Successful exploitation requires 'ALTER' privileges on a database.\\n  Impact:\\n  Successful exploitation could allow an attacker to cause a Denial of Service.\\n  Impact Level: Application\\n\\n  Affected Software/OS:\\n  MySQL version priot to 5.1.48 on all running platform.\\n\\n  Solution:\\n  Upgrade to MySQL version 5.1.48\\n  For updates refer to http://dev.mysql.com/downloads\\n\"\n    >>> print(r.raw_description)\n      Summary:\n      The host is running MySQL and is prone to Denial Of Service\n      vulnerability.\n\n      Vulnerability Insight:\n      The flaw is due to an error when processing the 'ALTER DATABASE' statement and\n      can be exploited to corrupt the MySQL data directory using the '#mysql50#'\n      prefix followed by a '.' or '..'.\n\n      NOTE: Successful exploitation requires 'ALTER' privileges on a database.\n      Impact:\n      Successful exploitation could allow an attacker to cause a Denial of Service.\n      Impact Level: Application\n\n      Affected Software/OS:\n      MySQL version priot to 5.1.48 on all running platform.\n\n      Solution:\n      Upgrade to MySQL version 5.1.48\n      For updates refer to http://dev.mysql.com/downloads\n    >>> r.summary\n    'The host is running MySQL and is prone to Denial Of Service vulnerability.'\n    >>> r.vulnerability_insight\n    \"The flaw is due to an error when processing the 'ALTER DATABASE' statement and can be exploited to corrupt the MySQL data directory using the '#mysql50#' prefix followed by a '.' or '..'. NOTE: Successful exploitation requires 'ALTER' privileges on a database.\"\n    >>> r.impact\n    'Successful exploitation could allow an attacker to cause a Denial of Service. Impact Level: Application'\n    >>> r.affected_software\n    'MySQL version priot to 5.1.48 on all running platform.'\n    >>> r.solution\n    'Upgrade to MySQL version 5.1.48 For updates refer to http://dev.mysql.com/downloads'\n    >>> r.threat\n    'Medium'\n    >>> r.port.number\n    3306\n    >>> r.port.proto\n    'tcp'\n    >>> r.port.port_name\n    'mysql'\n\n",
    "docs_url": null,
    "download_url": "https://github.com/golismero/openvas_lib/zipball/master",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://www.golismero.com/",
    "keywords": "",
    "license": "GPLv2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "openvas_lib",
    "platform": "",
    "project_url": "https://pypi.org/project/openvas_lib/",
    "release_url": "https://pypi.org/project/openvas_lib/1.1.3/",
    "requires_python": "",
    "summary": "OpenVAS Manager for OpenVAS 6 to 8 and XML report parser",
    "version": "1.1.3"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6a77456172d03a4cdb6514b0d7f52bc9",
          "sha256": "3c82b8cee903075133cdf8935c3356a25fc80601c4e6bb3e4a2cf1bd83567239"
        },
        "downloads": 1846,
        "filename": "openvas_lib-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6a77456172d03a4cdb6514b0d7f52bc9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19682,
        "upload_time": "2014-08-31T22:38:06",
        "url": "https://files.pythonhosted.org/packages/37/78/b4e3126de79ed3a981fd7e68cb36d94764e99b339470c25f2cd740f2df5d/openvas_lib-1.0.tar.gz"
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "eb30df11f4405b34ec0124e3da7822fa",
          "sha256": "50b15b64968da8f06f841c609c615ad93adfe05ff93ae489dc03b94976c8a490"
        },
        "downloads": 121,
        "filename": "openvas_lib-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eb30df11f4405b34ec0124e3da7822fa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19757,
        "upload_time": "2016-07-04T15:16:24",
        "url": "https://files.pythonhosted.org/packages/13/5b/c3c007ff53fc74a769776bb8c48eed0339f92e95bf30f666c459039ffdd7/openvas_lib-1.1.tar.gz"
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6997b3c284d2c86656fcc6bfc5a6a07f",
          "sha256": "e66777de993082c61941c98d29ea0ec43d8ff6aac1c2a768544ef9bf465328b7"
        },
        "downloads": 568,
        "filename": "openvas_lib-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6997b3c284d2c86656fcc6bfc5a6a07f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19615,
        "upload_time": "2016-07-12T18:23:10",
        "url": "https://files.pythonhosted.org/packages/37/50/8b9c1079ce1b6b305f4f6f7b561140094d44168728358245c17eb8d74b45/openvas_lib-1.1.2.tar.gz"
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f846482fddc87b4890863ff307cd6827",
          "sha256": "e4ac9017a88f785a04a6c9616140d37ce4d0ba2df2cc7a47a6afa01bd3f5a540"
        },
        "downloads": 0,
        "filename": "openvas_lib-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f846482fddc87b4890863ff307cd6827",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21470,
        "upload_time": "2017-04-20T18:42:30",
        "url": "https://files.pythonhosted.org/packages/e0/4e/cec6ae890664a9ac5538231403ca55bb928466a24cd6776994e22fe8003c/openvas_lib-1.1.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f846482fddc87b4890863ff307cd6827",
        "sha256": "e4ac9017a88f785a04a6c9616140d37ce4d0ba2df2cc7a47a6afa01bd3f5a540"
      },
      "downloads": 0,
      "filename": "openvas_lib-1.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f846482fddc87b4890863ff307cd6827",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 21470,
      "upload_time": "2017-04-20T18:42:30",
      "url": "https://files.pythonhosted.org/packages/e0/4e/cec6ae890664a9ac5538231403ca55bb928466a24cd6776994e22fe8003c/openvas_lib-1.1.3.tar.gz"
    }
  ]
}