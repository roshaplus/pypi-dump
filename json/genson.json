{
  "info": {
    "author": "Jon Wolverton",
    "author_email": "wolverton.jr@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "GenSON\n======\n\n**GenSON** is a powerful, user-friendly `JSON Schema`_ generator built\nin Python.\n\n(**Note**: This is not to be confused with the `Java Genson library`_.\nIf you are coming from Java and looking for a Python equivalent, this is\nnot it. You should instead look into `Python's builtin json library`_.)\n\nIts power comes from the ability to generate a single schema from\nmultiple objects. You can also throw existing schemas into the mix.\nBasically, you can feed it as many schemas and objects as you want and\nit will spit out one, unified schema for them all.\n\nThe generator follows these three rules:\n\n1. *Every* object it is given must validate under the generated schema.\n2. *Any* object that is valid under *any* schema it is given must also\n   validate under the generated schema.\n3. The generated schema should be as strict as possible given the first\n   2 rules.\n\n\nJSON Schema Implementation\n--------------------------\n\n**GenSON** is a `Draft 4`_ generator.\n\nIt is important to note that the generator uses only a small subset of\nJSON Schema's capabilities. This is mainly because the generator doesn't\nknow the specifics of your data model, and it doesn't try to guess them.\nIts purpose is to generate the basic structure so that you can skip the\nboilerplate and focus on the details of the schema.\n\nThis means that headers and most keywords aren't dealt with.\nSpecifically, the generator only deals with 4 keywords: ``\"type\"``,\n``\"items\"``, ``\"properties\"`` and ``\"required\"``. You should be aware\nthat this limited vocabulary could cause the generator to violate rules\n1 and 2. If you feed it schemas with advanced keywords, it will just\nblindly pass them on to the final schema.\n\n\nInstallation\n------------\n\n::\n\n    $ pip install genson\n\n\nCLI Tool\n--------\n\nThe package includes a ``genson`` executable that allows you to access\nthis functionality from the command line. For usage info, run with\n``--help``:\n\n::\n\n    $ genson --help\n\n::\n\n    usage: genson [-h] [-a] [-d DELIM] [-i SPACES] [-s SCHEMA] ...\n\n    Generate one, unified JSON Schema from one or more JSON objects and/or JSON\n    Schemas. (uses Draft 4 - http://json-schema.org/draft-04/schema)\n\n    positional arguments:\n      object                files containing JSON objects (defaults to stdin if no\n                            arguments are passed and the -s option is not present)\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -a, --no-merge-arrays\n                            generate a different subschema for each element in an\n                            array rather than merging them all into one\n      -d DELIM, --delimiter DELIM\n                            set a delimiter - Use this option if the input files\n                            contain multiple JSON objects/schemas. You can pass\n                            any string. A few cases ('newline', 'tab', 'space')\n                            will get converted to a whitespace character, and if\n                            empty string ('') is passed, the parser will try to\n                            auto-detect where the boundary is.\n      -i SPACES, --indent SPACES\n                            pretty-print the output, indenting SPACES spaces\n      -s SCHEMA, --schema SCHEMA\n                            file containing a JSON Schema (can be specified\n                            multiple times to merge schemas)\n\n\nGenSON Python API\n-----------------\n\n``Schema`` is the basic schema generator class. ``Schema`` objects can\nbe loaded up with existing schemas and objects before being serialized.\n\n::\n\n    import genson\n\n    s = genson.Schema()\n    s.add_schema({\"type\": \"object\", \"properties\": {}})\n    s.add_object({\"hi\": \"there\"})\n    s.add_object({\"hi\": 5})\n\n    s.to_dict()\n    #=> {\"type\": \"object\", \"properties\": {\"hi\": {\"type\": [\"integer\", \"string\"]}}}\n\n    s.to_json()\n    #=> \"{\\\"type\\\": \\\"object\\\", \\\"properties\\\": {\\\"hi\\\": {\\\"type\\\": [\\\"integer\\\", \\\"string\\\"]}}}\"\n\n\nSchema Object Methods\n+++++++++++++++++++++\n\n``Schema(merge_arrays=True)``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nBuilds a schema generator object.\n\narguments:\n\n* `merge_arrays` (default `True`): Assume all array items share the same\n  schema (as they should). The alternate behavior is to merge schemas\n  based on position in the array.\n\n``add_schema(schema)``\n^^^^^^^^^^^^^^^^^^^^^^\n\nMerges in an existing schema. Take care here because there is no schema\nvalidation. If you pass in a bad schema, you'll get back a bad schema.\n\narguments:\n\n* ``schema`` (required - ``dict`` or ``Schema``): an existing JSON Schema to merge.\n\n``add_object(obj)``\n^^^^^^^^^^^^^^^^^^^\n\nModify the schema to accommodate an object.\n\narguments:\n\n* ``obj`` (required - ``dict``): a JSON object to use in generating the schema.\n\n``to_dict()``\n^^^^^^^^^^^^^\n\nConvert the current schema to a ``dict``.\n\n``to_json()``\n^^^^^^^^^^^^^\n\nConvert the current schema directly to serialized JSON.\n\nSchema Object Interaction\n+++++++++++++++++++++++++\n\nSchema objects can also interact with each other:\n\n* You can pass one schema directly to another to merge them.\n* You can compare schema equality directly.\n\n::\n\n    import genson\n\n    s1 = genson.Schema()\n    s1.add_schema({\"type\": \"object\", \"properties\": {\"hi\": {\"type\": \"string\"}}})\n\n    s2 = genson.Schema()\n    s2.add_schema({\"type\": \"object\", \"properties\": {\"hi\": {\"type\": \"integer\"}}})\n\n    s1 == s2\n    #=> False\n\n    s1.add_schema(s2)\n    s2.add_schema(s1)\n\n    s1 == s2\n    #=> True\n\n    s1.to_dict()\n    #=> {\"type\": \"object\", \"properties\": {\"hi\": {\"type\": [\"integer\", \"string\"]}}}\n\n\nCompatibility\n-------------\n\nGenSON has been tested and verified using the following versions of Python:\n\n* Python 2.7.11\n* Python 3.3.5\n* Python 3.4.4\n* Python 3.5.1\n* Python 3.6.2\n\n\nContributing\n------------\n\nWhen contributing, please follow these steps:\n\n1. Clone the repo and make your changes.\n2. Make sure your code has test cases written against it.\n3. Make sure all the tests pass.\n4. Lint your code with `Flake8`_.\n5. Add your name to the list of contributers.\n6. Submit a Pull Request.\n\nTests\n+++++\n\nTests are written in ``unittest``. You can run them all easily with the\nincluded executable ``bin/test.py``.\n\n::\n\n    $ bin/test.py\n\nYou can also invoke individual test suites:\n\n::\n\n    $ bin/test.py --test-suite test.test_gen_single\n\n\n.. _JSON Schema: http://json-schema.org/\n.. _Java Genson library: https://owlike.github.io/genson/\n.. _Python's builtin json library: https://docs.python.org/library/json.html\n.. _Draft 4: http://json-schema.org/draft-04/schema\n.. _Flake8: https://pypi.python.org/pypi/flake8\n\n\nHistory\n=======\n\n0.1.0 (2014-11-29)\n------------------\n\n* Initial release.\n\n\n0.2.0\n-----\n\n* **Bugfix**: Options were not propagated down to subschemas.\n* **Bugfix**: Empty arrays resulted in invalid schemas because it still\n  included an ``items`` property.\n* **Bugfix**: ``items`` was being set to a list even when\n  ``merge_arrays`` was set to ``True``. This resulted in overly\n  permissive schemas because ``items`` are matched optionally by\n  default.\n* **Improvement**: Positional Array Matching - In order to be more\n  consistent with the way JSON Schema works, the alternate to\n  ``merge_arrays`` is no longer never to merge list items, but instead to\n  merge them based on their position in the list.\n* **Improvement**: Schema Incompatibility Warning - A schema\n  incompatibility used to cause a fatal error with a nondescript\n  warning. The message has been improved and it has been reduced to a\n  warning.\n\n0.2.1\n-----\n* **Bugfix**: ``add_schema`` failed when adding list-style array schemas.\n* **Bugfix**: typo in readme\n\n0.2.2\n-----\n* **Docs**: Python 3.6 is now explicitly tested and listed as compatible.\n\n0.2.3\n-----\n* **Docs**: add installation instructions\n\n\nCredits\n=======\n\n**GenSON** is written and maintained by `Jon Wolverton <https://github.com/wolverdude>`_.\n\n\nContributors\n------------\n\n- `Brad Sokol <https://github.com/bradsokol>`_\n- `David Kay <https://github.com/davek2>`_\n",
    "docs_url": null,
    "download_url": "https://github.com/wolverdude/GenSON/tarball/v0.2s.0",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/wolverdude/genson/",
    "keywords": "json",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "genson",
    "platform": "",
    "project_url": "https://pypi.org/project/genson/",
    "release_url": "https://pypi.org/project/genson/0.2.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "GenSON is a powerful, user-friendly JSON Schema generator.",
    "version": "0.2.3"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6a9505b3dccf02124a9d25b4883ae52d",
          "sha256": "588f5266ef52465bd32cefef679f3050ae0bc38836fdf4dd74370ae3f3b48f6d"
        },
        "downloads": -1,
        "filename": "genson-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a9505b3dccf02124a9d25b4883ae52d",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 11255,
        "upload_time": "2014-11-30T04:50:35",
        "url": "https://files.pythonhosted.org/packages/9d/8d/123cd25290f008092870c71ffc8f159f04aa7b9dfd5e95053e885d3d355f/genson-0.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b6bb0f826eabd13e755d564291121307",
          "sha256": "ac250f735c26c7d0cc38e469b954e3dbd969240da93ae8f0372c85cdcd970b61"
        },
        "downloads": -1,
        "filename": "genson-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b6bb0f826eabd13e755d564291121307",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10109,
        "upload_time": "2014-11-30T04:50:28",
        "url": "https://files.pythonhosted.org/packages/e8/f6/ca4d054d3bcc10acbf04cdc021e9cd63c893061a5280951035a589e6a245/genson-0.1.0.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e165a4c15fb9f27d7318d0182e99311b",
          "sha256": "6ea2bb5b87f042d099154535dbdf61f62402b19bb249e82a15435f2340c58dea"
        },
        "downloads": -1,
        "filename": "genson-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e165a4c15fb9f27d7318d0182e99311b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11682,
        "upload_time": "2016-06-19T11:49:04",
        "url": "https://files.pythonhosted.org/packages/88/0c/3b0e218467cdcd21cb192fc361b597150f5c9dc36f9c5554c6593e90f752/genson-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b2fe31b7736371d79e96f248d6debd84",
          "sha256": "99b225a5d78a04a8c85dc60b87683f3e53c46e4d7ae6ad87e8b98aece1bab46a"
        },
        "downloads": -1,
        "filename": "genson-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b2fe31b7736371d79e96f248d6debd84",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11849,
        "upload_time": "2017-02-07T05:24:23",
        "url": "https://files.pythonhosted.org/packages/cb/3c/977e0d79f1133e9a58af3cf4d69cbea6d88dd6f4dfeac398a93ce2348347/genson-0.2.1.tar.gz"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bda3576a33e245cfbae4a079205cf10f",
          "sha256": "f5909b781ea429dfd6282427978a4a4dc27571479643ed9b18e8224711962d25"
        },
        "downloads": -1,
        "filename": "genson-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bda3576a33e245cfbae4a079205cf10f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11906,
        "upload_time": "2017-08-12T17:32:43",
        "url": "https://files.pythonhosted.org/packages/78/40/b1b539948887884bc881e909de95c914116ac98de984c0a6b039c9512343/genson-0.2.2.tar.gz"
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "19dcaece4bd9d03d549fa5fb9f045713",
          "sha256": "1756740cff035de646a0b1af5cc21f3c8cf558574630c00e40d17ad12024d8da"
        },
        "downloads": -1,
        "filename": "genson-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "19dcaece4bd9d03d549fa5fb9f045713",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11983,
        "upload_time": "2017-10-15T21:38:54",
        "url": "https://files.pythonhosted.org/packages/2b/70/4eea716b647e7b11bf029d05d72eb3b783f20a39ef3a58ed82df8a6bde6b/genson-0.2.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "19dcaece4bd9d03d549fa5fb9f045713",
        "sha256": "1756740cff035de646a0b1af5cc21f3c8cf558574630c00e40d17ad12024d8da"
      },
      "downloads": -1,
      "filename": "genson-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "19dcaece4bd9d03d549fa5fb9f045713",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 11983,
      "upload_time": "2017-10-15T21:38:54",
      "url": "https://files.pythonhosted.org/packages/2b/70/4eea716b647e7b11bf029d05d72eb3b783f20a39ef3a58ed82df8a6bde6b/genson-0.2.3.tar.gz"
    }
  ]
}