{
  "info": {
    "author": "Stefan Ecklebe",
    "author_email": "stefan.ecklebe@tu-dresden.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "=========\nPyMoskito\n=========\n\n.. image:: https://img.shields.io/travis/cklb/pymoskito.svg\n    :target: https://travis-ci.org/cklb/pymoskito\n    :alt: Status of continuous integration\n\n.. image:: https://img.shields.io/pypi/v/pymoskito.svg\n    :target: https://pypi.python.org/pypi/pymoskito\n    :alt: Link to PyPi\n\n.. image:: https://readthedocs.org/projects/pymoskito/badge/?version=master\n    :target: http://pymoskito.readthedocs.io/en/master/?badge=master\n    :alt: Documentation Status\n\nPyMoskito stands for *Python based modular simulation & postprocessing kickass\ntoolbox* and is **Free software** (GPLv3)\n\nPyMoskito is targeted at students and researchers working in control\nengineering. It takes care of all structure related programming a let's you\nfocus on the important things in life: **control design**\nIt features a modular control loop structure that already contains most of the\nneeded blocks a control engineer needs. Basically you implement your systems\ndynamics as well as a fancy control law and you are ready to go.\nOn top PyMoskito also contains a GUI which let's you easily fine-tune the\nparameters of your simulation.\n\n**Go ahead and give it a try!**\n\nDocumentation can be found at https://pymoskito.readthedocs.org.\n\nPyMoskito at work:\n------------------\nThe main application simulating the **Ball and Beam** system:\n\n.. image:: ./docs/pictures/pm_2.png\n\nThe postprocessing application:\n\n.. image:: ./docs/pictures/pm_3.png\n\nAnother example a **Double Pendulum**:\n\n.. image:: ./docs/pictures/pm_4.png\n\nwith custom prostprocessors:\n\n.. image:: ./docs/pictures/pm_5.png\n\nStill here? So PyMoskito features:\n----------------------------------\n* quick setup due to lightweight dependencies\n* modular control loop structure allowing easy configuration\n* easy integration of own system models through open interface\n* automatic simulation of simulation regimes (i.e. for parameter ranges)\n* export of simulation results for dedicated post processing\n* VTK based 3D visualization interface\n* playback functions for 3D visualization\n* ready-to-go graphs for all simulation signals\n\nMaintainers\n-----------\n* Stefan Ecklebe\n* Christoph Burggraf\n\nContributors\n------------\nMarcus Riesmeier\n\n\n\nHistory\n-------\n\n0.1.0 (2015-01-11)\n------------------\n\n* First release on PyPI.\n\n0.2.0 (2017-08-18)\n------------------\n\n* Second minor release with lots of new features.\n* Completely overhauled graphical user interface with menus and shortcuts.\n* PyMoskito now comes with three full-fledged examples from the world of\n  control theory, featuring the Ball and Beam- and a Tandem-Pendulum system.\n* The main application now has a logger window which makes it easier to see what\n  is going on in the simulation circuit.\n* Several bugs concerning encoding issues have been fixed\n* Unittest have been added and the development now uses travis-ci\n* Version change from PyQt4 to Pyt5\n* Version change form Python 2.7 to 3.5+\n* Changed version to GPLv3 and added appropriate references for the used images.\n* Improved the export of simulation results\n* Introduced persistent settings that make opening files less painful.\n* Made vtk an optional dependency and added matplotlib based visualizers.\n* Large improvements concerning the sphinx-build documentation\n* Fixed issue concerning possible data types for simulation module properties\n* Introduced new generic modules that directly work on scipy StateSpace objects.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/cklb/pymoskito",
    "keywords": "pymoskito control simulation feedback feedforward",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pymoskito",
    "platform": "",
    "project_url": "https://pypi.org/project/pymoskito/",
    "release_url": "https://pypi.org/project/pymoskito/0.2.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Python based modular simulation & postprocessing kickass toolbox",
    "version": "0.2.0"
  },
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "513d77687e842e712ce20e3c56631c76",
          "sha256": "a25ba572766294855e2521248b8b8eb0d97eb2f3ad226ccca574061824ee3efa"
        },
        "downloads": 0,
        "filename": "pymoskito-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "513d77687e842e712ce20e3c56631c76",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 167215,
        "upload_time": "2017-08-21T07:38:28",
        "url": "https://files.pythonhosted.org/packages/6c/fe/abc17bd72245c45a1d6ff00c162b88ed031d22cb9be5bd68cf0196381ac6/pymoskito-0.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "513d77687e842e712ce20e3c56631c76",
        "sha256": "a25ba572766294855e2521248b8b8eb0d97eb2f3ad226ccca574061824ee3efa"
      },
      "downloads": 0,
      "filename": "pymoskito-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "513d77687e842e712ce20e3c56631c76",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 167215,
      "upload_time": "2017-08-21T07:38:28",
      "url": "https://files.pythonhosted.org/packages/6c/fe/abc17bd72245c45a1d6ff00c162b88ed031d22cb9be5bd68cf0196381ac6/pymoskito-0.2.0.tar.gz"
    }
  ]
}