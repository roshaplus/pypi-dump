{
  "info": {
    "author": "Zoran Simic",
    "author_email": "zoran@simicweb.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries",
      "Topic :: System :: Software Distribution",
      "Topic :: Utilities"
    ],
    "description": "Stop copy-pasting stuff in ``setup.py``\n=======================================\n\nThis project aims at disrupting the proliferation of copy-paste tech that's currently affecting all ``setup.py`` writers in this world.\n\n\nGet started\n===========\n\n- Grab ``setupmeta.py`` next to your ``setup.py`` and check it in (it self-installs and self-upgrades as you'll see below).\n\n- ``from setupmeta import setup``, and voila: most of the things you had to have in ``setup.py`` can now go away and be auto-filled.\n  Your ``setup.py`` can now be as simple as::\n\n    \"\"\"\n    Short description of my project\n    \"\"\"\n    from setupmeta import setup\n    setup(name='myproject')\n\n- See what info was gathered by setupmeta, and from where::\n\n    ~/dev/setupmeta: python setup.py explain\n    Definitions:\n    ------------\n              author: (auto-adjust    ) Zoran Simic\n                  \\_: (setupmeta.py:27) Zoran Simic zoran@simicweb.com\n        author_email: (auto-adjust    ) zoran@simicweb.com\n         classifiers: (classifiers.txt) 247 chars [Development Status :: 4 - Beta ...]\n         description: (setup.py:2     ) Stop copy-paste technology in setup.py\n            keywords: (setup.py:4     ) anti copy-paste, convenient, setup.py\n             license: (setupmeta.py:25) MIT\n    long_description: (README.rst     ) 7754 chars [Stop copy-pasting stuff in ``setup.py`` ...]\n                name: (explicit       ) setupmeta\n          py_modules: (auto-fill      ) ['setupmeta']\n         script_args: (explicit       ) ['explain']\n         script_name: (explicit       ) setup.py\n       tests_require: (Pipfile        ) ['coverage', 'flake8', 'mock', 'pytest', 'pytest-runner']\n                 url: (setupmeta.py:26) https://github.com/zsimic/setupmeta\n             version: (setupmeta.py:24) 0.0.1\n\nIn the above output:\n\n- We ran ``python setup.py explain`` - \"explain\" is a command provided by setupmeta (see Commands_), it's there to help you see what definitions came from where\n\n- The ``author`` key was seen in ``setupmeta.py`` line 27, and the value was name + email,\n  that got \"auto-adjusted\" and filled in as ``author`` + ``author_email`` properly as shown.\n\n- Note that the ``\\_`` indication tries to convey the fact that ``author`` in this example had a value that came from 2 different sources,\n  final value showing at top, while all the other values seen showing below with the ``\\_`` indicator.\n\n- ``classifiers`` came from file ``classifiers.txt``, ``description`` came from ``setup.py`` line 2, etc\n\n- ``name`` was ``explicit`` (ie: explicitly given to the original ``setup()`` call in ``setup.py``)\n\n- ``py_modules`` was auto-filled to ``['setupmeta']``\n\n- Note that ``script_args`` and ``script_name`` are injected by setuptools\n  (they appear as \"explicit\" from setupmeta's point of view - you get some insight as to what setuptools is doing here as well)\n\n\nHow it works?\n=============\n\n  [It has to live alongside your ``setup.py`` in order for the ``from setupmeta import setup`` call to work.\n  I have plans to make this better (see Roadmap_ below), but for now this is the only way unfortunately]\n\n``setupmeta`` tries to save you some copy-pasting activity in ``setup.py`` by digging information about your project, from your project.\n\nIt finds all the info that's usually provided to ``setuptools.setup()`` throughout your project and auto-fills it for you.\n\nSee the `quick reference`_ page.\n\nI noticed that most open-source projects out there do the same thing over and over, like:\n\n- Read the entire contents of their README file and use it as ``long_description``\n  (copy-pasting the few lines of code to read the contents of said file)\n\n- Reading, grepping, sometimes importing a small ``__version__.py`` or ``__about__.py`` file to get values like ``__version__`` out of it,\n  and then dutifully doing ``version=__version__`` or ``version=about['__version__']`` in their ``setup.py``\n\n- All kinds of creative things to get the ``description``\n\n- Very few ``setup.py`` specimens out there even have a docstring\n\n- Etc.\n\nI didn't want to keep doing this anymore myself, so I decided to try and do something about it with this project.\n\nWith setupmeta, you can achieve a short and sweet setup.py by proceeding like so:\n\n- Have a docstring in your ``setup.py``, 1st line will be your ``description``\n\n- Add a few lines in that docstring of the form ``key: value`` for this that you don't want to state in your code itself, some examples for that could be::\n\n    \"\"\"\n    Do things concisely\n\n    licence: MIT\n    keywords: cool, stuff\n    author: Zoran Simic zoran@simicweb.com\n    \"\"\"\n\n- In your ``__init__.py`` (or a dedicated ``__version__.py``, or ``__about__.py`` if you prefer), state things you would like to be importable from your code, example::\n\n    __version__ = \"1.0.0\"\n    __url__ = \"https://github.com/me/myproject\"\n\n- Your README will end up on pypi automatically as ``long_description``\n\n- If you are using pipenv_, your ``install_requires`` and ``tests_require`` will be auto-filled from your ``Pipfile``\n\n- If you want classifiers, put them in a file ``classifiers.txt``\n\n- If you have entry_points, you can state them in a file ``entry_points.ini`` (bonus: tools like PyCharm have a nice syntax highlighter for those)\n\n\nInstallation\n============\n\nGrab the ``setupmeta.py`` script in your project folder, you can do so using one of the following ways::\n\n    wget https://raw.githubusercontent.com/zsimic/setupmeta/setupmeta.py\n\nOr using pip::\n\n    pip install setupmeta\n    setupmeta.py .\n\nIf you already have the script in some project, you can use it to \"seed\" another project like so::\n\n    ./setupmeta.py ~/my/other/project/\n\n\nThis will grab the latest version of the script and put it in ``~/my/other/project/``, it's almost equivalent to\n(and you could do this also BTW, the only difference from above is that no check for updates is performed)::\n\n    cp ./setupmeta.py ~/my/other/project/setupmeta.py\n\nThe script can auto-upgrade itself, once you have a copy, you can get the latest version by running this (default target is current folder)::\n\n    ./setupmeta.py\n\n\nCommands\n========\n\nOnly 2 commands for now, more to come in the future.\n\nexplain\n-------\n\nUse it to double-check on what ``setupmeta`` is doing, where it finds the info it auto-fills.\nThe command only outputs info, does no changes, can be ran any time.\n\nupload\n------\n\nIt's a draft, taken from `pipenv setup.py`_\n\nThe idea is that this will be a convenient way to upload/publish your project to pypi,\nwith all sorts of validation etc.\n\n\nRoadmap\n=======\n\nInstall via ``setup_requires`` instead of local copy of ``setupmeta.py``\n------------------------------------------------------------------------\n\nDue to setuptools limitations, I had to make this work by asking users to put a copy of ``setupmeta.py`` in their projects.\nIn the future, I plan to make setupmeta be consumed via ``setup_requires=['setupmeta']`` instead of this.\n\nI have a working implementation draft with ``setup_requires=['setupmeta']``,\nbut it can only work with setuptools 36.7+ and in particular this `setuptools commit`_\n\nWhen setuptools 36.7+ becomes commonplace, we'll be able to:\n\n- Delete those ``setupmeta.py`` in-project copies\n\n- Use ``setup_requires=['setupmeta']`` in the original ``setup()`` call instead\n\n\nMore commands\n-------------\n\nAdd more convenience commands such as ``upload`` and a ``test`` that works for most popular cases\n\n\n\n.. _setuptools commit: https://github.com/pypa/setuptools/commit/bb71fd1bed9f5e5e239ef99be82ed57e9f9b1dda#diff-6b59155d3acbddf6010c0f20482d4eea\n\n.. _pipenv: https://github.com/kennethreitz/pipenv\n.. _pipenv setup.py: https://github.com/kennethreitz/pipenv/blob/master/setup.py\n\n.. _quick reference: ./REFERENCE.rst",
    "docs_url": null,
    "download_url": "https://github.com/zsimic/setupmeta/archive/0.0.2.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/zsimic/setupmeta",
    "keywords": "anti copy-paste, convenient, setup.py",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "setupmeta",
    "platform": "",
    "project_url": "https://pypi.org/project/setupmeta/",
    "release_url": "https://pypi.org/project/setupmeta/0.0.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Stop copy-paste technology in setup.py",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4445d004be2e094d3c5911fa2cfa59fa",
          "sha256": "607fd1f2b0156710edee18e29c24515657be3f6a9cbbdd4681121ffd32f236ca"
        },
        "downloads": -1,
        "filename": "setupmeta-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4445d004be2e094d3c5911fa2cfa59fa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29189,
        "upload_time": "2017-12-02T09:48:20",
        "url": "https://files.pythonhosted.org/packages/3a/16/756b3083b29076075b548616045bb1cb49706ed595dec9118d5bfd84a265/setupmeta-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0f55e335801630eba2e6a0f9d2441f28",
          "sha256": "9a1d0555e766893790fbbbb72efeab74e2fbda9bd91754cb1d3479267c4264bb"
        },
        "downloads": -1,
        "filename": "setupmeta-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0f55e335801630eba2e6a0f9d2441f28",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29223,
        "upload_time": "2017-12-02T10:11:01",
        "url": "https://files.pythonhosted.org/packages/48/69/0ebe5295014cc212a9e371bd6946d241118e7b945651a12dcf1a05f54df0/setupmeta-0.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "0f55e335801630eba2e6a0f9d2441f28",
        "sha256": "9a1d0555e766893790fbbbb72efeab74e2fbda9bd91754cb1d3479267c4264bb"
      },
      "downloads": -1,
      "filename": "setupmeta-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "0f55e335801630eba2e6a0f9d2441f28",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 29223,
      "upload_time": "2017-12-02T10:11:01",
      "url": "https://files.pythonhosted.org/packages/48/69/0ebe5295014cc212a9e371bd6946d241118e7b945651a12dcf1a05f54df0/setupmeta-0.0.2.tar.gz"
    }
  ]
}