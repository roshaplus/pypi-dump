{
  "info": {
    "author": "Joshua Griffiths",
    "author_email": "joshua.griffiths@opsview.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# PyOpsview :snake:\n\n![Opsview Logo](https://raw.githubusercontent.com/jpgxs/pyopsview/master/opsview.png)\n\nPython REST API Client for Opsview!\n\n## Installation\n\n### Installing Dependencies\n\n    # Using `pip`\n    pip install -r https://raw.githubusercontent.com/jpgxs/pyopsview/master/requirements.txt\n\n    # Using `apt`\n    apt update && apt install python-requests python-six\n\n    # Using `apt-get`\n    apt-get update && apt-get install python-requests python-six\n\n    # Using `yum`\n    yum install python-requests python-six\n\n    # Using `dnf`\n    dnf install python-requests python-six\n\n    # Using `urpmi`\n    urpmi python-requests python-six\n\n### Installing\n\n    # From `pypi`\n    pip install pyopsview\n\n    # From source\n    git clone https://github.com/jpgxs/pyopsview\n    cd pyopsview\n    python setup.py install\n\n## Usage\n\n### Basic Usage\n\n    from __future__ import print_function\n\n    from pyopsview import OpsviewClient\n    from pyopsview.exceptions import OpsviewClientException\n\n    # Authenticate the client and load the appropriate API schema for the\n    # specific Opsview version\n    client = OpsviewClient(username='admin', password='initial',\n                           endpoint='https://opsview.example.com')\n\n    # Create a new client using the token; this is useful for things like ansible\n    # where the login operation would otherwise have to be done for every operation\n    auth_token = client.token\n    client = OpsviewClient(username='admin', token=auth_token,\n                           endpoint='https://opsview.example.com')\n\n    # Get a list of the configured hosts. This returns a generator.\n    all_hosts = client.config.hosts.list()\n    for host in all_hosts:\n        print(host['check_interval'])\n\n    # Find all hosts monitored by the master monitoring server.\n    monitored_by_master = client.config.hosts.find(monitored_by='Master Monitoring Server')\n\n    # Update the address of one host\n    update_host = all_hosts[-1]\n    update_host['address'] = '127.128.129.130'\n    update_host = client.config.hosts.update(update_host['id'], **update_host)\n\n    # Find the Master opsview server\n    opsview_master = client.config.hosts.find_one(name='Opsview')\n    if opsview_master is None:\n        raise RuntimeError('Failed to find the Opsview master server!')\n\n    # Get a list of all Service Checks on the Opsview master\n    master_service_checks = []\n    master_service_checks += opsview_master['service_checks']\n\n    for template in opsview_master['host_templates']:\n        template_detail = client.hosttemplates.find_one(template['name'])\n        master_service_checks += template_detail['service_checks']\n\n\n## TODO\n\n* Add schemas for other versions of Opsview\n* Add API operations for:\n  * Downtime\n  * Service/Host Status\n  * Live Object Information (Runtime)\n  * Acknowledgements\n  * Scheduling Rechecks\n  * Graphing Data\n  * Event/History Data\n  * Notes\n  * SNMP queries\n\n\n## Contributing\n\n1. Fork it!\n2. Create your feature branch: `git checkout -b my-new-feature`\n3. Commit your changes: `git commit -am 'Add some feature'`\n4. Push to the branch: `git push origin my-new-feature`\n5. Submit a pull request",
    "docs_url": null,
    "download_url": "https://github.com/jpgxs/pyopsview",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jpgxs/pyopsview",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pyopsview",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pyopsview/",
    "release_url": "https://pypi.org/project/pyopsview/5.3.1/",
    "requires_python": null,
    "summary": "Python client for the Opsview API",
    "version": "5.3.1"
  },
  "releases": {
    "5.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bed38ecaef1c71d31bc3d387864473fb",
          "sha256": "80fd7bf5b89bf5a2b2f4e60a13f5aab59ffdb1270127c82ab41c886003496d7e"
        },
        "downloads": 22,
        "filename": "pyopsview-5.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bed38ecaef1c71d31bc3d387864473fb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29922,
        "upload_time": "2017-03-11T14:33:59",
        "url": "https://files.pythonhosted.org/packages/a9/79/82d07e4cc85dd4598d8fe23e2579b801f6f342c43fcae0175dd11aca6597/pyopsview-5.3.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "bed38ecaef1c71d31bc3d387864473fb",
        "sha256": "80fd7bf5b89bf5a2b2f4e60a13f5aab59ffdb1270127c82ab41c886003496d7e"
      },
      "downloads": 22,
      "filename": "pyopsview-5.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bed38ecaef1c71d31bc3d387864473fb",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 29922,
      "upload_time": "2017-03-11T14:33:59",
      "url": "https://files.pythonhosted.org/packages/a9/79/82d07e4cc85dd4598d8fe23e2579b801f6f342c43fcae0175dd11aca6597/pyopsview-5.3.1.tar.gz"
    }
  ]
}