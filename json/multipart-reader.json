{
  "info": {
    "author": "Florent Pigout",
    "author_email": "florent.pigout@people-doc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python"
    ],
    "description": "================\nMultipart Reader\n================\n\n.. image:: https://travis-ci.org/novafloss/multipart-reader.svg\n   :target: https://travis-ci.org/novafloss/multipart-reader\n   :alt: We are under CI!!\n\n\nPermits to read a multipart content like, mixed, related, etc.\n\nThanks to the *aiohttp* project for the implementation, cf.:\nhttp://aiohttp.readthedocs.org/en/stable/multipart.html. Unfortunately lot of\npeople have not yet moved to asyncio, or do not want the full *aiohttp* stack\nto read the multipart content. \n\nHere we tried to keep all the *aiohttp* logic and coverage but the coroutines\nmechanism.\n\n\nWhat it does\n============\n\nIt reads the same way multpart/x contents. Lets say we have the following\n*multipart/related* content::\n\n    >>> import json\n\n    >>> from email.mime.multipart import MIMEMultipart\n    >>> from email.mime.base import MIMEBase\n\n    >>> multipart = MIMEMultipart('related')\n\n    >>> part = MIMEBase('application', 'json')\n    >>> part.set_payload(json.dumps({'foo': 'bar'}))\n    >>> multipart.attach(part)\n\n    >>> part = MIMEBase('application', 'octet-stream')\n    >>> part.set_payload(b\"Python will save the world. I don't know how. But it will.\")\n    >>> part.add_header('Content-Disposition', 'attachment', filename='python-save-the-world.txt')\n    >>> multipart.attach(part)\n\nHere is how we can read it::\n\n    >>> import io\n\n    >>> from multipart_reader import MultipartReader\n\n    >>> content = multipart.as_string().split('\\n\\n', 1)[1]\n    >>> headers = dict(multipart.items())\n\n    >>> stream = io.BytesIO()\n    >>> stream.write(content)\n    >>> stream.seek(0)\n\n    >>> reader = MultipartReader(headers, stream)\n\n    >>> json_part = reader.next()\n    >>> json_part.json()\n    {'foo': 'bar'}\n\n    >>> file_part = reader.next()\n    >>> file_part.read()\n    \"Python will save the world. I don't know how. But it will.\"\n\n    >>> file_part.filename\n    'python-save-the-world.txt'\n\nThat's it ...",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/novafloss/multipart-reader",
    "keywords": "multipart",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "multipart-reader",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/multipart-reader/",
    "release_url": "https://pypi.org/project/multipart-reader/0.1.0/",
    "requires_python": null,
    "summary": "Multipart/* reader extracted from awsome `aiohttp` project, cf.: http://aiohttp.readthedocs.org/en/stable/multipart.html.",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9431f04f875e84a5dccdc754aa3fdd99",
          "sha256": "f198c31f4eba0cfe248da6120a7d9a63b346d5484f635843835f3a1f9f93beb2"
        },
        "downloads": 417,
        "filename": "multipart_reader-0.1.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "9431f04f875e84a5dccdc754aa3fdd99",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 13315,
        "upload_time": "2016-01-08T10:35:37",
        "url": "https://files.pythonhosted.org/packages/d6/09/7da450f96046f01c1bf9b9e44fc4d42324f4a0c35f2b447dac812903fd6e/multipart_reader-0.1.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e9d0deaacbc65aa563db8a6babd47f00",
          "sha256": "b9c7908a23ef1ca5f5080fb88563e50a9ef6592bf7f6202d313e2f3661e27ed2"
        },
        "downloads": 721,
        "filename": "multipart-reader-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e9d0deaacbc65aa563db8a6babd47f00",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25713,
        "upload_time": "2016-01-08T10:35:22",
        "url": "https://files.pythonhosted.org/packages/be/44/b02df165784656a892255872555771e59dcad6ff8c825addfb9b94ec8ed2/multipart-reader-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9431f04f875e84a5dccdc754aa3fdd99",
        "sha256": "f198c31f4eba0cfe248da6120a7d9a63b346d5484f635843835f3a1f9f93beb2"
      },
      "downloads": 417,
      "filename": "multipart_reader-0.1.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "9431f04f875e84a5dccdc754aa3fdd99",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "size": 13315,
      "upload_time": "2016-01-08T10:35:37",
      "url": "https://files.pythonhosted.org/packages/d6/09/7da450f96046f01c1bf9b9e44fc4d42324f4a0c35f2b447dac812903fd6e/multipart_reader-0.1.0-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "e9d0deaacbc65aa563db8a6babd47f00",
        "sha256": "b9c7908a23ef1ca5f5080fb88563e50a9ef6592bf7f6202d313e2f3661e27ed2"
      },
      "downloads": 721,
      "filename": "multipart-reader-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e9d0deaacbc65aa563db8a6babd47f00",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 25713,
      "upload_time": "2016-01-08T10:35:22",
      "url": "https://files.pythonhosted.org/packages/be/44/b02df165784656a892255872555771e59dcad6ff8c825addfb9b94ec8ed2/multipart-reader-0.1.0.tar.gz"
    }
  ]
}