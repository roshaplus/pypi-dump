{
  "info": {
    "author": "Nicky Robinson",
    "author_email": "nickr@vimeo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "========\npy-money\n========\n\n.. image:: https://badge.fury.io/py/py-money.svg\n    :target: https://badge.fury.io/py/py-money\n    :alt: Latest PyPI version\n\nMoney class for Python 3. Unlike other Python money classes, this class enforces that all monetary amounts are represented with the correct number of decimal places for the currency. For example, 3.678 USD is invalid, as is 5.5 JPY.\n\nInstallation\n============\n\nInstall the latest release with:\n\n::\n\n    pip install py-money\n\nUsage\n=====\n\nA Money object can be created with an amount (specified as a string) and a currency from the Currency class.\n\n.. code:: python\n\n    >>> from money.money import Money\n    >>> from money.currency import Currency\n    >>> m = Money('9.95', Currency.GBP)\n    >>> m\n    GBP 9.95\n\nMoney is immutable and supports most mathematical and logical operators.\n\n.. code:: python\n\n    >>> m = Money('10.00', Currency.USD)\n    >>> m / 2\n    USD 5.00\n    >>> m + Money('3.00', Currency.USD)\n    USD 8.00\n    >>> m > Money('5.55', Currency.USD)\n    True\n\nMoney will automatically round to the correct number of decimal places for the currency.\n\n.. code:: python\n\n    >>> m = Money('9.95', Currency.EUR)\n    >>> m * 0.15\n    EUR 1.49\n    >>> m = Money('10', Currency.JPY)\n    >>> m / 3\n    JPY 3\n\nMoney can be formatted for different locales.\n\n.. code:: python\n\n    >>> Money('3.24', Currency.USD).format('en_US')\n    '$3.24'\n    >>> Money('9.95', Currency.EUR).format('en_UK')\n    '\u20ac5.56'\n    >>> Money('94', Currency.JPY).format('ja_JP')\n    '\uffe594'\n\nMoney does not support conversion between currencies and probably never will. Mathetmatical and logical operations between two money objects are only allowed if both objects are of the same currency. Otherwise, an error will be thrown.\n\nMoney will throw an error if you try to construct an object with an invalid amount for the currency (eg, 3.678 USD or 5.5 JPY).\n\nFor more examples, check out the test file!\n\nIs this the money library for me?\n=================================\n\nIf you're just trying to do simple mathematical operations on money in different currencies, this library is probably perfect for you! Perhaps you're just running a store online and you need to compute sales tax.\n\n.. code:: python\n\n    >>> subtotal = Money('9.95', Currency.USD)\n    >>> tax = subtotal * 0.07\n    >>> total = tax + subtotal\n    >>> subtotal.format('en_US')\n    '$9.95'\n    >>> tax.format('en_US')\n    '$0.70'\n    >>> total.format('en_US')\n    '$10.65'\n\nAll rounding will be done correctly, and you can open up in multiple countries with ease!\n\nIf you're doing complicated money operations that require many digits of precision for some reason (or you're running a gas station and charging that extra nine tenths of a cent), this library is not for you.\n\nA word of warning: rounding is performed after each multiplication or division operation. While this is exactly what you want when computing sales tax, it may cause confusion if you're not expecting it.\n\n.. code:: python\n\n    >>> m = Money('9.95', Currency.USD)\n    >>> m * 0.5 * 2\n    USD 9.96\n    >>> m * (0.5 * 2)\n    USD 9.95\n    >>> m * 1\n    USD 9.95\n\nTo avoid confusion, make sure you simplify your expressions!\n\nFuture improvements\n===================\nSupport may be added one day for setting rounding modes. Foreign exchange rates will probably never be supported.\n\nContributing\n============\nPull requests are welcome! Please include tests. You can install everything needed for development with\n\n::\n\n   make install\n\nYou can then run the tests from the root directory with\n\n::\n\n    make test\n\nYou can run pylint from the root directory with\n\n::\n\n    make pylint\n\nAcknowledgements\n================\nMuch of the code is borrowed from https://github.com/carlospalol/money. Much of the logic for handling foreign currencies is taken from https://github.com/sebastianbergmann/money. Money formatting is powered by `Babel <http://babel.pocoo.org/>`_.",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/vimeo/py-money",
    "keywords": "money currency",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "py-money",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/py-money/",
    "release_url": "https://pypi.org/project/py-money/0.2.0/",
    "requires_python": null,
    "summary": "Money module for python",
    "version": "0.2.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d375e061beb8a4d50361e72f2ba741c7",
          "sha256": "b0698ff4d735e90b4f82d032d904d966b6e4009da93e733c23ae2dd357a75d41"
        },
        "downloads": 147,
        "filename": "py_money-0.1.0-py3.6.egg",
        "has_sig": false,
        "md5_digest": "d375e061beb8a4d50361e72f2ba741c7",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "size": 18005,
        "upload_time": "2017-04-07T20:24:47",
        "url": "https://files.pythonhosted.org/packages/d5/2d/267fa03a67546370f64916a830b1d2b1fbd0f2579ec6ce087e9a392b3fc1/py_money-0.1.0-py3.6.egg"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "250de378c7bb858cfbd1e8735f976092",
          "sha256": "f22a1a3a1210ca400c649b2960048ac1a7a2f95eb96dd304ffdeae1b1811a8a2"
        },
        "downloads": 146,
        "filename": "py_money-0.1.1-py3.6.egg",
        "has_sig": false,
        "md5_digest": "250de378c7bb858cfbd1e8735f976092",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "size": 18067,
        "upload_time": "2017-04-07T21:31:46",
        "url": "https://files.pythonhosted.org/packages/27/28/225ff7a24d7cbc488e3b3a8f76f89ce2348cf7476107a5f366325c835a26/py_money-0.1.1-py3.6.egg"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b4d02b4e58ee92b592cdd4841da0357c",
          "sha256": "0c4c235ef9a166709745f6dab77f8cce26516fa5517cf16ab853fd268673dc8b"
        },
        "downloads": 0,
        "filename": "py_money-0.2.0-py3.6.egg",
        "has_sig": false,
        "md5_digest": "b4d02b4e58ee92b592cdd4841da0357c",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "size": 18233,
        "upload_time": "2017-04-10T14:32:15",
        "url": "https://files.pythonhosted.org/packages/08/a0/0a28272419c9ae2a8eb34897b12afa9c72a316fd530fa374eba97d78f969/py_money-0.2.0-py3.6.egg"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b4d02b4e58ee92b592cdd4841da0357c",
        "sha256": "0c4c235ef9a166709745f6dab77f8cce26516fa5517cf16ab853fd268673dc8b"
      },
      "downloads": 0,
      "filename": "py_money-0.2.0-py3.6.egg",
      "has_sig": false,
      "md5_digest": "b4d02b4e58ee92b592cdd4841da0357c",
      "packagetype": "bdist_egg",
      "python_version": "3.6",
      "size": 18233,
      "upload_time": "2017-04-10T14:32:15",
      "url": "https://files.pythonhosted.org/packages/08/a0/0a28272419c9ae2a8eb34897b12afa9c72a316fd530fa374eba97d78f969/py_money-0.2.0-py3.6.egg"
    }
  ]
}