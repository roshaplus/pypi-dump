{
  "info": {
    "author": "Valentin Berlier",
    "author_email": "berlier.v@mail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "nbtlib\n======\n\n|Build Status|\n\nA python library to read and edit `nbt data <http://wiki.vg/NBT>`__.\nAlso provides an api to define compound tag schemas in order to save\nsome typing with recurring tag hierarchies. Requires python 3.6.\n\nInstallation\n------------\n\nThe package can be installed with ``pip``.\n\n.. code::\n\n    $ pip install nbtlib\n\nBasic usage\n-----------\n\nThe following examples will give you a very basic overview of what you\ncan do. For more advanced examples, check out the\n`Usage <https://github.com/vberlier/nbtlib/blob/master/docs/Usage.ipynb>`__\nnotebook in the docs folder.\n\nReading files\n~~~~~~~~~~~~~\n\n.. code:: py\n\n    from nbtlib import nbt\n\n    nbt_file = nbt.load('bigtest.nbt')\n    assert nbt_file.root['intTest'] == 2147483647\n\nEditing files\n~~~~~~~~~~~~~\n\n.. code:: py\n\n    from nbtlib import nbt\n    from nbtlib.tag import *\n\n    with nbt.load('demo.nbt') as demo:\n        demo.root['counter'] = Int(demo.root['counter'] + 1)\n\nUsing schemas\n~~~~~~~~~~~~~\n\n.. code:: py\n\n    from nbtlib import schema\n    from nbtlib.tag import *\n\n    MySchema = schema('MySchema', {\n        'foo': String,\n        'bar': Short\n    })\n\n    my_object = MySchema({'foo': 'hello world', 'bar': 21})\n    assert isinstance(my_object['foo'], String)\n\nContributing\n------------\n\nContributions are welcome. Unit tests are built with ``pytest``. You can\nrun the test suite with:\n\n.. code::\n\n    $ python -m pytest tests\n\n----\n\nLicense: `MIT <https://github.com/vberlier/nbtlib/blob/master/LICENSE>`__\n\n.. |Build Status| image:: https://travis-ci.org/vberlier/nbtlib.svg?branch=master\n   :target: https://travis-ci.org/vberlier/nbtlib\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/vberlier/nbtlib",
    "keywords": "nbt schema minecraft package library parser reader module",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nbtlib",
    "platform": "any",
    "project_url": "https://pypi.org/project/nbtlib/",
    "release_url": "https://pypi.org/project/nbtlib/0.1.6/",
    "requires_dist": [],
    "requires_python": ">=3.6",
    "summary": "A python package to read and edit nbt data",
    "version": "0.1.6"
  },
  "releases": {
    "0.1.5": [],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d0cb97b6106c85b0e5c8c091085b475e",
          "sha256": "22a699a6518d624353c266238f6d2453f87cd316827f08030e3f5f00c37fc0fd"
        },
        "downloads": -1,
        "filename": "nbtlib-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d0cb97b6106c85b0e5c8c091085b475e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 9472,
        "upload_time": "2017-11-19T19:25:26",
        "url": "https://files.pythonhosted.org/packages/64/ea/f54d511f996359ff9dc8979bd5a69d20541742d2429a748ffe9f41e84472/nbtlib-0.1.6-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d0cb97b6106c85b0e5c8c091085b475e",
        "sha256": "22a699a6518d624353c266238f6d2453f87cd316827f08030e3f5f00c37fc0fd"
      },
      "downloads": -1,
      "filename": "nbtlib-0.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d0cb97b6106c85b0e5c8c091085b475e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 9472,
      "upload_time": "2017-11-19T19:25:26",
      "url": "https://files.pythonhosted.org/packages/64/ea/f54d511f996359ff9dc8979bd5a69d20541742d2429a748ffe9f41e84472/nbtlib-0.1.6-py3-none-any.whl"
    }
  ]
}