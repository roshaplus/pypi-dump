{
  "info": {
    "author": "Aiden Nibali",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Topic :: Multimedia :: Graphics :: Graphics Conversion"
    ],
    "description": "WebP Python bindings\n====================\n\n|CircleCI| |license| |PyPI| |GitHub|\n\nInstallation\n------------\n\n.. code:: sh\n\n    pip install webp\n\nRequirements\n~~~~~~~~~~~~\n\n-  `libwebp <https://github.com/webmproject/libwebp>`__ (tested with\n   v0.6.0)\n-  Install libwebpmux and libwebpdemux components as well.\n-  Check out the Dockerfile for steps to build from source on Ubuntu.\n-  Python 3 (tested with v3.6)\n-  cffi (tested with 1.10.0)\n-  Pillow (tested with v4.1.1)\n-  numpy (tested with v1.12.1)\n\nUsage\n-----\n\n.. code:: python\n\n    import webp\n\nSimple API\n~~~~~~~~~~\n\n.. code:: python\n\n    # Save an image\n    webp.save_image(img, 'image.webp', quality=80)\n\n    # Load an image\n    img = webp.load_image('image.webp', 'RGBA')\n\n    # Save an animation\n    webp.save_images(imgs, 'anim.webp', fps=10, lossless=True)\n\n    # Load an animation\n    imgs = webp.load_images('anim.webp', 'RGB')\n\nAdvanced API\n~~~~~~~~~~~~\n\n.. code:: python\n\n    # Encode a PIL image to WebP in memory, with encoder hints\n    pic = webp.WebPPicture.from_pil(img)\n    config = WebPConfig.new(preset=webp.WebPPreset.PHOTO, quality=70)\n    buf = pic.encode(config).buffer()\n\n    # Read a WebP file and decode to a BGR numpy array\n    with open('image.webp', 'rb') as f:\n      webp_data = webp.WebPData.from_buffer(f.read())\n      arr = webp_data.decode(color_mode=WebPColorMode.BGR)\n\n    # Save an animation\n    enc = webp.WebPAnimEncoder.new(width, height)\n    timestamp_ms = 0\n    for img in imgs:\n      pic = webp.WebPPicture.from_pil(img)\n      enc.encode_frame(pic, timestamp_ms)\n      timestamp_ms += 250\n    anim_data = enc.assemble(timestamp_ms)\n    with open('anim.webp', 'wb') as f:\n      f.write(anim_data.buffer())\n\n    # Load an animation\n    with open('anim.webp', 'rb') as f:\n      webp_data = webp.WebPData.from_buffer(f.read())\n      dec = webp.WebPAnimDecoder.new(webp_data)\n      for arr, timestamp_ms in dec.frames():\n        # `arr` contains decoded pixels for the frame\n        # `timestamp_ms` contains the _end_ time of the frame\n        pass\n\nFeatures\n--------\n\n-  Picture encoding/decoding\n-  Animation encoding/decoding\n-  Automatic memory management\n-  Simple API for working with ``PIL.Image`` objects\n\nNot implemented\n~~~~~~~~~~~~~~~\n\n-  Encoding/decoding still images in YUV color mode\n-  Advanced muxing/demuxing (color profiles, etc.)\n-  Expose all useful fields\n\n.. |CircleCI| image:: https://img.shields.io/circleci/project/github/anibali/pywebp.svg\n   :target: https://circleci.com/gh/anibali/pywebp\n.. |license| image:: https://img.shields.io/github/license/anibali/pywebp.svg\n   :target: https://github.com/anibali/pywebp/blob/master/LICENSE\n.. |PyPI| image:: https://img.shields.io/pypi/dm/webp.svg\n   :target: https://pypi.python.org/pypi/webp\n.. |GitHub| image:: https://img.shields.io/badge/github-anibali%2Fpywebp-blue.svg\n   :target: https://github.com/anibali/pywebp\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/anibali/pywebp",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "webp",
    "platform": "",
    "project_url": "https://pypi.org/project/webp/",
    "release_url": "https://pypi.org/project/webp/0.1.0a5/",
    "requires_python": "",
    "summary": "Python bindings for WebP",
    "version": "0.1.0a5"
  },
  "releases": {
    "0.1.0a4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4489fe3a70c266c563f620b43322738b",
          "sha256": "9db076b1704fbfdf1f152b0360d39f7cb85b2b381aa75313ec7918f1e60cc908"
        },
        "downloads": 0,
        "filename": "webp-0.1.0a4.tar.gz",
        "has_sig": false,
        "md5_digest": "4489fe3a70c266c563f620b43322738b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7246,
        "upload_time": "2017-06-09T00:55:27",
        "url": "https://files.pythonhosted.org/packages/e6/79/230182cc19db801924c9cdbda2a84992a00eeba403a1df0c78bef9d9258f/webp-0.1.0a4.tar.gz"
      }
    ],
    "0.1.0a5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "37eea0d081ad19e060dfd22727cd3dfe",
          "sha256": "368fac3946eb6f20260a6110d701550e2f5607efbe4e0866f016561e02649c82"
        },
        "downloads": 0,
        "filename": "webp-0.1.0a5.tar.gz",
        "has_sig": false,
        "md5_digest": "37eea0d081ad19e060dfd22727cd3dfe",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8259,
        "upload_time": "2017-06-09T02:39:19",
        "url": "https://files.pythonhosted.org/packages/35/96/aa9ed4f28415ebc19ed4ce28d0f8ef1fa8e8d8c09417949848893ae0ee16/webp-0.1.0a5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "37eea0d081ad19e060dfd22727cd3dfe",
        "sha256": "368fac3946eb6f20260a6110d701550e2f5607efbe4e0866f016561e02649c82"
      },
      "downloads": 0,
      "filename": "webp-0.1.0a5.tar.gz",
      "has_sig": false,
      "md5_digest": "37eea0d081ad19e060dfd22727cd3dfe",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8259,
      "upload_time": "2017-06-09T02:39:19",
      "url": "https://files.pythonhosted.org/packages/35/96/aa9ed4f28415ebc19ed4ce28d0f8ef1fa8e8d8c09417949848893ae0ee16/webp-0.1.0a5.tar.gz"
    }
  ]
}