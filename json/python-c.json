{
  "info": {
    "author": "Jad Nohra",
    "author_email": "jadnohra@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "python-c\n====\n\nA lazy alternative to python -c.\n\nUsage\n====\n\nIf you have a file named foo.py with::\n\n    def quite():\n       return 5\n    def loud():\n        print 'hello'\n    def double(arg):\n       return arg*2\n\nInstead of::\n\n  $ python -c \"import foo; foo.loud();\"\n  hello\n\nYou can lazily write::\n\n    $ python-c foo 'loud()'\n    hello\n\nYou can load multiple file::\n\n  $ python-c foo,foo2 'loud()'\n  hello\n\nor directories::\n\n  $ python-c ./,./dir1 'loud()'\n  hello\n\nIn cases where it works, you can maximize your laziness and omit the first argument, the current directory is then loaded::\n\n    $ python-c 'loud()'\n    hello\n\nPrinting\n====\n\nPrinting is handled for you::\n\n    $ python-c foo quite()\n    5\n\nThe result of the call (if any) is printed, even though the function does not call 'print'.\n\nMore examples\n====\n\nYou can pass arguments to your functions::\n\n    $ python-c foo 'double(2)'\n    4\n\nYou can execute arbitrary code in your single line::\n\n    $ python-c foo '\"hot\" if double(2) == 4 else \"cold\"'\n    hot\n\nThis includes printing::\n\n    $ python-c foo.py 'print \"double {} is {}\".format(2, double(2))'\n    double 2 is 4\n\nMotivation\n====\nI wrote this tool because I am so lazy that both 'python -c' and https://github.com/vascop/runp still felt like too much typing.",
    "docs_url": null,
    "download_url": "https://github.com/jadnohra/python-c/archive/v1.0.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jadnohra/python-c",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-c",
    "platform": "",
    "project_url": "https://pypi.org/project/python-c/",
    "release_url": "https://pypi.org/project/python-c/1.0/",
    "requires_python": "",
    "summary": "A lazy alternative to python -c",
    "version": "1.0"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ed51af817e5f4626707f35157c6380fd",
          "sha256": "1b3c15aad2fba5a1c61e67ad7bb41efdb1e949ce9c08e69ca0d6643ecf066feb"
        },
        "downloads": 0,
        "filename": "python-c-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ed51af817e5f4626707f35157c6380fd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3186,
        "upload_time": "2017-06-17T09:05:37",
        "url": "https://files.pythonhosted.org/packages/a6/ae/59c8ef092cbab8bebad5ddd48e0935981a155fb871f2a1e539be7568cfef/python-c-1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ed51af817e5f4626707f35157c6380fd",
        "sha256": "1b3c15aad2fba5a1c61e67ad7bb41efdb1e949ce9c08e69ca0d6643ecf066feb"
      },
      "downloads": 0,
      "filename": "python-c-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ed51af817e5f4626707f35157c6380fd",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3186,
      "upload_time": "2017-06-17T09:05:37",
      "url": "https://files.pythonhosted.org/packages/a6/ae/59c8ef092cbab8bebad5ddd48e0935981a155fb871f2a1e539be7568cfef/python-c-1.0.tar.gz"
    }
  ]
}