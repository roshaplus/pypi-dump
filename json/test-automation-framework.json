{
  "info": {
    "author": "Vade Secure",
    "author_email": "support@vade-retro.com",
    "bugtrack_url": "",
    "classifiers": [
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![Documentation Status](https://readthedocs.org/projects/test-automation-framework/badge/?version=latest)](http://test-automation-framework.readthedocs.org/en/latest/?badge=latest)\n[![Requirements Status](https://requires.io/github/VadeRetro/test-automation-framework/requirements.svg?branch=master)](https://requires.io/github/VadeRetro/test-automation-framework/requirements/?branch=master)\n[![Licence GPL](http://img.shields.io/badge/license-GPL-yellow.svg)](http://www.gnu.org/licenses/quick-guide-gplv3.fr.html)\n\n# test-automation-framework\nUnittest wrapper to create interactions between testlink and python tests\n\nThis wrapper contains two parts so that you can build up fancy system and integration tests.\n\nWe provide you a easy to use way to report your test results to testlink and a unittest oriented API for running web UI tests.\n\n# Install with pip\n\n```bash\nvirtualenv test_selenium --python=python3\nsource test_selenium/bin/activate\npython setup.py install\npip install test-automation-framework\ncd main\n# configurer correctement le config.py\npython generate_test.py\npython lauchtestlinktests.py\n```\n\n# Test framework\n\nYou also need PhantomJS to be able to launch tests : `apt-get install phantomjs`.\n\nClone the repo and run `python setup.py test -s tests`.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/VadeRetro/test-automation-framework",
    "keywords": "test,reporting,unittest",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "test-automation-framework",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/test-automation-framework/",
    "release_url": "https://pypi.org/project/test-automation-framework/1.0.2/",
    "requires_python": null,
    "summary": "Unittest wrapper to create interactions between testlink and python tests",
    "version": "1.0.2"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3580c62aa8570eea5e37a35614ce7ca8",
          "sha256": "7ee47f985540f98722a4903651cf25ea498945481e03a98aaa0b05f31c62f7c0"
        },
        "downloads": 439,
        "filename": "test-automation-framework-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3580c62aa8570eea5e37a35614ce7ca8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16589,
        "upload_time": "2016-04-27T07:57:04",
        "url": "https://files.pythonhosted.org/packages/da/b1/6442d22486ea41f40f6d7416ff1a7d11169d1a6bae6caf7ab0a94cd413cb/test-automation-framework-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0aec8927f47e842c2373aab955399a09",
          "sha256": "a02c2d53d0768306f98b9e9ac344ba862db4ff297c72b092a3774c054569dce6"
        },
        "downloads": 120,
        "filename": "test-automation-framework-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0aec8927f47e842c2373aab955399a09",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17486,
        "upload_time": "2016-06-14T10:17:45",
        "url": "https://files.pythonhosted.org/packages/bc/eb/8c83ab398fa4fe8aa692b46ae03386d93abc087a42043a8e5093d9cbdf1e/test-automation-framework-1.0.1.tar.gz"
      }
    ],
    "1.0.2": []
  },
  "urls": []
}