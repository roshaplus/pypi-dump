{
  "info": {
    "author": "The Factory 2.0 Team",
    "author_email": "odcs-owner@fedoraproject.org",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# On Demand Compose Service\n\nCurrently, there is no API which can be used by other services or even people to generate temporary composes with limited content. There is increasing need for such composes from various reasons:\n\nTo rebuild Docker images automatically with updated packages (for example when there is OpenSSL security update), we need a repository containing the updated packages, so we can point Koji to take the packages from these repositories without waiting for the packages to appear in the official public repository.\n\n\nTo test modules right after the build, QA team needs a compose containing the built module together with all the modules this module depends on, so QA team is able to install the module and run the tests.\n \nFurthermore:\n\nIn the mid-/long-term, Fedora releng would like to generate the main compose from the smaller composes generated by the ODCS, so the composing would be faster.\nCurrent composes are also not event-based. For example in Fedora, the composes are built even when nothing changed on input side of a compose.\n\n\nMore information can be find in the On Demand Compose Service Focus document: https://fedoraproject.org/wiki/Infrastructure/Factory2/Focus/ODCS.\n\n## Dependencies\n\nOn top of the classic `requirements.txt`, ODCS depends on Pungi (https://pagure.io/pungi/) in version 4.1.15 or newer.\n\n## Unit-testing\n\n```\n$ tox -e py27,py35,flake8\n```\n\n## Testing local composes from plain RPM repositories\n\nYou can test ODCS by generating compose form the `./tests/repo` repository using following commands:\n\n```\n$ ./create_sqlite_db\n$ ./start_odcs_from_here\n```\n\nAnd in another terminal, submit a request to frontend:\n\n```\n$ ./submit_test_compose repo `pwd`/tests/repo ed\n{\n  \"id\": 1,\n  \"owner\": \"Unknown\",\n  \"result_repo\": null,\n  \"source\": \"/home/hanzz/code/fedora-modularization/odcs/tests/repo\",\n  \"source_type\": 3,\n  \"state\": 0,\n  \"state_name\": \"wait\",\n  \"time_done\": null,\n  \"time_removed\": null,\n  \"time_submitted\": \"2017-06-12T14:18:19Z\"\n}\n```\n\nYou should then see the backend process generating the compose and once it's done, the resulting compose in `./test_composes/latest-Unknown-1/compose/Temporary` directory.\n\n## REST API\n\n### Submitting new compose request\n\nTo submit new compose request, you can send POST request in the following format to `/odcs/1/composes`:\n\n```\n{\n  \"source_type\": \"tag\",\n  \"source\": \"f26\",\n  \"packages\": [\"httpd\"]\n}\n```\n\nThis tells ODCS to create new compose from the Koji tag \"f26\" with the \"httpd\" packages and all the dependencies this package has in the \"f26\" Koji tag.\n\nThe example above is the minimal example, but there are more JSON fields which can be used to influence the resulting compose:\n\n- **source_type** - \"tag\" for compose from Koji tag, \"module\" for compose from the Fedora module, \"repo\" for compose from local RPM repository.\n- **source** - For \"tag\" source_type, name of the tag. For \"module\" source_type, white-space separated list of module name-stream or name-stream-version. For \"repo\" source_type, full path to repository.\n- **packages** - List of packages to include in a compose. Must not be set for \"module\" source_type.\n- **seconds-to-live** - Number of seconds for which the compose should become available. After that, the compose is removed. The default and maximum value is defined by server-side configuration.\n- **flags** - List of flags influencing the resulting compose:\n  - **no_deps** - The resulting compose will contain only packages defined in the \"packages\" list without their dependencies.\n\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://pagure.io/odcs/",
    "keywords": "on demand compose service modularity fedora",
    "license": "GPLv2+",
    "maintainer": null,
    "maintainer_email": null,
    "name": "odcs",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/odcs/",
    "release_url": "https://pypi.org/project/odcs/0.0.1/",
    "requires_dist": [],
    "requires_python": null,
    "summary": "On Demand Compose Service",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "13182157b11ebfb352b331f2c241c286",
          "sha256": "0d065106b8f256d2bb0c7bbdf814123f85ebfa74b3f1841f59bee033d834ee5d"
        },
        "downloads": 0,
        "filename": "odcs-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "13182157b11ebfb352b331f2c241c286",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 321065,
        "upload_time": "2017-06-29T11:55:53",
        "url": "https://files.pythonhosted.org/packages/bc/d8/ef2970d833ce05630e33f6628e2bc34842549d043109f1dfd621b4f5a566/odcs-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "13182157b11ebfb352b331f2c241c286",
        "sha256": "0d065106b8f256d2bb0c7bbdf814123f85ebfa74b3f1841f59bee033d834ee5d"
      },
      "downloads": 0,
      "filename": "odcs-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "13182157b11ebfb352b331f2c241c286",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 321065,
      "upload_time": "2017-06-29T11:55:53",
      "url": "https://files.pythonhosted.org/packages/bc/d8/ef2970d833ce05630e33f6628e2bc34842549d043109f1dfd621b4f5a566/odcs-0.0.1.tar.gz"
    }
  ]
}