{
  "info": {
    "author": "Sergey Astanin",
    "author_email": "s.astanin@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Permission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nDescription: ===============\n        python-tabulate\n        ===============\n        \n        Pretty-print tabular data in Python, a library and a command-line\n        utility.\n        \n        The main use cases of the library are:\n        \n        * printing small tables without hassle: just one function call,\n          formatting is guided by the data itself\n        \n        * authoring tabular data for lightweight plain-text markup: multiple\n          output formats suitable for further editing or transformation\n        \n        * readable presentation of mixed textual and numeric data: smart\n          column alignment, configurable number formatting, alignment by a\n          decimal point\n        \n        \n        Installation\n        ------------\n        \n        To install the Python library and the command line utility, run::\n        \n            pip install tabulate\n        \n        The command line utility will be installed as ``tabulate`` to ``bin`` on Linux\n        (e.g. ``/usr/bin``); or as ``tabulate.exe`` to ``Scripts`` in your Python\n        installation on Windows (e.g. ``C:\\Python27\\Scripts\\tabulate.exe``).\n        \n        You may consider installing the library only for the current user::\n        \n            pip install tabulate --user\n        \n        In this case the command line utility will be installed to ``~/.local/bin/tabulate``\n        on Linux and to ``%APPDATA%\\Python\\Scripts\\tabulate.exe`` on Windows.\n        \n        To install just the library on Unix-like operating systems::\n        \n            TABULATE_INSTALL=lib-only pip install tabulate\n        \n        On Windows::\n        \n            set TABULATE_INSTALL=lib-only\n            pip install tabulate\n        \n        \n        Library usage\n        -------------\n        \n        The module provides just one function, ``tabulate``, which takes a\n        list of lists or another tabular data type as the first argument,\n        and outputs a nicely formatted plain-text table::\n        \n            >>> from tabulate import tabulate\n        \n            >>> table = [[\"Sun\",696000,1989100000],[\"Earth\",6371,5973.6],\n            ...          [\"Moon\",1737,73.5],[\"Mars\",3390,641.85]]\n            >>> print tabulate(table)\n            -----  ------  -------------\n            Sun    696000     1.9891e+09\n            Earth    6371  5973.6\n            Moon     1737    73.5\n            Mars     3390   641.85\n            -----  ------  -------------\n        \n        The following tabular data types are supported:\n        \n        * list of lists or another iterable of iterables\n        * list or another iterable of dicts (keys as columns)\n        * dict of iterables (keys as columns)\n        * two-dimensional NumPy array\n        * NumPy record arrays (names as columns)\n        * pandas.DataFrame\n        \n        Examples in this file use Python2. Tabulate supports Python3 too.\n        \n        \n        Headers\n        ~~~~~~~\n        \n        The second optional argument named ``headers`` defines a list of\n        column headers to be used::\n        \n            >>> print tabulate(table, headers=[\"Planet\",\"R (km)\", \"mass (x 10^29 kg)\"])\n            Planet      R (km)    mass (x 10^29 kg)\n            --------  --------  -------------------\n            Sun         696000           1.9891e+09\n            Earth         6371        5973.6\n            Moon          1737          73.5\n            Mars          3390         641.85\n        \n        If ``headers=\"firstrow\"``, then the first row of data is used::\n        \n            >>> print tabulate([[\"Name\",\"Age\"],[\"Alice\",24],[\"Bob\",19]],\n            ...                headers=\"firstrow\")\n            Name      Age\n            ------  -----\n            Alice      24\n            Bob        19\n        \n        \n        If ``headers=\"keys\"``, then the keys of a dictionary/dataframe, or\n        column indices are used. It also works for NumPy record arrays and\n        lists of dictionaries or named tuples::\n        \n            >>> print tabulate({\"Name\": [\"Alice\", \"Bob\"],\n            ...                 \"Age\": [24, 19]}, headers=\"keys\")\n              Age  Name\n            -----  ------\n               24  Alice\n               19  Bob\n        \n        \n        Row Indices\n        ~~~~~~~~~~~\n        \n        By default, only pandas.DataFrame tables have an additional column\n        called row index. To add a similar column to any other type of table,\n        pass ``showindex=\"always\"`` or ``showindex=True`` argument to\n        ``tabulate()``. To suppress row indices for all types of data, pass\n        ``showindex=\"never\"`` or ``showindex=False``.  To add a custom row\n        index column, pass ``showindex=rowIDs``, where ``rowIDs`` is some\n        iterable::\n        \n            >>> print(tabulate([[\"F\",24],[\"M\",19]], showindex=\"always\"))\n            -  -  --\n            0  F  24\n            1  M  19\n            -  -  --\n        \n        \n        Table format\n        ~~~~~~~~~~~~\n        \n        There is more than one way to format a table in plain text.\n        The third optional argument named ``tablefmt`` defines\n        how the table is formatted.\n        \n        Supported table formats are:\n        \n        - \"plain\"\n        - \"simple\"\n        - \"grid\"\n        - \"fancy_grid\"\n        - \"pipe\"\n        - \"orgtbl\"\n        - \"jira\"\n        - \"psql\"\n        - \"rst\"\n        - \"mediawiki\"\n        - \"moinmoin\"\n        - \"html\"\n        - \"latex\"\n        - \"latex_booktabs\"\n        - \"textile\"\n        \n        ``plain`` tables do not use any pseudo-graphics to draw lines::\n        \n            >>> table = [[\"spam\",42],[\"eggs\",451],[\"bacon\",0]]\n            >>> headers = [\"item\", \"qty\"]\n            >>> print tabulate(table, headers, tablefmt=\"plain\")\n            item      qty\n            spam       42\n            eggs      451\n            bacon       0\n        \n        ``simple`` is the default format (the default may change in future\n        versions).  It corresponds to ``simple_tables`` in `Pandoc Markdown\n        extensions`::\n        \n            >>> print tabulate(table, headers, tablefmt=\"simple\")\n            item      qty\n            ------  -----\n            spam       42\n            eggs      451\n            bacon       0\n        \n        ``grid`` is like tables formatted by Emacs' `table.el`\n        package.  It corresponds to ``grid_tables`` in Pandoc Markdown\n        extensions::\n        \n            >>> print tabulate(table, headers, tablefmt=\"grid\")\n            +--------+-------+\n            | item   |   qty |\n            +========+=======+\n            | spam   |    42 |\n            +--------+-------+\n            | eggs   |   451 |\n            +--------+-------+\n            | bacon  |     0 |\n            +--------+-------+\n        \n        ``fancy_grid`` draws a grid using box-drawing characters::\n        \n            >>> print tabulate(table, headers, tablefmt=\"fancy_grid\")\n            \u2552\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2555\n            \u2502 item   \u2502   qty \u2502\n            \u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n            \u2502 spam   \u2502    42 \u2502\n            \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n            \u2502 eggs   \u2502   451 \u2502\n            \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n            \u2502 bacon  \u2502     0 \u2502\n            \u2558\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255b\n        \n        ``psql`` is like tables formatted by Postgres' psql cli::\n        \n            >>> print tabulate.tabulate()\n            +--------+-------+\n            | item   |   qty |\n            |--------+-------|\n            | spam   |    42 |\n            | eggs   |   451 |\n            | bacon  |     0 |\n            +--------+-------+\n        \n        ``pipe`` follows the conventions of `PHP Markdown Extra` extension.  It\n        corresponds to ``pipe_tables`` in Pandoc. This format uses colons to\n        indicate column alignment::\n        \n            >>> print tabulate(table, headers, tablefmt=\"pipe\")\n            | item   |   qty |\n            |:-------|------:|\n            | spam   |    42 |\n            | eggs   |   451 |\n            | bacon  |     0 |\n        \n        ``orgtbl`` follows the conventions of Emacs `org-mode`, and is editable\n        also in the minor `orgtbl-mode`. Hence its name::\n        \n            >>> print tabulate(table, headers, tablefmt=\"orgtbl\")\n            | item   |   qty |\n            |--------+-------|\n            | spam   |    42 |\n            | eggs   |   451 |\n            | bacon  |     0 |\n        \n        ``jira`` follows the conventions of Atlassian Jira markup language::\n        \n            >>> print tabulate(table, headers, tablefmt=\"jira\")\n            || item   ||   qty ||\n            | spam   |    42 |\n            | eggs   |   451 |\n            | bacon  |     0 |\n        \n        ``rst`` formats data like a simple table of the `reStructuredText` format::\n        \n            >>> print tabulate(table, headers, tablefmt=\"rst\")\n            ======  =====\n            item      qty\n            ======  =====\n            spam       42\n            eggs      451\n            bacon       0\n            ======  =====\n        \n        ``mediawiki`` format produces a table markup used in `Wikipedia` and on\n        other MediaWiki-based sites::\n        \n            >>> print tabulate(table, headers, tablefmt=\"mediawiki\")\n            {| class=\"wikitable\" style=\"text-align: left;\"\n            |+ <!-- caption -->\n            |-\n            ! item   !! align=\"right\"|   qty\n            |-\n            | spam   || align=\"right\"|    42\n            |-\n            | eggs   || align=\"right\"|   451\n            |-\n            | bacon  || align=\"right\"|     0\n            |}\n        \n        ``moinmoin`` format produces a table markup used in `MoinMoin`\n        wikis::\n        \n            >>> print tabulate(d,headers,tablefmt=\"moinmoin\")\n            || ''' item   ''' || ''' quantity   ''' ||\n            ||  spam    ||  41.999      ||\n            ||  eggs    ||  451         ||\n            ||  bacon   ||              ||\n        \n        ``textile`` format produces a table markup used in `Textile` format::\n        \n            >>> print tabulate(table, headers, tablefmt='textile')\n            |_.  item   |_.   qty |\n            |<. spam    |>.    42 |\n            |<. eggs    |>.   451 |\n            |<. bacon   |>.     0 |\n        \n        ``html`` produces standard HTML markup::\n        \n            >>> print tabulate(table, headers, tablefmt=\"html\")\n            <table>\n            <tbody>\n            <tr><th>item  </th><th style=\"text-align: right;\">  qty</th></tr>\n            <tr><td>spam  </td><td style=\"text-align: right;\">   42</td></tr>\n            <tr><td>eggs  </td><td style=\"text-align: right;\">  451</td></tr>\n            <tr><td>bacon </td><td style=\"text-align: right;\">    0</td></tr>\n            </tbody>\n            </table>\n        \n        ``latex`` format creates a ``tabular`` environment for LaTeX markup::\n        \n            >>> print tabulate(table, headers, tablefmt=\"latex\")\n            \\begin{tabular}{lr}\n            \\hline\n             item   &   qty \\\\\n            \\hline\n             spam   &    42 \\\\\n             eggs   &   451 \\\\\n             bacon  &     0 \\\\\n            \\hline\n            \\end{tabular}\n        \n        ``latex_booktabs`` creates a ``tabular`` environment for LaTeX markup\n        using spacing and style from the ``booktabs`` package.\n        \n        \n        .. _Pandoc Markdown extensions: http://johnmacfarlane.net/pandoc/README.html#tables\n        .. _PHP Markdown Extra: http://michelf.ca/projects/php-markdown/extra/#table\n        .. _table.el: http://table.sourceforge.net/\n        .. _org-mode: http://orgmode.org/manual/Tables.html\n        .. _reStructuredText: http://docutils.sourceforge.net/docs/user/rst/quickref.html#tables\n        .. _Textile: http://redcloth.org/hobix.com/textile/\n        .. _Wikipedia: http://www.mediawiki.org/wiki/Help:Tables\n        \n        \n        Column alignment\n        ~~~~~~~~~~~~~~~~\n        \n        ``tabulate`` is smart about column alignment. It detects columns which\n        contain only numbers, and aligns them by a decimal point (or flushes\n        them to the right if they appear to be integers). Text columns are\n        flushed to the left.\n        \n        You can override the default alignment with ``numalign`` and\n        ``stralign`` named arguments. Possible column alignments are:\n        ``right``, ``center``, ``left``, ``decimal`` (only for numbers), and\n        ``None`` (to disable alignment).\n        \n        Aligning by a decimal point works best when you need to compare\n        numbers at a glance::\n        \n            >>> print tabulate([[1.2345],[123.45],[12.345],[12345],[1234.5]])\n            ----------\n                1.2345\n              123.45\n               12.345\n            12345\n             1234.5\n            ----------\n        \n        Compare this with a more common right alignment::\n        \n            >>> print tabulate([[1.2345],[123.45],[12.345],[12345],[1234.5]], numalign=\"right\")\n            ------\n            1.2345\n            123.45\n            12.345\n             12345\n            1234.5\n            ------\n        \n        For ``tabulate``, anything which can be parsed as a number is a\n        number. Even numbers represented as strings are aligned properly. This\n        feature comes in handy when reading a mixed table of text and numbers\n        from a file:\n        \n        ::\n        \n            >>> import csv ; from StringIO import StringIO\n            >>> table = list(csv.reader(StringIO(\"spam, 42\\neggs, 451\\n\")))\n            >>> table\n            [['spam', ' 42'], ['eggs', ' 451']]\n            >>> print tabulate(table)\n            ----  ----\n            spam    42\n            eggs   451\n            ----  ----\n        \n        \n        \n        Number formatting\n        ~~~~~~~~~~~~~~~~~\n        \n        ``tabulate`` allows to define custom number formatting applied to all\n        columns of decimal numbers. Use ``floatfmt`` named argument::\n        \n        \n            >>> print tabulate([[\"pi\",3.141593],[\"e\",2.718282]], floatfmt=\".4f\")\n            --  ------\n            pi  3.1416\n            e   2.7183\n            --  ------\n        \n        \n        Wide (fullwidth CJK) symbols\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n        \n        To properly align tables which contain wide characters (typically fullwidth\n        glyphs from Chinese, Japanese or Korean languages), the user should install\n        ``wcwidth`` library. To install it together with ``tabulate``::\n        \n            pip install tabulate[widechars]\n        \n        Wide character support is enabled automatically if ``wcwidth`` library is\n        already installed.  To disable wide characters support without uninstalling\n        ``wcwidth``, set the global module-level flag ``WIDE_CHARS_MODE``::\n        \n            import tabulate\n            tabulate.WIDE_CHARS_MODE = False\n        \n        \n        Usage of the command line utility\n        ---------------------------------\n        \n        ::\n        \n            Usage: tabulate [options] [FILE ...]\n        \n            FILE                      a filename of the file with tabular data;\n                                      if \"-\" or missing, read data from stdin.\n        \n            Options:\n        \n            -h, --help                show this message\n            -1, --header              use the first row of data as a table header\n            -o FILE, --output FILE    print table to FILE (default: stdout)\n            -s REGEXP, --sep REGEXP   use a custom column separator (default: whitespace)\n            -F FPFMT, --float FPFMT   floating point number format (default: g)\n            -f FMT, --format FMT      set output table format; supported formats:\n                                      plain, simple, grid, fancy_grid, pipe, orgtbl,\n                                      rst, mediawiki, html, latex, latex_booktabs, tsv\n                                      (default: simple)\n        \n        \n        Performance considerations\n        --------------------------\n        \n        Such features as decimal point alignment and trying to parse everything\n        as a number imply that ``tabulate``:\n        \n        * has to \"guess\" how to print a particular tabular data type\n        * needs to keep the entire table in-memory\n        * has to \"transpose\" the table twice\n        * does much more work than it may appear\n        \n        It may not be suitable for serializing really big tables (but who's\n        going to do that, anyway?) or printing tables in performance sensitive\n        applications. ``tabulate`` is about two orders of magnitude slower\n        than simply joining lists of values with a tab, coma or other\n        separator.\n        \n        In the same time ``tabulate`` is comparable to other table\n        pretty-printers. Given a 10x10 table (a list of lists) of mixed text\n        and numeric data, ``tabulate`` appears to be slower than\n        ``asciitable``, and faster than ``PrettyTable`` and ``texttable``\n        \n        ::\n        \n            =================================  ==========  ===========\n            Table formatter                      time, \u03bcs    rel. time\n            =================================  ==========  ===========\n            csv to StringIO                          25.3          1.0\n            join with tabs and newlines              33.6          1.3\n            asciitable (0.8.0)                      590.0         23.4\n            tabulate (0.7.7)                       1403.5         55.6\n            tabulate (0.7.7, WIDE_CHARS_MODE)      2156.6         85.4\n            PrettyTable (0.7.2)                    3377.0        133.7\n            texttable (0.8.6)                      3986.3        157.8\n            =================================  ==========  ===========\n        \n        \n        Version history\n        ---------------\n        \n        - 0.8: FUTURE RELEASE\n        - 0.7.6: Bug fixes. New table formats (``psql``, ``jira``, ``moinmoin``, ``textile``).\n          Wide character support. Printing from database cursors.\n          Option to print row indices. Boolean columns. Ragged rows.\n          Option to disable number parsing.\n        - 0.7.5: Bug fixes. ``--float`` format option for the command line utility.\n        - 0.7.4: Bug fixes. ``fancy_grid`` and ``html`` formats. Command line utility.\n        - 0.7.3: Bug fixes. Python 3.4 support. Iterables of dicts. ``latex_booktabs`` format.\n        - 0.7.2: Python 3.2 support.\n        - 0.7.1: Bug fixes. ``tsv`` format. Column alignment can be disabled.\n        - 0.7: ``latex`` tables. Printing lists of named tuples and NumPy\n          record arrays. Fix printing date and time values. Python <= 2.6.4 is supported.\n        - 0.6: ``mediawiki`` tables, bug fixes.\n        - 0.5.1: Fix README.rst formatting. Optimize (performance similar to 0.4.4).\n        - 0.5: ANSI color sequences. Printing dicts of iterables and Pandas' dataframes.\n        - 0.4.4: Python 2.6 support.\n        - 0.4.3: Bug fix, None as a missing value.\n        - 0.4.2: Fix manifest file.\n        - 0.4.1: Update license and documentation.\n        - 0.4: Unicode support, Python3 support, ``rst`` tables.\n        - 0.3: Initial PyPI release. Table formats: ``simple``, ``plain``,\n          ``grid``, ``pipe``, and ``orgtbl``.\n        \n        \n        How to contribute\n        -----------------\n        \n        Contributions should include tests and an explanation for the changes they\n        propose. Documentation (examples, docstrings, README.rst) should be updated\n        accordingly.\n        \n        This project uses `nose` testing framework and `tox` to automate testing in\n        different environments. Add tests to one of the files in the ``test/`` folder.\n        \n        To run tests on all supported Python versions, make sure all Python\n        interpreters, ``nose`` and ``tox`` are installed, then run ``tox`` in\n        the root of the project source tree.\n        \n        On Linux ``tox`` expects to find executables like ``python2.6``,\n        ``python2.7``, ``python3.4`` etc. On Windows it looks for\n        ``C:\\Python26\\python.exe``, ``C:\\Python27\\python.exe`` and\n        ``C:\\Python34\\python.exe`` respectively.\n        \n        To test only some Python environements, use ``-e`` option. For\n        example, to test only against Python 2.7 and Python 3.4, run::\n        \n            tox -e py27,py34\n        \n        in the root of the project source tree.\n        \n        To enable NumPy and Pandas tests, run::\n        \n            tox -e py27-extra,py34-extra\n        \n        (this may take a long time the first time, because NumPy and Pandas\n        will have to be installed in the new virtual environments)\n        \n        See ``tox.ini`` file to learn how to use ``nosetests`` directly to\n        test individual Python versions.\n        \n        .. _nose: https://nose.readthedocs.org/\n        .. _tox: http://tox.testrun.org/\n        \n        \n        Contributors\n        ------------\n        \n        Sergey Astanin, Pau Tallada Cresp\u00ed, Erwin Marsi, Mik Kocikowski, Bill Ryder,\n        Zach Dwiel, Frederik Rietdijk, Philipp Bogensberger, Greg (anonymous),\n        Stefan Tatschner, Emiel van Miltenburg, Brandon Bennett, Amjith Ramanujam,\n        Jan Schulz, Simon Percivall, Javier Santacruz L\u00f3pez-Cepero, Sam Denton,\n        Alexey Ziyangirov, acaird, Cesar Sanchez, naught101, John Vandenberg,\n        Zack Dever.\n        \nPlatform: UNKNOWN\nClassifier: Development Status :: 4 - Beta\nClassifier: License :: OSI Approved :: MIT License\nClassifier: Operating System :: OS Independent\nClassifier: Programming Language :: Python :: 2.6\nClassifier: Programming Language :: Python :: 2.7\nClassifier: Programming Language :: Python :: 3.2\nClassifier: Programming Language :: Python :: 3.3\nClassifier: Programming Language :: Python :: 3.4\nClassifier: Topic :: Software Development :: Libraries\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://bitbucket.org/astanin/python-tabulate",
    "keywords": "",
    "license": "Copyright (c) 2011-2016 Sergey Astanin",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tabulate",
    "platform": "",
    "project_url": "https://pypi.org/project/tabulate/",
    "release_url": "https://pypi.org/project/tabulate/0.7.7/",
    "requires_python": "",
    "summary": "Pretty-print tabular data",
    "version": "0.7.7"
  },
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fbd67d9f6203207bd9809d2577627da1",
          "sha256": "3317fa30a8938d609d3c1f376237528db0f6c65e881bd5882d332638943d5f7f"
        },
        "downloads": 2096,
        "filename": "tabulate-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fbd67d9f6203207bd9809d2577627da1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7670,
        "upload_time": "2013-03-08T18:06:40",
        "url": "https://files.pythonhosted.org/packages/82/62/11ca29a5d2392c2d733a5d09cabcf1a1d67b7734e2959751866d7f02728d/tabulate-0.3.tar.gz"
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f02061310add6631391aa2b2bf1f5ff2",
          "sha256": "cb59f2ef4482176ca8e1a76bc6b388810f1bf637062809db01f639d1e3267bfd"
        },
        "downloads": 2054,
        "filename": "tabulate-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f02061310add6631391aa2b2bf1f5ff2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9077,
        "upload_time": "2013-03-11T17:11:46",
        "url": "https://files.pythonhosted.org/packages/ec/42/5e15f0243e1e35b0621b905cf8e0e914c82034656c9d1021ffae51749e88/tabulate-0.4.2.tar.gz"
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "89454ab170f8c4675974cd5a5f50ac34",
          "sha256": "90d8df044db66352f4c0447bd9ccd04782281b924f09d46780db02b84e6ce488"
        },
        "downloads": 2195,
        "filename": "tabulate-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "89454ab170f8c4675974cd5a5f50ac34",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9327,
        "upload_time": "2013-03-29T22:12:00",
        "url": "https://files.pythonhosted.org/packages/be/e0/c45721a08ef2f555b93ef3d633dcbdfa747808a6bddf23af7f8522584625/tabulate-0.4.3.tar.gz"
      }
    ],
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cdb9feee571e44d1900997054875bd0f",
          "sha256": "0ce0c874b6ec5c2f7022ff625446f057b662204e6968886af5cb502754ccd22c"
        },
        "downloads": 2071,
        "filename": "tabulate-0.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cdb9feee571e44d1900997054875bd0f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9387,
        "upload_time": "2013-05-23T15:24:16",
        "url": "https://files.pythonhosted.org/packages/70/ec/29c47306d8219eba3eef97eb23b1ef460e6e4c0a002a70a4f5ce948f2ccf/tabulate-0.4.4.tar.gz"
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "88631b556462b7470561b5ab419ae3e6",
          "sha256": "bb44d74a85ec388aec3628e0ed1c4c00fc98b6a2534756f70b313e8b7f2d3895"
        },
        "downloads": 2330,
        "filename": "tabulate-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "88631b556462b7470561b5ab419ae3e6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13326,
        "upload_time": "2013-08-08T15:19:46",
        "url": "https://files.pythonhosted.org/packages/b1/1e/bedb22cea065425ddbeeed9b7fb633e6a49442a289bc928f97ff4be67dc9/tabulate-0.5.tar.gz"
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5f7360af3d3a660a9fce7a17726e73c2",
          "sha256": "6a95a34d60f60a5b05c59fdde616282a54274cb6f8674694c49994c896dd085f"
        },
        "downloads": 1897,
        "filename": "tabulate-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5f7360af3d3a660a9fce7a17726e73c2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13622,
        "upload_time": "2013-08-08T16:59:52",
        "url": "https://files.pythonhosted.org/packages/76/08/6e5af163fb1a7faf5930ab0850ad2a4e60d3003f0729e371c4bbc190e475/tabulate-0.5.1.tar.gz"
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8e1d0363fc85b150ec9e2755de6a4700",
          "sha256": "27bc688608cff8c3770f24f4a58e75c6a04ad152d6986f6e2cd133a2c5e15719"
        },
        "downloads": 3978,
        "filename": "tabulate-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "8e1d0363fc85b150ec9e2755de6a4700",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14338,
        "upload_time": "2013-08-09T19:46:05",
        "url": "https://files.pythonhosted.org/packages/84/55/e9e220893b1c2275cd0faafea2709fb5d42bf9fed9d17153d4341559c639/tabulate-0.6.tar.gz"
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7a0f5c4029219053dbd6bd3b77fa760f",
          "sha256": "fa3282db4ee10adaf1f9fd62760e77b30e9811234ceae2cb59c1170c3e4c14d0"
        },
        "downloads": 2614,
        "filename": "tabulate-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "7a0f5c4029219053dbd6bd3b77fa760f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19358,
        "upload_time": "2013-11-19T14:43:49",
        "url": "https://files.pythonhosted.org/packages/2f/f0/edc9795391fbd86c9eedb6563b93415df7c70c5da0fa9fd5eab83998047c/tabulate-0.7.tar.gz"
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "db48cdb3b42680da5e058886aeafcc88",
          "sha256": "e884431ff7d991781c2513ebf5e8ab635aec499af52b8231c9ccc83a9663ea6a"
        },
        "downloads": 4609,
        "filename": "tabulate-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "db48cdb3b42680da5e058886aeafcc88",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19814,
        "upload_time": "2013-12-11T23:45:46",
        "url": "https://files.pythonhosted.org/packages/2c/57/c4f4c24663bc61cb0c9229340d63df36376c41bc76e0a5c3d05af15c43f4/tabulate-0.7.1.tar.gz"
      }
    ],
    "0.7.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "77223d7dc7a650fae3c847e227b02558",
          "sha256": "532ccab8d9e4659a5f016d84814df86cc04763785e9de2739e890d956dc82d8f"
        },
        "downloads": 159566,
        "filename": "tabulate-0.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "77223d7dc7a650fae3c847e227b02558",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19792,
        "upload_time": "2014-02-03T13:14:42",
        "url": "https://files.pythonhosted.org/packages/2f/7d/f138a03594eeaf9aaef8c3d7923f70cfd1f4dfc774bedd46cbcc7ddf71c4/tabulate-0.7.2.tar.gz"
      }
    ],
    "0.7.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d6664ca3e27e17a55ef5dec8177cb24d",
          "sha256": "8a59a61ed6ddfdb009f15917e0f006cc5842f9daa72c519593b7a095e645532a"
        },
        "downloads": 159147,
        "filename": "tabulate-0.7.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d6664ca3e27e17a55ef5dec8177cb24d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22315,
        "upload_time": "2014-09-15T15:01:02",
        "url": "https://files.pythonhosted.org/packages/3b/6d/c3e2ba309bfadde4037793b7f48df0d95f52c874b34d2c2b89bf9a966ec3/tabulate-0.7.3.tar.gz"
      }
    ],
    "0.7.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "40ff347cc52c0bf87488ccddc86bc6cc",
          "sha256": "6bcd5e47372cca82088f87dfe2f365f79965b2be7837e3bac5a75adf4e0b0ba8"
        },
        "downloads": 35925,
        "filename": "tabulate-0.7.4.tar.gz",
        "has_sig": false,
        "md5_digest": "40ff347cc52c0bf87488ccddc86bc6cc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29394,
        "upload_time": "2015-02-16T20:36:49",
        "url": "https://files.pythonhosted.org/packages/27/83/87255629a12019744b7c0719e409b28fdbba70386e07a57824de2764ff95/tabulate-0.7.4.tar.gz"
      }
    ],
    "0.7.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "576e1f063b8e74dbfeda02d978564987",
          "sha256": "9071aacbd97a9a915096c1aaf0dc684ac2672904cd876db5904085d6dac9810e"
        },
        "downloads": 943050,
        "filename": "tabulate-0.7.5.tar.gz",
        "has_sig": false,
        "md5_digest": "576e1f063b8e74dbfeda02d978564987",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29844,
        "upload_time": "2015-03-31T22:56:47",
        "url": "https://files.pythonhosted.org/packages/db/40/6ffc855c365769c454591ac30a25e9ea0b3e8c952a1259141f5b9878bd3d/tabulate-0.7.5.tar.gz"
      }
    ],
    "0.7.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2379c6dc2e47621cdd63f805af331a08",
          "sha256": "a5e1ccced2486fba2f7ed891810372d2bca0b8aa0d6e67fd8343c923b3a59081"
        },
        "downloads": 39,
        "filename": "tabulate-0.7.6b-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2379c6dc2e47621cdd63f805af331a08",
        "packagetype": "bdist_wheel",
        "python_version": "any",
        "size": 28678,
        "upload_time": "2016-11-07T15:47:34",
        "url": "https://files.pythonhosted.org/packages/ef/47/af45e82d638582e87ba232136d2326d55c5afbc340f4fb2b4f8ab8dc4777/tabulate-0.7.6b-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2dbe96fc34a6f7b1e5280be5811719ac",
          "sha256": "758b6dea17d8d49f4ca905edde67d793ee9c2dc6a6b1dfdcf96afcd0cce37dc7"
        },
        "downloads": 43,
        "filename": "tabulate-0.7.6b.tar.gz",
        "has_sig": false,
        "md5_digest": "2dbe96fc34a6f7b1e5280be5811719ac",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 34423,
        "upload_time": "2016-11-07T15:45:08",
        "url": "https://files.pythonhosted.org/packages/44/57/d222e9533c807a0a0c3f44cfa5fbbbbef4d790ea3034d20a1489db7c9600/tabulate-0.7.6b.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1d2b3c956a3c76483c252bf6076aec66",
          "sha256": "986f55f27a736500827ddf6e83722ea3ac5be0c5818330c7951bfc46368307fe"
        },
        "downloads": 40,
        "filename": "tabulate-0.7.6c.tar.gz",
        "has_sig": false,
        "md5_digest": "1d2b3c956a3c76483c252bf6076aec66",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 39138,
        "upload_time": "2016-11-07T15:57:26",
        "url": "https://files.pythonhosted.org/packages/3c/c5/21d369772844af67e3c70990eba3c97d692ef87cf4fcc11162a84bf496a4/tabulate-0.7.6c.tar.gz"
      }
    ],
    "0.7.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "888bfc7a734dae2d2069c2f05f28f9f1",
          "sha256": "1f07f6252b20cdc4ed744b598b5fa8362638988b50a62f3e2ad76c97fc02eef2"
        },
        "downloads": 91841,
        "filename": "tabulate-0.7.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "888bfc7a734dae2d2069c2f05f28f9f1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 31714,
        "upload_time": "2016-11-07T16:03:54",
        "url": "https://files.pythonhosted.org/packages/a5/8d/86bf900d62216e2be7806d2ff4615cb7da54e13aeb7765549310c355cbae/tabulate-0.7.7-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "39a21aaa9c10be0749c545be34552559",
          "sha256": "83a0b8e17c09f012090a50e1e97ae897300a72b35e0c86c0b53d3bd2ae86d8c6"
        },
        "downloads": 7531,
        "filename": "tabulate-0.7.7.tar.gz",
        "has_sig": false,
        "md5_digest": "39a21aaa9c10be0749c545be34552559",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 39140,
        "upload_time": "2016-11-07T16:03:57",
        "url": "https://files.pythonhosted.org/packages/1c/a1/3367581782ce79b727954f7aa5d29e6a439dc2490a9ac0e7ea0a7115435d/tabulate-0.7.7.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "888bfc7a734dae2d2069c2f05f28f9f1",
        "sha256": "1f07f6252b20cdc4ed744b598b5fa8362638988b50a62f3e2ad76c97fc02eef2"
      },
      "downloads": 91841,
      "filename": "tabulate-0.7.7-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "888bfc7a734dae2d2069c2f05f28f9f1",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 31714,
      "upload_time": "2016-11-07T16:03:54",
      "url": "https://files.pythonhosted.org/packages/a5/8d/86bf900d62216e2be7806d2ff4615cb7da54e13aeb7765549310c355cbae/tabulate-0.7.7-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "39a21aaa9c10be0749c545be34552559",
        "sha256": "83a0b8e17c09f012090a50e1e97ae897300a72b35e0c86c0b53d3bd2ae86d8c6"
      },
      "downloads": 7531,
      "filename": "tabulate-0.7.7.tar.gz",
      "has_sig": false,
      "md5_digest": "39a21aaa9c10be0749c545be34552559",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 39140,
      "upload_time": "2016-11-07T16:03:57",
      "url": "https://files.pythonhosted.org/packages/1c/a1/3367581782ce79b727954f7aa5d29e6a439dc2490a9ac0e7ea0a7115435d/tabulate-0.7.7.tar.gz"
    }
  ]
}