{
  "info": {
    "author": "Ella Development Team",
    "author_email": "dev@ellaproject.cz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3"
    ],
    "description": "Django AppData\n##############\n\nExtandable field and related tools that enable Django apps to extend your\nreusable app.\n\nMotivation\n**********\n\nWhen working with reusable django apps we often found that we needed to add\nsomething extra to the model or form the app provided. Some apps try to solve\nthis by providing a flexible model definition and a pluggable form (see\n`django.contrib.comments` for an exmple of this approach) but even then it\nleads to some duplication of efforts.\n\n`django-appdata` app tries, through `AppDataField`, `MultiForm` and `AppDataModelAdmin`,\nto provide a standardised approach to extending existing apps.\n\nExtending Models\n****************\n\nWhen you have an extendable django app using the `AppDataField`::\n\n    from django.db import models\n    from app_data import AppDataField\n\n    class BlogPost(models.Model):\n        text = models.TextField()\n        app_data = AppDataField()\n\nyour code can register a namespace on any (or all) `AppDataField` and store\nit's own data there by registering a *container* (subclass of\n`AppDataContainer`). To define the data you use django's form framework::\n\n    from django.forms.models import ModelMultipleChoiceField\n    from app_data import app_registry, AppDataForm, AppDataContainer\n\n    from .models import Tag\n\n    class TaggingAppDataForm(AppDataForm):\n        public_tags = ModelMultipleChoiceField(Tag.objects.all())\n        admin_tags = ModelMultipleChoiceField(Tag.objects.all())\n\n    class TaggingAppDataContainer(AppDataContainer):\n        form_class = TaggingAppDataForm\n        \n        def tag_string(self):\n            print ', '.join(t.name for t in self.public_tags)\n\n    app_registry.register('tagging', TaggingAppDataContainer)\n\nThis should give you access to `'tagging'` namespace in any defined `AppDataField`::\n\n    from blog_app.models import BlogPost\n\n    bp = BlogPost()\n    assert bp.app_data.tagging.tag_string() == \"\"\n\n\nAdditional Options\n~~~~~~~~~~~~~~~~~~\n\nNote that if you don't need to add custom methods to your container you can\njust use a factory to create the subclass::\n\n    app_registry.register('tagging', AppDataContainer.from_form(TaggingAppDataForm))\n\nAdditionaly you can restrict the registration to a given model::\n\n    from blog_app.models import BlogPost\n\n    app_registry.register('tagging', TaggingAppDataContainer, BlogPost)\n\nExtending Forms\n***************\n\n`django-appdata` supplies a `MultiForm` class - a wrapper around django's `ModelForm`\nwith optional added sub-forms that corresponds to namespaces registered in the\nmodel's `AppDataField`, typically the extendable app would create and use a\n`MultiForm` instead of a regular `ModelForm`::\n\n    from app_data.forms import multiform_factory\n    from .models import BlogPost\n\n    BlogPostMultiForm = multiform_factory(BlogPost)\n\nAnd when using that app any project can add additional sub-forms to that `MultiForm`::\n\n    from blog_app.forms import BlogPostMultiForm\n\n    BlogPostMultiForm.add_form('tagging', {'fields': ['public_tags']})\n\nThis way when the reusable app's code can remain unchanged and we can inject\nadditional form logic to its processing.\n\nAdditional Options\n~~~~~~~~~~~~~~~~~~\n\nAny arguments and keyword arguments are passed without change to the\n`ModelForm` class the `MultiForm` is wrapping so even if you have custom args\nfor your `ModelForm` everything will still work::\n\n    from django.forms.models import BaseModelForm\n\n    class ModelFormWithUser(ModelForm):\n        def __init__(self, user, *args, **kwargs):\n            self.user = user\n            super(ModelFormWithUser, self).__init__(*args, **kwargs)\n\n    BlogPostMultiForm = multiform_factory(BlogPost, form=ModelFormWithUser)\n\nAnd of course you are not limited to the use of a factory function::\n\n    from app_data import MultiForm\n\n    class MyMultiForm(MultiForm):\n        ModelForm = BlogPostModelForm\n\nMultiForms in Admin\n*******************\n\nIf you wish to add your own code to the admin interface, just use\n`AppDataModelAdmin`::\n\n    from django.contrib import admin\n    from app_data.admin import AppDataModelAdmin\n    from blog_app.models import BlogPost\n\n    class BlogPostAdmin(AppDataModelAdmin):\n        # due to bug in django's admin validation we need to use\n        # declared_fieldsets instead of just fieldsets\n        declared_fieldsets = [\n            (None, {'fields': ['text', ]}),\n            ('Tagging', {'fields': [('tagging.public_tags', 'tagging.admin_tags')]})\n        ]\n    admin.site.register(BlogPost, BlogPostAdmin)\n\nAdditional Options\n~~~~~~~~~~~~~~~~~~\n\nAs with django's admin and forms you can supply your own `MultiForm` class by\nusing the `multiform` attribute of `AppDataModelAdmin`.\n\nBehind the scenes\n*****************\n\n`django-appdata` uses a `TextField` to store the data on the model using JSON\nand django's forms framework for (de)serialization and validation of the data.\n\nWhen accessing the containers in the field we will try to locate the\nappropriate container in the registry. If none is found, plain data will be\nreturned if present (dict). To assure everything working properly we recommend\nputting some sort of init code in place for your project that will make sure all\nthe registration is done before any actual code is run. We are using a module\ncalled `register` in our apps and then a `piece of code`_ similar to admin's\nautodiscover to iterate through installed apps and load this module.\n\n.. _`piece of code`: https://github.com/ella/ella/blob/master/ella/utils/installedapps.py#L27\n\nBuild status\n************\n\n:Master branch:\n\n  .. image:: https://secure.travis-ci.org/ella/django-appdata.png?branch=master\n     :alt: Travis CI - Distributed build platform for the open source community\n     :target: http://travis-ci.org/#!/ella/django-appdata",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ella/django-appdata/",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-appdata",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-appdata/",
    "release_url": "https://pypi.org/project/django-appdata/0.1.6/",
    "requires_python": null,
    "summary": "Extandable field that enables Django apps to store their data on your models.",
    "version": "0.1.6"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "16b6849fd53cb8d78c0866ee4ca0bb2a",
          "sha256": "8219a42aad7718f6de732be0ff23962b0561d0394d7ac55d93d33ee11a94508d"
        },
        "downloads": 3065,
        "filename": "django-appdata-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "16b6849fd53cb8d78c0866ee4ca0bb2a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 39950,
        "upload_time": "2012-09-19T08:16:38",
        "url": "https://files.pythonhosted.org/packages/88/39/bf6b37eea2306b7ac4191cf59c4a5ddd3af41d0b89595b0ce2ae424c3b15/django-appdata-0.0.1.tar.gz"
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bda94d0055286e616e6150eab6389e95",
          "sha256": "f1ec89bcc4b61ea02278341ed597b83ecb84cfdac5d80acfbdc4885fd8c031a9"
        },
        "downloads": 3511,
        "filename": "django-appdata-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bda94d0055286e616e6150eab6389e95",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40753,
        "upload_time": "2012-09-19T23:46:19",
        "url": "https://files.pythonhosted.org/packages/82/ac/4f69f69c941f21fc9393a6e6aee7e994037526cd47005dc3f61b3246f012/django-appdata-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2392cf5075ac345126f3a7425d0199f7",
          "sha256": "2752babdb4a441e4091496fa7aaa718c7bfce9163b7a9e7c4a1725d543f701d5"
        },
        "downloads": 2677,
        "filename": "django-appdata-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2392cf5075ac345126f3a7425d0199f7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40884,
        "upload_time": "2012-12-04T15:58:40",
        "url": "https://files.pythonhosted.org/packages/29/7c/707f881a5284c376ad44927fbc481ce5756f48c7b3fcfbf287c0431d397d/django-appdata-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0ef06086091f1c8fb299fc02119efc7f",
          "sha256": "98b1d790ce5cab066a9af4f505f1868b1087522c9706ebbca5381ccb36492c5a"
        },
        "downloads": 3232,
        "filename": "django-appdata-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0ef06086091f1c8fb299fc02119efc7f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17010,
        "upload_time": "2012-12-14T14:05:38",
        "url": "https://files.pythonhosted.org/packages/00/f1/9b18ff73961f402dde4f319e6e03df1f33835a1a9a2250937bc394fffc8b/django-appdata-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0062a0ee7de93b65cb1772c9f7977ebe",
          "sha256": "081c3a31f9446141356bc83060d826795edc5017aa4e635ba35e69ab6d5ff43c"
        },
        "downloads": 18713,
        "filename": "django-appdata-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0062a0ee7de93b65cb1772c9f7977ebe",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14832,
        "upload_time": "2013-07-03T20:25:43",
        "url": "https://files.pythonhosted.org/packages/e0/0f/cd8c936f90329c39fd5d8c47873dd35d63f8f0a1cebbc03ee02adebee2ad/django-appdata-0.1.3.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f488f2e2bdd8f6a8bbf287b5e9c79eff",
          "sha256": "c1438a87ebb8a8a38072ade0003ad48e81b6de9969dcf2d963f7a2ebdb445f79"
        },
        "downloads": 89469,
        "filename": "django-appdata-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f488f2e2bdd8f6a8bbf287b5e9c79eff",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15257,
        "upload_time": "2015-03-12T21:51:14",
        "url": "https://files.pythonhosted.org/packages/52/75/66b478fbc55e1644cebec3425556586b15a26dd9ffd18fb7266feddb29b0/django-appdata-0.1.4.tar.gz"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cd3bd83c95768e576e1b8e2b5e145f3c",
          "sha256": "aec2f50a7e137984b1b1fbc2480fae8294c5076b36a0c1bfdcfd62f600364bd6"
        },
        "downloads": 15932,
        "filename": "django-appdata-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "cd3bd83c95768e576e1b8e2b5e145f3c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17705,
        "upload_time": "2015-12-07T17:30:51",
        "url": "https://files.pythonhosted.org/packages/78/a0/0c43842db61efc82111f62577a92e20d98383a6d589687b59429fdc28b54/django-appdata-0.1.5.tar.gz"
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d213f2a01902c27d4ecd3d05985ba04f",
          "sha256": "f389fdf9fdff2f0b0ce2ef76380c4ad4866ea65c33a43d07d06042a0b61fe916"
        },
        "downloads": 722,
        "filename": "django_appdata-0.1.6-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "d213f2a01902c27d4ecd3d05985ba04f",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 14735,
        "upload_time": "2016-10-26T22:24:05",
        "url": "https://files.pythonhosted.org/packages/0f/b0/6b0d378b62092e38076ece714be7b7383ab51dd2ebf7c7f3d2df2f2b919d/django_appdata-0.1.6-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "69376d618a5b90628ef12c8a92811a67",
          "sha256": "e7edce730852000ae255e2dc87967f2e48cf23c485586167aebe64bc8a782178"
        },
        "downloads": 613,
        "filename": "django-appdata-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "69376d618a5b90628ef12c8a92811a67",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15403,
        "upload_time": "2016-10-26T22:24:02",
        "url": "https://files.pythonhosted.org/packages/d9/9c/9f60bc5044dd41d98f66a67436d0d62ca8e9de400a9faaa7ac7d70ab2612/django-appdata-0.1.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d213f2a01902c27d4ecd3d05985ba04f",
        "sha256": "f389fdf9fdff2f0b0ce2ef76380c4ad4866ea65c33a43d07d06042a0b61fe916"
      },
      "downloads": 722,
      "filename": "django_appdata-0.1.6-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "d213f2a01902c27d4ecd3d05985ba04f",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "size": 14735,
      "upload_time": "2016-10-26T22:24:05",
      "url": "https://files.pythonhosted.org/packages/0f/b0/6b0d378b62092e38076ece714be7b7383ab51dd2ebf7c7f3d2df2f2b919d/django_appdata-0.1.6-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "69376d618a5b90628ef12c8a92811a67",
        "sha256": "e7edce730852000ae255e2dc87967f2e48cf23c485586167aebe64bc8a782178"
      },
      "downloads": 613,
      "filename": "django-appdata-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "69376d618a5b90628ef12c8a92811a67",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15403,
      "upload_time": "2016-10-26T22:24:02",
      "url": "https://files.pythonhosted.org/packages/d9/9c/9f60bc5044dd41d98f66a67436d0d62ca8e9de400a9faaa7ac7d70ab2612/django-appdata-0.1.6.tar.gz"
    }
  ]
}