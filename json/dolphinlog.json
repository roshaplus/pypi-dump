{
  "info": {
    "author": "Xaratustra",
    "author_email": "shahab.sanjari@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Environment :: Console",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Communications :: Ham Radio"
    ],
    "description": "dolphinlog\r\n==========\r\n\r\nThis program has been renamed to ``dolphinlog`` to avoid naming conflict with another package.\r\n\r\nThis is a log program for amateur radio\r\n`(HAM) <https://en.wikipedia.org/wiki/Amateur_radio>`__ operators for\r\ndaily use. There are tons of HAM log programs out there. This is yet\r\nanother one, aiming to be free, modern but as well ultra simple by using\r\nonly the command line interface in order to store QSO data in a SQLite\r\ndatabase. An export function to ADIF-3 \\*.adi is also available.\r\n\r\n| There are no editors, this means that the database file should be\r\n  viewed using standard viewer programs, of which also many exist. Some\r\n  examples are standalone programs such as\r\n  `sqlitebrowser <https://github.com/sqlitebrowser/sqlitebrowser>`__ or\r\n  browser plugins such as `this\r\n  one <https://addons.mozilla.org/en-US/firefox/addon/sqlite-manager/>`__.\r\n  This leaves the HAM a great deal of freedom to import, export in/to\r\n  any format and manage the database. The typical usage of such a log\r\n  program is for running on an ideally small or embedded computer such\r\n  as `RaspberryPi2 <https://en.wikipedia.org/wiki/Raspberry_Pi>`__, as a\r\n  HAM computer, where possibly also other HAM related software such as\r\n  `fldigi <https://sourceforge.net/projects/fldigi/>`__ are running, or\r\n  HAM related hardware attached, such as\r\n  `dongles <http://www.funcubedongle.com/>`__ are also running. The name\r\n  of this program is inspired by other HAM radio logger software\r\n  available on the internet that have an animal name\r\n| in their title.\r\n\r\nInstallation\r\n^^^^^^^^^^^^\r\n\r\n``dolphinlog`` is by nature platform independent. The simplest way to\r\ninstall it is to use PyPI:\r\n\r\n::\r\n\r\n    pip install dolphinlog\r\n\r\n| Other than that ``dolphinlog`` needs just a working Python 3\r\n  installation. So whatever OS you have, just put the script\r\n| somewhere you can call it, e.g. by symbolic linking like this:\r\n\r\n::\r\n\r\n    ln -s dolphinlog /usr/local/bin/dolphinlog\r\n\r\nUsage\r\n^^^^^\r\n\r\nJust type:\r\n\r\n::\r\n\r\n    dolphinlog\r\n\r\nIn the command line and the program starts. If you like to skip an\r\nentry, just press enter. If no command line arguments are given at\r\ninvocation time, then the program creates a folder in the home\r\ndirectory:\r\n\r\n::\r\n\r\n    ~/.dolphinlog/dolphinlog.sqlite\r\n\r\notherwise a specific database filename can be given by the ``-db``\r\nswitch. ``-v`` switch increases the verbosity. If the switch ``-adi`` is\r\nprovided, then an ``*.adi`` file is exported. For this export either the\r\ndefault database file name is used, or a database filename should be\r\ngiven.\r\n\r\nDB Fields and ADIF-3 export\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\n``dolphinlog`` supports export to function to the ADIF3 \\*.adi format.\r\nThe `ADIF 3 <http://adif.org/>`__ standard has a very comprehensive list\r\nof fields. In order to find a minimalistic implementation of export\r\nfunction, ``dolphinlog`` adapts the minimum ADIF record fields required\r\nby the website `eQSL <https://www.eqsl.cc>`__, but also includes\r\nadditional fields. Minimum ADIF-3 fields required by eQSL:\r\n\r\n+-------------+------------------------------------------+\r\n| Field       | Description                              |\r\n+=============+==========================================+\r\n| QSO\\_DATE   | date on which the QSO started YYYYMMDD   |\r\n+-------------+------------------------------------------+\r\n| TIME\\_ON    | QSO time in UTC                          |\r\n+-------------+------------------------------------------+\r\n| CALL        | the contacted station's Callsign         |\r\n+-------------+------------------------------------------+\r\n| MODE        | QSO Mode                                 |\r\n+-------------+------------------------------------------+\r\n| BAND        | QSO Band                                 |\r\n+-------------+------------------------------------------+\r\n\r\nADIF-3 fields fields recommended by eQSL:\r\n\r\n+----------+----------------+\r\n| Field    | Description    |\r\n+==========+================+\r\n| FREQ     | QSO frequency  |\r\n|          | in Megahertz   |\r\n+----------+----------------+\r\n| PROP\\_MO | QSO            |\r\n| DE       | propagation    |\r\n|          | mode           |\r\n+----------+----------------+\r\n| PROGRAMI | identifies the |\r\n| D        | name of the    |\r\n|          | logger,        |\r\n|          | converter, or  |\r\n|          | utility that   |\r\n|          | created or     |\r\n|          | processed this |\r\n|          | ADIF file      |\r\n+----------+----------------+\r\n| QSLMEG   | QSL card       |\r\n|          | message        |\r\n+----------+----------------+\r\n| RST\\_SEN | signal report  |\r\n| T        | sent to the    |\r\n|          | contacted      |\r\n|          | station        |\r\n+----------+----------------+\r\n\r\nADIF-3 fields additionally used by ``dolphinlog``:\r\n\r\n+----------+----------------+\r\n| Field    | Description    |\r\n+==========+================+\r\n| NAME     | the contacted  |\r\n|          | station's      |\r\n|          | operator's     |\r\n|          | name           |\r\n+----------+----------------+\r\n| RST\\_RCV | signal report  |\r\n| D        | from the       |\r\n|          | contacted      |\r\n|          | station        |\r\n+----------+----------------+\r\n| RX\\_PWR  | the contacted  |\r\n|          | station's      |\r\n|          | transmitter    |\r\n|          | power in watts |\r\n+----------+----------------+\r\n| TX\\_PWR  | the logging    |\r\n|          | station's      |\r\n|          | power in watts |\r\n+----------+----------------+\r\n| GRIDSQUA | the contacted  |\r\n| RE       | station's      |\r\n|          | 2-character,   |\r\n|          | 4-character,   |\r\n|          | 6-character,   |\r\n|          | or 8-character |\r\n|          | Maidenhead     |\r\n|          | Grid Square    |\r\n+----------+----------------+\r\n| NOTES    | QSO Notes      |\r\n+----------+----------------+\r\n\r\nThat\u2019s basically it folks. Enjoy.",
    "docs_url": null,
    "download_url": "https://github.com/xaratustrah/dolphinlog/tarball/0.2.3",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/xaratustrah/dolphinlog",
    "keywords": "HAM,Logging,Amateur Radio,QSO",
    "license": "GPLv2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dolphinlog",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/dolphinlog/",
    "release_url": "https://pypi.org/project/dolphinlog/0.2.3/",
    "requires_python": null,
    "summary": "Yet another HAM radio logger using SQLite with ADIF-3 export support.",
    "version": "0.2.3"
  },
  "releases": {
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e2498712414111fc52bb1b7f3835119c",
          "sha256": "a2c720b45f50132707727d60bc0a290902e3e8bbce9b64a090104a0d4840e884"
        },
        "downloads": 723,
        "filename": "dolphinlog-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e2498712414111fc52bb1b7f3835119c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6256,
        "upload_time": "2016-01-10T00:41:32",
        "url": "https://files.pythonhosted.org/packages/ac/52/21fc64d8f31f533e8ae4d0e910be51aef471d55909186150d6f0e1a0754d/dolphinlog-0.2.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e2498712414111fc52bb1b7f3835119c",
        "sha256": "a2c720b45f50132707727d60bc0a290902e3e8bbce9b64a090104a0d4840e884"
      },
      "downloads": 723,
      "filename": "dolphinlog-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e2498712414111fc52bb1b7f3835119c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6256,
      "upload_time": "2016-01-10T00:41:32",
      "url": "https://files.pythonhosted.org/packages/ac/52/21fc64d8f31f533e8ae4d0e910be51aef471d55909186150d6f0e1a0754d/dolphinlog-0.2.3.tar.gz"
    }
  ]
}