{
  "info": {
    "author": "Patrick Allain",
    "author_email": "patralla@gmail.com",
    "bugtrack_url": "",
    "classifiers": [],
    "description": "==========\r\npydocktors\r\n==========\r\n\r\n.. image:: https://travis-ci.org/Patouche/pydocktors.svg?branch=master\r\n    :target: https://travis-ci.org/Patouche/pydocktors\r\n.. image:: https://codecov.io/gh/Patouche/pydocktors/branch/master/graph/badge.svg\r\n    :target: https://codecov.io/gh/Patouche/pydocktors\r\n.. image:: https://img.shields.io/pypi/v/pydocktors.svg\r\n    :target: https://pypi.python.org/pypi/pydocktors\r\n\r\n------------\r\nWhat is it ?\r\n------------\r\n\r\nOn top of docker, pydocktors is a simple way to declare a decorator to start and shutdown a docker container.\r\n\r\n---------------\r\nWhy to use it ?\r\n---------------\r\n\r\nYou can use it anywhere you want in your python code ! This include test and code...\r\n\r\nFor example, if you have a application that require a database (for example, MySQL or Neo4J) but you don't want to install the database globally on your system, you can use the docker decorator !\r\n\r\nOr you may need to load a application such as Nginx or Eureka when running your code locally without installing it, this docker decorator is made for you !\r\n\r\n--------\r\nExamples\r\n--------\r\n\r\nAll of them are also available in the `examples <./examples/README.md>`_. Each example are designed to be independent.\r\n\r\nStarting a Nginx with a your content and your configuration::\r\n\r\n    @docktors.docker(\r\n        inject_arg=True,\r\n        image='nginx',\r\n        ports=[(80, 8080)],\r\n        volumes=[\r\n            (TARGET_DIR, '/usr/share/nginx/html', 'ro'),\r\n            (NGINX_CONF, '/etc/nginx/nginx.conf', 'ro')\r\n        ],\r\n        wait_for_port=8080,\r\n    )\r\n    def main(container):\r\n        logger.info('Nginx container with id %s is %s. Visit http://localhost:8080/', container.id, container.status)\r\n\r\nFAQ\r\n---\r\n\r\n*Why this name ?*\r\n\r\nBecause it's the contraction of 3 famous words : *python*, *docker* and *decorators*\r\n\r\n**Authors :** Patrick Allain\r\n**License :** MIT",
    "docs_url": null,
    "download_url": "https://github.com/Patouche/pydocktors/archive/v0.0.1.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Patouche/pydocktors",
    "keywords": "docker,decorator,testing,example",
    "license": "The MIT License (MIT)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pydocktors",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pydocktors/",
    "release_url": "https://pypi.org/project/pydocktors/0.0.1/",
    "requires_python": "",
    "summary": "Simple docker decorator",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": []
  },
  "urls": []
}