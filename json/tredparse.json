{
  "info": {
    "author": "Haibao Tang",
    "author_email": "htang@humanlongevity.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "# TREDPARSE: HLI Short Tandem Repeat (STR) caller\n\n[![Travis-CI](https://travis-ci.org/humanlongevity/tredparse.svg?branch=master)](https://travis-ci.org/humanlongevity/tredparse)\n\n| | |\n|---|---|\n| Author | Haibao Tang ([tanghaibao](http://github.com/tanghaibao)) |\n| | Smriti Ramakrishnan ([smr18](http://github.com/smr18)) |\n| Email | <htang@humanlongevity.com> |\n| License | See included LICENSE |\n\n## Description\n\nProcess a list of TRED (trinucleotide repeats disease) loci, and infer\nthe most likely genotype.\n\n## Installation\n\nMake sure your Python version &gt;= 2.7 (tested in ubuntu, Python 3 not yet\nsupported):\n\n```bash\npip install --user -U git+git://github.com/humanlongevity/tredparse.git\n```\n\nFor accessing BAMs that are located on S3, please refer to\n`docker/tredparse.dockerfile` for installation of SAMTOOLS/pysam with S3\nsupport.\n\nOr, you can simply build and use the docker image:\n\n```bash\ndocker pull humanlongevity/tredparse\ndocker run -v `pwd`:`pwd` -w `pwd` humanlongevity/tredparse \\\n    tred.py --tred HD test.bam\n```\n\n## Example\n\nFirst specify the input bam paths and sample keys in a CSV file, like\n`tests/samples.csv`. This file is comma separated:\n\n```\n#SampleKey,BAM,TRED\nt001,tests/t001.bam,HD\nt002,tests/t002.bam,DM1\n```\n\nIf third column is omitted, then all 30 TREDs are scanned. For example:\n\n```\n#SampleKey,BAM\nt001,tests/t001.bam\nt002,tests/t002.bam\n```\n\nPlease also note that the BAM path can start with `http://` or `s3://`, provided\nthat the corresponding BAM index can be found.\n\nRun `tred.py` on sample CSV file and generate TSV file with the\ngenotype:\n\n```bash\ntred.py tests/samples.csv --workdir work\n```\n\nHighlight the potential risk individuals:\n\n```bash\ntredreport.py work/*.json --tsv work.tsv\n```\n\nThe inferred \"at-risk\" individuals show up in results:\n\n```bash\n[DM1] - Myotonic dystrophy 1\nrep=CAG inherit=AD cutoff=50 n_risk=1 n_carrier=0 loc=chr19:45770205-45770264\nSampleKey inferredGender Calls DM1.FR                          DM1.PR     DM1.RR  DM1.PP\n     t002        Unknown  5|62   5|24  ...|1;39|1;40|1;42|1;43|1;46|2  49|3;50|8       1\n\n[HD] - Huntington disease\nrep=CAG inherit=AD cutoff=40 n_risk=1 n_carrier=0 loc=chr4:3074877-3074933\nSampleKey inferredGender  Calls HD.FR                           HD.PR HD.RR  HD.PP\n     t001        Unknown  15|41  15|4  ...|1;21|1;24|2;29|1;34|1;41|1            1\n```\n\nOne particular individual `t001` appears to have `15/41` call (one allele at `15` CAGs\nand the other at `41` CAGs) at Huntington disease locus (HD). Since the risk cutoff\nis `40`, we have inferred it to be at-risk.\n\nA `.report.txt` file will also be generated that contains a summary of\nnumber of people affected by over-expanded TREDs as well as population allele\nfrequency.\n\nTo better understand the uncertainties in the prediction, one call plot the\nlikelihood surface based on the model. Using the same example as above at the\nHuntington disease case, we can run a command on the JSON output, with option\n`--tred HD` to specify the locus.\n\n```bash\ntredplot.py likelihood work/t001.json --tred HD\n```\n\nThis generates the following plot:\n\n![](https://www.dropbox.com/s/2mmfjjpnmcl4jlo/likelihood2.png?raw=1)\n\n## Server demo\n\nThe server/client allows `tredparse` to be run as a service, also showing the\ndetailed debug information for the detailed computation.\n\n![](https://www.dropbox.com/s/23tmoy0wtb3alwh/screencast.gif?raw=1)\n\nInstall `meteor` if you don't have it yet.\n\n```bash\ncurl https://install.meteor.com/ | sh\n```\n\nThen build the docker image to run the command, then run the server.\n\n```bash\ncd docker\nmake build\ncd ../server\nmeteor npm install\nmeteor\n```\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/tanghaibao/tredparse",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tredparse",
    "platform": "",
    "project_url": "https://pypi.org/project/tredparse/",
    "release_url": "https://pypi.org/project/tredparse/0.7.6/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Short Tandem Repeat (STR) genotyper",
    "version": "0.7.6"
  },
  "releases": {
    "0.7.4": [],
    "0.7.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7fc8af93727e306d1e09e3730d150820",
          "sha256": "bdff54fe29641100d6cadc4f82f765de98447c53bce117bd27626a420b5b04a5"
        },
        "downloads": 0,
        "filename": "tredparse-0.7.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7fc8af93727e306d1e09e3730d150820",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 58637,
        "upload_time": "2017-08-23T19:20:10",
        "url": "https://files.pythonhosted.org/packages/27/ce/05332b56a32fa249b226f606bca1b6ad4c0292a8a26541a10f23cea87234/tredparse-0.7.5.tar.gz"
      }
    ],
    "0.7.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e984ba42fe29283d91e35de27a03cec1",
          "sha256": "6b86e1537404b62acf063d0e6c7cac173094d4d5a549a9430346b5671dfba514"
        },
        "downloads": 0,
        "filename": "tredparse-0.7.6.tar.gz",
        "has_sig": false,
        "md5_digest": "e984ba42fe29283d91e35de27a03cec1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 245498,
        "upload_time": "2017-09-17T05:23:11",
        "url": "https://files.pythonhosted.org/packages/1d/5d/560a1d2764bbb1ab47c1928ed611e130b3ac09ec97e47a35ddf33eb1fd95/tredparse-0.7.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e984ba42fe29283d91e35de27a03cec1",
        "sha256": "6b86e1537404b62acf063d0e6c7cac173094d4d5a549a9430346b5671dfba514"
      },
      "downloads": 0,
      "filename": "tredparse-0.7.6.tar.gz",
      "has_sig": false,
      "md5_digest": "e984ba42fe29283d91e35de27a03cec1",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 245498,
      "upload_time": "2017-09-17T05:23:11",
      "url": "https://files.pythonhosted.org/packages/1d/5d/560a1d2764bbb1ab47c1928ed611e130b3ac09ec97e47a35ddf33eb1fd95/tredparse-0.7.6.tar.gz"
    }
  ]
}