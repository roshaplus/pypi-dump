{
  "info": {
    "author": "Nikolay Novik",
    "author_email": "nickolainovik@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "aiohttp_admin\n=============\n.. image:: https://travis-ci.org/jettify/aiohttp_admin.svg?branch=master\n    :target: https://travis-ci.org/jettify/aiohttp_admin\n.. image:: https://coveralls.io/repos/github/jettify/aiohttp_admin/badge.svg?branch=master\n    :target: https://coveralls.io/github/jettify/aiohttp_admin?branch=master\n\n**aiohttp_admin** will help you on building an admin interface\non top of an existing data model.\n\n**aiohttp_admin** using following design philosophy:\n\n1) backend and frontend of admin views are decoupled by REST API as\nresult it is possible to change admin views without changing any **python**\ncode. On browser side user interacts with single page application (ng-admin).\n\n.. image:: https://cdn.rawgit.com/jettify/aiohttp_admin/master/docs/diagram.svg\n    :align: center\n\n2) admin views are database agnostic, if it is possible to implement REST API\nit should be strait forward to add admin views. Some filtering features may\nbe disabled if database do not support some kind of filtering.\n\n\n\n\n.. image:: https://raw.githubusercontent.com/jettify/aiohttp_admin/master/docs/admin_polls.png\n    :align: center\n\nRun Tests\n---------\nFist of all just clone repository::\n\n    $ git clone git@github.com:jettify/aiohttp_admin.git\n\nInstall docker_ using instruction_ from the official site, for OSX we\nuse docker-machine_.\n\nCreate virtualenv with python3.5 (older version are not supported). For example\nusing *virtualenvwrapper* commands could look like::\n\n   $ cd aiohttp_admin\n   $ mkvirtualenv --python=`which python3.5` aiohttp_admin\n\n\nAfter that please install libraries required for development::\n\n   $ pip install -r requirements-dev.txt\n\nCongratulations, you are ready to run the test suite::\n\n    $ py.test --dp -s -v ./tests\n\nUnder the hood python docker client pulls images for PostgreSQL, MySQL\nand Mongodb. Fixtures start databases and insert testing data. You do not\nhave to install any database at all.\n\nNext time  `--dp` (docker pull) flag could be dropped since all required\nimages are cached on local machine. To make sure you have required images\nplease execute::\n\n    $ docker images\n\nAmong results you should find something like::\n\n    postgres  9.5  247a11721cbd  2 weeks ago  265.9 MB\n    mysql     5.7  63a92d0c131d  8 weeks ago  374.1 MB\n    mongo     2.6  150dd5b5bd1b  9 weeks ago  390.9 MB\n\n\nFor OSX users one extra step is required, before running tests, please\ninit environment variables::\n\n    $ eval $(docker-machine env default)\n    $ export DOCKER_MACHINE_IP=$(docker-machine ip)\n\n\nSupported backends\n------------------\n\n* PostgreSQL with, aiopg_ and sqlalchemy.core_\n* MySQL with aiomysql_ and sqlalchemy.core_\n* Mongodb with motor_\n\n\n\nRequirements\n------------\n\n* Python_ 3.5+\n* aiopg_ or aiomysql_ or motor_\n\n\n.. _Python: https://www.python.org\n.. _asyncio: http://docs.python.org/3.4/library/asyncio.html\n.. _aiopg: https://github.com/aio-libs/aiopg\n.. _aiomysql: https://github.com/aio-libs/aiomysql\n.. _motor: https://github.com/mongodb/motor\n.. _sqlalchemy.core: http://www.sqlalchemy.org/\n.. _PEP492: https://www.python.org/dev/peps/pep-0492/\n.. _docker: https://www.docker.com/\n.. _instruction: https://docs.docker.com/engine/installation/linux/ubuntulinux/\n.. _docker-machine: https://docs.docker.com/machine/\n\nCHANGES\n=======",
    "docs_url": null,
    "download_url": "https://github.com/jettify/aiohttp_admin",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jettify/aiohttp_admin",
    "keywords": null,
    "license": "Apache 2",
    "maintainer": null,
    "maintainer_email": null,
    "name": "aiohttp_admin",
    "platform": "POSIX",
    "project_url": "https://pypi.org/project/aiohttp_admin/",
    "release_url": "https://pypi.org/project/aiohttp_admin/0.0.1/",
    "requires_dist": [],
    "requires_python": null,
    "summary": "admin interface for aiohttp application",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "06334a5683ef7b73cc6608569ec0dea4",
          "sha256": "d2f26049e4d6632d1377b71b99ea86cb93030339f69a8e49d6562afe20281865"
        },
        "downloads": -1,
        "filename": "aiohttp-admin-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "06334a5683ef7b73cc6608569ec0dea4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1064973,
        "upload_time": "2018-01-02T20:35:15",
        "url": "https://files.pythonhosted.org/packages/d9/db/af3c6374539672baf8f81610d7112ca038d93ddae141d6ef90763da8aa94/aiohttp-admin-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "06334a5683ef7b73cc6608569ec0dea4",
        "sha256": "d2f26049e4d6632d1377b71b99ea86cb93030339f69a8e49d6562afe20281865"
      },
      "downloads": -1,
      "filename": "aiohttp-admin-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "06334a5683ef7b73cc6608569ec0dea4",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 1064973,
      "upload_time": "2018-01-02T20:35:15",
      "url": "https://files.pythonhosted.org/packages/d9/db/af3c6374539672baf8f81610d7112ca038d93ddae141d6ef90763da8aa94/aiohttp-admin-0.0.1.tar.gz"
    }
  ]
}