{
  "info": {
    "author": "myotest SA",
    "author_email": "dev@myotest.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Pike Modules"
    ],
    "description": "# Myotest client API\n\n## Setup\n\n  - Python > 3.4\n  - pip install -r requirement.txt\n\n## Install dev version in your notebook\n\nThis will install a python package named \"revo-client\" in your current environment\n\n##### Local version\n\n  - ```pip install -e {PATH TO YOUR REPO}```\n\n##### Repository version\n\n  - ```pip install revo-client```\n\n\n\n## Create Client\n\nBy default a connect will connect to the production server\n\n```python\nfrom myotest import Client\n\n# Connect to production server with your api token\nclient = Client(\"my-api-token\")\n\n# Connect to staging server\nclient = Client(\"my-api-token\", server=\"staging\")\n\n# Connect to another server\nclient = Client(\"my-api-token\", server=\"https://my-server\")\n\n# Create a client for another user ( you must be the user's coach to be able to get his information )\nclient = Client(\"my-api-token\", user_id=\"other-user-uuid\")\n\n```\n\n## Root queries\n\n```python\n\n# Fetch last workout that contains tags\nworkout = client.get_last_workout_with_tags([\"vam_high\", \"ranges\"])\n\n# Fetch workout with id\nworkout = client.get_workout_with_id(\"workout-uuid\")\n\n# Fetch current profile\nprofile = client.get_profile()\n\n```\n\n## Objects\n\n### Object :: Workout\n\n#### Attributes\n  - id (ID)\n  - title (string)\n  - start (datetime)\n  - end (datetime)\n  - type (string) workout type\n  - target_duration (timedelta) workout requested duration\n  - effective_duration (timedelta)\n  - slots (list of Object::Slot)\n  - datasets (list of Object::Dataset)\n  \n#### workout.get_dataset(name)\n  Return the dataset matching name, if the name is complete (i.e. \"mil-1\") the dataset is returned.\n  If the name is partial (i.e. \"mil\") the first dataset is returned (lower index)\n  \n#### workout.get_slots()\n  Return all workout slots in execution order\n  \n#### workout.get_slot_with_tags(tags)\n  Return the first slot (Object :: Slot) containing all tags, if any\n  \n  ```workout.get_slot_with_tags([\"vm_high])```\n  \n \n### Object :: Dataset\n\n#### Attributes\n  - id (ID)\n  - name (string)\n  - dataframe (Pandas dataframe)\n  - describe (dict) Full dataset describe\n  - avro_schema (dict)\n  - workout (Object::workout)\n\n### Object :: Slot\n\n#### Attributes\n  - id (ID)\n  - tags (list of string)\n  - type (string)\n  - value (Object::SlotValue)\n  - text (string)\n  - result (Object::SlotResult)\n  - end_time (datetime)\n  - start_time (datetime)\n  - power_type (string)\n  - analysis (list of dict)\n  - workout (Object::workout)\n\n### Object :: SlotResult\n\n#### Attributes\n  - power (dict) Describe of power **(\"max\",\"min\",\"std\",\"mean\",\"count\",\"median\")**\n  - speed (dict) Describe of speed **(\"max\",\"min\",\"std\",\"mean\",\"count\",\"median\")**\n  - gps_power (dict) Describe of gps_power **(\"max\",\"min\",\"std\",\"mean\",\"count\",\"median\")**\n  - gps_speed (dict) Describe of gps_speed **(\"max\",\"min\",\"std\",\"mean\",\"count\",\"median\")**\n  - distance (float) distance in meters\n  - gps_distance (float) distance in meters\n  - regularity_90 (float) regularity 90% of the time\n  - step_count_ratio (float) step vs run ratio\n  - regularity_median (float) median on regularity\n\n**gps_speed** and **gps_power** are only available if the mil contains those information, if \nthe user created a workout without gps, those values are null\n\n### Object :: SlotValue\n\n#### Attributes\n  - value (float) distance=meters, duration=seconds, repetition=count\n  - type (distance | duration | repetition )\n\n### Object :: Profile\n\n#### Attributes\n  - id (ID)\n  - full_name (string)\n  - gender (male|female)\n  - weight (float) in kilogram\n  - height (float) in meter\n  - leg_length (float) in meter\n  - waist (float) in meter\n  - vma (float)\n  - pma (float)\n  - birth_date (date)\n  - age (float) in years\n    \n  \n### Object :: AvroSchema\n\n#### Attributes\n  - name (string)\n  - type (string) record type\n  - fields (Array of dict)\n  \n  \n## Script Example\n\n```python\nfrom myotest import Client\n\nclient = Client(\"my-api-token\")\nworkout = client.get_last_workout_with_tags([\"vma_high\"]) \nslot = workout.get_slot_with_tags([\"vma_high\"])\nprofile = client.get_profile()\n\nprint(\n    \"Hello I'm {} and I am {} years old, my last\" \n    \"vma workout had a regularity of {}\".format(\n        profile.full_name, \n        profile.age, \n        slot.result.regularity_median))\n```",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Myotest/python-revo-client",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "revo-client",
    "platform": "",
    "project_url": "https://pypi.org/project/revo-client/",
    "release_url": "https://pypi.org/project/revo-client/0.4.3/",
    "requires_dist": [],
    "requires_python": ">=3",
    "summary": "Python client for Myotest smart coaching API",
    "version": "0.4.3"
  },
  "releases": {
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "05aa711bbbbfb80205ad2acab2ce16e2",
          "sha256": "937484fc491d074ccca895096f0706aff7c95547f33030e96200ebafa07d72e9"
        },
        "downloads": -1,
        "filename": "revo-client-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "05aa711bbbbfb80205ad2acab2ce16e2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10259,
        "upload_time": "2017-10-13T15:54:33",
        "url": "https://files.pythonhosted.org/packages/e6/b4/6d1fa273a4ceb0bcf096ad73b4c964b3a1df8b5401ba4b3d0f03f7da91f1/revo-client-0.3.3.tar.gz"
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6e2c1c03b5e2da9775f5ef9a2c7ed8cf",
          "sha256": "eaf138f25073e7d776663ddbc6a034d79dea4cf419a723490ee8617bf0520020"
        },
        "downloads": -1,
        "filename": "revo-client-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6e2c1c03b5e2da9775f5ef9a2c7ed8cf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11466,
        "upload_time": "2017-10-20T10:03:28",
        "url": "https://files.pythonhosted.org/packages/a1/2e/4d7bd7a81365e7debe4f046e6c2b489d9012525311597485ea7565400e9e/revo-client-0.4.0.tar.gz"
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "35d416c7ad8b7027622222aa82772d4e",
          "sha256": "33f85e138806004a459a3ba03e011efa90a90ab86527e9048071a758cd07ed9e"
        },
        "downloads": -1,
        "filename": "revo-client-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "35d416c7ad8b7027622222aa82772d4e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11565,
        "upload_time": "2017-10-24T06:56:34",
        "url": "https://files.pythonhosted.org/packages/b1/8d/fa7cdb56fe968e5dc4154521a649c34adb68360bcda8aea422595f14eb0c/revo-client-0.4.1.tar.gz"
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1092d9b1089f934bc3e69963b069e4f0",
          "sha256": "38c7c5314aa0f6d3d0fe838859f2286b11bc3407e37a54946e4cdfaf9c20b06a"
        },
        "downloads": -1,
        "filename": "revo-client-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1092d9b1089f934bc3e69963b069e4f0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11668,
        "upload_time": "2017-10-24T07:35:28",
        "url": "https://files.pythonhosted.org/packages/70/a1/97b7cd8dd6f2c9cc21deac9c34a949b4ca89a24af2efa17e25c56abeb6f4/revo-client-0.4.2.tar.gz"
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "233bc5e2ff64171b5ae5140bcd8e3c59",
          "sha256": "e9dcfa156860bba4cbcea0e849242764676ff671c3158b911746e877e705f688"
        },
        "downloads": -1,
        "filename": "revo-client-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "233bc5e2ff64171b5ae5140bcd8e3c59",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11672,
        "upload_time": "2017-10-24T08:37:30",
        "url": "https://files.pythonhosted.org/packages/c1/a5/f73e5fda4c70c23621decccfb161e39f8bf12f6fd4dd97d42e3de2462b2f/revo-client-0.4.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "233bc5e2ff64171b5ae5140bcd8e3c59",
        "sha256": "e9dcfa156860bba4cbcea0e849242764676ff671c3158b911746e877e705f688"
      },
      "downloads": -1,
      "filename": "revo-client-0.4.3.tar.gz",
      "has_sig": false,
      "md5_digest": "233bc5e2ff64171b5ae5140bcd8e3c59",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 11672,
      "upload_time": "2017-10-24T08:37:30",
      "url": "https://files.pythonhosted.org/packages/c1/a5/f73e5fda4c70c23621decccfb161e39f8bf12f6fd4dd97d42e3de2462b2f/revo-client-0.4.3.tar.gz"
    }
  ]
}