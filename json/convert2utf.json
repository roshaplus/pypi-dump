{
  "info": {
    "author": "x1ang.li",
    "author_email": "x@x1ang.li",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Internationalization",
      "Topic :: Text Editors",
      "Topic :: Text Processing :: General"
    ],
    "description": "Converts text files or source code files into UTF-8 encoding\r\n============================================================\r\n\r\nThis lightweight tool converts non-UTF-encoded (such as GB2312, GBK,\r\nBIG5 encoded) files to UTF-8 encoded files. It can either be executed\r\nfrom command line (CLI), or imported into other Python code.\r\n\r\nInstallation\r\n------------\r\n\r\nAutomatic Installation (recommended)\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n1. Make sure Python 3, along with pip, is properly installed.\r\n2. In your CLI, execute ``pip install convert2utf``\r\n\r\nManual Installation (for developers only)\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n1. Make sure Python 3 is properly installed.\r\n2. Clone this project, or just download the .zip file from github.com\r\n   and unarchive it\r\n3. Start CLI (command line interface), enter the local folder\r\n4. Setup Python virtual environment with ``virtualenv ...`` or\r\n   ``python -m venv ...``\r\n5. Run: ``pip install -r requirements.txt``\r\n\r\nUsage\r\n-----\r\n\r\nThere is only one mandatory argument: filename, where you can specify\r\nthe directory or file name. \\* ***Batch mode***: Pass in a directory as\r\nthe input, and all text files that meets the criteria underneath it will\r\nbe converted to UTF8-encoding. \\* ***Single file mode***: If the input\r\nargument is just an individual file, it would be straightforwardly\r\nconverted to UTF-8.\r\n\r\n***Examples:***\r\n\r\n-  Change all .txt files to UTF-8 encoding.\r\n\r\n   ``python cvt2utf.py \"/path/to/your/repo\"``\r\n\r\n-  Change all .txt files to UTF-8 encoding. Plus remove byte-order marks\r\n   (a.k.a. \"BOM\"s or \"signature\"s) from existing UTF-8 files.\r\n\r\n   ``python cvt2utf.py \"/path/to/your/repo\" -u``\r\n\r\n-  Change all .csv files to UTF-8 encoding.\r\n\r\n   Since BOM are used by some applications (such as Microsoft Excel), we\r\n   want to add BOM\r\n\r\n   ``python cvt2utf.py \"/path/to/your/repo\" -b -u --exts csv``\r\n\r\n-  Convert all .php, .js, .java, .py files to UTF-8 encoding.\r\n\r\n   Meanwhile, those BOMs from existing UTF-encoded files will be\r\n   **removed** .\r\n\r\n   ``python cvt2utf.py \"/path/to/your/repo\" -u --exts php js java py``\r\n\r\n-  Convert all .c and .cpp files to UTF-8 with BOMs.\r\n\r\n   This action will also **add** BOMs to existing UTF-encoded files.\r\n\r\n   Per `issue#3 <https://github.com/x1angli/convert2utf/issues/3>`__,\r\n   Visual Studio may mandate BOM in source files. If BOMs are missing,\r\n   then Visual Studio will unable to compile them.\r\n\r\n   ``python cvt2utf.py \"/path/to/your/repo\" -b -u --exts c cpp``\r\n\r\n-  After manually verify the new UTF-8 files are correct, you can remove\r\n   all .bak files\r\n\r\n   ``python cvt2utf.py \"/path/to/your/repo\" --cleanbak``\r\n\r\n-  Alternatively, if you are extremely confident with everything, you\r\n   can simply convert files without creating backups in the beginning.\r\n\r\n   Do **NOT** run the command in this way, unless you know what you are\r\n   doing!\r\n\r\n   ``python cvt2utf.py \"/path/to/your/repo\" --overwrite``\r\n\r\n-  Converts an individual file\r\n\r\n   ``python cvt2utf.py \"/path/to/your/repo/a.txt\"``\r\n\r\n-  Show help information\r\n\r\n   ``python cvt2utf.py -h``\r\n\r\n(Linux only) Directly run the program\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nSometimes, you may want to run the program without specifying the Python\r\ninterpretor, such as:\r\n\r\n::\r\n\r\n    ./cvt2utf.py \"/path/to/your/repo\"\r\n\r\n(Note the leading ``python`` command is missing here)\r\n\r\nTo achieve this, you first need to grant the execution permission onto\r\nthe Python, (skip this provided it already have the eXecution\r\npermission:\r\n\r\n::\r\n\r\n    sudo chmod +x ./cvt2utf.py\r\n\r\nThen activate the virtual environment:\r\n\r\n::\r\n\r\n    . venv/bin/activate\r\n\r\nNext, make sure dependencies are installed\r\n\r\n::\r\n\r\n    pip install -r requirements.txt\r\n\r\nFinally, execute the file: (you could add command arguments here):\r\n\r\n::\r\n\r\n    ./cvt2utf.py \"/path/to/your/repo\"\r\n\r\nYou might want to use absolute path for this program if you are running\r\nit in an arbitrary working directory.\r\n\r\nMiscellaneous\r\n-------------\r\n\r\nBy default, the converted output text files will **NOT** contain BOM\r\n(byte order mark).\r\n\r\nHowever, you can use the switch ``-b`` or ``--addbom`` to explicitly\r\ninclude BOM in the output text files.\r\n\r\nTo learn more, please check:\r\nhttps://en.wikipedia.org/wiki/Byte\\_order\\_mark\r\n\r\nFAQ\r\n---\r\n\r\nWhy do we choose UTF-8 among all charsets?\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nFor i18n, UTF-8 is wide spread. It is the de facto standard for\r\nnon-English texts.\r\n\r\nCompared with UTF-16, UTF-8 is usually more compact and \"with full\r\nfidelity\". It also doesn't suffer from the endianness issue of UTF-16.\r\n\r\nWhy do we need this tool?\r\n^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nIndeed, there are a bunch of text editors out there (such as Notepad++)\r\nthat handle various encodings of text files very well. Yet for the\r\npurpose of **batch conversion** we need this Python script. This script\r\nis also written for educational purpose -- developers can learn from\r\nthis script to get an idea of how to handle text encoding.\r\n\r\nWhen should we remove BOM?\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nBelow is a list of places where BOM might cause a problem. To make your\r\nlife easy and smooth, BOMs in these files are advised to be removed. \\*\r\n**Jekyll** : Jekyll is a Ruby-based CMS that generates static websites.\r\nPlease remove BOMs in your source files. Also, remove them in your CSS\r\nif you are SASSifying. \\* **PHP**: BOMs in ``*.php`` files should be\r\nstripped. \\* **JSP**: BOMs in ``*.jsp`` files should be stripped. \\* (to\r\nbe added...)\r\n\r\nWhen should we add BOM?\r\n^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nBOMs in these files are not necessary, but it is recommended to add\r\nthem. \\* **Unicode plain text file**: M$ suggests \"Always prefix a\r\nUnicode plain text file with a byte order mark\"\r\n(https://msdn.microsoft.com/en-us/library/windows/desktop/dd374101(v=vs.85).aspx)\r\n\\* **CSV**: BOMs in CSV files might be useful and necessary.\r\n\r\nIs the current version reliable?\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nWe are striving to deliver high reliable solutions to our users. This\r\ncode is still at its \"beta\" phase. You might be aware that Python's\r\nbuilt-in UTF encoding/decoding plus chardet may not be very reliable.\r\nFor that reason, we suggest users create backups, either manually\r\nduplicate the file/directory, or automatically through our package\r\n(remember, the backup feature will be short-circuited with the\r\n``--overwrite`` switch)\r\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/x1angli/convert2utf",
    "keywords": "target_encoding UTF-8 UTF UTF8 GBK GB2312 Byte-Order-Mark BOM",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "convert2utf",
    "platform": "",
    "project_url": "https://pypi.org/project/convert2utf/",
    "release_url": "https://pypi.org/project/convert2utf/1.0.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A lightweight tool that converts non-UTF-encoded (such as GB2312, GBK, BIG5 encoded) files to UTF-8 encoded files. At the same time, it can also remove Byte-order-mark (BOM) in those files.",
    "version": "1.0.0"
  },
  "releases": {
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "636ca2f8980f3a4dd0a2908f041de65c",
          "sha256": "2e61733b2f65d2fa7ec1bc6422f598d3c56a0111ce53100bb30321216c3eb9cc"
        },
        "downloads": 407,
        "filename": "convert2utf-0.8.zip",
        "has_sig": false,
        "md5_digest": "636ca2f8980f3a4dd0a2908f041de65c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13071,
        "upload_time": "2016-07-21T05:31:22",
        "url": "https://files.pythonhosted.org/packages/c5/f1/9b91cfdc414a10411b00e69d630a383423aaa0a34d115139913db8fe91c7/convert2utf-0.8.zip"
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2b7c75ce0e4fd7ee795a2a29b0cc9468",
          "sha256": "565ce0b92b71e925a948dc4f45e5bacfffb64eeaf0be60d6d73f2c77238f6160"
        },
        "downloads": 0,
        "filename": "convert2utf-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2b7c75ce0e4fd7ee795a2a29b0cc9468",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6560,
        "upload_time": "2017-06-04T03:56:36",
        "url": "https://files.pythonhosted.org/packages/e3/d6/f05b843f920b8142bc69fd0ea8cd53a9538f24550b947718608d42877956/convert2utf-0.8.1.tar.gz"
      }
    ],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e7f45de6bee1f31882031118dfb9a622",
          "sha256": "19b34796f4a3206a061236e816b2ac797d9ce8ca2e85ff988db74985e46ad6cb"
        },
        "downloads": 0,
        "filename": "convert2utf-0.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e7f45de6bee1f31882031118dfb9a622",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6572,
        "upload_time": "2017-06-04T04:12:06",
        "url": "https://files.pythonhosted.org/packages/9b/99/3055efc8ee96cfe4af81dfd06f03f4667ee04c0d8e652ffd6b109445580e/convert2utf-0.8.2.tar.gz"
      }
    ],
    "0.8.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1fc30bb2ac82fcee79e13a5b911bfea5",
          "sha256": "39ede51482aeeb86c1abee7215489f4d26251909a9836a40aad88b79bdec4c72"
        },
        "downloads": 0,
        "filename": "convert2utf-0.8.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1fc30bb2ac82fcee79e13a5b911bfea5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9115,
        "upload_time": "2017-06-04T04:22:30",
        "url": "https://files.pythonhosted.org/packages/2d/f5/85f2ae1401c0d7fe2d9cb89af815f7b0bf23a29a20d9d173f64f49a7b07c/convert2utf-0.8.3.tar.gz"
      }
    ],
    "0.8.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9702f7ba2c5175e3799a138a8be8a9be",
          "sha256": "811934ab30e8f444bbc376b898ed0b9e921869e7e2b1017f2784fed739df994c"
        },
        "downloads": 0,
        "filename": "convert2utf-0.8.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9702f7ba2c5175e3799a138a8be8a9be",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9121,
        "upload_time": "2017-06-04T13:54:44",
        "url": "https://files.pythonhosted.org/packages/af/9b/d7f2b99be1ad7f38fe2e2649f3672856033ddccdb9297ed2f9e89031174f/convert2utf-0.8.4.tar.gz"
      }
    ],
    "0.8.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7aa9ab124b46b508cc5cbb4bd97a3d30",
          "sha256": "e5237360e06fb2b8c7e3c85c879b2183a9d186216b0f4d83e6835444b8811e90"
        },
        "downloads": 0,
        "filename": "convert2utf-0.8.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7aa9ab124b46b508cc5cbb4bd97a3d30",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9121,
        "upload_time": "2017-06-04T14:02:30",
        "url": "https://files.pythonhosted.org/packages/bd/34/166591f53d983047bd6f80ea8e6164e161fcff96762d6ed224056b132cfc/convert2utf-0.8.5.tar.gz"
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a5a679e6ef8fd3a9d1e3283669703f96",
          "sha256": "6b15ee93168b8354a4915a31a6d8fbd336da84641f7a4b352774f71f88d217f7"
        },
        "downloads": 0,
        "filename": "convert2utf-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a5a679e6ef8fd3a9d1e3283669703f96",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8231,
        "upload_time": "2017-08-12T14:01:33",
        "url": "https://files.pythonhosted.org/packages/d7/69/5fde1a11819efe563df0669de74a481d72fc0a57f3462d5ea9207827ecc3/convert2utf-1.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a5a679e6ef8fd3a9d1e3283669703f96",
        "sha256": "6b15ee93168b8354a4915a31a6d8fbd336da84641f7a4b352774f71f88d217f7"
      },
      "downloads": 0,
      "filename": "convert2utf-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a5a679e6ef8fd3a9d1e3283669703f96",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8231,
      "upload_time": "2017-08-12T14:01:33",
      "url": "https://files.pythonhosted.org/packages/d7/69/5fde1a11819efe563df0669de74a481d72fc0a57f3462d5ea9207827ecc3/convert2utf-1.0.0.tar.gz"
    }
  ]
}