{
  "info": {
    "author": "Michael Stenskj\u00e6r Christensen",
    "author_email": "michael.stenskjaer@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: Text Processing :: Markup :: LaTeX"
    ],
    "description": "Samewords: Disambiguate words in critical editions\n==================================================\n\nIn critical textual editions notes in the critical apparatus are\nnormally made to the line where the words occur. This leads to ambiguous\nreferences when a critical apparatus note refers to a word that occurs\nmore than once in a line. For example:\n\n::\n\n    We have a passage of regular text here, such a nice place for a critical\n    note.\n\n    ----\n    1 a] om. M\n\nIt is very unclear which of three instances of \u201ca\u201d the note refers to.\n\n`Reledmac <https://www.ctan.org/pkg/reledmac>`__ is a great LaTeX package that\nfacilitates typesetting critical editions of prime quality. It already provides\nfacilities for disambiguating identical words, but it requires the creator of\nthe critical text to mark all potential instances of ambiguous references\nmanually (see the *reledmac* handbook for the details on that). *Samewords*\nautomates this step for the editor.\n\nInstallation\n============\n\n*Samewords* requires Python 3.6 installed in your system. If you are on\na Mac OSX machine, and you use `Homebrew <https://brew.sh/>`__, you can\nrun ``brew install python3``. If you do not use Homebrew (or run a\nWindows machine), download the `latest official python\ndistribution <https://www.python.org/downloads/>`__ and follow the\ninstructions.\n\nEasy installation\n-----------------\n\n.. code:: bash\n\n    pip3 install samewords\n\nThat\u2019s it!\n\nOptional: Virtual environment\n-----------------------------\n\nBefore installation you may want to create a virtual environment (`see\nmore here <http://docs.python-guide.org/en/latest/dev/virtualenvs/>`__)\nfor the installation, if you don\u2019t want to install the script globally.\nThis is also particularly useful if you want to hack on the script.\n\nTo create a virtual environment for the project, run:\n\n.. code:: bash\n\n    $ mkvirtualenv -p python3 <name>\n\nWhere ``<name>`` is the name you want to give the venv.\n\nAfter activating the virtual environment (``workon`` or ``source``, see\nthe guide linked above or search the interwebs), install the package.\n\nFor development\n---------------\n\nDownload the repository:\n\n::\n\n    git clone https://github.com/stenskjaer/samewords.git\n\n>From the downloaded directory, run:\n\n.. code:: bash\n\n    $ pip install -e .\n\nNow you should be able to run the script (while the virtual environment\nis activated, if you used that) by running ``samewords``.\n\nTo see if it works, run:\n\n.. code:: bash\n\n    samewords --help\n\nYour should get an overview of the commands available.\n\nWhen you are done, you can reset your system to the state before\ntesting, deactivate the virtual environment. If you never want to use\nthe script again, remove the directory of the environment (possibly with\n``rmvirtualenv`` if you have installed ``virtualenvwrapper``) and remove\nthe directory created by the ``git clone`` command.\n\nRemember the tests\n~~~~~~~~~~~~~~~~~~\n\nBefore you start making any changes, run the test suite and make sure\neverything passes. From the root directory of the package, run:\n\n.. code:: bash\n\n    pytest\n\nIf you make changes, don\u2019t forget to implement tests and make sure\neverything passes. Otherwise, things will break.\n\nUsage\n-----\n\nSimple: Call the script with the file you want annotated as the only\nargument to get the annotated version back in the terminal.\n\n.. code:: bash\n\n    samewords my-awesome-edition.tex\n\nwill send the annotated version to ``stdout``. To see that it actually\ncontains some ``\\sameword{}`` macros, you can try running it through\n``grep``:\n\n.. code:: bash\n\n    samewords my-awesome-edition.tex | grep sameword\n\nYou can define a output location with the ``--output`` option:\n\n.. code:: bash\n\n    samewords --output ~/Desktop/test/output my-awesome-edition.tex\n\nwill check whether ``~/Desktop/test/output`` is a directory or a file.\nIf it is a directory, it will put the file inside that directory (with\nthe original name). If it is a file, it will ask you whether you want to\noverwrite it. If it is neither a directory nor a file, it will create\nthe file ``output`` and write the content to that.\n\nAlternatively regular unix redirecting will work just as well in a Unix\ncontext:\n\n.. code:: bash\n\n    samewords my-beautiful-edition.tex > ~/Desktop/test/output.tex\n\nConfiguration file\n~~~~~~~~~~~~~~~~~~\n\nYou can configure a small range of settings relevant for the processing.\nThis is done in a JSON-formatted file. You give the location of the\nconfig file to the argument ``--config-file``. The script will\nautomatically look for a config file with the name\n``~/.samewords.json``, so if you put it there, you won\u2019t have to specify\nthe command line argument every time you call the script. That can be\nvery handy if you often need to use the same configuration.\n\nThe configuration file recognizes the following parameters: -\n``exclude_macros`` - ``ellipsis_patterns`` - ``sensitive_context_match``\n\nJSON requires backslashes to be escaped if you want to preserved them in\nthe string. You do that with another backslash, so ``\\\\`` will result in\na single backslash. You must remember this when noting ``TeX`` strings\nor regular expressions that contain backslashes.\n\nA complete configuration file could contain the following content:\n\n.. code:: json\n\n    {\n      \"ellipsis_patterns\": [\n        \"--\",\n        \"\u2013\"\n      ],\n      \"exclude_macros\": [\n        \"\\\\excludedMacro\"\n      ]\n    }\n\nFor details, see below.\n\n``exclude_macros``\n^^^^^^^^^^^^^^^^^^\n\nYou might want to define some macros which are entirely ignored in the\ncomparison of text segments. That will typically be macros that *do not*\ncontain text content.\n\nFor example, you might use a custom macro called ``\\msbreak{}`` to\nindicate a pagebreak in your edition. The content of that is not printed\nin the text, but in the margin. So you don\u2019t want the comparison to\nfigure in the content of this macro. Take this example phrase:\n\n.. code:: latex\n\n    I\\msbreak{23v} know that \\edtext{I know}{\\Afootnote{I don't know B}}\n    nothing.\n\nSince the content of (almost) all macros is included by default, this\nwould give the comparison of the phrase ``I know`` (``\\edtext`` content)\nwith ``I23v know that`` (context). It will not match, and hence not\nannotate the phrase.\n\nIf we add the macro to the ``excluded_macros`` field in a settings file\nand pass that to the script, ``\\msbreak`` will be ignored in processing,\nand we will get a comparison between ``I know`` (``\\edtext`` content)\nwith ``I know that`` (context). This will match and hence correctly\nannotate the phrase.\n\n*Another example:* The script searches for words or phrases identical to\nthose in the ``\\edtext{}{}`` macros to identify possible conflicts. By\ndefault the content of practically all macros are included in this\ncomparison.\n\nTake this passage:\n\n.. code:: latex\n\n    \\edtext{Sortes\\test{1}}{\\Afootnote{Socrates B}} dicit: Sortes\\test{2} probus\n\nWill result in a search for \u201cSortes1\u201d in the string \u201cdicit Sortes2\nprobus\u201d, which will not succeed.\n\nOn the other hand, this passage:\n\n.. code:: latex\n\n    \\edtext{Sortes\\test{1}}{\\Afootnote{Socrates B}} dicit: Sortes\\test{1} probus\n\nWill result in a search for \u201cSortes1\u201d in the string \u201cdicit Sortes1\nprobus\u201d, which will succeed and therefore annotate the instances.\n\nIf you add ``\\test`` to the ``excluded_macros`` field, both examples\nabove will compare \u201cSortes\u201d with \u201cSortes\u201d and hence give a positive\nmatch.\n\n``ellipsis_patterns``\n^^^^^^^^^^^^^^^^^^^^^\n\nThis key contains a list of patterns that should be included when\nmatching for ellipsis symbols in ``\\lemma{}``. These are used in a\nregular expression match, so any valid python regular expression will\nwork.\n\nSay you use \u201c\u2013\u201d and \u201c\u2026\u201d to indicate ellipsis. Actually, you ought to\nwrite the dotted ellipsis with ``\\dots{}`` in ``LaTeX``, but if you\ninsist, you could give the key the following list (but you shouldn\u2019t,\nreally. Use ``\\dots{}``):\n\n.. code:: json\n\n    {\n      \"ellipsis_patterns\": [\n        \"\\\\.\\\\.\\\\.\",\n        \"-+\"\n      ]\n    }\n\nThis looks complicated, but don\u2019t worry. The \u201c\u2026\u201d is matched with a regex\npattern, which requires us to escape the regular \u201c.\u201d \u2013 that would\nnormally look like this ``\\.\\.\\.``. But since we also need to escape the\nbackslashes, they are doubly escaped.\n\nThe second is a lot simpler, it is just a regex that will match one or\nmore regular dashes in your text. Note that this comes with some danger\nas it will match if your lemma contains a single dash, even though you\nmight not have thought of it as an \u201cellipsis\u201d-dash. In these cases, its\nbetter to be explicit and either use double dashes (``--``) or real\nunicode en-dashes (``\u2013``). It is also typographically much better.\n\nAnother example of a regex match pattern would be to match for the thin\nspace command in ``LaTeX``, which is ``\\,``, which produces a space of\njust 0.16667em. A comma is a meta-character in regex, so it would need\nescaped, which would look like ``\\\\,``, but the backslash is also a\nmeta-character, so that needs escaping too. This means that to match the\nliteral expression ``\\,`` the regex would look like this: ``\\\\\\\\,``. So\nif we wanted to match the ``LaTeX`` expression ``\\,-\\,`` (thin space, a\ndash, and another thin space), we would write the following regex:\n``\\\\\\\\,-\\\\\\\\,``. But as we would probably want to match any length of\ndashes, it could be improved to ``\\\\\\\\,-+\\\\\\\\,``.\n\n``sensitive_context_match``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe value of the settings variable ``sensitive_proximity_match``\ndetermines whether the search for matches in the proximity is case\nsensitive. By default it is case insensitive, but if the value is set to\n``True``, it will be case sensitive.\n\nIn JSON:\n\n.. code:: json\n\n    {\n      \"sensitive_context_match\": true\n    }\n\nThat would mean that the search for \u201can\u201d in the context string \u201cAn\nexample\u201d would not match. This is a sensible setting when lemma words\nare not lower cased in the critical apparatus.\n\n``context_distance``\n^^^^^^^^^^^^^^^^^^^^\n\nThis determines the amount of words that will be compared with a match phrase at\neither side of an ``\\edtext{}{}`` entry. A normal length line rarely contains more\nthan 15 words, so the default of 20 should often be enough. If a layout with\nevery long lines is used, it may be necessary to increase it, while it may make\nsense to reduce the distance if maybe a two column setup is used. But a bit too\nmany ``\\sameword{}`` annotations really does no harm.\n\n\n\nIssue reporting and testing\n===========================\n\nIf you like the idea of this software, please help improving it by\nfiling `issue report <https://github.com/stenskjaer/samewords/issues>`__\nwhen you find bugs.\n\nTo file a bug\n-------------\n\n-  Create a *minimal working example* (MWE) TeX document that contains\n   absolutely nothing aside from the material necessary for reproducing\n   the bug. The document should (if possible) be able to compile on a\n   fresh installation of LateX without any custom packages.\n-  Open an `issue\n   report <https://github.com/stenskjaer/samewords/issues>`__ and\n   describe the conditions under which you experience the bug. It should\n   be possible for me to reproduce the bug by following your directions.\n-  If the script returns an error, copy and paste the error traceback\n   into the report.\n-  If the script returns you document, include that, and describe the\n   result you expected, and how that differs from what you get.\n\nTesting updated issue branches\n------------------------------\n\nOnce I (think I) have a solution, I will ask you to test a branch. You\ncan do that by either downloading that specific branch as a zip or clone\nthe repository and pull down the changed branch. Choose one of the\nfollowing two, depending on you preferences.\n\n**Downloading branch zip** This approach is simplest if (1) you don\u2019t\nfeel quite comfortable using ``git`` or (2) only want to test a single\nchange or issue.\n\n-  Navigate to the relevant branch in Github (the \u201cBranch:\u201d dropdown).\n-  Download that branch to your computer (the \u201cClone or download\u201d\n   button).\n-  Navigate to the downloaded zip file, unzip it and enter the\n   directory.\n\n**Clone repository and checkout branch** This approach is more flexible\nand makes it easier for you to pull and test different branches. It also\nmakes it easier to keep track of which branch you are testing on (with\nthe ``git status`` command). Finally, if you should want to push changes\nin pull requests, this is also the approach you should use.\n\n-  Navigate to an appropriate directory.\n-  Run ``git clone https://github.com/stenskjaer/samewords.git``. A\n   directory with the name \u201csamewords\u201d will be created in you current\n   working directory.\n-  Check out the branch that you want to test. If that is called\n   ``issue-13`` run ``git checkout issue-13``.\n\nAfter either of the above processes, the rest is identical: - Create a\n*virtual environment* for testing by running ``python3 -m venv .env``,\nand then activate it with ``source .env/bin/activate`` (this is based on\na Unix environment, if you run Windows, check out `the Python\ndocumentation <https://docs.python.org/3.6/library/venv.html>`__). -\nInstall the script in the virtual environment with ``pip install -e .``.\n- To make sure you run the version in the *virtual environment*, run\n``.env/bin/samewords`` from the directory (to avoid using a global\nversion of the script, if you have that). - Run your supplied MWE (or\nother material provided by me in the issue report) and inspect whether\nthe problem is solved and report back in the issue report. - When you\nare done testing, deactivate the virtual environment by running\n``deactivate`` (Bash on Unix) or ``deactivate.bat`` (Windows).\n\nIf you have downloaded a branch zip, you can delete the unzipped\ndirectory, and everything should be back to normal.\n\nIf you have cloned the repository, you can just leave it there.\n\nDisclaimer and license\n======================\n\nThis is beta level software. Bugs are to be expected and I provide no\nguarantees for the integrity of your software or editions when you use\nthe package.\n\nCopyright (c) 2017 Michael Stenskj\u00e6r Christensen, MIT License.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/stenskjaer/samewords",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "samewords",
    "platform": "",
    "project_url": "https://pypi.org/project/samewords/",
    "release_url": "https://pypi.org/project/samewords/0.2.6/",
    "requires_dist": [
      "pytest (==3.0.7)"
    ],
    "requires_python": "",
    "summary": "Package for disambiguation of identical terms in critical editions in LaTeX with reledmac.",
    "version": "0.2.6"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c50194b6f3b7feae8b501ee52de878fc",
          "sha256": "7b755a9b835f2b14df989af1ea2c7c8560f22f08c6fb4d41014c38b04344eb2d"
        },
        "downloads": -1,
        "filename": "samewords-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c50194b6f3b7feae8b501ee52de878fc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 24444,
        "upload_time": "2017-07-04T16:10:35",
        "url": "https://files.pythonhosted.org/packages/f4/cc/5c8e4310ea59473a6869108a5e4c68654304860e183eab976e174c9dfabc/samewords-0.1.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5ab06aa17fe037219dc7208ebac7fecb",
          "sha256": "ee0d5e77e49e5779db7eb47f596b34f307a276ad9865fdeea2688eb23cd62675"
        },
        "downloads": -1,
        "filename": "samewords-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5ab06aa17fe037219dc7208ebac7fecb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20877,
        "upload_time": "2017-07-04T16:10:39",
        "url": "https://files.pythonhosted.org/packages/4d/4c/82d56e581e35e3c0f6380dc0733c23a2bc9bcc19e69a1f630467f4eed36c/samewords-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "20aea128055bb4d3cb5a701f73336616",
          "sha256": "1b14860cc9dc6a902863b0ac5ae55c3b8da60e85156ed65c4f2530f60b6f9d68"
        },
        "downloads": -1,
        "filename": "samewords-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "20aea128055bb4d3cb5a701f73336616",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 24434,
        "upload_time": "2017-07-04T17:20:33",
        "url": "https://files.pythonhosted.org/packages/e4/02/2442a920c3348f271fe275bf63ff0150f49c94d2fe81f87b5b666c95d20c/samewords-0.1.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "327ccfe26ee938ac0ad6b2d9ca9aba81",
          "sha256": "8ab7251a403aee727dd784364802baeb264c8f0f5b063fb19981e0af691a3fa5"
        },
        "downloads": -1,
        "filename": "samewords-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "327ccfe26ee938ac0ad6b2d9ca9aba81",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20870,
        "upload_time": "2017-07-04T17:20:36",
        "url": "https://files.pythonhosted.org/packages/40/f4/f8654f7513b5129c65fa246742ad7fc87b2c54a1c027f5b023367e865323/samewords-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ee1e82a8e8154a0ba6576f9996e17841",
          "sha256": "bd400ece7d4966e5db04d405b56290b9df1f83978b5ec0d192450d0668c55e14"
        },
        "downloads": -1,
        "filename": "samewords-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ee1e82a8e8154a0ba6576f9996e17841",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 24430,
        "upload_time": "2017-07-04T17:44:55",
        "url": "https://files.pythonhosted.org/packages/42/1d/ddcd3a34214dce4fc10ca5fb86fcbaefe8ba5bc599b4992cfc7332404b1d/samewords-0.1.3-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0df4ebf2590f161e72bbd08835827834",
          "sha256": "bec386be122501c4f11008cbcd19d882cd550099c2eb73f235318c62a304d09e"
        },
        "downloads": -1,
        "filename": "samewords-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0df4ebf2590f161e72bbd08835827834",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20876,
        "upload_time": "2017-07-04T17:44:56",
        "url": "https://files.pythonhosted.org/packages/45/ab/446c2c29aa2f08a0e13eb7232d727cca60df90cf6267699a84ef5bae0f4b/samewords-0.1.3.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0e73a5e295f9befada0c317d1cc1c90c",
          "sha256": "bd8904f9bcaa90a2c8d752e8a93e84d30a901975010190851fefd06d8a6486f3"
        },
        "downloads": -1,
        "filename": "samewords-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e73a5e295f9befada0c317d1cc1c90c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 45949,
        "upload_time": "2018-01-28T06:10:08",
        "url": "https://files.pythonhosted.org/packages/6d/d9/9701b231c265014e38113033709e53f1a51391714116c88edfd04b5ee225/samewords-0.2.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9af2e3996418e83ce6cc661619e27c0f",
          "sha256": "4b7d565dad7377c62e1d64a5f75dfdfac60c741d79a4a1a09257002b546f9c56"
        },
        "downloads": -1,
        "filename": "samewords-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9af2e3996418e83ce6cc661619e27c0f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21871,
        "upload_time": "2018-01-28T06:10:10",
        "url": "https://files.pythonhosted.org/packages/84/7c/92d101e7e057019d8d64c6aad7583fac0715e6d5d4076b4d4a60006bc684/samewords-0.2.1.tar.gz"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e6aa2295acf5403d3cb184c299d59a88",
          "sha256": "094f9db306af0d4809a97a1320f406281c80493b6de4668f1e2fc215b280ae64"
        },
        "downloads": -1,
        "filename": "samewords-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6aa2295acf5403d3cb184c299d59a88",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 56235,
        "upload_time": "2018-01-28T06:15:11",
        "url": "https://files.pythonhosted.org/packages/46/be/e1d6de37bbad377ed1c0250f5212a2c11e166d2c7fd6f1d525b388c8a684/samewords-0.2.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4cd2f4aceed62682dcbcabc706c87a27",
          "sha256": "417eb0220b807cfbb980db4c007e6df18b391f6aabcabea2dd17c8a587f82e1f"
        },
        "downloads": -1,
        "filename": "samewords-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4cd2f4aceed62682dcbcabc706c87a27",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32046,
        "upload_time": "2018-01-28T06:15:13",
        "url": "https://files.pythonhosted.org/packages/f0/b8/7ddedd602e14f31ff96a9247ea30506108e01fbce53c1f6bd8b9f399ce5e/samewords-0.2.2.tar.gz"
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a38bb87cbe6372bd44fbc8187213f29b",
          "sha256": "af7c2502bb802b13ea7e7e59cdf88535ce9ac54b9006ba23d9694522ea7ecb59"
        },
        "downloads": -1,
        "filename": "samewords-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a38bb87cbe6372bd44fbc8187213f29b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 56469,
        "upload_time": "2018-01-28T06:23:28",
        "url": "https://files.pythonhosted.org/packages/0b/cd/05a345b118ff297d361a3a374215f95b461b120c0ce77929bb03eb8a6a3e/samewords-0.2.3-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4bf5a4ea5ece270270ce99c32a7a03b4",
          "sha256": "64106abab22392bacf0b78352fb431ad7c81da6d12db3087837d8332b66d1771"
        },
        "downloads": -1,
        "filename": "samewords-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4bf5a4ea5ece270270ce99c32a7a03b4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 33309,
        "upload_time": "2018-01-28T06:23:30",
        "url": "https://files.pythonhosted.org/packages/c7/05/8da6a02f4c78de33e852fa42c21f806976bb1ed8ee99bfb90703055de4b1/samewords-0.2.3.tar.gz"
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "077dc4e1c623d84823e18f38ba667a8a",
          "sha256": "a11ec71bc633ec74e772d82f3713d50da0d748ad134e7703d864f13c398c2038"
        },
        "downloads": -1,
        "filename": "samewords-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "077dc4e1c623d84823e18f38ba667a8a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 56996,
        "upload_time": "2018-02-02T04:08:43",
        "url": "https://files.pythonhosted.org/packages/d9/cc/39b5d3dec2559ff09054a1a3b7202132b398433f77b6587b8e6883663cfa/samewords-0.2.4-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "110eb2331839e99a2a296cd90785d1ee",
          "sha256": "72783db813a4342e0e8a4fb92ab46cc4305ac34cc9632d43577e9601a301e4aa"
        },
        "downloads": -1,
        "filename": "samewords-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "110eb2331839e99a2a296cd90785d1ee",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 36782,
        "upload_time": "2018-02-02T04:08:45",
        "url": "https://files.pythonhosted.org/packages/94/03/10c7afc940656275d44ea01a3db483b4588493a30a1e80615bd1288c6f83/samewords-0.2.4.tar.gz"
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0c9547bb8bcae2eafa88dae0a15c9056",
          "sha256": "1b36aa03a3e85950da3baae7d6d84a319a711fc21e7cb339eecbd870a35e455b"
        },
        "downloads": -1,
        "filename": "samewords-0.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c9547bb8bcae2eafa88dae0a15c9056",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 56994,
        "upload_time": "2018-02-02T04:16:41",
        "url": "https://files.pythonhosted.org/packages/9b/bc/dd9acfaf5850b3b342ce9f3b37af2e4c70438a29efb0082af296611aef6c/samewords-0.2.5-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ef585cf60eeee3d00b9fbc57c1f710c3",
          "sha256": "52da0c26a7247548d98f04ecb024cde3e4566b728fc5af3d116c49d7a656611a"
        },
        "downloads": -1,
        "filename": "samewords-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ef585cf60eeee3d00b9fbc57c1f710c3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 44536,
        "upload_time": "2018-02-02T04:16:44",
        "url": "https://files.pythonhosted.org/packages/f2/aa/38ea3020275ac653b83c9dfb5fb4e801bbe4242c1a12899ff90c764addb8/samewords-0.2.5.tar.gz"
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8c4707f2731f0a21bce776b7ab25c013",
          "sha256": "67ee8c8824cc1d067502a79e2d75846f5a7bc632e1e45df023ac4ffd2f9f3686"
        },
        "downloads": -1,
        "filename": "samewords-0.2.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c4707f2731f0a21bce776b7ab25c013",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 71730,
        "upload_time": "2018-02-02T04:31:57",
        "url": "https://files.pythonhosted.org/packages/f3/87/2063be0a8831680426ee17e622cb7ef77b647768d0abbce121aed7febf40/samewords-0.2.6-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d7ace3773e6262cd2c598ff962518a64",
          "sha256": "37104abba081a2bc30725a2df611d09c8d632eb46d74fd8a8a8298257414bd82"
        },
        "downloads": -1,
        "filename": "samewords-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d7ace3773e6262cd2c598ff962518a64",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 43986,
        "upload_time": "2018-02-02T04:31:59",
        "url": "https://files.pythonhosted.org/packages/7a/d6/8ff8ee7209a42a7317cab807b8f31acaa92b401371586bc5c74f2a3530c4/samewords-0.2.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "8c4707f2731f0a21bce776b7ab25c013",
        "sha256": "67ee8c8824cc1d067502a79e2d75846f5a7bc632e1e45df023ac4ffd2f9f3686"
      },
      "downloads": -1,
      "filename": "samewords-0.2.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8c4707f2731f0a21bce776b7ab25c013",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 71730,
      "upload_time": "2018-02-02T04:31:57",
      "url": "https://files.pythonhosted.org/packages/f3/87/2063be0a8831680426ee17e622cb7ef77b647768d0abbce121aed7febf40/samewords-0.2.6-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "d7ace3773e6262cd2c598ff962518a64",
        "sha256": "37104abba081a2bc30725a2df611d09c8d632eb46d74fd8a8a8298257414bd82"
      },
      "downloads": -1,
      "filename": "samewords-0.2.6.tar.gz",
      "has_sig": false,
      "md5_digest": "d7ace3773e6262cd2c598ff962518a64",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 43986,
      "upload_time": "2018-02-02T04:31:59",
      "url": "https://files.pythonhosted.org/packages/7a/d6/8ff8ee7209a42a7317cab807b8f31acaa92b401371586bc5c74f2a3530c4/samewords-0.2.6.tar.gz"
    }
  ]
}