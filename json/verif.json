{
  "info": {
    "author": "Thomas Nipen",
    "author_email": "thomas.nipen@met.no",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Scientific/Engineering :: Atmospheric Science",
      "Topic :: Scientific/Engineering :: Information Analysis"
    ],
    "description": "Forecast verification software\n==============================\n\n.. image:: https://travis-ci.org/WFRT/verif.svg?branch=master\n  :target: https://travis-ci.org/WFRT/verif\n.. image:: https://coveralls.io/repos/WFRT/verif/badge.svg?branch=master&service=github\n  :target: https://coveralls.io/github/WFRT/verif?branch=master\n\nVerif is a command-line tool that lets you verify the quality of weather forecasts for point\nlocations. It can also compare forecasts from different forecasting systems (that have different\nmodels, post-processing methods, etc).\n\nThe program reads files with observations and forecasts in a specific format (see \"Input files\"\nbelow). The input files contain information about dates, forecast lead times, and locations such\nthat statistics can be aggregated across different dimensions. To ensure a fair comparison among\nfiles, Verif will discard data points where one or more forecast systems have missing forecasts.\nSince Verif is a command-line tool, it can be used in scripts to automatically create\nverification figures.\n\nVerif version 1.0 has been released (see \"Installation Instruction\" below). We welcome suggestions\nfor improvements. Verif is developed by Thomas Nipen, David Siuta, and Tim Chui.\n\nFeatures\n--------\n\n* Deterministic metrics such as MAE, bias, correlation, RMSE (e.g. ``-m mae``)\n* Threshold-based metrics such as the false alarm rate, ETS, EDI, Yule's Q (e.g. ``-m ets``)\n* Probabilistic metrics such as brier score, PIT-histogram, reliability diagrams (e.g. ``-m bs``)\n* Special plots like Taylor diagrams (``-m taylor``), quantile-quantile plots (``-m qq``).\n* Plot scores as a function of date, lead time, station altitude/lat/longitude (e.g. ``-x date``)\n* Show scores on maps (``-type map``)\n* Subset the data by specifying a date range and lat/lon range (``-latrange 58,60``)\n* Export to text (``-type text``)\n* Options to adjust font sizes, label positions, tick marks, legends, etc (``-labfs 14``)\n* Anomaly statistics relative to a baseline like climatology (``-c climfile.txt``)\n* Output to png, jpeg, eps, etc and specify dimensions and resolution (``-f image.png -dpi 300``)\n\nFor a full list of all options, run verif on the command-line without arguments, or check the wiki\nat https://github.com/WFRT/verif/wiki.\n\n.. image:: image.jpg\n    :alt: Example plots\n    :width: 400\n    :align: center\n\nInstalling on Ubuntu\n--------------------\n\n**Prerequisites**\n\nVerif requires NetCDF as well as the python packages numpy, scipy, and matplotlib. The python\npackage mpltoolkits.basemap is optional, but provides a background map when verification scores are\nplotted on a map. Install the packages as follows:\n\n.. code-block:: bash\n\n  sudo apt-get update\n  sudo apt-get install netcdf-bin libnetcdf-dev libhdf5-serial-dev\n  sudo apt-get install python-setuptools python-pip\n  sudo apt-get install python-numpy python-scipy python-matplotlib python-mpltoolkits.basemap\n\n**Installing using pip**\n\nAfter this, the easiest is to install the lastest version of Verif using pip:\n\n.. code-block:: bash\n\n   sudo pip install verif\n\nVerif should then be accessible by typing ``verif`` on the command-line. If you do not have\nsudo-rights, then install verif as follows:\n\n.. code-block:: bash\n\n   pip install verif --user\n\nThis will create the executable ``~/.local/bin/verif``. Add this to your PATH environment\nvariable if necessary (i.e add ``export PATH=$PATH:~/.local/bin`` to ``~/.bashrc``).\n\n**Installing from source**\n\nAlternatively, to install from source, download the source code of the latest version:\nhttps://github.com/WFRT/verif/releases/. Unzip the file and navigate into the extracted folder.\n\nThen install Verif by executing the following inside the extracted folder:\n\n.. code-block:: bash\n\n  sudo pip install -r requirements.txt\n  sudo python setup.py install\n\nThis will create the executable ``/usr/local/bin/verif``. Add ``/usr/local/bin`` to your PATH environment\nvariable if necessary. If you do not have sudo privileges do:\n\n.. code-block:: bash\n\n  pip install -r requirements.txt --user\n  python setup.py install --user\n\nThis will create the executable ``~/.local/bin/verif``. Add ``~/.local/bin`` to your PATH environment\nvariable.\n\nInstalling on Mac OSX\n---------------------\n\nFollow the proceedure as for Ubuntu (either installing with pip or from source). If installing from\nsource, then look for the line \"Installing verif script to <some directory>\", as this will indicate\nwhat folder Verif is installed into. Add the folder to your PATH environment variable if necessary.\n\nExample\n--------\nA sample dataset for testing the program is found in ``./examples/``. There is one \"raw\" forecast file and\none \"calibrated\" forecast file (where statistical methods have been applied). For more information\nabout the dataset check out the wiki. Here are some example commands to test out:\n\n.. code-block:: bash\n\n   # Shows mean absolute error as a function of lead-time\n   verif examples/raw.txt examples/cal.txt -m mae\n   # Shows average observed and forecasted values as a function on time\n   verif examples/raw.txt examples/cal.txt -m obsfcst -x time\n   # Shows equitable threat score as a function of threshold\n   verif examples/raw.txt examples/cal.txt -m ets\n   # Shows a reliability diagram for a threshold of 0.5 mm\n   verif examples/raw.txt examples/cal.txt -m reliability -r 0.5\n   # Shows Brier skill score as a function of threshold\n   verif examples/raw.txt examples/cal.txt -m bss -x threshold\n\nText-based input\n----------------\nTo verify your own forecasts, the easiest option is to put the data into the following format:\n\n.. code-block:: bash\n\n   # variable: Temperature\n   # units: $^oC$\n   date     leadtime location  lat     lon      altitude obs      fcst   p10   q0.1\n   20150101 0        214       49.2    -122.1   92       3.4      2.1    0.914 -1.9\n   20150101 1        214       49.2    -122.1   92       4.7      4.2    0.858 0.1\n   20150101 0        180       50.3    -120.3   150      0.2      -1.2   0.992 -2.1\n\nAny lines starting with '#' can be metadata, currently variable:, units:, x0:, and x1: are\nrecognized. These are used in labeling axes. x0 can be specified if the variable has a discrete\nprobability mass at the lower boundary (e.g. 0 for precipitation). Use x1 for the upper boundary\n(e.g. 100 % for relative humidity). After that is a header line that must describe the data columns\nbelow. The following attributes are recognized:\n\n* date (in YYYYMMDD)\n* unixtime (in seconds since 1970-01-01 00:00:00 +00:00)\n* leadtime (forecast lead time in hours)\n* location (station identifier)\n* lat (in degrees)\n* lon (in degrees)\n* obs (observations)\n* fcst (deterministic forecast)\n* p<number> (cumulative probability for a specific threshold, e.g. p10 is the CDF at 10 degrees)\n* q<number> (temperature for a specific quantile e.g. q0.1 is the 0.1 quantile)\n\nEither 'date' or 'unixtime' can be supplied. obs and fcst are the only required columns. Note that\nthe file will likely have many rows with repeated values of leadtime/location/lat/lon/altitude. If\nstation and lead time information is missing, then Verif assumes they are all for the same\nstation and lead time. The columns can be in any order.\n\nDeterministic forecasts will only have \"obs\" and \"fcst\", however probabilistic forecasts can provide\nany number of cumulative probabilities. For probabilistic forecasts, \"fcst\" could represent the\nensemble mean (or any other method to reduce the ensemble to a deterministic forecast).\n\nFor compatibility reason, 'offset' can be used instead of 'leadtime', 'id instead of 'location', and\n'elev' instead of 'altitude'.\n\nNetCDF-based  input\n---------------------\nFor larger datasets, the files in NetCDF are much quicker to read. The following dimensions,\nvariables, and attributes are understood by Verif:\n\n.. code-block:: bash\n\n   netcdf format {\n   dimensions:\n      time = UNLIMITED;\n      leadtime  = 48;\n      location = 10;\n      ensemble = 21;\n      threshold = 11;\n      quantile = 11;\n   variables:\n      int time(time);                                  // Valid time of forecast initialization in\n                                                       // number of seconds since 1970-01-01 00:00:00 +00:00\n      float leadtime(leadtime);                        // Number of hours since forecast init\n      int location(location);                          // Id for each station location\n      float threshold(threshold);\n      float quantile(quantile);                        // Numbers between 0 and 1\n      float lat(location);                             // Decimal degrees latitude\n      float lon(location);                             // Decimal degrees longitude\n      float altitude(location);                        // Altitude in meters\n      float obs(time, leadtime, location);             // Observations\n      float fcst(time, leadtime, location);            // Deterministic forecast\n      float cdf(time, leadtime, location, threshold);  // Accumulated prob at threshold\n      float pdf(time, leadtime, location, threshold);  // Probability density at threshold\n      float x(time, leadtime, location, quantile);     // Threshold corresponding to quantile\n      float pit(time, leadtime, location);             // CDF for threshold=observation\n\n   // global attributes:\n      : long_name = \"Precipitation\";                   // Used to label axes in plots\n      : standard_name = \"precipitation_amount\";        // NetCDF/CF standard name of the forecast variable\n      : x0 = 0;                                        // Discrete mass at lower boundary (e.g. 0 mm for precipitation). Omit otherwise.\n      : x1 = 100;                                      // Discrete mass at upper boundary (e.g. 100% for relative humidity). Omit otherwise.\n      : verif_version = \"1.0.0\";                       // Not required, but will be parsed in the future if format changes\n      }\n\nCopyright and license\n---------------------\n\nCopyright \u00a9 2015-2017 UBC Weather Forecast Research Team. Verif is licensed under the 3-clause\nBSD license. See LICENSE file.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/WFRT/verif",
    "keywords": "meteorology verification weather prediction",
    "license": "BSD-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "verif",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/verif/",
    "release_url": "https://pypi.org/project/verif/1.0.0/",
    "requires_python": "",
    "summary": "A verification program for meteorological forecasts and observations",
    "version": "1.0.0"
  },
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6cace0ca2e36db819f51b3e1fee04c59",
          "sha256": "57bd7289ba7862b9387d13d966e4908509293936e3a9af93e03ea1466a14f57b"
        },
        "downloads": 227,
        "filename": "verif-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6cace0ca2e36db819f51b3e1fee04c59",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 50948,
        "upload_time": "2016-02-02T22:22:00",
        "url": "https://files.pythonhosted.org/packages/9f/f1/d0541db834222e44cfb6da63d8c3366784b80d1bc549a79228d4e4a39ce1/verif-0.3.0.tar.gz"
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8291a642b99384468eda82ee63a0ed14",
          "sha256": "64f54087310452481b5d1d15986d803a99fe14c0b0925947f1e84c6ac0a08472"
        },
        "downloads": 485,
        "filename": "verif-0.4.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "8291a642b99384468eda82ee63a0ed14",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 59398,
        "upload_time": "2016-07-05T21:18:32",
        "url": "https://files.pythonhosted.org/packages/aa/47/77c0ae0e2c0939fcd11dc32413fed9963725a52c7fa27a0b7e2ade1addb4/verif-0.4.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7f02eb51302fdd7541b9e06f7324f595",
          "sha256": "3963946928cab1447c78d1c4058c7fef7479e91f66009338acff70a36f54df61"
        },
        "downloads": 165,
        "filename": "verif-0.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f02eb51302fdd7541b9e06f7324f595",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 59402,
        "upload_time": "2016-07-05T21:18:45",
        "url": "https://files.pythonhosted.org/packages/9c/29/ad82f25c34996150d68241fed861f66f3485cb9bed654435ab59b0b154b5/verif-0.4.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "de23c026af75a4a425b19d1af8a962b4",
          "sha256": "f90b8f69e91f5263c40df35258fa614adcb35811abf28fb92a898682f97cbfff"
        },
        "downloads": 170,
        "filename": "verif-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "de23c026af75a4a425b19d1af8a962b4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 53828,
        "upload_time": "2016-07-05T21:18:51",
        "url": "https://files.pythonhosted.org/packages/8a/f5/600d60634e98884c5b592ede40087f1400ec460f7489b3a60cb20ccdf101/verif-0.4.0.tar.gz"
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d22059dbdc351bf814af3f08f7032c00",
          "sha256": "3d1e53c82bd5560e56239bff828c3c42e4141e4ea79f6f006cffdb87cfdf87ac"
        },
        "downloads": 14,
        "filename": "verif-1.0.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "d22059dbdc351bf814af3f08f7032c00",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 72359,
        "upload_time": "2017-02-11T12:07:16",
        "url": "https://files.pythonhosted.org/packages/b2/6b/25f31f9a85fb96478d5db1099d991ba2fd3fc108173d87a72232d30bd49d/verif-1.0.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f8d496f47a938e760ce2f15ff3e4d18e",
          "sha256": "7a16cb37be678a78cc24d41d707c858039d67cc56cec22abdbd678423d39de4d"
        },
        "downloads": 11,
        "filename": "verif-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f8d496f47a938e760ce2f15ff3e4d18e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 64679,
        "upload_time": "2017-02-11T12:07:18",
        "url": "https://files.pythonhosted.org/packages/81/2d/b16add750ec0935732ee6bcd2f87ec153f1e84552baef26259d2b14e18a8/verif-1.0.0.tar.gz"
      }
    ],
    "1.0.0b3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8cb45e445fc31814d2a0290d8d757f08",
          "sha256": "3965f7fa1d2b77d97d77efd23814dd0ea009c90d73135455f3da2792dad17942"
        },
        "downloads": 11,
        "filename": "verif-1.0.0b3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "8cb45e445fc31814d2a0290d8d757f08",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 81651,
        "upload_time": "2017-01-09T17:23:03",
        "url": "https://files.pythonhosted.org/packages/97/ec/2784dd33e1e67cc21c802014f83a0ff14d6b5ffbbf78756a73034ef4d718/verif-1.0.0b3-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3b76f6ded610e9864b844715301e0e6c",
          "sha256": "66efcab9a6a65eec84a4190b83bc8716ed21086b8afc5f001d96c222ca8feb42"
        },
        "downloads": 11,
        "filename": "verif-1.0.0b3.tar.gz",
        "has_sig": false,
        "md5_digest": "3b76f6ded610e9864b844715301e0e6c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 65746,
        "upload_time": "2017-01-09T17:23:07",
        "url": "https://files.pythonhosted.org/packages/9b/76/d54db7f3f9bf96a5a8e777d68dd74a7b8ca1500970bfd1363ed9a98b61a1/verif-1.0.0b3.tar.gz"
      }
    ],
    "1.0.0b4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c564996125a8c0336888ca79eaf2a4a3",
          "sha256": "a841c8a9ed6cf29d5853159d96034dbe6dc340457246a95fb3bfdb3840a0ac8a"
        },
        "downloads": 11,
        "filename": "verif-1.0.0b4-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "c564996125a8c0336888ca79eaf2a4a3",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 72420,
        "upload_time": "2017-02-11T11:32:33",
        "url": "https://files.pythonhosted.org/packages/50/b6/69a0e7e49a1d2a981a91e648dc44d6734abac57fcedf7e93ee5fa3849a0f/verif-1.0.0b4-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0a10564607626388dc4b022ecd605449",
          "sha256": "537713762f0279b910f2685dd8b9de9ca44133a44b34e4c2f93f2147c7f8ace2"
        },
        "downloads": 11,
        "filename": "verif-1.0.0b4.tar.gz",
        "has_sig": false,
        "md5_digest": "0a10564607626388dc4b022ecd605449",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 64710,
        "upload_time": "2017-02-11T11:32:35",
        "url": "https://files.pythonhosted.org/packages/2e/79/f15841dd44d303b7e21bf902a1418840054a126b04dcc237f4daf67657e6/verif-1.0.0b4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d22059dbdc351bf814af3f08f7032c00",
        "sha256": "3d1e53c82bd5560e56239bff828c3c42e4141e4ea79f6f006cffdb87cfdf87ac"
      },
      "downloads": 14,
      "filename": "verif-1.0.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "d22059dbdc351bf814af3f08f7032c00",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 72359,
      "upload_time": "2017-02-11T12:07:16",
      "url": "https://files.pythonhosted.org/packages/b2/6b/25f31f9a85fb96478d5db1099d991ba2fd3fc108173d87a72232d30bd49d/verif-1.0.0-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "f8d496f47a938e760ce2f15ff3e4d18e",
        "sha256": "7a16cb37be678a78cc24d41d707c858039d67cc56cec22abdbd678423d39de4d"
      },
      "downloads": 11,
      "filename": "verif-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f8d496f47a938e760ce2f15ff3e4d18e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 64679,
      "upload_time": "2017-02-11T12:07:18",
      "url": "https://files.pythonhosted.org/packages/81/2d/b16add750ec0935732ee6bcd2f87ec153f1e84552baef26259d2b14e18a8/verif-1.0.0.tar.gz"
    }
  ]
}