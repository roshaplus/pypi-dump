{
  "info": {
    "author": "Konstantin Molchanov",
    "author_email": "moigagoo@live.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Documentation",
      "Topic :: Utilities"
    ],
    "description": "# Blockdiag Preprocessor for Foliant\n\n[Blockdiag](http://blockdiag.com/) is a tool to generate diagrams from plain text. This preprocessor finds diagram definitions in the source and converts them into images on the fly during project build. It supports all Blockdiag flavors: blockdiag, seqdiag, actdiag, and nwdiag.\n\n\n## Installation\n\n```shell\n$ pip install foliantcontrib.blockdiag\n```\n\n\n## Config\n\nTo enable the preprocessor, add `blockdiag` to `preprocessors` section in the project config:\n\n```yaml\npreprocessors:\n  - blockdiag\n```\n\nThe preprocessor has a number of options:\n\n```yaml\npreprocessors:\n  - blockdiag:\n      cache_dir: !path .diagramscache\n      blockdiag_binary_path: blockdiag\n      seqdiag_binary_path: seqdiag\n      actdiag_binary_path: actdiag\n      nwdiag_binary_path: nwdiag\n      params:\n        ...\n```\n\n`cache_dir`\n:   Path to the directory with the generated diagrams. It can be a path relative to the project root or a global one; you can use `~/` shortcut.\n\n    >   **Note**\n    >\n    >   To save time during build, only new and modified diagrams are rendered. The generated images are cached and reused in future builds.\n\n`*_binary_path`\n:   Paths to the `blockdiag`, `seqdiag`, `actdiag`, and `nwdiag` binaries. By default, it is assumed that you have these commands in `PATH`, but if they're installed in a custom place, you can define it here.\n\n`params`\n:   Params passed to the image generation commands (`blockdiag`, `seqdiag`, etc.). Params should be defined by their long names, with dashes replaced with underscores (e.g. `--no-transparency` becomes `no_transparency`); also, `-T` param is called `format` for readability:\n\n        preprocessors:\n          - blockdiag:\n              params:\n              antialias: true\n              font: !path Anonymous_pro.ttf\n\n    To see the full list of params, run `blockdiag -h`.\n\n\n## Usage\n\nTo insert a diagram definition in your Markdown source, enclose it between `<<blockdiag>...</blockdiag>`, `<<seqdiag>...</seqdiag>`, `<actdiag>...</actdiag>`, or `<nwdiag>...</nwdiag>` tags (indentation inside tags is optional):\n\n```markdown\nHere's a block diagram:\n\n<<blockdiag>\n  blockdiag {\n    A -> B -> C -> D;\n    A -> E -> F -> G;\n  }\n</blockdiag>\n\nHere's a sequence diagram:\n\n<<seqdiag>\n  seqdiag {\n    browser  -> webserver [label = \"GET /index.html\"];\n    browser <-- webserver;\n    browser  -> webserver [label = \"POST /blog/comment\"];\n                webserver  -> database [label = \"INSERT comment\"];\n                webserver <-- database;\n    browser <-- webserver;\n  }\n</seqdiag>\n```\n\nTo set a caption, use `caption` option:\n\n```markdown\nDiagram with a caption:\n\n<<blockdiag caption=\"Sample diagram from the official site\">\n  blockdiag {\n    A -> B -> C -> D;\n    A -> E -> F -> G;\n  }\n</blockdiag>\n```\n\nYou can override `params` values from the preprocessor config for each diagram:\n\n```markdown\nBy default, diagrams are in png. But this diagram is in svg:\n\n<<blockdiag caption=\"High-quality diagram\" format=\"svg\">\n  blockdiag {\n    A -> B -> C -> D;\n    A -> E -> F -> G;\n  }\n</blockdiag>\n```\n\n## Troubleshooting\n\n### Could not convert image ...: check that rsvg2pdf is in path\n\nIn order to use svg diagrams in pdf generated by Pandoc, you need to have `rsvg-convert` executable in `PATH`.\n\nOn macOS, `brew install librsvg` does the trick. On Ubuntu, `apt install librsvg2-bin`. On Windows, [download `rsvg-convert.7z`](http://opensourcepack.blogspot.ru/2012/06/rsvg-convert-svg-image-conversion-tool.html) (without fontconfig support), unpack `rsvg-convert.exe`, and put it anywhere in `PATH`. For example, you can put it in the same directory where you run `foliant make`.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/foliant-docs/foliantcontrib",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "foliantcontrib.blockdiag",
    "platform": "any",
    "project_url": "https://pypi.org/project/foliantcontrib.blockdiag/",
    "release_url": "https://pypi.org/project/foliantcontrib.blockdiag/1.0.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Blockdiag preprocessor for Foliant doc maker. Supports blockdiag, seqdiag, actdiag, and nwdiag.",
    "version": "1.0.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1840665417b638e587513aea6f7b032b",
          "sha256": "14356c0f30ac65a818b285224135a0c3df6aa8c6f3d24121ddf78f101bc91e47"
        },
        "downloads": -1,
        "filename": "foliantcontrib.blockdiag-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1840665417b638e587513aea6f7b032b",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 7283,
        "upload_time": "2017-12-14T11:24:12",
        "url": "https://files.pythonhosted.org/packages/97/19/3c37d4c8de5a4c3ac205a1f2a30db741ed2478635dea53a32b8747293a0b/foliantcontrib.blockdiag-1.0.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a905b5f29e47c07d6ad571e5b539cda5",
          "sha256": "93e15c71143319a0939506121c483c8d8f41e6ca15cbe7281406b95c29740796"
        },
        "downloads": -1,
        "filename": "foliantcontrib.blockdiag-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a905b5f29e47c07d6ad571e5b539cda5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4616,
        "upload_time": "2017-12-14T11:24:14",
        "url": "https://files.pythonhosted.org/packages/fd/09/47879dd88a72f3d5966e983f26c58a99b6b5e118b95da7a802b44463e0c8/foliantcontrib.blockdiag-1.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "1840665417b638e587513aea6f7b032b",
        "sha256": "14356c0f30ac65a818b285224135a0c3df6aa8c6f3d24121ddf78f101bc91e47"
      },
      "downloads": -1,
      "filename": "foliantcontrib.blockdiag-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1840665417b638e587513aea6f7b032b",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 7283,
      "upload_time": "2017-12-14T11:24:12",
      "url": "https://files.pythonhosted.org/packages/97/19/3c37d4c8de5a4c3ac205a1f2a30db741ed2478635dea53a32b8747293a0b/foliantcontrib.blockdiag-1.0.0-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "a905b5f29e47c07d6ad571e5b539cda5",
        "sha256": "93e15c71143319a0939506121c483c8d8f41e6ca15cbe7281406b95c29740796"
      },
      "downloads": -1,
      "filename": "foliantcontrib.blockdiag-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a905b5f29e47c07d6ad571e5b539cda5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4616,
      "upload_time": "2017-12-14T11:24:14",
      "url": "https://files.pythonhosted.org/packages/fd/09/47879dd88a72f3d5966e983f26c58a99b6b5e118b95da7a802b44463e0c8/foliantcontrib.blockdiag-1.0.0.tar.gz"
    }
  ]
}