{
  "info": {
    "author": "Christophe Bedetti",
    "author_email": "christophe.bedetti@umontreal.ca",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Dcm2Bids\n========\n\nDcm2Bids reorganises NIfTI files from\n`dcm2niix <https://github.com/rordenlab/dcm2niix>`__ into the `Brain\nImaging Data Structure <http://bids.neuroimaging.io/>`__ (BIDS).\n\nBefore using this software, learn more about BIDS: - read the\n`specifications <http://bids.neuroimaging.io/#download>`__ - a\nconversion `guide <https://www.nature.com/articles/sdata201644>`__ -\nsome `examples <https://github.com/INCF/BIDS-examples>`__ datasets - a\n`validator <https://github.com/INCF/bids-validator>`__ tool\n\nInstall\n-------\n\n::\n\n    pip install dcm2bids\n\nor\n\n::\n\n    git clone https://github.com/cbedetti/Dcm2Bids\n    cd Dcm2Bids\n    python setup.py install\n\nDependencies\n^^^^^^^^^^^^\n\n-  Python 2 or 3 with the ``future`` module\n-  ``dcm2niix`` : DICOM to NIfTI conversion is done with ``dcm2niix``.\n   See `github <https://github.com/rordenlab/dcm2niix>`__ for source\n   code or\n   `NITRC <https://www.nitrc.org/plugins/mwiki/index.php/dcm2nii:MainPage>`__\n   for compiled versions.\n\nUsage\n-----\n\n::\n\n    usage: dcm2bids [-h] -d DICOM_DIR [DICOM_DIR ...] -p PARTICIPANT [-s SESSION]\n                    -c CONFIG [-o OUTPUT_DIR] [--forceDcm2niix] [--clobber]\n                    [-l {DEBUG,INFO,WARNING,ERROR,CRITICAL}] [-a ANONYMIZER]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -d DICOM_DIR [DICOM_DIR ...], --dicom_dir DICOM_DIR [DICOM_DIR ...]\n                            DICOM directory(ies)\n      -p PARTICIPANT, --participant PARTICIPANT\n                            Participant code\n      -s SESSION, --session SESSION\n                            Session code\n      -c CONFIG, --config CONFIG\n                            JSON configuration file (see example/config.json)\n      -o OUTPUT_DIR, --output_dir OUTPUT_DIR\n                            Output BIDS directory, Default: current directory\n      --forceDcm2niix       Overwrite old temporary dcm2niix output if it exists\n      --clobber             Overwrite output if it exists\n      -l {DEBUG,INFO,WARNING,ERROR,CRITICAL}, --log_level {DEBUG,INFO,WARNING,ERROR,CRITICAL}\n                            Set logging level\n      -a ANONYMIZER, --anonymizer ANONYMIZER\n                            Anonymize each anat image by passing it to this shell\n                            command (e.g., pydeface.py - the call syntax must be\n                            anonymizer inputfile outputfile)\n\n    example:\n      dcm2bids -d sourcedata/s101/DICOM/ -s S101 -c code/config_dcm2bids.json\n\nYou need to build the configuration file of your study to let\n``dcm2bids`` associate your acquisitions through BIDS sidecar. Every\nstudy is different and this step needs a little bit of work.\n\nSidecar files are ``JSON`` files with meta informations about the\nacquisition. These are created automatically with dcm2niix.\n\nThe dcm2bids configuration file uses also the ``JSON`` format and one\nexample is provided in the ``example`` directory.\n\nIt is recommended to use an editor with syntax highlighting to build a\ncorrect JSON file. Here is an `online <http://jsoneditoronline.org/>`__\none.\n\nConfiguration file\n------------------\n\n::\n\n    {\n        \"descriptions\": [\n            {\n                \"dataType\": \"anat\",\n                \"modalityLabel\": \"T2w\",\n                \"criteria\": {\n                    \"SeriesDescription\": \"*T2*\",\n                    \"EchoTime\": 0.1\n                }\n            },\n            {\n                \"dataType\": \"func\",\n                \"modalityLabel\": \"bold\",\n                \"customLabels\": \"task-rest\",\n                \"criteria\": {\n                    \"SidecarFilename\": \"006*\"\n                }\n            }\n        ]\n    }\n\nThe ``descriptions`` field is a list of description, each describing\nsome acquisition. In this example, the configuration describes two\nacquisitions, a T2 weigthed and resting state fMRI.\n\n``dataType``\n^^^^^^^^^^^^\n\nIt is a mandatory field. Here is a definition from ``bids_specs1.0.2``\npdf:\n\n    A functional group of different types of MRI data. In BIDS we define\n    four data types: func (task based and resting state functional MRI),\n    dwi (diffusion weighted imaging), fmap (field inhomogeneity mapping\n    data such as field maps), anat (structural imaging such as T1, T2,\n    etc.)\n\n``modalityLabel``\n^^^^^^^^^^^^^^^^^\n\nIt is a mandatory field. It describes the modality of the acquisition\nlike ``T1w``, ``T2w`` or ``bold``.\n\n``customLabels``\n^^^^^^^^^^^^^^^^\n\nIt is an optional field. For some acquisitions, you need to add\ninformation in the file name. For resting state fMRI, it is usally\n``task-rest``.\n\nTo know more on how to set these fields, read the `BIDS\nspecifications <http://bids.neuroimaging.io/#download>`__.\n\n``criteria``\n^^^^^^^^^^^^\n\ndcm2bids will try to match the sidecars of dcm2niix to the descriptions\nof the configuration file. The values you enter inside the criteria\ndictionnary are patterns. They will be compared to the corresponding key\nof the sidecar.\n\nThe pattern matching is shell-style. It's possible to use wildcard\n``*``, single character ``?`` etc ... Please have a look at the `GNU\ndocumentation <https://www.gnu.org/software/bash/manual/html_node/Pattern-Matching.html>`__\nto know more.\n\nFor example, in the first description, the pattern ``*T2*`` will be\ncompared to the value of ``SeriesDescription`` of a sidecar.\n``AXIAL_T2_SPACE`` will be a match, ``AXIAL_T1`` won't.\n\n``dcm2bids`` create a ``SidecarFilename`` key if you prefer to also\nmatch with the filename of the sidecar.\n\nYou can enter several criteria. **All criteria must match** for a\ndescription to be link to a sidecar.\n\nOutput\n------\n\ndcm2bids creates ``sub-<PARTICIPANT>`` directories in the output\ndirectory (by default the folder where the script is launched).\n\nSidecars with one matching description will be convert to BIDS. If a\nfile already exists, dcm2bids won't overwrite it. You should use the\n``--clobber`` option to overwrite files.\n\nIf a description matches several sidecars, dcm2bids will add the custom\nlabel ``run-`` to the filename.\n\nSidecars with no or more than one matching descriptions are kept in\n``tmp_dcm2niix`` directory. Users can review these mismatches to change\nthe configuration file accordingly.\n\nTools\n-----\n\nHelper\n^^^^^^\n\n``dcm2bids_helper -d DICOM_DIR``\n\nTo build the configuration file, you need to have a example of the\nsidecars. You can use ``dcm2bids_helper`` with the DICOMs of one\nparticipant. It will launch dcm2niix and save the result inside the\n``tmp_dcm2bids/dcm2niix-example`` of the output directory.\n\nScaffold\n^^^^^^^^\n\n``dcm2bids_scaffold [-o OUTPUT_DIR]``\n\nCreate basic BIDS files and directories in the output directory (by\ndefault folder where the script is launched).\n",
    "docs_url": null,
    "download_url": "https://github.com/cbedetti/Dcm2Bids/archive/1.1.4.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/cbedetti/Dcm2Bids",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dcm2bids",
    "platform": "",
    "project_url": "https://pypi.org/project/dcm2bids/",
    "release_url": "https://pypi.org/project/dcm2bids/1.1.4/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Reorganising NIfTI files from dcm2niix into the Brain Imaging Data Structure",
    "version": "1.1.4"
  },
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "da87ee1accf10b069794be5db3bc0852",
          "sha256": "be45b6e6d48fa78f0a6590b2920cdace134cce816d494241603eebb17c26a9e1"
        },
        "downloads": -1,
        "filename": "dcm2bids-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "da87ee1accf10b069794be5db3bc0852",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11195,
        "upload_time": "2017-11-01T22:17:59",
        "url": "https://files.pythonhosted.org/packages/c6/c3/3741225b049fc8417933618c96b18dc0f55d776a1ea3fbaa07f87556a0f4/dcm2bids-1.0.1.tar.gz"
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c40e92593efe18257759848b511c4767",
          "sha256": "79fde993cfb8a387783bfb050683d2d338700076681a6ebb978f8271762356a5"
        },
        "downloads": -1,
        "filename": "dcm2bids-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c40e92593efe18257759848b511c4767",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11219,
        "upload_time": "2017-11-03T17:30:03",
        "url": "https://files.pythonhosted.org/packages/d0/6e/0d46b2265d8b52a3321b544ed6370f741cdc91de69a94e6f04c0720c23ac/dcm2bids-1.1.2.tar.gz"
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fdc19521d2e71cec25d5b9152629e6d1",
          "sha256": "a782991ce9341abc93123472a96a56cb59efcb3c7e91b3fc74264455df7180d5"
        },
        "downloads": -1,
        "filename": "dcm2bids-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fdc19521d2e71cec25d5b9152629e6d1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9641,
        "upload_time": "2017-11-09T16:04:54",
        "url": "https://files.pythonhosted.org/packages/3d/a4/95dcd3684993f5d96f6c67b5fbd477a2f58596f072f84dce836157bc8383/dcm2bids-1.1.3.tar.gz"
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9f63cd33ded5ff9e671d56bb0d4247d3",
          "sha256": "f81121e56dfc92b4cb7dea68b2fb866823469b339c259bb89f547345969662df"
        },
        "downloads": -1,
        "filename": "dcm2bids-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9f63cd33ded5ff9e671d56bb0d4247d3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26811,
        "upload_time": "2017-11-09T16:23:56",
        "url": "https://files.pythonhosted.org/packages/9b/86/40c99c11a0681f7cc2b3c4813f895196d1e1bd6ea717d87a266f0df1fb24/dcm2bids-1.1.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9f63cd33ded5ff9e671d56bb0d4247d3",
        "sha256": "f81121e56dfc92b4cb7dea68b2fb866823469b339c259bb89f547345969662df"
      },
      "downloads": -1,
      "filename": "dcm2bids-1.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "9f63cd33ded5ff9e671d56bb0d4247d3",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 26811,
      "upload_time": "2017-11-09T16:23:56",
      "url": "https://files.pythonhosted.org/packages/9b/86/40c99c11a0681f7cc2b3c4813f895196d1e1bd6ea717d87a266f0df1fb24/dcm2bids-1.1.4.tar.gz"
    }
  ]
}