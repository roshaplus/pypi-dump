{
  "info": {
    "author": "Ivo Rothschild",
    "author_email": "ivo@clarify.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3"
    ],
    "description": ".. image:: https://travis-ci.org/irothschild/stefuna.svg\n   :target: https://travis-ci.org/irothschild/stefuna\n\n===============================\nstefuna\n===============================\n\nStefuna is a simple AWS Step Function Activity server framework.\nIt makes it incredibly quick and easy to write workers to\nprocess activity tasks in Python.\n\n\nImplementation\n---------------\n\nStefuna uses a multiprocessing Pool of pre-forked worker processes\nto run the activity tasks. The is a single instance of a Worker\nclass in each worker process. To implement your task, simply\ncreate a Worker subclass, override the\n``run_task(self, task_token, input_data)`` method and start the\nserver.\n\nThe ``run_task`` method can do whatever work it requires and then\nreturn a result as a string or dict (which is automatically JSON\nstringified). It can be a long-running task but the worker process\nwon't be released until the method returns.\n\nIf ``run_task`` raises an exception, the task is failed\nwith a ``Task.Failure`` error which can be handled in the Step\nFunction state machine. Alternatively, a worker can call\n```self.send_task_failure(error, cause)``` with a custom error\nstring and return value from ```run_task``` will be ignored.\n\nConfigurable heartbeats are supported for longer-running tasks.\n\n\nGetting Started\n---------------\n\nSee the examples folder for the files described below.\n\nCreate a worker class, which is a subclass of the `stefuna.Worker`\nin the file `hello_worker.py`:\n\n.. code-block:: python\n\n    import logging\n    from stefuna import Worker\n\n    logger = logging.getLogger('stefuna.example')\n\n\n    class HelloWorker(Worker):\n\n\tdef init(self):\n\t    \"\"\"Initialize the single instance in a worker\"\"\"\n\t    pass\n\n\tdef run_task(self, task_token, input_data):\n\t    self.logger.debug('Worker in run_task')\n\n\t    # Do some work!\n\n\t    # Return value can be a string or a dict/array that\n\t    # will be JSON stringified.\n\t    return {\"message\": \"Hello World\"}\n\n\nCreate a config file `hello_config.py`, setting the worker class, server name, and\nactivity ARN:\n\n.. code-block:: python\n\n    #\n    # Stefuna server worker config file\n    #\n\n    # The module path of the worker class\n    worker = 'examples.hello_worker.HelloWorker'\n\n    # The base name of the server that will be combined with host and pid\n    # and used when requesting tasks from AWS.\n    name = 'HelloExample'\n\n    # Set the ARN for the activity that this server will work on.\n    activity_arn = 'arn:aws:states:us-west-2:00000000000000:activity:hello'\n\n    # The number of worker processes.\n    # If None, it will be set to the number of cores.\n    processes = None\n\n    # Maximum number of seconds between heartbeats.\n    # None or 0 means there is no heartbeat.\n    heartbeat = 120\n\n    # Maximum number of tasks for a worker to run before the worker\n    # process is automatically killed and a new one created.\n    # If None, workers will not be killed.\n    maxtasksperchild = None\n\n    # The worker_config is an arbitrary dictionary that is available\n    # in the worker instance as self.config\n    # Use it for worker-specific configuration.\n    worker_config = {\n\t'foo': 'bar'\n    }\n\n\nRun the server:\n\n.. code-block:: bash\n\n    $ stefuna --config=hello_config\n\n\nHistory (Change Log)\n--------------------\n\nSee `HISTORY.rst <HISTORY.rst>`_\n\n\nLicense\n-------\n\nMIT License\n\nSee `LICENSE <LICENSE>`_\n\n\n\n\nHistory\n-------\n\n0.8.2 [2017-08-16]\n* Set the region based on region in activity ARN.\n\n0.8.1 [2017-08-15]\n* First public release\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/irothschild/stefuna",
    "keywords": "AWS Step Functions Activity task server worker",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stefuna",
    "platform": "",
    "project_url": "https://pypi.org/project/stefuna/",
    "release_url": "https://pypi.org/project/stefuna/0.8.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "AWS Step Function Activity server framework",
    "version": "0.8.2"
  },
  "releases": {
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "83bb6481bc449db1cc9776336120b4a5",
          "sha256": "a87668af7a144a05719798f70aa05c2c41d125930583e692f2f359fc69bf0dea"
        },
        "downloads": 0,
        "filename": "stefuna-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "83bb6481bc449db1cc9776336120b4a5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7431,
        "upload_time": "2017-08-15T14:19:45",
        "url": "https://files.pythonhosted.org/packages/df/eb/00eb52385d95075849be5fba6a53c01b9d21b1783617b6fd2b82d75412f3/stefuna-0.8.0.tar.gz"
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "29fc9952698f894b2c32d258c53d0b6c",
          "sha256": "989d145da8f2b4f24ec9c7b3ab7ed24dd7e541dd7b58e5efa15aa76d79efda19"
        },
        "downloads": 0,
        "filename": "stefuna-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "29fc9952698f894b2c32d258c53d0b6c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8647,
        "upload_time": "2017-08-15T14:25:39",
        "url": "https://files.pythonhosted.org/packages/89/66/aa5e5e404c31bba78a9ea0ac8dc60b4b0ee155f47a1ad04678bd95b04404/stefuna-0.8.1.tar.gz"
      }
    ],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d693a502d046fae65474e3113a856702",
          "sha256": "607aa8fe889e32e481b70952f6d04241dfe51b46ae99166f8e2af7da0824228f"
        },
        "downloads": 0,
        "filename": "stefuna-0.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d693a502d046fae65474e3113a856702",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8956,
        "upload_time": "2017-08-16T17:42:11",
        "url": "https://files.pythonhosted.org/packages/5d/1d/db0b7e70fd4a29c35dd190f67437a77655ad0b73bb608502a56beddab41a/stefuna-0.8.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d693a502d046fae65474e3113a856702",
        "sha256": "607aa8fe889e32e481b70952f6d04241dfe51b46ae99166f8e2af7da0824228f"
      },
      "downloads": 0,
      "filename": "stefuna-0.8.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d693a502d046fae65474e3113a856702",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8956,
      "upload_time": "2017-08-16T17:42:11",
      "url": "https://files.pythonhosted.org/packages/5d/1d/db0b7e70fd4a29c35dd190f67437a77655ad0b73bb608502a56beddab41a/stefuna-0.8.2.tar.gz"
    }
  ]
}