{
  "info": {
    "author": "Meteorological Service of Canada, Environment Canada",
    "author_email": "tom.kralidis@canada.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: GIS"
    ],
    "description": "[![Build Status](https://travis-ci.org/geopython/pygeometa.png)](https://travis-ci.org/geopython/pygeometa)\n\n# pygeometa\n\npygeometa is a Python package to generate metadata for geospatial datasets.\n\n## Table of Contents\n* [Overview](#overview)\n* [Features](#features)\n* [Quickstart](#quickstart)\n* [Installation](#installation)\n  * [Requirements](#requirements)\n  * [Dependencies](#dependencies)\n  * [Installing the Package](#installing-the-package)\n* [Running](#running)\n  * [From the command line](#from-the-command-line)\n  * [Using the API from Python](#using-the-api-from-python)\n* [Development](#development)\n  * [Setting up a Development Environment](#setting-up-a-development-environment)\n  * [Adding Another Metadata Schema to the Core](#adding-another-metadata-schema-to-the-core)\n  * [Running Tests](#running-tests)\n  * [Code Conventions](#code-conventions)\n  * [Bugs and Issues](#bugs-and-issues)\n* [History](#history)\n* [Contact](#contact)\n\n\n## Overview\n\npygeometa is a Python package to generate metadata for geospatial datasets. Metadata content is managed by pygeometa in simple Metadata Control Files (MCF) which consist of 'parameter = value' pairs. pygeometa generates metadata records from MCF files based on the schema specified by the user, such as ISO-19139. pygeometa supports nesting MCF files, which reduces duplication of metadata content common to multiple records and ease maintenance.\n\n## Features\n\n* simple configuration: inspired by Python's ConfigParser\n* extensible: template architecture allows for easy addition of new metadata formats\n* flexible: use as a command-line tool or integrate as a library\n\n## Quickstart\n\nWorkflow to generate metadata XML:\n\n1. Install pygeometa\n2. Create a 'metadata control file' .mcf file that contains metadata information \n  1. Modify the [sample.mcf](https://github.com/geopython/pygeometa/blob/master/sample.mcf) example\n  2. pygeometa supports nesting MCF files together, allowing providing a single MCF file for common metadata parameters (e.g. common contact information)\n  3. Refer to the [Metadata Control File Reference documentation](https://github.com/geopython/pygeometa/blob/master/doc/MCF_Reference.md) \n3. Run pygeometa for the .mcf file with a specified target metadata schema\n\n\n\n## Installation\n\npygeometa is best installed and used within a Python virtualenv.\n\n### Requirements\n\n* Python 2.7 and above.  Works with Python 3\n* Python [virtualenv](https://virtualenv.pypa.io/) package\n\n### Dependencies\n\nDependencies are listed in [requirements.txt](requirements.txt). Dependencies are automatically installed during pygeometa's installation.\n\n### Installing the Package\n\n```bash\nvirtualenv my-env\ncd my-env\n. bin/activate\ngit clone https://github.com/geopython/pygeometa.git\ncd pygeometa\npython setup.py build\npython setup.py install\n```\n\n## Running\n\n### From the command line\n\n```bash\ngenerate_metadata.py --mcf=path/to/file.mcf --schema=iso19139  # to stdout\ngenerate_metadata.py --mcf=path/to/file.mcf --schema=iso19139 --output=some_file.xml  # to file\n# to use your own defined schema:\ngenerate_metadata.py --mcf=path/to/file.mcf --schema_local=/path/to/my-schema --output=some_file.xml  # to file\n```\n\n### Supported schemas\nSchemas supported by pygeometa:\n* iso19139, [reference](http://www.iso.org/iso/catalogue_detail.htm?csnumber=32557)\n* iso19139-hnap, [reference](http://www.gcpedia.gc.ca/wiki/Federal_Geospatial_Platform/Policies_and_Standards/Catalogue/Release/Appendix_B_Guidelines_and_Best_Practices/Guide_to_Harmonized_ISO_19115:2003_NAP)\n* [wmo-cmp](docs/wmo-cmp.md), [reference](http://wis.wmo.int/2013/metadata/version_1-3-0/WMO_Core_Metadata_Profile_v1.3_Part_1.pdf) \n* Local schema, specified with ```--schema_local=/path/to/my-schema```\n\n### Using the API from Python\n\n```python\nfrom pygeometa import render_template\n# default schema\nxml_string = render_template('/path/to/file.mcf', schema='iso19139')\n# user-defined schema\nxml_string = render_template('/path/to/file.mcf', schema_local='/path/to/new-schema')\nwith open('output.xml', 'w') as ff:\n    ff.write(xml_string)\n# render from an MCF stored in a string\nmcf_string = '...'  # some string\nxml_string = render_template_string(mcf_string, schema='iso19139')\n# render from an MCF as a ConfigParser object\nfrom pygeometa import render_template\nmcf_cp = '...'  # some ConfigParser object\nxml_string = render_template_string(mcf_cp, schema='iso19139')\n```\n\n## Development\n\n### Setting up a Development Environment\n\nSame as installing a package.  Use a virtualenv.  Also install developer requirements:\n\n```bash\npip install -r requirements-dev.txt\n```\n\n### Adding Another Metadata Schema to the Core\n\nList of supported metadata schemas in `pygeometa/templates/`\n\nTo add support to new metadata schemas:\n```bash\ncp -r pygeometa/templates/iso19139 pygeometa/templates/new-schema\n```\nThen modify `*.j2` files in the new `pygeometa/templates/new-schema` directory to comply to new metadata schema.\n\n### Running Tests\n\n```bash\n# via distutils\npython setup.py test\n# manually\ncd tests\npython run_tests.py\n```\n\n### Code Conventions\n\n* [PEP8](https://www.python.org/dev/peps/pep-0008)\n\n### Bugs and Issues\n\nAll bugs, enhancements and issues are managed on [GitHub](https://github.com/geopython/pygeometa/issues).\n\n## History\n\npygeometa originated within an internal project called pygdm, which provided generic geospatial data management functions.  pygdm (now at end of life) was used for generating MSC/CMC geospatial metadata.  pygeometa was pulled out of pygdm to focus on the core requirement of generating geospatial metadata within a real-time environment.\n\nIn 2015 pygeometa was made publically available in support of the Treasury Board [Policy on Acceptable Network and Device Use](http://www.tbs-sct.gc.ca/pol/doc-eng.aspx?id=27122).\n\n## Contact\n\n* [Tom Kralidis](http://geds20-sage20.ssc-spc.gc.ca/en/GEDS20/?pgid=015&dn=CN%3Dtom.kralidis%40canada.ca%2COU%3DDAT-GES%2COU%3DMON-STR%2COU%3DMON-DIR%2COU%3DMSCB-DGSMC%2COU%3DDMO-CSM%2COU%3DEC-EC%2CO%3Dgc%2CC%3Dca)\n* [Alexandre Leroux](http://geds20-sage20.ssc-spc.gc.ca/en/GEDS20/?pgid=015&dn=CN%3Dalexandre.leroux%40canada.ca%2COU%3DDPS-DPS%2COU%3DCAN-OPE%2COU%3DCAN-CEN%2COU%3DMSCB-DGSMC%2COU%3DDMO-CSM%2COU%3DEC-EC%2CO%3Dgc%2CC%3Dca)",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/geopython/pygeometa",
    "keywords": "geospatial metadata catalogue discovery",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pygeometa",
    "platform": "all",
    "project_url": "https://pypi.org/project/pygeometa/",
    "release_url": "https://pypi.org/project/pygeometa/0.2.2/",
    "requires_python": null,
    "summary": "pygeometa is a Python package to generate metadata for geospatial datasets",
    "version": "0.2.2"
  },
  "releases": {
    "0.1.0": [],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4f083dba723435e1f36b08c4762b97bc",
          "sha256": "e5d59adf506b908113d06f9ca7e5905f815a3c8d52b0d92db19bf675c6c5e38a"
        },
        "downloads": 14,
        "filename": "pygeometa-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4f083dba723435e1f36b08c4762b97bc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21332,
        "upload_time": "2017-03-23T19:09:19",
        "url": "https://files.pythonhosted.org/packages/7d/d2/e9f2de8e02ff9faaf11386a6a84eee6368569e654281497e4a1dcfda8f77/pygeometa-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d990266cff6db5c43aad7a50f8d51aa9",
          "sha256": "088b6073dc0f8a97d825ccd2563d8037dc8a1fd8a6b070d99e919ec2a34fc2f4"
        },
        "downloads": 16,
        "filename": "pygeometa-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d990266cff6db5c43aad7a50f8d51aa9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18496,
        "upload_time": "2017-03-25T16:53:58",
        "url": "https://files.pythonhosted.org/packages/f4/8f/1494e9380299c84249a6119b6f77d9845c49d0b32408a7d79a45d0939284/pygeometa-0.2.1.tar.gz"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c9ced4776171358777a768e7f5e36d29",
          "sha256": "f7663b4cfea5fd1792faf447e31e53da51f54b64c825a22edbf6427d5ff31637"
        },
        "downloads": 15,
        "filename": "pygeometa-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c9ced4776171358777a768e7f5e36d29",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18728,
        "upload_time": "2017-03-25T17:07:31",
        "url": "https://files.pythonhosted.org/packages/b1/d1/86da0640118bcbdac591f4ffa9fc7e37a9d3b55ef8ef2d59473cad8128a5/pygeometa-0.2.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c9ced4776171358777a768e7f5e36d29",
        "sha256": "f7663b4cfea5fd1792faf447e31e53da51f54b64c825a22edbf6427d5ff31637"
      },
      "downloads": 15,
      "filename": "pygeometa-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c9ced4776171358777a768e7f5e36d29",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 18728,
      "upload_time": "2017-03-25T17:07:31",
      "url": "https://files.pythonhosted.org/packages/b1/d1/86da0640118bcbdac591f4ffa9fc7e37a9d3b55ef8ef2d59473cad8128a5/pygeometa-0.2.2.tar.gz"
    }
  ]
}