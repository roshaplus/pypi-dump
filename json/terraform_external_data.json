{
  "info": {
    "author": "Adam Burns",
    "author_email": "adam@operatingops.org",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "About\n=====\n\nProvides a decorator that implements terraform's `external program protocol`_ for data sources.\n\n* Reads in JSON from :code:`stdin`.\n* Validates input.\n* Outputs JSON to :code:`stdout`.\n* Validates output.\n* Prints human-readable, one-line errors on :code:`stderr`.\n* Returns a non-zero status code on errors.\n\nThis saves you from fiddling with the spec and makes it easy to write several external data scripts without duplicating\ncode.\n\nThe wrapped function must expect its first positional argument to be a dictionary of the query data.\n\nExample Usage\n=============\n\n1. As always, create and activate a venv_ (Python 3) or virtualenv_ (Python 2).\n\n   .. code:: bash\n\n      python3 -m venv env3\n      source env3/bin/activate\n\n2. Install `terraform_external_data` in the env.\n\n   .. code:: bash\n\n      pip install terraform_external_data\n\n\n3. Write a script with a data collection function decorated by :code:`terraform_external_data` (the :code:`@` syntax below). Your function must take at least one argument, the query data passed in by terraform. For example, :code:`get_cool_data.py`:\n\n   .. code:: python\n\n      from terraform_external_data import terraform_external_data\n\n      @terraform_external_data\n      def get_cool_data(query):\n          \"\"\"\n          Dummy function that simulates data collection with a count.\n\n          Here you could reach out to an API, inspect local files, etc.\n          \"\"\"\n          count = 0\n          for i in range(3):\n              count += 1\n\n          # Terraform requires the values you return be strings,\n          # so terraform_external_data will error if they aren't.\n          return {query['thing_to_count']: str(count)}\n\n      if __name__ == '__main__':\n          # Always protect Python scripts from import side effects with\n          # a condition to check the __name__. Not specifically necessary\n          # for terraform_external_data, but it's a best practice in general.\n          get_cool_data()\n\n4. Add a :code:`data` resource to your terraform file. For example, :code:`terraform.tf`:\n\n   ::\n\n      data \"external\" \"cars_count\" {\n        program = [\"python\", \"${path.module}/get_cool_data.py\"]\n\n        query = {\n          # This is the query data your function will receive as an argument.\n          thing_to_count = \"cars\"\n        }\n      }\n\n      # Reference the data like any terraform var. This example uses an\n      # output so it doesn't modify infrastructure.\n      output \"cars_count\" {\n        value = \"${data.external.cars_count.result.cars}\"\n      }\n\n\n.. _external program protocol: https://www.terraform.io/docs/providers/external/data_source.html#external-program-protocol\n.. _venv: https://docs.python.org/3/library/venv.html\n.. _virtualenv: https://virtualenv.pypa.io/en/stable/\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/operatingops/terraform_external_data",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "terraform_external_data",
    "platform": "",
    "project_url": "https://pypi.org/project/terraform_external_data/",
    "release_url": "https://pypi.org/project/terraform_external_data/0.0.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Provides a decorator that implements terraform's external program protocol for data sources.",
    "version": "0.0.3"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5d8958b4cb60969d45f5ba9d4170c950",
          "sha256": "e8612ccbfe4c11fe691cf85faaef0b194961864ae32b45dde65b7e06c637387b"
        },
        "downloads": -1,
        "filename": "terraform_external_data-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5d8958b4cb60969d45f5ba9d4170c950",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1553,
        "upload_time": "2017-12-25T10:05:43",
        "url": "https://files.pythonhosted.org/packages/3b/a1/93dbbe4669c6d10177d1741239be67df90b266efcadb2d85b27f2cc79ef0/terraform_external_data-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a2fbb51f251781091dc9dbee57e552a1",
          "sha256": "6ab128bfecd78d90ca24be7e9608660f1f152d3ae9c3eaa5cd650cdbea2830a1"
        },
        "downloads": -1,
        "filename": "terraform_external_data-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a2fbb51f251781091dc9dbee57e552a1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1584,
        "upload_time": "2018-01-07T20:47:11",
        "url": "https://files.pythonhosted.org/packages/eb/c5/53a124f10ff04282b30023d57d0b13f150c00a591b9b1a8c843a6f86b938/terraform_external_data-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fe127e4b20b19a528c3ae827fe1c4847",
          "sha256": "74f3ef667ad7e713a9d4a79403f647a5f82d6d72d641182444634f5a7615c4e5"
        },
        "downloads": -1,
        "filename": "terraform_external_data-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fe127e4b20b19a528c3ae827fe1c4847",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2971,
        "upload_time": "2018-01-07T21:33:23",
        "url": "https://files.pythonhosted.org/packages/86/64/ccb6c79e76f254ff01fdd02bf4729cc5e04de615e8177f55fcba8afafbd4/terraform_external_data-0.0.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fe127e4b20b19a528c3ae827fe1c4847",
        "sha256": "74f3ef667ad7e713a9d4a79403f647a5f82d6d72d641182444634f5a7615c4e5"
      },
      "downloads": -1,
      "filename": "terraform_external_data-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "fe127e4b20b19a528c3ae827fe1c4847",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 2971,
      "upload_time": "2018-01-07T21:33:23",
      "url": "https://files.pythonhosted.org/packages/86/64/ccb6c79e76f254ff01fdd02bf4729cc5e04de615e8177f55fcba8afafbd4/terraform_external_data-0.0.3.tar.gz"
    }
  ]
}