{
  "info": {
    "author": "Sergei Kovalev",
    "author_email": "zili.tnd@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "Django-Rester\n=============\n\n|build| |codacy| |pypi| |license|\n\nPackage for creating API with built-in validation and authentication\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis product is designed to build API endpoints of varying complexity\nand nesting.\n\nThe core is a view class - BaseApiView (the inheritor of the standard\ndjango view)\n\n--------------\n\n1. settings\n'''''''''''\n\nDEFAULT settings (may be overridden):\n\n.. code:: python\n\n    DJANGO_RESTER = {\n        'LOGIN_FIELD': 'username',\n        'AUTH_BACKEND': 'django_rester.rester_jwt',\n        'RESPONSE_STRUCTURE': False,  # here can be a dict with 'success', 'message' and 'data' as a values\n    }\n\n    DJANGO_RESTER_JWT: {\n        'SECRET': 'secret_key',\n        'EXPIRE': 60 * 60 * 24 * 14,  # seconds\n        'AUTH_HEADER': 'Authorization',\n        'AUTH_HEADER_PREFIX': 'jwt',\n        'ALGORITHM': 'HS256',\n        'PAYLOAD_LIST': ['username'],\n        'USE_REDIS': False,  # here can be an int value (redis db number)\n    }\n\n**DJANGO\\_RESTER** - django-rester settings:\n\n\u00a0\u00a0\u00a0\u00a0 **LOGIN\\_FIELD** - user login field (default is 'username' as in\ndjango)\n\n\u00a0\u00a0\u00a0\u00a0 **AUTH\\_BACKEND** - authentication backend\\*\n\n\u00a0\u00a0\u00a0\u00a0 **RESPONSE\\_STRUCTURE** - use or not @try\\_response() decorator by\ndefault.\n\n**DJANGO\\_RESTER\\_JWT** - JWT authentication settings (in case of\n'RESTER\\_AUTH\\_BACKEND' = 'django\\_rester.rester\\_jwt')\\*:\n\n\u00a0\u00a0\u00a0\u00a0 **SECRET** - JWT secret key\n\n\u00a0\u00a0\u00a0\u00a0 **EXPIRE** - token expiration time (datetime.now() +\nRESTER\\_EXPIRATION\\_DELTA)\n\n\u00a0\u00a0\u00a0\u00a0 **AUTH\\_HEADER** - HTTP headed, which will be used for auth token.\n\n\u00a0\u00a0\u00a0\u00a0 **AUTH\\_HEADER\\_PREFIX** - prefix for auth token\n(\"Authorization:<prefix> <token>\")\n\n\u00a0\u00a0\u00a0\u00a0 **ALGORITHM** - cypher algorithm\n\n\u00a0\u00a0\u00a0\u00a0 **PAYLOAD\\_LIST** - payload list for token encode (will take\nspecified **user** attributes to create token)\n\n\u00a0\u00a0\u00a0\u00a0 **USE\\_REDIS** - use redis-server to store tokens or not \\*\\*\\*\n\n2. built-in statuses\n''''''''''''''''''''\n\n``from django_rester.status import ...`` slightly modified status.py\nfrom `DRF <http://www.django-rest-framework.org/>`__, it's simple and\neasy to understand.\n\nAny statuses used in this documentation are described in that file.\n\\*\\*\\* ##### 3. built-in exceptions:\n\n``from django_rester.exceptions import ...`` you may use those\nexceptions to interact with **@try\\_response** decorator (good example\nof usage), or in any other way you want\n\n**class ResponseError(Exception)**\n\n\u00a0\u00a0\u00a0\u00a0base exception class, standard Exception inheritor, added response\nstatus - HTTP\\_500\\_INTERNAL\\_SERVER\\_ERROR\n\n**class ResponseBadRequest(ResponseError)**\n\n\u00a0\u00a0\u00a0\u00a0ResponseError inheritor, response status changed to\nHTTP\\_400\\_BAD\\_REQUEST\n\n**class ResponseServerError(ResponseError)**\n\n\u00a0\u00a0\u00a0\u00a0ResponseError inheritor\n\n**class ResponseAuthError(ResponseError)**\n\n\u00a0\u00a0\u00a0\u00a0ResponseError inheritor, response status changed to\nHTTP\\_401\\_UNAUTHORIZED\n\n**class ResponseOkMessage(ResponseError)**\n\n\u00a0\u00a0\u00a0\u00a0ResponseError inheritor\n\n\u00a0\u00a0\u00a0\u00a0acceptable arguments: \\*, message='', data=None,\nstatus=HTTP\\_200\\_OK\n\n**class ResponseFailMessage(ResponseError)**\n\n\u00a0\u00a0\u00a0\u00a0ResponseError inheritor\n\n\u00a0\u00a0\u00a0\u00a0acceptable arguments: \\*, message='', data=None,\nstatus=HTTP\\_500\\_INTERNAL\\_SERVER\\_ERROR\n\n**class ResponseBadRequestMsgList(ResponseError)**\n\n\u00a0\u00a0\u00a0\u00a0ResponseError inheritor\n\n\u00a0\u00a0\u00a0\u00a0acceptable arguments: \\*, messages=None,\nstatus=HTTP\\_400\\_BAD\\_REQUEST\n\n\u00a0\u00a0\u00a0\u00a0messages could be list, tuple or string. \\*\\*\\* ##### 4. permission\nclasses\n\n``from django_rester.permission import ...`` Permission classes created\nto interact wih **@permissions()** decorator (good example of usage), or\nin any other way you want\n\nAll permission classes accepts only one argument on **init** - django\nview **request** object.\n\nAll permission classes has 2 attributes, defined on **init**:\n\n**check**: Bool - returns **True** or **False** if request.user may or\nmay not access endpoint method\n\n**message**: could be a string or list of messages **class\nBasePermission**\n\n\u00a0\u00a0\u00a0\u00a0contains all base permission methods, it is not recommended to use\nit directly in projects\n\n**class IsAuthenticated(BasePermission)**\n\n\u00a0\u00a0\u00a0\u00a0check = **True** if user authenticated and active, else **False**\n\n**class IsAdmin(BasePermission)**\n\n\u00a0\u00a0\u00a0\u00a0check = **True** if user authenticated and active and is\\_superuser,\nelse **False**\n\n**class AllowAny(BasePermission)**\n\n\u00a0\u00a0\u00a0\u00a0check = **True** for any user (even anonymous)\n\n--------------\n\n5. built-in decorators\n''''''''''''''''''''''\n\n``from django_rester.decorators import ...`` **@permissions()**\n\n\u00a0\u00a0\u00a0\u00a0accepts permission class or list, tuple of classes.\n\n\u00a0\u00a0\u00a0\u00a0if check is passed, then user will be allowed to use endpoint\n\nexample:\n\n::\n\n    class Example(BaseApiView):\n\n        @permissions(IsAdmin)\n        def post(request, request_data, *args, **kwargs):\n            pass\n\n--------------\n\n6. built-in views\n'''''''''''''''''\n\n``from django_rester.views import ...`` **class BaseApiView(View)**\n\ninherits from standard django view.\n\nclass attributes:\n\n\u00a0\u00a0\u00a0\u00a0**auth** - authentication backend instance\n\n\u00a0\u00a0\u00a0\u00a0**request\\_fields** - request validator\n\nclass HTTP methods (get, post, put, etc...) accepts next arguments:\nrequest, request\\_data, \\*args, \\*\\*kwargs\n\n\u00a0\u00a0\u00a0\u00a0**request** - standard django view request object\n\n\u00a0\u00a0\u00a0\u00a0**request\\_data** - all received request parameters as json\nserialized object\n\nUser authentication with selected authentication backend **class\nLogin(BaseApiView)**\n\nCould be used to authenticate user with selected authentication backend.\n\n\u00a0\u00a0\u00a0\u00a0Allowed method is 'POST' only.\n\n\u00a0\u00a0\u00a0\u00a0Requires username and password in request parameters (username\nfieldname parameter may be set in settings)\n\n\u00a0\u00a0\u00a0\u00a0Returns token and HTTP\\_200\\_OK status code if authentication\nsuccess, error message and HTTP\\_401\\_UNAUTHORIZED if failed **class\nLogout(BaseApiView)**\n\nCould be used to logout (with redis support) or just to let know\nfrontend about logout process. Any view could be used the same way, here\nis a **simple example**:\n\n\u00a0\u00a0\u00a0\u00a0**app/views.py:**\n\n::\n\n    from django_rester.views import BaseAPIView\n    from django_rester.decorators import permissions\n    from django_rester.exceptions import ResponseOkMessage\n    from django_rester.permission import IsAdmin\n    from django_rester.status import HTTP_200_OK\n    from app.models import Model\n    from django_rester.fields import JSONField\n\n    class TestView(BaseAPIView):\n\n        request_fields = {\"POST\": {\n            \"id\": JSONField(field_type=int, required=True, ),\n            \"title\": JSONField(field_type=str, required=True, default='some_title'),\n            \"fk\": [{\"id\": JSONField(field_type=int, required=True)}],\n        }}\n\n\n        def retrieve_items():\n            return Model.objects.all()\n\n        def create_item(title):\n            item, cre = Model.objects.get_or_create(title=title)\n            return item, cre\n\n        @permissions(AllowAny)\n        def get(self, request, request_data, *args, **kwargs):\n            items = self.retrieve_items()\n            response_data = {...here we should build some response structure...}***\n            return response_data, HTTP_200_OK\n\n        @permissions(IsAdmin)\n        def post(self, request, request_data, *args, **kwargs):\n            title = request_data.get('title', None)\n            # no need to check 'if title', because it is allready validated by 'available_fields'\n            # ... here we will do some view magic with the rest request_data\n            item, cre = self.create_item(title)\n            if not cre:\n                raise ResponseOkMessage(message='Item allready exists', data={'title': title})\n            response_data = {...here we should build some response structure...}***\n\n            return response_data\n\n\u00a0\u00a0\u00a0\u00a0**app/urls.py:**\n\n::\n\n    from django.conf.urls import url\n    from .views import TestView\n\n    urlpatterns = [\n        url(r'^test/', TestView.as_view()),\n    ]\n\n--------------\n\n7. built-in fields\n''''''''''''''''''\n\n``from django_rester.fields import ...`` **class JSONField**\n\nclass attributes:\n\n\u00a0\u00a0\u00a0\u00a0**field\\_type** - data type (int, float, str, bool)\n\n\u00a0\u00a0\u00a0\u00a0**required** - field is required\n\n\u00a0\u00a0\u00a0\u00a0**default** - default value if not specified\n\n\u00a0\u00a0\u00a0\u00a0**blank** - may or may not be blank\n\n\u00a0\u00a0\u00a0\u00a0**model** - model for foreign relations\n\n\u00a0\u00a0\u00a0\u00a0**field** - field for foreign relations\n\nmethods:\n\n\u00a0\u00a0\u00a0\u00a0**validate** - validate field value with parameters \\*\\*\\*\n\n\\*- There is only one authentication backend available for now -\nRESTER\\_JWT\n\n\\*\\*- BaseApiView is on active development stage, other attributes and\nmethods could be added soon\n\n\\*\\*\\*- automatic response structure build - one of the nearest tasks\n\n.. |build| image:: https://travis-ci.org/lexycore/django-rester.svg?branch=master\n   :target: https://travis-ci.org/lexycore/django-rester\n.. |codacy| image:: https://api.codacy.com/project/badge/Grade/dee291831b0b43158e2d2301726e2c00\n   :target: https://www.codacy.com/app/lexycore/django-rester/dashboard\n.. |pypi| image:: https://img.shields.io/pypi/v/django-rester.svg\n   :target: https://pypi.python.org/pypi/django-rester\n.. |license| image:: https://img.shields.io/pypi/l/django-rester.svg\n   :target: https://github.com/lexycore/django-rester/blob/master/LICENSE\n\n\n",
    "docs_url": null,
    "download_url": "https://github.com/lexycore/django-rester.git",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://lexycore.github.io/django-rester",
    "keywords": "development,API",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-rester",
    "platform": "",
    "project_url": "https://pypi.org/project/django-rester/",
    "release_url": "https://pypi.org/project/django-rester/0.0.4.16/",
    "requires_dist": [
      "pyjwt",
      "django-rediser",
      "django"
    ],
    "requires_python": "",
    "summary": "Django REST API build helper",
    "version": "0.0.4.16"
  },
  "releases": {
    "0.0.2.12": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3b9666fb33c13d94b28b38d7c2c8d544",
          "sha256": "e4ad6a7661ec16e06110542128120ee573e5c6674623584e08ea8e72ab4c093b"
        },
        "downloads": -1,
        "filename": "django_rester-0.0.2.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b9666fb33c13d94b28b38d7c2c8d544",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 19514,
        "upload_time": "2017-11-27T11:42:36",
        "url": "https://files.pythonhosted.org/packages/e6/ac/8d2adae8123077b53ae4f5ea29ddc23a1550fd3afa63c83eccbf2883ba6a/django_rester-0.0.2.12-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "cceac3576c79d14e1d643daa1044f6b0",
          "sha256": "d3a4b9df829b8055b86ad8ad9b1f3be194d2e88a2aa35dda01a884256fd15167"
        },
        "downloads": -1,
        "filename": "django-rester-0.0.2.12.tar.gz",
        "has_sig": false,
        "md5_digest": "cceac3576c79d14e1d643daa1044f6b0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13816,
        "upload_time": "2017-11-27T11:42:38",
        "url": "https://files.pythonhosted.org/packages/02/df/04364ec7bfa51f6b43ead2bddea5063ab0f349eae911b0bc71862084e55c/django-rester-0.0.2.12.tar.gz"
      }
    ],
    "0.0.2.14": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b9e19bd0933741ad34ef0508963f7a5a",
          "sha256": "db5464aa3fc78d965e4c8357d43914174cccc9bdf3200c46ea758f0a424a903e"
        },
        "downloads": -1,
        "filename": "django_rester-0.0.2.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b9e19bd0933741ad34ef0508963f7a5a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 19515,
        "upload_time": "2017-12-23T21:38:35",
        "url": "https://files.pythonhosted.org/packages/9f/0d/e808a1377637d3caecbe96588ae6d86241219b02910e3a3e00ece7aa97fc/django_rester-0.0.2.14-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9ee4dbbb940a97ac916517bff70ef105",
          "sha256": "8f9d946d76432b59af34d2674c93e9e522017506e942f5b52017ff4b31152715"
        },
        "downloads": -1,
        "filename": "django-rester-0.0.2.14.tar.gz",
        "has_sig": false,
        "md5_digest": "9ee4dbbb940a97ac916517bff70ef105",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13822,
        "upload_time": "2017-12-23T21:38:37",
        "url": "https://files.pythonhosted.org/packages/91/4e/bb3d816640cf83f290e547ed1d11be277f48ea0119c3dfa679aa313d69fd/django-rester-0.0.2.14.tar.gz"
      }
    ],
    "0.0.2.dev11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "217726064382ea57daad0662b34d1095",
          "sha256": "c5e5fe63d0a75cc821c7157f3d68f7c9c44cad955370237bd4be75581fdbb3d4"
        },
        "downloads": -1,
        "filename": "django_rester-0.0.2.dev11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "217726064382ea57daad0662b34d1095",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 19543,
        "upload_time": "2017-11-27T11:40:12",
        "url": "https://files.pythonhosted.org/packages/08/54/a5b3b451d58035d4a891eb0d439762a0c8f8d0a417285bec125d706d6a94/django_rester-0.0.2.dev11-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "fec6e09a0511455d8f1c8d72330afa0b",
          "sha256": "2e7db76cd2c41412b736d423029e2d2d1f65b35c9c4e8e06b8309ec9334e4f23"
        },
        "downloads": -1,
        "filename": "django-rester-0.0.2.dev11.tar.gz",
        "has_sig": false,
        "md5_digest": "fec6e09a0511455d8f1c8d72330afa0b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13824,
        "upload_time": "2017-11-27T11:40:13",
        "url": "https://files.pythonhosted.org/packages/f8/71/4ec2ebec16292a6d0042cb0de6745bcc34dc0b291981f3828db4e3b9bb49/django-rester-0.0.2.dev11.tar.gz"
      }
    ],
    "0.0.2.dev13": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ea7990da23d76e4037155ddc6d092490",
          "sha256": "f4559e38047f79d5c13f2eb7395e9ce596cf75eeb7e99adc2f87c0c31696f2c7"
        },
        "downloads": -1,
        "filename": "django_rester-0.0.2.dev13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea7990da23d76e4037155ddc6d092490",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 19546,
        "upload_time": "2017-12-23T21:37:32",
        "url": "https://files.pythonhosted.org/packages/b5/dd/7bcc697f84bfd28e84f7c14ef6045a576d8c9b1678f5abf668df23968ec0/django_rester-0.0.2.dev13-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1885b8561e46083988a8b7e996a2580d",
          "sha256": "f41eafa1dc852e184be04b3c64d443644df96bbb66426acab491076d2f71d677"
        },
        "downloads": -1,
        "filename": "django-rester-0.0.2.dev13.tar.gz",
        "has_sig": false,
        "md5_digest": "1885b8561e46083988a8b7e996a2580d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13830,
        "upload_time": "2017-12-23T21:37:34",
        "url": "https://files.pythonhosted.org/packages/b4/2e/8521c780fc2c59b3632205225b5816112c2f408045e378529d7b539d728b/django-rester-0.0.2.dev13.tar.gz"
      }
    ],
    "0.0.4.16": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2443bfee15fc06c90f2057cbb4d37275",
          "sha256": "d725e0dd8c99857900760649ce680237c0e0d05083b6e8c4059b3de1ea1a098b"
        },
        "downloads": -1,
        "filename": "django_rester-0.0.4.16-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2443bfee15fc06c90f2057cbb4d37275",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 19713,
        "upload_time": "2018-01-06T23:38:50",
        "url": "https://files.pythonhosted.org/packages/44/ab/029544c2ac2bc6e8a3710611c17e665aa3830e7e15cac725b1e629fa7d33/django_rester-0.0.4.16-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "601e88f878afc17573c73c1a3db84535",
          "sha256": "3e0bed75cb190d9af7e86c92cd342ea7a21f3c90c84c8c5bea0e188c546595c1"
        },
        "downloads": -1,
        "filename": "django-rester-0.0.4.16.tar.gz",
        "has_sig": false,
        "md5_digest": "601e88f878afc17573c73c1a3db84535",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13996,
        "upload_time": "2018-01-06T23:38:52",
        "url": "https://files.pythonhosted.org/packages/f9/2c/bbd21458fc2172a97e82f17d6e78eb8e57aa7bf77d92287ed33b55d1ab4b/django-rester-0.0.4.16.tar.gz"
      }
    ],
    "0.0.4.dev15": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9e327d4f3753cf88e5f234566bb3f673",
          "sha256": "ddbc0c97a65f87266ced6fc4745f5ac64f0f8dc7e4bd99ce73640b46210f65e1"
        },
        "downloads": -1,
        "filename": "django_rester-0.0.4.dev15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e327d4f3753cf88e5f234566bb3f673",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 19742,
        "upload_time": "2018-01-06T23:37:59",
        "url": "https://files.pythonhosted.org/packages/1a/7a/013460bac0b0fd47bd3123493b74b34bb42a862c3b51e453a56f7850f491/django_rester-0.0.4.dev15-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "91baea39d39acc0d421ebc4203cfa76f",
          "sha256": "89a724a7ec1c1e373b78c629ab64141fc8bf8f3d2bc64b16d0489aa87ffdf163"
        },
        "downloads": -1,
        "filename": "django-rester-0.0.4.dev15.tar.gz",
        "has_sig": false,
        "md5_digest": "91baea39d39acc0d421ebc4203cfa76f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13989,
        "upload_time": "2018-01-06T23:38:00",
        "url": "https://files.pythonhosted.org/packages/99/75/359e9a85884983c1682115ca9d984aae404c390572e7dc36786a84de80db/django-rester-0.0.4.dev15.tar.gz"
      }
    ],
    "0.0.4.dev17": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6a05d2dad3f23182909caab4ea3bd9c3",
          "sha256": "8d696990a148dd2d7b6d104397e725754a7af801fd3c019f032a771be0eff3f7"
        },
        "downloads": -1,
        "filename": "django_rester-0.0.4.dev17-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a05d2dad3f23182909caab4ea3bd9c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 19829,
        "upload_time": "2018-01-08T19:27:21",
        "url": "https://files.pythonhosted.org/packages/cb/a9/31d1b54916fd3d29108af7ed3dc65f4fead9fe4a5d9d0eb15aad4615d113/django_rester-0.0.4.dev17-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2e8fbdf90b7d453bceecdc207721dc7c",
          "sha256": "a78cee405130c65cd56cda7a7f631064d7217dfe0fee0843a4843ba3a6ab1a62"
        },
        "downloads": -1,
        "filename": "django-rester-0.0.4.dev17.tar.gz",
        "has_sig": false,
        "md5_digest": "2e8fbdf90b7d453bceecdc207721dc7c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14086,
        "upload_time": "2018-01-08T19:27:25",
        "url": "https://files.pythonhosted.org/packages/7e/5d/ff5f2dddc749571993c453f27c10efd799aae486e680c13181861d4993ff/django-rester-0.0.4.dev17.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2443bfee15fc06c90f2057cbb4d37275",
        "sha256": "d725e0dd8c99857900760649ce680237c0e0d05083b6e8c4059b3de1ea1a098b"
      },
      "downloads": -1,
      "filename": "django_rester-0.0.4.16-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2443bfee15fc06c90f2057cbb4d37275",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 19713,
      "upload_time": "2018-01-06T23:38:50",
      "url": "https://files.pythonhosted.org/packages/44/ab/029544c2ac2bc6e8a3710611c17e665aa3830e7e15cac725b1e629fa7d33/django_rester-0.0.4.16-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "601e88f878afc17573c73c1a3db84535",
        "sha256": "3e0bed75cb190d9af7e86c92cd342ea7a21f3c90c84c8c5bea0e188c546595c1"
      },
      "downloads": -1,
      "filename": "django-rester-0.0.4.16.tar.gz",
      "has_sig": false,
      "md5_digest": "601e88f878afc17573c73c1a3db84535",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 13996,
      "upload_time": "2018-01-06T23:38:52",
      "url": "https://files.pythonhosted.org/packages/f9/2c/bbd21458fc2172a97e82f17d6e78eb8e57aa7bf77d92287ed33b55d1ab4b/django-rester-0.0.4.16.tar.gz"
    }
  ]
}