{
  "info": {
    "author": "Zope Foundation and Contributors",
    "author_email": "zope-dev@zope.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Zope3",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Zope Public License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "``zope.principalregistry`` README\n=================================\n\nThis package provides an authentication utility for zope.authentication that\nuses simple non-persistent principal registry.\n\n\nGlobal principal definition\n===========================\n\nGlobal principals are defined via ZCML.  There are several kinds of\nprincipals that can be defined.\n\nAuthenticated Users\n-------------------\n\nThere are principals that can log in:\n\n    >>> zcml(\"\"\"\n    ...    <configure xmlns=\"http://namespaces.zope.org/zope\">\n    ...\n    ...      <principal\n    ...         id=\"zope.manager\"\n    ...         title=\"Manager\"\n    ...         description=\"System Manager\"\n    ...         login=\"admin\"\n    ...         password_manager=\"SHA1\"\n    ...         password=\"40bd001563085fc35165329ea1ff5c5ecbdbbeef\"\n    ...         />\n    ...\n    ...    </configure>\n    ... \"\"\")\n\n    >>> import pprint\n    >>> from zope.principalregistry.principalregistry import principalRegistry\n    >>> [p] = principalRegistry.getPrincipals('')\n    >>> p.id, p.title, p.description, p.getLogin(), p.validate('123')\n    ('zope.manager', u'Manager', u'System Manager', u'admin', True)\n\nThe unauthenticated principal\n-----------------------------\n\nThere is the unauthenticated principal:\n\n    >>> zcml(\"\"\"\n    ...    <configure\n    ...        xmlns=\"http://namespaces.zope.org/zope\"\n    ...        >\n    ...\n    ...      <unauthenticatedPrincipal\n    ...         id=\"zope.unknown\"\n    ...         title=\"Anonymous user\"\n    ...         description=\"A person we don't know\"\n    ...         />\n    ...\n    ...    </configure>\n    ... \"\"\")\n\n    >>> p = principalRegistry.unauthenticatedPrincipal()\n    >>> p.id, p.title, p.description\n    ('zope.unknown', u'Anonymous user', u\"A person we don't know\")\n\nThe unauthenticated principal will also be registered as a utility.\nThis is to provide easy access to the data defined for the principal so\nthat other (more featureful) principal objects can be created for the\nsame principal.\n\n    >>> from zope import component\n    >>> from zope.authentication import interfaces\n    >>> p = component.getUtility(interfaces.IUnauthenticatedPrincipal)\n    >>> p.id, p.title, p.description\n    ('zope.unknown', u'Anonymous user', u\"A person we don't know\")\n\nThe unauthenticated group\n-------------------------\n\nAn unauthenticated group can also be defined in ZCML:\n\n    >>> zcml(\"\"\"\n    ...    <configure\n    ...        xmlns=\"http://namespaces.zope.org/zope\"\n    ...        >\n    ...\n    ...      <unauthenticatedGroup\n    ...         id=\"zope.unknowngroup\"\n    ...         title=\"Anonymous users\"\n    ...         description=\"People we don't know\"\n    ...         />\n    ...\n    ...    </configure>\n    ... \"\"\")\n\nThis directive creates a group and registers it as a utility providing\nIUnauthenticatedGroup:\n\n    >>> g = component.getUtility(interfaces.IUnauthenticatedGroup)\n    >>> g.id, g.title, g.description\n    ('zope.unknowngroup', u'Anonymous users', u\"People we don't know\")\n\nThe unauthenticatedGroup directive also updates the group of the\nunauthenticated principal:\n\n    >>> p = principalRegistry.unauthenticatedPrincipal()\n    >>> g.id in p.groups\n    True\n    >>> p = component.getUtility(interfaces.IUnauthenticatedPrincipal)\n    >>> g.id in p.groups\n    True\n\nIf the unauthenticated principal is defined after the unauthenticated\ngroup, it will likewise have the group added to it:\n\n    >>> reset()\n    >>> zcml(\"\"\"\n    ...    <configure xmlns=\"http://namespaces.zope.org/zope\">\n    ...\n    ...      <unauthenticatedGroup\n    ...         id=\"zope.unknowngroup2\"\n    ...         title=\"Anonymous users\"\n    ...         description=\"People we don't know\"\n    ...         />\n    ...      <unauthenticatedPrincipal\n    ...         id=\"zope.unknown2\"\n    ...         title=\"Anonymous user\"\n    ...         description=\"A person we don't know\"\n    ...         />\n    ...\n    ...    </configure>\n    ... \"\"\")\n\n    >>> g = component.getUtility(interfaces.IUnauthenticatedGroup)\n    >>> g.id, g.title, g.description\n    ('zope.unknowngroup2', u'Anonymous users', u\"People we don't know\")\n    >>> p = principalRegistry.unauthenticatedPrincipal()\n    >>> p.id, g.id in p.groups\n    ('zope.unknown2', True)\n    >>> p = component.getUtility(interfaces.IUnauthenticatedPrincipal)\n    >>> p.id, g.id in p.groups\n    ('zope.unknown2', True)\n\nThe unauthenticated group shows up as a principal in the principal\nregistry:\n\n    >>> principalRegistry.getPrincipal(g.id) == g\n    True\n\n    >>> list(principalRegistry.getPrincipals(\"Anonymous\")) == [g]\n    True\n\nThe authenticated group\n-----------------------\n\nThere is an authenticated group:\n\n    >>> reset()\n    >>> zcml(\"\"\"\n    ...    <configure xmlns=\"http://namespaces.zope.org/zope\">\n    ...\n    ...      <unauthenticatedPrincipal\n    ...         id=\"zope.unknown3\"\n    ...         title=\"Anonymous user\"\n    ...         description=\"A person we don't know\"\n    ...         />\n    ...      <principal\n    ...         id=\"zope.manager2\"\n    ...         title=\"Manager\"\n    ...         description=\"System Manager\"\n    ...         login=\"admin\"\n    ...         password=\"123\"\n    ...         />\n    ...      <authenticatedGroup\n    ...         id=\"zope.authenticated\"\n    ...         title=\"Authenticated users\"\n    ...         description=\"People we know\"\n    ...         />\n    ...      <principal\n    ...         id=\"zope.manager3\"\n    ...         title=\"Manager 3\"\n    ...         login=\"admin3\"\n    ...         password=\"123\"\n    ...         />\n    ...\n    ...    </configure>\n    ... \"\"\")\n\nIt defines an IAuthenticatedGroup utility:\n\n    >>> g = component.getUtility(interfaces.IAuthenticatedGroup)\n    >>> g.id, g.title, g.description\n    ('zope.authenticated', u'Authenticated users', u'People we know')\n\nIt also adds it self to the groups of any non-group principals already\ndefined, and, when non-group principals are defined, they put\nthemselves in the group if it's defined:\n\n    >>> principals = sorted(principalRegistry.getPrincipals(''),\n    ...                     key=lambda p: p.id)\n    >>> for p in principals:\n    ...    print(p.id, p.groups == [g.id])\n    zope.authenticated False\n    zope.manager2 True\n    zope.manager3 True\n\nExcluding unauthenticated principals, of course:\n\n    >>> p = principalRegistry.unauthenticatedPrincipal()\n    >>> p.id, g.id in p.groups\n    ('zope.unknown3', False)\n    >>> p = component.getUtility(interfaces.IUnauthenticatedPrincipal)\n    >>> p.id, g.id in p.groups\n    ('zope.unknown3', False)\n\n\nThe everybody group\n-------------------\n\nFinally, there is an everybody group:\n\n    >>> reset()\n    >>> zcml(\"\"\"\n    ...    <configure xmlns=\"http://namespaces.zope.org/zope\">\n    ...\n    ...      <unauthenticatedPrincipal\n    ...         id=\"zope.unknown4\"\n    ...         title=\"Anonymous user\"\n    ...         description=\"A person we don't know\"\n    ...         />\n    ...      <principal\n    ...         id=\"zope.manager4\"\n    ...         title=\"Manager\"\n    ...         description=\"System Manager\"\n    ...         login=\"admin\"\n    ...         password=\"123\"\n    ...         />\n    ...      <everybodyGroup\n    ...         id=\"zope.everybody\"\n    ...         title=\"Everybody\"\n    ...         description=\"All People\"\n    ...         />\n    ...      <principal\n    ...         id=\"zope.manager5\"\n    ...         title=\"Manager 5\"\n    ...         login=\"admin5\"\n    ...         password=\"123\"\n    ...         />\n    ...\n    ...    </configure>\n    ... \"\"\")\n\nThe everybodyGroup directive defines an IEveryoneGroup utility:\n\n    >>> g = component.getUtility(interfaces.IEveryoneGroup)\n    >>> g.id, g.title, g.description\n    ('zope.everybody', u'Everybody', u'All People')\n\nIt also adds it self to the groups of any non-group principals already\ndefined, and, when non-group principals are defined, they put\nthemselves in the group if it's defined:\n\n    >>> principals = sorted(principalRegistry.getPrincipals(''),\n    ...                     key=lambda p: p.id)\n    >>> for p in principals:\n    ...    print(p.id, p.groups == [g.id])\n    zope.everybody False\n    zope.manager4 True\n    zope.manager5 True\n\nIncluding unauthenticated principals, of course:\n\n    >>> p = principalRegistry.unauthenticatedPrincipal()\n    >>> p.id, g.id in p.groups\n    ('zope.unknown4', True)\n    >>> p = component.getUtility(interfaces.IUnauthenticatedPrincipal)\n    >>> p.id, g.id in p.groups\n    ('zope.unknown4', True)\n\nNote that it is up to IAuthentication implementations to associate\nthese groups with their principals, as appropriate.\n\n\nThe system_user\n---------------\n\nThere is also a system_user that is defined in the code.  It will be returned\nfrom the getPrincipal method of the registry.\n\n    >>> import zope.security.management\n    >>> import zope.principalregistry.principalregistry\n    >>> auth = zope.principalregistry.principalregistry.PrincipalRegistry()\n    >>> system_user = auth.getPrincipal(u'zope.security.management.system_user')\n    >>> system_user is zope.security.management.system_user\n    True\n\n\nChanges\n=======\n\n4.0.0 (2014-12-24)\n------------------\n\n- Add support for PyPy.  (PyPy3 is pending release of a fix for:\n  https://bitbucket.org/pypy/pypy/issue/1946)\n\n- Add support for Python 3.4.\n\n- Add support for testing under Travis.\n\n\n4.0.0a2 (2013-03-03)\n--------------------\n\n- Make sure that the password is always bytes when passed into the principal\n  registry.\n\n- Fix deprecation warnings.\n\n\n4.0.0a1 (2013-02-22)\n--------------------\n\n- Add support for Python 3.3.\n\n- Replace deprecated ``zope.interface.implements`` usage with equivalent\n  ``zope.interface.implementer`` decorator.\n\n- Dropd support for Python 2.4 and 2.5.\n\n\n3.7.1 (2010-09-25)\n------------------\n\n- Add test extra to declare test dependency on ``zope.component [test]``.\n\n- Use Python's ``doctest`` module instead of depreacted\n  ``zope.testing.doctest``.\n\n\n3.7.0 (2009-03-14)\n------------------\n\n- Remove ``zope.container`` dependency, as contained principals didn't make any\n  sense, since PrincipalRegistry never provided IContainer. Also, zope.container\n  pulls a number dependencies, that are not needed for non-persistent principal\n  registry (like, ZCML, for example).\n\n  Set __name__ and __parent__ by hand to provide some backward-compatibility and\n  to save a pointer to registry from principal objects.\n\n- Initial release. This package was splitted from zope.app.security as a part\n  of the refactoring process to provide global principal registry without extra\n  dependencies.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://pypi.python.org/pypi/zope.principalregistry",
    "keywords": "zope security authentication principal registry",
    "license": "ZPL 2.1",
    "maintainer": null,
    "maintainer_email": null,
    "name": "zope.principalregistry",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/zope.principalregistry/",
    "release_url": "https://pypi.org/project/zope.principalregistry/4.0.0/",
    "requires_python": null,
    "summary": "Global principal registry component for Zope3",
    "version": "4.0.0"
  },
  "releases": {
    "3.7.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "34315cfe28a6d82a429bed786d067cdd",
          "sha256": "097769dfa0bde15ef2d2b10a69b2d567b6833b1e91d64c91fa10a0f54bafd0a9"
        },
        "downloads": 21725,
        "filename": "zope.principalregistry-3.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "34315cfe28a6d82a429bed786d067cdd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9711,
        "upload_time": "2009-03-14T01:16:02",
        "url": "https://files.pythonhosted.org/packages/92/29/a57758e0bdf4a4a5f2bcea9d6cd4b6d3c1add65e32935ac4ea750e0e7a9f/zope.principalregistry-3.7.0.tar.gz"
      }
    ],
    "3.7.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9b90adc7915d9bbed4237db432fc70c2",
          "sha256": "95eadc068a01de96f33e9e539dd1841c8ef497ce1c131331a8e047178ae90e16"
        },
        "downloads": 60252,
        "filename": "zope.principalregistry-3.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9b90adc7915d9bbed4237db432fc70c2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10638,
        "upload_time": "2010-09-25T14:35:52",
        "url": "https://files.pythonhosted.org/packages/16/76/cdd2ed46b5d427333f4046886b0667b68e7ea6dacbc0d4f3c099ae543f65/zope.principalregistry-3.7.1.tar.gz"
      }
    ],
    "4.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c4de04558e567dde268095f15a940638",
          "sha256": "96c4e79fc47f7aacb34f292dd47d2f70483ec53e080a7bdad555c7e451d549ef"
        },
        "downloads": 3585,
        "filename": "zope.principalregistry-4.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c4de04558e567dde268095f15a940638",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16382,
        "upload_time": "2014-12-24T22:58:29",
        "url": "https://files.pythonhosted.org/packages/c0/ec/bc77a99803509605c66d652d6d60208a1a728644d3a35f989ddd5999757b/zope.principalregistry-4.0.0.tar.gz"
      }
    ],
    "4.0.0a1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e1bda1cf68e0ecee8a957df9e84d5ccb",
          "sha256": "07248ff73e291858522a7b463a15eb55bf51aec93887a996f842ea640cc7bbff"
        },
        "downloads": 3017,
        "filename": "zope.principalregistry-4.0.0a1.zip",
        "has_sig": false,
        "md5_digest": "e1bda1cf68e0ecee8a957df9e84d5ccb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25638,
        "upload_time": "2013-02-22T15:07:07",
        "url": "https://files.pythonhosted.org/packages/5c/06/b9a3f48cc50a4cb955270dbd53f3981a2fe93ed001e823e12637c6a4e152/zope.principalregistry-4.0.0a1.zip"
      }
    ],
    "4.0.0a2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "66f361ad9a228b41eec939c3310cba72",
          "sha256": "654f0ea2b2a2d6b21d0a32952fd872b6d2437f5cdacb6ad9880872abde0bfdc9"
        },
        "downloads": 4518,
        "filename": "zope.principalregistry-4.0.0a2.zip",
        "has_sig": false,
        "md5_digest": "66f361ad9a228b41eec939c3310cba72",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25927,
        "upload_time": "2013-03-03T16:56:32",
        "url": "https://files.pythonhosted.org/packages/85/04/dd46f869f40d54277de398ecde717c0ce667ae8337fe29c6e3be633db554/zope.principalregistry-4.0.0a2.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c4de04558e567dde268095f15a940638",
        "sha256": "96c4e79fc47f7aacb34f292dd47d2f70483ec53e080a7bdad555c7e451d549ef"
      },
      "downloads": 3585,
      "filename": "zope.principalregistry-4.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c4de04558e567dde268095f15a940638",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 16382,
      "upload_time": "2014-12-24T22:58:29",
      "url": "https://files.pythonhosted.org/packages/c0/ec/bc77a99803509605c66d652d6d60208a1a728644d3a35f989ddd5999757b/zope.principalregistry-4.0.0.tar.gz"
    }
  ]
}