{
  "info": {
    "author": "Joao Paulo Magalhaes",
    "author_email": "dev@jpmag.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: C",
      "Programming Language :: C++",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Compilers",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "===========  ===============  ========================  ======================\n |license|    |readthedocs|    Linux + OS X: |travis|    Windows: |appveyor|\n===========  ===============  ========================  ======================\n\ncmany\n=====\n\nEasily batch-build cmake projects!\n\n`cmany <https://github.com/biojppm/cmany>`_ is a command line tool to easily\nbuild variations of a CMake C/C++ project.  It combines different compilers,\ncmake build types, compilation flags, processor architectures and\noperating systems.\n\nFor example, to configure and build a project combining clang++ and g++\nwith both Debug and Release::\n\n    $ cmany build -c clang++,g++ -t Debug,Release path/to/CMakeLists.txt\n\nThe command above will result in four different build trees, placed by default\nunder a ``build`` directory placed in the current working directory::\n\n    $ ls build/*\n    build/linux-x86_64-clang++3.9-Debug\n    build/linux-x86_64-clang++3.9-Release\n    build/linux-x86_64-gcc++6.1-Debug\n    build/linux-x86_64-gcc++6.1-Release\n\nEach build tree is obtained by first configuring CMake with the given\nparameters, and then invoking ``cmake --build`` to build the project at once.\n\nYou can also use cmany just to simplify your cmake workflow! These two\ncommand sequences have the same effect:\n\n+-------------------------------+-------------------------------+\n| typical cmake                 | cmany                         |\n+===============================+===============================+\n| | ``$ mkdir build``           | | ``$ cmany b``               |\n| | ``$ cd build``              |                               |\n| | ``$ cmake ..``              |                               |\n| | ``$ cmake --build .``       |                               |\n+-------------------------------+-------------------------------+\n\nFeatures\n--------\n* Easily configure and build many variations of your project with one simple command.\n* Saves the tedious work of dealing with many build trees by hand.\n* Sensible defaults: ``cmany build`` will create and build a single project using CMake's\n  defaults.\n* Transparently pass flags (compiler flags, processor defines or cmake cache\n  variables) to any or all of the builds.\n* Useful for build comparison and benchmarking. You can easily setup bundles of flags, aka variants.\n* Useful for validating and unit-testing your project with different\n  compilers and flags.\n* Useful for creating distributions of your project.\n* Avoids a full rebuild when the build type is changed. Although this feature\n  already exists in multi-configuration cmake generators like Visual\n  Studio, it is missing from mono-configuration generators like Unix\n  Makefiles.\n* Run arbitrary commands in every build tree or install tree.\n* Emacs integration! `<https://github.com/biojppm/cmany.el>`_\n\nMore info\n---------\n* `Project home <https://github.com/biojppm/cmany>`_\n* `Installing <https://cmany.readthedocs.io/en/latest/installing/>`_\n* `Getting started <https://cmany.readthedocs.io/en/latest/quick_tour/>`_\n\nSupport\n-------\n* send bug reports to `<https://github.com/biojppm/cmany/issues>`_.\n* send pull requests to `<https://github.com/biojppm/cmany/pulls>`_.\n\nCurrent status\n--------------\ncmany is in alpha state, under current development.\n\nKnown issues\n^^^^^^^^^^^^\n\n* cmany invokes the compilers given to it to find their name and version. So\n  far, this successfully works with Visual Studio, gcc (also with arm-linux and\n  mips-linux counterparts), clang, icc and zapcc. However, the current\n  implementation for guessing the name and version is fragile and may fail in\n  some compilers which were not tested. Please submit a bug or PR if you\n  see such a failure.\n* Though cmany works in OS X with gcc and clang, using Xcode has not been\n  tested at all. Get in touch if you are interested in getting cmany to work\n  with Xcode.\n* Pure C projects (ie not C++) should work but have not yet been tested. Some\n  bugs may be present.\n\nLicense\n-------\ncmany is permissively licensed under the `MIT license`_.\n\n.. _MIT license: LICENSE.txt\n\n.. |license| image:: https://img.shields.io/badge/License-MIT-yellow.svg\n   :alt: License: MIT\n   :target: https://opensource.org/licenses/MIT\n.. |travis| image:: https://travis-ci.org/biojppm/cmany.svg?branch=master\n    :alt: Linux+OSX build status\n    :target: https://travis-ci.org/biojppm/cmany\n.. |appveyor| image:: https://ci.appveyor.com/api/projects/status/github/biojppm/cmany?branch=master&svg=true\n    :alt: Windows build status\n    :target: https://ci.appveyor.com/project/biojppm/cmany\n.. |readthedocs| image:: https://readthedocs.org/projects/docs/badge/?version=latest\n    :alt: Documentation status\n    :target: https://cmany.readthedocs.io/\n\nCopyright (c) 2016, Joao Paulo Magalhaes <dev@jpmag.me>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\n in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.",
    "docs_url": null,
    "download_url": "https://github.com/biojppm/cmany",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/biojppm/cmany",
    "keywords": "cmake,c++,c",
    "license": "License :: OSI Approved :: MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cmany",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/cmany/",
    "release_url": "https://pypi.org/project/cmany/0.1.0.post1/",
    "requires_python": "",
    "summary": "CMake build tree batching tool",
    "version": "0.1.0.post1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "018742f9b02fd769493f878ec341303b",
          "sha256": "8e7e3779155d5491a0a6a16a579bdafa342148761b7d7fa80f3ef03f16786647"
        },
        "downloads": 0,
        "filename": "cmany-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "018742f9b02fd769493f878ec341303b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 82455,
        "upload_time": "2017-05-11T23:13:30",
        "url": "https://files.pythonhosted.org/packages/17/cb/a06d3de0ff1bbdc0da20c256340882222050624a8003ab0eaa62808ef258/cmany-0.1.0-py3-none-any.whl"
      }
    ],
    "0.1.0.post0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6a4651900347b4585cba4d78391e7c7f",
          "sha256": "44499129b9479691da123285477f49d900a1282b065695781ebfabf52e58d18f"
        },
        "downloads": 0,
        "filename": "cmany-0.1.0.post0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a4651900347b4585cba4d78391e7c7f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 82579,
        "upload_time": "2017-05-11T23:14:48",
        "url": "https://files.pythonhosted.org/packages/50/c8/91f4bb55131646fb602abeb196c57dfabe5133b8b210db22a773e192371e/cmany-0.1.0.post0-py3-none-any.whl"
      }
    ],
    "0.1.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "17b292d8ec351e4cb5b2f6d79341da78",
          "sha256": "9605e5cb6962ceab8e850af93ed268368517d56dbe7775634d417e5359dc334a"
        },
        "downloads": 0,
        "filename": "cmany-0.1.0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17b292d8ec351e4cb5b2f6d79341da78",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 82580,
        "upload_time": "2017-05-11T23:16:19",
        "url": "https://files.pythonhosted.org/packages/2b/04/83849d5a24a5b09b29b2e3a65d32ee34aaac1870d8ed444e8573fb63b9ae/cmany-0.1.0.post1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ce56322667f4e72f7dc1d58f80c1e6c8",
          "sha256": "fc40dd3691a79369702aa299e143fefacbda43c60ec12ef5205d66e4a82a0d23"
        },
        "downloads": 0,
        "filename": "cmany-0.1.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "ce56322667f4e72f7dc1d58f80c1e6c8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 58519,
        "upload_time": "2017-05-11T23:16:22",
        "url": "https://files.pythonhosted.org/packages/23/86/4d3ca6079a54616922799d32d0ca5cf5439a11c0a0515bdd5e7d24d8ef97/cmany-0.1.0.post1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "17b292d8ec351e4cb5b2f6d79341da78",
        "sha256": "9605e5cb6962ceab8e850af93ed268368517d56dbe7775634d417e5359dc334a"
      },
      "downloads": 0,
      "filename": "cmany-0.1.0.post1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "17b292d8ec351e4cb5b2f6d79341da78",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 82580,
      "upload_time": "2017-05-11T23:16:19",
      "url": "https://files.pythonhosted.org/packages/2b/04/83849d5a24a5b09b29b2e3a65d32ee34aaac1870d8ed444e8573fb63b9ae/cmany-0.1.0.post1-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "ce56322667f4e72f7dc1d58f80c1e6c8",
        "sha256": "fc40dd3691a79369702aa299e143fefacbda43c60ec12ef5205d66e4a82a0d23"
      },
      "downloads": 0,
      "filename": "cmany-0.1.0.post1.tar.gz",
      "has_sig": false,
      "md5_digest": "ce56322667f4e72f7dc1d58f80c1e6c8",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 58519,
      "upload_time": "2017-05-11T23:16:22",
      "url": "https://files.pythonhosted.org/packages/23/86/4d3ca6079a54616922799d32d0ca5cf5439a11c0a0515bdd5e7d24d8ef97/cmany-0.1.0.post1.tar.gz"
    }
  ]
}