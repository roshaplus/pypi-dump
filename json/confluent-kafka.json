{
  "info": {
    "author": "Confluent Inc",
    "author_email": "support@confluent.io",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Confluent's Apache Kafka client for Python\n==========================================\n\nConfluent's Kafka client for Python wraps the librdkafka C library, providing\nfull Kafka protocol support with great performance and reliability.\n\nThe Python bindings provides a high-level Producer and Consumer with support\nfor the balanced consumer groups of Apache Kafka 0.9.\n\nSee the [API documentation](http://docs.confluent.io/current/clients/confluent-kafka-python/index.html) for more info.\n\n**License**: [Apache License v2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\n\nUsage\n=====\n\n**Producer:**\n\n```python\nfrom confluent_kafka import Producer\n\np = Producer({'bootstrap.servers': 'mybroker,mybroker2'})\nfor data in some_data_source:\n    p.produce('mytopic', data.encode('utf-8'))\np.flush()\n```\n\n\n**High-level Consumer:**\n\n```python\nfrom confluent_kafka import Consumer, KafkaError\n\nc = Consumer({'bootstrap.servers': 'mybroker', 'group.id': 'mygroup',\n              'default.topic.config': {'auto.offset.reset': 'smallest'}})\nc.subscribe(['mytopic'])\nrunning = True\nwhile running:\n    msg = c.poll()\n    if not msg.error():\n        print('Received message: %s' % msg.value().decode('utf-8'))\n    elif msg.error().code() != KafkaError._PARTITION_EOF:\n        print(msg.error())\n        running = False\nc.close()\n```\n\n**AvroProducer**\n\n```python\nfrom confluent_kafka import avro \nfrom confluent_kafka.avro import AvroProducer\n\nvalue_schema = avro.load('ValueSchema.avsc')\nkey_schema = avro.load('KeySchema.avsc')\nvalue = {\"name\": \"Value\"}\nkey = {\"name\": \"Key\"}\n\navroProducer = AvroProducer({'bootstrap.servers': 'mybroker,mybroker2', 'schema.registry.url': 'http://schem_registry_host:port'}, default_key_schema=key_schema, default_value_schema=value_schema)\navroProducer.produce(topic='my_topic', value=value, key=key)\n```\n\n**AvroConsumer**\n\n```python\nfrom confluent_kafka import KafkaError\nfrom confluent_kafka.avro import AvroConsumer\nfrom confluent_kafka.avro.serializer import SerializerError\n\nc = AvroConsumer({'bootstrap.servers': 'mybroker,mybroker2', 'group.id': 'groupid', 'schema.registry.url': 'http://127.0.0.1:8081'})\nc.subscribe(['my_topic'])\nrunning = True\nwhile running:\n    try:\n        msg = c.poll(10)\n        if msg:\n            if not msg.error():\n                print(msg.value())\n            elif msg.error().code() != KafkaError._PARTITION_EOF:\n                print(msg.error())\n                running = False\n    except SerializerError as e:\n        print(\"Message deserialization failed for %s: %s\" % (msg, e))\n        running = False\n        \nc.close()\n```\n\nSee [examples](examples) for more examples.\n\n\nBroker compatibility\n====================\nThe Python client (as well as the underlying C library librdkafka) supports\nall broker versions &gt;= 0.8.\nBut due to the nature of the Kafka protocol in broker versions 0.8 and 0.9 it\nis not safe for a client to assume what protocol version is actually supported\nby the broker, thus you will need to hint the Python client what protocol\nversion it may use. This is done through two configuration settings:\n\n * `broker.version.fallback=YOUR_BROKER_VERSION` (default 0.9.0.1)\n * `api.version.request=true|false` (default false)\n\nWhen using a Kafka 0.10 broker or later you only need to set\n`api.version.request=true`.\nIf you use Kafka broker 0.9 or 0.8 you should leave\n`api.version.request=false` (default) and set\n`broker.version.fallback` to your broker version,\ne.g `broker.version.fallback=0.9.0.1`.\n\nMore info here:\nhttps://github.com/edenhill/librdkafka/wiki/Broker-version-compatibility\n\n\nPrerequisites\n=============\n\n * Python >= 2.7 or Python 3.x\n * [librdkafka](https://github.com/edenhill/librdkafka) >= 0.9.1\n\n\nInstall\n=======\n\n**Install from PyPi:**\n\n    $ pip install confluent-kafka\n    \n    # for AvroProducer or AvroConsumer\n    $ pip install confluent-kafka[avro]\n\n\n**Install from source / tarball:**\n\n    $ pip install .\n\n    # for AvroProducer or AvroConsumer\n    $ pip install .[avro]\n\n\nBuild\n=====\n\n    $ python setup.py build\n\nIf librdkafka is installed in a non-standard location provide the include and library directories with:\n\n    $ C_INCLUDE_PATH=/path/to/include LIBRARY_PATH=/path/to/lib python setup.py ...\n\n\nTests\n=====\n\n\n**Run unit-tests:**\n\nIn order to run full test suite, simply execute:\n\n    $ tox -r\n\n**NOTE**: Requires `tox` (please install with `pip install tox`), several supported versions of Python on your path, and `librdkafka` [installed](tools/bootstrap-librdkafka.sh) into `tmp-build`.\n\n\n**Run integration tests:**\n\nTo run the integration tests, uncomment the following line from `tox.ini` and add the paths to your Kafka and Confluent Schema Registry instances. If no Schema Registry path is provided then no AVRO tests will by run. You can also run the integration tests outside of `tox` by running this command from the source root.\n\n    examples/integration_test.py <kafka-broker> [<test-topic>] [<schema-registry>]\n\n**WARNING**: These tests require an active Kafka cluster and will create new topics.\n\n\n\n\nGenerate documentation\n======================\nInstall sphinx and sphinx_rtd_theme packages and then:\n\n    $ make docs\n\nor:\n\n    $ python setup.py build_sphinx\n\nDocumentation will be generated in `docs/_build/`.\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/confluentinc/confluent-kafka-python",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "confluent-kafka",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/confluent-kafka/",
    "release_url": "https://pypi.org/project/confluent-kafka/0.9.4/",
    "requires_python": null,
    "summary": "Confluent's Apache Kafka client for Python",
    "version": "0.9.4"
  },
  "releases": {
    "0.9.1": [],
    "0.9.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8ea7e8f785a9e80cc330c54ceaa125df",
          "sha256": "339a3f58fe19a32affdae76bfc8a4dc67d9e30aa4ff41e69bc8a1d8420e55145"
        },
        "downloads": 929,
        "filename": "confluent-kafka-0.9.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8ea7e8f785a9e80cc330c54ceaa125df",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24847,
        "upload_time": "2016-05-24T06:28:07",
        "url": "https://files.pythonhosted.org/packages/b5/0a/2c4053a5ad38b71e74f606c7987513818f009e344cbc1cdadda723f0d251/confluent-kafka-0.9.1.1.tar.gz"
      }
    ],
    "0.9.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "adaa7ed78bf00fdbb928cef6dd170ed7",
          "sha256": "1b75613c9a5f35f02b8205fe248b956c83a7654ba179ef48d3306c99d37179ed"
        },
        "downloads": 3639,
        "filename": "confluent-kafka-0.9.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "adaa7ed78bf00fdbb928cef6dd170ed7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25489,
        "upload_time": "2016-07-08T16:51:57",
        "url": "https://files.pythonhosted.org/packages/2b/48/63278a8b857805f5459caa06f1bc881c5022e2c1c9e9e9751310d986b73e/confluent-kafka-0.9.1.2.tar.gz"
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4ce06426b457f48ce3ca8e17f8012d64",
          "sha256": "cb366b2e66e880bf458218173f1c4062d7f7c7ae871bd5571f2c166b2f392720"
        },
        "downloads": 2282,
        "filename": "confluent-kafka-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4ce06426b457f48ce3ca8e17f8012d64",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29213,
        "upload_time": "2016-11-08T23:27:12",
        "url": "https://files.pythonhosted.org/packages/92/23/78acb04c6660f32fbb8f789252e202898c0b3e0cea2ec4ac0913b7970188/confluent-kafka-0.9.2.tar.gz"
      }
    ],
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7e3944e94ffc45b800090dde68e23933",
          "sha256": "931bcc3512245ae003c86aa860fb62bbfb4036763a3c2908c50150e412bf0aed"
        },
        "downloads": 675,
        "filename": "confluent-kafka-0.9.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7e3944e94ffc45b800090dde68e23933",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40776,
        "upload_time": "2017-03-01T19:34:48",
        "url": "https://files.pythonhosted.org/packages/bb/aa/4183a3ea74fe75a05a76a4ee97edd897f03a2bd2e25c76ff8c437717fb24/confluent-kafka-0.9.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "7e3944e94ffc45b800090dde68e23933",
        "sha256": "931bcc3512245ae003c86aa860fb62bbfb4036763a3c2908c50150e412bf0aed"
      },
      "downloads": 675,
      "filename": "confluent-kafka-0.9.4.tar.gz",
      "has_sig": false,
      "md5_digest": "7e3944e94ffc45b800090dde68e23933",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 40776,
      "upload_time": "2017-03-01T19:34:48",
      "url": "https://files.pythonhosted.org/packages/bb/aa/4183a3ea74fe75a05a76a4ee97edd897f03a2bd2e25c76ff8c437717fb24/confluent-kafka-0.9.4.tar.gz"
    }
  ]
}