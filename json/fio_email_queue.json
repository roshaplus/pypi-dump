{
  "info": {
    "author": "Fulfil.IO Inc., Openlabs Technologies and Consulting (P) Ltd.",
    "author_email": "info@fulfil.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Plugins",
      "Framework :: Tryton",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Office/Business"
    ],
    "description": "email-queue\n===========\n\nThis module implements an email queue which acts as a transaction safe\nbuffer for tryton modules to send emails.\n\n.. image:: https://travis-ci.org/fulfilio/email-queue.svg?branch=develop\n    :target: https://travis-ci.org/fulfilio/email-queue\n\n.. image:: https://coveralls.io/repos/fulfilio/email-queue/badge.png\n    :target: https://coveralls.io/r/fulfilio/email-queue\n\n\nSource code: https://github.com/fulfilio/email-queue\n\nWhy should I use this module ?\n------------------------------\n\nDo you send emails from your tryton module ? Then you most probably need\nthis module. Here's why:\n\nTransaction Safety\n``````````````````\n\nConsider the case where you are sending an Order confirmation email when\nyou click the confirm button. The transaction could roll back for a\nvariety of reasons after the email has been sent out to the customer. This\ncould be specially annoying if you sent an order number or other\ninformation which could change, the second time you save the record - in\naddition to the second time the second email that would spam the user.\n\nThis module solves the problem by buffering the email to a database table\nwithin the same transaction. Later, a cron task clears out the email. If\nthe transaction was rolled back the would not be saved in the buffer too\nand you would not have to do anything separate.\n\nPerformance\n```````````\n\nDepending on how your SMTP server is setup and the bandwidth of your\nservers, the sending of an email takes way more time than a database\nwrite. This creates blocking operations resulting in poor user experience\nand your app would now need more workers to handle more such requests.\nThis module works around the problem by first buffering the email and then\nhaving a separate cron task which clears out the email by actually sending\nit.\n\nScalability\n```````````\n\nIf you desire to be webscale like most of the internet aspires to be, you\nwould probably want to perform network bound operations like sending\nemails from separate servers and scale using a message queue. This module\noffers an API which lets you easily scale by subclassing the email.queue\nmodel and changing the `send_all` implementation.\n\nHow do I install this module ?\n------------------------------\n\nInstall from PyPI::\n\n   pip install fio_email_queue\n\nInstall from source::\n\n    git clone git@github.com:fulfilio/email-queue\n    python setup.py install\n\nYou can then install the module in your database.\n\n\nHow do I use this functionality in my modules ?\n-----------------------------------------------\n\nThe module provides a convenient method which has the same signature as\npython's `smtplib.SMTP.sendmail <https://docs.python.org/2/library/smtplib.html#smtplib.SMTP.sendmail>`_\nmethod. This makes it easy to update your existing email sending code.\n\n.. code-block:: python\n\n\n    msg = MIMEText('This is the body')\n    msg['Subject'] = 'An important email'\n    msg['From'] = 'me@me.com'\n    msg['To'] = 'you@you.com'\n\n    EmailQueue = Pool().get('email.queue')\n    EmailQueue.queue_mail(me, [you], msg.as_string())\n\n\nIf your transaction was successful, the email would be queued to be sent\nand the mail would be sent out through the SMTP server when the cron runs\nnext time.\n\n*The cron runs every 1 minute and you can change the frequency from cron\nsettings*\n\nHow do I configure the SMTP Server ?\n------------------------------------\n\nBy default the emails are sent out using the smtp client provided by\nTryton. You can configure the settings for the same on your tryton\nconfiguration file.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://www.fulfil.io/",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "fio_email_queue",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/fio_email_queue/",
    "release_url": "https://pypi.org/project/fio_email_queue/4.0.0.2/",
    "requires_python": null,
    "summary": "Trytond Email Queue Module",
    "version": "4.0.0.2"
  },
  "releases": {
    "3.4.0.1": [],
    "3.4.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e030dd2cfed536cdc2171bd540d138fb",
          "sha256": "b0e8976dc4d075ec03470b7300b0a49338050789d932af00663af2f0812730ad"
        },
        "downloads": 739,
        "filename": "fio_email_queue-3.4.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e030dd2cfed536cdc2171bd540d138fb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8934,
        "upload_time": "2015-09-04T04:22:52",
        "url": "https://files.pythonhosted.org/packages/51/d3/757fbd9947c3d0b8d72b544c60ac476a1e42d8dcd68ca0dae3b63e241e57/fio_email_queue-3.4.1.0.tar.gz"
      }
    ],
    "3.6.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4a4e83e590981307120948c5535f467c",
          "sha256": "d26b8e16d12d04337e806a7e6bcf489f5ed56e3f730a9b8d3161c2547c17b17a"
        },
        "downloads": 1911,
        "filename": "fio_email_queue-3.6.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4a4e83e590981307120948c5535f467c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8827,
        "upload_time": "2015-09-15T07:05:27",
        "url": "https://files.pythonhosted.org/packages/fb/3e/6c9ddbc127aab19ff0c9c5ead21f12c81f451eee5ab88bf756533317bf4f/fio_email_queue-3.6.1.0.tar.gz"
      }
    ],
    "4.0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "158c075aeeb01d953b60f3d59d9ae503",
          "sha256": "9e46b0fea50492a1371e1493ae8599946e4bf3978342f6b56a6edfcfc311f05b"
        },
        "downloads": 1760,
        "filename": "fio_email_queue-4.0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "158c075aeeb01d953b60f3d59d9ae503",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8711,
        "upload_time": "2016-08-16T06:45:50",
        "url": "https://files.pythonhosted.org/packages/54/10/384fc3f043d2295b85ca4e4898aafd3160ca5a7f85453e6249fb03b42d94/fio_email_queue-4.0.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "158c075aeeb01d953b60f3d59d9ae503",
        "sha256": "9e46b0fea50492a1371e1493ae8599946e4bf3978342f6b56a6edfcfc311f05b"
      },
      "downloads": 1760,
      "filename": "fio_email_queue-4.0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "158c075aeeb01d953b60f3d59d9ae503",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8711,
      "upload_time": "2016-08-16T06:45:50",
      "url": "https://files.pythonhosted.org/packages/54/10/384fc3f043d2295b85ca4e4898aafd3160ca5a7f85453e6249fb03b42d94/fio_email_queue-4.0.0.2.tar.gz"
    }
  ]
}