{
  "info": {
    "author": "Vincent Verdeil, Antoine Rousseaux",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Multimedia :: Graphics :: Capture :: Digital Camera"
    ],
    "description": ".. image:: https://raw.githubusercontent.com/werdeil/pibooth/master/templates/pibooth.png\n   :align: center\n   :alt: Pibooth\n\n\nThe ``pibooth`` project attempts to provide a Photo Booth application *out-of-the-box*\nfor Raspberry Pi.\n\nRequirements\n------------\n\nThe requirements listed below are the one used for the development of ``pibooth``, but\nother configuration may work fine. All hardware buttons and lights are optional.\n\nHardware:\n^^^^^^^^^\n\n* 1 Raspberry Pi Model B+\n* 1 Camera (Pi Camera v2.1 8 MP 1080p or any camera `compatible with gphoto2\n  <http://www.gphoto.org/proj/libgphoto2/support.php>`_)\n* 2 push buttons\n* 2 LED\n* 2 resistor of 100 Ohm\n\nSoftware:\n^^^^^^^^^\n\n* Python ``3.5.3``\n* RPi.GPIO ``0.6.3``\n* picamera ``1.13``\n* Pillow ``4.0.0``\n* pygame ``1.9.3``\n* gphoto2 ``1.8.0`` ( libgphoto2 ``2.5.15`` )\n* pycups ``1.9.73`` ( CUPS ``2.2.1`` )\n\nInstall\n-------\n\nA brief description on how to set-up a Raspberry Pi to use this software.\n\n1. Download latest Raspbian image and set-up an SD-card. You can follow\n   `these instructions <https://www.raspberrypi.org/documentation/installation/installing-images/README.md>`_ .\n\n2. Insert the SD-card into the Raspberry Pi and fire it up. Use the raspi-config tool that is shown\n   automatically on the first boot to configure your system (e.g., expand partition, change hostname,\n   password, enable SSH, configure to boot into GUI, etc.).\n\n   .. hint:: Don't forget to enable the camera in raspi-config. A reboot is needed after this.\n\n3. Reboot and open a terminal. Install the latest firmware version:\n\n   ::\n\n        $ sudo rpi-update\n\n4. Upgrade all installed software:\n\n   ::\n\n        $ sudo apt-get update\n        $ sudo apt-get upgrade\n\n5. Optionally install ``gphoto2`` (required only for external camera):\n\n   ::\n\n        $ sudo wget raw.github.com/gonzalo/gphoto2-updater/master/gphoto2-updater.sh\n        $ sudo chmod 755 gphoto2-updater.sh\n        $ sudo ./gphoto2-updater.sh\n\n6. Optionally install ``CUPS`` to handle printers (more instruction to add a new printer can be found\n   `here <https://www.howtogeek.com/169679/how-to-add-a-printer-to-your-raspberry-pi-or-other-linux-computer>`_):\n\n   ::\n\n        $ sudo apt-get install cups libcups2-dev\n\n7. Install ``pibooth`` from the pypi repository:\n\n   ::\n\n        $ sudo pip install pibooth\n\n   .. hint:: If you don't have *gphoto2* or *CUPS* installed (steps 5. and 6. skipped), use the ``--no-deps``\n             option to avoid installation failures (you may need to install dependencies by yourself)\n\nRun\n---\n\nStart the Photo Booth application using the command::\n\n    $ pibooth\n\nAfter the graphical interface is started, the following actions are available:\n\n==================== ================ ================\nAction               Keyboard key     Physical button\n==================== ================ ================\nToggle Full screen   Ctrl + F         \\-\nChoose pictures      LEFT or RIGHT    Button 1\nTake pictures        P                Button 1\nExport Printer/Cloud Ctrl + E         Button 2\nQuit                 ESC              \\-\n==================== ================ ================\n\nAll pictures taken are stored in a subfolder of the one defined in the configuration,\nnamed **YYYY-mm-dd hh-mm-ss** which the time when first photo of the sequence was taken.\n\nConfiguration\n-------------\n\nAt the first run, a configuration file is generated in ``~/.config/pibooth/pibooth.cfg``\nwhich permits to configure the behavior of the application. The configuration can be\neasily edited using the command::\n\n \u00a0  $ pibooth --config\n\nThe default configuration can be restored with the command::\n\n \u00a0 \u00a0$ pibooth --reset\n\nBelow is the default configuration file:\n\n.. code-block:: ini\n\n    [GENERAL]\n    # User interface language (fallback to English if not found)\n    language = en\n\n    # Path to save pictures\n    directory = ~/Pictures/pibooth\n\n    # Cleanup the 'directory' before start\n    clear_on_startup = True\n\n    # How long to debounce the button in seconds\n    debounce_delay = 0.3\n\n    # Name of the printer to send the pictures\n    printer_name = default\n\n    [WINDOW]\n    # (Width, Height) of the display monitor\n    size = (800, 480)\n\n    # Blinking background when picture is taken\n    flash = True\n\n    # How long is the preview in seconds\n    preview_delay = 3\n\n    # Show a countdown timer during the preview\n    preview_countdown = True\n\n    [PICTURE]\n    # How many pictures to take by default (4 max)\n    captures = 4\n\n    # First text displayed\n    footer_text1 = Footer 1\n\n    # Second text displayed\n    footer_text2 = Footer 2\n\n    # Footer text RGB color\n    text_color = (0, 0, 0)\n\n    # Background RGB color\n    bg_color = (255, 255, 255)\n\n    [CAMERA]\n    # Resolution for camera captures (see picamera modes)\n    resolution = (1920, 1080)\n\n    # Adjust for lighting issues (normal is 100 or 200. Dark is 800 max)\n    iso = 100\n\n    # Rotation of the camera (valid values are 0, 90, 180, and 270)\n    rotation = 0\n\nCircuit diagram\n---------------\n\n.. image:: https://raw.githubusercontent.com/werdeil/pibooth/master/templates/sketch.png\n   :align: center\n   :alt: Electronic sketch\n\nCredits:\n--------\n\nIcons from the Noun Project\n\n- Thumb up by Symbolon\n- Polaroid by icon 54\n- Cat by \u0412\u043d\u0442\u0430\u043b\u0438\u0439 \u041f\u043b\u0443\u0442\n\n\n",
    "docs_url": null,
    "download_url": "https://github.com/werdeil/pibooth/archive/0.0.5.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/werdeil/pibooth",
    "keywords": "Raspberry Pi,camera,photobooth",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pibooth",
    "platform": "unix",
    "project_url": "https://pypi.org/project/pibooth/",
    "release_url": "https://pypi.org/project/pibooth/0.0.5/",
    "requires_dist": [
      "pycups",
      "picamera",
      "gphoto2",
      "RPi.GPIO",
      "Pygame",
      "Pillow"
    ],
    "requires_python": "",
    "summary": "A Photo Booth application in pure Python for the Raspberry Pi.",
    "version": "0.0.5"
  },
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8c88aa409298c4046304c1cc1ee2cccc",
          "sha256": "af14bc98657f03cebf82e6c97add17cabb99b835316f535bd1aa1a436f10612d"
        },
        "downloads": -1,
        "filename": "pibooth-0.0.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c88aa409298c4046304c1cc1ee2cccc",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 358160,
        "upload_time": "2018-01-07T18:34:20",
        "url": "https://files.pythonhosted.org/packages/86/7a/a46c741929e218cb73341fa61c4127955650cac30efea1da01c5b2164371/pibooth-0.0.2-py2-none-any.whl"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bec1484bb5dc2c57e657fc5925d0defe",
          "sha256": "48b509895fe64973650225d8916747ae355efd2b58763106ce2ec12593c86b11"
        },
        "downloads": -1,
        "filename": "pibooth-0.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bec1484bb5dc2c57e657fc5925d0defe",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 278349,
        "upload_time": "2018-01-21T22:51:08",
        "url": "https://files.pythonhosted.org/packages/c2/3e/feea62aacc472fe710ac8166c415f7a8e2b8a8485a83139b15fecaa35cde/pibooth-0.0.4-py2.py3-none-any.whl"
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5b2faad9a42a07a77e12ff35f2d8afb2",
          "sha256": "4045c321ed491accf8683a1896cfb6b2e7baff5cd6a4b454ade399c7ebe921d4"
        },
        "downloads": -1,
        "filename": "pibooth-0.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b2faad9a42a07a77e12ff35f2d8afb2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 654411,
        "upload_time": "2018-02-07T22:48:54",
        "url": "https://files.pythonhosted.org/packages/b7/5e/bae98ca9059b48a1698789f6cf73311f07942b469321d921b186e5c2c3d5/pibooth-0.0.5-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5b2faad9a42a07a77e12ff35f2d8afb2",
        "sha256": "4045c321ed491accf8683a1896cfb6b2e7baff5cd6a4b454ade399c7ebe921d4"
      },
      "downloads": -1,
      "filename": "pibooth-0.0.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5b2faad9a42a07a77e12ff35f2d8afb2",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 654411,
      "upload_time": "2018-02-07T22:48:54",
      "url": "https://files.pythonhosted.org/packages/b7/5e/bae98ca9059b48a1698789f6cf73311f07942b469321d921b186e5c2c3d5/pibooth-0.0.5-py2.py3-none-any.whl"
    }
  ]
}