{
  "info": {
    "author": "Alberto Alcolea",
    "author_email": "me@albertoalcolea.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Plugins",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Django EmailLog Backend\n=======================\n\nSimple email backend for Django that writes messages to logger instead of sending them to a SMTP server.\n\nInstallation is easy using ``pip`` and will install all required libraries.\n\n\nInstallation\n------------\n\nInstallation is easy using ``pip``\n\n    $ pip install django-emaillog-backend\n\nor get it from source\n\n    $ git clone https://github.com/albertoalcolea/django-emaillog-backend\n    $ cd django-emaillog-backend\n    $ python setup.py install\n\n\nUsage\n-----\n\nTo ensure that all emails sent using the send_mail function of Django are sent to a log should add the following to your ``settings.py`` file:\n\n    EMAIL_BACKEND = 'emaillog_backend.LoggerBackend'\n\n\nYou can specify the logger to which the logs will be sent adding in your ``settings.py`` file\n\n    EMAIL_LOGGER_NAME = 'your_logger_name'\n\nFor example, you can create a custom logger to test sending emails as follow:\n\nAdd a custom logger in your ``settings.py`` file:\n\n    LOGGING = {\n        'version': 1,\n        'disable_existing_loggers': False,\n        'formatters': {\n            ...\n        },\n        'handlers': {\n            ...\n        },\n        'loggers': {\n            ...\n            'email_logger': {\n                'handlers': ['your_handler'],\n                'propagate': True,\n                'level': 'DEBUG',\n            },\n        }\n    }\n\nIn your ``settings.py`` file select the email backend and set the EMAIL_LOGGER_NAME constant:\n\n    EMAIL_BACKEND = 'django-emaillog-backend.backends.LoggerBackend'\n\n    EMAIL_LOGGER_NAME = 'email_logger'\n\nThe default logger for ``django-emaillog-backend`` is the global Django logger called 'django'.\n\nIt is also possible to choose the severity level of messages sent to the logger adding the following to your ``settings.py`` file:\n\n    EMAIL_LOGGER_LEVEL = logger_level\n\nwhere ``EMAIL_LOGGER_LEVEL`` is an integer. We recommend using the severity levels of module logging:\n\n    logging.DEBUG (10)\n    logging.INFO (20)\n    logging.WARNING (30)\n    logging.ERROR (40)\n    logging.CRITICAL (50)\n\nFor example:\n\n    import logging\n    EMAIL_LOGGER_LEVEL = logging.INFO\n\nThe default log level is INFO.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "UNKNOWN",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-emaillog-backend",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-emaillog-backend/",
    "release_url": "https://pypi.org/project/django-emaillog-backend/0.1/",
    "requires_python": null,
    "summary": "Django email backend that writes messages to logger instead of sending them by SMTP.",
    "version": "0.1"
  },
  "releases": {
    "0.1": []
  },
  "urls": []
}