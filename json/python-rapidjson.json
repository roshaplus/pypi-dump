{
  "info": {
    "author": "Ken Robbins",
    "author_email": "ken@kenrobbins.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: C++",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "==================\n python-rapidjson\n==================\n\nPython wrapper around RapidJSON\n===============================\n\nRapidJSON_ is an extremely fast C++ JSON serialization library.\n\nWe do not support legacy Python versions, you will need to upgrade to Python 3\nto use this library.\n\nLatest version documentation is automatically rendered by `Read the Docs`__.\n\n__ http://python-rapidjson.readthedocs.io/en/latest/\n\n.. image:: https://travis-ci.org/python-rapidjson/python-rapidjson.svg?branch=master\n   :target: https://travis-ci.org/python-rapidjson/python-rapidjson\n   :alt: Build status\n\n.. image:: https://readthedocs.org/projects/python-rapidjson/badge/?version=latest\n   :target: http://python-rapidjson.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation status\n\n\nGetting Started\n---------------\n\nFirst install ``python-rapidjson``:\n\n.. code-block:: bash\n\n    $ pip install python-rapidjson\n\nRapidJSON tries to be compatible with the standard library ``json`` module so\nit should be a drop in replacement. Basic usage looks like this:\n\n.. code-block:: python\n\n    >>> import rapidjson\n    >>> data = {'foo': 100, 'bar': 'baz'}\n    >>> rapidjson.dumps(data)\n    '{\"bar\":\"baz\",\"foo\":100}'\n    >>> rapidjson.loads('{\"bar\":\"baz\",\"foo\":100}')\n    {'bar': 'baz', 'foo': 100}\n\nIf you want to install the development version (maybe to contribute fixes or\nenhancements) you may clone the repository:\n\n.. code-block:: bash\n\n    $ git clone --recursive https://github.com/python-rapidjson/python-rapidjson.git\n\n.. note:: The ``--recursive`` option is needed because we use a *submodule* to\n          include RapidJSON_ sources. Alternatively you can do a plain\n          ``clone`` immediately followed by a ``git submodule update --init``.\n\n          Alternatively, if you already have (a *compatible* version of)\n          RapidJSON includes around, you can compile the module specifying\n          their location with the option ``--rj-include-dir``, for example:\n\n          .. code-block:: shell\n\n             $ python3 setup.py build --rj-include-dir=/usr/include/rapidjson\n\n\nPerformance\n-----------\n\n``python-rapidjson`` tries to be as performant as possible while staying\ncompatible with the ``json`` module.\n\nThe following tables show a comparison between this module and other libraries\nwith different data sets.  Last row (\u201coverall\u201d) is the total time taken by all\nthe benchmarks.\n\nEach number show the factor between the time taken by each contender and\n``python-rapidjson`` (in other words, they are *normalized* against a value of\n1.0 for ``python-rapidjson``): the lower the number, the speedier the\ncontender.\n\nIn **bold** the winner.\n\nSerialization\n~~~~~~~~~~~~~\n\n+-----------------------+------------+------------+------------+------------+\n|       serialize       |   ujson    | simplejson |    json    |    yajl    |\n+=======================+============+============+============+============+\n|  **100 arrays dict**  |    1.34    |    5.88    |    3.23    |    1.76    |\n+-----------------------+------------+------------+------------+------------+\n|  **100 dicts array**  |    1.50    |    6.87    |    2.85    |    1.70    |\n+-----------------------+------------+------------+------------+------------+\n|  **256 Trues array**  |    1.36    |    2.40    |    2.08    |    1.12    |\n+-----------------------+------------+------------+------------+------------+\n|    256 ascii array    |  **0.92**  |    1.96    |    1.75    |    1.97    |\n+-----------------------+------------+------------+------------+------------+\n| **256 doubles array** |    6.28    |    6.79    |    6.33    |    3.59    |\n+-----------------------+------------+------------+------------+------------+\n|   256 unicode array   |    0.65    |    0.82    |    0.87    |  **0.52**  |\n+-----------------------+------------+------------+------------+------------+\n|  **complex object**   |    1.34    |    4.78    |    3.04    |    2.50    |\n+-----------------------+------------+------------+------------+------------+\n|   composite object    |  **0.97**  |    3.13    |    1.96    |    1.93    |\n+-----------------------+------------+------------+------------+------------+\n|      **overall**      |    1.34    |    5.87    |    3.22    |    1.76    |\n+-----------------------+------------+------------+------------+------------+\n\nDeserialization\n~~~~~~~~~~~~~~~\n\n+-----------------------+------------+------------+------------+------------+\n|      deserialize      |   ujson    | simplejson |    json    |    yajl    |\n+=======================+============+============+============+============+\n|    100 arrays dict    |  **0.96**  |    1.46    |    1.19    |    1.21    |\n+-----------------------+------------+------------+------------+------------+\n|    100 dicts array    |  **0.95**  |    1.98    |    1.56    |    1.30    |\n+-----------------------+------------+------------+------------+------------+\n|  **256 Trues array**  |    1.27    |    2.10    |    1.92    |    2.05    |\n+-----------------------+------------+------------+------------+------------+\n|  **256 ascii array**  |    1.38    |    1.13    |    1.23    |    1.56    |\n+-----------------------+------------+------------+------------+------------+\n|   256 doubles array   |  **0.45**  |    1.02    |    0.94    |    0.45    |\n+-----------------------+------------+------------+------------+------------+\n|   256 unicode array   |  **0.91**  |    4.60    |    5.09    |    2.18    |\n+-----------------------+------------+------------+------------+------------+\n|    complex object     |  **0.96**  |    1.48    |    1.27    |    1.26    |\n+-----------------------+------------+------------+------------+------------+\n|   composite object    |  **0.86**  |    2.03    |    1.45    |    1.26    |\n+-----------------------+------------+------------+------------+------------+\n|        overall        |  **0.96**  |    1.46    |    1.20    |    1.21    |\n+-----------------------+------------+------------+------------+------------+\n\nDIY\n~~~\n\nTo run these tests yourself, clone the repo and run:\n\n.. code-block::\n\n   $ tox -e py34 -- -m benchmark --compare-other-engines\n\nWithout the option ``--compare-other-engines`` it will focus only on\n``RapidJSON``.  This is particularly handy coupled with the `compare past\nruns`__ functionality of ``pytest-benchmark``:\n\n.. code-block::\n\n   $ tox -e py34 -- -m benchmark --benchmark-autosave\n   # hack, hack, hack!\n   $ tox -e py34 -- -m benchmark --benchmark-compare=0001\n\n   ----------------------- benchmark 'deserialize': 18 tests ------------------------\n   Name (time in us)                                                            Min\u2026\n   ----------------------------------------------------------------------------------\n   test_loads[rapidjson-256 Trues array] (NOW)                         5.2320 (1.0)\u2026\n   test_loads[rapidjson-256 Trues array] (0001)                        5.4180 (1.04)\u2026\n   \u2026\n\nTo reproduce the tables above, use the option ``--benchmark-json`` so that the\nthe results are written in the specified filename the run the\n``benchmark-tables.py`` script giving that filename as the only argument:\n\n.. code-block::\n\n   $ tox -e py36 -- -m benchmark --compare-other-engines --benchmark-json=comparison.json\n   $ python3 benchmark-tables.py comparison.json\n\n\n__ http://pytest-benchmark.readthedocs.org/en/latest/comparing.html\n\n\nIncompatibility\n---------------\n\nHere are things in the standard ``json`` library supports that we have decided\nnot to support:\n\n* ``separators`` argument. This is mostly used for pretty printing and not\n  supported by ``RapidJSON`` so it isn't a high priority. We do support\n  ``indent`` kwarg that would get you nice looking JSON anyways.\n\n* Coercing keys when dumping. ``json`` will turn ``True`` into ``'True'`` if\n  you dump it out but when you load it back in it'll still be a string. We\n  want the dump and load to return the exact same objects so we have decided\n  not to do this coercing.\n\n.. _RapidJSON: https://github.com/miloyip/rapidjson\n\n\nChanges\n-------\n\n0.0.11 (2017-03-05)\n~~~~~~~~~~~~~~~~~~~\n\n* Fix a couple of refcount handling glitches, hopefully targeting `issue\n  48`__.\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/48\n\n\n0.0.10 (2017-03-02)\n~~~~~~~~~~~~~~~~~~~\n\n* Fix source distribution to contain all required stuff (`PR #64`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/64\n\n\n0.0.9 (2017-03-02)\n~~~~~~~~~~~~~~~~~~\n\n* CI testing on GitHub\n\n* Allow using locally installed RapidJSON library (`issue #60`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/60\n\n* Bug fixes (`issue #37`__, `issue #51`__, `issue #57`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/37\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/51\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/57\n\n\n0.0.8 (2016-12-09)\n~~~~~~~~~~~~~~~~~~\n\n* Use unpatched RapidJSON 1.1 (`PR #46`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/46\n\n* Handle serialization and deserialization of datetime, date and time\n  instances (`PR #35`__) and of UUID instances (`PR #40`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/35\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/40\n\n* Sphinx based documentation (`PR #44`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/44\n\n* Refresh benchmarks (`PR #45`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/45\n\n* Bug fixes (`issue #25`__, `issue #38`__, `PR #43`__)\n\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/25\n  __ https://github.com/python-rapidjson/python-rapidjson/issues/38\n  __ https://github.com/python-rapidjson/python-rapidjson/pull/43\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/python-rapidjson/python-rapidjson",
    "keywords": "json rapidjson",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-rapidjson",
    "platform": "",
    "project_url": "https://pypi.org/project/python-rapidjson/",
    "release_url": "https://pypi.org/project/python-rapidjson/0.0.11/",
    "requires_python": "",
    "summary": "Python wrapper around rapidjson",
    "version": "0.0.11"
  },
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1228ded544dbe79f20f1a61fdad84a92",
          "sha256": "9927a9667b1fc6975a8af8a339a26416c69b1b5aa7705ce428e79a206892d3a0"
        },
        "downloads": 11,
        "filename": "python-rapidjson-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "1228ded544dbe79f20f1a61fdad84a92",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 153057,
        "upload_time": "2017-03-02T12:29:34",
        "url": "https://files.pythonhosted.org/packages/ff/b8/00ffb35911166dbc3b5ff4d04c5d0a9c0731c7dfdf58acc5b83289c3e116/python-rapidjson-0.0.10.tar.gz"
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8b68b47936dd1d3ab60029d6d800cc03",
          "sha256": "d8f7969d503f94ba3a68525e78f468afb427129aaee4d21d8c0dc7743469fb37"
        },
        "downloads": 356,
        "filename": "python-rapidjson-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "8b68b47936dd1d3ab60029d6d800cc03",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 154271,
        "upload_time": "2017-03-05T15:51:17",
        "url": "https://files.pythonhosted.org/packages/43/fc/6d3497577548999faee2115b245954193d4eb6386de14198ae4cb9ed1ccb/python-rapidjson-0.0.11.tar.gz"
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "de0e3b48789000bbf70a80422413e7df",
          "sha256": "8cd7cc429a3e2ab16ab2cfb2000c9a7a245d119a174d39e3fdd1ebc68983b423"
        },
        "downloads": 1157,
        "filename": "python-rapidjson-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "de0e3b48789000bbf70a80422413e7df",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 94836,
        "upload_time": "2015-09-15T05:49:28",
        "url": "https://files.pythonhosted.org/packages/f1/54/15613fcb112cae54a11bd8beb8b49048a6d9c260cce6c9acd8e8aaf21e02/python-rapidjson-0.0.5.tar.gz"
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b702ec72a1311a233713e467c29fced4",
          "sha256": "24f57b650c066bad65469894272c9b6444a7face2de29d50fefc7a0fd65935ea"
        },
        "downloads": 6923,
        "filename": "python-rapidjson-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b702ec72a1311a233713e467c29fced4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 95104,
        "upload_time": "2015-09-20T05:24:38",
        "url": "https://files.pythonhosted.org/packages/14/af/1c2f7677d2ff8bc6f25d9e96c5fef9fe4886038dfaabe73c797d621de2c2/python-rapidjson-0.0.6.tar.gz"
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dcf421912e40a55ca4ac57a2db9e2eb6",
          "sha256": "236aa31f00bbdaae51e78cc44c4424db653e1ded005b19617303e1c422a4664a"
        },
        "downloads": 910,
        "filename": "python-rapidjson-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "dcf421912e40a55ca4ac57a2db9e2eb6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 124414,
        "upload_time": "2016-12-09T09:59:08",
        "url": "https://files.pythonhosted.org/packages/69/da/e2b90236cc0042fe94306129416fb2ed60addd9a89e0639a2b4bfdb8ed2f/python-rapidjson-0.0.8.tar.gz"
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "77434d0e1cf5fa415a8b64c1e71145cb",
          "sha256": "c110cf009b9e434422b053f3c340f25fc7fa538c1d04a1fbdfaca8ea48f92788"
        },
        "downloads": 12,
        "filename": "python-rapidjson-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "77434d0e1cf5fa415a8b64c1e71145cb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 126990,
        "upload_time": "2017-03-02T09:40:00",
        "url": "https://files.pythonhosted.org/packages/10/7c/9e9963db30ee20cf4bf6356f231eadaa77d44d323da18edab1f15cacb180/python-rapidjson-0.0.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "8b68b47936dd1d3ab60029d6d800cc03",
        "sha256": "d8f7969d503f94ba3a68525e78f468afb427129aaee4d21d8c0dc7743469fb37"
      },
      "downloads": 356,
      "filename": "python-rapidjson-0.0.11.tar.gz",
      "has_sig": false,
      "md5_digest": "8b68b47936dd1d3ab60029d6d800cc03",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 154271,
      "upload_time": "2017-03-05T15:51:17",
      "url": "https://files.pythonhosted.org/packages/43/fc/6d3497577548999faee2115b245954193d4eb6386de14198ae4cb9ed1ccb/python-rapidjson-0.0.11.tar.gz"
    }
  ]
}