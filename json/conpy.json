{
  "info": {
    "author": "J. Fernando Sanchez",
    "author_email": "balkian@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "![GSI Logo](http://gsi.dit.upm.es/templates/jgsi/images/logo.png)\n[Conpy](http://demos.gsi.dit.upm.es/conpy) \n==================================\n\nIntroduction\n---------------------\nThis tool will take several input formats and translates them to semantic formats. It focuses on translating corpora to the NIF+[Marl](http://gsi.dit.upm.es/ontologies/marl) format, usin json-ld.\n\nConpy is under heavy development. As of this writing, it supports:\n\n* Creating and administrating translation templates (admin level)\n* Editing templates to convert traditional formats (csv, tsv, xls, xml) formats to NIF+Marl+Onyx.\n* Using the available templates to translate known formats through this portal or via POST requests\n* Saving or outputting the result\n* HTTP API\n* Logging translation requests\n* Auto selection of the best template based on the input format\n\nIn the future, we might include the following features:\n* Conversion of semantic formats\n* Automatic translation between semantic formats (e.g. [RDF](http://www.w3.org/RDF/) to [JSON-LD](http://json-ld.org/))\n\nTranslating a document\n----------------------\nDocuments can be translated via the Web Interface, through the REST interface, or via Command-Line.\n\nThe Generator endpoint takes the following parameters:\n\n * input (i): The original file to be translated\n * informat (f): The format of the original file\n * intype (t) [Optional]:\n    * direct (default)\n    * url\n    * file\n * outformat (o):\n    * json-ld\n    * rdfxml\n    * turtle (default, to comply with NIF)\n    * ntriples\n    * trix\n * base URI (u) [Optional]: base URI to use for the corpus\n * prefix (p) [Optional]: prefix to replace the base URI\n * language (l) [Optional]: language code (see dc:terms and [ISO 639](http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) )\n * template (t) [Optional]: ID of the template to use. If it is omitted, a template to convert from informat to outformat will be used, or a template from informat to another format (e.g. json-ld), with automatic conversion (*to be done*).\n * toFile [Optional]: Whether the result should be sent in the response (default) or written to a file. For convenience, this value defaults to False when using the Web Form.\n\nUsing the command line tool *curl*, a request can be made like this:\n\n    curl -F\"template=Example_to_Marl\" -F\"input=@input-file.csv\" -F\"intype=FILE\"\n        http://demos.gsi.dit.upm.es/conpy/process\n        > result.jsonld\n\nCommand-line tool\n-----------------\nIn addition to the methods above, this tool can be used directly in the command line.\nThe conversion \n\n    python -m conpy.cli -i <file to be converted> --template <conversion template> -o <output>\n\n\nInstallation instructions\n------------------------------\nThis repository contains all the code necessary to run conpy. To install it, follow the following steps:\n\n* Copy the conpy/settings-private.py.template to conpy/settings-private.py\n* Add your database information to settings.py\n* Create a virtualenv (preferably, in the project root)\n* Install the required packages:\n\n    pip install -r requirements.txt\n\n* Test the environment with:\n\n    python manage.py runserver localhost:<PORT>\n\n\nIf the standalone server works, you can try serving the portal via apache/nginx and WSGI. It has been tested with apache2 and uwsgi. In that case you will also need to serve the static files from your web server. An example configuration for Apache2 would be:\n\n```\n<VirtualHost *:80>\n\n    [ ... ]\n\n    WSGIScriptAlias /conpy /path_to_conpy/wsgi.py\n    WSGIDaemonProcess conpy user=www-data group=www-data processes=nprocesses threads=nthreads python-path=/path_to_conpy:/path_to_conpy/venv/lib/python2.7/site-packages\n    WSGIProcessGroup conpy\n    <Directory /path_to_conpy>\n    Order allow,deny\n    Allow from all\n    </Directory>\n\n    Alias /conpy/robots.txt /path_to_conpy/static/robots.txt\n    Alias /conpy/favicon.ico /path_to_conpy/static/favicon.ico\n\n    AliasMatch ^conpy/([^/]*\\.css) /path_to_conpy/static/styles/$1\n\n    Alias /conpy/media/ /path_to_conpy/media/\n    Alias /conpy/static/ /path_to_conpy/static/\n\n    <Directory /path_to_conpy/static>\n    Order deny,allow\n    Allow from all\n    Options -Indexes\n    </Directory>\n\n    <Directory /path_to_conpy/media>\n    Order deny,allow\n    Allow from all\n    Options -Indexes\n    </Directory>\n\n</VirtualHost>\n```\n\nAcknowledgement\n---------------\nEUROSENTIMENT PROJECT\nGrant Agreement no: 296277\nStarting date: 01/09/2012\nProject duration: 24 months\n\n![Eurosentiment Logo](logo_grande.png)\n![FP7 logo](logo_fp7.gif)\n",
    "docs_url": null,
    "download_url": "https://github.com/gsi-upm/conpy/archive/0.1.0.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/gsi-upm/conpy",
    "keywords": "conversion,templates,flask,celery,eurosentiment,nif,gsi",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "conpy",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/conpy/",
    "release_url": "https://pypi.org/project/conpy/0.1.0/",
    "requires_python": null,
    "summary": "A sentiment analysis server implementation. Designed to be extendable, so new algorithms and sources can be used.",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8331ed69e2fce96ef99b77c6d81d914d",
          "sha256": "6add4bf6a0f849bc69129ab43f4c1f8601ad21cf8dd7137fe68f7c587a082b98"
        },
        "downloads": 1772,
        "filename": "conpy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8331ed69e2fce96ef99b77c6d81d914d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 76954,
        "upload_time": "2015-03-01T04:47:03",
        "url": "https://files.pythonhosted.org/packages/56/ec/53f3225dac83b1dcd04ae7102dd1c2ae6a7024b9a4e5a1a12f9352ec3533/conpy-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "8331ed69e2fce96ef99b77c6d81d914d",
        "sha256": "6add4bf6a0f849bc69129ab43f4c1f8601ad21cf8dd7137fe68f7c587a082b98"
      },
      "downloads": 1772,
      "filename": "conpy-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8331ed69e2fce96ef99b77c6d81d914d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 76954,
      "upload_time": "2015-03-01T04:47:03",
      "url": "https://files.pythonhosted.org/packages/56/ec/53f3225dac83b1dcd04ae7102dd1c2ae6a7024b9a4e5a1a12f9352ec3533/conpy-0.1.0.tar.gz"
    }
  ]
}