{
  "info": {
    "author": "Laurence Rowe",
    "author_email": "laurence@lrowe.co.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Zope3",
      "License :: OSI Approved :: Zope Public License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "***************\nzope.sqlalchemy\n***************\n\n.. contents::\n   :local:\n\nIntroduction\n============\n\nThe aim of this package is to unify the plethora of existing packages\nintegrating SQLAlchemy with Zope's transaction management. As such it seeks\nonly to provide a data manager and makes no attempt to define a `zopeish` way\nto configure engines.\n\nFor WSGI applications, Zope style automatic transaction management is\navailable with `repoze.tm2`_ (used by `Turbogears 2`_ and other systems).\n\nThis package is also used by `pyramid_tm`_ (an add-on of the `Pyramid`_) web\nframework.\n\nYou need to understand `SQLAlchemy`_ and the `Zope transaction manager`_ for\nthis package and this README to make any sense.\n\n.. _repoze.tm2: http://docs.repoze.org/tm2/\n\n.. _pyramid_tm: https://docs.pylonsproject.org/projects/pyramid_tm/dev/\n\n.. _Pyramid: http://pylonsproject.org/\n\n.. _Turbogears 2: http://turbogears.org/\n\n.. _SQLAlchemy: http://sqlalchemy.org/docs/\n\n.. _Zope transaction manager: http://www.zodb.org/zodbbook/transactions.html\n\nRunning the tests\n=================\n\nThis package is distributed as a buildout. Using your desired python run:\n\n$ python bootstrap.py\n$ ./bin/buildout\n\nThis will download the dependent packages and setup the test script, which may\nbe run with:\n\n$ ./bin/test\n\nor with the standard setuptools test command:\n\n$ ./bin/py setup.py test\n\nTo enable testing with your own database set the TEST_DSN environment variable\nto your sqlalchemy database dsn. Two-phase commit behaviour may be tested by\nsetting the TEST_TWOPHASE variable to a non empty string. e.g:\n\n$ TEST_DSN=postgres://test:test@localhost/test TEST_TWOPHASE=True bin/test\n\nExample\n=======\n\nThis example is lifted directly from the SQLAlchemy declarative documentation.\nFirst the necessary imports.\n\n    >>> from sqlalchemy import *\n    >>> from sqlalchemy.ext.declarative import declarative_base\n    >>> from sqlalchemy.orm import scoped_session, sessionmaker, relation\n    >>> from zope.sqlalchemy import ZopeTransactionExtension\n    >>> import transaction\n\nNow to define the mapper classes.\n\n    >>> Base = declarative_base()\n    >>> class User(Base):\n    ...     __tablename__ = 'test_users'\n    ...     id = Column('id', Integer, primary_key=True)\n    ...     name = Column('name', String(50))\n    ...     addresses = relation(\"Address\", backref=\"user\")\n    >>> class Address(Base):\n    ...     __tablename__ = 'test_addresses'\n    ...     id = Column('id', Integer, primary_key=True)\n    ...     email = Column('email', String(50))\n    ...     user_id = Column('user_id', Integer, ForeignKey('test_users.id'))\n\nCreate an engine and setup the tables. Note that for this example to work a\nrecent version of sqlite/pysqlite is required. 3.4.0 seems to be sufficient.\n\n    >>> engine = create_engine(TEST_DSN, convert_unicode=True)\n    >>> Base.metadata.create_all(engine)\n\nNow to create the session itself. As zope is a threaded web server we must use\nscoped sessions. Zope and SQLAlchemy sessions are tied together by using the\nZopeTransactionExtension from this package.\n\n    >>> Session = scoped_session(sessionmaker(bind=engine,\n    ... twophase=TEST_TWOPHASE, extension=ZopeTransactionExtension()))\n\nCall the scoped session factory to retrieve a session. You may call this as\nmany times as you like within a transaction and you will always retrieve the\nsame session. At present there are no users in the database.\n\n    >>> session = Session()\n    >>> session.query(User).all()\n    []\n\nWe can now create a new user and commit the changes using Zope's transaction\nmachinery, just as Zope's publisher would.\n\n    >>> session.add(User(id=1, name='bob'))\n    >>> transaction.commit()\n\nEngine level connections are outside the scope of the transaction integration.\n\n    >>> engine.connect().execute('SELECT * FROM test_users').fetchall()\n    [(1, ...'bob')]\n\nA new transaction requires a new session. Let's add an address.\n\n    >>> session = Session()\n    >>> bob = session.query(User).all()[0]\n    >>> str(bob.name)\n    'bob'\n    >>> bob.addresses\n    []\n    >>> bob.addresses.append(Address(id=1, email='bob@bob.bob'))\n    >>> transaction.commit()\n    >>> session = Session()\n    >>> bob = session.query(User).all()[0]\n    >>> bob.addresses\n    [<Address object at ...>]\n    >>> str(bob.addresses[0].email)\n    'bob@bob.bob'\n    >>> bob.addresses[0].email = 'wrong@wrong'\n\nTo rollback a transaction, use transaction.abort().\n\n    >>> transaction.abort()\n    >>> session = Session()\n    >>> bob = session.query(User).all()[0]\n    >>> str(bob.addresses[0].email)\n    'bob@bob.bob'\n    >>> transaction.abort()\n\nBy default, zope.sqlalchemy puts sessions in an 'active' state when they are\nfirst used. ORM write operations automatically move the session into a\n'changed' state. This avoids unnecessary database commits. Sometimes it\nis necessary to interact with the database directly through SQL. It is not\npossible to guess whether such an operation is a read or a write. Therefore we\nmust manually mark the session as changed when manual SQL statements write\nto the DB.\n\n    >>> session = Session()\n    >>> conn = session.connection()\n    >>> users = Base.metadata.tables['test_users']\n    >>> conn.execute(users.update(users.c.name=='bob'), name='ben')\n    <sqlalchemy.engine...ResultProxy object at ...>\n    >>> from zope.sqlalchemy import mark_changed\n    >>> mark_changed(session)\n    >>> transaction.commit()\n    >>> session = Session()\n    >>> str(session.query(User).all()[0].name)\n    'ben'\n    >>> transaction.abort()\n\nIf this is a problem you may tell the extension to place the session in the\n'changed' state initially.\n\n    >>> Session.remove()\n    >>> Session.configure(extension=ZopeTransactionExtension('changed'))\n    >>> session = Session()\n    >>> conn = session.connection()\n    >>> conn.execute(users.update(users.c.name=='ben'), name='bob')\n    <sqlalchemy.engine...ResultProxy object at ...>\n    >>> transaction.commit()\n    >>> session = Session()\n    >>> str(session.query(User).all()[0].name)\n    'bob'\n    >>> transaction.abort()\n\nLong-lasting session scopes\n---------------------------\n\nThe default behaviour of the transaction integration is to close the session\nafter a commit. You can tell by trying to access an object after committing:\n\n    >>> bob = session.query(User).all()[0]\n    >>> transaction.commit()\n    >>> bob.name\n    Traceback (most recent call last):\n    DetachedInstanceError: Instance <User at ...> is not bound to a Session; attribute refresh operation cannot proceed\n\nTo support cases where a session needs to last longer than a transaction\n(useful in test suites) you can specify to keep a session when creating the\ntransaction extension:\n\n    >>> Session = scoped_session(sessionmaker(bind=engine,\n    ... twophase=TEST_TWOPHASE, extension=ZopeTransactionExtension(keep_session=True)))\n\n    >>> session = Session()\n    >>> bob = session.query(User).all()[0]\n    >>> bob.name = 'bobby'\n    >>> transaction.commit()\n    >>> bob.name\n    u'bobby'\n\nThe session must then be closed manually:\n\n    >>> session.close()\n\nRegistration Using SQLAlchemy Events\n====================================\n\nThe zope.sqlalchemy.register() function performs the same function as the\nZopeTransactionExtension, except makes use of the newer SQLAlchemy event system\nwhich superseded the extension system as of SQLAlchemy 0.7.   Usage is similar:\n\n    >>> from zope.sqlalchemy import register\n    >>> Session = scoped_session(sessionmaker(bind=engine,\n    ... twophase=TEST_TWOPHASE))\n    >>> register(Session, keep_session=True)\n    >>> session = Session()\n    >>> jack = User(id=2, name='jack')\n    >>> session.add(jack)\n    >>> transaction.commit()\n    >>> engine.execute(\"select name from test_users where id=2\").scalar()\n    u'jack'\n\n\nDevelopment version\n===================\n\n`SVN version <svn://svn.zope.org/repos/main/zope.sqlalchemy/trunk#egg=zope.sqlalchemy-dev>`_\n\n\n\nChanges\n=======\n\n0.7.7 (2016-06-23)\n------------------\n\n* Support SQLAlchemy 1.1.\n\n  See: https://github.com/zopefoundation/zope.sqlalchemy/issues/15\n\n0.7.6 (2015-03-20)\n------------------\n\n* Make version check in register compatible with prereleases.\n\n0.7.5 (2014-06-17)\n------------------\n\n* Ensure mapped objects are expired following a ``transaction.commit()`` when\n  no database commit was required.\n\n  See: https://github.com/zopefoundation/zope.sqlalchemy/issues/8\n\n0.7.4 (2014-01-06)\n------------------\n\n* Allow ``session.commit()`` on nested transactions to facilitate integration\n  of existing code that might not use ``transaction.savepoint()``.\n\n  See: https://github.com/zopefoundation/zope.sqlalchemy/issues/1\n\n* Add a new function zope.sqlalchemy.register(), which replaces the\n  direct use of ZopeTransactionExtension to make use\n  of the newer SQLAlchemy event system to establish instrumentation on\n  the given Session instance/class/factory.   Requires at least\n  SQLAlchemy 0.7.\n\n  See: https://github.com/zopefoundation/zope.sqlalchemy/issues/4\n\n* Fix `keep_session=True` doesn't work when a transaction is joined by flush\n  and other manngers bug.\n\n  See: https://github.com/zopefoundation/zope.sqlalchemy/issues/5\n\n\n0.7.3 (2013-09-25)\n------------------\n\n* Prevent the ``Session`` object from getting into a \"wedged\" state if joining\n  a transaction fails. With thread scoped sessions that are reused this can cause\n  persistent errors requiring a server restart.\n\n  See: https://github.com/zopefoundation/zope.sqlalchemy/issues/2\n\n0.7.2 (2013-02-19)\n------------------\n\n* Make life-time of sessions configurable. Specify `keep_session=True` when\n  setting up the SA extension.\n\n* Python 3.3 compatibility.\n\n0.7.1 (2012-05-19)\n------------------\n\n* Use ``@implementer`` as a class decorator instead of ``implements()`` at\n  class scope for compatibility with ``zope.interface`` 4.0.  This requires\n  ``zope.interface`` >= 3.6.0.\n\n0.7 (2011-12-06)\n----------------\n\n* Python 3.2 compatibility.\n\n0.6.1 (2011-01-08)\n------------------\n\n* Update datamanager.mark_changed to handle sessions which have not yet logged\n  a (ORM) query.\n\n\n0.6 (2010-07-24)\n----------------\n\n* Implement should_retry for sqlalchemy.orm.exc.ConcurrentModificationError\n  and serialization errors from PostgreSQL and Oracle.\n  (Specify transaction>=1.1 to use this functionality.)\n\n* Include license files.\n\n* Add ``transaction_manager`` attribute to data managers for compliance with\n  IDataManager interface.\n\n0.5 (2010-06-07)\n----------------\n\n* Remove redundant session.flush() / session.clear() on savepoint operations.\n  These were only needed with SQLAlchemy 0.4.x.\n\n* SQLAlchemy 0.6.x support. Require SQLAlchemy >= 0.5.1.\n\n* Add support for running ``python setup.py test``.\n\n* Pull in pysqlite explicitly as a test dependency.\n\n* Setup sqlalchemy mappers in test setup and clear them in tear down. This\n  makes the tests more robust and clears up the global state after. It\n  caused the tests to fail when other tests in the same run called\n  clear_mappers.\n\n0.4 (2009-01-20)\n----------------\n\nBugs fixed:\n\n* Only raise errors in tpc_abort if we have committed.\n\n* Remove the session id from the SESSION_STATE just before we de-reference the\n  session (i.e. all work is already successfuly completed). This fixes cases\n  where the transaction commit failed but SESSION_STATE was already cleared.  In\n  those cases, the transaction was wedeged as abort would always error.  This\n  happened on PostgreSQL where invalid SQL was used and the error caught.\n\n* Call session.flush() unconditionally in tpc_begin.\n\n* Change error message on session.commit() to be friendlier to non zope users.\n\nFeature changes:\n\n* Support for bulk update and delete with SQLAlchemy 0.5.1\n\n0.3 (2008-07-29)\n----------------\n\nBugs fixed:\n\n* New objects added to a session did not cause a transaction join, so were not\n  committed at the end of the transaction unless the database was accessed.\n  SQLAlchemy 0.4.7 or 0.5beta3 now required.\n\nFeature changes:\n\n* For correctness and consistency with ZODB, renamed the function 'invalidate'\n  to 'mark_changed' and the status 'invalidated' to 'changed'.\n\n0.2 (2008-06-28)\n----------------\n\nFeature changes:\n\n* Updated to support SQLAlchemy 0.5. (0.4.6 is still supported).\n\n0.1 (2008-05-15)\n----------------\n\n* Initial public release.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://pypi.python.org/pypi/zope.sqlalchemy",
    "keywords": "zope zope3 sqlalchemy",
    "license": "ZPL 2.1",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zope.sqlalchemy",
    "platform": "",
    "project_url": "https://pypi.org/project/zope.sqlalchemy/",
    "release_url": "https://pypi.org/project/zope.sqlalchemy/0.7.7/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Minimal Zope/SQLAlchemy transaction integration",
    "version": "0.7.7"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "365f8072798b3ce6f647b195e04f1b87",
          "sha256": "5ba801199deb91f12abe2b4a7f87e0a1d9710c1e5c37e7be36dd241b8f7c218c"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.1-py2.4.egg",
        "has_sig": false,
        "md5_digest": "365f8072798b3ce6f647b195e04f1b87",
        "packagetype": "bdist_egg",
        "python_version": "2.4",
        "size": 21453,
        "upload_time": "2008-05-15T12:54:51",
        "url": "https://files.pythonhosted.org/packages/cc/03/4441849bfaa31a9910f5f3a61a50d680598f1be329b160b7d78f5cfe55b8/zope.sqlalchemy-0.1-py2.4.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "fa6a82602dc5f6cef1d5cb492eb764ca",
          "sha256": "5fcb160b7009bddeaad02dda090d4d11db53fdb790de2cc0fa1e0c9b2e34f0b2"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.1-py2.5.egg",
        "has_sig": false,
        "md5_digest": "fa6a82602dc5f6cef1d5cb492eb764ca",
        "packagetype": "bdist_egg",
        "python_version": "2.5",
        "size": 21284,
        "upload_time": "2008-05-15T12:54:41",
        "url": "https://files.pythonhosted.org/packages/ce/2c/9a8cdcf62a2873a5ffe62727a1c76a4e1ef053426adb45869f527c9d90d3/zope.sqlalchemy-0.1-py2.5.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "417b56b931139e69ae084659674c6b9d",
          "sha256": "1098f49ab8a5aab453f252984eb492519fa1f595244f1a29d5d70cadffedac5c"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "417b56b931139e69ae084659674c6b9d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10319,
        "upload_time": "2008-05-15T12:54:40",
        "url": "https://files.pythonhosted.org/packages/f4/c0/2d9b30581da2f21043ee4a76074901eec3831cfb300b1e3d9b3ccc23318c/zope.sqlalchemy-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c60d018714e5bc64cb8ed140a5df90e8",
          "sha256": "6b2102e281e7c0c81bc7f4e670cf11ce2e32c9dcf00c2d9668741dbd7d74a5bd"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c60d018714e5bc64cb8ed140a5df90e8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11357,
        "upload_time": "2008-06-28T14:36:34",
        "url": "https://files.pythonhosted.org/packages/44/f3/8eb8761bcf2552db5b415d822180141fb8aa25f2d0a4d204f695458e7111/zope.sqlalchemy-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3edc2b0f02e778483de64b60ff214df9",
          "sha256": "b994d783ef03e36afcbc98ab4cc4939f4b6555fd47a3b5860de9637537c700ea"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3edc2b0f02e778483de64b60ff214df9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12622,
        "upload_time": "2008-07-29T09:46:11",
        "url": "https://files.pythonhosted.org/packages/45/2c/38b9663192bf7625ce53ac604f9df313d49f07587b0c7b03f0f2f782c1bc/zope.sqlalchemy-0.3.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "245885dc0923fa36216386867cf450ae",
          "sha256": "96fa5dd6e262f52904ee8431bf9d57c27f3dc63581a02d233f2ae4cda202ed1d"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "245885dc0923fa36216386867cf450ae",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13136,
        "upload_time": "2009-01-21T10:55:17",
        "url": "https://files.pythonhosted.org/packages/83/b9/538d3c753829ad354a8b4f964279a166045ed933a0ca33366941ed77ea6a/zope.sqlalchemy-0.4.tar.gz"
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "76e048e7854c4fef38d222124f1c8de6",
          "sha256": "48d31b536cb496f48fc69ed73eb9cff7529d35e67d70e444d7df6cf6942c95df"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "76e048e7854c4fef38d222124f1c8de6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12810,
        "upload_time": "2010-06-07T18:04:17",
        "url": "https://files.pythonhosted.org/packages/6e/3b/ea873de36a64e7a7651eabc4e8623033237dd485f18a5fa96ebf90b6abe6/zope.sqlalchemy-0.5.tar.gz"
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5c0527e00b4b3a7843c25cf5bc52237f",
          "sha256": "c2f75ede919c179ffb88ee71a98540fa0c762b147c23161dd51369afe139c0a0"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "5c0527e00b4b3a7843c25cf5bc52237f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14997,
        "upload_time": "2010-07-24T18:28:37",
        "url": "https://files.pythonhosted.org/packages/1d/b5/50014eb8f838c0c913d02dc1c4267b67d80d26fd77f5d972ce39679c6fe4/zope.sqlalchemy-0.6.tar.gz"
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "581205d24a7c87d1e8fa627a32a49bad",
          "sha256": "2682d47bf628689c3fd29494b9a66567013e9b71577022498250fef99a9b5900"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "581205d24a7c87d1e8fa627a32a49bad",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15254,
        "upload_time": "2011-01-08T18:11:11",
        "url": "https://files.pythonhosted.org/packages/7a/62/e12a62e6e1e6453f638314ea70c154ae83914d0030746591d7acd21b41cf/zope.sqlalchemy-0.6.1.tar.gz"
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dcfed33a03ea009501f4505802ab8d01",
          "sha256": "893f8a1bc2f4f74f8dce33ba93eb361f067244bff93b16419d4d9df35e248d83"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "dcfed33a03ea009501f4505802ab8d01",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20882,
        "upload_time": "2011-12-06T21:19:50",
        "url": "https://files.pythonhosted.org/packages/3d/58/5cf008ed435add33c4dfd64d24448b089a5a3885ee124ffec695338aacff/zope.sqlalchemy-0.7.tar.gz"
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6b36c571b6966189c9428007cbc024e3",
          "sha256": "0d7a6da803f468d489dd532d575e14861377809dbc8be58cac6376f0320dfa51"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6b36c571b6966189c9428007cbc024e3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21448,
        "upload_time": "2012-05-19T14:55:13",
        "url": "https://files.pythonhosted.org/packages/57/56/afcc016e57a558b185085f4e4b434c1c40fd7d1db26c47162318dca1b718/zope.sqlalchemy-0.7.1.tar.gz"
      }
    ],
    "0.7.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b654e5d144ed141e13b42591a21a4868",
          "sha256": "6fd08af2158a9fae7c2d4e1d389c49f2c747f0a1dd80a15eaab207702494eceb"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.7.2.zip",
        "has_sig": false,
        "md5_digest": "b654e5d144ed141e13b42591a21a4868",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30742,
        "upload_time": "2013-02-19T23:18:09",
        "url": "https://files.pythonhosted.org/packages/92/31/86a1d37ed2fbe749ded8aafe0ae928c2777940ae06a5240e6d0af8b66da9/zope.sqlalchemy-0.7.2.zip"
      }
    ],
    "0.7.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8b317b41244fc2e67f2f286890ba59a0",
          "sha256": "3878ad6b7ef236e2ab2b6a8c0300ab9ca704b2a1f28f2d2c6accda73e996d7b6"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.7.3.zip",
        "has_sig": false,
        "md5_digest": "8b317b41244fc2e67f2f286890ba59a0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 33877,
        "upload_time": "2013-09-25T20:40:05",
        "url": "https://files.pythonhosted.org/packages/d8/ca/33be5640a71fcce873564679967556ccb8e8c55c08a6aa51863c48033325/zope.sqlalchemy-0.7.3.zip"
      }
    ],
    "0.7.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "87758437ec5584a14ed801233b2f348f",
          "sha256": "79a22a53d24a8a10a22b0f5c448ce97dd3c94d74bdaf540ebcd67b449567c51d"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.7.4.zip",
        "has_sig": false,
        "md5_digest": "87758437ec5584a14ed801233b2f348f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 34663,
        "upload_time": "2014-01-06T23:31:23",
        "url": "https://files.pythonhosted.org/packages/3f/e3/d15799624305564d231a1c5f7d4a7e53437776d29f33468739cfa2864e59/zope.sqlalchemy-0.7.4.zip"
      }
    ],
    "0.7.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0a468bd5b8884cd29fb71acbf7eaa31e",
          "sha256": "e196d1b2cf796f46e2c6127717e359ddd35d8d084a8ba059f0f0fabff245b9e1"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.7.5.zip",
        "has_sig": false,
        "md5_digest": "0a468bd5b8884cd29fb71acbf7eaa31e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 35011,
        "upload_time": "2014-06-18T01:04:43",
        "url": "https://files.pythonhosted.org/packages/da/57/e8554eb4bde5d5670d563bfa041f8f33881486541776253f6c9803a58451/zope.sqlalchemy-0.7.5.zip"
      }
    ],
    "0.7.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0f5bf14679951e59007e090b6922688c",
          "sha256": "52412116ff7c569219dd53ef4eadce9f0ad3e16195aaac867955c3f877bbb06f"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.7.6.zip",
        "has_sig": false,
        "md5_digest": "0f5bf14679951e59007e090b6922688c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 35265,
        "upload_time": "2015-03-20T18:59:13",
        "url": "https://files.pythonhosted.org/packages/d0/e0/5df0d7f9f1955e2e2edecbb1367cf1fa76bc2f84d700661ffd4161c7e2e9/zope.sqlalchemy-0.7.6.zip"
      }
    ],
    "0.7.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4e09a383d1e3585fde5c293892a5e0d2",
          "sha256": "5da8ff6b060f3a47fc0cbc61cfd6a83b959b5e730f95e492edcf7b9bf3ec987a"
        },
        "downloads": -1,
        "filename": "zope.sqlalchemy-0.7.7.tar.gz",
        "has_sig": false,
        "md5_digest": "4e09a383d1e3585fde5c293892a5e0d2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24579,
        "upload_time": "2016-06-23T05:11:44",
        "url": "https://files.pythonhosted.org/packages/14/95/47ef5f5fbf5f18dc95d6d39b7dbd690818b541afa724d14ed176e415b134/zope.sqlalchemy-0.7.7.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4e09a383d1e3585fde5c293892a5e0d2",
        "sha256": "5da8ff6b060f3a47fc0cbc61cfd6a83b959b5e730f95e492edcf7b9bf3ec987a"
      },
      "downloads": -1,
      "filename": "zope.sqlalchemy-0.7.7.tar.gz",
      "has_sig": false,
      "md5_digest": "4e09a383d1e3585fde5c293892a5e0d2",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 24579,
      "upload_time": "2016-06-23T05:11:44",
      "url": "https://files.pythonhosted.org/packages/14/95/47ef5f5fbf5f18dc95d6d39b7dbd690818b541afa724d14ed176e415b134/zope.sqlalchemy-0.7.7.tar.gz"
    }
  ]
}