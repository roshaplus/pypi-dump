{
  "info": {
    "author": "J. C. Hsu, Paul Barrett, Christopher Hanley, James Taylor,\nMichael Droettboom, Erik M. Bray",
    "author_email": "help@stsci.edu",
    "bugtrack_url": "",
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Astronomy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Documentation\n===============\nSee the Users Guide and API documentation hosted at\nhttp://pythonhosted.org/pyfits.\n\nImportant notice regarding the future of PyFITS\n===============================================\n\nAll of the functionality of PyFITS is now available in `Astropy\n<http://www.astropy.org>`_ as the `astropy.io.fits\n<http://docs.astropy.org/en/stable/io/fits/index.html>`_ package, which is now\npublicly available. Although we will continue to release PyFITS separately in\nthe short term, including any critical bug fixes, we will eventually stop\nreleasing new versions of PyFITS as a stand-alone product. The exact timing of\nwhen we will discontinue new PyFITS releases is not yet settled, but users\nshould not expect PyFITS releases to extend much past early 2014. Users of\nPyFITS should plan to make suitable changes to support the transition to\nAstropy on such a timescale. For the vast majority of users this transition is\nmainly a matter of changing the import statements in their code--all APIs are\notherwise identical to PyFITS.  STScI will continue to provide support for\nquestions related to PyFITS and to the new ``astropy.io.fits package`` in\nAstropy.\n\nDevelopment\n=============\nPyFITS is now on GitHub at:\nhttps://github.com/spacetelescope/PyFITS\n\nTo report an issue in PyFITS, please create an account on GitHub and submit\nthe issue there, or send an e-mail to help@stsci.edu.  Before submitting an\nissue please search the existing issues for similar problems.  Before asking\nfor help, please check the PyFITS FAQ for answers to your questions:\nhttp://pythonhosted.org/pyfits/appendix/faq.html\n\nThe latest source code can be checked out from git with::\n\n  git clone https://github.com/spacetelescope/PyFITS.git\n\nAn SVN mirror is still maintained as well::\n\n  svn checkout https://aeon.stsci.edu/ssb/svn/pyfits/trunk\n\nFor Packagers\n===============\nAs of version 3.2.0 PyFITS supports use of the standard CFITSIO library for\ncompression support.  A minimal copy of CFITSIO is included in the PyFITS\nsource under cextern/cfitsio.  Packagers wishing to link with an existing\nsystem CFITSIO remove this directory and modify the setup.cfg as instructed\nby the comments in that file.  CFITSIO support has been tested for versions\n3.08 through 3.30.  The earliers known fully working version is 3.09.  Version\n3.08 mostly works except for a bug in CFITSIO itself when decompressing some\nimages with BITPIX=-64.  Earlier versions *may* work but YMMV.  Please send in\nany results of experimentation with other CFITSIO versions.\n\nChangelog\n===========\n\n3.4 (2016-01-28)\n----------------\n\nThis release removes support for Python 2.5, as well as Python 3.0 - 3.2.\nSupported Python versions are now Python 2.6, 2.7, and 3.3+.  This\nrelease incorporates new features and bug fixes made in the\n``astropy.io.fits`` module in Astropy, which is originally based on PyFITS\nand supersedes the stand-alone PyFITS module.\n\nThis will likely be the last stand-alone release of PyFITS that does not\ndepend on Astropy.  There are a few reasons for this:\n\n1) Development resources for PyFITS are limited, and better focused on\n   newer projects.\n\n2) Astropy incorporates all features of PyFITS, and has many new features\n   from which future development of the FITS reader/writer can benefit, such\n   as a better table interface, units, and datetime types.  Since the most\n   beneficial future development in ``astropy.io.fits`` depends on other\n   parts of Astropy there is less motivation to maintain an independent FITS\n   module.\n\nThis release contains most changes to the ``astropy.io.fits`` module that\nhave been made since the last release of PyFITS (v3.3), except for changes\nthat depend explicitly on other parts of Astropy.  This brings PyFITS mostly\nto parity with the version of ``astropy.io.fits`` that will be in Astropy\nv1.1.2.\n\nAlthough an exhaustive list of changes is difficult, some of the highlights\nare below:\n\nNew Features\n^^^^^^^^^^^^\n\n- Included a new command-line script called fitsheader to display the\n  header(s) of a FITS file from the command line. (astropy/astropy#2092)\n\n- Added support for a ``savecomment`` argument in the ``Header.set`` method,\n  equivalent to the argument of the same name to the old ``Header.update``\n  method. (Note: This change was never ported to Astropy due to lack of\n  demand.)\n\n- The ``fitsdiff`` script ignores some things by default when comparing fits\n  files (e.g. empty header lines). This adds a ``--exact`` option where\n  nothing is ignored. [#2782, #3110]\n\n- ``Section`` now supports all advanced indexing features ``ndarray`` does\n  (slices with any steps, integer arrays, boolean arrays, None, Ellipsis).\n  It also properly returns scalars when this is appropriate.\n  (astropy/astropy#3148)\n\n- Support reading and writing from bzip2 compressed files. i.e.\n  ``.fits.bz2`` files. (astropy/astropy#3789)\n\nAPI Changes\n^^^^^^^^^^^\n\n- Overwriting an existing file using the ``clobber=True`` option no longer\n  displays a warning message. (astropy/astropy#1963)\n\n- ``pyfits.open`` no longer catches ``OSError`` exceptions on missing or\n  unreadable files-- instead it raises the standard Python exceptions in\n  such cases. (astropy/astropy#2756)\n\n- The ``uint`` argument to ``pyfits.open`` is now True by default; that is,\n  arrays using the FITS unsigned integer convention will be detected, and\n  read as unsigned integers by default.  A new config option for ``pyfits``,\n  ``ENABLE_UINT``, can be changed to False to revert to the original\n  behavior of ignoring the ``uint`` convention unless it is explicitly\n  requested with ``uint=True``. (astropy/astropy#3916)\n\n- The ``ImageHDU.NumCode`` and ``ImageHDU.ImgCode`` attributes (and same for\n  other classes derived from ``_ImageBaseHDU``) are deprecated.  Instead,\n  the ``pyfits`` module-level constants ``BITPIX2DTYPE`` and\n  ``DTYPE2BITPIX`` can be used. (astropy/astropy#3916)\n\nBug Fixes\n^^^^^^^^^\n\n- Fixes for checksums on 32-bit platforms. Results may be different if\n  writing or checking checksums in \"nonstandard\" mode.\n  (astropy/astropy#2484)\n\n- Fixed a crash when reading scaled float data out of a FITS file that was\n  loaded from a string (using ``HDUList.fromfile``) rather than from a file.\n  (astropy/astropy#2710)\n\n- Fixed a crash when reading data from an HDU whose header contained in\n  invalid value for the BLANK keyword (e.g., a string value instead of an\n  integer as required by the FITS Standard). Invalid BLANK keywords are now\n  warned about, but are otherwise ignored. (astropy/astropy#2711)\n\n- Fixed a crash when reading the header of a tile-compressed HDU if that\n  header contained invalid duplicate keywords resulting in a ``KeyError``\n  (astropy/astropy#2750)\n\n- Fixed corruption when writing new FITS files through to gzipped files.\n  (astropy/astropy#2794)\n\n- Fixed crash when writing HDUs made with non-contiguous data arrays to\n  file-like objects. (astropy/astropy#2794)\n\n- It is now possible to create ``pyfits.BinTableHDU`` objects with a table\n  with zero rows. (astropy/astropy#2916)\n\n- The ``in`` operator now works correctly for checking if an extension is in\n  an ``HDUList`` (as given via EXTNAME, (EXTNAME, EXTVER) tuples, etc.)\n  (astropy/astropy#3060)\n\n- Added workaround for bug in MacOS X <= 10.8 that caused np.fromfile to\n  fail. (astropy/astropy#3078)\n\n- Added support for the ``RICE_ONE`` compression type synonym.\n  (astropy/astropy#3115)\n\n- Fixed the problem in ``pyfits.open`` of some filenames with colon (``:``)\n  in the name being recognized as URLs instead of file names.\n  (astropy/astropy#3122)\n\n- Setting ``memmap=True`` in ``fits.open`` and related functions now raises\n  a ValueError if opening a file in memory-mapped mode is impossible.\n  (astropy/astropy#2298)\n\n- CONTINUE cards no longer end the value of the final card in the series\n  with an ampersand, per the specification of the CONTINUE card convention.\n  (astropy/astropy#3282)\n\n- Fixed a crash that occurred when reading an ASCII table containing\n  zero-precision floating point fields. (astropy/astropy#3422)\n\n- When a float field for an ASCII table has zero-precision a decimal point\n  (with no digits following it) is still written to the field as long as\n  there is space for it, as recommended by the FITS standard.  This makes it\n  less ambiguous that these columns should be interpreted as floats.\n  (astropy/astropy#3422)\n\n- Fixed a severe memory leak that occurred when reading tile compressed\n  images. (astropy/astropy#3680)\n\n- Fixed bug where column data could be unintentionally byte-swapped when\n  copying data from an existing FITS file to a new FITS table with a TDIMn\n  keyword for that column. (astropy/astropy#3561)\n\n- The ``ColDefs.change_attrib``, ``ColDefs.change_name``, and\n  ``ColDefs.change_unit`` methods now work as advertised.  It is also\n  possible (and preferable) to update attributes directly on ``Column``\n  objects (for example setting ``column.name``), and the change will be\n  accurately reflected in any associated table data and its FITS header.\n  (astropy/astropy#3283)\n\n- Fixes an issue with the ``FITS_rec`` interface to FITS table data, where a\n  ``FITS_rec`` created by copying an existing FITS table but adding new rows\n  could not be sliced or masked correctly.  (astropy/astropy#3641)\n\n- Fixed handling of BINTABLE with TDIMn of size 1. (astropy/astropy#3580)\n\n- Fixes to support Numpy 1.10. (astropy/astropy#3419)\n\n- Fixed crash when updating data in a random groups HDU opened in update\n  mode. (astropy/astropy#3730)\n\n- Fixed incorrect checksum / datasum being written when re-writing a scaled\n  HDU (i.e. non-trivial BSCALE and/or BZERO) with\n  ``do_not_scale_image_data=False``. (astropy/astropy#3883)\n\n- Fixed stray deprecation warning in ``BinTableHDU.copy()``. (astropy/astropy#3789)\n\n- Better handling of the ``BLANK`` keyword when auto-scaling scaled image\n  data.  The ``BLANK`` keyword is now removed from the header after\n  auto-scaling is applied, and it is restored properly (with floating point\n  NaNs replaced by the filler value) when updating a file opened with the\n  ``scale_back=True`` argument.  Invalid usage of the ``BLANK`` keyword is\n  also better warned about during validation. (astropy/astropy#3865)\n\n- Reading memmaped scaled images won't fail when\n  ``do_not_scale_image_data=True`` (that is, since we're just reading the\n  raw / physical data there is no reason mmap can't be used).\n  (astropy/astropy#3766)\n\n- Fixed a reference cycle that could sometimes cause FITS table-related\n  objects (``BinTableHDU``, ``ColDefs``, etc.) to hang around in memory\n  longer than expected. (astropy/astropy#4012)\n\n- Fix bug when extending one header (without comments) with another (with\n  comments). (astropy/astropy#3967)\n\n- Somewhat improved resource usage for FITS data--previously a new ``mmap``\n  was opened for each HDU of a FITS file accessed through an ``HDUList``.\n  Each ``mmap`` used up a single file descriptor, causing problems with\n  system resource limits for some users.  Now only a single ``mmap`` is\n  opened, and shared for the data of all HDUs.  Note: The problem still\n  persists with using the \"convenience\" functions.  For example using\n  ``fits.getdata`` will create one ``mmap`` per HDU read this way (as\n  opposed to opening the file with ``fits.open`` and accessing the HDUs\n  through the ``HDUList`` object). (astropy/astropy#4097)\n\n- Fix bug where reading a file without a newline failed with an unrelated /\n  unhelpful exception. (astropy/astropy#4160)\n\n- ``fitsdiff`` and related functions now do a better job reporting\n  differences between values that are different types but have the same\n  representation (ex: the string '0' versus the number 0).\n  (astropy/astropy#4122)\n\n- Miscellaneous fixes for supporting Numpy 1.10. (astropy/astropy#4228)\n\n- Fixed an issue where writing a column of unicode strings to a FITS table\n  resulted in a quadrupling of size of the column (i.e. the format of the\n  FITS column was 4 characters for every one in the original strings).\n  (astropy/astropy#4228)\n\n- Added support for an obscure case (but nonetheless allowed by the FITS\n  standard) where a column has some TDIMn keyword, but a repeat count in the\n  TFORMn column greater than the number of elements implied by the TDIMn.\n  For example TFORMn = 100I, but TDIMn = '(5,5)'.  In this case the TDIMn\n  implies 5x5 arrays in the column, but the TFORMn implies a 100 element 1-D\n  array in the column.  In this case the TDIM takes precedence, and the\n  remaining bytes in the column are ignored. (astropy/astropy#4228)\n\n- Fixed a regression that could cause writes of large FITS files to be\n  truncated. (astropy/astropy#4307)\n\n- Fixed possible segfault during error handling in FITS tile compression.\n  (astropy/astropy#4489)\n\n- Fixed crash on pickling of binary table columns with the 'X', 'P', or\n  'Q' format. (astropy/astropy#4514)\n\n- Fixed memory / reference leak that could occur when copying a ``FITS_rec``\n  object (the ``.data`` for table HDUs). (astropy/astropy#520)\n\n- Fixed a memory / reference leak in ``FITS_rec`` that occurred in a wide\n  range of cases, especially after writing FITS tables to a file, but in\n  other cases as well. (astropy/astropy#4539)\n\n\n3.3 (2014-07-17)\n----------------\n\nNew Features\n^^^^^^^^^^^^\n\n- Added new verification options ``fix+ignore``, ``fix+warn``,\n  ``fix+exception``, ``silentfix+ignore``, ``silentfix+warn``, and\n  ``silentfix+exception`` which give more control over how to report fixable\n  errors as opposed to unfixable errors.  See the \"Verification\" section in\n  the PyFITS documentation for more details.\n\nAPI Changes\n^^^^^^^^^^^\n\n- The ``pyfits.new_table`` function is now fully deprecated (though will not\n  be removed for a long time, considering how widely it is used).\n\n  Instead please use the more explicit ``pyfits.BinTableHDU.from_columns`` to\n  create a new binary table HDU, and the similar\n  ``pyfits.TableHDU.from_columns`` to create a new ASCII table.  These\n  otherwise accept the same arguments as ``pyfits.new_table`` which is now\n  just a wrapper for these.\n\n- The ``.fromstring`` classmethod of each HDU type has been simplified such\n  that, true to its namesake, it only initializes an HDU from a string\n  containing its header *and* data. (spacetelescope/PyFITS#64)\n\n- Fixed an issue where header wildcard matching (for example\n  ``header['DATE*']``) can be used to match *any* characters that might appear\n  in a keyword.  Previously this only matched keywords containing characters\n  in the set ``[0-9A-Za-z_]``.  Now this can also match a hyphen ``-`` and any\n  other characters, as some conventions like ``HIERARCH`` and record-valued\n  keyword cards allow a wider range of valid characters than standard FITS\n  keywords.\n\n- This will be the *last* release to support the following APIs that have been\n  marked deprecated since PyFITS v3.1:\n\n  - The ``CardList`` class, which was part of the old header implementation.\n\n  - The ``Card.key`` attribute.  Use ``Card.keyword`` instead.\n\n  - The ``Card.cardimage`` and ``Card.ascardimage`` attributes.  Use simply\n    ``Card.image`` or ``str(card)`` instead.\n\n  - The ``create_card`` factory function.  Simply use the normal ``Card``\n    constructor instead.\n\n  - The ``create_card_from_string`` factory function.  Use ``Card.fromstring``\n    instead.\n\n  - The ``upper_key`` function.  Use ``Card.normalize_keyword`` method instead\n    (this is not unlikely to be used outside of PyFITS itself, but it was\n    technically public API).\n\n  - The usage of ``Header.update`` with ``Header.update(keyword, value,\n    comment)`` arguments.  ``Header.update`` should only be used analogously\n    to ``dict.update``.  Use ``Header.set`` instead.\n\n  - The ``Header.ascard`` attribute.  Use ``Header.cards`` instead for a list\n    of all the ``Card`` objects in the header.\n\n  - The ``Header.rename_key`` method.  Use ``Header.rename_keyword`` instead.\n\n  - The ``Header.get_history`` method.  Use ``header['HISTORY']`` instead\n    (normal keyword lookup).\n\n  - The ``Header.get_comment`` method.  Use ``header['COMMENT']`` instead.\n\n  - The ``Header.toTxtFile`` method.  Use ``header.totextfile`` instead.\n\n  - The ``Header.fromTxtFile`` method.  Use ``Header.fromtextfile`` instead.\n\n  - The ``pyfits.tdump`` and ``tcreate`` functions.  Use ``pyfits.tabledump``\n    and ``pyfits.tableload`` respectively.\n\n  - The ``BinTableHDU.tdump`` and ``tcreate`` methods.  Use\n    ``BinTableHDU.dump`` and ``BinTableHDU.load`` respectively.\n\n  - The ``txtfile`` argument to the ``Header`` constructor.  Use\n    ``Header.fromfile`` instead.\n\n  - The ``startColumn`` and ``endColumn`` arguments to the ``FITS_record``\n    constructor.  These are unlikely to be used by any user code.\n\n  These deprecated interfaces will be removed from the development version of\n  PyFITS following the v3.3 release (they will still be available in any\n  v3.3.x bugfix releases, however).\n\nOther Changes and Additions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- PyFITS has switched to a unified code base which supports Python 2.5 through\n  3.4 simultaneously without translation.  This *shouldn't* have any\n  significant performance impacts, but please report if anything seems\n  noticeably slower.  As a reminder, support for Python 2.5 will be ended\n  after PyFITS 3.3.x.\n\n- Warnings for deprecated APIs in PyFITS are now always displayed by default.\n  This is in line with a similar change made recently to Astropy:\n  https://github.com/astropy/astropy/pull/1871\n  To disable PyFITS deprecation warnings in scripts one may call\n  ``pyfits.ignore_deprecation_warnings()`` after importing PyFITS.\n\n- ``Card`` objects have a new ``is_blank`` attribute which returns ``True`` if\n  the card represents a blank card (no keyword, value, or comment) and\n  ``False`` otherwise.\n\nBug Fixes\n^^^^^^^^^\n\n- Fixed a regression where it was not possible to save an empty \"compressed\"\n  image to a file (in this case there is nothing to compress, hence the\n  quotes, but trying to do so caused a crash). (spacetelescope/PyFITS#69)\n\n- Fixed a regression that may have been introduced in v3.2.1 with writing\n  compressed image HDUs, particularly compressed images using a non-empty\n  GZIP_COMPRESSED_DATA column. (spacetelescope/#71)\n\n\n3.2.5 (unreleased)\n------------------\n\n- Nothing changed yet.\n\n\n3.1.7 (unreleased)\n------------------\n\n- Nothing changed yet.\n\n\n3.2.4 (2014-06-02)\n------------------\n\n- Fixed a regression where multiple consecutive calls of the ``writeto``\n  method on the same HDU but to different files could lead to corrupt data or\n  crashes on the subsequent calls after the first. (spacetelescope/PyFITS#40)\n\n\n3.2.3 (2014-05-14)\n------------------\n\n- Nominal support for Python 3.4.\n\n- Fixed a bug with using the ``tabledump`` and ``tableload`` functions with\n  tables containing array columns (columns in which each element is an array\n  instead of a single scalar value). (spacetelescope/PyFITS#22)\n\n- Fixed an issue where PyFITS allowed newline characters in header values and\n  comments. (spacetelescope/PyFITS#51)\n\n- Fixed pickling of ``FITS_rec`` (table data) objects.\n  (spacetelescope/PyFITS#53)\n\n- Improved behavior when writing large compressed images on OSX by removing an\n  unnecessary check for platform architecture. (spacetelescope/PyFITS#57)\n\n- Allow reading FITS files from file-like objects that do not have a\n  ``.closed`` attribute (and as such may not even have an \"open\" vs. \"closed\"\n  concept). (spacetelescope/PyFITS#56)\n\n- Fixed duplicate insertion of commentary keywords on compressed image\n  headers. (spacetelescope/PyFITS#58)\n\n- Fixed minor issue with comparison of header commentary card values.\n  (spacetelescope/PyFITS#59)\n\n\n3.1.6 (2014-05-14)\n------------------\n\n- Nominal support for Python 3.4.\n\n- Fixed a bug with using the ``tabledump`` and ``tableload`` functions with\n  tables containing array columns (columns in which each element is an array\n  instead of a single scalar value). (Backported from 3.2.3)\n\n- Fixed an issue where PyFITS allowed newline characters in header values and\n  comments. (Backported from 3.2.3)\n\n- Fixed pickling of ``FITS_rec`` (table data) objects.\n  (Backported from 3.2.3)\n\n- Improved behavior when writing large compressed images on OSX by removing an\n  unnecessary check for platform architecture. (Backported from 3.2.3)\n\n- Allow reading FITS files from file-like objects that do not have a\n  ``.closed`` attribute (and as such may not even have an \"open\" vs. \"closed\"\n  concept). (Backported from 3.2.3)\n\n- Fixed minor issue with comparison of header commentary card values.\n  (Backported from 3.2.3)\n\n\n3.2.2 (2014-03-25)\n------------------\n\n- Fixed a regression on deletion of record-valued keyword cards using\n  the Header wildcard syntax.  This was intended to be fixed before the\n  v3.2.1 release.\n\n\n3.1.5 (2014-03-25)\n------------------\n\n- Fixed a regression on deletion of record-valued keyword cards using\n  the Header wildcard syntax.  This was intended to be fixed before the\n  v3.1.4 release.\n\n\n3.2.1 (2014-03-04)\n------------------\n\n- Nominal support for the upcoming Python 3.4.\n\n- Added missing features from the ``Header.insert()`` method that were\n  intended for inclusion in the original 3.1 release:  In addition to\n  accepting an integer index as the first argument, it also supports supplying\n  a keyword name as the first argument for insertion relative to a specific\n  keyword.  It also now supports an optional ``after`` argument.  If\n  ``after=True`` the insertion is made below the insertion point instead\n  of above it. (spacetelescope/PyFITS#12)\n\n- Fixed support for broadcasting of values assigned to table columns.\n  (spacetelescope/PyFITS#48)\n\n- A grab bag of minor performance improvements in headers.\n  (spacetelescope/PyFITS#46)\n\n- Fix an unrelated error that occurred when instantiating a ``ColDefs`` object\n  with invalid input.\n\n- Fixed an issue where opening an image containing pseudo-unsigned integers\n  and immediately writing it to a new file using the ``writeto`` method would\n  drop the scale factors that identified the data as unsigned.\n\n- Fixed a bug where writing a file with ``checksum=True`` did not add the\n  checksum on new files. (spacetelescope/PyFITS#8)\n\n- Fixed an issue where validating an HDU's checksums removed the checksum from\n  that HDU's header entirely (even if it was valid.)\n\n- Fixed checksums on compressed images, so that the ``ZHECKSUM`` and\n  ``ZDATASUM`` contain a checksum of the original image HDU, while\n  ``CHECKSUM`` and ``DATASUM`` contain checksums of the compressed image HDU.\n  This feature was supposed to be supported in 3.2, but the support was buggy.\n\n- Fixed an issue where the size of the heap was sometimes not computed\n  properly when writing an existing table containing variable-length array\n  columns to a new FITS file.  This could result in corruption in the new FITS\n  file. (spacetelescope/PyFITS#47)\n\n- Fixed issue with updates to the header of ``CompImageHDU`` objects not being\n  preserved on save. (spacetelescope/PyFITS#23)\n\n- Fixed a bug where a boolean value of ``True`` in a header could not be\n  replaced with the integer 1, and likewise for ``False`` and 0 and vice\n  versa.\n\n- Fixed an issue similar to the above one but for numeric values--now\n  replacing a header value with an equivalent numeric value will up/downcast\n  that value.  For example replacing '0' with '0.0' will write '0.0' to the\n  header so that it is returned as a floating point value.  Likewise a float\n  can be downcast to an integer. (spacetelescope/PyFITS#49)\n\n- A handful of Python 3 compatibility fixes, especially for compatibility\n  with the upcoming Python 3.4.\n\n- Fixed unrelated crash when a header contains an invalid END card (for\n  example \"END = \").  This resulted in a cryptic traceback.  Now headers like\n  this will detect \"clearly intended\" END cards and produce a warning about\n  their invalidity and fix them. (#217)\n\n- Allowed a sequence of ``Column`` objects to be passed in as the main\n  argument to ``FITS_rec.from_columns`` as the documentation suggests should\n  be possible.\n\n- Fixed a display formatting issue with fitsdiff where sometimes it did not\n  show the difference between two floating point numbers if they were the same\n  up to some low number of digits. (spacetelescope/PyFITS#21)\n\n- Fixed an issue where Python 2 sometimes allowed non-ASCII strings to be\n  assigned as header values if they were assigned as old-style ``str`` objects\n  and not ``unicode`` objects. (spacetelescope/PyFITS#37)\n\n\n3.1.4 (2014-03-04)\n------------------\n\n- Added missing features from the ``Header.insert()`` method that were\n  intended for inclusion in the original 3.1 release:  In addition to\n  accepting an integer index as the first argument, it also supports supplying\n  a keyword name as the first argument for insertion relative to a specific\n  keyword.  It also now supports an optional ``after`` argument.  If\n  ``after=True`` the insertion is made below the insertion point instead\n  of above it. (Backported from 3.2.1)\n\n- A grab bag of minor performance improvements in headers.\n  (Backported from 3.2.1)\n\n- Fixed an issue where opening an image containing pseudo-unsigned integers\n  and immediately writing it to a new file using the ``writeto`` method would\n  drop the scale factors that identified the data as unsigned.\n  (Backported from 3.2.1)\n\n- Fixed a bug where writing a file with ``checksum=True`` did not add the\n  checksum on new files. (Backported from 3.2.1)\n\n- Fixed an issue where validating an HDU's checksums removed the checksum from\n  that HDU's header entirely (even if it was valid.)\n  (Backported from 3.2.1)\n\n- Fixed an issue where the size of the heap was sometimes not computed\n  properly when writing an existing table containing variable-length array\n  columns to a new FITS file.  This could result in corruption in the new FITS\n  file. (Backported from 3.2.1)\n\n- Fixed a bug where a boolean value of ``True`` in a header could not be\n  replaced with the integer 1, and likewise for ``False`` and 0 and vice\n  versa. (Backported from 3.2.1)\n\n- Fixed an issue similar to the above one but for numeric values--now\n  replacing a header value with an equivalent numeric value will up/downcast\n  that value.  For example replacing '0' with '0.0' will write '0.0' to the\n  header so that it is returned as a floating point value.  Likewise a float\n  can be downcast to an integer. (Backported from 3.2.1)\n\n- Fixed unrelated crash when a header contains an invalid END card (for\n  example \"END = \").  This resulted in a cryptic traceback.  Now headers like\n  this will detect \"clearly intended\" END cards and produce a warning about\n  their invalidity and fix them. (Backported from 3.2.1)\n\n- Fixed a display formatting issue with fitsdiff where sometimes it did not\n  show the difference between two floating point numbers if they were the same\n  up to some low number of digits. (Backported from 3.2.1)\n\n- Fixed an issue where Python 2 sometimes allowed non-ASCII strings to be\n  assigned as header values if they were assigned as old-style ``str`` objects\n  and not ``unicode`` objects. (Backported from 3.2.1)\n\n\n3.0.13 (2014-03-04)\n-------------------\n\n- Fixed a bug where writing a file with ``checksum=True`` did not add the\n  checksum on new files. (Backported from 3.2.1)\n\n- Fixed an issue where validating an HDU's checksums removed the checksum from\n  that HDU's header entirely (even if it was valid.)\n  (Backported from 3.2.1)\n\n\n3.2 (2013-11-26)\n----------------\n\nHighlights\n^^^^^^^^^^\n\n- Rewrote CFITSIO-based backend for handling tile compression of FITS files.\n  It now uses a standard CFITSIO instead of heavily modified pieces of CFITSIO\n  as before.  PyFITS ships with its own copy of CFITSIO v3.35 which supports\n  the latest version of the Tiled Image Convention (v2.3), but system\n  packagers may choose instead to strip this out in favor of a\n  system-installed version of CFITSIO.  Earlier versions may work, but nothing\n  earlier than 3.28 has been tested yet. (#169)\n\n- Added support for reading and writing tables using the Q format for columns.\n  The Q format is identical to the P format (variable-length arrays) except\n  that it uses 64-bit integers for the data descriptors, allowing more than\n  4 GB of variable-length array data in a single table. (#160)\n\n- Added initial support for table columns containing pseudo-unsigned integers.\n  This is currently enabled by using the ``uint=True`` option when opening\n  files; any table columns with the correct BZERO value will be interpreted\n  and returned as arrays of unsigned integers.\n\n- Some refactoring of the table and ``FITS_rec`` modules in order to better\n  separate the details of the FITS binary and ASCII table data structures from\n  the HDU data structures that encapsulate them.  Most of these changes should\n  not be apparent to users (but see API Changes below).\n\n\nAPI Changes\n^^^^^^^^^^^\n\n- Assigning to values in ``ColDefs.names``, ``ColDefs.formats``,\n  ``ColDefs.nulls`` and other attributes of ``ColDefs`` instances that return\n  lists of column properties is no longer supported.  Assigning to those lists\n  will no longer update the corresponding columns.  Instead, please just\n  modify the ``Column`` instances directly (``Column.name``, ``Column.null``,\n  etc.)\n\n- The ``pyfits.new_table`` function is marked \"pending deprecation\".  This\n  does not mean it will be removed outright or that its functionality has\n  changed.  It will likely be replaced in the future for a function with\n  similar, if not subtly different functionality.  A better, if not slightly\n  more verbose approach is to use ``pyfits.FITS_rec.from_columns`` to create\n  a new ``FITS_rec`` table--this has the same interface as\n  ``pyfits.new_table``.  The difference is that it returns a plan ``FITS_rec``\n  array, and not an HDU instance.  This ``FITS_rec`` object can then be used\n  as the data argument in the constructors for ``BinTableHDU`` (for binary\n  tables) or ``TableHDU`` (for ASCII tables).  This is analogous to creating\n  an ``ImageHDU`` by passing in an image array.\n  ``pyfits.FITS_rec.from_columns`` is just a simpler way of creating a\n  FITS-compatible recarray from a FITS column specification.\n\n- The ``updateHeader``, ``updateHeaderData``, and ``updateCompressedData``\n  methods of the ``CompDataHDU`` class are pending deprecation and moved to\n  internal methods.  The operation of these methods depended too much on\n  internal state to be used safely by users; instead they are invoked\n  automatically in the appropriate places when reading/writing compressed image\n  HDUs.\n\n- The ``CompDataHDU.compData`` attribute is pending deprecation in favor of\n  the clearer and more PEP-8 compatible ``CompDataHDU.compressed_data``.\n\n- The constructor for ``CompDataHDU`` has been changed to accept new keyword\n  arguments.  The new keyword arguments are essentially the same, but are in\n  underscore_separated format rather than camelCase format.  The old arguments\n  are still pending deprecation.\n\n- The internal attributes of HDU classes ``_hdrLoc``, ``_datLoc``, and\n  ``_datSpan`` have been replaced with ``_header_offset``, ``_data_offset``,\n  and ``_data_size`` respectively.  The old attribute names are still pending\n  deprecation.  This should only be of interest to advanced users who have\n  created their own HDU subclasses.\n\n- The following previously deprecated functions and methods have been removed\n  entirely: ``createCard``, ``createCardFromString``, ``upperKey``,\n  ``ColDefs.data``, ``setExtensionNameCaseSensitive``, ``_File.getfile``,\n  ``_TableBaseHDU.get_coldefs``, ``Header.has_key``, ``Header.ascardlist``.\n\n  If you run your code with a previous version of PyFITS (>= 3.0, < 3.2) with\n  the ``python -Wd`` argument, warnings for all deprecated interfaces still in\n  use will be displayed.\n\n- Interfaces that were pending deprecation are now fully deprecated.  These\n  include: ``create_card``, ``create_card_from_string``, ``upper_key``,\n  ``Header.get_history``, and ``Header.get_comment``.\n\n- The ``.name`` attribute on HDUs is now directly tied to the HDU's header, so\n  that if ``.header['EXTNAME']`` changes so does ``.name`` and vice-versa.\n\n- The ``pyfits.file.PYTHON_MODES`` constant dict was renamed to\n  ``pyfits.file.PYFITS_MODES`` which better reflects its purpose.  This is\n  rarely used by client code, however.  Support for the old name will be\n  removed by PyFITS 3.4.\n\n\nOther Changes and Additions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- The new compression code also adds support for the ZQUANTIZ and ZDITHER0\n  keywords added in more recent versions of this FITS Tile Compression spec.\n  This includes support for lossless compression with GZIP. (#198) By default\n  no dithering is used, but the ``SUBTRACTIVE_DITHER_1`` and\n  ``SUBTRACTIVE_DITHER_2`` methods can be enabled by passing the correct\n  constants to the ``quantize_method`` argument to the ``CompImageHDU``\n  constructor.  A seed can be manually specified, or automatically generated\n  using either the system clock or checksum-based methods via the\n  ``dither_seed`` argument.  See the documentation for ``CompImageHDU`` for\n  more details. (#198) (spacetelescope/PYFITS#32)\n\n- Images compressed with the Tile Compression standard can now be larger than\n  4 GB through support of the Q format. (#159)\n\n- All HDUs now have a ``.ver`` ``.level`` attribute that returns the value of\n  the EXTVAL and EXTLEVEL keywords from that HDU's header, if the exist.  This\n  was added for consistency with the ``.name`` attribute which returns the\n  EXTNAME value from the header.\n\n- Then ``Column`` and ``ColDefs`` classes have new ``.dtype`` attributes\n  which give the Numpy dtype for the column data in the first case, and the\n  full Numpy compound dtype for each table row in the latter case.\n\n- There was an issue where new tables created defaulted the values in all\n  string columns to '0.0'.  Now string columns are filled with empty strings\n  by default--this seems a less surprising default, but it may cause\n  differences with tables created with older versions of PyFITS.\n\n- Improved round-tripping and preservation of manually assigned column\n  attributes (``TNULLn``, ``TSCALn``, etc.) in table HDU headers.\n  (astropy/astropy#996)\n\n\nBug Fixes\n^^^^^^^^^\n\n- Binary tables containing compressed images may, optionally, contain other\n  columns unrelated to the tile compression convention. Although this is an\n  uncommon use case, it is permitted by the standard. (#159)\n\n- Reworked some of the file I/O routines to allow simpler, more consistent\n  mapping between OS-level file modes ('rb', 'wb', 'ab', etc.) and the more\n  \"PyFITS-specific\" modes used by PyFITS like \"readonly\" and \"update\".\n  That is, if reading a FITS file from an open file object, it doesn't matter\n  as much what \"mode\" it was opened in so long as it has the right\n  capabilities (read/write/etc.)  Also works around bugs in the Python io\n  module in 2.6+ with regard to file modes. (spacetelescope/PyFITS#33)\n\n- Fixed an obscure issue that can occur on systems that don't have flush to\n  memory-mapped files implemented (namely GNU Hurd). (astropy/astropy#968)\n\n\n3.1.3 (2013-11-26)\n------------------\n\n- Disallowed assigning NaN and Inf floating point values as header values,\n  since the FITS standard does not define a way to represent them in. Because\n  this is undefined, the previous behavior did not make sense and produced\n  invalid FITS files. (spacetelescope/PyFITS#11)\n\n- Added a workaround for a bug in 64-bit OSX that could cause truncation when\n  writing files greater than 2^32 bytes in size. (spacetelescope/PyFITS#28)\n\n- Fixed a long-standing issue where writing binary tables did not correctly\n  write the TFORMn keywords for variable-length array columns (they ommitted\n  the max array length parameter of the format).  This was thought fixed in\n  v3.1.2, but it was only fixed there for compressed image HDUs and not for\n  binary tables in general.\n\n- Fixed an obscure issue that can occur on systems that don't have flush to\n  memory-mapped files implemented (namely GNU Hurd). (Backported from 3.2)\n\n\n3.0.12 (2013-11-26)\n-------------------\n\n- Disallowed assigning NaN and Inf floating point values as header values,\n  since the FITS standard does not define a way to represent them in. Because\n  this is undefined, the previous behavior did not make sense and produced\n  invalid FITS files. (Backported from 3.1.3)\n\n- Added a workaround for a bug in 64-bit OSX that could cause truncation when\n  writing files greater than 2^32 bytes in size. (Backported from 3.1.3)\n\n- Fixed a long-standing issue where writing binary tables did not correctly\n  write the TFORMn keywords for variable-length array columns (they ommitted\n  the max array length parameter of the format).  This was thought fixed in\n  v3.1.2, but it was only fixed there for compressed image HDUs and not for\n  binary tables in general. (Backported from 3.1.3)\n\n- Fixed an obscure issue that can occur on systems that don't have flush to\n  memory-mapped files implemented (namely GNU Hurd). (Backported from 3.2)\n\n\n3.1.2 (2013-04-22)\n------------------\n\n- When an error occurs opening a file in fitsdiff the exception message will\n  now at least mention which file had the error. (#168)\n\n- Fixed support for opening gzipped FITS files by filename in a writeable mode\n  (PyFITS has supported writing to gzip files for some time now, but only\n  enabled it when GzipFile objects were passed to ``pyfits.open()`` due to\n  some legacy code preventing full gzip support. (#195)\n\n- Added a more helpful error message in the case of malformatted FITS files\n  that contain non-float NULL values in an ASCII table but are missing the\n  required TNULLn keywords in the header. (#197)\n\n- Fixed an (apparently long-standing) issue where writing compressed images\n  did not correctly write the TFORMn keywords for variable-length array\n  columns (they ommitted the max array length parameter of the format). (#199)\n\n- Slightly refactored how tables containing variable-length array columns are\n  handled to add two improvements: Fixes an issue where accessing the data\n  after a call to the ``pyfits.getdata`` convenience function caused an\n  exception, and allows the VLA data to be read from an existing mmap of the\n  FITS file. (#200)\n\n- Fixed a bug that could occur when opening a table containing\n  multi-dimensional columns (i.e. via the TDIMn keyword) and then writing it\n  out to a new file. (#201)\n\n- Added use of the console_scripts entry point to install the fitsdiff and\n  fitscheck scripts, which if nothing else provides better Windows support.\n  The generated scripts now override the ones explicitly defined in the\n  scripts/ directory (which were just trivial stubs to begin with). (#202)\n\n- Fixed a bug on Python 3 where attempting to open a non-existent file on\n  Python 3 caused a seemingly unrelated traceback. (#203)\n\n- Fixed a bug in fitsdiff that reported two header keywords containing NaN\n  as value as different. (#204)\n\n- Fixed an issue in the tests that caused some tests to fail if pyfits is\n  installed with read-only permissions. (#208)\n\n- Fixed a bug where instantiating a ``BinTableHDU`` from a numpy array\n  containing boolean fields converted all the values to ``False``. (#215)\n\n- Fixed an issue where passing an array of integers into the constructor of\n  ``Column()`` when the column type is floats of the same byte width caused the\n  column array to become garbled. (#218)\n\n- Fixed inconsistent behavior in creating CONTINUE cards from byte strings\n  versus unicode strings in Python 2--CONTINUE cards can now be created\n  properly from unicode strings (so long as they are convertable to ASCII).\n  (spacetelescope/PyFITS#1)\n\n- Fixed a couple cases where creating a new table using TDIMn in some of the\n  columns could caused a crash. (spacetelescope/PyFITS#3)\n\n- Fixed a bug in parsing HIERARCH keywords that do not have a space after\n  the first equals sign (before the value). (spacetelescope/PyFITS#5)\n\n- Prevented extra leading whitespace on HIERARCH keywords from being treated\n  as part of the keyword. (spacetelescope/PyFITS#6)\n\n- Fixed a bug where HIERARCH keywords containing lower-case letters was\n  mistakenly marked as invalid during header validation.\n  (spacetelescope/PyFITS#7)\n\n- Fixed an issue that was ancillary to (spacetelescope/PyFITS#7) where the\n  ``Header.index()`` method did not work correctly with HIERARCH keywords\n  containing lower-case letters.\n\n\n3.0.11 (2013-04-17)\n-------------------\n\n- Fixed support for opening gzipped FITS files by filename in a writeable mode\n  (PyFITS has supported writing to gzip files for some time now, but only\n  enabled it when GzipFile objects were passed to ``pyfits.open()`` due to\n  some legacy code preventing full gzip support. Backported from 3.1.2. (#195)\n\n- Added a more helpful error message in the case of malformatted FITS files\n  that contain non-float NULL values in an ASCII table but are missing the\n  required TNULLn keywords in the header. Backported from 3.1.2. (#197)\n\n- Fixed an (apparently long-standing) issue where writing compressed images did\n  not correctly write the TFORMn keywords for variable-length array columns\n  (they ommitted the max array length parameter of the format). Backported from\n  3.1.2. (#199)\n\n- Slightly refactored how tables containing variable-length array columns are\n  handled to add two improvements: Fixes an issue where accessing the data\n  after a call to the ``pyfits.getdata`` convenience function caused an\n  exception, and allows the VLA data to be read from an existing mmap of the\n  FITS file. Backported from 3.1.2. (#200)\n\n- Fixed a bug that could occur when opening a table containing\n  multi-dimensional columns (i.e. via the TDIMn keyword) and then writing it\n  out to a new file. Backported from 3.1.2. (#201)\n\n- Fixed a bug on Python 3 where attempting to open a non-existent file on\n  Python 3 caused a seemingly unrelated traceback. Backported from 3.1.2.\n  (#203)\n\n- Fixed a bug in fitsdiff that reported two header keywords containing NaN\n  as value as different. Backported from 3.1.2. (#204)\n\n- Fixed an issue in the tests that caused some tests to fail if pyfits is\n  installed with read-only permissions. Backported from 3.1.2. (#208)\n\n- Fixed a bug where instantiating a ``BinTableHDU`` from a numpy array\n  containing boolean fields converted all the values to ``False``. Backported\n  from 3.1.2. (#215)\n\n- Fixed an issue where passing an array of integers into the constructor of\n  ``Column()`` when the column type is floats of the same byte width caused the\n  column array to become garbled. Backported from 3.1.2. (#218)\n\n- Fixed a couple cases where creating a new table using TDIMn in some of the\n  columns could caused a crash. Backported from 3.1.2.\n  (spacetelescope/PyFITS#3)\n\n\n3.1.1 (2013-01-02)\n------------------\n\nThis is a bug fix release for the 3.1.x series.\n\nBug Fixes\n^^^^^^^^^\n\n- Improved handling of scaled images and pseudo-unsigned integer images in\n  compressed image HDUs.  They now work more transparently like normal image\n  HDUs with support for the ``do_not_scale_image_data`` and ``uint`` options,\n  as well as ``scale_back`` and ``save_backup``.  The ``.scale()`` method\n  works better too. (#88)\n\n- Permits non-string values for the EXTNAME keyword when reading in a file,\n  rather than throwing an exception due to the malformatting.  Added\n  verification for the format of the EXTNAME keyword when writing. (#96)\n\n- Added support for EXTNAME and EXTVER in PRIMARY HDUs.  That is, if EXTNAME\n  is specified in the header, it will also be reflected in the ``.name``\n  attribute and in ``pyfits.info()``.  These keywords used to be verboten in\n  PRIMARY HDUs, but the latest version of the FITS standard allows them.\n  (#151)\n\n- HCOMPRESS can again be used to compress data cubes (and higher-dimensional\n  arrays) so long as the tile size is effectively 2-dimensional. In fact,\n  PyFITS will automatically use compatible tile sizes even if they're not\n  explicitly specified. (#171)\n\n- Added support for the optional ``endcard`` parameter in the\n  ``Header.fromtextfile()`` and ``Header.totextfile()`` methods.  Although\n  ``endcard=False`` was a reasonable default assumption, there are still text\n  dumps of FITS headers that include the END card, so this should have been\n  more flexible. (#176)\n\n- Fixed a crash when running fitsdiff on two empty (that is, zero row) tables.\n  (#178)\n\n- Fixed an issue where opening files containing random groups HDUs in update\n  mode could cause an unnecessary rewrite of the file even if none of the\n  data is modified. (#179)\n\n- Fixed a bug that could caused a deadlock in the filesystem on OSX if PyFITS\n  is used with Numpy 1.7 in some cases. (#180)\n\n- Fixed a crash when generating diff reports from diffs using the\n  ``ignore_comments`` options. (#181)\n\n- Fixed some bugs with FITS WCS distortion paper record-valued keyword cards:\n\n  - Cards that looked kind of like RVKCs but were not intended to be were\n    over-permissively treated as such--commentary keywords like COMMENT and\n    HISTORY were particularly affected. (#183)\n\n  - Looking up a card in a header by its standard FITS keyword only should\n    always return the raw value of that card.  That way cards containing\n    values that happen to valid RVKCs but were not intended to be will still\n    be treated like normal cards. (#184)\n\n  - Looking up a RVKC in a header with only part of the field-specifier (for\n    example \"DP1.AXIS\" instead of \"DP1.AXIS.1\") was implicitly treated as a\n    wildcard lookup. (#184)\n\n- Fixed a crash when diffing two FITS files where at least one contains a\n  compressed image HDU which was not recognized as an image instead of a\n  table. (#187)\n\n- Fixed bugs in the backwards compatibility layer for the ``CardList.index``\n  and ``CardList.count`` methods. (#190)\n\n- Improved ``__repr__`` and text file representation of cards with long values\n  that are split into CONTINUE cards. (#193)\n\n- Fixed a crash when trying to assign a long (> 72 character) value to blank\n  ('') keywords. This also changed how blank keywords are represented--there\n  are still exactly 8 spaces before any commentary content can begin; this\n  *may* affect the exact display of header cards that assumed there could be\n  fewer spaces in a blank keyword card before the content begins. However, the\n  current approach is more in line with the requirements of the FITS standard.\n  (#194)\n\n\n3.0.10 (2013-01-02)\n-------------------\n\n- Improved handling of scaled images and pseudo-unsigned integer images in\n  compressed image HDUs.  They now work more transparently like normal image\n  HDUs with support for the ``do_not_scale_image_data`` and ``uint`` options,\n  as well as ``scale_back`` and ``save_backup``.  The ``.scale()`` method\n  works better too.  Backported from 3.1.1. (#88)\n\n- Permits non-string values for the EXTNAME keyword when reading in a file,\n  rather than throwing an exception due to the malformatting.  Added\n  verification for the format of the EXTNAME keyword when writing.  Backported\n  from 3.1.1. (#96)\n\n- Added support for EXTNAME and EXTVER in PRIMARY HDUs.  That is, if EXTNAME\n  is specified in the header, it will also be reflected in the ``.name``\n  attribute and in ``pyfits.info()``.  These keywords used to be verbotten in\n  PRIMARY HDUs, but the latest version of the FITS standard allows them.\n  Backported from 3.1.1. (#151)\n\n- HCOMPRESS can again be used to compress data cubes (and higher-dimensional\n  arrays) so long as the tile size is effectively 2-dimensional. In fact,\n  PyFITS will not automatically use compatible tile sizes even if they're not\n  explicitly specified.  Backported from 3.1.1. (#171)\n\n- Fixed a bug when writing out files containing zero-width table columns,\n  where the TFIELDS keyword would be updated incorrectly, leaving the table\n  largely unreadable.  Backported from 3.1.0. (#174)\n\n- Fixed an issue where opening files containing random groups HDUs in update\n  mode could cause an unnecessary rewrite of the file even if none of the\n  data is modified.  Backported from 3.1.1. (#179)\n\n- Fixed a bug that could caused a deadlock in the filesystem on OSX if PyFITS\n  is used with Numpy 1.7 in some cases. Backported from 3.1.1. (#180)\n\n\n3.1 (2012-08-08)\n----------------\n\nHighlights\n^^^^^^^^^^\n\n- The ``Header`` object has been significantly reworked, and ``CardList``\n  objects are now deprecated (their functionality folded into the ``Header``\n  class).  See API Changes below for more details.\n\n- Memory maps are now used by default to access HDU data.  See API Changes\n  below for more details.\n\n- Now includes a new version of the ``fitsdiff`` program for comparing two\n  FITS files, and a new FITS comparison API used by ``fitsdiff``.  See New\n  Features below.\n\nAPI Changes\n^^^^^^^^^^^\n\n- The ``Header`` class has been rewritten, and the ``CardList`` class is\n  deprecated.  Most of the basic details of working with FITS headers are\n  unchanged, and will not be noticed by most users.  But there are differences\n  in some areas that will be of interest to advanced users, and to application\n  developers.  For full details of the changes, see the \"Header Interface\n  Transition Guide\" section in the PyFITS documentation.  See ticket #64 on\n  the PyFITS Trac for futher details and background. Some highlights are\n  listed below:\n\n  * The Header class now fully implements the Python dict interface, and can\n    be used interchangably with a dict, where the keys are header keywords.\n\n  * New keywords can be added to the header using normal keyword assignment\n    (previously it was necessary to use ``Header.update`` to add new\n    keywords).  For example::\n\n        >>> header['NAXIS'] = 2\n\n    will update the existing 'FOO' keyword if it already exists, or add a new\n    one if it doesn't exist, just like a dict.\n\n  * It is possible to assign both a value and a comment at the same time using\n    a tuple::\n\n        >>> header['NAXIS'] = (2, 'Number of axes')\n\n  * To add/update a new card and ensure it's added in a specific location, use\n    ``Header.set()``::\n\n        >>> header.set('NAXIS', 2, 'Number of axes', after='BITPIX')\n\n    This works the same as the old ``Header.update()``.  ``Header.update()``\n    still works in the old way too, but is deprecated.\n\n  * Although ``Card`` objects still exist, it generally is not necessary to\n    work with them directly.  ``Header.ascardlist()``/``Header.ascard`` are\n    deprecated and should not be used.  To directly access the ``Card``\n    objects in a header, use ``Header.cards``.\n\n  * To access card comments, it is still possible to either go through the\n    card itself, or through ``Header.comments``.  For example::\n\n       >>> header.cards['NAXIS'].comment\n       Number of axes\n       >>> header.comments['NAXIS']\n       Number of axes\n\n  * ``Card`` objects can now be used interchangeably with\n    ``(keyword, value, comment)`` 3-tuples.  They still have ``.value`` and\n    ``.comment`` attributes as well.  The ``.key`` attribute has been renamed\n    to ``.keyword`` for consistency, though ``.key`` is still supported (but\n    deprecated).\n\n- Memory mapping is now used by default to access HDU data.  That is,\n  ``pyfits.open()`` uses ``memmap=True`` as the default.  This provides better\n  performance in the majority of use cases--there are only some I/O intensive\n  applications where it might not be desirable.  Enabling mmap by default also\n  enabled finding and fixing a large number of bugs in PyFITS' handling of\n  memory-mapped data (most of these bug fixes were backported to PyFITS\n  3.0.5). (#85)\n\n  * A new ``pyfits.USE_MEMMAP`` global variable was added.  Set\n    ``pyfits.USE_MEMMAP = False`` to change the default memmap setting for\n    opening files.  This is especially useful for controlling the behavior in\n    applications where pyfits is deeply embedded.\n\n  * Likewise, a new ``PYFITS_USE_MEMMAP`` environment variable is supported.\n    Set ``PYFITS_USE_MEMMAP = 0`` in your environment to change the default\n    behavior.\n\n- The ``size()`` method on HDU objects is now a ``.size`` property--this\n  returns the size in bytes of the data portion of the HDU, and in most cases\n  is equivalent to ``hdu.data.nbytes`` (#83)\n\n- ``BinTableHDU.tdump`` and ``BinTableHDU.tcreate`` are deprecated--use\n  ``BinTableHDU.dump`` and ``BinTableHDU.load`` instead.  The new methods\n  output the table data in a slightly different format from previous versions,\n  which places quotes around each value.  This format is compatible with data\n  dumps from previous versions of PyFITS, but not vice-versa due to a parsing\n  bug in older versions.\n\n- Likewise the ``pyfits.tdump`` and ``pyfits.tcreate`` convenience function\n  versions of these methods have been renamed ``pyfits.tabledump`` and\n  ``pyfits.tableload``.  The old deprecated, but currently retained for\n  backwards compatibility. (r1125)\n\n- A new global variable ``pyfits.EXTENSION_NAME_CASE_SENSITIVE`` was added.\n  This serves as a replacement for ``pyfits.setExtensionNameCaseSensitive``\n  which is not deprecated and may be removed in a future version.  To enable\n  case-sensitivity of extension names (i.e. treat 'sci' as distinct from 'SCI')\n  set ``pyfits.EXTENSION_NAME_CASE_SENSITIVE = True``.  The default is\n  ``False``. (r1139)\n\n- A new global configuration variable ``pyfits.STRIP_HEADER_WHITESPACE`` was\n  added.  By default, if a string value in a header contains trailing\n  whitespace, that whitespace is automatically removed when the value is read.\n  Now if you set ``pyfits.STRIP_HEADER_WHITESPACE = False`` all whitespace is\n  preserved. (#146)\n\n- The old ``classExtensions`` extension mechanism (which was deprecated in\n  PyFITS 3.0) is removed outright.  To our knowledge it was no longer used\n  anywhere. (r1309)\n\n- Warning messages from PyFITS issued through the Python warnings API are now\n  output to stderr instead of stdout, as is the default.  PyFITS no longer\n  modifies the default behavior of the warnings module with respect to which\n  stream it outputs to. (r1319)\n\n- The ``checksum`` argument to ``pyfits.open()`` now accepts a value of\n  'remove', which causes any existing CHECKSUM/DATASUM keywords to be ignored,\n  and removed when the file is saved.\n\nNew Features\n^^^^^^^^^^^^\n\n- Added support for the proposed \"FITS\" extension HDU type.  See\n  http://listmgr.cv.nrao.edu/pipermail/fitsbits/2002-April/001094.html.  FITS\n  HDUs contain an entire FITS file embedded in their data section.  ``FitsHDU``\n  objects work like other HDU types in PyFITS.  Their ``.data`` attribute\n  returns the raw data array.  However, they have a special ``.hdulist``\n  attribute which processes the data as a FITS file and returns it as an\n  in-memory HDUList object.  FitsHDU objects also support a\n  ``FitsHDU.fromhdulist()`` classmethod which returns a new ``FitsHDU`` object\n  that embeds the supplied HDUList. (#80)\n\n- Added a new ``.is_image`` attribute on HDU objects, which is True if the HDU\n  data is an 'image' as opposed to a table or something else.  Here the\n  meaning of 'image' is fairly loose, and mostly just means a Primary or Image\n  extension HDU, or possibly a compressed image HDU (#71)\n\n- Added an ``HDUList.fromstring`` classmethod which can parse a FITS file\n  already in memory and instantiate and ``HDUList`` object from it.  This\n  could be useful for integrating PyFITS with other libraries that work on\n  FITS file, such as CFITSIO.  It may also be useful in streaming\n  applications.  The name is a slight misnomer, in that it actually accepts\n  any Python object that implements the buffer interface, which includes\n  ``bytes``, ``bytearray``, ``memoryview``, ``numpy.ndarray``, etc. (#90)\n\n- Added a new ``pyfits.diff`` module which contains facilities for comparing\n  FITS files.  One can use the ``pyfits.diff.FITSDiff`` class to compare two\n  FITS files in their entirety.  There is also a ``pyfits.diff.HeaderDiff``\n  class for just comparing two FITS headers, and other similar interfaces.\n  See the PyFITS Documentation for more details on this interface.  The\n  ``pyfits.diff`` module powers the new ``fitsdiff`` program installed with\n  PyFITS.  After installing PyFITS, run ``fitsdiff --help`` for usage details.\n\n- ``pyfits.open()`` now accepts a ``scale_back`` argument.  If set to\n  ``True``, this automatically scales the data using the original BZERO and\n  BSCALE parameters the file had when it was first opened, if any, as well as\n  the original BITPIX.  For example, if the original BITPIX were 16, this\n  would be equivalent to calling ``hdu.scale('int16', 'old')`` just before\n  calling ``flush()`` or ``close()`` on the file.  This option applies to all\n  HDUs in the file. (#120)\n\n- ``pyfits.open()`` now accepts a ``save_backup`` argument.  If set to\n  ``True``, this automatically saves a backup of the original file before\n  flushing any changes to it (this of course only applies to update and append\n  mode).  This may be especially useful when working with scaled image data.\n  (#121)\n\nChanges in Behavior\n^^^^^^^^^^^^^^^^^^^\n\n- Warnings from PyFITS are not output to stderr by default, instead of stdout\n  as it has been for some time.  This is contrary to most users' expectations\n  and makes it more difficult for them to separate output from PyFITS from the\n  desired output for their scripts. (r1319)\n\nBug Fixes\n^^^^^^^^^\n\n- Fixed ``pyfits.tcreate()`` (now ``pyfits.tableload()``) to be more robust\n  when encountering blank lines in a column definition file (#14)\n\n- Fixed a fairly rare crash that could occur in the handling of CONTINUE cards\n  when using Numpy 1.4 or lower (though 1.4 is the oldest version supported by\n  PyFITS). (r1330)\n\n- Fixed ``_BaseHDU.fromstring`` to actually correctly instantiate an HDU\n  object from a string/buffer containing the header and data of that HDU.\n  This allowed for the implementation of ``HDUList.fromstring`` described\n  above. (#90)\n\n- Fixed a rare corner case where, in some use cases, (mildly, recoverably)\n  malformatted float values in headers were not properly returned as floats.\n  (#137)\n\n- Fixed a corollary to the previous bug where float values with a leading zero\n  before the decimal point had the leading zero unnecessarily removed when\n  saving changes to the file (eg. \"0.001\" would be written back as \".001\" even\n  if no changes were otherwise made to the file). (#137)\n\n- When opening a file containing CHECKSUM and/or DATASUM keywords in update\n  mode, the CHECKSUM/DATASUM are updated and preserved even if the file was\n  opened with checksum=False.  This change in behavior prevents checksums from\n  being unintentionally removed. (#148)\n\n- Fixed a bug where ``ImageHDU.scale(option='old')`` wasn't working at all--it\n  was not restoring the image to its original BSCALE and BZERO values. (#162)\n\n- Fixed a bug when writing out files containing zero-width table columns,\n  where the TFIELDS keyword would be updated incorrectly, leaving the table\n  largely unreadable.  This fix will be backported to the 3.0.x series in\n  version 3.0.10.  (#174)\n\n\n3.0.9 (2012-08-06)\n------------------\n\nThis is a bug fix release for the 3.0.x series.\n\nBug Fixes\n^^^^^^^^^\n\n- Fixed ``Header.values()``/``Header.itervalues()`` and ``Header.items()``/\n  ``Header.iteritems()`` to correctly return the different values for\n  duplicate keywords (particularly commentary keywords like HISTORY and\n  COMMENT).  This makes the old Header implementation slightly more compatible\n  with the new implementation in PyFITS 3.1. (#127)\n\n  .. note::\n      This fix did not change the existing behavior from earlier PyFITS\n      versions where ``Header.keys()`` returns all keywords in the header with\n      duplicates removed.  PyFITS 3.1 changes that behavior, so that\n      ``Header.keys()`` includes duplicates.\n\n- Fixed a bug where ``ImageHDU.scale(option='old')`` wasn't working at all--it\n  was not restoring the image to its original BSCALE and BZERO values. (#162)\n\n- Fixed a bug where opening a file containing compressed image HDUs in\n  'update' mode and then immediately closing it without making any changes\n  caused the file to be rewritten unnecessarily. (#167)\n\n- Fixed two memory leaks that could occur when writing compressed image data,\n  or in some cases when opening files containing compressed image HDUs in\n  'update' mode. (#168)\n\n\n3.0.8 (2012-06-04)\n------------------\n\nChanges in Behavior\n^^^^^^^^^^^^^^^^^^^\n\n- Prior to this release, image data sections did not work with scaled\n  data--that is, images with non-trivial BSCALE and/or BZERO values.\n  Previously, in order to read such images in sections, it was necessary to\n  manually apply the BSCALE+BZERO to each section.  It's worth noting that\n  sections *did* support pseudo-unsigned ints (flakily).  This change just\n  extends that support for general BSCALE+BZERO values.\n\nBug Fixes\n^^^^^^^^^\n\n- Fixed a bug that prevented updates to values in boolean table columns from\n  being saved.  This turned out to be a symptom of a deeper problem that could\n  prevent other table updates from being saved as well. (#139)\n\n- Fixed a corner case in which a keyword comment ending with the string \"END\"\n  could, in some circumstances, cause headers (and the rest of the file after\n  that point) to be misread. (#142)\n\n- Fixed support for scaled image data and psuedo-unsigned ints in image data\n  sections (``hdu.section``).  Previously this was not supported at all.  At\n  some point support was supposedly added, but it was buggy and incomplete.\n  Now the feature seems to work much better. (#143)\n\n- Fixed the documentation to point out that image data sections *do* support\n  non-contiguous slices (and have for a long time).  The documentation was\n  never updated to reflect this, and misinformed users that only contiguous\n  slices were supported, leading to some confusion. (#144)\n\n- Fixed a bug where creating an ``HDUList`` object containing multiple PRIMARY\n  HDUs caused an infinite recursion when validating the object prior to\n  writing to a file. (#145)\n\n- Fixed a rare but serious case where saving an update to a file that\n  previously had a CHECKSUM and/or DATASUM keyword, but removed the checksum\n  in saving, could cause the file to be slightly corrupted and unreadable.\n  (#147)\n\n- Fixed problems with reading \"non-standard\" FITS files with primary headers\n  containing SIMPLE = F.  PyFITS has never made many guarantees as to how such\n  files are handled.  But it should at least be possible to read their\n  headers, and the data if possible.  Saving changes to such a file should not\n  try to prepend an unwanted valid PRIMARY HDU. (#157)\n\n- Fixed a bug where opening an image with ``disable_image_compression = True``\n  caused compression to be disabled for all subsequent ``pyfits.open()`` calls.\n  (r1651)\n\n\n3.0.7 (2012-04-10)\n------------------\n\nChanges in Behavior\n^^^^^^^^^^^^^^^^^^^\n\n- Slices of GroupData objects now return new GroupData objects instead of\n  extended multi-row _Group objects. This is analogous to how PyFITS 3.0 fixed\n  FITS_rec slicing, and should have been fixed for GroupData at the same time.\n  The old behavior caused bugs where functions internal to Numpy expected that\n  slicing an ndarray would return a new ndarray.  As this is a rare usecase\n  with a rare feature most users are unlikely to be affected by this change.\n\n- The previously internal _Group object for representing individual group\n  records in a GroupData object are renamed Group and are now a public\n  interface.  However, there's almost no good reason to create Group objects\n  directly, so it shouldn't be considered a \"new feature\".\n\n- An annoyance from PyFITS 3.0.6 was fixed, where the value of the EXTEND\n  keyword was always being set to F if there are not actually any extension\n  HDUs.  It was unnecessary to modify this value.\n\nBug Fixes\n^^^^^^^^^\n\n- Fixed GroupData objects to return new GroupData objects when sliced instead\n  of _Group record objects.  See \"Changes in behavior\" above for more details.\n\n- Fixed slicing of Group objects--previously it was not possible to slice\n  slice them at all.\n\n- Made it possible to assign ``np.bool_`` objects as header values. (#123)\n\n- Fixed overly strict handling of the EXTEND keyword; see \"Changes in\n  behavior\" above. (#124)\n\n- Fixed many cases where an HDU's header would be marked as \"modified\" by\n  PyFITS and rewritten, even when no changes to the header are necessary.\n  (#125)\n\n- Fixed a bug where the values of the PTYPEn keywords in a random groups HDU\n  were forced to be all lower-case when saving the file. (#130)\n\n- Removed an unnecessary inline import in ``ExtensionHDU.__setattr__`` that was\n  causing some slowdown when opening files containing a large number of\n  extensions, plus a few other small (but not insignficant) performance\n  improvements thanks to Julian Taylor. (#133)\n\n- Fixed a regression where header blocks containing invalid end-of-header\n  padding (i.e. null bytes instead of spaces) couldn't be parsed by PyFITS.\n  Such headers can be parsed again, but a warning is raised, as such headers\n  are not valid FITS. (#136)\n\n- Fixed a memory leak where table data in random groups HDUs weren't being\n  garbage collected. (#138)\n\n\n3.0.6 (2012-02-29)\n------------------\n\nHighlights\n^^^^^^^^^^\n\nThe main reason for this release is to fix an issue that was introduced in\nPyFITS 3.0.5 where merely opening a file containing scaled data (that is, with\nnon-trivial BSCALE and BZERO keywords) in 'update' mode would cause the data\nto be automatically rescaled--possibly converting the data from ints to\nfloats--as soon as the file is closed, even if the application did not touch\nthe data.  Now PyFITS will only rescale the data in an extension when the data\nis actually accessed by the application.  So opening a file in 'update' mode\nin order to modify the header or append new extensions will not cause any\nchange to the data in existing extensions.\n\nThis release also fixes a few Windows-specific bugs found through more\nextensive Windows testing, and other miscellaneous bugs.\n\nBug Fixes\n^^^^^^^^^\n\n- More accurate error messages when opening files containing invalid header\n  cards. (#109)\n\n- Fixed a possible reference cycle/memory leak that was caught through more\n  extensive testing on Windows. (#112)\n\n- Fixed 'ostream' mode to open the underlying file in 'wb' mode instead of 'w'\n  mode. (#112)\n\n- Fixed a Windows-only issue where trying to save updates to a resized FITS\n  file could result in a crash due to there being open mmaps on that file.\n  (#112)\n\n- Fixed a crash when trying to create a FITS table (i.e. with new_table())\n  from a Numpy array containing bool fields. (#113)\n\n- Fixed a bug where manually initializing an ``HDUList`` with a list of of\n  HDUs wouldn't set the correct EXTEND keyword value on the primary HDU.\n  (#114)\n\n- Fixed a crash that could occur when trying to deepcopy a Header in Python <\n  2.7. (#115)\n\n- Fixed an issue where merely opening a scaled image in 'update' mode would\n  cause the data to be converted to floats when the file is closed. (#119)\n\n\n3.0.5 (2012-01-30)\n------------------\n\n- Fixed a crash that could occur when accessing image sections of files\n  opened with memmap=True. (r1211)\n\n- Fixed the inconsistency in the behavior of files opened in 'readonly' mode\n  when memmap=True vs. when memmap=False.  In the latter case, although\n  changes to array data were not saved to disk, it was possible to update the\n  array data in memory.  On the other hand with memmap=True, 'readonly' mode\n  prevented even in-memory modification to the data.  This is what\n  'copyonwrite' mode was for, but difference in behavior was confusing.  Now\n  'readonly' is equivalent to 'copyonwrite' when using memmap.  If the old\n  behavior of denying changes to the array data is necessary, a new\n  'denywrite' mode may be used, though it is only applicable to files opened\n  with memmap. (r1275)\n\n- Fixed an issue where files opened with memmap=True would return image data\n  as a raw numpy.memmap object, which can cause some unexpected\n  behaviors--instead memmap object is viewed as a numpy.ndarray. (r1285)\n\n- Fixed an issue in Python 3 where a workaround for a bug in Numpy on Python 3\n  interacted badly with some other software, namely to vo.table package (and\n  possibly others). (r1320, r1337, and #110)\n\n- Fixed buggy behavior in the handling of SIGINTs (i.e. Ctrl-C keyboard\n  interrupts) while flushing changes to a FITS file.  PyFITS already prevented\n  SIGINTs from causing an incomplete flush, but did not clean up the signal\n  handlers properly afterwards, or reraise the keyboard interrupt once the\n  flush was complete. (r1321)\n\n- Fixed a crash that could occur in Python 3 when opening files with checksum\n  checking enabled. (r1336)\n\n- Fixed a small bug that could cause a crash in the ``StreamingHDU`` interface\n  when using Numpy below version 1.5.\n\n- Fixed a crash that could occur when creating a new ``CompImageHDU`` from an\n  array of big-endian data. (#104)\n\n- Fixed a crash when opening a file with extra zero padding at the end.\n  Though FITS files should not have such padding, it's not explictly forbidden\n  by the format either, and PyFITS shouldn't stumble over it. (#106)\n\n- Fixed a major slowdown in opening tables containing large columns of string\n  values.  (#111)\n\n\n3.0.4 (2011-11-22)\n------------------\n\n- Fixed a crash when writing HCOMPRESS compressed images that could happen on\n  Python 2.5 and 2.6. (r1217)\n\n- Fixed a crash when slicing an table in a file opened in 'readonly' mode with\n  memmap=True. (r1230)\n\n- Writing changes to a file or writing to a new file verifies the output in\n  'fix' mode by default instead of 'exception'--that is, PyFITS will\n  automatically fix common FITS format errors rather than raising an\n  exception. (r1243)\n\n- Fixed a bug where convenience functions such as getval() and getheader()\n  crashed when specifying just 'PRIMARY' as the extension to use (r1263).\n\n- Fixed a bug that prevented passing keyword arguments (beyond the standard\n  data and header arguments) as positional arguments to the constructors of\n  extension HDU classes.\n\n- Fixed some tests that were failing on Windows--in this case the tests\n  themselves failed to close some temp files and Windows refused to delete them\n  while there were still open handles on them. (r1295)\n\n- Fixed an issue with floating point formatting in header values on Python 2.5\n  for Windows (and possibly other platforms).  The exponent was zero-padded to\n  3 digits; although the FITS standard makes no specification on this, the\n  formatting is now normalized to always pad the exponent to two digits.\n  (r1295)\n\n- Fixed a bug where long commentary cards (such as HISTORY and COMMENT) were\n  broken into multiple CONTINUE cards.  However, commentary cards are not\n  expected to be found in CONTINUE cards.  Instead these long cards are broken\n  into multiple commentary cards. (#97)\n\n- GZIP/ZIP-compressed FITS files can be detected and opened regardless of\n  their filename extension. (#99)\n\n- Fixed a serious bug where opening scaled images in 'update' mode and then\n  closing the file without touching the data would cause the file to be\n  corrupted. (#101)\n\n\n3.0.3 (2011-10-05)\n------------------\n\n- Fixed several small bugs involving corner cases in record-valued keyword\n  cards (#70)\n\n- In some cases HDU creation failed if the first keyword value in the header\n  was not a string value (#89)\n\n- Fixed a crash when trying to compute the HDU checksum when the data array\n  contains an odd number of bytes (#91)\n\n- Disabled an unnecessary warning that was displayed on opening compressed\n  HDUs with disable_image_compression = True (#92)\n\n- Fixed a typo in code for handling HCOMPRESS compressed images.\n\n\n3.0.2 (2011-09-23)\n------------------\n\n- The ``BinTableHDU.tcreate`` method and by extension the ``pyfits.tcreate``\n  function don't get tripped up by blank lines anymore (#14)\n\n- The presence, value, and position of the EXTEND keyword in Primary HDUs is\n  verified when reading/writing a FITS file (#32)\n\n- Improved documentation (in warning messages as well as in the handbook) that\n  PyFITS uses zero-based indexing (as one would expect for C/Python code, but\n  contrary to the PyFITS standard which was written with FORTRAN in mind)\n  (#68)\n\n- Fixed a bug where updating a header card comment could cause the value to be\n  lost if it had not already been read from the card image string.\n\n- Fixed a related bug where changes made directly to Card object in a header\n  (i.e. assigning directly to card.value or card.comment) would not propagate\n  when flushing changes to the file (#69) [Note: This and the bug above it\n  were originally reported as being fixed in version 3.0.1, but the fix was\n  never included in the release.]\n\n- Improved file handling, particularly in Python 3 which had a few small file\n  I/O-related bugs (#76)\n\n- Fixed a bug where updating a FITS file would sometimes cause it to lose its\n  original file permissions (#79)\n\n- Fixed the handling of TDIMn keywords; 3.0 added support for them, but got\n  the axis order backards (they were treated as though they were row-major)\n  (#82)\n\n- Fixed a crash when a FITS file containing scaled data is opened and\n  immediately written to a new file without explicitly viewing the data first\n  (#84)\n\n- Fixed a bug where creating a table with columns named either 'names' or\n  'formats' resulted in an infinite recursion (#86)\n\n\n3.0.1 (2011-09-12)\n------------------\n\n- Fixed a bug where updating a header card comment could cause the value to be\n  lost if it had not already been read from the card image string.\n\n- Changed ``_TableBaseHDU.data`` so that if the data contain an empty table a\n  ``FITS_rec`` object with zero rows is returned rather than ``None``.\n\n- The ``.key`` attribute of ``RecordValuedKeywordCards`` now returns the full\n  keyword+field-specifier value, instead of just the plain keyword (#46)\n\n- Fixed a related bug where changes made directly to Card object in a header\n  (i.e. assigning directly to card.value or card.comment) would not propagate\n  when flushing changes to the file (#69)\n\n- Fixed a bug where writing a table with zero rows could fail in some cases\n  (#72)\n\n- Miscellaneous small bug fixes that were causing some tests to fail,\n  particularly on Python 3 (#74, #75)\n\n- Fixed a bug where creating a table column from an array in non-native byte\n  order would not preserve the byte order, thus interpreting the column array\n  using the wrong byte order (#77)\n\n\n3.0.0 (2011-08-23)\n--------------------\n\n- Contains major changes, bumping the version to 3.0\n\n- Large amounts of refactoring and reorganization of the code; tried to\n  preserve public API backwards-compatibility with older versions (private API\n  has many changes and is not guaranteed to be backwards-compatible).  There\n  are a few small public API changes to be aware of:\n\n  * The pyfits.rec module has been removed completely.  If your version of\n    numpy does not have the numpy.core.records module it is too old to be used\n    with PyFITS.\n\n  * The ``Header.ascardlist()`` method is deprecated--use the ``.ascard``\n    attribute instead.\n\n  * ``Card`` instances have a new ``.cardimage`` attribute that should be used\n    rather than ``.ascardimage()``, which may become deprecated.\n\n  * The ``Card.fromstring()`` method is now a classmethod.  It returns a new\n    ``Card`` instance rather than modifying an existing instance.\n\n  * The ``req_cards()`` method on HDU instances has changed:  The ``pos``\n    argument is not longer a string.  It is either an integer value (meaning\n    the card's position must match that value) or it can be a function that\n    takes the card's position as it's argument, and returns True if the\n    position is valid.  Likewise, the ``test`` argument no longer takes a\n    string, but instead a function that validates the card's value and returns\n    True or False.\n\n  * The ``get_coldefs()`` method of table HDUs is deprecated.  Use the\n    ``.columns`` attribute instead.\n\n  * The ``ColDefs.data`` attribute is deprecated--use ``ColDefs.columns``\n    instead (though in general you shouldn't mess with it directly--it might\n    become internal at some point).\n\n  * ``FITS_record`` objects take ``start`` and ``end`` as arguments instead of\n    ``startColumn`` and ``endColumn`` (these are rarely created manually, so\n    it's unlikely that this change will affect anyone).\n\n  * ``BinTableHDU.tcreate()`` is now a classmethod, and returns a new\n    ``BinTableHDU`` instance.\n\n  * Use ``ExtensionHDU`` and ``NonstandardExtHDU`` for making new extension HDU\n    classes.  They are now public interfaces, wheres previously they were\n    private and prefixed with underscores.\n\n  * Possibly others--please report if you find any changes that cause\n    difficulties.\n\n- Calls to deprecated functions will display a Deprecation warning.  However,\n  in Python 2.7 and up Deprecation warnings are ignored by default, so run\n  Python with the ``-Wd`` option to see if you're using any deprecated\n  functions.  If we get close to actually removing any functions, we might\n  make the Deprecation warnings display by default.\n\n- Added basic Python 3 support\n\n- Added support for multi-dimensional columns in tables as specified by the\n  TDIMn keywords (#47)\n\n- Fixed a major memory leak that occurred when creating new tables with the\n  ``new_table()`` function (#49)\n  be padded with zero-bytes) vs ASCII tables (where strings are padded with\n  spaces) (#15)\n\n- Fixed a bug in which the case of Random Access Group parameters names was not\n  preserved when writing (#41)\n\n- Added support for binary table fields with zero width (#42)\n\n- Added support for wider integer types in ASCII tables; although this is non-\n  standard, some GEIS images require it (#45)\n\n- Fixed a bug that caused the index_of() method of HDULists to crash when the\n  HDUList object is created from scratch (#48)\n\n- Fixed the behavior of string padding in binary tables (where strings should\n  be padded with nulls instead of spaces)\n\n- Fixed a rare issue that caused excessive memory usage when computing\n  checksums using a non-standard block size (see r818)\n\n- Add support for forced uint data in image sections (#53)\n\n- Fixed an issue where variable-length array columns were not extended when\n  creating a new table with more rows than the original (#54)\n\n- Fixed tuple and list-based indexing of FITS_rec objects (#55)\n\n- Fixed an issue where BZERO and BSCALE keywords were appended to headers in\n  the wrong location (#56)\n\n- ``FITS_record`` objects (table rows) have full slicing support, including\n  stepping, etc. (#59)\n\n- Fixed a bug where updating multiple files simultaneously (such as when\n  running parallel processes) could lead to a race condition with mktemp()\n  (#61)\n\n- Fixed a bug where compressed image headers were not in the order expected by\n  the funpack utility (#62)\n\n\n2.4.0 (2011-01-10)\n--------------------\nThe following enhancements were added:\n\n- Checksum support now correctly conforms to the FITS standard.  pyfits\n  supports reading and writing both the old checksums and new\n  standard-compliant checksums.  The ``fitscheck`` command-line utility is\n  provided to verify and update checksums.\n\n- Added a new optional keyword argument ``do_not_scale_image_data``\n  to the ``pyfits.open`` convenience function.  When this argument\n  is provided as True, and an ImageHDU is read that contains scaled\n  data, the data is not automatically scaled when it is read.  This\n  option may be used when opening a fits file for update, when you only\n  want to update some header data.  Without the use of this argument, if\n  the header updates required the size of the fits file to change, then\n  when writing the updated information, the data would be read, scaled,\n  and written back out in its scaled format (usually with a different\n  data type) instead of in its non-scaled format.\n\n- Added a new optional keyword argument ``disable_image_compression`` to the\n  ``pyfits.open`` function.  When ``True``, any compressed image HDU's will\n  be read in like they are binary table HDU's.\n\n- Added a ``verify`` keyword argument to the ``pyfits.append`` function.  When\n  ``False``, ``append`` will assume the existing FITS file is already valid\n  and simply append new content to the end of the file, resulting in a large\n  speed up appending to large files.\n\n- Added HDU methods ``update_ext_name`` and ``update_ext_version`` for\n  updating the name and version of an HDU.\n\n- Added HDU method ``filebytes`` to calculate the number of bytes that will be\n  written to the file associated with the HDU.\n\n- Enhanced the section class to allow reading non-contiguous image data.\n  Previously, the section class could only be used to read contiguous data.\n  (CNSHD781626)\n\n- Added method ``HDUList.fileinfo()`` that returns a dictionary with\n  information about the location of header and data in the file associated\n  with the HDU.\n\nThe following bugs were fixed:\n\n- Reading in some malformed FITS headers would cause a ``NameError``\n  exception, rather than information about the cause of the error.\n\n- pyfits can now handle non-compliant ``CONTINUE`` cards produced by Java\n  FITS.\n\n- ``BinTable`` columns with ``TSCALn`` are now byte-swapped correctly.\n\n- Ensure that floating-point card values are no longer than 20 characters.\n\n- Updated ``flush`` so that when the data has changed in an HDU for a file\n  opened in update mode, the header will be updated to match the changed data\n  before writing out the HDU.\n\n- Allow ``HIERARCH`` cards to contain a keyword and value whose total\n  character length is 69 characters.  Previous length was limited at 68\n  characters.\n\n- Calls to ``FITS_rec['columnName']`` now return an ``ndarray``. exactly the\n  same as a call to ``FITS_rec.field('columnName')`` or\n  ``FITS_rec.columnName``.  Previously, ``FITS_rec['columnName']`` returned a\n  much less useful ``fits_record`` object. (CNSHD789053)\n\n- Corrected the ``append`` convenience function to eliminate the reading of\n  the HDU data from the file that is being appended to.  (CNSHD794738)\n\n- Eliminated common symbols between the pyfitsComp module and the cfitsio and\n  zlib libraries.  These can cause problems on systems that use both PyFITS\n  and cfitsio or zlib. (CNSHD795046)\n\n\n2.3.1 (2010-06-03)\n--------------------\n\nThe following bugs were fixed:\n\n- Replaced code in the Compressed Image HDU extension which was covered under\n  a GNU General Public License with code that is covered under a BSD License.\n  This change allows the distribution of pyfits under a BSD License.\n\n\n2.3 (2010-05-11)\n------------------\n\nThe following enhancements were made:\n\n- Completely eliminate support for numarray.\n\n- Rework pyfits documention to use Sphinx.\n\n- Support python 2.6 and future division.\n\n- Added a new method to get the file name associated with an HDUList object.\n  The method HDUList.filename() returns the name of an associated file.  It\n  returns None if no file is associated with the HDUList.\n\n- Support the python 2.5 'with' statement when opening fits files.\n  (CNSHD766308)  It is now possible to use the following construct:\n\n    >>> from __future__ import with_statement import pyfits\n    >>> with pyfits.open(\"input.fits\") as hdul:\n    ...    #process hdul\n    >>>\n\n- Extended the support for reading unsigned integer 16 values from an ImageHDU\n  to include unsigned integer 32 and unsigned integer 64 values.  ImageHDU\n  data is considered to be unsigned integer 16 when the data type is signed\n  integer 16 and BZERO is equal to 2**15 (32784) and BSCALE is equal to 1.\n  ImageHDU data is considered to be unsigned integer 32 when the data type is\n  signed integer 32 and BZERO is equal to 2**31 and BSCALE is equal to 1.\n  ImageHDU data is considered to be unsigned integer 64 when the data type is\n  signed integer 64 and BZERO is equal to 2**63 and BSCALE is equal to 1.  An\n  optional keyword argument (uint) was added to the open convenience function\n  for this purpose.  Supplying a value of True for this argument will cause\n  data of any of these types to be read in and scaled into the appropriate\n  unsigned integer array (uint16, uint32, or uint64) instead of into the\n  normal float 32 or float 64 array.  If an HDU associated with a file that\n  was opened with the 'int' option and containing unsigned integer 16, 32, or\n  64 data is written to a file, the data will be reverse scaled into a signed\n  integer 16, 32, or 64 array and written out to the file along with the\n  appropriate BSCALE/BZERO header cards.  Note that for backward\n  compatability, the 'uint16' keyword argument will still be accepted in the\n  open function when handling unsigned integer 16 conversion.\n\n- Provided the capability to access the data for a column of a fits table by\n  indexing the table using the column name.  This is consistent with Record\n  Arrays in numpy (array with fields).  (CNSHD763378)  The following example\n  will illustrate this:\n\n    >>> import pyfits\n    >>> hdul = pyfits.open('input.fits')\n    >>> table = hdul[1].data\n    >>> table.names\n    ['c1','c2','c3','c4']\n    >>> print table.field('c2') # this is the data for column 2\n    ['abc' 'xy']\n    >>> print table['c2'] # this is also the data for column 2\n    array(['abc', 'xy '], dtype='|S3')\n    >>> print table[1] # this is the data for row 1\n    (2, 'xy', 6.6999997138977054, True)\n\n- Provided capabilities to create a BinaryTableHDU directly from a numpy\n  Record Array (array with fields). The new capabilities include table\n  creation, writing a numpy Record Array directly to a fits file using the\n  pyfits.writeto and pyfits.append convenience functions.  Reading the data\n  for a BinaryTableHDU from a fits file directly into a numpy Record Array\n  using the pyfits.getdata convenience function.  (CNSHD749034)  Thanks to\n  Erin Sheldon at Brookhaven National Laboratory for help with this.\n\n  The following should illustrate these new capabilities:\n\n    >>> import pyfits\n    >>> import numpy\n    >>> t=numpy.zeros(5,dtype=[('x','f4'),('y','2i4')]) \\\n    ... # Create a numpy Record Array with fields\n    >>> hdu = pyfits.BinTableHDU(t) \\\n    ... # Create a Binary Table HDU directly from the Record Array\n    >>> print hdu.data\n    [(0.0, array([0, 0], dtype=int32))\n     (0.0, array([0, 0], dtype=int32))\n     (0.0, array([0, 0], dtype=int32))\n     (0.0, array([0, 0], dtype=int32))\n     (0.0, array([0, 0], dtype=int32))]\n    >>> hdu.writeto('test1.fits',clobber=True) \\\n    ... # Write the HDU to a file\n    >>> pyfits.info('test1.fits')\n    Filename: test1.fits\n    No.    Name         Type      Cards   Dimensions   Format\n    0    PRIMARY     PrimaryHDU       4  ()            uint8\n    1                BinTableHDU     12  5R x 2C       [E, 2J]\n    >>> pyfits.writeto('test.fits', t, clobber=True) \\\n    ... # Write the Record Array directly to a file\n    >>> pyfits.append('test.fits', t) \\\n    ... # Append another Record Array to the file\n    >>> pyfits.info('test.fits')\n    Filename: test.fits\n    No.    Name         Type      Cards   Dimensions   Format\n    0    PRIMARY     PrimaryHDU       4  ()            uint8\n    1                BinTableHDU     12  5R x 2C       [E, 2J]\n    2                BinTableHDU     12  5R x 2C       [E, 2J]\n    >>> d=pyfits.getdata('test.fits',ext=1) \\\n    ... # Get the first extension from the file as a FITS_rec\n    >>> print type(d)\n    <class 'pyfits.core.FITS_rec'>\n    >>> print d\n    [(0.0, array([0, 0], dtype=int32))\n     (0.0, array([0, 0], dtype=int32))\n     (0.0, array([0, 0], dtype=int32))\n     (0.0, array([0, 0], dtype=int32))\n     (0.0, array([0, 0], dtype=int32))]\n    >>> d=pyfits.getdata('test.fits',ext=1,view=numpy.ndarray) \\\n    ... # Get the first extension from the file as a numpy Record\n          Array\n    >>> print type(d)\n    <type 'numpy.ndarray'>\n    >>> print d\n    [(0.0, [0, 0]) (0.0, [0, 0]) (0.0, [0, 0]) (0.0, [0, 0])\n     (0.0, [0, 0])]\n    >>> print d.dtype\n    [('x', '>f4'), ('y', '>i4', 2)]\n    >>> d=pyfits.getdata('test.fits',ext=1,upper=True,\n    ...                  view=pyfits.FITS_rec) \\\n    ... # Force the Record Array field names to be in upper case\n          regardless of how they are stored in the file\n    >>> print d.dtype\n    [('X', '>f4'), ('Y', '>i4', 2)]\n\n- Provided support for writing fits data to file-like objects that do not\n  support the random access methods seek() and tell().  Most pyfits functions\n  or methods will treat these file-like objects as an empty file that cannot\n  be read, only written.  It is also expected that the file-like object is in\n  a writable condition (ie. opened) when passed into a pyfits function or\n  method.  The following methods and functions will allow writing to a\n  non-random access file-like object: HDUList.writeto(), HDUList.flush(),\n  pyfits.writeto(), and pyfits.append().  The pyfits.open() convenience\n  function may be used to create an HDUList object that is associated with the\n  provided file-like object.  (CNSHD770036)\n\n  An illustration of the new capabilities follows.  In this example fits data\n  is written to standard output which is associated with a file opened in\n  write-only mode:\n\n    >>> import pyfits\n    >>> import numpy as np\n    >>> import sys\n    >>>\n    >>> hdu = pyfits.PrimaryHDU(np.arange(100,dtype=np.int32))\n    >>> hdul = pyfits.HDUList()\n    >>> hdul.append(hdu)\n    >>> tmpfile = open('tmpfile.py','w')\n    >>> sys.stdout = tmpfile\n    >>> hdul.writeto(sys.stdout, clobber=True)\n    >>> sys.stdout = sys.__stdout__\n    >>> tmpfile.close()\n    >>> pyfits.info('tmpfile.py')\n    Filename: tmpfile.py\n    No.    Name         Type      Cards   Dimensions   Format\n    0    PRIMARY     PrimaryHDU       5  (100,)        int32\n    >>>\n\n- Provided support for slicing a FITS_record object.  The FITS_record object\n  represents the data from a row of a table.  Pyfits now supports the slice\n  syntax to retrieve values from the row.  The following illustrates this new\n  syntax:\n\n    >>> hdul = pyfits.open('table.fits')\n    >>> row = hdul[1].data[0]\n    >>> row\n    ('clear', 'nicmos', 1, 30, 'clear', 'idno= 100')\n    >>> a, b, c, d, e = row[0:5]\n    >>> a\n    'clear'\n    >>> b\n    'nicmos'\n    >>> c\n    1\n    >>> d\n    30\n    >>> e\n    'clear'\n    >>>\n\n- Allow the assignment of a row value for a pyfits table using a tuple or a\n  list as input.  The following example illustrates this new feature:\n\n    >>> c1=pyfits.Column(name='target',format='10A')\n    >>> c2=pyfits.Column(name='counts',format='J',unit='DN')\n    >>> c3=pyfits.Column(name='notes',format='A10')\n    >>> c4=pyfits.Column(name='spectrum',format='5E')\n    >>> c5=pyfits.Column(name='flag',format='L')\n    >>> coldefs=pyfits.ColDefs([c1,c2,c3,c4,c5])\n    >>>\n    >>> tbhdu=pyfits.new_table(coldefs, nrows = 5)\n    >>>\n    >>> # Assigning data to a table's row using a tuple\n    >>> tbhdu.data[2] = ('NGC1',312,'A Note',\n    ... num.array([1.1,2.2,3.3,4.4,5.5],dtype=num.float32),\n    ... True)\n    >>>\n    >>> # Assigning data to a tables row using a list\n    >>> tbhdu.data[3] = ['JIM1','33','A Note',\n    ... num.array([1.,2.,3.,4.,5.],dtype=num.float32),True]\n\n- Allow the creation of a Variable Length Format (P format) column from a list\n  of data.  The following example illustrates this new feature:\n\n    >>> a = [num.array([7.2e-20,7.3e-20]),num.array([0.0]),\n    ... num.array([0.0])]\n    >>> acol = pyfits.Column(name='testa',format='PD()',array=a)\n    >>> acol.array\n    _VLF([[  7.20000000e-20   7.30000000e-20], [ 0.], [ 0.]],\n    dtype=object)\n    >>>\n\n- Allow the assignment of multiple rows in a table using the slice syntax. The\n  following example illustrates this new feature:\n\n    >>> counts = num.array([312,334,308,317])\n    >>> names = num.array(['NGC1','NGC2','NGC3','NCG4'])\n    >>> c1=pyfits.Column(name='target',format='10A',array=names)\n    >>> c2=pyfits.Column(name='counts',format='J',unit='DN',\n    ... array=counts)\n    >>> c3=pyfits.Column(name='notes',format='A10')\n    >>> c4=pyfits.Column(name='spectrum',format='5E')\n    >>> c5=pyfits.Column(name='flag',format='L',array=[1,0,1,1])\n    >>> coldefs=pyfits.ColDefs([c1,c2,c3,c4,c5])\n    >>>\n    >>> tbhdu1=pyfits.new_table(coldefs)\n    >>>\n    >>> counts = num.array([112,134,108,117])\n    >>> names = num.array(['NGC5','NGC6','NGC7','NCG8'])\n    >>> c1=pyfits.Column(name='target',format='10A',array=names)\n    >>> c2=pyfits.Column(name='counts',format='J',unit='DN',\n    ... array=counts)\n    >>> c3=pyfits.Column(name='notes',format='A10')\n    >>> c4=pyfits.Column(name='spectrum',format='5E')\n    >>> c5=pyfits.Column(name='flag',format='L',array=[0,1,0,0])\n    >>> coldefs=pyfits.ColDefs([c1,c2,c3,c4,c5])\n    >>>\n    >>> tbhdu=pyfits.new_table(coldefs)\n    >>> tbhdu.data[0][3] = num.array([1.,2.,3.,4.,5.],\n    ... dtype=num.float32)\n    >>>\n    >>> tbhdu2=pyfits.new_table(tbhdu1.data, nrows=9)\n    >>>\n    >>> # Assign the 4 rows from the second table to rows 5 thru\n    ...   8 of the new table.  Note that the last row of the new\n    ...   table will still be initialized to the default values.\n    >>> tbhdu2.data[4:] = tbhdu.data\n    >>>\n    >>> print tbhdu2.data\n    [ ('NGC1', 312, '0.0', array([ 0.,  0.,  0.,  0.,  0.],\n    dtype=float32), True)\n      ('NGC2', 334, '0.0', array([ 0.,  0.,  0.,  0.,  0.],\n    dtype=float32), False)\n      ('NGC3', 308, '0.0', array([ 0.,  0.,  0.,  0.,  0.],\n    dtype=float32), True)\n      ('NCG4', 317, '0.0', array([ 0.,  0.,  0.,  0.,  0.],\n    dtype=float32), True)\n      ('NGC5', 112, '0.0', array([ 1.,  2.,  3.,  4.,  5.],\n    dtype=float32), False)\n      ('NGC6', 134, '0.0', array([ 0.,  0.,  0.,  0.,  0.],\n    dtype=float32), True)\n      ('NGC7', 108, '0.0', array([ 0.,  0.,  0.,  0.,  0.],\n    dtype=float32), False)\n      ('NCG8', 117, '0.0', array([ 0.,  0.,  0.,  0.,  0.],\n    dtype=float32), False)\n      ('0.0', 0, '0.0', array([ 0.,  0.,  0.,  0.,  0.],\n    dtype=float32), False)]\n    >>>\n\nThe following bugs were fixed:\n\n- Corrected bugs in HDUList.append and HDUList.insert to correctly handle the\n  situation where you want to insert or append a Primary HDU as something\n  other than the first HDU in an HDUList and the situation where you want to\n  insert or append an Extension HDU as the first HDU in an HDUList.\n\n- Corrected a bug involving scaled images (both compressed and not compressed)\n  that include a BLANK, or ZBLANK card in the header.  When the image values\n  match the BLANK or ZBLANK value, the value should be replaced with NaN after\n  scaling.  Instead, pyfits was scaling the BLANK or ZBLANK value and\n  returning it. (CNSHD766129)\n\n- Corrected a byteswapping bug that occurs when writing certain column data.\n  (CNSHD763307)\n\n- Corrected a bug that occurs when creating a column from a chararray when one\n  or more elements are shorter than the specified format length.  The bug\n  wrote nulls instead of spaces to the file. (CNSHD695419)\n\n- Corrected a bug in the HDU verification software to ensure that the header\n  contains no NAXISn cards where n > NAXIS.\n\n- Corrected a bug involving reading and writing compressed image data.  When\n  written, the header keyword card ZTENSION will always have the value 'IMAGE'\n  and when read, if the ZTENSION value is not 'IMAGE' the user will receive a\n  warning, but the data will still be treated as image data.\n\n- Corrected a bug that restricted the ability to create a custom HDU class and\n  use it with pyfits.  The bug fix will allow something like this:\n\n    >>> import pyfits\n    >>> class MyPrimaryHDU(pyfits.PrimaryHDU):\n    ...     def __init__(self, data=None, header=None):\n    ...         pyfits.PrimaryHDU.__init__(self, data, header)\n    ...     def _summary(self):\n    ...         \"\"\"\n    ...         Reimplement a method of the class.\n    ...         \"\"\"\n    ...         s = pyfits.PrimaryHDU._summary(self)\n    ...         # change the behavior to suit me.\n    ...         s1 = 'MyPRIMARY ' + s[11:]\n    ...         return s1\n    ...\n    >>> hdul=pyfits.open(\"pix.fits\",\n    ... classExtensions={pyfits.PrimaryHDU: MyPrimaryHDU})\n    >>> hdul.info()\n    Filename: pix.fits\n    No.    Name         Type      Cards   Dimensions   Format\n    0    MyPRIMARY  MyPrimaryHDU     59  (512, 512)    int16\n    >>>\n\n- Modified ColDefs.add_col so that instead of returning a new ColDefs object\n  with the column added to the end, it simply appends the new column to the\n  current ColDefs object in place.  (CNSHD768778)\n\n- Corrected a bug in ColDefs.del_col which raised a KeyError exception when\n  deleting a column from a ColDefs object.\n\n- Modified the open convenience function so that when a file is opened in\n  readonly mode and the file contains no HDU's an IOError is raised.\n\n- Modified _TableBaseHDU to ensure that all locations where data is referenced\n  in the object actually reference the same ndarray, instead of copies of the\n  array.\n\n- Corrected a bug in the Column class that failed to initialize data when the\n  data is a boolean array.  (CNSHD779136)\n\n- Corrected a bug that caused an exception to be raised when creating a\n  variable length format column from character data (PA format).\n\n- Modified installation code so that when installing on Windows, when a C++\n  compiler compatible with the Python binary is not found, the installation\n  completes with a warning that all optional extension modules failed to\n  build.  Previously, an Error was issued and the installation stopped.\n\n\n2.2.2 (2009-10-12)\n--------------------\n\nUpdates described in this release are only supported in the NUMPY version of\npyfits.\n\nThe following bugs were fixed:\n\n- Corrected a bug that caused an exception to be raised when creating a\n  CompImageHDU using an initial header that does not match the image data in\n  terms of the number of axis.\n\n\n2.2.1 (2009-10-06)\n--------------------\n\nUpdates described in this release are only supported in the NUMPY version of\npyfits.\n\nThe following bugs were fixed:\n\n- Corrected a bug that prevented the opening of a fits file where a header\n  contained a CHECKSUM card but no DATASUM card.\n\n- Corrected a bug that caused NULLs to be written instead of blanks when an\n  ASCII table was created using a numpy chararray in which the original data\n  contained trailing blanks.  (CNSHD695419)\n\n\n2.2 (2009-09-23)\n------------------\n\nUpdates described in this release are only supported in the NUMPY version of\npyfits.\n\nThe following enhancements were made:\n\n- Provide support for the FITS Checksum Keyword Convention.  (CNSHD754301)\n\n- Adding the checksum=True keyword argument to the open convenience function\n  will cause checksums to be verified on file open:\n\n    >>> hdul=pyfits.open('in.fits', checksum=True)\n\n- On output, CHECKSUM and DATASUM cards may be output to all HDU's in a fits\n  file by using the keyword argument checksum=True in calls to the writeto\n  convenience function, the HDUList.writeto method, the writeto methods of all\n  of the HDU classes, and the append convenience function:\n\n    >>> hdul.writeto('out.fits', checksum=True)\n\n- Implemented a new insert method to the HDUList class that allows for the\n  insertion of a HDU into a HDUList at a given index:\n\n    >>> hdul.insert(2,hdu)\n\n- Provided the capability to handle unicode input for file names.\n\n- Provided support for integer division required by Python 3.0.\n\nThe following bugs were fixed:\n\n- Corrected a bug that caused an index out of bounds exception to be raised\n  when iterating over the rows of a binary table HDU using the syntax  \"for\n  row in tbhdu.data:   \".  (CNSHD748609)\n\n- Corrected a bug that prevented the use of the writeto convenience function\n  for writing table data to a file.  (CNSHD749024)\n\n- Modified the code to raise an IOError exception with the comment \"Header\n  missing END card.\" when pyfits can't find a valid END card for a header when\n  opening a file.\n\n  - This change addressed a problem with a non-standard fits file that\n    contained several new-line characters at the end of each header and at the\n    end of the file.  However, since some people want to be able to open these\n    non-standard files anyway, an option was added to the open convenience\n    function to allow these files to be opened without exception:\n\n      >>> pyfits.open('infile.fits',ignore_missing_end=True)\n\n- Corrected a bug that prevented the use of StringIO objects as fits files\n  when reading and writing table data.  Previously, only image data was\n  supported.  (CNSHD753698)\n\n- Corrected a bug that caused a bus error to be generated when compressing\n  image data using GZIP_1 under the Solaris operating system.\n\n- Corrected bugs that prevented pyfits from properly reading Random Groups\n  HDU's using numpy.  (CNSHD756570)\n\n- Corrected a bug that can occur when writing a fits file.  (CNSHD757508)\n\n  - If no default SIGINT signal handler has not been assigned, before the\n    write, a TypeError exception is raised in the _File.flush() method when\n    attempting to return the signal handler to its previous state.  Notably\n    this occurred when using mod_python.  The code was changed to use SIG_DFL\n    when no old handler was defined.\n\n- Corrected a bug in CompImageHDU that prevented rescaling the image data\n  using hdu.scale(option='old').\n\n\n2.1.1 (2009-04-22)\n-------------------\n\nUpdates described in this release are only supported in the NUMPY version of\npyfits.\n\nThe following bugs were fixed:\n\n- Corrected a bug that caused an exception to be raised when closing a file\n  opened for append, where an HDU was appended to the file, after data was\n  accessed from the file.  This exception was only raised when running on a\n  Windows platform.\n\n- Updated the installation scripts, compression source code, and benchmark\n  test scripts to properly install, build, and execute on a Windows platform.\n\n\n2.1 (2009-04-14)\n------------------\n\nUpdates described in this release are only supported in the NUMPY version of\npyfits.\n\nThe following enhancements were made:\n\n- Added new tdump and tcreate capabilities to pyfits.\n\n  - The new tdump convenience function allows the contents of a binary table\n    HDU to be dumped to a set of three files in ASCII format.  One file will\n    contain column definitions, the second will contain header parameters, and\n    the third will contain header data.\n\n  - The new tcreate convenience function allows the creation of a binary table\n    HDU from the three files dumped by the tdump convenience function.\n\n  - The primary use for the tdump/tcreate methods are to allow editing in a\n    standard text editor of the binary table data and parameters.\n\n- Added support for case sensitive values of the EXTNAME card in an extension\n  header.  (CNSHD745784)\n\n  - By default, pyfits converts the value of EXTNAME cards to upper case when\n    reading from a file.  A new convenience function\n    (setExtensionNameCaseSensitive) was implemented to allow a user to\n    circumvent this behavior so that the EXTNAME value remains in the same\n    case as it is in the file.\n\n  - With the following function call, pyfits will maintain the case of all\n    characters in the EXTNAME card values of all extension HDU's during the\n    entire python session, or until another call to the function is made:\n\n      >>> import pyfits\n      >>> pyfits.setExtensionNameCaseSensitive()\n\n  - The following function call will return pyfits to its default (all upper\n    case) behavior:\n\n      >>> pyfits.setExtensionNameCaseSensitive(False)\n\n\n- Added support for reading and writing FITS files in which the value of the\n  first card in the header is 'SIMPLE=F'.  In this case, the pyfits open\n  function returns an HDUList object that contains a single HDU of the new\n  type _NonstandardHDU.  The header for this HDU is like a normal header (with\n  the exception that the first card contains SIMPLE=F instead of SIMPLE=T).\n  Like normal HDU's the reading of the data is delayed until actually\n  requested.  The data is read from the file into a string starting from the\n  first byte after the header END card and continuing till the end of the\n  file.  When written, the header is written, followed by the data string.  No\n  attempt is made to pad the data string so that it fills into a standard 2880\n  byte FITS block.  (CNSHD744730)\n\n- Added support for FITS files containing  extensions with unknown XTENSION\n  card values.  (CNSHD744730)  Standard FITS files support extension HDU's of\n  types TABLE, IMAGE, BINTABLE, and A3DTABLE.  Accessing a nonstandard\n  extension from a FITS file will now create a _NonstandardExtHDU object.\n  Accessing the data of this object will cause the data to be read from the\n  file into a string.  If the HDU is written back to a file the string data is\n  written after the Header and padded to fill a standard 2880 byte FITS block.\n\nThe following bugs were fixed:\n\n- Extensive changes were made to the tiled image compression code to support\n  the latest enhancements made in CFITSIO version 3.13 to support this\n  convention.\n\n- Eliminated a memory leak in the tiled image compression code.\n\n- Corrected a bug in the FITS_record.__setitem__ method which raised a\n  NameError exception when attempting to set a value in a FITS_record object.\n  (CNSHD745844)\n\n- Corrected a bug that caused a TypeError exception to be raised when reading\n  fits files containing large table HDU's (>2Gig).  (CNSHD745522)\n\n- Corrected a bug that caused a TypeError exception to be raised for all calls\n  to the warnings module when running under Python 2.6.  The formatwarning\n  method in the warnings module was changed in Python 2.6 to include a new\n  argument.  (CNSHD746592)\n\n- Corrected the behavior of the membership (in) operator in the Header class\n  to check against header card keywords instead of card values.  (CNSHD744730)\n\n- Corrected the behavior of iteration on a Header object.  The new behavior\n  iterates over the unique card keywords instead of the card values.\n\n\n2.0.1 (2009-02-03)\n--------------------\n\nUpdates described in this release are only supported in the NUMPY version of\npyfits.\n\nThe following bugs were fixed:\n\n- Eliminated a memory leak when reading Table HDU's from a fits file.\n  (CNSHD741877)\n\n\n2.0 (2009-01-30)\n------------------\n\nUpdates described in this release are only supported in the NUMPY version of\npyfits.\n\nThe following enhancements were made:\n\n- Provide initial support for an image compression convention known as the\n  \"Tiled Image Compression Convention\" `[1]`_.\n\n  - The principle used in this convention is to first divide the n-dimensional\n    image into a rectangular grid of subimages or \"tiles\".  Each tile is then\n    compressed as a continuous block of data, and the resulting compressed\n    byte stream is stored in a row of a variable length column in a FITS\n    binary table.  Several commonly used algorithms for compressing image\n    tiles are supported.  These include, GZIP, RICE, H-Compress and IRAF pixel\n    list (PLIO).\n\n  - Support for compressed image data is provided using the optional\n    \"pyfitsComp\" module contained in a C shared library (pyfitsCompmodule.so).\n\n  - The header of a compressed image HDU appears to the user like any image\n    header.  The actual header stored in the FITS file is that of a binary\n    table HDU with a set of special keywords, defined by the convention, to\n    describe the structure of the compressed image.  The conversion between\n    binary table HDU header and image HDU header is all performed behind the\n    scenes.  Since the HDU is actually a binary table, it may not appear as a\n    primary HDU in a FITS file.\n\n  - The data of a compressed image HDU appears to the user as standard\n    uncompressed image data.  The actual data is stored in the fits file as\n    Binary Table data containing at least one column (COMPRESSED_DATA).  Each\n    row of this variable-length column contains the byte stream that was\n    generated as a result of compressing the corresponding image tile.\n    Several optional columns may also appear.  These include,\n    UNCOMPRESSED_DATA to hold the uncompressed pixel values for tiles that\n    cannot be compressed, ZSCALE and ZZERO to hold the linear scale factor and\n    zero point offset which may be needed to transform the raw uncompressed\n    values back to the original image pixel values, and ZBLANK to hold the\n    integer value used to represent undefined pixels (if any) in the image.\n\n  - To create a compressed image HDU from scratch, simply construct a\n    CompImageHDU object from an uncompressed image data array and its\n    associated image header.  From there, the HDU can be treated just like any\n    image HDU:\n\n      >>> hdu=pyfits.CompImageHDU(imageData,imageHeader)\n      >>> hdu.writeto('compressed_image.fits')\n\n  - The signature for the CompImageHDU initializer method describes the\n    possible options for constructing a CompImageHDU object::\n\n      def __init__(self, data=None, header=None, name=None,\n                   compressionType='RICE_1',\n                   tileSize=None,\n                   hcompScale=0.,\n                   hcompSmooth=0,\n                   quantizeLevel=16.):\n          \"\"\"\n              data:            data of the image\n              header:          header to be associated with the\n                               image\n              name:            the EXTNAME value; if this value\n                               is None, then the name from the\n                               input image header will be used;\n                               if there is no name in the input\n                               image header then the default name\n                               'COMPRESSED_IMAGE' is used\n              compressionType: compression algorithm 'RICE_1',\n                               'PLIO_1', 'GZIP_1', 'HCOMPRESS_1'\n              tileSize:        compression tile sizes default\n                               treats each row of image as a tile\n              hcompScale:      HCOMPRESS scale parameter\n              hcompSmooth:     HCOMPRESS smooth parameter\n              quantizeLevel:   floating point quantization level;\n          \"\"\"\n\n- Added two new convenience functions.  The setval function allows the setting\n  of the value of a single header card in a fits file.  The delval function\n  allows the deletion of a single header card in a fits file.\n\n- A modification was made to allow the reading of data from a fits file\n  containing a Table HDU that has duplicate field names.  It is normally a\n  requirement that the field names in a Table HDU be unique.  Prior to this\n  change a ValueError was raised, when the data was accessed, to indicate that\n  the HDU contained duplicate field names.  Now, a warning is issued and the\n  field names are made unique in the internal record array.  This will not\n  change the TTYPEn header card values.  You will be able to get the data from\n  all fields using the field name, including the first field containing the\n  name that is duplicated.  To access the data of the other fields with the\n  duplicated names you will need to use the field number instead of the field\n  name.  (CNSHD737193)\n\n- An enhancement was made to allow the reading of unsigned integer 16 values\n  from an ImageHDU when the data is signed integer 16 and BZERO is equal to\n  32784 and BSCALE is equal to 1 (the standard way for scaling unsigned\n  integer 16 data).  A new optional keyword argument (uint16) was added to the\n  open convenience function.  Supplying a value of True for this argument will\n  cause data of this type to be read in and scaled into an unsigned integer 16\n  array, instead of a float 32 array.  If a HDU associated with a file that\n  was opened with the uint16 option and containing unsigned integer 16 data is\n  written to a file, the data will be reverse scaled into an integer 16 array\n  and written out to the file and the BSCALE/BZERO header cards will be\n  written with the values 1 and 32768 respectively.  (CHSHD736064) Reference\n  the following example:\n\n    >>> import pyfits\n    >>> hdul=pyfits.open('o4sp040b0_raw.fits',uint16=1)\n    >>> hdul[1].data\n    array([[1507, 1509, 1505, ..., 1498, 1500, 1487],\n           [1508, 1507, 1509, ..., 1498, 1505, 1490],\n           [1505, 1507, 1505, ..., 1499, 1504, 1491],\n           ...,\n           [1505, 1506, 1507, ..., 1497, 1502, 1487],\n           [1507, 1507, 1504, ..., 1495, 1499, 1486],\n           [1515, 1507, 1504, ..., 1492, 1498, 1487]], dtype=uint16)\n    >>> hdul.writeto('tmp.fits')\n    >>> hdul1=pyfits.open('tmp.fits',uint16=1)\n    >>> hdul1[1].data\n    array([[1507, 1509, 1505, ..., 1498, 1500, 1487],\n           [1508, 1507, 1509, ..., 1498, 1505, 1490],\n           [1505, 1507, 1505, ..., 1499, 1504, 1491],\n           ...,\n           [1505, 1506, 1507, ..., 1497, 1502, 1487],\n           [1507, 1507, 1504, ..., 1495, 1499, 1486],\n           [1515, 1507, 1504, ..., 1492, 1498, 1487]], dtype=uint16)\n    >>> hdul1=pyfits.open('tmp.fits')\n    >>> hdul1[1].data\n    array([[ 1507.,  1509.,  1505., ...,  1498.,  1500.,  1487.],\n           [ 1508.,  1507.,  1509., ...,  1498.,  1505.,  1490.],\n           [ 1505.,  1507.,  1505., ...,  1499.,  1504.,  1491.],\n           ...,\n           [ 1505.,  1506.,  1507., ...,  1497.,  1502.,  1487.],\n           [ 1507.,  1507.,  1504., ...,  1495.,  1499.,  1486.],\n           [ 1515.,  1507.,  1504., ...,  1492.,  1498.,  1487.]], dtype=float32)\n\n- Enhanced the message generated when a ValueError exception is raised when\n  attempting to access a header card with an unparsable value.  The message\n  now includes the Card name.\n\nThe following bugs were fixed:\n\n- Corrected a bug that occurs when appending a binary table HDU to a fits\n  file.  Data was not being byteswapped on little endian machines.\n  (CNSHD737243)\n\n- Corrected a bug that occurs when trying to write an ImageHDU that is missing\n  the required PCOUNT card in the header.  An UnboundLocalError exception\n  complaining that the local variable 'insert_pos' was referenced before\n  assignment was being raised in the method _ValidHDU.req_cards.  The code was\n  modified so that it would properly issue a more meaningful ValueError\n  exception with a description of what required card is missing in the header.\n\n- Eliminated a redundant warning message about the PCOUNT card when validating\n  an ImageHDU header with a PCOUNT card that is missing or has a value other\n  than 0.\n\n.. _[1]: http://fits.gsfc.nasa.gov/registry/tilecompression.html\n\n\n1.4.1 (2008-11-04)\n--------------------\n\nUpdates described in this release are only supported in the NUMPY version of\npyfits.\n\nThe following enhancements were made:\n\n- Enhanced the way import errors are reported to provide more information.\n\nThe following bugs were fixed:\n\n- Corrected a bug that occurs when a card value is a string and contains a\n  colon but is not a record-valued keyword card.\n\n- Corrected a bug where pyfits fails to properly handle a record-valued\n  keyword card with values using exponential notation and trailing blanks.\n\n\n1.4 (2008-07-07)\n------------------\n\nUpdates described in this release are only supported in the NUMPY version of\npyfits.\n\nThe following enhancements were made:\n\n- Added support for file objects and file like objects.\n\n  - All convenience functions and class methods that take a file name will now\n    also accept a file object or file like object.  File like objects\n    supported are StringIO and GzipFile objects.  Other file like objects will\n    work only if they implement all of the standard file object methods.\n\n  - For the most part, file or file like objects may be either opened or\n    closed at function call.  An opened object must be opened with the proper\n    mode depending on the function or method called.  Whenever possible, if\n    the object is opened before the method is called, it will remain open\n    after the call.  This will not be possible when writing a HDUList that has\n    been resized or when writing to a GzipFile object regardless of whether it\n    is resized.  If the object is closed at the time of the function call,\n    only the name from the object is used, not the object itself.  The pyfits\n    code will extract the file name used by the object and use that to create\n    an underlying file object on which the function will be performed.\n\n- Added support for record-valued keyword cards as introduced in the \"FITS WCS\n  proposal for representing a more general distortion model\".\n\n  - Record-valued keyword cards are string-valued cards where the string is\n    interpreted as a definition giving a record field name, and its floating\n    point value.  In a FITS header they have the following syntax::\n\n      keyword= 'field-specifier: float'\n\n    where keyword is a standard eight-character FITS keyword name, float is\n    the standard FITS ASCII representation of a floating point number, and\n    these are separated by a colon followed by a single blank.\n\n    The grammer for field-specifier is::\n\n      field-specifier:\n          field\n          field-specifier.field\n\n      field:\n          identifier\n          identifier.index\n\n    where identifier is a sequence of letters (upper or lower case),\n    underscores, and digits of which the first character must not be a digit,\n    and index is a sequence of digits.  No blank characters may occur in the\n    field-specifier.  The index is provided primarily for defining array\n    elements though it need not be used for that purpose.\n\n    Multiple record-valued keywords of the same name but differing values may\n    be present in a FITS header.  The field-specifier may be viewed as part of\n    the keyword name.\n\n    Some examples follow::\n\n      DP1     = 'NAXIS: 2'\n      DP1     = 'AXIS.1: 1'\n      DP1     = 'AXIS.2: 2'\n      DP1     = 'NAUX: 2'\n      DP1     = 'AUX.1.COEFF.0: 0'\n      DP1     = 'AUX.1.POWER.0: 1'\n      DP1     = 'AUX.1.COEFF.1: 0.00048828125'\n      DP1     = 'AUX.1.POWER.1: 1'\n\n  - As with standard header cards, the value of a record-valued keyword card\n    can be accessed using either the index of the card in a HDU's header or\n    via the keyword name.  When accessing using the keyword name, the user may\n    specify just the card keyword or the card keyword followed by a period\n    followed by the field-specifier.  Note that while the card keyword is case\n    insensitive, the field-specifier is not.  Thus, hdu['abc.def'],\n    hdu['ABC.def'], or hdu['aBc.def'] are all equivalent but hdu['ABC.DEF'] is\n    not.\n\n  - When accessed using the card index of the HDU's header the value returned\n    will be the entire string value of the card.  For example:\n\n      >>> print hdr[10]\n      NAXIS: 2\n      >>> print hdr[11]\n      AXIS.1: 1\n\n  - When accessed using the keyword name exclusive of the field-specifier, the\n    entire string value of the header card with the lowest index having that\n    keyword name will be returned.  For example:\n\n      >>> print hdr['DP1']\n      NAXIS: 2\n\n  - When accessing using the keyword name and the field-specifier, the value\n    returned will be the floating point value associated with the\n    record-valued keyword card.  For example:\n\n      >>> print hdr['DP1.NAXIS']\n      2.0\n\n  - Any attempt to access a non-existent record-valued keyword card value will\n    cause an exception to be raised (IndexError exception for index access or\n    KeyError for keyword name access).\n\n  - Updating the value of a record-valued keyword card can also be\n    accomplished using either index or keyword name.  For example:\n\n      >>> print hdr['DP1.NAXIS']\n      2.0\n      >>> hdr['DP1.NAXIS'] = 3.0\n      >>> print hdr['DP1.NAXIS']\n      3.0\n\n  - Adding a new record-valued keyword card to an existing header is\n    accomplished using the Header.update() method just like any other card.\n    For example:\n\n      >>> hdr.update('DP1', 'AXIS.3: 1', 'a comment', after='DP1.AXIS.2')\n\n  - Deleting a record-valued keyword card from an existing header is\n    accomplished using the standard list deletion syntax just like any other\n    card.  For example:\n\n      >>> del hdr['DP1.AXIS.1']\n\n  - In addition to accessing record-valued keyword cards individually using a\n    card index or keyword name, cards can be accessed in groups using a set of\n    special pattern matching keys.  This access is made available via the\n    standard list indexing operator providing a keyword name string that\n    contains one or more of the special pattern matching keys.  Instead of\n    returning a value, a CardList object will be returned containing shared\n    instances of the Cards in the header that match the given keyword\n    specification.\n\n  - There are three special pattern matching keys.  The first key '*' will\n    match any string of zero or more characters within the current level of\n    the field-specifier.  The second key '?' will match a single character.\n    The third key '...' must appear at the end of the keyword name string and\n    will match all keywords that match the preceding pattern down all levels\n    of the field-specifier.  All combinations of ?, \\*, and ... are permitted\n    (though ... is only permitted at the end).  Some examples follow:\n\n      >>> cl=hdr['DP1.AXIS.*']\n      >>> print cl\n      DP1     = 'AXIS.1: 1'\n      DP1     = 'AXIS.2: 2'\n      >>> cl=hdr['DP1.*']\n      >>> print cl\n      DP1     = 'NAXIS: 2'\n      DP1     = 'NAUX: 2'\n      >>> cl=hdr['DP1.AUX...']\n      >>> print cl\n      DP1     = 'AUX.1.COEFF.0: 0'\n      DP1     = 'AUX.1.POWER.0: 1'\n      DP1     = 'AUX.1.COEFF.1: 0.00048828125'\n      DP1     = 'AUX.1.POWER.1: 1'\n      >>> cl=hdr['DP?.NAXIS']\n      >>> print cl\n      DP1     = 'NAXIS: 2'\n      DP2     = 'NAXIS: 2'\n      DP3     = 'NAXIS: 2'\n      >>> cl=hdr['DP1.A*S.*']\n      >>> print cl\n      DP1     = 'AXIS.1: 1'\n      DP1     = 'AXIS.2: 2'\n\n  - The use of the special pattern matching keys for adding or updating header\n    cards in an existing header is not allowed.  However, the deletion of\n    cards from the header using the special keys is allowed.  For example:\n\n      >>> del hdr['DP3.A*...']\n\n- As noted above, accessing pyfits Header object using the special pattern\n  matching keys will return a CardList object.  This CardList object can\n  itself be searched in order to further refine the list of Cards.  For\n  example:\n\n      >>> cl=hdr['DP1...']\n      >>> print cl\n      DP1     = 'NAXIS: 2'\n      DP1     = 'AXIS.1: 1'\n      DP1     = 'AXIS.2: 2'\n      DP1     = 'NAUX: 2'\n      DP1     = 'AUX.1.COEFF.1: 0.000488'\n      DP1     = 'AUX.2.COEFF.2: 0.00097656'\n      >>> cl1=cl['*.*AUX...']\n      >>> print cl1\n      DP1     = 'NAUX: 2'\n      DP1     = 'AUX.1.COEFF.1: 0.000488'\n      DP1     = 'AUX.2.COEFF.2: 0.00097656'\n\n  - The CardList keys() method will allow the retrivial of all of the key\n    values in the CardList.  For example:\n\n      >>> cl=hdr['DP1.AXIS.*']\n      >>> print cl\n      DP1     = 'AXIS.1: 1'\n      DP1     = 'AXIS.2: 2'\n      >>> cl.keys()\n      ['DP1.AXIS.1', 'DP1.AXIS.2']\n\n  - The CardList values() method will allow the retrivial of all of the values\n    in the CardList.  For example:\n\n      >>> cl=hdr['DP1.AXIS.*']\n      >>> print cl\n      DP1     = 'AXIS.1: 1'\n      DP1     = 'AXIS.2: 2'\n      >>> cl.values()\n      [1.0, 2.0]\n\n  - Individual cards can be retrieved from the list using standard list\n    indexing.  For example:\n\n      >>> cl=hdr['DP1.AXIS.*']\n      >>> c=cl[0]\n      >>> print c\n      DP1     = 'AXIS.1: 1'\n      >>> c=cl['DP1.AXIS.2']\n      >>> print c\n      DP1     = 'AXIS.2: 2'\n\n  - Individual card values can be retrieved from the list using the value\n    attribute of the card.  For example:\n\n      >>> cl=hdr['DP1.AXIS.*']\n      >>> cl[0].value\n      1.0\n\n  - The cards in the CardList are shared instances of the cards in the source\n    header.  Therefore, modifying a card in the CardList also modifies it in\n    the source header.  However, making an addition or a deletion to the\n    CardList will not affect the source header.  For example:\n\n      >>> hdr['DP1.AXIS.1']\n      1.0\n      >>> cl=hdr['DP1.AXIS.*']\n      >>> cl[0].value = 4.0\n      >>> hdr['DP1.AXIS.1']\n      4.0\n      >>> del cl[0]\n      >>> print cl['DP1.AXIS.1']\n      Traceback (most recent call last):\n      ...\n      KeyError: \"Keyword 'DP1.AXIS.1' not found.\"\n      >>> hdr['DP1.AXIS.1']\n      4.0\n\n  - A FITS header consists of card images.  In pyfits each card image is\n    manifested by a Card object.  A pyfits Header object contains a list of\n    Card objects in the form of a CardList object.  A record-valued keyword\n    card image is represented in pyfits by a RecordValuedKeywordCard object.\n    This object inherits from a Card object and has all of the methods and\n    attributes of a Card object.\n\n  - A new RecordValuedKeywordCard object is created with the\n    RecordValuedKeywordCard constructor: RecordValuedKeywordCard(key, value,\n    comment).  The key and value arguments may be specified in two ways.  The\n    key value may be given as the 8 character keyword only, in which case the\n    value must be a character string containing the field-specifier, a colon\n    followed by a space, followed by the actual value.  The second option is\n    to provide the key as a string containing the keyword and field-specifier,\n    in which case the value must be the actual floating point value.  For\n    example:\n\n      >>> c1 = pyfits.RecordValuedKeywordCard('DP1', 'NAXIS: 2', 'Number of variables')\n      >>> c2 = pyfits.RecordValuedKeywordCard('DP1.AXIS.1', 1.0, 'Axis number')\n\n  - RecordValuedKeywordCards have attributes .key, .field_specifier, .value,\n    and .comment.  Both .value and .comment can be changed but not .key or\n    .field_specifier.  The constructor will extract the field-specifier from\n    the input key or value, whichever is appropriate.  The .key attribute is\n    the 8 character keyword.\n\n  - Just like standard Cards, a RecordValuedKeywordCard may be constructed\n    from a string using the fromstring() method or verified using the verify()\n    method.  For example:\n\n      >>> c1 = pyfits.RecordValuedKeywordCard().fromstring(\n               \"DP1     = 'NAXIS: 2' / Number of independent variables\")\n      >>> c2 = pyfits.RecordValuedKeywordCard().fromstring(\n               \"DP1     = 'AXIS.1: X' / Axis number\")\n      >>> print c1; print c2\n      DP1     = 'NAXIS: 2' / Number of independent variables\n      DP1     = 'AXIS.1: X' / Axis number\n      >>> c2.verify()\n      Output verification result:\n      Card image is not FITS standard (unparsable value string).\n\n  - A standard card that meets the criteria of a RecordValuedKeywordCard may\n    be turned into a RecordValuedKeywordCard using the class method coerce.\n    If the card object does not meet the required criteria then the original\n    card object is just returned.\n\n      >>> c1 = pyfits.Card('DP1','AUX: 1','comment')\n      >>> c2 = pyfits.RecordValuedKeywordCard.coerce(c1)\n      >>> print type(c2)\n      <'pyfits.NP_pyfits.RecordValuedKeywordCard'>\n\n  - Two other card creation methods are also available as\n    RecordVauedKeywordCard class methods.  These are createCard() which will\n    create the appropriate card object (Card or RecordValuedKeywordCard) given\n    input key, value, and comment, and createCardFromString which will create\n    the appropriate card object given an input string.  These two methods are\n    also available as convenience functions:\n\n      >>> c1 = pyfits.RecordValuedKeywordCard.createCard('DP1','AUX: 1','comment)\n\n    or\n\n      >>> c1 = pyfits.createCard('DP1','AUX: 1','comment)\n      >>> print type(c1)\n      <'pyfits.NP_pyfits.RecordValuedKeywordCard'>\n\n      >>> c1 = pyfits.RecordValuedKeywordCard.createCard('DP1','AUX 1','comment)\n\n    or\n\n      >>> c1 = pyfits.createCard('DP1','AUX 1','comment)\n      >>> print type(c1)\n      <'pyfits.NP_pyfits.Card'>\n\n      >>> c1 = pyfits.RecordValuedKeywordCard.createCardFromString \\\n               (\"DP1 = 'AUX: 1.0' / comment\")\n\n    or\n\n      >>> c1 = pyfits.createCardFromString(\"DP1     = 'AUX: 1.0' / comment\")\n      >>> print type(c1)\n      <'pyfits.NP_pyfits.RecordValuedKeywordCard'>\n\nThe following bugs were fixed:\n\n- Corrected a bug that occurs when writing a HDU out to a file.  During the\n  write, any Keyboard Interrupts are trapped so that the write completes\n  before the interrupt is handled.  Unfortunately, the Keyboard Interrupt was\n  not properly reinstated after the write completed.  This was fixed.\n  (CNSHD711138)\n\n- Corrected a bug when using ipython, where temporary files created with the\n  tempFile.NamedTemporaryFile method are not automatically removed.  This can\n  happen for instance when opening a Gzipped fits file or when open a fits\n  file over the internet.  The files will now be removed.  (CNSHD718307)\n\n- Corrected a bug in the append convenience function's call to the writeto\n  convenience function.  The classExtensions argument must be passed as a\n  keyword argument.\n\n- Corrected a bug that occurs when retrieving variable length character arrays\n  from binary table HDUs (PA() format) and using slicing to obtain rows of\n  data containing variable length arrays.  The code issued a TypeError\n  exception.  The data can now be accessed with no exceptions. (CNSHD718749)\n\n- Corrected a bug that occurs when retrieving data from a fits file opened in\n  memory map mode when the file contains multiple image extensions or ASCII\n  table or binary table HDUs.  The code issued a TypeError exception.  The\n  data can now be accessed with no exceptions.  (CNSHD707426)\n\n- Corrected a bug that occurs when attempting to get a subset of data from a\n  Binary Table HDU and then use the data to create a new Binary Table HDU\n  object.  A TypeError exception was raised.  The data can now be subsetted\n  and used to create a new HDU.  (CNSHD723761)\n\n- Corrected a bug that occurs when attempting to scale an Image HDU back to\n  its original data type using the _ImageBaseHDU.scale method.  The code was\n  not resetting the BITPIX header card back to the original data type.  This\n  has been corrected.\n\n- Changed the code to issue a KeyError exception instead of a NameError\n  exception when accessing a non-existent field in a table.\n\n\n1.3 (2008-02-22)\n------------------\n\nUpdates described in this release are only supported in the NUMPY version of\npyfits.\n\nThe following enhancements were made:\n\n- Provided support for a new extension to pyfits called *stpyfits*.\n\n  - The *stpyfits* module is a wrapper around pyfits.  It provides all of the\n    features and functions of pyfits along with some STScI specific features.\n    Currently, the only new feature supported by stpyfits is the ability to\n    read and write fits files that contain image data quality extensions with\n    constant data value arrays.  See stpyfits `[2]`_ for more details on\n    stpyfits.\n\n- Added a new feature to allow trailing HDUs to be deleted from a fits file\n  without actually reading the data from the file. \n\n  - This supports a JWST requirement to delete a trailing HDU from a file\n    whose primary Image HDU is too large to be read on a 32 bit machine.\n\n- Updated pyfits to use the warnings module to issue warnings.  All warnings\n  will still be issued to stdout, exactly as they were before, however, you\n  may now suppress warnings with the -Wignore command line option.  For\n  example, to run a script that will ignore warnings use the following command\n  line syntax:\n\n    python -Wignore yourscript.py\n\n- Updated the open convenience function to allow the input of an already\n  opened file object in place of a file name when opening a fits file.\n\n- Updated the writeto convenience function to allow it to accept the\n  output_verify option.\n\n  - In this way, the user can use the argument output_verify='fix' to allow\n    pyfits to correct any errors it encounters in the provided header before\n    writing the data to the file.\n\n- Updated the verification code to provide additional detail with a\n  VerifyError exception.\n\n- Added the capability to create a binary table HDU directly from a\n  numpy.ndarray.  This may be done using either the new_table convenience\n  function or the BinTableHDU constructor.\n\n\nThe following performance improvements were made:\n\n- Modified the import logic to dramatically decrease the time it takes to\n  import pyfits.\n\n- Modified the code to provide performance improvements when copying and\n  examining header cards.\n\nThe following bugs were fixed:\n\n- Corrected a bug that occurs when reading the data from a fits file that\n  includes BZERO/BSCALE scaling.  When the data is read in from the file,\n  pyfits automatically scales the data using the BZERO/BSCALE values in the\n  header.  In the previous release, pyfits created a 32 bit floating point\n  array to hold the scaled data.  This could cause a problem when the value of\n  BZERO is so large that the scaled value will not fit into the float 32.  For\n  this release, when the input data is 32 bit integer, a 64 bit floating point\n  array is used for the scaled data.\n\n- Corrected a bug that caused an exception to be raised when attempting to\n  scale image data using the ImageHDU.scale method.\n\n- Corrected a bug in the new_table convenience function that occurred when a\n  binary table was created using a ColDefs object as input and supplying an\n  nrows argument for a number of rows that is greater than the number of rows\n  present in the input ColDefs object.  The previous version of pyfits failed\n  to allocate the necessary memory for the additional rows.\n\n- Corrected a bug in the new_table convenience function that caused an\n  exception to be thrown when creating an ASCII table.\n\n- Corrected a bug in the new_table convenience function that will allow the\n  input of a ColDefs object that was read from a file as a binary table with a\n  data value equal to None.\n\n- Corrected a bug in the construction of ASCII tables from Column objects that\n  are created with noncontinuous start columns.\n\n- Corrected bugs in a number of areas that would sometimes cause a failure to\n  improperly raise an exception when an error occurred.\n\n- Corrected a bug where attempting to open a non-existent fits file on a\n  windows platform using a drive letter in the file specification caused a\n  misleading IOError exception to be raised.\n\n.. _[2]: http://stsdas.stsci.edu/stsci_python_sphinxdocs_2.13/tools/stpyfits.html\n\n\n1.1 (2007-06-15)\n------------------\n\n- Modified to use either NUMPY or NUMARRAY.\n\n- New file writing modes have been provided to allow streaming data to\n  extensions without requiring the whole output extension image in memory. See\n  documentation on StreamingHDU.\n\n- Improvements to minimize byteswapping and memory usage by byteswapping in\n  place.\n\n- Now supports ':' characters in filenames.\n\n- Handles keyboard interrupts during long operations.\n\n- Preserves the byte order of the input image arrays.\n\n\n1.0.1 (2006-03-24)\n--------------------\n\nThe changes to PyFITS were primarily to improve the docstrings and to\nreclassify some public functions and variables as private. Readgeis and\nfitsdiff which were distributed with PyFITS in previous releases were moved to\npytools. This release of PyFITS is v1.0.1. The next release of PyFITS will\nsupport both numarray and numpy (and will be available separately from\nstsci_python, as are all the python packages contained within stsci_python).\nAn alpha release for PyFITS numpy support will be made around the time of this\nstsci_python release.\n\n- Updated docstrings for public functions.\n\n- Made some previously public functions private.\n\n\n1.0 (2005-11-01)\n------------------\n\nMajor Changes since v0.9.6:\n\n- Added support for the HEIRARCH convention\n\n- Added support for iteration and slicing for HDU lists\n\n- PyFITS now uses the standard setup.py installation script\n\n- Add utility functions at the module level, they include:\n\n  - getheader\n  - getdata\n  - getval\n  - writeto\n  - append\n  - update\n  - info\n\nMinor changes since v0.9.6:\n\n- Fix a bug to make single-column ASCII table work.\n\n- Fix a bug so a new table constructed from an existing table with X-formatted\n  columns will work.\n\n- Fix a problem in verifying HDUList right after the open statement.\n\n- Verify that elements in an HDUList, besides the first one, are ExtensionHDU.\n\n- Add output verification in methods flush() and close().\n\n- Modify the design of the open() function to remove the output_verify\n  argument.\n\n- Remove the groups argument in GroupsHDU's constructor.\n\n- Redesign the column definition class to make its column components more\n  accessible.  Also to make it conducive for higher level functionalities,\n  e.g. combining two column definitions.\n\n- Replace the Boolean class with the Python Boolean type.  The old TRUE/FALSE\n  will still work.\n\n- Convert classes to the new style.\n\n- Better format when printing card or card list.\n\n- Add the optional argument clobber to all writeto() functions and methods.\n\n- If adding a blank card, will not use existing blank card's space.\n\nPyFITS Version 1.0 REQUIRES Python 2.3 or later.\n\n\n0.9.6 (2004-11-11)\n--------------------\n\nMajor changes since v0.9.3:\n\n- Support for variable length array tables.\n\n- Support for writing ASCII table extensions.\n\n- Support for random groups, both reading and writing.\n\nSome minor changes:\n\n- Support for numbers with leading zeros in an ASCII table extension.\n\n- Changed scaled columns' data type from Float32 to Float64 to preserve\n  precision.\n\n- Made Column constructor more flexible in accepting format specification.\n\n\n0.9.3 (2004-07-02)\n--------------------\n\nChanges since v0.9.0:\n\n- Lazy instanciation of full Headers/Cards for all HDU's when the file is\n  opened.  At the open, only extracts vital info (e.g. NAXIS's) from the\n  header parts.  This change will speed up the performance if the user only\n  needs to access one extension in a multi-extension FITS file.\n\n- Support the X format (bit flags) columns, both reading and writing, in a\n  binary table.  At the user interface, they are converted to Boolean arrays\n  for easy manipulation.  For example, if the column's TFORM is \"11X\",\n  internally the data is stored in 2 bytes, but the user will see, at each row\n  of this column, a Boolean array of 11 elements. \n\n- Fix a bug such that when a table extension has no data, it will not try to\n  scale the data when updating/writing the HDU list.\n\n\n0.9 (2004-04-27)\n------------------\n\nChanges since v0.8.0:\n\n- Rewriting of the Card class to separate the parsing and verification of\n  header cards\n\n- Restructure the keyword indexing scheme which speed up certain applications\n  (update large number of new keywords and reading a header with larger\n  numbers of cards) by a factor of 30 or more\n\n- Change the default to be lenient FITS standard checking on input and strict\n  FITS standard checking on output\n\n- Support CONTINUE cards, both reading and writing\n\n- Verification can now be performed at any of the HDUList, HDU, and Card\n  levels\n\n- Support (contiguous) subsection (attribute .section) of images to reduce\n  memory usage for large images\n\n\n0.8.0 (2003-08-19)\n--------------------\n\n**NOTE:** This version will only work with numarray Version 0.6.  In addition,\nearlier versions of PyFITS will not work with numarray 0.6.  Therefore, both\nmust be updated simultaneously.\n\nChanges since 0.7.6:\n\n- Compatible with numarray 0.6/records 2.0\n\n- For binary tables, now it is possible to update the original array if a\n  scaled field is updated.\n\n- Support of complex columns\n\n- Modify the __getitem__ method in FITS_rec.  In order to make sure the scaled\n  quantities are also viewing ths same data as the original FITS_rec, all\n  fields need to be \"touched\" when __getitem__ is called.\n\n- Add a new attribute mmobject for HDUList, and close the memmap object when\n  close HDUList object.  Earlier version does not close memmap object and can\n  cause memory lockup.\n\n- Enable 'update' as a legitimate memmap mode.\n\n- Do not print message when closing an HDUList object which is not created\n  from reading a FITS file.  Such message is confusing.\n\n- remove the internal attribute \"closed\" and related method (__getattr__ in\n  HDUList).  It is redundant.\n\n\n0.7.6 (2002-11-22)\n\n**NOTE:** This version will only work with numarray Version 0.4.\n\nChanges since 0.7.5:\n\n- Change x*=n to numarray.multiply(x, n, x) where n is a floating number, in\n  order to make pyfits to work under Python 2.2. (2 occurrences)\n\n- Modify the \"update\" method in the Header class to use the \"fixed-format\"\n  card even if the card already exists.  This is to avoid the mis-alignment as\n  shown below:\n\n  After running drizzle on ACS images it creates a CD matrix whose elements\n  have very many digits, *e.g.*:\n\n    CD1_1   =  1.1187596304411E-05 / partial of first axis coordinate w.r.t. x\n    CD1_2   = -8.502767249350019E-06 / partial of first axis coordinate w.r.t. y\n\n  with pyfits, an \"update\" on these header items and write in new values which\n  has fewer digits, *e.g.*:\n\n    CD1_1   =        1.0963011E-05 / partial of first axis coordinate w.r.t. x\n    CD1_2   =          -8.527229E-06 / partial of first axis coordinate w.r.t. y\n\n- Change some internal variables to make their appearance more consistent:\n\n    old name                new name\n        \n    __octalRegex            _octalRegex\n    __readblock()           _readblock()\n    __formatter()           _formatter().\n    __value_RE              _value_RE\n    __numr                  _numr \n    __comment_RE            _comment_RE \n    __keywd_RE              _keywd_RE \n    __number_RE             _number_RE.\n    tmpName()               _tmpName()\n    dimShape                _dimShape\n    ErrList                 _ErrList\n   \n- Move up the module description.  Move the copywright statement to the bottom\n  and assign to the variable __credits__.\n\n- change the following line:\n\n    self.__dict__ = input.__dict__\n\n  to \n\n    self.__setstate__(input.__getstate__())\n\n  in order for pyfits to run under numarray 0.4.\n\n- edit _readblock to add the (optional) firstblock argument and raise IOError\n  if the first 8 characters in the first block is not 'SIMPLE  ' or\n  'XTENSION'.  Edit the function open to check for IOError to skip the last\n  null filled block(s).  Edit readHDU to add the firstblock argument.\n\n\n0.7.5 (2002-08-16)\n--------------------\n\nChanges since v0.7.3:\n\n- Memory mapping now works for readonly mode, both for images and binary\n  tables.\n\n  Usage:  pyfits.open('filename', memmap=1)\n\n- Edit the field method in FITS_rec class to make the column scaling for\n  numbers use less temporary memory.  (does not work under 2.2, due to Python\n  \"bug\" of array \\*=)\n\n- Delete bscale/bzero in the ImageBaseHDU constructor.\n\n- Update bitpix in BaseImageHDU.__getattr__  after deleting bscale/bzero. (bug\n  fix)\n\n- In BaseImageHDU.__getattr__  point self.data to raw_data if float and if not\n  memmap.  (bug fix).\n\n- Change the function get_tbdata() to private: _get_tbdata().\n\n\n0.7.3 (2002-07-12)\n--------------------\n\nChanges since v0.7.2:\n\n- It will scale all integer image data to Float32, if BSCALE/BZERO != 1/0.  It\n  will also expunge the BSCALE/BZERO keywords.\n\n- Add the scale() method for ImageBaseHDU, so data can be scaled just before\n  being written to the file.  It has the following arguments:\n\n  type: destination data type (string), e.g. Int32, Float32, UInt8, etc.\n\n  option: scaling scheme. if 'old', use the old BSCALE/BZERO values.  if\n  'minmax', use the data range to fit into the full range of specified integer\n  type.  Float destination data type will not be scaled for this option.\n\n  bscale/bzero: user specifiable BSCALE/BZERO values.  They overwrite the\n  \"option\".\n\n- Deal with data area resizing in 'update' mode.\n\n- Make the data scaling (both input and output) faster and use less memory.\n\n- Bug fix to make column name change takes effect for field.\n\n- Bug fix to avoid exception if the key is not present in the header already.\n  This affects (fixes) add_history(), add_comment(), and add_blank().\n\n- Bug fix in __getattr__() in Card class.  The change made in 0.7.2 to rstrip\n  the comment must be string type to avoid exception.\n\n0.7.2.1 (2002-06-25)\n----------------------\n\nA couple of bugs were addressed in this version. \n\n- Fix a bug in _add_commentary(). Due to a change in index_of() during version\n  0.6.5.5, _add_commentary needs to be modified to avoid exception if the key\n  is not present in the header already. This affects (fixes) add_history(),\n  add_comment(), and add_blank(). \n\n- Fix a bug in __getattr__() in Card class. The change made in 0.7.2 to rstrip\n  the comment must be string type to avoid exception.\n\n\n0.7.2 (2002-06-19)\n--------------------\n\nThe two major improvements from Version 0.6.2 are: \n\n- support reading tables  with \"scaled\" columns (e.g.  tscal/tzero, Boolean,\n  and ASCII tables)\n\n- a prototype output verification.\n\nThis version of PyFITS requires numarray version 0.3.4. \n\nOther changes include: \n\n- Implement the new HDU hierarchy proposed earlier this year.  This in turn\n  reduces some of the redundant methods common to several HDU classes. \n \n- Add 3 new methods to the Header class: add_history, add_comment, and\n  add_blank.\n\n- The table attributes _columns are now .columns and the attributes in ColDefs\n  are now all without the underscores.  So, a user can get a list of column\n  names by: hdu.columns.names. \n\n- The \"fill\" argument in the new_table method now has a new meaning:<br> If\n  set to true (=1), it will fill the entire new table with zeros/blanks.\n  Otherwise (=0), just the extra rows/cells are filled with zeros/blanks.\n  Fill values other than zero/blank are now not possible. \n\n- Add the argument output_verify to the open method and writeto method.  Not\n  in the flush or close methods yet, due to possible complication. \n\n- A new copy method for tables, the copy is totally independent from the table\n  it copies from. \n\n- The tostring() call in writeHDUdata takes up extra space to store the string\n  object.  Use tofile() instead, to save space. \n\n- Make changes from _byteswap to _byteorder, following corresponding changes\n  in numarray and recarray. \n\n- Insert(update) EXTEND in PrimaryHDU only when header is None. \n\n- Strip the trailing blanks for the comment value of a card. \n\n- Add seek(0) right after the __buildin__.open(0), because for the 'ab+' mode,\n  the pointer is at the end after open in Linux, but it is at the beginning in\n  Solaris. \n\n- Add checking of data against header, update header keywords (NAXIS's,\n  BITPIX) when they don't agree with the data. \n\n- change version to __version__. \n\nThere are also many other minor internal bug fixes and\ntechnical changes. \n\n\n0.6.2 (2002-02-12)\n--------------------\n\nThis version requires numarray version 0.2. \n\nThings not yet supported but are part of future development: \n\n- Verification and/or correction of FITS objects being written to disk so that\n  they are legal FITS. This is being added now and should be available in\n  about a month.  Currently, one may construct FITS headers that are\n  inconsistent with the data and write such FITS objects to disk. Future\n  versions will provide options to either a) correct discrepancies and warn,\n  b) correct discrepancies silently, c) throw a Python exception, or d) write\n  illegal FITS (for test purposes!).\n\n- Support for ascii tables or random groups format. Support for ASCII tables\n  will be done soon (~1 month). When random group support is added is\n  uncertain.\n\n- Support for memory mapping FITS data (to reduce memory demands). We expect\n  to provide this capability in about 3 months.\n\n- Support for columns in binary tables having scaled values (e.g. BSCALE or\n  BZERO) or boolean values. Currently booleans are stored as Int8 arrays and\n  users must explicitly convert them into a boolean array. Likewise, scaled\n  columns must be copied with scaling and offset by testing for those\n  attributes explicitly. Future versions will produce such copies\n  automatically.\n\n- Support for tables with TNULL values. This awaits an enhancement to numarray\n  to support mask arrays (planned).  (At least a couple of months off).",
    "docs_url": "https://pythonhosted.org/pyfits/",
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://www.stsci.edu/resources/software_hardware/pyfits",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pyfits",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pyfits/",
    "release_url": "https://pypi.org/project/pyfits/3.4/",
    "requires_python": null,
    "summary": "Reads FITS images and tables into numpy arrays and manipulates FITS headers",
    "version": "3.4"
  },
  "releases": {
    "2.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "407ad45cb09a8375a8e4ff2356094eec",
          "sha256": "ac2eabc8bd8ce3a18c3f4e82df3e98bf6df69ca0334cc5d8604c14527de2344b"
        },
        "downloads": 3854,
        "filename": "pyfits-2.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "407ad45cb09a8375a8e4ff2356094eec",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 234305,
        "upload_time": "2011-03-08T15:07:02",
        "url": "https://files.pythonhosted.org/packages/03/4d/06bb1659a97cb87181e419391e1a7e5856ff09695ad0275efede177bae27/pyfits-2.3.1.tar.gz"
      }
    ],
    "2.4.0": [
      {
        "comment_text": "New source package--includes previously missing header files",
        "digests": {
          "md5": "d14d0c62a15992ca84671d41d5703493",
          "sha256": "819146f394a362ad516bbf1c3c77835abe8df1672857b5ff99c36965505a414a"
        },
        "downloads": 5890,
        "filename": "pyfits-2.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d14d0c62a15992ca84671d41d5703493",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 281940,
        "upload_time": "2011-05-05T17:12:28",
        "url": "https://files.pythonhosted.org/packages/08/9c/f2f99b70eee365d9d551b3867431ef3c943b7128f664cfaab9880c0c3d0f/pyfits-2.4.0.tar.gz"
      }
    ],
    "3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5182a766e2557dcdd85a51169f3b5e62",
          "sha256": "2325e8fe9769f4c23702549627f2a84afc2283d9810c74d4be1e6c38a13205db"
        },
        "downloads": 3988,
        "filename": "pyfits-3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5182a766e2557dcdd85a51169f3b5e62",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 710511,
        "upload_time": "2011-08-24T22:18:47",
        "url": "https://files.pythonhosted.org/packages/bf/5d/baaa216f33b506f3449e9a7bf568c02984dddd281c9e8b292d6df5ac0841/pyfits-3.0.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5a2df0ac0be87b048ecf4b9fe184ed43",
          "sha256": "c183c1781fdb152d4445b18b89284e53b9ea377b666cf5b82e4b52a69ee831b1"
        },
        "downloads": 3368,
        "filename": "pyfits-3.0.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "5a2df0ac0be87b048ecf4b9fe184ed43",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 484510,
        "upload_time": "2011-08-24T22:26:27",
        "url": "https://files.pythonhosted.org/packages/23/77/71a373b30566b32891bb0a955b1f7281249941fae876bb74526ea262c7a9/pyfits-3.0.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9e114bf2c439092512cc4c2a6178d387",
          "sha256": "31131ae04856fba659158959a758b3f2e9e1ee08d77ee9d09d46cb222cd12609"
        },
        "downloads": 3289,
        "filename": "pyfits-3.0.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "9e114bf2c439092512cc4c2a6178d387",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 619570,
        "upload_time": "2011-09-02T01:40:04",
        "url": "https://files.pythonhosted.org/packages/54/ff/6f2e7d18615ecfb311f24d754e440b063f483c0b9b70b8103e8bc025341b/pyfits-3.0.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "196de64989a8493625a41cce9517598e",
          "sha256": "f248793ca6cb697b63fa367daf9e09133800fd5b2af45b4f8a99f87654306c67"
        },
        "downloads": 3594,
        "filename": "pyfits-3.0.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "196de64989a8493625a41cce9517598e",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 619558,
        "upload_time": "2011-08-24T22:50:02",
        "url": "https://files.pythonhosted.org/packages/fa/aa/7744a2b4d7b407755ed005e46c70e05e1b8c41481b2e9ffb3aa9f076a7d6/pyfits-3.0.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b7f2bd3fdc46f08ac137df6416932dbf",
          "sha256": "f5007ce63507b7b064cc24812fa689760baf9c34d33feb4ff3bf9926b640941b"
        },
        "downloads": 3522,
        "filename": "pyfits-3.0.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "b7f2bd3fdc46f08ac137df6416932dbf",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 620028,
        "upload_time": "2011-08-24T23:05:12",
        "url": "https://files.pythonhosted.org/packages/ea/66/386558e3c310fe1c7522348a6dc2079659546dc4449664588894f97ac521/pyfits-3.0.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c4d3bd1d6bafc314a8527e110ad1f742",
          "sha256": "1d9fb06d84dbb8c06630460f211951d398ec1c3004c4ee397ee752cdb2591c15"
        },
        "downloads": 3303,
        "filename": "pyfits-3.0.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "c4d3bd1d6bafc314a8527e110ad1f742",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 620022,
        "upload_time": "2011-08-24T23:08:24",
        "url": "https://files.pythonhosted.org/packages/07/c5/68a4d26ba44330df3a74d53104843779e7f4fe151d398eec6d3a7f5b7b9d/pyfits-3.0.win32-py3.2.exe"
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3e65f78484e10b69c9ea6c43548adb05",
          "sha256": "fab4d4c731585142c0964826495b1915270df2ca05944296eb7dc7d25f9358c4"
        },
        "downloads": 4046,
        "filename": "pyfits-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3e65f78484e10b69c9ea6c43548adb05",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 712969,
        "upload_time": "2011-09-12T21:43:24",
        "url": "https://files.pythonhosted.org/packages/47/bd/ca35f4cf252bc5455a710498598ecff6e74236bec769f5a89c7564d557bf/pyfits-3.0.1.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "660dbef21f8b8bc6736ec15aafe39652",
          "sha256": "340f3a94eb3aecb369342b9efed36682a7a01d83ad8a4d9b59c9633550f08c9c"
        },
        "downloads": 3271,
        "filename": "pyfits-3.0.1.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "660dbef21f8b8bc6736ec15aafe39652",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 490890,
        "upload_time": "2011-09-12T22:16:49",
        "url": "https://files.pythonhosted.org/packages/57/f4/ddfca35a5efa6831adabd38973d8e7306d4d4811571bac4d558ec3666a5e/pyfits-3.0.1.win32-py2.5.exe"
      },
      {
        "comment_text": "reportedly has problems on some systems; please let us know if you have problems with this build",
        "digests": {
          "md5": "7c460e922b1293aa204441bd1d2ea689",
          "sha256": "29cc188071a2eb7183a170196049fa5080093708735da0a6aa21bd9eb8c65ea2"
        },
        "downloads": 3323,
        "filename": "pyfits-3.0.1.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "7c460e922b1293aa204441bd1d2ea689",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 625946,
        "upload_time": "2011-09-12T22:17:39",
        "url": "https://files.pythonhosted.org/packages/77/0c/fbc79a9ec48dd157cd1d70000be69931bd1cfc54cfd0cf4a91ab62afcc21/pyfits-3.0.1.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6970e5b8913f75311935f6971f7913ef",
          "sha256": "2521753d0ec2fd9258432234d0bd885a524fc7010a1d651af8d53e6b9a29f605"
        },
        "downloads": 3418,
        "filename": "pyfits-3.0.1.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "6970e5b8913f75311935f6971f7913ef",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 625932,
        "upload_time": "2011-09-12T22:17:56",
        "url": "https://files.pythonhosted.org/packages/32/e4/5ee944adebc69d4d92017af2620a6929667b4999ddc2fb1edeebedb0c729/pyfits-3.0.1.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3a09bdc54c1982e6aa9b06a286fa4817",
          "sha256": "01f080bb5d5f453bfd002bd6eded2d2f4d7932026c704d379b43030990dfb55c"
        },
        "downloads": 3271,
        "filename": "pyfits-3.0.1.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "3a09bdc54c1982e6aa9b06a286fa4817",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 626413,
        "upload_time": "2011-09-12T22:18:22",
        "url": "https://files.pythonhosted.org/packages/86/6b/79a4f82d2a5fde05229adb09bb4a59d058b08369e7dab4e1f4c234882195/pyfits-3.0.1.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3b1f43dd99947eefc90d96d9f89ab00b",
          "sha256": "1703f6c0858b93eb7474ff3175c3e4e37fadca800784339fc07015e47fffbf4d"
        },
        "downloads": 3306,
        "filename": "pyfits-3.0.1.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "3b1f43dd99947eefc90d96d9f89ab00b",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 626408,
        "upload_time": "2011-09-12T22:18:48",
        "url": "https://files.pythonhosted.org/packages/bf/7d/a349757034c0c3375b871b1ba5f1e0ea2a01038e79ec8a004782a33ab10d/pyfits-3.0.1.win32-py3.2.exe"
      }
    ],
    "3.0.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "67f4a9cd0cd428e4b0cddfd37fb09838",
          "sha256": "ab641bde77422dddb6e3ae64a69a7da98b1d219ce72210ae28bc21343ed5c490"
        },
        "downloads": 2723,
        "filename": "pyfits-3.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "67f4a9cd0cd428e4b0cddfd37fb09838",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 713734,
        "upload_time": "2013-01-04T15:45:43",
        "url": "https://files.pythonhosted.org/packages/84/eb/41a729331cc20434124e33bbc265d143f504612d991be8d5521f85cc8e3a/pyfits-3.0.10.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "897f85cbcc7ed0c42b6944e76707fb8e",
          "sha256": "fa82d15e8c0884c91cac3bfc064036d07ab793415fa3c2c39ea84c1cd529fe23"
        },
        "downloads": 2640,
        "filename": "pyfits-3.0.10.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "897f85cbcc7ed0c42b6944e76707fb8e",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 575814,
        "upload_time": "2013-01-02T19:46:06",
        "url": "https://files.pythonhosted.org/packages/29/da/6d3c600e041a71b8c24ee6293b016f1ba60cef98759e764f89807d89a02b/pyfits-3.0.10.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3205aadf0656ea1874157690a5390016",
          "sha256": "eeed4dc1f46be778adbe5f7fc086d1cbc14fd590ec2ce697bc85e5ef16bc4e0f"
        },
        "downloads": 2636,
        "filename": "pyfits-3.0.10.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "3205aadf0656ea1874157690a5390016",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 710931,
        "upload_time": "2013-01-02T19:46:35",
        "url": "https://files.pythonhosted.org/packages/35/70/76a61bcaa603fcb8f5ffcd12969476dc171218ef80d3f9ae60f5cb9ae21a/pyfits-3.0.10.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3cbc36e46b699ab0985e78ab4d229966",
          "sha256": "61cb220867021aa22a18c76e7ae1d34228a15195f765d40fcea47721daf66e52"
        },
        "downloads": 2683,
        "filename": "pyfits-3.0.10.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "3cbc36e46b699ab0985e78ab4d229966",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 710927,
        "upload_time": "2013-01-02T19:45:40",
        "url": "https://files.pythonhosted.org/packages/46/04/77798749b6930bb503465952c5f550eda2afcb57107319f2f0a2280cbb58/pyfits-3.0.10.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ef0ded84f74283e17dad78b857a525f7",
          "sha256": "56feb7bc9e54440072bfead61ebe487b3488ede85da0ee5afd9a850279d394ff"
        },
        "downloads": 2682,
        "filename": "pyfits-3.0.10.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "ef0ded84f74283e17dad78b857a525f7",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 711607,
        "upload_time": "2013-01-02T19:47:20",
        "url": "https://files.pythonhosted.org/packages/13/21/6b3761a7b21c67ee86d18137a9408264c54d3de6a94c97b58015332e46e9/pyfits-3.0.10.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ff8b4d9db5c58f8827230cf8754c8fd3",
          "sha256": "87d723e2af66f8778c9d7f444a716cb8f6e7cab3c80a45db6937990b59a4d3dd"
        },
        "downloads": 2652,
        "filename": "pyfits-3.0.10.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "ff8b4d9db5c58f8827230cf8754c8fd3",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 711597,
        "upload_time": "2013-01-02T19:48:21",
        "url": "https://files.pythonhosted.org/packages/b8/67/c080d8168ab8d00860371dced44a461069c38be6660274ef0a0150f4797a/pyfits-3.0.10.win32-py3.2.exe"
      }
    ],
    "3.0.11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bc9f7c3f02541e6fb46f0328039cdce6",
          "sha256": "91bcedba30423af1a9b71e83a1ac9013dd7b380a3e3933db6e6290a0f0c528e9"
        },
        "downloads": 2816,
        "filename": "pyfits-3.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "bc9f7c3f02541e6fb46f0328039cdce6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 720660,
        "upload_time": "2013-04-17T18:54:42",
        "url": "https://files.pythonhosted.org/packages/6d/e7/1e9637f901dfbf37657ac5886433a5043ef5326dba05867b7e29bc619bec/pyfits-3.0.11.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b4e12ee62cf9bc809a0d6ce8cd0b442f",
          "sha256": "44cd2ddb2f15be8628482b4717c111c3753e65548e97a9e6c138aee3c1db7e72"
        },
        "downloads": 2547,
        "filename": "pyfits-3.0.11.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "b4e12ee62cf9bc809a0d6ce8cd0b442f",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 589688,
        "upload_time": "2013-04-22T17:56:41",
        "url": "https://files.pythonhosted.org/packages/f1/36/fc5f4a4e7ab321416df688764b6ab0085674da1c97bf2daca2b662f8d8f6/pyfits-3.0.11.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "af832e080db9e8362ad9c9dec647ed1c",
          "sha256": "8ef581adf18668f16c94bd669fce79adf08cdce60fb3964873e477d17c0a4acc"
        },
        "downloads": 2810,
        "filename": "pyfits-3.0.11.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "af832e080db9e8362ad9c9dec647ed1c",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 724830,
        "upload_time": "2013-04-22T17:57:23",
        "url": "https://files.pythonhosted.org/packages/99/bf/ea8b8ad538371509a267ab1e6c040502f29dc0c893499d3f5744c9156be2/pyfits-3.0.11.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "907a50212d8f62116322be487372e030",
          "sha256": "4232db2ffcb42286aa64619ce1fbb4b97fa12d9c2fb52b1bc0d0ff53fa73195b"
        },
        "downloads": 2604,
        "filename": "pyfits-3.0.11.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "907a50212d8f62116322be487372e030",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 724838,
        "upload_time": "2013-04-22T17:57:48",
        "url": "https://files.pythonhosted.org/packages/05/48/ae559b43e210ae55f681e9ef1a9f998a09f3ec439c2f5aed655e8609d0d8/pyfits-3.0.11.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "29567a5f4a935f1afa1157990b581657",
          "sha256": "31787a2a21212bf8ef2e268993e00d296208974a91fe43ec1566d5555f7807e6"
        },
        "downloads": 2575,
        "filename": "pyfits-3.0.11.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "29567a5f4a935f1afa1157990b581657",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 725634,
        "upload_time": "2013-04-22T17:58:56",
        "url": "https://files.pythonhosted.org/packages/de/3a/2a45763e80c6e52245cc305a4e275c3297420323a72736439c9ddd7173b7/pyfits-3.0.11.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "54cd979540db66d81488b01a9bd2ec31",
          "sha256": "c108d62801faedfe2605cc95c9415868b6876ff0fb27ad55d0feac42903dee5b"
        },
        "downloads": 2535,
        "filename": "pyfits-3.0.11.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "54cd979540db66d81488b01a9bd2ec31",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 725628,
        "upload_time": "2013-04-22T18:01:12",
        "url": "https://files.pythonhosted.org/packages/62/9e/8814ade1cbc768130aa1619cbe26db9bcedd401ff53e1cf88f0b8db0607c/pyfits-3.0.11.win32-py3.2.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2df18e239f0021a54351a2a3e014485d",
          "sha256": "8aea33eb4a2aa1e5ab9ef0aeee8ffeabc5c5ac7041a3fba4c043f6b91efe3ceb"
        },
        "downloads": 2591,
        "filename": "pyfits-3.0.11.win32-py3.3.exe",
        "has_sig": false,
        "md5_digest": "2df18e239f0021a54351a2a3e014485d",
        "packagetype": "bdist_wininst",
        "python_version": "3.3",
        "size": 720513,
        "upload_time": "2013-04-22T18:01:59",
        "url": "https://files.pythonhosted.org/packages/51/5b/6734bac6a269ab13d61c825d939b2d1a0efbe30b01972261f3c15e90d429/pyfits-3.0.11.win32-py3.3.exe"
      }
    ],
    "3.0.12": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f30c90f3ba2730a4343e72de16b021de",
          "sha256": "8c23dfc9b87139a93d8a709d1d27de36a77e70b8be8ada9e1109f8d1a18b9800"
        },
        "downloads": 2004,
        "filename": "pyfits-3.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "f30c90f3ba2730a4343e72de16b021de",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 730697,
        "upload_time": "2013-11-26T17:04:20",
        "url": "https://files.pythonhosted.org/packages/6c/ba/980969aae0c4dc01678e977edcc0736261db815bc18e0cb4778ae8fe130b/pyfits-3.0.12.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f66e08f9a0e852ed4542f2ac11e1e857",
          "sha256": "2be24c397107a1141de2ca835166a99bca98ecf55711fa6eafd857168d4c174d"
        },
        "downloads": 1885,
        "filename": "pyfits-3.0.12.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "f66e08f9a0e852ed4542f2ac11e1e857",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 596341,
        "upload_time": "2013-11-26T19:24:36",
        "url": "https://files.pythonhosted.org/packages/0c/01/afb4df839d208645848dede006595530460486f3e694f6430ce617a7d626/pyfits-3.0.12.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "cad33c4b0d6c785372f255c0f908b516",
          "sha256": "ee9a023ef1b03bded740f0abd6a235aae9e2176c4353c9cc4af1f78b5ea0c46b"
        },
        "downloads": 1873,
        "filename": "pyfits-3.0.12.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "cad33c4b0d6c785372f255c0f908b516",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 731492,
        "upload_time": "2013-11-26T19:26:47",
        "url": "https://files.pythonhosted.org/packages/be/9c/fba38e7bec94b46a93e83d481f3f04cc17b10d619fad2f62941c13c5897c/pyfits-3.0.12.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f1760ae9c6fce828ff317d4ad5179568",
          "sha256": "086785bc9198e23cc2c290287d839852a02dc1b0ae1d919badf086a09d3a87fa"
        },
        "downloads": 1907,
        "filename": "pyfits-3.0.12.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "f1760ae9c6fce828ff317d4ad5179568",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 730847,
        "upload_time": "2013-11-26T19:27:30",
        "url": "https://files.pythonhosted.org/packages/34/55/76c64e1451ef0a57b7bb82d904ffb343afeccbcf1a312ff28af4e3a6702b/pyfits-3.0.12.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "475bfc02f0092040b68be567549d294b",
          "sha256": "8bf9928cda4fbc28afc326d05a4ac3bd8b2fa1621661329b4c5ffd9c15248c2e"
        },
        "downloads": 1879,
        "filename": "pyfits-3.0.12.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "475bfc02f0092040b68be567549d294b",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 732217,
        "upload_time": "2013-11-26T19:28:07",
        "url": "https://files.pythonhosted.org/packages/b4/ba/6a9ad6a4b906a381c0d290d575a4b02c355a2fb0686badb1b46ed4009f3a/pyfits-3.0.12.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9fde1e28cc72d655b5f21dcd82a9b65b",
          "sha256": "9683da7ee07fab18d5e119b6e8c232618320eb3a2d24683a08551312d9c8f9fe"
        },
        "downloads": 1885,
        "filename": "pyfits-3.0.12.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "9fde1e28cc72d655b5f21dcd82a9b65b",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 731569,
        "upload_time": "2013-11-26T19:31:12",
        "url": "https://files.pythonhosted.org/packages/cb/f5/512b2094f974ab2ec74e1ef6a4c4bf22bffaed72365d7865ad47f0cfc952/pyfits-3.0.12.win32-py3.2.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "581da20888c5595b16b51e36b5784e6a",
          "sha256": "fff05818a22e3d85d3a0d7bcfcf54e75b8dc71f0005da8d3f084419d92df9b90"
        },
        "downloads": 1902,
        "filename": "pyfits-3.0.12.win32-py3.3.exe",
        "has_sig": false,
        "md5_digest": "581da20888c5595b16b51e36b5784e6a",
        "packagetype": "bdist_wininst",
        "python_version": "3.3",
        "size": 726453,
        "upload_time": "2013-11-26T19:39:29",
        "url": "https://files.pythonhosted.org/packages/b7/a9/119b6660310a0c4721c8f04b3b1afe9f316c20519c56120da9be0b3ce24d/pyfits-3.0.12.win32-py3.3.exe"
      }
    ],
    "3.0.13": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a3cd4b9b1bb65e3ccd7f105786217230",
          "sha256": "53bb6338ca3749e62345b87d1e24a192d2e2641e96e553ef39a8c35a112aa0ed"
        },
        "downloads": 2110,
        "filename": "pyfits-3.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "a3cd4b9b1bb65e3ccd7f105786217230",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 744639,
        "upload_time": "2014-03-04T22:31:22",
        "url": "https://files.pythonhosted.org/packages/af/bb/8caf23b3e0aeed1776d95672b38f29104c6dbfa5bf5ad72b0f88956ab383/pyfits-3.0.13.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d04f5a3599e9f3ca8a01e862bae47f26",
          "sha256": "36dab3bade87a0c179c9333edcb5c3ed6ce8addf2cd5823dcfdedb7f537f1555"
        },
        "downloads": 1812,
        "filename": "pyfits-3.0.13.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "d04f5a3599e9f3ca8a01e862bae47f26",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 613089,
        "upload_time": "2014-03-25T19:21:25",
        "url": "https://files.pythonhosted.org/packages/dc/5a/a7e6ce26f9b7f844512dd03bc5d3d31f251b0e489ec3542199e6ff4a2d40/pyfits-3.0.13.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3e4fb5a7b28f0fdd9683b4d7aed0445f",
          "sha256": "9675649fdba65046360819648f43a024b2788453e48877ff693b957d55b49b9c"
        },
        "downloads": 1863,
        "filename": "pyfits-3.0.13.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "3e4fb5a7b28f0fdd9683b4d7aed0445f",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 748277,
        "upload_time": "2014-03-05T17:56:25",
        "url": "https://files.pythonhosted.org/packages/ba/e0/81fe9e65cab41608ff8353b85cdd5894131f27e6ce050a8d1235d205d7b9/pyfits-3.0.13.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d993db56f1efbc6d3525e50565390145",
          "sha256": "17ebd7166cf31cac2a971c379af33bdae7827041adaad4457ef1659383e48899"
        },
        "downloads": 1974,
        "filename": "pyfits-3.0.13.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "d993db56f1efbc6d3525e50565390145",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 747647,
        "upload_time": "2014-03-05T17:56:49",
        "url": "https://files.pythonhosted.org/packages/fa/80/11618cebe492fcb0467c8310b4f7ad49f34a2acada52873f3bf958f2c90e/pyfits-3.0.13.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ca5db7fcaadceafc3b5154f6ce5fe036",
          "sha256": "b7747de43d552f972f783b3d13143353cb7eac6b2a6b301fb0e5474fa68d0fbc"
        },
        "downloads": 1858,
        "filename": "pyfits-3.0.13.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "ca5db7fcaadceafc3b5154f6ce5fe036",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 748987,
        "upload_time": "2014-03-05T17:57:21",
        "url": "https://files.pythonhosted.org/packages/62/40/48eb65e76ee347dee4bd9046091472dbf67934aa490f4545212db0c29148/pyfits-3.0.13.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "212ab63716435f638b4141c5fcb5f910",
          "sha256": "dde843aaa59c7ff1c764c66cf955a6d62bbf217de6d97276bb9dfa8801b7dc6c"
        },
        "downloads": 1866,
        "filename": "pyfits-3.0.13.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "212ab63716435f638b4141c5fcb5f910",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 748356,
        "upload_time": "2014-03-05T17:57:54",
        "url": "https://files.pythonhosted.org/packages/ce/18/7c6e5450b0406a6fac5413941145425256a7035c4823dadd2a1d97b478a3/pyfits-3.0.13.win32-py3.2.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "10994feee002b8d1974b5b10600f2162",
          "sha256": "e8347909296823b5b61fb3fec07d6feab026b87a8942e9def680cfdf18dd70cc"
        },
        "downloads": 1940,
        "filename": "pyfits-3.0.13.win32-py3.3.exe",
        "has_sig": false,
        "md5_digest": "10994feee002b8d1974b5b10600f2162",
        "packagetype": "bdist_wininst",
        "python_version": "3.3",
        "size": 743241,
        "upload_time": "2014-03-05T17:58:51",
        "url": "https://files.pythonhosted.org/packages/73/69/1018095904fa4f10ad99793a290a3d20605382f56f60160c730f0f845570/pyfits-3.0.13.win32-py3.3.exe"
      }
    ],
    "3.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c190a9ce5a405aa4568ea9f224878b2b",
          "sha256": "47b482cd311884363246cdb9b47a466fb74ab8b9584a5ed16400769234f0a552"
        },
        "downloads": 3739,
        "filename": "pyfits-3.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c190a9ce5a405aa4568ea9f224878b2b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 649836,
        "upload_time": "2011-09-24T00:31:02",
        "url": "https://files.pythonhosted.org/packages/7b/ca/16db39bb0239abed526abcf432fbe43dfd9857654ccf63804533ec48800a/pyfits-3.0.2.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "933a061d87aafa6bf4465f2682c4c1bc",
          "sha256": "229d670d4e0668b1b393d6e16c584025dbe40a6494518f0ec85172e95f72e6ef"
        },
        "downloads": 3161,
        "filename": "pyfits-3.0.2.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "933a061d87aafa6bf4465f2682c4c1bc",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 507404,
        "upload_time": "2011-10-08T00:24:58",
        "url": "https://files.pythonhosted.org/packages/02/3d/e64ce2528f6fa1c6a422a16b17dea8b31d3fc1b2e47d3e686e55bc36327a/pyfits-3.0.2.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d22a91aeeaf5b26596561c8061b8728e",
          "sha256": "7ef1e062a97f348701886b9fdf254e7bd384407c525ef8dacc9d7172a0763d1b"
        },
        "downloads": 3169,
        "filename": "pyfits-3.0.2.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "d22a91aeeaf5b26596561c8061b8728e",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 642471,
        "upload_time": "2011-10-08T00:25:10",
        "url": "https://files.pythonhosted.org/packages/28/48/67695bd34a1a26c7dc275b59678dea875f2819a0f9e8736301ed5b8c04aa/pyfits-3.0.2.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "39c9dfa30bd61a158fafcd0bc200faaa",
          "sha256": "3f0544fc14e85436e4b113f8bd25f56449e3c3eacfc63ac90d31faf67c1002d2"
        },
        "downloads": 3141,
        "filename": "pyfits-3.0.2.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "39c9dfa30bd61a158fafcd0bc200faaa",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 642469,
        "upload_time": "2011-10-08T00:25:22",
        "url": "https://files.pythonhosted.org/packages/7b/70/0547594062ae0d6d17677ab2cb2ec8ce3db26cfef444911224469590861a/pyfits-3.0.2.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "68674fabe73535709b075f9294bc14a0",
          "sha256": "67ab560c0c92c5c153df1fd24caaa92b9876066bb67d2aef4874f64e614581d7"
        },
        "downloads": 3195,
        "filename": "pyfits-3.0.2.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "68674fabe73535709b075f9294bc14a0",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 643028,
        "upload_time": "2011-10-08T00:25:36",
        "url": "https://files.pythonhosted.org/packages/60/cb/52106ec0712d163f3035ef754d92334cccfb1db124c5a9e3ca0537c14d33/pyfits-3.0.2.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "600ec26821ed9af3589eea088fc08638",
          "sha256": "dae1f90e685590363e4c7640dfddb68437edec097463f91f89599d7f8c375d21"
        },
        "downloads": 3185,
        "filename": "pyfits-3.0.2.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "600ec26821ed9af3589eea088fc08638",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 643023,
        "upload_time": "2011-10-08T00:25:55",
        "url": "https://files.pythonhosted.org/packages/f1/0b/5a8fc0db3e2f972744a836f89ca0481296850b12504ab9930aa676413fe1/pyfits-3.0.2.win32-py3.2.exe"
      }
    ],
    "3.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0edc6f59ca291e0447032b9b72fcfb37",
          "sha256": "61b35b13c1764ab4b88292269c6797525927ad0eb2556c7013199eae5281100c"
        },
        "downloads": 4719,
        "filename": "pyfits-3.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0edc6f59ca291e0447032b9b72fcfb37",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 653306,
        "upload_time": "2011-10-05T20:26:21",
        "url": "https://files.pythonhosted.org/packages/c9/77/2466291ea5cded890f7557061d359eab41780b8b5d6491161f20cb17cbb4/pyfits-3.0.3.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2bcd30679613bbbdf651ff48a04edbc4",
          "sha256": "eba1d0ffb9a0fafc054d028592c8118d4946f75c9f4b40f22beec1309c41558d"
        },
        "downloads": 3257,
        "filename": "pyfits-3.0.3.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "2bcd30679613bbbdf651ff48a04edbc4",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 511559,
        "upload_time": "2011-10-08T00:27:29",
        "url": "https://files.pythonhosted.org/packages/54/50/c09e62e17862d3aa29331d253d189d5ec894d2ced9869e1ddac85439c512/pyfits-3.0.3.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3d846305161131ec44bb974a5b2d2091",
          "sha256": "7062b06dd9a0b428277dd6dbb59b99415ec2dc3e9a162407cf7f0a7430a4a46d"
        },
        "downloads": 3277,
        "filename": "pyfits-3.0.3.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "3d846305161131ec44bb974a5b2d2091",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 646626,
        "upload_time": "2011-10-08T00:27:44",
        "url": "https://files.pythonhosted.org/packages/57/c0/c05cb7ae2414856368511392255f347bc76d828f9b7e3046fe0b1ec3b0b9/pyfits-3.0.3.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f59bb78f4c11ef7718b659c4ae5a2d31",
          "sha256": "44885b37dc1a16680be29fc54a7dc454c4f49bbe28facf6a8543a3baf6ac0edb"
        },
        "downloads": 3473,
        "filename": "pyfits-3.0.3.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "f59bb78f4c11ef7718b659c4ae5a2d31",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 646624,
        "upload_time": "2011-10-08T00:27:56",
        "url": "https://files.pythonhosted.org/packages/c2/2b/63e9bbd538ddd5aab890e6e9daa1701963dd02426cff86298eff2f445aba/pyfits-3.0.3.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "262a140d481fd06c7160e7d39e8dde25",
          "sha256": "436e8af2815910df1b60e30419effdb31e414db9dea254d9c536b3002c8a7667"
        },
        "downloads": 3245,
        "filename": "pyfits-3.0.3.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "262a140d481fd06c7160e7d39e8dde25",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 647311,
        "upload_time": "2011-10-08T00:28:11",
        "url": "https://files.pythonhosted.org/packages/66/05/b6066548b5edef4c40e8d81e517e7e08922f392ba255cb5fb77bb4a3ad85/pyfits-3.0.3.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5c41dbac4759dbb86d2e0e353d14f6b1",
          "sha256": "3f7129e9b344923f85f6a3272380f49e2a687e83ade5a6b8b3b27cdef694dff2"
        },
        "downloads": 3263,
        "filename": "pyfits-3.0.3.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "5c41dbac4759dbb86d2e0e353d14f6b1",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 647303,
        "upload_time": "2011-10-08T00:28:31",
        "url": "https://files.pythonhosted.org/packages/35/47/b9b5f0613afab9c1496e01caed2d086c8620c18a5a503ae058d59821f0bd/pyfits-3.0.3.win32-py3.2.exe"
      }
    ],
    "3.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7860aac5d04c979360851bece55827d1",
          "sha256": "fd8fbf89727a0e5d7aa38a83a408b120cb0e590de2afa7ceac699e0c4a6e57dc"
        },
        "downloads": 4812,
        "filename": "pyfits-3.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7860aac5d04c979360851bece55827d1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 656737,
        "upload_time": "2011-11-22T18:44:12",
        "url": "https://files.pythonhosted.org/packages/a3/4e/6a9a29924ec28d6a95ccaaca3a3aec91ddbd696526809b8f8cd0934ddd18/pyfits-3.0.4.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9de256c3adfe720fc2e4915774882810",
          "sha256": "8a0816a5f2bc22db9806917996cb66073fc720342a6d6d0a2b852c3ff408139c"
        },
        "downloads": 3236,
        "filename": "pyfits-3.0.4.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "9de256c3adfe720fc2e4915774882810",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 513594,
        "upload_time": "2011-11-22T18:55:47",
        "url": "https://files.pythonhosted.org/packages/e1/5f/90beac16d7c2a600f25332ed5cf407493969df7200dad432d289bd17805d/pyfits-3.0.4.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "847db8d84e855a19e27b299da5b72b05",
          "sha256": "0770347597dc33c965ee2a59420ca827c1042499b7ddd3e8d50b5c5ade501e0e"
        },
        "downloads": 3293,
        "filename": "pyfits-3.0.4.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "847db8d84e855a19e27b299da5b72b05",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 648644,
        "upload_time": "2011-11-22T18:56:30",
        "url": "https://files.pythonhosted.org/packages/27/52/18c0b8a40c69fb4145109ad1958d574cbbe8abc33dc9c1dae6a0c5f61677/pyfits-3.0.4.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1e73567dec105225044642b7cfa3fd76",
          "sha256": "84f92acdb8aa8cbc94b345e9f3a2711616b435c17c2e3bf0613f4353b09fd66c"
        },
        "downloads": 3396,
        "filename": "pyfits-3.0.4.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "1e73567dec105225044642b7cfa3fd76",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 648645,
        "upload_time": "2011-11-22T18:56:45",
        "url": "https://files.pythonhosted.org/packages/a6/37/38daac4ea700ebe8077faba5310e9abcf12ab039369ab0404dfdfa9f0714/pyfits-3.0.4.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c30e87c0fcaad95541f5816887a7dca7",
          "sha256": "d884e483274c41e229bbdaf33a451e576bd986c37a9e623345e5e3a7cf49fefe"
        },
        "downloads": 3228,
        "filename": "pyfits-3.0.4.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "c30e87c0fcaad95541f5816887a7dca7",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 649302,
        "upload_time": "2011-11-22T18:57:09",
        "url": "https://files.pythonhosted.org/packages/40/0e/186ba2632db3c8f415a002f8ace5ef19d6b872679a51fcee1f593aebb2aa/pyfits-3.0.4.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d562292d6184d14c39dfe38fb7659639",
          "sha256": "2d670a657618e4e0f4237436688b4f61a0ac55b33d19e150dc9b56e794de2096"
        },
        "downloads": 3287,
        "filename": "pyfits-3.0.4.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "d562292d6184d14c39dfe38fb7659639",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 649290,
        "upload_time": "2011-11-22T18:57:31",
        "url": "https://files.pythonhosted.org/packages/0a/85/916feb705db8796a2ba9cc41b8998f7750c702da7749578c3bb3c5f98e82/pyfits-3.0.4.win32-py3.2.exe"
      }
    ],
    "3.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "522dcec3bfc605c536c1aa042e36c8ef",
          "sha256": "9bed3ab1311830d54e8d66bc3f462a450f255856c6a573c89b30f75d65d05b43"
        },
        "downloads": 4091,
        "filename": "pyfits-3.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "522dcec3bfc605c536c1aa042e36c8ef",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 662700,
        "upload_time": "2012-01-30T17:55:08",
        "url": "https://files.pythonhosted.org/packages/a1/74/973b6b3fab19c919063c19edc1e31231191a0227d00111423c0d3bbf1edf/pyfits-3.0.5.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "efa7717533e24c77a93f6b68a0f67a97",
          "sha256": "a706f74ae057b54b75afb27dc68c236eaebab2f92251c1a1f84d0b50b1254180"
        },
        "downloads": 3097,
        "filename": "pyfits-3.0.5.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "efa7717533e24c77a93f6b68a0f67a97",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 520751,
        "upload_time": "2012-01-30T18:41:25",
        "url": "https://files.pythonhosted.org/packages/9f/ad/1dc62ce23f564fa37753da3765c08150443580b112c6a4aaa0b924244d65/pyfits-3.0.5.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "73f8a64cdf320c7689f398e3f030f0f3",
          "sha256": "c79523fc29f94c9b2db601a74fef6effa71d7ac77dc2015954a5311ff6f244ec"
        },
        "downloads": 3106,
        "filename": "pyfits-3.0.5.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "73f8a64cdf320c7689f398e3f030f0f3",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 655805,
        "upload_time": "2012-01-30T18:41:47",
        "url": "https://files.pythonhosted.org/packages/9f/b9/2278dd3644c4e95ccabdc3b0146f84c47aeb12350750a40c042ae1db5db6/pyfits-3.0.5.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f9caa5db5fcaaa0169af06a0d5740370",
          "sha256": "ab010d9cddfa265887b949f6708bae9528cd41c309975351a6a710fef1edc031"
        },
        "downloads": 3135,
        "filename": "pyfits-3.0.5.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "f9caa5db5fcaaa0169af06a0d5740370",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 655806,
        "upload_time": "2012-01-30T18:42:03",
        "url": "https://files.pythonhosted.org/packages/7a/f4/1118d0f3f6884e8ae3c27aedaa06705894b12e686de8d5e79e947fbbb021/pyfits-3.0.5.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0b42fdf557253963f3dc79068267c768",
          "sha256": "7b6ab16b8ae161ba86f40b870c4bdef75fbeaf3e2fe5fbe7842a1989067cc9b4"
        },
        "downloads": 3080,
        "filename": "pyfits-3.0.5.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "0b42fdf557253963f3dc79068267c768",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 656480,
        "upload_time": "2012-01-30T18:42:21",
        "url": "https://files.pythonhosted.org/packages/36/58/44d4985eac1a7ed2656465c08ece30d9f1134bc3dbdfb107fbd4ac1a60d2/pyfits-3.0.5.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "874ec76b3f6b5a1f78ea2318486e63c9",
          "sha256": "ef3819c1a6a8ea24b1da7e168ead2812d56d853c933a79373a31618df78f77e4"
        },
        "downloads": 3099,
        "filename": "pyfits-3.0.5.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "874ec76b3f6b5a1f78ea2318486e63c9",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 656467,
        "upload_time": "2012-01-30T18:42:56",
        "url": "https://files.pythonhosted.org/packages/6f/0f/c2c3c0073924d8c2a228e0cb11e384a816d1cd8edb818fa200691cbc776c/pyfits-3.0.5.win32-py3.2.exe"
      }
    ],
    "3.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3d180b58f8c882eaf98633dcc51d9ded",
          "sha256": "2bf912d0d4dcad75bac4b8c207b420e6415c1f400941dd44282fa91d33e5a482"
        },
        "downloads": 4415,
        "filename": "pyfits-3.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "3d180b58f8c882eaf98633dcc51d9ded",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 666264,
        "upload_time": "2012-02-29T18:39:26",
        "url": "https://files.pythonhosted.org/packages/ef/41/f543779108b0f2bfcb48b9d9d494943f9c46d566e7eb15d2e7dafecb2801/pyfits-3.0.6.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6a1a32ff2b699fd44061e4504996f979",
          "sha256": "931d65a7ebc11e00df9059ccc32f31e2cd3eb43972acd563a1fb4200488a5a33"
        },
        "downloads": 3055,
        "filename": "pyfits-3.0.6.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "6a1a32ff2b699fd44061e4504996f979",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 525234,
        "upload_time": "2012-02-29T19:08:10",
        "url": "https://files.pythonhosted.org/packages/34/5d/3aeb7213d0ae10bd0ec62aa5a96edc06fe3af9c0be31b4fe2027490c7c09/pyfits-3.0.6.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "82f3087fe751d258aa85b0abc50a3471",
          "sha256": "c9efcd01c16daef418b5be09b1916ea13eaf9ea155e4421509231e02e4e8024b"
        },
        "downloads": 3090,
        "filename": "pyfits-3.0.6.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "82f3087fe751d258aa85b0abc50a3471",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 660294,
        "upload_time": "2012-02-29T19:08:23",
        "url": "https://files.pythonhosted.org/packages/be/49/f1c458266bcdc99fdffd6aa871f409881b9afb0cfaed15d2d97e3530bb5a/pyfits-3.0.6.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "fb9e0a43284626728c93b0d6d1c20304",
          "sha256": "ae461f7b67992e29079c0379707859a9cbed4a070f956710ff7c688e8f3d75e2"
        },
        "downloads": 3218,
        "filename": "pyfits-3.0.6.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "fb9e0a43284626728c93b0d6d1c20304",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 660290,
        "upload_time": "2012-02-29T19:08:35",
        "url": "https://files.pythonhosted.org/packages/33/b6/0e0512f2d4af1f12834718dafe4046b5043f539440d78414a3fdeec03b63/pyfits-3.0.6.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "946563f552bedac54146112b5c6fde23",
          "sha256": "9a69f0df5851ecb7ccd2634c8f997b600fdbd145d9a4ae6cf8db27cecfbf5e3e"
        },
        "downloads": 3057,
        "filename": "pyfits-3.0.6.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "946563f552bedac54146112b5c6fde23",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 660984,
        "upload_time": "2012-02-29T19:09:22",
        "url": "https://files.pythonhosted.org/packages/05/bf/f5fdcc21cf9bf817ca5edf4220c2ca1e34edc9039c1f05b20876817cca26/pyfits-3.0.6.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e076cd48d44e154ca969b1fa8999636f",
          "sha256": "9af4bbb0e3d63a18a39174cd92e73422780c1b934504aa1826b3360a1eb5162a"
        },
        "downloads": 3481,
        "filename": "pyfits-3.0.6.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "e076cd48d44e154ca969b1fa8999636f",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 660976,
        "upload_time": "2012-02-29T19:09:35",
        "url": "https://files.pythonhosted.org/packages/f4/e7/993ee0f924a8efc0366c9f1c9532904812c8fd4e72d9d8452aca35bf1b1b/pyfits-3.0.6.win32-py3.2.exe"
      }
    ],
    "3.0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6aaa1b02ac349120cb5fd03cf569dffd",
          "sha256": "831687e556091bbb005f1358729046c984cb896f1e11fb01df7469ace377cdce"
        },
        "downloads": 5145,
        "filename": "pyfits-3.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "6aaa1b02ac349120cb5fd03cf569dffd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 677588,
        "upload_time": "2012-04-10T23:09:49",
        "url": "https://files.pythonhosted.org/packages/73/5b/ce7fe65207f96c47524f165cc3afe8fce0b73c17be37d1133e81607d1a1a/pyfits-3.0.7.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a01149987a6a04ad240a862493de5793",
          "sha256": "9544e7c1d30977a77a58e8f812cef1fb4320fb6e5127c3829948727af8693e44"
        },
        "downloads": 3107,
        "filename": "pyfits-3.0.7.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "a01149987a6a04ad240a862493de5793",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 537832,
        "upload_time": "2012-04-10T23:42:33",
        "url": "https://files.pythonhosted.org/packages/a0/a3/8ab231e7c271310c960d9ae0dac8811ac436e0392eb8cdacdbcb5b98b4bb/pyfits-3.0.7.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f18f1bd5daf4520afbadb847269ecbce",
          "sha256": "e4955dab6d2fa11e08257fb7f1b5a169455bf96423b80d42f98baa81b59bc91b"
        },
        "downloads": 3147,
        "filename": "pyfits-3.0.7.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "f18f1bd5daf4520afbadb847269ecbce",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 672906,
        "upload_time": "2012-04-10T23:42:52",
        "url": "https://files.pythonhosted.org/packages/07/2e/92930f42e94d05f0e00707e6ae03784cb46c35d8e5110b1f441f5fd01fb2/pyfits-3.0.7.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "845a5a471b4afcf143bc197b809a8a7a",
          "sha256": "0f882996f52c56f9eeaae0d1f9c45d5b42e726f607211224b9de8a6df8d173b5"
        },
        "downloads": 3287,
        "filename": "pyfits-3.0.7.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "845a5a471b4afcf143bc197b809a8a7a",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 672906,
        "upload_time": "2012-04-10T23:43:08",
        "url": "https://files.pythonhosted.org/packages/08/69/988c4d11dc1b2298bdd7988b4c38d39b4e5bd70012d06150c2ce580e12f4/pyfits-3.0.7.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c0ecbf7d65b3a29ba9c139af6f5abb4e",
          "sha256": "3524cd879bb224dc14a3ce060973d42c9488d7c226545c4d27855a640e46f997"
        },
        "downloads": 3076,
        "filename": "pyfits-3.0.7.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "c0ecbf7d65b3a29ba9c139af6f5abb4e",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 673596,
        "upload_time": "2012-04-10T23:43:36",
        "url": "https://files.pythonhosted.org/packages/92/2b/6610f7501cfd7ee7d75f33454ea4b8e3c80cba68996bc0be7cd958cb7319/pyfits-3.0.7.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "85b5562cafd698918b0a422b3791e7d2",
          "sha256": "4515013bdccfdc9bbbf8866c620e7d753319dce9e0bdac7bca8c463f06cb5caa"
        },
        "downloads": 3321,
        "filename": "pyfits-3.0.7.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "85b5562cafd698918b0a422b3791e7d2",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 673583,
        "upload_time": "2012-04-10T23:44:53",
        "url": "https://files.pythonhosted.org/packages/c0/cc/112ec7967b65b26b101b2cef5e3e030ac67727b390265a3b7570068a93e9/pyfits-3.0.7.win32-py3.2.exe"
      }
    ],
    "3.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5789db891689642a8b01d9a72cee08b2",
          "sha256": "cd5aa6911b1f56daf634f9d29ca6942cc54bd8924b1d9a5ed0fef570ed34c5ec"
        },
        "downloads": 5343,
        "filename": "pyfits-3.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "5789db891689642a8b01d9a72cee08b2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 683390,
        "upload_time": "2012-06-04T23:49:16",
        "url": "https://files.pythonhosted.org/packages/93/19/a3d6087c6db489045a55e6dbc0a8729d1b5ce044fad403da2b61e069a664/pyfits-3.0.8.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "884d5fc34d52f67db2fdb7b41b9d1fc7",
          "sha256": "936ec726449d460d30a798f13f3bfaa6a206effd5bdb354e8fb4fa8632dba0cc"
        },
        "downloads": 2968,
        "filename": "pyfits-3.0.8.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "884d5fc34d52f67db2fdb7b41b9d1fc7",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 544415,
        "upload_time": "2012-06-05T00:05:44",
        "url": "https://files.pythonhosted.org/packages/70/72/cea9e70fddf68a40edf761fb7377e066ed3854ca53289df2042ab270fa01/pyfits-3.0.8.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "080fd22438d867f1d93cb82b857bbc72",
          "sha256": "a6c3c473c449c33b6c6d939e11a756d4d238de0d58720f30df2f37494616efb1"
        },
        "downloads": 3001,
        "filename": "pyfits-3.0.8.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "080fd22438d867f1d93cb82b857bbc72",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 679485,
        "upload_time": "2012-06-05T00:06:05",
        "url": "https://files.pythonhosted.org/packages/b5/45/4b28ffea9c059380a161eeda75c2d73d18e9f69ad2e943b19d4fb22bdeb0/pyfits-3.0.8.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d44170dfa1672600841832cdc1bdce27",
          "sha256": "fbf9576aaebaaee4df7c645ecdec138cbfc05b98dd33198c9ba85bdae27da706"
        },
        "downloads": 3188,
        "filename": "pyfits-3.0.8.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "d44170dfa1672600841832cdc1bdce27",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 679484,
        "upload_time": "2012-06-05T00:06:29",
        "url": "https://files.pythonhosted.org/packages/66/83/388209ad864700baa6502c4c04a8fefe3684ce9bd0308f9910120789a1ec/pyfits-3.0.8.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d542bd62aea629a780616a80ba8b68c3",
          "sha256": "b9c654bbc40a0c4be7e45a6a3f4858fdf4977d0a9353871d750f03afaf5d7508"
        },
        "downloads": 2955,
        "filename": "pyfits-3.0.8.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "d542bd62aea629a780616a80ba8b68c3",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 680131,
        "upload_time": "2012-06-05T00:06:59",
        "url": "https://files.pythonhosted.org/packages/93/01/2de76d04a1ce65da5bd5fbb923603721f4b131e6c74bdf9e0f006ba21d97/pyfits-3.0.8.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "bf3e8ecb2b7cdc0a4edbafee8cd0efa5",
          "sha256": "7f6496324d4e4a74f9668e91d659dcecd233d9058867976a56f857571b29562b"
        },
        "downloads": 3136,
        "filename": "pyfits-3.0.8.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "bf3e8ecb2b7cdc0a4edbafee8cd0efa5",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 680119,
        "upload_time": "2012-06-05T00:13:15",
        "url": "https://files.pythonhosted.org/packages/15/01/68390af8d1b17bd0fbf4c3da51d38f5ce863406eeec09e452f88452ed22a/pyfits-3.0.8.win32-py3.2.exe"
      }
    ],
    "3.0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "22a27834f830943568a9645e0ea277b0",
          "sha256": "5332adf188b48014320a34e23dd517962d0a3865b51512774ff2c839b22bfac7"
        },
        "downloads": 3316,
        "filename": "pyfits-3.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "22a27834f830943568a9645e0ea277b0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 686581,
        "upload_time": "2012-08-06T23:28:56",
        "url": "https://files.pythonhosted.org/packages/ca/86/a626cff2a3e1aff35b0d07b24a185545a7687c0149cc66c5083277992108/pyfits-3.0.9.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7c564f3675012b6ad62cbdde44ef3e93",
          "sha256": "08b060ee284fc51a792d13672631b28f6b04e90bab73cf2aed3d75282aafc409"
        },
        "downloads": 3197,
        "filename": "pyfits-3.0.9.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "7c564f3675012b6ad62cbdde44ef3e93",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 548144,
        "upload_time": "2012-08-06T23:44:55",
        "url": "https://files.pythonhosted.org/packages/9c/90/7e77ea15c1a7eb94eadca5cdb6ffe5e07fa7812180c3a185c8bf2eb0b8c2/pyfits-3.0.9.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ce5ebbf34880da92c97758e87314f8ee",
          "sha256": "c1c73a2baf32af6633cbf532cdd47b2d3d24fad846c5147c2333579462107162"
        },
        "downloads": 2971,
        "filename": "pyfits-3.0.9.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "ce5ebbf34880da92c97758e87314f8ee",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 683218,
        "upload_time": "2012-08-06T23:45:42",
        "url": "https://files.pythonhosted.org/packages/0c/40/d8be3f909e35f7b0c5fcfb7cd20fecede8827dddc8e5517019eeeb65356d/pyfits-3.0.9.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "78dae036d447863a70610e8046555043",
          "sha256": "3a8b309e5c49cc87d0d8254167917462e665eadd0e1fccb00c5724d6464ca8db"
        },
        "downloads": 3019,
        "filename": "pyfits-3.0.9.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "78dae036d447863a70610e8046555043",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 683217,
        "upload_time": "2012-08-06T23:46:15",
        "url": "https://files.pythonhosted.org/packages/66/c2/e1acc401559228b914f1ca4e9a9e0bbba5c23d42f8605c853010ecd4057a/pyfits-3.0.9.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "481d5e8d3ed3096566b6eb99f789dbd2",
          "sha256": "3f1da4a913a36f5395bf235a16f31967004c6921dc8148a5ce65a68b2e03d495"
        },
        "downloads": 2974,
        "filename": "pyfits-3.0.9.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "481d5e8d3ed3096566b6eb99f789dbd2",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 683837,
        "upload_time": "2012-08-06T23:47:12",
        "url": "https://files.pythonhosted.org/packages/ba/67/97381d7d7ffe3f699277d76ebd428691a4aa389ee5e05d16faa30bee8b56/pyfits-3.0.9.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5b189d2a7100ad505d8e179b60149737",
          "sha256": "366932d0297cfef71574cd0f4a0007277e7eb0d47ab4c4d44d0cce82fb6dd20f"
        },
        "downloads": 3035,
        "filename": "pyfits-3.0.9.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "5b189d2a7100ad505d8e179b60149737",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 683828,
        "upload_time": "2012-08-06T23:47:50",
        "url": "https://files.pythonhosted.org/packages/9b/7f/b89851b64f8c73684eac70227474d810cc458d47bd898eacef4bf21cf011/pyfits-3.0.9.win32-py3.2.exe"
      }
    ],
    "3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "aa8dd3d89497dac48c50b485e599af12",
          "sha256": "0c12f135fe7b519231f2b19e7699811f94b94bfd4728b0a3e7966d6648cc5790"
        },
        "downloads": 7384,
        "filename": "pyfits-3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aa8dd3d89497dac48c50b485e599af12",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 766083,
        "upload_time": "2012-08-08T23:28:16",
        "url": "https://files.pythonhosted.org/packages/5b/4d/bc50cf7b193f7fdd0154f85e6f5039f4c0f1e7563ced963c7ce56e6b8a73/pyfits-3.1.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5b2ca143955af5d51b0832cb7ab46e01",
          "sha256": "ce2134be99edb293574c8b6e9719929d850e2a1ad3ac68560ab20cffc9bc010b"
        },
        "downloads": 2958,
        "filename": "pyfits-3.1.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "5b2ca143955af5d51b0832cb7ab46e01",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 617846,
        "upload_time": "2012-08-08T23:41:04",
        "url": "https://files.pythonhosted.org/packages/33/7a/fd767ef0237a64cc567a88886d5a10140c0049cb461da5829be359fc61f6/pyfits-3.1.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7174ad7f6e58f46e02358eec6da02cf3",
          "sha256": "966e58764c5408819a641f4c8c0567b66f5f13ea60f39214fd4c697da57ec661"
        },
        "downloads": 3022,
        "filename": "pyfits-3.1.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "7174ad7f6e58f46e02358eec6da02cf3",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 752962,
        "upload_time": "2012-08-08T23:41:32",
        "url": "https://files.pythonhosted.org/packages/f1/79/ca11ad6901c9dbaa275f484ef5d03b2a9078e007d44638301e39df278e77/pyfits-3.1.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "75adc103f93a62d6a67b8de47f8dcc29",
          "sha256": "879f44e3394f51df601ab757282bc61d3eea7cd650a3b0bd474723581357a4e4"
        },
        "downloads": 3460,
        "filename": "pyfits-3.1.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "75adc103f93a62d6a67b8de47f8dcc29",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 752957,
        "upload_time": "2012-08-08T23:42:18",
        "url": "https://files.pythonhosted.org/packages/d5/4e/cd98be5068005e48dd05f86e8084a89d519a19edcc8b7a4cd261b697f1d7/pyfits-3.1.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "597b8aaabff65f5cf2701ecf2a02a1f7",
          "sha256": "4a6283cbe7b0be63037b3172d5f778a0946feade41e94c560632a5b264a1978f"
        },
        "downloads": 2932,
        "filename": "pyfits-3.1.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "597b8aaabff65f5cf2701ecf2a02a1f7",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 753815,
        "upload_time": "2012-08-08T23:42:57",
        "url": "https://files.pythonhosted.org/packages/e5/d0/6b29cd7ae965f409806ee530ea89d41fec1887e335e76b768cd6c030963c/pyfits-3.1.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f13b63f25e643e8b1f257b2462e9cec5",
          "sha256": "29625007a0b51955abb995f9ee422577dfe049557bd345c9faf460fe4f7ee0b7"
        },
        "downloads": 3003,
        "filename": "pyfits-3.1.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "f13b63f25e643e8b1f257b2462e9cec5",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 753805,
        "upload_time": "2012-08-08T23:43:31",
        "url": "https://files.pythonhosted.org/packages/33/a9/cd168a369ab61efc3de03ff9e0ec34c7ebb6b1b8cd4d5acebc879016cff1/pyfits-3.1.win32-py3.2.exe"
      }
    ],
    "3.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2914f21747a6beaa9ce10a266fb9b4d7",
          "sha256": "5e7de7ffac4f50fcd7a07e85dab2431ce2ff1231633580f38a9efa7b84c51dd2"
        },
        "downloads": 4757,
        "filename": "pyfits-3.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2914f21747a6beaa9ce10a266fb9b4d7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 778407,
        "upload_time": "2013-02-28T16:11:07",
        "url": "https://files.pythonhosted.org/packages/cc/36/d5156ea03cedd12da64144bd0e8ec5de8b6c2a2b5e8e0adc417cb8189b71/pyfits-3.1.1.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "46b3e9987e190b11781918a9469ae945",
          "sha256": "473e01388eb18d145b99bedcd9558062d3b837359c0f0b7c4a50553128e0b726"
        },
        "downloads": 2707,
        "filename": "pyfits-3.1.1.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "46b3e9987e190b11781918a9469ae945",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 630167,
        "upload_time": "2013-01-02T20:15:47",
        "url": "https://files.pythonhosted.org/packages/2e/cc/c7135f70d2f65340ed96bb643eb644d09807ccad6df7ca75f3fe9d8bfa9e/pyfits-3.1.1.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f0f5f5538b7234a1ad405eab712e1d6c",
          "sha256": "99bab22af62b2ebd9833a0800fbcfe92ad2278cf9c94907bf1c6fd52ebf21754"
        },
        "downloads": 2719,
        "filename": "pyfits-3.1.1.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "f0f5f5538b7234a1ad405eab712e1d6c",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 765283,
        "upload_time": "2013-01-02T20:16:12",
        "url": "https://files.pythonhosted.org/packages/20/0a/019668fa68ebc6d0e8c7dd976a7374a7b016727dc416db52a7ee9dcfcc3a/pyfits-3.1.1.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "82574daf0f20f3116c9c53e550ecacfc",
          "sha256": "6289bfd47cd2fee3c66924ab07d6d376d37a54d4df8d1cc21ab9547accf8af4b"
        },
        "downloads": 3135,
        "filename": "pyfits-3.1.1.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "82574daf0f20f3116c9c53e550ecacfc",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 765286,
        "upload_time": "2013-01-02T20:16:52",
        "url": "https://files.pythonhosted.org/packages/5e/5c/e4ce5c7b75be5c7e975c54ab50fb719415c9880c340ffb8e6dcc76afbc77/pyfits-3.1.1.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b8847dee8e7a9754f660f609e7263b55",
          "sha256": "88457c41a618ba0a413b913c2582b519bb961bbc83eff5cb9328dd82202930a6"
        },
        "downloads": 2680,
        "filename": "pyfits-3.1.1.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "b8847dee8e7a9754f660f609e7263b55",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 766140,
        "upload_time": "2013-01-02T20:17:29",
        "url": "https://files.pythonhosted.org/packages/5c/e3/96a98068399cf293e69ac08409c8d9b456dcca1467e0559b96074c67fa24/pyfits-3.1.1.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a4c460337f766b211266e47ed4bb8d0c",
          "sha256": "a3096d1163750967a520923e16eac2a44872cbf2bd4e10538db2a51dccaf0441"
        },
        "downloads": 2789,
        "filename": "pyfits-3.1.1.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "a4c460337f766b211266e47ed4bb8d0c",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 766131,
        "upload_time": "2013-01-02T20:18:08",
        "url": "https://files.pythonhosted.org/packages/3a/a5/4d57218de52ddfba8d6b3b9d1bfbf008d031160ba67b6e14da55079299b2/pyfits-3.1.1.win32-py3.2.exe"
      }
    ],
    "3.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d0f1dce1719170b0c9777bbb15bbd8b3",
          "sha256": "35aaad59f37a46a06c8da37608de0e6448062cef49b06fa0bbd3f9a75dc99239"
        },
        "downloads": 14197,
        "filename": "pyfits-3.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d0f1dce1719170b0c9777bbb15bbd8b3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 794495,
        "upload_time": "2013-05-15T14:22:00",
        "url": "https://files.pythonhosted.org/packages/6c/ab/4aa8a86ee9ec69df128ac3f14cd436ffc2677ef6204c09bb9fb72c23cb80/pyfits-3.1.2.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8e5cb416fefb4f7482664e6f9858393d",
          "sha256": "d080d2d3c594eb5ded8c07c9d62e4488eb2cf308a16ec3c5af83ddb3c3fc9031"
        },
        "downloads": 2653,
        "filename": "pyfits-3.1.2.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "8e5cb416fefb4f7482664e6f9858393d",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 722217,
        "upload_time": "2013-04-22T19:09:10",
        "url": "https://files.pythonhosted.org/packages/db/82/efcf4da9b6a98450b21926788e135185ba28f223ca69acb861a020d2450d/pyfits-3.1.2.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "fae4abb9351acadd74662ff523e0b79c",
          "sha256": "5c7229f3849905a7df73be379a95b8b33725c92106033570b17363e74a583f0b"
        },
        "downloads": 2635,
        "filename": "pyfits-3.1.2.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "fae4abb9351acadd74662ff523e0b79c",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 857413,
        "upload_time": "2013-04-22T19:09:42",
        "url": "https://files.pythonhosted.org/packages/dd/11/a3b1f550d7f8663f6420015c492cc26887781eb611829960d43d22cc5024/pyfits-3.1.2.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6159624b966fe02903477b944d6391f8",
          "sha256": "1ea9b46400076a1ac3c12a466c50f4e0b4db5453b2f5a78b9b17f440009da1c5"
        },
        "downloads": 13243,
        "filename": "pyfits-3.1.2.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "6159624b966fe02903477b944d6391f8",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 857438,
        "upload_time": "2013-04-22T19:10:07",
        "url": "https://files.pythonhosted.org/packages/ad/9a/38b364ae8d9de9fdb4391900b370b1589074cb080c357a4e91613f09990e/pyfits-3.1.2.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "98cb520e35b16d269acc5ca7d3c80d74",
          "sha256": "0d9671ae9e9ac6d72a485942126d0d376627a1bf7fe3fd3abbdef87c274c4b10"
        },
        "downloads": 2562,
        "filename": "pyfits-3.1.2.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "98cb520e35b16d269acc5ca7d3c80d74",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 858384,
        "upload_time": "2013-04-22T19:10:46",
        "url": "https://files.pythonhosted.org/packages/1f/c8/76db8e142bff598e20b6deab32bf8269598c2ceb5390df0428b8cb0794c1/pyfits-3.1.2.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "449d5adc81f1d5761e47406f914d840a",
          "sha256": "deb3fb2bedfeb5bc1b2c79b636b38a01e0191889b519521b2d148942cf7a0083"
        },
        "downloads": 2579,
        "filename": "pyfits-3.1.2.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "449d5adc81f1d5761e47406f914d840a",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 858380,
        "upload_time": "2013-04-22T19:11:24",
        "url": "https://files.pythonhosted.org/packages/cf/25/aaf566687d2e053e7e955078591fb274306fb84e43333057b2078e926be1/pyfits-3.1.2.win32-py3.2.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "603721d51e98b2cfada26296a9b15610",
          "sha256": "328764c0691caecbb6bd2a537ac50d6ea7b97082fd94c41e862db5939afb56d2"
        },
        "downloads": 2806,
        "filename": "pyfits-3.1.2.win32-py3.3.exe",
        "has_sig": false,
        "md5_digest": "603721d51e98b2cfada26296a9b15610",
        "packagetype": "bdist_wininst",
        "python_version": "3.3",
        "size": 853265,
        "upload_time": "2013-04-22T19:12:05",
        "url": "https://files.pythonhosted.org/packages/b8/3b/c8ec4e715c1ba528d69dbf2db0a9c61eb9623cd55f216ebdcb736f8b655f/pyfits-3.1.2.win32-py3.3.exe"
      }
    ],
    "3.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "305672a7df9210069f692352a6f60236",
          "sha256": "fd66191969b1726448f284eb3c9c101305885255609b53c1f15ea770208b1d93"
        },
        "downloads": 3254,
        "filename": "pyfits-3.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "305672a7df9210069f692352a6f60236",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 802286,
        "upload_time": "2013-11-26T18:13:44",
        "url": "https://files.pythonhosted.org/packages/d0/60/afe944246bf287ca36d8ee42d43f4404973f9fa2313bac2b3fa4880546c3/pyfits-3.1.3.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4e0ed78a2ed5933748a6b30491003d3c",
          "sha256": "76b09645f9a833261762a9a6945b07fc5d0ae46205cde600d58dabfe0f69fbf0"
        },
        "downloads": 1930,
        "filename": "pyfits-3.1.3.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "4e0ed78a2ed5933748a6b30491003d3c",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 727200,
        "upload_time": "2013-11-26T19:44:52",
        "url": "https://files.pythonhosted.org/packages/a0/05/3e1d2a41174ce96d2af864c0949f939f1a8f8f2d0eb7e4621c16f41f979b/pyfits-3.1.3.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9365b2b5118e1e4ecaccb2bcf9708413",
          "sha256": "24ff5176e448670dd8473ed1100cbf5798a23274f52823b05caa41f00b7d6c34"
        },
        "downloads": 1915,
        "filename": "pyfits-3.1.3.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "9365b2b5118e1e4ecaccb2bcf9708413",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 862361,
        "upload_time": "2013-11-26T19:45:25",
        "url": "https://files.pythonhosted.org/packages/af/dd/33a394a9331be3f7cf8f225e2bfb358cab7ce0c35142d3a79189f0c33c0f/pyfits-3.1.3.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f306b92b4bff40397cb64ee2b8c7a2c3",
          "sha256": "47247a756e702bdf2477cb42030f82cc3ae0dc22e2ebfc65fd9b4016196078c5"
        },
        "downloads": 1978,
        "filename": "pyfits-3.1.3.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "f306b92b4bff40397cb64ee2b8c7a2c3",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 861720,
        "upload_time": "2013-11-26T19:46:58",
        "url": "https://files.pythonhosted.org/packages/57/b4/9caa59d42a4c6413277339767be119b5e25fead362f608f5310ee118feb6/pyfits-3.1.3.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c615af1c851b079a55351a245e345d9c",
          "sha256": "91422423f971f22d0a47458c85d502735880fbe25bb5a7b835e9aa9f1277a771"
        },
        "downloads": 1919,
        "filename": "pyfits-3.1.3.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "c615af1c851b079a55351a245e345d9c",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 863245,
        "upload_time": "2013-11-26T19:52:00",
        "url": "https://files.pythonhosted.org/packages/cd/96/f9baf1c14f02d4d546da5e06d5356c8ba92fda7adadfda831ee6d389bcac/pyfits-3.1.3.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "396224ef979b6c2ff09d6399d02ef114",
          "sha256": "f744ae183a9d4cf21b2dbdf201240b35907ef5167f6bd9a068b4855ed871c4c2"
        },
        "downloads": 1906,
        "filename": "pyfits-3.1.3.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "396224ef979b6c2ff09d6399d02ef114",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 862598,
        "upload_time": "2013-11-26T19:52:44",
        "url": "https://files.pythonhosted.org/packages/e8/66/aa711e7123210862c226a08c45fd247de0b235e78a818af8454acd3561a3/pyfits-3.1.3.win32-py3.2.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2a2e95e25d97fd575d1e92c5c8aeecab",
          "sha256": "1bab3dbd8bbccaef887159738dd58af7737c5881c79ab3b87afacc9553141ef5"
        },
        "downloads": 1912,
        "filename": "pyfits-3.1.3.win32-py3.3.exe",
        "has_sig": false,
        "md5_digest": "2a2e95e25d97fd575d1e92c5c8aeecab",
        "packagetype": "bdist_wininst",
        "python_version": "3.3",
        "size": 857485,
        "upload_time": "2013-11-26T19:53:21",
        "url": "https://files.pythonhosted.org/packages/82/72/4f9523574c277462de55967de1ddcb85c455c78a3ff3edc9f2e9eb42c7c2/pyfits-3.1.3.win32-py3.3.exe"
      }
    ],
    "3.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "eb2489165aa4f102262d416cf8e562ff",
          "sha256": "3517686d7a4c52dad9e49fa530747907ca2887f443739cb19d58c4e568a5ab15"
        },
        "downloads": 1956,
        "filename": "pyfits-3.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "eb2489165aa4f102262d416cf8e562ff",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 826745,
        "upload_time": "2014-03-04T22:38:58",
        "url": "https://files.pythonhosted.org/packages/2f/4e/6e2964956a69b6a7adce2428f14bb809790cdd21fc4cdeda78c76649a31f/pyfits-3.1.4.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "efb100a0f68323b0d82bf57e840425db",
          "sha256": "bbb29bebc28223a5ae41cd1ef346daef556ba5f966b2bfa45eb54fc567abd2ae"
        },
        "downloads": 1761,
        "filename": "pyfits-3.1.4.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "efb100a0f68323b0d82bf57e840425db",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 883474,
        "upload_time": "2014-03-05T17:59:27",
        "url": "https://files.pythonhosted.org/packages/44/b8/8ea363d5f22657ac034301af9a4eb4b778a1310f03aeaa95e128aaf27054/pyfits-3.1.4.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "33c5ab51e68092f85d1941e2d46686e0",
          "sha256": "dfc5ac406d0fc1bd4fa77cbdae16aa843f5ae4ce041a72f96c7be5bee7c9d5cc"
        },
        "downloads": 1767,
        "filename": "pyfits-3.1.4.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "33c5ab51e68092f85d1941e2d46686e0",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 883470,
        "upload_time": "2014-03-05T17:59:58",
        "url": "https://files.pythonhosted.org/packages/dd/d4/37180c832e98d91b7f1545bce555c515abc16c2aacc1eb60e6cba508e71e/pyfits-3.1.4.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ae65b576620c8cbc512de6bb357adf7f",
          "sha256": "eff7d0d52875d311f2774718ede7a06147905cc437f345d4029212dcae446536"
        },
        "downloads": 1750,
        "filename": "pyfits-3.1.4.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "ae65b576620c8cbc512de6bb357adf7f",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 884521,
        "upload_time": "2014-03-05T18:00:37",
        "url": "https://files.pythonhosted.org/packages/18/fa/5d83a74a01d734f2eb9f92de8c0e650d0f7068d1c202ee54f0816af8fa5c/pyfits-3.1.4.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8cb58ac1e393d19fed2e6dedb9f1c446",
          "sha256": "7682058abb2e8ea0e9731d3e058d9902da5fcaef2c2c63dca71346e6d379d691"
        },
        "downloads": 1762,
        "filename": "pyfits-3.1.4.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "8cb58ac1e393d19fed2e6dedb9f1c446",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 884513,
        "upload_time": "2014-03-05T19:11:57",
        "url": "https://files.pythonhosted.org/packages/78/87/1c7fc8cfb02433d9b24e037c9e070a14c9f8019b783446232d5f3fe76692/pyfits-3.1.4.win32-py3.2.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "456c31c5f358c21c84f2079e29fc5306",
          "sha256": "4bf8a94107091abe828cbe9eb9c0b3d72a4be0375d5ae1ef75a9bd7af020b0d3"
        },
        "downloads": 1759,
        "filename": "pyfits-3.1.4.win32-py3.3.exe",
        "has_sig": false,
        "md5_digest": "456c31c5f358c21c84f2079e29fc5306",
        "packagetype": "bdist_wininst",
        "python_version": "3.3",
        "size": 879401,
        "upload_time": "2014-03-05T19:24:13",
        "url": "https://files.pythonhosted.org/packages/4a/27/df2d31b68644303df107176e3c376e51dfd2d2974c91b3f5c68b60e2b749/pyfits-3.1.4.win32-py3.3.exe"
      }
    ],
    "3.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "028b740210160eeb766100ac90a2766e",
          "sha256": "19829c41141cd73620e32e4b7af82fea422f4616d495b906d23f380f14c601fb"
        },
        "downloads": 1798,
        "filename": "pyfits-3.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "028b740210160eeb766100ac90a2766e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 825553,
        "upload_time": "2014-03-28T20:00:15",
        "url": "https://files.pythonhosted.org/packages/93/78/2958b1db48faebd14df146e3e152e55fb4688f2ca09d8eb31ee4d13a8aae/pyfits-3.1.5.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3d9c790cc9fe13da025630bc99c3529f",
          "sha256": "72f8ca98a7678248cd6a5071e50895c2185d8048a068ece1ab6d58fc756e3185"
        },
        "downloads": 1614,
        "filename": "pyfits-3.1.5.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "3d9c790cc9fe13da025630bc99c3529f",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 748890,
        "upload_time": "2014-03-28T20:03:58",
        "url": "https://files.pythonhosted.org/packages/f8/f0/bf5693f928501d030de4baa1e9946179c097014cb69ae71f68b6ca3b314a/pyfits-3.1.5.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "457479f975360272ec215338c20e6f5d",
          "sha256": "6929b63640dd6a6483d592d6fe95153717ecbd71a17ddde09fd424304138359e"
        },
        "downloads": 1617,
        "filename": "pyfits-3.1.5.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "457479f975360272ec215338c20e6f5d",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 884088,
        "upload_time": "2014-03-28T20:06:42",
        "url": "https://files.pythonhosted.org/packages/97/2f/172079266faede50a0bcb0d0c96f925250c08012e0a44520e10e6dbb8b2f/pyfits-3.1.5.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e5211d16196786519ba3a093175113bc",
          "sha256": "28bdbaf3378189d3476b3914b2e2cb7d9c228d697842b31c35515a60370ccd49"
        },
        "downloads": 1628,
        "filename": "pyfits-3.1.5.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "e5211d16196786519ba3a093175113bc",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 883479,
        "upload_time": "2014-03-28T20:03:30",
        "url": "https://files.pythonhosted.org/packages/54/1e/6e1b78f747c9b7ed76c6178ce1c0022b91ee50d760f88f70defeb7c9da08/pyfits-3.1.5.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a18a4c17802ad850ef604a3e659ff22b",
          "sha256": "df023b60975ed68519efe6525b84f24b96af30c6683aab076ecaafc45dc8ccf7"
        },
        "downloads": 1623,
        "filename": "pyfits-3.1.5.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "a18a4c17802ad850ef604a3e659ff22b",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 885069,
        "upload_time": "2014-03-28T20:07:15",
        "url": "https://files.pythonhosted.org/packages/2d/b1/120047097aa18f081c7fb3599895f0471b6938178ae3e15256e6a2e09f8c/pyfits-3.1.5.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "dfbb2c2ed9cd4c242947942c6493564d",
          "sha256": "9266a2813e9250dca8f344938e5dfd433409d40b9968c3946a9f35dc18cd137d"
        },
        "downloads": 1623,
        "filename": "pyfits-3.1.5.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "dfbb2c2ed9cd4c242947942c6493564d",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 884440,
        "upload_time": "2014-03-28T20:08:10",
        "url": "https://files.pythonhosted.org/packages/b0/a4/530b915fd0de7be8d1c53103b4e1be93fedb32736197eaf7049c4e826a35/pyfits-3.1.5.win32-py3.2.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "76a7f43b8e99d3a4ed1c077cb78f4f81",
          "sha256": "0e5031afcb09c3e7e966a24ed80f0b2fe8ba620ace00bf31dc21f985044b0a1c"
        },
        "downloads": 1620,
        "filename": "pyfits-3.1.5.win32-py3.3.exe",
        "has_sig": false,
        "md5_digest": "76a7f43b8e99d3a4ed1c077cb78f4f81",
        "packagetype": "bdist_wininst",
        "python_version": "3.3",
        "size": 879324,
        "upload_time": "2014-03-28T20:08:43",
        "url": "https://files.pythonhosted.org/packages/60/6a/1dd01b9d2099937419795ec7d0f7541edc302a8fcb76f9c574de89abbcbc/pyfits-3.1.5.win32-py3.3.exe"
      }
    ],
    "3.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4c15f9ebecfa1bc908b4f34cfa1b25f6",
          "sha256": "57d8929de96bece075db8a3d76ae7d7ee8927ab84e1affa6f8122b47f8a79116"
        },
        "downloads": 1862,
        "filename": "pyfits-3.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "4c15f9ebecfa1bc908b4f34cfa1b25f6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 828882,
        "upload_time": "2014-05-14T16:25:32",
        "url": "https://files.pythonhosted.org/packages/42/19/cc5271fa7c8edae05409603b2c60cf54ca37f5493597cbbf3efd95558fc7/pyfits-3.1.6.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0f51c27db3a1176c55aec1bc6fe1c500",
          "sha256": "f1c527bd6cfc555e44e98826fea348b78af4ccaa8c6849c289e0b4bfe908e000"
        },
        "downloads": 1600,
        "filename": "pyfits-3.1.6.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "0f51c27db3a1176c55aec1bc6fe1c500",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 752718,
        "upload_time": "2014-05-14T16:57:23",
        "url": "https://files.pythonhosted.org/packages/ac/31/30a689a3378be99ef9a206fb1afe4b44d9c4daa059307b7f40070934a316/pyfits-3.1.6.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "31f47ea9018b3b88a2aaf61d0c9b026e",
          "sha256": "5bcf74641b462042e62b6c827682c4ea673cc31784811c1b8808422572994472"
        },
        "downloads": 1605,
        "filename": "pyfits-3.1.6.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "31f47ea9018b3b88a2aaf61d0c9b026e",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 887956,
        "upload_time": "2014-05-14T16:58:19",
        "url": "https://files.pythonhosted.org/packages/78/57/dbc1bbaf41d4d168bb150691184ec5660e11a30775bd99aef37036350ce3/pyfits-3.1.6.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e1b8749ed4a8e819b0d0659e9c15d8ef",
          "sha256": "98e21c1b84683aba70ee3a0899b204b9c20726029e9c65e22c0c3cc33a9d6d96"
        },
        "downloads": 1728,
        "filename": "pyfits-3.1.6.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "e1b8749ed4a8e819b0d0659e9c15d8ef",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 887951,
        "upload_time": "2014-05-14T16:58:53",
        "url": "https://files.pythonhosted.org/packages/f9/d8/006b676914e031a7e28b27f3740875d9303fc7c4a014140a80f661132c70/pyfits-3.1.6.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0e565ed9720bece81b1ee8c2258822ec",
          "sha256": "a70f362b7ecb42f5685be555276e087e4290ebd4f1f74e80bb569b65e97c19c2"
        },
        "downloads": 1596,
        "filename": "pyfits-3.1.6.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "0e565ed9720bece81b1ee8c2258822ec",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 889028,
        "upload_time": "2014-05-14T17:00:11",
        "url": "https://files.pythonhosted.org/packages/16/a2/151160f47cb3da073d5712c60e3261472fc534697c987454b98041675bc3/pyfits-3.1.6.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4f49ae1d7574b4fc41aa870fa6ff4dfd",
          "sha256": "5a1f2e54e2afa9de29cc2c18003ad0c371528d8197a7668fe17d11b9eb8cfb68"
        },
        "downloads": 1630,
        "filename": "pyfits-3.1.6.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "4f49ae1d7574b4fc41aa870fa6ff4dfd",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 889017,
        "upload_time": "2014-05-14T17:01:28",
        "url": "https://files.pythonhosted.org/packages/37/60/9dbc91cfeaff8af711f47e96fef3817fe7f2af4d8f7dae8590e127ddea2c/pyfits-3.1.6.win32-py3.2.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "15994c08efea1ececaa684aa6d993c10",
          "sha256": "05bbb9f0208bc472adb4564382b98326db08de65a252e0ad33f39e68c3eec20a"
        },
        "downloads": 1711,
        "filename": "pyfits-3.1.6.win32-py3.3.exe",
        "has_sig": false,
        "md5_digest": "15994c08efea1ececaa684aa6d993c10",
        "packagetype": "bdist_wininst",
        "python_version": "3.3",
        "size": 883906,
        "upload_time": "2014-05-14T17:06:31",
        "url": "https://files.pythonhosted.org/packages/11/4e/5cf98de9b94f07501cabc18a8dc27f72c33a78c988e51f2f30536285bbb2/pyfits-3.1.6.win32-py3.3.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c14115bd3307652423dea3aad752bf3a",
          "sha256": "1a6e1a0d8b7811de56df8bb5292014877788eff8c6d8224cdd431029da29b0ef"
        },
        "downloads": 1631,
        "filename": "pyfits-3.1.6.win32-py3.4.exe",
        "has_sig": false,
        "md5_digest": "c14115bd3307652423dea3aad752bf3a",
        "packagetype": "bdist_wininst",
        "python_version": "3.4",
        "size": 883898,
        "upload_time": "2014-05-14T17:17:13",
        "url": "https://files.pythonhosted.org/packages/5f/c0/4351369b9bdb4c5fce8640059077ed52326ec57030ee1092468b8dc2f20e/pyfits-3.1.6.win32-py3.4.exe"
      }
    ],
    "3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "23fe76429fcd229f0abbd21535d1c41a",
          "sha256": "1e049191f64f396e67603c507b63e7c0fc442eafddddc35a6e10244ad16dae42"
        },
        "downloads": 7658,
        "filename": "pyfits-3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "23fe76429fcd229f0abbd21535d1c41a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1606650,
        "upload_time": "2013-11-26T18:54:17",
        "url": "https://files.pythonhosted.org/packages/4e/f5/63df1a6d17d2f9c78b047000681f2df427d558bfdfbf3f06a38695422d27/pyfits-3.2.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "71ecdd84b315d0f2d4043e576d47b3ab",
          "sha256": "62325d77db5c0a6d0ed1ded5c9675ba4cf09e76d3e1fad71a132314fe3b5c6d6"
        },
        "downloads": 2087,
        "filename": "pyfits-3.2.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "71ecdd84b315d0f2d4043e576d47b3ab",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 1111137,
        "upload_time": "2013-11-26T19:54:37",
        "url": "https://files.pythonhosted.org/packages/bf/9b/4e17c9b7b784be8f9921aa3908471f222d7075962c7eaf80917c75b827f2/pyfits-3.2.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2b13edf3f0330a75f01e17963143645a",
          "sha256": "899a2ec4c6301bd3a50395c9c8fce2572856c144e79b060c4f0cf3e3736102ee"
        },
        "downloads": 1922,
        "filename": "pyfits-3.2.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "2b13edf3f0330a75f01e17963143645a",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 1246407,
        "upload_time": "2013-11-26T19:56:05",
        "url": "https://files.pythonhosted.org/packages/eb/21/a1a26f5693638a0e2efd964b65dcc6b6b490f4ebc52effcfca96eeb27d3f/pyfits-3.2.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e5104c9762148ee643955b8e8b9135bf",
          "sha256": "9751fa57954ddb2330398064235ede3def2791d89728c6230ac40cd47dc3240c"
        },
        "downloads": 2518,
        "filename": "pyfits-3.2.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "e5104c9762148ee643955b8e8b9135bf",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 1245738,
        "upload_time": "2013-11-26T19:57:53",
        "url": "https://files.pythonhosted.org/packages/96/99/18c04795094da14154b6bfe0173c0b68e9081ce17af4aecb61b87520397b/pyfits-3.2.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8a654014582d39846ca0d0436d7f5df6",
          "sha256": "73440fe0ebc58297ae60462e458bb2fd05f850a01ca0bcfde574f9187723484e"
        },
        "downloads": 1874,
        "filename": "pyfits-3.2.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "8a654014582d39846ca0d0436d7f5df6",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 1247450,
        "upload_time": "2013-11-26T19:59:04",
        "url": "https://files.pythonhosted.org/packages/7c/c1/7eeaec152d826be818f295dd5740f4d4de85f849ad35349e118d4ccd4f6d/pyfits-3.2.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "cf1c4baa8c71df3f00198929d56665fe",
          "sha256": "08ac7cf75668de8114c94f0df5da00ad077df75f41a6a5c753634cf5bf0eefa5"
        },
        "downloads": 1892,
        "filename": "pyfits-3.2.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "cf1c4baa8c71df3f00198929d56665fe",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 1246757,
        "upload_time": "2013-11-26T20:00:20",
        "url": "https://files.pythonhosted.org/packages/9e/f0/4007d6e2020da9d93b89ad1a4994877b14261a0b10dd1cba596c31daf829/pyfits-3.2.win32-py3.2.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "dee3ca638702e262d64c483072596f11",
          "sha256": "5fc391d787fece8fe5871a3a98fa938bd15ec8da0c978b3b418883ee1f12c84b"
        },
        "downloads": 1984,
        "filename": "pyfits-3.2.win32-py3.3.exe",
        "has_sig": false,
        "md5_digest": "dee3ca638702e262d64c483072596f11",
        "packagetype": "bdist_wininst",
        "python_version": "3.3",
        "size": 1241692,
        "upload_time": "2013-11-26T20:01:30",
        "url": "https://files.pythonhosted.org/packages/46/d8/cff784c2305be9df7f8e45b0bcd3c1f24de8ef107b294159aa696966e95a/pyfits-3.2.win32-py3.3.exe"
      }
    ],
    "3.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a4be2d71ba6f77f4bac1a36093b2904b",
          "sha256": "31cf6f3c5e53888027e9daa273e61cb3be0886b417567787f181378259f8be79"
        },
        "downloads": 2876,
        "filename": "pyfits-3.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a4be2d71ba6f77f4bac1a36093b2904b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1626583,
        "upload_time": "2014-03-04T22:46:58",
        "url": "https://files.pythonhosted.org/packages/bc/be/ad05a966bf9c8ee8144f7fd528c8380cf35b9be8bbf428a7a51d3afa3b77/pyfits-3.2.1.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f4cbd35ecd2aca85aeb1937d13df66a9",
          "sha256": "18f965fd3c7bae90b53c4e903e242174a14d0c92322d0db55763f75abec81a7e"
        },
        "downloads": 1668,
        "filename": "pyfits-3.2.1.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "f4cbd35ecd2aca85aeb1937d13df66a9",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 1130546,
        "upload_time": "2014-03-25T19:19:54",
        "url": "https://files.pythonhosted.org/packages/81/61/c41496ff438f7c14fe93a8a19e66db81da5bed7f095b276a233301a9e758/pyfits-3.2.1.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0ddff5da77960accd6aa0cc279027520",
          "sha256": "976c44ee28097195dbe9dd3767ec08e7419ec202b8e4641be7208a6e87e59b99"
        },
        "downloads": 1736,
        "filename": "pyfits-3.2.1.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "0ddff5da77960accd6aa0cc279027520",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 1265824,
        "upload_time": "2014-03-05T19:28:18",
        "url": "https://files.pythonhosted.org/packages/ea/bc/d96053e9917f42ce02d67ec2d6569f80965d85b25ef468e4e8b2008f4083/pyfits-3.2.1.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "04a733bc982121360ab6de7a1b2842b2",
          "sha256": "9c588f821cb3a5572a4674c44d064320f509b52e8a87af6e82f64cd6b1819737"
        },
        "downloads": 1879,
        "filename": "pyfits-3.2.1.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "04a733bc982121360ab6de7a1b2842b2",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 1265169,
        "upload_time": "2014-03-05T19:33:08",
        "url": "https://files.pythonhosted.org/packages/55/c5/4f3dd2d1064901700bbdf4b6bc43ceafe919cdbf0526a3c6959a6ccafec8/pyfits-3.2.1.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b45a81d8e9c3eb00bb88f4c421c6d9e8",
          "sha256": "63db85b1bfb0bd5fbbadd37c72589da49df9fe2d29e2b664a33d69efde759cc0"
        },
        "downloads": 1733,
        "filename": "pyfits-3.2.1.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "b45a81d8e9c3eb00bb88f4c421c6d9e8",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 1267027,
        "upload_time": "2014-03-05T19:35:25",
        "url": "https://files.pythonhosted.org/packages/9a/ec/14eb1788972657a45430fe53f79ec4b72e0f6311dfa7e7aa65a646d1f2cb/pyfits-3.2.1.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3b1da84b9d7283446584acafc7accef4",
          "sha256": "5bdfc63bd1edf343c9b1100a4ed35dd9b3bfdd7df4ee86528dc961f95456891b"
        },
        "downloads": 1730,
        "filename": "pyfits-3.2.1.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "3b1da84b9d7283446584acafc7accef4",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 1266348,
        "upload_time": "2014-03-05T19:44:40",
        "url": "https://files.pythonhosted.org/packages/7e/4e/d5ecd673ac631a604cb2590d952d2c5006a53a6e70b643c8e1cff6c6ec0d/pyfits-3.2.1.win32-py3.2.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7e0cad1fccafeb2d4bfc60b761708ce5",
          "sha256": "a3774fc324d5f312939e171d1a63e289c19aef23c97663f6889c549b78f52382"
        },
        "downloads": 1803,
        "filename": "pyfits-3.2.1.win32-py3.3.exe",
        "has_sig": false,
        "md5_digest": "7e0cad1fccafeb2d4bfc60b761708ce5",
        "packagetype": "bdist_wininst",
        "python_version": "3.3",
        "size": 1261286,
        "upload_time": "2014-03-25T19:19:06",
        "url": "https://files.pythonhosted.org/packages/2e/bc/4079ed85e1023024ebaf26c5390158c1927b8053d073b6934a6543ab6fec/pyfits-3.2.1.win32-py3.3.exe"
      }
    ],
    "3.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "77cd05b34116d46a96e21b62cc1bfa1c",
          "sha256": "3ebd50d9c135f0a29c94ff029e90a06c569cc6bb3202dcfca01468fda9f85c1a"
        },
        "downloads": 5439,
        "filename": "pyfits-3.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "77cd05b34116d46a96e21b62cc1bfa1c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1629022,
        "upload_time": "2014-03-28T20:01:02",
        "url": "https://files.pythonhosted.org/packages/06/e5/52c495099da816e385361f5c787fc8039a36fc96fa17fb7ce419a2ba9c5d/pyfits-3.2.2.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "47bf36cb89c4e61a99989947e305d44a",
          "sha256": "28c81209c4723742772e5bd55bb21ba0530bab5d8f218c583b5f94e8cc7f4449"
        },
        "downloads": 1681,
        "filename": "pyfits-3.2.2.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "47bf36cb89c4e61a99989947e305d44a",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 1131533,
        "upload_time": "2014-03-28T20:14:09",
        "url": "https://files.pythonhosted.org/packages/64/f0/d524e08dd54c469c0c039ad7d60a9a3c1024526fce647ac761ed9db65757/pyfits-3.2.2.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "73aa39016572b6b28211be5135c4c676",
          "sha256": "b64ee393e3b6a0f3fd0ee2592ad9cc1dc3773e8f85e3e47d1d0c8931247c291e"
        },
        "downloads": 1611,
        "filename": "pyfits-3.2.2.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "73aa39016572b6b28211be5135c4c676",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 1266805,
        "upload_time": "2014-03-28T20:15:58",
        "url": "https://files.pythonhosted.org/packages/f8/a4/1d467cb38ae07cd19dd529784647c0b2158879740433bec7fa6dc0ac799d/pyfits-3.2.2.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3c798837807ca33af6b9fd2219039d29",
          "sha256": "65e0e825fa443bc9c7c688d5c1cbfb3a2f141f686eb08316b4148306bd9beb5a"
        },
        "downloads": 1815,
        "filename": "pyfits-3.2.2.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "3c798837807ca33af6b9fd2219039d29",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 1266174,
        "upload_time": "2014-03-28T20:16:43",
        "url": "https://files.pythonhosted.org/packages/28/0c/ab00a6e095d73181093c11c54aa36f6e940761471658a6e830e5bd5693e6/pyfits-3.2.2.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b6d00e4d390017c08c1e477fc69afe81",
          "sha256": "e5eea72449b91d3f382668ec6fc4d17f64b8052bc71c6858d9b7fed2681509a0"
        },
        "downloads": 1592,
        "filename": "pyfits-3.2.2.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "b6d00e4d390017c08c1e477fc69afe81",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 1267996,
        "upload_time": "2014-03-28T20:21:42",
        "url": "https://files.pythonhosted.org/packages/7a/e1/0408ac75d57ae88851df8597d311b8b5e55b47792bf0db8ea348ace7ab12/pyfits-3.2.2.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "985bb2fe5121c54cfa73b449e05249f1",
          "sha256": "c997e9563531ea14cfe16f025b5f5b77579db35bc59d6045eed4ff10d8a6d9f9"
        },
        "downloads": 1610,
        "filename": "pyfits-3.2.2.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "985bb2fe5121c54cfa73b449e05249f1",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 1267318,
        "upload_time": "2014-03-28T20:23:09",
        "url": "https://files.pythonhosted.org/packages/c4/b6/1f0e5418094729b6eb71113e9657fed49301dc96aa28875c3efd7a059483/pyfits-3.2.2.win32-py3.2.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "cba22b23871f2b73fb4dfdcc65d7d9d1",
          "sha256": "e7731025f1ffe88e74a713f733664395fff85effc2fcec53b070f9112e47982b"
        },
        "downloads": 1653,
        "filename": "pyfits-3.2.2.win32-py3.3.exe",
        "has_sig": false,
        "md5_digest": "cba22b23871f2b73fb4dfdcc65d7d9d1",
        "packagetype": "bdist_wininst",
        "python_version": "3.3",
        "size": 1262254,
        "upload_time": "2014-03-28T20:25:33",
        "url": "https://files.pythonhosted.org/packages/cf/07/678e86baa2b8c155414be964fc6ae3e00da17d8d0898a92c56127dff5c1a/pyfits-3.2.2.win32-py3.3.exe"
      }
    ],
    "3.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1a337e09d65256afeaa371bafa15d3c3",
          "sha256": "e8a4e401d8d43ac1e3bdf1ef175f9c640bd66d3d7dc21633b59ec35a4540a775"
        },
        "downloads": 2055,
        "filename": "pyfits-3.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1a337e09d65256afeaa371bafa15d3c3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1632792,
        "upload_time": "2014-05-27T15:24:21",
        "url": "https://files.pythonhosted.org/packages/b3/e7/3fe445a85dacab89d5e9b66f176b8c6cd8b9c0fee5d1a413592d655ed16e/pyfits-3.2.3.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "cc546590d6675b36dc7884129e6e2e0b",
          "sha256": "424b8d836203188984d4e43456cfb381d0ff816dafa510e4b082516250cfe19f"
        },
        "downloads": 1480,
        "filename": "pyfits-3.2.3.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "cc546590d6675b36dc7884129e6e2e0b",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 1136864,
        "upload_time": "2014-05-14T17:19:47",
        "url": "https://files.pythonhosted.org/packages/8d/c9/eb39e34667e9fd134746bac16cb677311f4c8a6c5a8d3024977d9de4d232/pyfits-3.2.3.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1647325ac153e0be2b7da3defa4bd4a8",
          "sha256": "d65ac862be1ed50159286b02ce90b689781735e2f6e882e147c6e14ea2882ba0"
        },
        "downloads": 1475,
        "filename": "pyfits-3.2.3.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "1647325ac153e0be2b7da3defa4bd4a8",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 1272197,
        "upload_time": "2014-05-14T17:21:32",
        "url": "https://files.pythonhosted.org/packages/f7/5e/59529b91fe67baef7de332e1b223d8718a1963dfedd84ac4091ce3671b09/pyfits-3.2.3.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "aa6e10a50f6ed76d40b3963994ed653f",
          "sha256": "7cebc6a15c700e41d080ce62f1fca9aae54062fbb7c9af1505219eee72fa0476"
        },
        "downloads": 1580,
        "filename": "pyfits-3.2.3.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "aa6e10a50f6ed76d40b3963994ed653f",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 1272176,
        "upload_time": "2014-05-14T17:23:04",
        "url": "https://files.pythonhosted.org/packages/06/ec/0ad58edc382970a1a7139f829b16eaa27b0cf8dfee90a21aea5efeef6ecb/pyfits-3.2.3.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "21d4118dd0f1607b863608437b310fe5",
          "sha256": "5d059d00bdd6ff270a8f49a165120120494c2f315334605d7f1f75937c28987b"
        },
        "downloads": 1482,
        "filename": "pyfits-3.2.3.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "21d4118dd0f1607b863608437b310fe5",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 1273494,
        "upload_time": "2014-05-14T17:24:42",
        "url": "https://files.pythonhosted.org/packages/30/95/b46368ae5e18afa63d1b825c66c2760d8bb1e71d759f2c1f21038e017562/pyfits-3.2.3.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "663055cec86c87368765d766c3eaa645",
          "sha256": "81623a1b50a7c3511fe8444eba51b4edad3df6b6de8d7af3b26c993544fec702"
        },
        "downloads": 1485,
        "filename": "pyfits-3.2.3.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "663055cec86c87368765d766c3eaa645",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 1273456,
        "upload_time": "2014-05-14T17:26:20",
        "url": "https://files.pythonhosted.org/packages/70/07/15379714471d84abfcd44cc90da89a406ba80b2f74a07d180da5e372cbe2/pyfits-3.2.3.win32-py3.2.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5228acbe1bb73bc5b12fe7f6fe93a18e",
          "sha256": "9a998d35a22b61a7f419b76ca737df8e6212cf6a750db3262bdef02a562d5338"
        },
        "downloads": 1494,
        "filename": "pyfits-3.2.3.win32-py3.3.exe",
        "has_sig": false,
        "md5_digest": "5228acbe1bb73bc5b12fe7f6fe93a18e",
        "packagetype": "bdist_wininst",
        "python_version": "3.3",
        "size": 1268384,
        "upload_time": "2014-05-14T17:27:50",
        "url": "https://files.pythonhosted.org/packages/6a/15/9cad8004460b948cc1d101936c0a6dd024808c524a273495142f1e9dd862/pyfits-3.2.3.win32-py3.3.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d6908f1cdf5098fe63f379aa25e9bf4d",
          "sha256": "8ba01a65b2ebd2732e37fac2fd4e3e6e334a14b8ff53491da8082a4744e3facd"
        },
        "downloads": 1535,
        "filename": "pyfits-3.2.3.win32-py3.4.exe",
        "has_sig": false,
        "md5_digest": "d6908f1cdf5098fe63f379aa25e9bf4d",
        "packagetype": "bdist_wininst",
        "python_version": "3.4",
        "size": 1268394,
        "upload_time": "2014-05-14T17:29:23",
        "url": "https://files.pythonhosted.org/packages/54/80/4cddcd13efb82867ef1d9697b18b7339607c23e5675907689197a4638609/pyfits-3.2.3.win32-py3.4.exe"
      }
    ],
    "3.2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "251ef2639e71464a256cf6d71ba5a878",
          "sha256": "171a8e04330b8c95c73e9aff3a7581558abd608cf927e669c6d55128ecdff366"
        },
        "downloads": 5655,
        "filename": "pyfits-3.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "251ef2639e71464a256cf6d71ba5a878",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1630052,
        "upload_time": "2014-06-02T23:16:51",
        "url": "https://files.pythonhosted.org/packages/25/46/6f569a8b733b8f2af5d94b702b1098084d8e24d8c01c2dc26acd047975ee/pyfits-3.2.4.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "73e92308223d089c28d711ab161c38a1",
          "sha256": "39982a1106f596b2dc21712f2894d65332941daa75d91f45d59d024942f02ee1"
        },
        "downloads": 1616,
        "filename": "pyfits-3.2.4.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "73e92308223d089c28d711ab161c38a1",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 1137682,
        "upload_time": "2014-06-09T15:56:47",
        "url": "https://files.pythonhosted.org/packages/6e/6e/3e1dea1ad275610735a6c817f01b7205f9857c0065c67b227f3474ed35f6/pyfits-3.2.4.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5b79332f516ea45f9e7fa51ac6c5304f",
          "sha256": "eeba3e29c7b9aa9a71aafce15f72de7dd2e4d53a5e0950f6f784a9f1c0da6980"
        },
        "downloads": 1543,
        "filename": "pyfits-3.2.4.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "5b79332f516ea45f9e7fa51ac6c5304f",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 1273014,
        "upload_time": "2014-06-09T15:57:49",
        "url": "https://files.pythonhosted.org/packages/59/b3/5c36cdaadcc03ed3d8ebd12b6974ca6fa6f44a904071d74510f22b4a6e0d/pyfits-3.2.4.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4dedd4ca53e3385f907be1ab7d048661",
          "sha256": "039a27f29249c8e0d9c398004c0646c107c5a873978a166b3d45d157ab45705b"
        },
        "downloads": 1854,
        "filename": "pyfits-3.2.4.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "4dedd4ca53e3385f907be1ab7d048661",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 1273021,
        "upload_time": "2014-06-09T15:58:57",
        "url": "https://files.pythonhosted.org/packages/d3/93/71d00d5db616fe5a4e163642afc5a9ead35ec87a6bca5bff2066e5af439c/pyfits-3.2.4.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "516004fd82d32875893b41608771b989",
          "sha256": "92ce85b049a8603a6f9983d2d4b20529c35848163cae17c076f69ce96fa893a9"
        },
        "downloads": 1507,
        "filename": "pyfits-3.2.4.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "516004fd82d32875893b41608771b989",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 1274311,
        "upload_time": "2014-06-09T16:09:54",
        "url": "https://files.pythonhosted.org/packages/a3/fa/83a69f4b8d6b45009931a177133bec82b00cbbb38846cba077522b3d4ffe/pyfits-3.2.4.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e2e60c14d19510e7746f5867b7986e8b",
          "sha256": "11c08e48d4708c86c174d1b1a99f832c16b55ffdc5c527e92b4413a4a2b5acb7"
        },
        "downloads": 1490,
        "filename": "pyfits-3.2.4.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "e2e60c14d19510e7746f5867b7986e8b",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 1274266,
        "upload_time": "2014-06-09T16:27:47",
        "url": "https://files.pythonhosted.org/packages/d6/96/4fd6b54ef08aaa90ede84cb81936eba3f133119626682b4fe0cac2b108e7/pyfits-3.2.4.win32-py3.2.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "240d6b8dfe43c5640b0811105e1d717e",
          "sha256": "d58663a6588adc3875d24f4890927ce38be86ff10b5586ef39ccaa37901e32ae"
        },
        "downloads": 1520,
        "filename": "pyfits-3.2.4.win32-py3.3.exe",
        "has_sig": false,
        "md5_digest": "240d6b8dfe43c5640b0811105e1d717e",
        "packagetype": "bdist_wininst",
        "python_version": "3.3",
        "size": 1269196,
        "upload_time": "2014-06-09T16:32:39",
        "url": "https://files.pythonhosted.org/packages/47/f7/14218636bade034ea12530cdc0589b59194c2ce5f990b2df3e1c8f833d81/pyfits-3.2.4.win32-py3.3.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3a08e191916f895f0a30e8dfc63e5852",
          "sha256": "876d49c5f90c8ce3af3e5ae59016fd932a9fe9196621c9c21b5861ee551274f4"
        },
        "downloads": 1566,
        "filename": "pyfits-3.2.4.win32-py3.4.exe",
        "has_sig": false,
        "md5_digest": "3a08e191916f895f0a30e8dfc63e5852",
        "packagetype": "bdist_wininst",
        "python_version": "3.4",
        "size": 1269205,
        "upload_time": "2014-06-09T16:34:10",
        "url": "https://files.pythonhosted.org/packages/35/0d/7840078d29a175e83880c9c27a7cf51dc07c5f1769620b694c27bd385aff/pyfits-3.2.4.win32-py3.4.exe"
      }
    ],
    "3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e84b1ddf89668fc95026d733ff6cd721",
          "sha256": "e1a7ac30670fb38a62f0c7589afc16a274d609904be79674ede92267b643d825"
        },
        "downloads": 1718,
        "filename": "pyfits-3.3-cp26-none-win32.whl",
        "has_sig": false,
        "md5_digest": "e84b1ddf89668fc95026d733ff6cd721",
        "packagetype": "bdist_wheel",
        "python_version": "2.6",
        "size": 923631,
        "upload_time": "2014-07-17T18:39:07",
        "url": "https://files.pythonhosted.org/packages/08/55/e4135243665a95fb3e1c1f8b8297f1ad670a03ed0b714972293c8a1317e8/pyfits-3.3-cp26-none-win32.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "96eabc1d4022ce82ef5d0e34a3f9d999",
          "sha256": "db7e1de8e81b4767b9931a75433e5f63ff14d8102a43b3c6ed640393766cc204"
        },
        "downloads": 2318,
        "filename": "pyfits-3.3-cp27-none-win32.whl",
        "has_sig": false,
        "md5_digest": "96eabc1d4022ce82ef5d0e34a3f9d999",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 923610,
        "upload_time": "2014-07-17T18:44:38",
        "url": "https://files.pythonhosted.org/packages/eb/91/a83e3bea510b28c0d96be4cf19922aa80eedf4f3df5f18bbe17a3d2615dd/pyfits-3.3-cp27-none-win32.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "29ca0de6e3f6d663dd556cb563f0b41c",
          "sha256": "4064a44ddea2406f5c0fb0f6b6165db0f24f7f7e554fd70aabec234b682b6afb"
        },
        "downloads": 1470,
        "filename": "pyfits-3.3-cp32-none-win32.whl",
        "has_sig": false,
        "md5_digest": "29ca0de6e3f6d663dd556cb563f0b41c",
        "packagetype": "bdist_wheel",
        "python_version": "3.2",
        "size": 923385,
        "upload_time": "2014-07-17T18:49:05",
        "url": "https://files.pythonhosted.org/packages/46/2d/f0b255fb463588365a3ead7614e057aa28c46c490493cb6680f250656f15/pyfits-3.3-cp32-none-win32.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e0977caf6a2455bcede5c88d46584052",
          "sha256": "e4983690d771453c9e0f6e9dfbe6afd31b98eaa4f190921138c327380abca2fc"
        },
        "downloads": 1524,
        "filename": "pyfits-3.3-cp33-none-win32.whl",
        "has_sig": false,
        "md5_digest": "e0977caf6a2455bcede5c88d46584052",
        "packagetype": "bdist_wheel",
        "python_version": "3.3",
        "size": 923426,
        "upload_time": "2014-07-17T18:50:36",
        "url": "https://files.pythonhosted.org/packages/a3/e4/1e9a518c0d9b4a070910e6375a30423bc140d4f68691b504efa310238830/pyfits-3.3-cp33-none-win32.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "627e296d80b7c9106942d93ba049ecf4",
          "sha256": "95cd72bf687390639f4e024515bd2ab1463ebb3c9455b6d81025c9dfeaea3aa4"
        },
        "downloads": 1809,
        "filename": "pyfits-3.3-cp34-none-win32.whl",
        "has_sig": false,
        "md5_digest": "627e296d80b7c9106942d93ba049ecf4",
        "packagetype": "bdist_wheel",
        "python_version": "3.4",
        "size": 923447,
        "upload_time": "2014-07-17T18:52:10",
        "url": "https://files.pythonhosted.org/packages/8c/c7/6276de40011aeb14e1d5e49cae88b92aefdb77ea49a60f412f8b186ee503/pyfits-3.3-cp34-none-win32.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0d4f3515bc714f48093578e96ca7219d",
          "sha256": "becb6dcc7e443138b9d239db7a0e8ad939e6e047c2c9ca86e84d0672da425fa1"
        },
        "downloads": 37162,
        "filename": "pyfits-3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0d4f3515bc714f48093578e96ca7219d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1646403,
        "upload_time": "2014-07-17T18:36:09",
        "url": "https://files.pythonhosted.org/packages/3e/51/47730369a946ead683a397d7e64e15b23b7e96b5acbf021d328465ac2c08/pyfits-3.3.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "371db3b9d5a48af992a1e4e58cead64f",
          "sha256": "8bdb843f25c27cab386a6d95fa6698192feaedac0185c921614431826bd42472"
        },
        "downloads": 1577,
        "filename": "pyfits-3.3.win32-py2.5.exe",
        "has_sig": false,
        "md5_digest": "371db3b9d5a48af992a1e4e58cead64f",
        "packagetype": "bdist_wininst",
        "python_version": "2.5",
        "size": 1156629,
        "upload_time": "2014-07-17T18:37:46",
        "url": "https://files.pythonhosted.org/packages/e0/d8/9a4bf16fe9c02a9a2b16dc895a96d977d69b55f0669987f524e241020caa/pyfits-3.3.win32-py2.5.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0a59bbe23bdeaf5abcef304c0b85d0ca",
          "sha256": "5c4afa89ca131f510eaf75b07e546859c2b0f75b2bc146bc7dc5ed229244c395"
        },
        "downloads": 1537,
        "filename": "pyfits-3.3.win32-py2.6.exe",
        "has_sig": false,
        "md5_digest": "0a59bbe23bdeaf5abcef304c0b85d0ca",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "size": 1291964,
        "upload_time": "2014-07-17T18:39:04",
        "url": "https://files.pythonhosted.org/packages/80/c0/7ee58750eb27443e6df875178429d1026814028bd7b6edb9f12a7280288c/pyfits-3.3.win32-py2.6.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "127332ac8821e2dec76a14813c8d5d99",
          "sha256": "5dcd90849fab1c4435a9ffbcdd41beffc3d609eaf707f3c3ecb79e513549848a"
        },
        "downloads": 35679,
        "filename": "pyfits-3.3.win32-py2.7.exe",
        "has_sig": false,
        "md5_digest": "127332ac8821e2dec76a14813c8d5d99",
        "packagetype": "bdist_wininst",
        "python_version": "2.7",
        "size": 1291430,
        "upload_time": "2014-07-17T18:44:35",
        "url": "https://files.pythonhosted.org/packages/fc/63/bdb8cae236dbe69e4f7149ced9338112fe5e3888106a84c9b3b36c2127b4/pyfits-3.3.win32-py2.7.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6332e150e6c333e349ad617d965184f6",
          "sha256": "fe822a6726b85bb1585a9174b9775ca0336c282e549a7b9c2e2f350c94195d9a"
        },
        "downloads": 1441,
        "filename": "pyfits-3.3.win32-py3.1.exe",
        "has_sig": false,
        "md5_digest": "6332e150e6c333e349ad617d965184f6",
        "packagetype": "bdist_wininst",
        "python_version": "3.1",
        "size": 1292039,
        "upload_time": "2014-07-17T18:45:40",
        "url": "https://files.pythonhosted.org/packages/f3/a7/d8acd0dcab71be72f1a2c7f75fc0b056863582d7889d19cc931ed37a6727/pyfits-3.3.win32-py3.1.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "69d8e87322e32bd25e2805cbeec9b5cf",
          "sha256": "e675628823dd766a96effed6dc4799cb581ae6e8ea4ecd43547e255a27a5c3e7"
        },
        "downloads": 1437,
        "filename": "pyfits-3.3.win32-py3.2.exe",
        "has_sig": false,
        "md5_digest": "69d8e87322e32bd25e2805cbeec9b5cf",
        "packagetype": "bdist_wininst",
        "python_version": "3.2",
        "size": 1291486,
        "upload_time": "2014-07-17T18:47:14",
        "url": "https://files.pythonhosted.org/packages/28/d9/41c26707df919e8bbe584d9d2ace0ef9d90c6c7f0b6b07a23539cbf9bb46/pyfits-3.3.win32-py3.2.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "08cc197e1f84df04d0f8c56b0466ce59",
          "sha256": "1a25cce5f9b18b6f994fae5bae2214f4fdc23b4e24969ae980d31a1dc771dc93"
        },
        "downloads": 1611,
        "filename": "pyfits-3.3.win32-py3.3.exe",
        "has_sig": false,
        "md5_digest": "08cc197e1f84df04d0f8c56b0466ce59",
        "packagetype": "bdist_wininst",
        "python_version": "3.3",
        "size": 1286414,
        "upload_time": "2014-07-17T18:50:33",
        "url": "https://files.pythonhosted.org/packages/3b/6c/0e226e51b4aaf8e1d3caa207d5cbd9e196ad866d4b8a2fea22e3fc6d8592/pyfits-3.3.win32-py3.3.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1565a358a104896ed1e897e1b84dd136",
          "sha256": "8425ef492f42817b06835be64cc2adb42a1fd85eb7d702f55c5bfe66d410e0b0"
        },
        "downloads": 1962,
        "filename": "pyfits-3.3.win32-py3.4.exe",
        "has_sig": false,
        "md5_digest": "1565a358a104896ed1e897e1b84dd136",
        "packagetype": "bdist_wininst",
        "python_version": "3.4",
        "size": 1286429,
        "upload_time": "2014-07-17T18:52:06",
        "url": "https://files.pythonhosted.org/packages/bd/14/725004866293cc2bf060c14fd6d07df1df0b0267622253fec11e7b2dbeed/pyfits-3.3.win32-py3.4.exe"
      }
    ],
    "3.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ae38c61ed5574f29cfd202bfe3091fd9",
          "sha256": "ce0319cf6ef40846c5915202e4c8bd8d293ad85af4b14aa5a60fb285b7538c4b"
        },
        "downloads": 3384,
        "filename": "pyfits-3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ae38c61ed5574f29cfd202bfe3091fd9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1692414,
        "upload_time": "2016-01-29T15:24:24",
        "url": "https://files.pythonhosted.org/packages/45/98/d6d25932e6a82fa8456d38ab307bfb8945a1e1dd4e896730555e3b61cfc5/pyfits-3.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ae38c61ed5574f29cfd202bfe3091fd9",
        "sha256": "ce0319cf6ef40846c5915202e4c8bd8d293ad85af4b14aa5a60fb285b7538c4b"
      },
      "downloads": 3384,
      "filename": "pyfits-3.4.tar.gz",
      "has_sig": false,
      "md5_digest": "ae38c61ed5574f29cfd202bfe3091fd9",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 1692414,
      "upload_time": "2016-01-29T15:24:24",
      "url": "https://files.pythonhosted.org/packages/45/98/d6d25932e6a82fa8456d38ab307bfb8945a1e1dd4e896730555e3b61cfc5/pyfits-3.4.tar.gz"
    }
  ]
}