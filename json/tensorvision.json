{
  "info": {
    "author": "Marvin Teichman, Martin Thoma",
    "author_email": "marvin.teichmann@googlemail.com, info@martin-thoma.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "[![Code Issues](https://www.quantifiedcode.com/api/v1/project/3ef49e94e03a42b0bf896f5377c8e741/badge.svg)](https://www.quantifiedcode.com/app/project/3ef49e94e03a42b0bf896f5377c8e741)\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000)](https://github.com/\nTensorVision/TensorVision/blob/master/LICENSE)\n\nA simple toolkit to easily apply image classification networks.\n\n\n## Usage\n\nTrain a model:\n\n```bash\n$ python train.py\n```\n\nEvaluate a model:\n\n```bash\n$ python eval.py\n```\n\nFlags:\n* --config=Examples/myconfig\n* --name=myname\n\n\n## Requirements\n\nThe following python moduls need to be installed:\n\n* tensorflow 0.71\n* numpy\n* scipy\n* PIL / pillow\n\n\nYou can do that by\n\n```bash\n$ pip install -r requirements.txt\n```\n\n\n## Development\n\nFirst of all, you should install the additional development requirements:\n\n```bash\n$ pip install -r requirements-dev.txt\n```\n\nFor development, you can avoid reinstalling the TensorVision package by adding\nTensorVision to your PYTHONPATH. In my case, that is:\n\n```bash\n$ export PYTHONPATH=\"${PYTHONPATH}:/home/moose/GitHub/TensorVision/\"\n```\n\nYou can run the tests by\n\n```bash\n$ python setup.py test\n```\n\n\n## Workflow\n\n### One-time stuff\n\n* Create a config.py for general configuration\n\n### Each time\n\nEach time you get a new task\n\n\n#### Create JSON file\n\nCreate a json file (e.g. `cifar10_cnn.json`). It has at least the following\ncontent:\n\n```json\n{\n  \"model\": {\n    \"input_file\": \"examples/inputs/cifar10_input.py\",\n    \"architecture_file\" : \"examples/networks/cifar_net.py\",\n    \"optimizer_file\" : \"examples/optimizer/exp_decay.py\"\n  }\n}\n```\n\n\n#### Adjust input file\n\nThe `input_file` contains the path to a Python file. This Python file has to\nhave a function `inputs(hypes, q, phase, data_dir)`.\n\n\n#### Adjust architecture file\n\nThe `architecture_file` contains the architecture of the network. It has to\nhave the following functions:\n\n* `loss(H, logits, labels)`\n* `inference(H, images, train=True)`\n* `evaluation(H, logits, labels)`\n\n\n#### Adjust the solver file\n\nThe `optimizer_file` contains the path to a Python file. This Python file has\nto have a function `training(H, loss, global_step)`. It defines how one tries\nto find a minimum of the loss function.\n\n\n## Changelog",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/MarvinTeichmann/TensorVision",
    "keywords": "",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "tensorvision",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/tensorvision/",
    "release_url": "https://pypi.org/project/tensorvision/0.1.dev1/",
    "requires_python": null,
    "summary": "A library to build and train neural networks in with TensorFlow for Computer Vision",
    "version": "0.1.dev1"
  },
  "releases": {
    "0.1.dev1": []
  },
  "urls": []
}