{
  "info": {
    "author": "Di Paola Martin",
    "author_email": "use-github-issues@example.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Programming Language :: Ruby",
      "Programming Language :: Unix Shell",
      "Topic :: Documentation",
      "Topic :: Software Development :: Documentation",
      "Topic :: Software Development :: Testing"
    ],
    "description": ".. image:: https://travis-ci.org/eldipa/byexample.svg?branch=master\n   :alt Build Status\n   :target https://travis-ci.org/eldipa/byexample\n\n``byexample``\n=============\n\n``byexample`` is literate programming engine where you can write\nordinary text and snippets the code in the same file\nIt is intended primary for writing good and live tutorials and documentation\nshowing how a piece of software works or it can be used *by example*.\n\nCurrently we support\n - Python\n - Ruby\n - Shell (sh and bash)\n\nMore languages will be supported in the future. Stay tuned.\n\nContribute\n^^^^^^^^^^\n\nGo ahead, fork this project a start to hack it. Run `make test` to ensure that\neverything is working as expected and then propose your Pull Request!\n\nThere are some interesting areas where you can contribute like\n - add support to new languages (Javascript, Julia, just listen to you heart)\n - add more examples. How do you use ``byexample``? Give us your feedback!\n\nUsage\n^^^^^\n\nInstall and run it against any source file(s), like this Readme.\nAll the snippets will be collected, executed and checked.\n\n.. code:: sh\n\n    $ pip install --user byexample      # install it # byexample: +SKIP\n    $ byexample README.rst              # run it     # byexample: +SKIP\n    .............\n    File README.rst, 13/13 test ran in 0.81 seconds\n    [PASS] Pass: 13 Fail: 0 Aborted: 0\n\n\nSee the inline help for more information about how to tweak the execution\n\n.. code:: sh\n\n    $ byexample -h                                   # byexample: +SKIP\n    usage: byexample <...>\n\nSnippets of code\n----------------\n\nAny snippet of code that it is detected by ``byexample`` will be executed\nand its output compared with the text below.\nThis is a quite useful way to test and document by example.\n\nThe snippets are preceded by the primary prompt. If the code spans\nmultiple lines, ``byexample`` uses a secondary prompt.\n\nFor Python we use ``>>>`` and ``...`` respectively\n\n.. code:: python\n\n    >>> def add(a, b):\n    ...   return a + b\n\n    >>> add(1, 2)\n    3\n\nThe expression ``add(1, 2)`` is executed and the output compared with ``3`` to\nsee if the test passes or not.\n\nThere is not restriction in which snippets you can add. You can even mix\nsnippets of different languages in the same file!\n\nHere there is an example in Ruby\n\n.. code:: ruby\n\n    >> def add(a, b)\n    >>   a + b\n    >> end;\n\n    >> add(2, 6)\n    => 8\n\n\nThe 'match anything' wildcard\n-----------------------------\n\nBy default, if the expected text has the ``<...>`` marker, that\nwill match for any string.\nVery useful to match long unwanted or uninteresting strings.\n\n.. code:: python\n\n    >>> print(list(range(20)))\n    [0, 1, <...>, 18, 19]\n\nCapture\n-------\n\nThe ``<name>`` marker can be used to capture any string (like ``<...>``)\nbut also it assigns a name to the capture.\n\nIf a name is used in an example more than once, all the string captured under\nthat name must be the same string, otherwise the test will fail.\n\n.. code:: python\n\n    >>> X = 42\n\n    >>> [1, X, 2, X]\n    [1, <random-number>, 2, <random-number>]\n\n    >>> # this will fail because X and 4 are not the **same** 'random-number'\n    >>> # we use +PASS to skip the checks of this test\n    >>> [1, X, 2, 4]        # byexample: +PASS\n    [1, <random-number>, 2, <random-number>]\n\n\nOption flags\n------------\n\n``byexample`` supports a set of flags or options that can change some\nparameters of the execution of the example.\nSome flags are generic, others are interpreter-specific.\n\nNormalize whitespace\n....................\n\nReplace any sequence of whitespace by a single one. This makes the test\nmore robust against small differences (trailing spaces, space/tab mismatch)\n\n.. code:: python\n\n    >>> print(list(range(20)))     # byexample: +WS\n    [0,   1,  2,  3,  4,  5,  6,  7,  8,  9,\n    10,  11, 12, 13, 14, 15, 16, 17, 18, 19]\n\nSkip and Pass\n.............\n\n``SKIP`` will skip the example completely while ``PASS`` will execute it\nnormally but it will not check the output.\n\n.. code:: python\n\n    >>> a = 1\n    >>> a = 2       # do not run this code # byexample: +SKIP\n    >>> a\n    1\n\n    >>> def f():\n    ...   print(\"Choosing a random number...\")\n    ...   return 42\n\n    >>> a = f()     # execute the code but ignore the output # byexample: +PASS\n    >>> a\n    42\n\nDocumentation\n^^^^^^^^^^^^^\n\nSee more examples, in general and in particular for each supported language,\nin ``docs/``.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/eldipa/byexample",
    "keywords": "doctest documentation test testing",
    "license": "GNU GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "byexample",
    "platform": "",
    "project_url": "https://pypi.org/project/byexample/",
    "release_url": "https://pypi.org/project/byexample/2.1.1/",
    "requires_dist": [
      "pexpect (<5,>=4)"
    ],
    "requires_python": ">=2.6",
    "summary": "Write snippets of code in Python, Ruby, and others as documentation and execute them as regression tests.",
    "version": "2.1.1"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e196cd03ef75e573b8062d470c36f403",
          "sha256": "586396a2ff7f19a31ef960d7764d12e446fd9959a67057b545f9954c9cb52e54"
        },
        "downloads": -1,
        "filename": "byexample-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e196cd03ef75e573b8062d470c36f403",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 19197,
        "upload_time": "2017-11-15T14:10:12",
        "url": "https://files.pythonhosted.org/packages/c1/25/b39f1a9f2595421704438a61e32e212324fdb7bd7ce21b6918132528ee4c/byexample-1.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "34be6302d6e9a63580ff47563a9392e6",
          "sha256": "79a5af1061396bd2ab64c8fa88eb94aabbe2983cc062c00a64bea685ec4aa437"
        },
        "downloads": -1,
        "filename": "byexample-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "34be6302d6e9a63580ff47563a9392e6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14359,
        "upload_time": "2017-11-15T14:10:13",
        "url": "https://files.pythonhosted.org/packages/6d/4b/054df3ab85bc2a10b9b12623c4b96fac6294880cfc97e9980898a96c60b1/byexample-1.0.0.tar.gz"
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b0151e9614cbba8a09b6597da639bf7f",
          "sha256": "342d004746e1f4d24b69a66a0486be800110abc8413f3ac620952cc0c2f1d058"
        },
        "downloads": -1,
        "filename": "byexample-2.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0151e9614cbba8a09b6597da639bf7f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 24248,
        "upload_time": "2017-11-28T17:24:46",
        "url": "https://files.pythonhosted.org/packages/39/f0/8e9c528eaf44cf7311cf3d35a206d18fac83df8dcd2b519d23265c6c06f9/byexample-2.1.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "737727216c0a3388eecdba3e919b7351",
          "sha256": "cb087113c72c92e83b4cf1647cab5f7c0b138a45bab9a9a759ebd2abe5d1ff2a"
        },
        "downloads": -1,
        "filename": "byexample-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "737727216c0a3388eecdba3e919b7351",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18692,
        "upload_time": "2017-11-28T17:24:48",
        "url": "https://files.pythonhosted.org/packages/da/72/c10ed67c4fe707c0760a59ebaa8ed041bfaf78927852611494161c656c28/byexample-2.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b0151e9614cbba8a09b6597da639bf7f",
        "sha256": "342d004746e1f4d24b69a66a0486be800110abc8413f3ac620952cc0c2f1d058"
      },
      "downloads": -1,
      "filename": "byexample-2.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b0151e9614cbba8a09b6597da639bf7f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 24248,
      "upload_time": "2017-11-28T17:24:46",
      "url": "https://files.pythonhosted.org/packages/39/f0/8e9c528eaf44cf7311cf3d35a206d18fac83df8dcd2b519d23265c6c06f9/byexample-2.1.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "737727216c0a3388eecdba3e919b7351",
        "sha256": "cb087113c72c92e83b4cf1647cab5f7c0b138a45bab9a9a759ebd2abe5d1ff2a"
      },
      "downloads": -1,
      "filename": "byexample-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "737727216c0a3388eecdba3e919b7351",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 18692,
      "upload_time": "2017-11-28T17:24:48",
      "url": "https://files.pythonhosted.org/packages/da/72/c10ed67c4fe707c0760a59ebaa8ed041bfaf78927852611494161c656c28/byexample-2.1.1.tar.gz"
    }
  ]
}