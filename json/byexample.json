{
  "info": {
    "author": "Di Paola Martin",
    "author_email": "use-github-issues@example.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 2",
      "Programming Language :: Ruby",
      "Programming Language :: Unix Shell",
      "Topic :: Documentation",
      "Topic :: Software Development :: Documentation",
      "Topic :: Software Development :: Testing"
    ],
    "description": "``byexample``\n=============\n\n``byexample`` is literate programming engine where you can write\nordinary text and snippets the code in the same file\nIt is intended primary for writing good and live documentation showing\nhow a piece of software works or it can be used *by example*.\n\nCurrently Python and Ruby are the supported languages. Stay tuned.\n\nExpressions\n------------\n\nExpressions are preceded by the primary prompt. If the expression spans\nmultiple lines, ``byexample`` uses a secondary prompt.\n\nFor example in Python ``byexample`` uses the ``>>>`` string as the primary\nprompt and ``...`` as the secondary prompt.\n\n.. code:: python\n\n    >>> 1 + 2\n    3\n\n    >>> def f(a, b):\n    ...     return a + b\n\n    >>> f(2, 6)\n    8\n\nIn Ruby ``byexample`` uses the ``rb>`` string as the primary prompt and\n``...`` as the secondary prompt.\n\nThe ``=>`` marker is written by the Ruby interpreter and not by ``byexample``.\nIt is left as is as this is quite common in the Ruby examples and literature.\n\n.. code:: ruby\n\n    rb> 1 + 2\n    => 3\n\n    rb> def f(a, b)\n    ...   a + b\n    ... end;\n\n    rb> f(2, 6)\n    => 8\n\n\nThe 'match anything' wildcard\n-----------------------------\n\nBy default, if the expected text has the ``<...>`` marker, that\nwill match for any string.\nVery useful to match long strings with unwanted or uninteresting pieces.\n\n.. code:: python\n    >>> print(list(range(20)))\n    [0, 1, <...>, 18, 19]\n\n\nCapture\n-------\n\nThe ``<name>`` marker can be used to capture any string (like ``<...>``)\nbut also it assigns a name to the capture.\n\n.. code:: python\n    >>> X = 42\n\n    >>> [1, 2, X, 4]\n    [1, 2, <random-number>, 4]\n\n\nIf the same name is used in an example, all the string captured must be\nthe same string.\n\n.. code:: python\n    >>> [1, X, 2, X]\n    [1, <random-number>, 2, <random-number>]\n\n    >>> # this will fail because X and 4 are not the **same** 'random-number'\n    >>> # we use +PASS to force the skip the checks of this test\n    >>> [1, X, 2, 4]        # byexample: +PASS\n    [1, <random-number>, 2, <random-number>]\n\nOption flags\n------------\n\n``byexample`` support a set of flags or options that can change some\nparameters of the execution of the example.\nSome flags are generic, others are interpreter-specific.\n\nNormalize whitespace\n....................\n\nReplace any sequence of whitespace by a single one. This makes the test\nmore robust against small differences (trailing spaces, space/tab mismatch)\n\n.. code:: python\n    >>> print(list(range(20)))     # byexample: +WS\n    [0,   1,  2,  3,  4,  5,  6,  7,  8,  9,\n    10,  11, 12, 13, 14, 15, 16, 17, 18, 19]\n\n\nSkip and Pass\n.............\n\n``SKIP`` will skip the example completely while ``PASS`` will execute it\nnormally but it will not check the output.\n\n.. code:: python\n    >>> a = 1\n    >>> a = 2       # do not run this code # byexample: +SKIP\n    >>> a\n    1\n\n    >>> def f():\n    ...   print(\"Choosing a random number...\")\n    ...   return 42\n\n    >>> a = f()     # execute the code but ignore the output # byexample: +PASS\n    >>> a\n    42\n\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/eldipa/byexample",
    "keywords": "doctest documentation test testing",
    "license": "GNU GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "byexample",
    "platform": "",
    "project_url": "https://pypi.org/project/byexample/",
    "release_url": "https://pypi.org/project/byexample/1.0.0/",
    "requires_dist": [
      "pexpect (<5,>=4)"
    ],
    "requires_python": ">=2.6",
    "summary": "Write snippets of code in Python, Ruby, and others as documentation and execute them as regression tests.",
    "version": "1.0.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e196cd03ef75e573b8062d470c36f403",
          "sha256": "586396a2ff7f19a31ef960d7764d12e446fd9959a67057b545f9954c9cb52e54"
        },
        "downloads": -1,
        "filename": "byexample-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e196cd03ef75e573b8062d470c36f403",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 19197,
        "upload_time": "2017-11-15T14:10:12",
        "url": "https://files.pythonhosted.org/packages/c1/25/b39f1a9f2595421704438a61e32e212324fdb7bd7ce21b6918132528ee4c/byexample-1.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "34be6302d6e9a63580ff47563a9392e6",
          "sha256": "79a5af1061396bd2ab64c8fa88eb94aabbe2983cc062c00a64bea685ec4aa437"
        },
        "downloads": -1,
        "filename": "byexample-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "34be6302d6e9a63580ff47563a9392e6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14359,
        "upload_time": "2017-11-15T14:10:13",
        "url": "https://files.pythonhosted.org/packages/6d/4b/054df3ab85bc2a10b9b12623c4b96fac6294880cfc97e9980898a96c60b1/byexample-1.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e196cd03ef75e573b8062d470c36f403",
        "sha256": "586396a2ff7f19a31ef960d7764d12e446fd9959a67057b545f9954c9cb52e54"
      },
      "downloads": -1,
      "filename": "byexample-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e196cd03ef75e573b8062d470c36f403",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 19197,
      "upload_time": "2017-11-15T14:10:12",
      "url": "https://files.pythonhosted.org/packages/c1/25/b39f1a9f2595421704438a61e32e212324fdb7bd7ce21b6918132528ee4c/byexample-1.0.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "34be6302d6e9a63580ff47563a9392e6",
        "sha256": "79a5af1061396bd2ab64c8fa88eb94aabbe2983cc062c00a64bea685ec4aa437"
      },
      "downloads": -1,
      "filename": "byexample-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "34be6302d6e9a63580ff47563a9392e6",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 14359,
      "upload_time": "2017-11-15T14:10:13",
      "url": "https://files.pythonhosted.org/packages/6d/4b/054df3ab85bc2a10b9b12623c4b96fac6294880cfc97e9980898a96c60b1/byexample-1.0.0.tar.gz"
    }
  ]
}