{
  "info": {
    "author": "osquery developers",
    "author_email": "osquery@fb.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Security"
    ],
    "description": "osquery-python\n==============\n\n.. image:: https://i.imgur.com/9Vy2GFx.png\n  :target: https://osquery.io\n\n`osquery <https://github.com/facebook/osquery>`_ exposes an operating system as\na high-performance relational database. This allows you to write SQL-based\nqueries to explore operating system data. With osquery, SQL tables represent\nabstract concepts such as running processes, loaded kernel modules, open\nnetwork connections, browser plugins, hardware events or file hashes.\n\nIf you're interested in learning more about osquery, visit the `GitHub project\n<https://github.com/facebook/osquery>`_, the `website <https://osquery.io>`_, and\nthe `users guide <https://osquery.readthedocs.org/>`_.\n\nWhat is osquery-python?\n-----------------------\n\n.. image:: https://travis-ci.org/osquery/osquery-python.svg?branch=master\n  :target: https://travis-ci.org/osquery/osquery-python\n\nIn osquery, SQL tables, configuration retrieval, log handling, etc are implemented\nvia a simple, robust plugin and extensions API. This project contains the official\nPython bindings for creating osquery extensions in Python. Consider the following\nexample:\n\n.. code-block:: python\n\n  #!/usr/bin/env python\n\n  import osquery\n\n  @osquery.register_plugin\n  class MyTablePlugin(osquery.TablePlugin):\n      def name(self):\n          return \"foobar\"\n\n      def columns(self):\n          return [\n              osquery.TableColumn(name=\"foo\", type=osquery.STRING),\n              osquery.TableColumn(name=\"baz\", type=osquery.STRING),\n          ]\n\n      def generate(self, context):\n          query_data = []\n\n          for _ in range(2):\n              row = {}\n              row[\"foo\"] = \"bar\"\n              row[\"baz\"] = \"baz\"\n              query_data.append(row)\n\n          return query_data\n\n  if __name__ == \"__main__\":\n      osquery.start_extension(name=\"my_awesome_extension\",\n                              version=\"1.0.0\",)\n\nTo test this code start an osquery shell:\n\n.. code-block:: none\n\n  osqueryi --nodisable_extensions\n  osquery> select value from osquery_flags where name = 'extensions_socket';\n  +-----------------------------------+\n  | value                             |\n  +-----------------------------------+\n  | /Users/USERNAME/.osquery/shell.em |\n  +-----------------------------------+\n\nThen start the Python extension:\n\n.. code-block:: none\n\n  python ./my_table_plugin.py --socket /Users/USERNAME/.osquery/shell.em\n\nAlternatively, you can also autoload your extension when starting an osquery shell:\n\n.. code-block:: none\n\n  osqueryi --extension path_to_my_table_plugin.py\n\nThis will register a table called \"foobar\". As you can see, the table will\nreturn two rows:\n\n.. code-block:: none\n\n  osquery> select * from foobar;\n  +-----+-----+\n  | foo | baz |\n  +-----+-----+\n  | bar | baz |\n  | bar | baz |\n  +-----+-----+\n  osquery>\n\n\nThis is obviously a contrived example, but it's easy to imagine the\npossibilities.\n\nUsing the instructions found on the `wiki\n<https://osquery.readthedocs.org/en/latest/development/osquery-sdk/>`_,\nyou can easily deploy your extension with an existing osquery deployment.\n\nExtensions are the core way that you can extend and customize osquery. At\nFacebook, we use extensions extensively to implement many plugins that take\nadvantage of internal APIs and tools.\n\nExecute queries in Python\n-------------------------\n\nThe same Thrift bindings can be used to create a Python client for the osqueryd or\nosqueryi's extension socket. There are helper classes provided that spawn an ephemeral\nosquery process for consecutive or long running client instances.\n\n.. code-block:: python\n\n  import osquery\n\n  if __name__ == \"__main__\":\n      # Spawn an osquery process using an ephemeral extension socket.\n      instance = osquery.SpawnInstance()\n      instance.open()\n  \n      # Issues queries and call osquery Thrift APIs.\n      instance.client.query(\"select timestamp from time\")\n\nInstall\n-------\n\nThis module is currently in \"beta mode\". We're testing the API and UX before\nuploading the module to PyPI.\n\nTo install, clone this repo and run the following:\n\n.. code-block:: none\n\n  python setup.py build\n  python setup.py install\n\nAlternatively, if you don't want to clone the repo, you can simply:\n\n.. code-block:: none\n\n  pip install git+git://github.com/osquery/osquery-python.git\n\nDevelopment\n-----------\nSee `CONTRIBUTING.md <https://github.com/osquery/osquery-python/blob/master/CONTRIBUTING.md>`_\nand the `osquery wiki <https://osquery.readthedocs.org>`_ for development information.\n\nVulnerabilities\n---------------\n\nFacebook has a `bug bounty <https://www.facebook.com/whitehat/>`_ program that\nincludes osquery. If you find a security vulnerability in osquery, please\nsubmit it via the process outlined on that page and do not file a public issue.\nFor more information on finding vulnerabilities in osquery, see a recent blog\npost about `bug-hunting osquery\n<https://www.facebook.com/notes/facebook-bug-bounty/bug-hunting-osquery/954850014529225>`_.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://osquery.io",
    "keywords": "security databases operating systems",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "osquery",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/osquery/",
    "release_url": "https://pypi.org/project/osquery/2.2.1/",
    "requires_python": null,
    "summary": "Osquery Python API",
    "version": "2.2.1"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8141febb50cac0ad64ac7970558a61e6",
          "sha256": "48d87c4d68d9f1088347736eb12e2445897c2930ee65137494e90c7960241c15"
        },
        "downloads": 761,
        "filename": "osquery-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8141febb50cac0ad64ac7970558a61e6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15528,
        "upload_time": "2015-12-28T10:19:08",
        "url": "https://files.pythonhosted.org/packages/e3/6d/e9e0e1c2d391f0f77d38520562aa6f5fa1eb1c2171f28d5267b40a265732/osquery-0.1.1.tar.gz"
      }
    ],
    "1.8.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9269ebb180e987bba27693a658e28a2b",
          "sha256": "b8e49141867283d254c577277a2c0c3b6a2df26652cb7517c1a1788efa5e904a"
        },
        "downloads": 202,
        "filename": "osquery-1.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9269ebb180e987bba27693a658e28a2b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16162,
        "upload_time": "2016-07-20T18:10:14",
        "url": "https://files.pythonhosted.org/packages/32/7a/e4243535d24c1e1478d88f6109fbf149bfc8148901754da58ea97ce0f601/osquery-1.8.0.tar.gz"
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a748c5276c0c36ec9f993556443f377e",
          "sha256": "896c3dd09a7662c2a685d72f523ca2aa006ac2c9f3652370d7aca5ac4e0d5e57"
        },
        "downloads": 1097,
        "filename": "osquery-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a748c5276c0c36ec9f993556443f377e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16508,
        "upload_time": "2017-01-31T02:06:38",
        "url": "https://files.pythonhosted.org/packages/92/7b/fbdbeefa8c0bbd98d762674de48bea4e066cebd7021e2d52df54f236dfc5/osquery-2.2.0.tar.gz"
      }
    ],
    "2.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ef10277cb4559ef2fad12fd46fcb86f8",
          "sha256": "e10fc7d422e2cd326239dd31df5754e5cba0676efdac49db144076e2278818f7"
        },
        "downloads": 0,
        "filename": "osquery-2.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ef10277cb4559ef2fad12fd46fcb86f8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16699,
        "upload_time": "2017-05-29T01:17:18",
        "url": "https://files.pythonhosted.org/packages/e8/6f/9af61ff2b013fe70ae3e3a91b0888824756ab92c72aef0949a6e7434bb28/osquery-2.2.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ef10277cb4559ef2fad12fd46fcb86f8",
        "sha256": "e10fc7d422e2cd326239dd31df5754e5cba0676efdac49db144076e2278818f7"
      },
      "downloads": 0,
      "filename": "osquery-2.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ef10277cb4559ef2fad12fd46fcb86f8",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 16699,
      "upload_time": "2017-05-29T01:17:18",
      "url": "https://files.pythonhosted.org/packages/e8/6f/9af61ff2b013fe70ae3e3a91b0888824756ab92c72aef0949a6e7434bb28/osquery-2.2.1.tar.gz"
    }
  ]
}