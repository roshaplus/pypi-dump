{
  "info": {
    "author": "Nicholas A. Del Grosso",
    "author_email": "delgrosso@bio.lmu.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "===============================\nwavefront_reader\n===============================\n\n\n.. image:: https://img.shields.io/pypi/v/wavefront_reader.svg\n        :target: https://pypi.python.org/pypi/wavefront_reader\n\n.. image:: https://travis-ci.org/neuroneuro15/ratcave.svg?branch=master\n        :target: https://travis-ci.org/neuroneuro15/wavefront_reader\n\n.. image:: https://readthedocs.org/projects/wavefront-reader/badge/?version=latest\n        :target: https://wavefront-reader.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://pyup.io/repos/github/neuroneuro15/wavefront_reader/shield.svg\n     :target: https://pyup.io/repos/github/neuroneuro15/wavefront_reader/\n     :alt: Updates\n\nA parser for wavefront .obj and .mtl files\n\n\n* Free software: MIT license\n* Documentation: https://wavefront-reader.readthedocs.io.\n\n\nFeatures\n--------\n\nReads out wavefront objects to dictionaries with their attributes, including their materials::\n\n    from wavefront_reader import read_wavefront, read_objfile, read_mtlfile\n    geoms = read_wavefront('myObjects.obj')\n    cube = geoms['Cube']\n    cube_vertices = cube['v']\n    cube_diffuse_material = cube['material']['Kd']\n\nThe module has a lot of tests, and handles face indexing by re-indexing the vertex, normal, and texcoord arrays\nsimply by reindexing them into same-length, sequential arrays.  While this reduces the memory benefits of the .obj\nformat, it makes it much easier to load the data into OpenGL or reindex the data yourself.\n\nCredits\n---------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n\n=======\nHistory\n=======\n\n0.1.0 (2017-01-18)\n------------------\n\n* First release on PyPI.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/neuroneuro15/wavefront_reader",
    "keywords": "wavefront_reader",
    "license": "MIT license",
    "maintainer": null,
    "maintainer_email": null,
    "name": "wavefront_reader",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/wavefront_reader/",
    "release_url": "https://pypi.org/project/wavefront_reader/0.1.0/",
    "requires_python": null,
    "summary": "A parser for wavefront .obj and .mtl files",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f4be10f1af62e31320801a5bde25fdfc",
          "sha256": "efc40d5982d732a695a81add1c5bee6a159cb7ad9e1af58df55de2b632261afa"
        },
        "downloads": 12,
        "filename": "wavefront_reader-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f4be10f1af62e31320801a5bde25fdfc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 30147,
        "upload_time": "2017-01-19T15:35:04",
        "url": "https://files.pythonhosted.org/packages/1a/82/f833e0a281e1ab39ac57aa96f3b4843b16c6f1f449f3024db3f190f390d6/wavefront_reader-0.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "70c817b2cd48708424baa30a15e1e8d3",
          "sha256": "9b501796b3490c4bbf99fb1c0005e32c6f00f99157e6b29f0a9a49868c6a2a82"
        },
        "downloads": 12,
        "filename": "wavefront_reader-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "70c817b2cd48708424baa30a15e1e8d3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13481,
        "upload_time": "2017-01-19T15:20:41",
        "url": "https://files.pythonhosted.org/packages/fa/9a/008cf20f01cb65cf69f06cc93734cc20d51397e3438530855931b5f7e6d5/wavefront_reader-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f4be10f1af62e31320801a5bde25fdfc",
        "sha256": "efc40d5982d732a695a81add1c5bee6a159cb7ad9e1af58df55de2b632261afa"
      },
      "downloads": 12,
      "filename": "wavefront_reader-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f4be10f1af62e31320801a5bde25fdfc",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 30147,
      "upload_time": "2017-01-19T15:35:04",
      "url": "https://files.pythonhosted.org/packages/1a/82/f833e0a281e1ab39ac57aa96f3b4843b16c6f1f449f3024db3f190f390d6/wavefront_reader-0.1.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "70c817b2cd48708424baa30a15e1e8d3",
        "sha256": "9b501796b3490c4bbf99fb1c0005e32c6f00f99157e6b29f0a9a49868c6a2a82"
      },
      "downloads": 12,
      "filename": "wavefront_reader-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "70c817b2cd48708424baa30a15e1e8d3",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 13481,
      "upload_time": "2017-01-19T15:20:41",
      "url": "https://files.pythonhosted.org/packages/fa/9a/008cf20f01cb65cf69f06cc93734cc20d51397e3438530855931b5f7e6d5/wavefront_reader-0.1.0.tar.gz"
    }
  ]
}