{
  "info": {
    "author": "Jelle Smet",
    "author_email": "development@smetj.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "::\n\n\n              __       __    __\n    .--.--.--|__.-----|  |--|  |--.-----.-----.-----.\n    |  |  |  |  |__ --|     |  _  |  _  |     |  -__|\n    |________|__|_____|__|__|_____|_____|__|__|_____|\n                                       version 2.1.5\n\n    Build composable event pipeline servers with minimal effort.\n\n\n\n    =========================\n    wishbone.input.httpserver\n    =========================\n\n    Version: 1.0.2\n\n    Receive events over HTTP.\n    -------------------------\n\n\n        An HTTP server mapping URL endpoints to queues to which events can be\n        submitted.\n\n        Mapping queues to endpoints:\n        ---------------------------\n\n        Connecting queues to this module automatically maps them to the equivalent\n        URL enpoint.\n\n        The \"/\" endpoint is by default mapped to the <outbox> queue.\n\n        Available meta data:\n        --------------------\n\n        Each event has some meta associated stored in @tmp.<instance_name>:\n\n            - remote_addr   : The client IP\n            - request_method: The request method used\n            - queue         : The name of the endpoint (and thus queue) to\n                              which data was submitted.\n\n\n        Parameters:\n\n            - address(str)(\"0.0.0.0\")\n               |  The address to bind to.\n\n            - port(int)(19283)\n               |  The port to bind to.\n\n            - keyfile(str)(None)\n               |  When SSL is required, the location of the keyfile to use.\n\n            - certfile(str)(None)\n               |  When SSL is required, the location of the certfile to use.\n\n            - ca_certs(str)(None)\n                |  When SSL is required, the location of the ca certs to use.\n\n            - delimiter(str)(None)\n               |  The delimiter which separates multiple\n               |  messages in a stream of data.\n\n            - poolsize(int)(1000)\n                |  The connection pool size.\n\n            - so_reuseport(bool)(False)\n                |  Enables socket option SO_REUSEPORT.\n                |  See https://lwn.net/Articles/542629/\n                |  Required when running multiple Wishbone instances.\n\n            - response(str)(\"ok\")*\n                |  The value of the response.  Can be a lookup function.\n                |  This value is also stored under @tmp.<module>.response\n\n\n        Queues:\n\n            - outbox\n               |  Incoming events submitted to /\n\n            - <queue_name>\n               |  Incoming events submitted to /<queue_name>",
    "docs_url": null,
    "download_url": "https://github.com/smetj/wishbone-input-httpserver/tarball/master",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/smetj/wishbone-input-httpserver",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "wishbone_input_httpserver",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/wishbone_input_httpserver/",
    "release_url": "https://pypi.org/project/wishbone_input_httpserver/1.0.2/",
    "requires_python": null,
    "summary": "A Wishbone input module to receive events over HTTP.",
    "version": "1.0.2"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6648b78f01ab954314bb7917dbf85a07",
          "sha256": "ac81775f1f1984412e544e5ca5672f39dc1fbea2b7dbad435454d70f7d8bcd20"
        },
        "downloads": 447,
        "filename": "wishbone_input_httpserver-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6648b78f01ab954314bb7917dbf85a07",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4645,
        "upload_time": "2016-03-28T10:53:19",
        "url": "https://files.pythonhosted.org/packages/19/f4/c20dd34d8d31fff7960aaf4d2a5fb137aa3625e6c2c1288b006faee4679e/wishbone_input_httpserver-1.0.0.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "987d0118d5b78e39fd757690e4a32fc7",
          "sha256": "9647dc48b75ed96deb1e9d57c6ed2d3bba8016f873b64bf2b51a031ab2c489e8"
        },
        "downloads": 128,
        "filename": "wishbone_input_httpserver-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "987d0118d5b78e39fd757690e4a32fc7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4878,
        "upload_time": "2016-05-27T17:54:23",
        "url": "https://files.pythonhosted.org/packages/c2/25/971036ec873067bd969ea11d3bc4bd511955212479557b7f944afeb391db/wishbone_input_httpserver-1.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "987d0118d5b78e39fd757690e4a32fc7",
        "sha256": "9647dc48b75ed96deb1e9d57c6ed2d3bba8016f873b64bf2b51a031ab2c489e8"
      },
      "downloads": 128,
      "filename": "wishbone_input_httpserver-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "987d0118d5b78e39fd757690e4a32fc7",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4878,
      "upload_time": "2016-05-27T17:54:23",
      "url": "https://files.pythonhosted.org/packages/c2/25/971036ec873067bd969ea11d3bc4bd511955212479557b7f944afeb391db/wishbone_input_httpserver-1.0.2.tar.gz"
    }
  ]
}