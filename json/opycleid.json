{
  "info": {
    "author": "Alexandre Popoff",
    "author_email": "al.popoff@free.fr",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# opycleid\nOpycleid - A Python package for transformational music theory\n\nPlease visit http://alpof.wordpress.com/2016/06/20/opycleid-a-python-package-for-transformational-music-theory/\nfor detailed instructions.\n\nHow to use opycleid\n==========\n\nTransformational music analysis is easily implemented in a few lines, with the group/monoid of your choice:\n\n    >>> from opycleid.musicmonoids import PRL_Group,TI_Group_Triads,TI_Group_PC\n    \nLet's work first with pitch classes... what operations in the T/I group takes C to A ?\n\n    >>> my_group = TI_Group_PC()\n    >>> print my_group.get_operation(\"C\",\"A\")\n    ['I^9', 'T^9']\n    \nLet's now work with major and minor triads... what operations in the T/I group takes C major to B minor ?\n\n    >>> my_group = TI_Group_Triads()\n    >>> print my_group.get_operation(\"C\",\"b\")\n    ['I^6']\n    \nWhat would it be if we use the PRL group instead ?\n\n    >>> my_group = PRL_Group()\n    >>> print my_group.get_operation(\"C\",\"b\")\n    ['(RL)^10R']\n    \nWhat do we get if we apply that same operation to a D major chord (Answer: C sharp minor) ?\n\n    >>> print my_group.apply_operation(\"(RL)^10R\",\"D\")\n    ['cs']\n\nWhat are the operations in the PRL group ?\n\n    >>> print my_group.operations.keys()\n    ['(RL)^5R', '(RL)^7R', '(RL)^9', '(RL)^8', '(RL)^7', '(RL)^6', '(RL)^5', '(RL)^4', '(RL)^3', '(RL)^2', '(RL)^1', '(RL)^3R', '(RL)^8R', '(RL)^1R', '(RL)^10R', '(RL)^4R', '(RL)^2R', '(RL)^6R', 'R', 'e', '(RL)^9R', '(RL)^11R', '(RL)^11', '(RL)^10']\n    \nWhat operation do we get in the PRL group if we apply first (RL)^10R, then (RL)^5 ?\n\n    >>> print my_group.mult(\"(RL)^5\",\"(RL)^10R\")\n    (RL)^3R    \n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/AlexPof/opycleid.git",
    "keywords": null,
    "license": "BSD-3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "opycleid",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/opycleid/",
    "release_url": "https://pypi.org/project/opycleid/0.1.0/",
    "requires_python": null,
    "summary": "Transformational music analysis in Python",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2d1ecacdc58d527a2636f2aba1b720b6",
          "sha256": "e1bc0c0548a8eddea0d8f3112e93d6f3b5866077282181423bb572695437c980"
        },
        "downloads": 14,
        "filename": "opycleid-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2d1ecacdc58d527a2636f2aba1b720b6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9075,
        "upload_time": "2017-03-23T19:35:52",
        "url": "https://files.pythonhosted.org/packages/6d/81/c69d2909970393a06d8ecc05a02ebf2844a9984c884e9b99908fbac33bfc/opycleid-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2d1ecacdc58d527a2636f2aba1b720b6",
        "sha256": "e1bc0c0548a8eddea0d8f3112e93d6f3b5866077282181423bb572695437c980"
      },
      "downloads": 14,
      "filename": "opycleid-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2d1ecacdc58d527a2636f2aba1b720b6",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9075,
      "upload_time": "2017-03-23T19:35:52",
      "url": "https://files.pythonhosted.org/packages/6d/81/c69d2909970393a06d8ecc05a02ebf2844a9984c884e9b99908fbac33bfc/opycleid-0.1.0.tar.gz"
    }
  ]
}