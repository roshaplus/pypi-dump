{
  "info": {
    "author": "Ilhan Polat",
    "author_email": "harold.of.python@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "|Travis-CI| |License| |Join the chat at Gitter| |Coveralls|\n\nharold\n======\n\nA (yet another) systems and controls module for Python3. See ``LICENSE.md``\nfile for details (spoiler alert it's MIT Licensed).\n\nDisclaimer\n----------\n\nThis is a work in progress. It's just almost about to have the first release,\nversion 0.1. So, please adjust the expectations accordingly.\n\nIntroduction\n============\n\nharold library is written with the ambition of becoming a daily work-horse of\na control engineer/student/researcher with complete access to the source\ncode and also with full rights in terms of open source.\n\nThe common licensing problems where there are more users than the available\nnumber of licenses or, in a commercial setting, exporting commercial code\nwith the product, or building a product using commercial software and so on\nare naturally avoided.\n\nIn short, the purpose of this library is to disclose the development of\ncontrol algorithms. harold fully supports the mantra of reproducible research\nand thus aims to provide the means of accessible and transparent computational\ndevelopment tools.\n\nharold also follows the Pythonic way of naming things and hence deviates from\nthe matlab way of working. This might add some learning effort on the user\nbut hopefully the function names are self-explanatory enough to ease the pain.\n\nharold currently comes with two representation models: State and Transfer.\nAll is based around such object classes and the rest is just (lots of)\nfunctions.\n\nTo demonstrate some examples, you create a state space or transfer function\nrepresentation via the following syntax::\n\n    G = State([[0,1],[-2,-1]],[[0],[1]],[[1,0]]) # you can skip D if zero\n    H = Transfer([1,2,1],[1,4,5,6])\n    J = State(5)            # Gain models are supported\n    K = Transfer(3, dt=0.1) # in discrete time too.\n\nIf we type `H` we get::\n\n    Continous-Time Transfer function with:\n     1 input(s) and 1 output(s)\n\n      Poles(real)    Poles(imag)    Zeros(real)    Zeros(imag)\n    -------------  -------------  -------------  -------------\n             -0.5        1.32288             -1              0\n             -0.5       -1.32288             -1              0\n             -3          0\n\n    End of Transfer object description\n\n\nThis might be better represented in the future versions. Or you can implement\nyour own infostring because you might be computing the damping of the\nzeros/poles all the time. Important to note is the matrix syntax of NumPy\nis a little awkward and we don't have much to change that now. However,\nin turn, `harold` tries to be as forgiving as possible expecting the least\nformal representation of arrays.\n\nFor example, for MIMO Transfer representations you can simply give a common\nnumerator or denominator and it will be completed internally to a matching\nsize, e.g.,::\n\n    G = Transfer(1,[ [ [1,1],[1,2,1] ],[ [2,3],[1,3,3,1] ] ])\n\nNotice how we had to increase the nesting of the bracket level to make it\ncontain arrays for a 2x2 system. This is, say in matlab, is done via curly\nbraces but for Python, brackets are natural for a list syntax.\n\nWhile we are at it, here is a Bode Plot of a 348-state Clamped Beam model\nfrom the SLICOT collections::\n\n    import scipy.io as sio # needed to read .mat files\n    M = sio.loadmat('beam.mat')\n    A = M['A'].todense()\n    B = M['B']\n    C = M['C']\n    G = State(A,B,C)\n    bode_plot(G)\n\n.. image:: https://cloud.githubusercontent.com/assets/1303842/20697360/dfd9800c-b5f8-11e6-8f98-79d1964ec701.png\n\nBy the way, you can't convert this model to a Transfer model (including in\nmatlab etc.) because of the numerical error build-up. Thus, harold tries to\nstay with whatever is given to it.\n\nWhat can I do with `harold`?\n----------------------------\n\nPretty much everything that is related to control systems\nnumber-crunching as long as I can keep up with the implementation. The\ntesting phase is coming to an end, however, certain functionality is\n(hopefully) in place:\n\n  - State, Transfer representations \u2713\n  - Pole/zero computations \u2713\n  - Minimal realizations \u2713\n  - Controllabe/Observable Hessenberg Forms \u2713\n  - Pole/Zero cancellation distance computations \u2713\n  - Discretizations/Undiscretizations \u2713\n  - Frequency Response calculations \u2713\n  - LTI Algebra (add,mul,sub,feedback) \u2713 (except feedback and series)\n  - Polynomial Operations \u2713\n  - Riccati and Lyapunov equation solvers \u2713 (Riccati solver is moved to SciPy)\n  - H2- and HInfinity norms of systems \u2713\n  - Bode, Nyquist static plots \u2713\n\n\nThe coded-but-not-tested parts are the essential synthesis techniques\n\n  - Pole placement (uses the scipy versions)\n  - LQR/LQG (the functionality is there but needs to be wrapped in a function)\n\nStill waiting to be coded\n\n  - Step, Impulse responses\n  - Hinf, H2 controllers\n  - Lead, Lag and notch filters with semi-recommendations about where to place them\n\nand so on.\n\nFor example, you would like to have a row compressed, observable Hessenberg\nform such that the rows of C matrix is compressed on the right end. You might\nwonder why you would need such a representation. Welcome to the weird world\nof control theory!::\n\n    M = np.array([[-6.5,  0.5,  6.5, -6.5,  0. ,  1. ,  0. ],\n                  [-0.5, -5.5, -5.5,  5.5,  2. ,  1. ,  2. ],\n                  [-0.5,  0.5,  0.5, -6.5,  3. ,  4. ,  3. ],\n                  [-0.5,  0.5, -5.5, -0.5,  3. ,  2. ,  3. ],\n                  [ 1. ,  1. ,  0. ,  0. ,  0. ,  0. ,  0. ]])\n    # Slice the matrix into 4 pieces with south west piece has (1,4) shape\n    A , B , C , D = matrix_slice(M, (1, 4), corner='sw')\n    a,b,c,k = staircase(A, B, C, form='o', invert=True)\n\n    a\n    array([[ 0.        , -6.        , -7.48528137,  0.        ],\n           [-6.        ,  0.        ,  9.48528137,  0.        ],\n           [ 0.        ,  0.        , -6.        ,  0.        ],\n           [ 0.        ,  0.        ,  1.41421356, -6.        ]])\n\n    b\n    array([[ 3.        ,  2.        ,  3.        ],\n           [ 3.        ,  4.        ,  3.        ],\n           [ 1.41421356,  0.        ,  1.41421356],\n           [ 1.41421356,  1.41421356,  1.41421356]])\n\n    c\n    array([[ 0.        ,  0.        ,  0.        ,  1.41421356]])\n\n    k\n    array([ 1.,  1.])\n\nHere `k` is the size of the block that is identified as observable at each\nstep of the staircase. We can deduce that two of the modes are already\nunobservable since the upper left 2x2 block does not interact with the lower\nright two modes (A21 block is identically zero). Let's check the minimality\nindeed::\n\n    a,b,c = minimalrealization(A,B,C)\n\n    a\n    array([[-6.        ,  0.        ],\n           [ 1.41421356, -6.        ]])\n\n    b\n    array([[ 1.41421356,  0.        ,  1.41421356],\n           [ 1.41421356,  1.41421356,  1.41421356]])\n\n    c\n    array([[ 0.        ,  1.41421356]])\n\nwhich gives a 2x2 system as we have expected.\n\n\nSuppose you have some polynomials and would like to compute the LCM/GCD. Then\nyou can go about it via::\n\n    a , b = haroldlcm([1,3,0,-4], [1,-4,-3,18], [1,-4,3], [1,-2,-8])\n\nwhich returns::\n\n    a\n    (array([   1.,   -7.,    3.,   59.,  -68., -132.,  144.])\n\n    b\n    [array([  1., -10.,  33., -36.]),\n     array([  1.,  -3.,  -6.,   8.]),\n     array([  1.,  -3., -12.,  20.,  48.]),\n     array([  1.,  -5.,   1.,  21., -18.])]\n\nHere `a` is the least common multiple and `b` is the array of polynomials\nthat are needed to be multiplied by the original polynomials (in the order\nof appearance) to obtain the LCM.\n\nAnother point-of-interest is the interactive plots that are promising. That\nwould hopefully minimize the right-click mania that follows almost every\nplotting command in every commercial software for Bode, Nyquist, Sensitivity,\nCoherence and others.\n\n\nWhat about ...?\n===============\n\nYes, yes, LMIs are coming. I have to learn cvxpy a bit faster. Other stuff\nyou need to let me know what the need is.\n\nDocumentation\n=============\n\nSee the `Sphinx documentation`_ .\n\nUseful Links\n============\n\n1- There is already an almost-matured control toolbox which is led by\nRichard Murray et al. (`click for the Github page`_ ) and it can perform\nalready most of the essential tasks. Hence, if you want to have\nsomething that resembles the basics of matlab control toolbox give it a\ntry. However, it is mostly limited to SISO tools and also relies on\nSLICOT library which can lead to licensing problems for nontrivial tasks.\n\n2- By the way, if you are interested in robust control you would\nprobably appreciate the `Skogestad-Python`_ project.\n\nHelp Wanted!\n============\n\nharold is built on rainy days and boring evenings. If you are desperately\nmissing out a feature, don't be shy and contact. User-feedback has higher\npriority over the general development. Or shout out in the Gitter chatroom.\n\nOr if you want to jump into development, PR submissions are more than welcome.\n\nContact\n--------\n\nIf you have questions/comments feel free to shoot one to\n``harold.of.python@gmail.com``\n\n.. _click for the Github page: https://github.com/python-control/python-control\n.. _Sphinx documentation: http://harold.readthedocs.org/en/latest/\n.. _Skogestad-Python: https://github.com/alchemyst/Skogestad-Python\n\n.. |License| image:: https://img.shields.io/github/license/mashape/apistatus.svg\n   :target: https://github.com/ilayn/harold/blob/master/LICENSE\n.. |Join the chat at Gitter| image:: https://badges.gitter.im/Join%20Chat.svg\n   :target: https://gitter.im/ilayn/harold?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n.. |Travis-CI| image:: https://travis-ci.org/ilayn/harold.svg?branch=master\n    :target: https://travis-ci.org/ilayn/harold\n.. |Coveralls| image:: https://coveralls.io/repos/github/ilayn/harold/badge.svg?branch=master\n    :target: https://coveralls.io/github/ilayn/harold?branch=master\n\n\ufeffChangeLog\n============\n\nv0.1.1b4\n--------\n+ Sanitized the circular dependencies a bit more\n+ minimal_realization is changed to accept models instead of A,B,C triplet\n+ minimal_realization for Transfer uses the pole zero cancellation check\n+ more housekeeping and bug fixes\n+ added damping, natural frequency properties of poles\n- state_to_transfer does not return minimal realizations (per request)\n\nv0.1.1b3\n--------\n+ More tests\n+ bode, nyquist plots with matplotlib\n+ Rewritten the transmission_zeros to improve accuracy\n- Removed the single file and replaced it with modular files.\n- Refactored Riccati solvers to SciPy official repo\n- Lyapunov solver safety net is moot. Created PR #6775 in SciPy\n\nv0.1.1b2\n--------\n+ Added Riccati solvers\n+ More documentation\n+ Added safety net for lyapunov solvers in case there is no solution\n\nv0.1.1b1\n--------\n+ Added Lyapunov solvers\n+ Fixed many bugs\n- Removed block diag and switched to scipy version\n\nv0.1.1a\n-------\n+ Initial versioning and packaging.\n+ Adding documentation and Sphinx integration.\n+ Basically everything there is.\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ilayn/harold",
    "keywords": "control-theory PID controller design industrial automation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "harold",
    "platform": "",
    "project_url": "https://pypi.org/project/harold/",
    "release_url": "https://pypi.org/project/harold/0.1.1b4/",
    "requires_python": "",
    "summary": "A control systems library for Python3",
    "version": "0.1.1b4"
  },
  "releases": {
    "0.1.1a2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2fed9d710de88e3acf8ac794f09459b3",
          "sha256": "923ad590382ac9cf566360db9da2c50a4498f948a9e0e96c0c7fea518958f806"
        },
        "downloads": 737,
        "filename": "harold-0.1.1a2.zip",
        "has_sig": false,
        "md5_digest": "2fed9d710de88e3acf8ac794f09459b3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5542,
        "upload_time": "2015-09-20T22:53:10",
        "url": "https://files.pythonhosted.org/packages/43/46/cafeb32c3f505a042a9dc06030b6352d41c2fa958c755327cfdcbdfd03ae/harold-0.1.1a2.zip"
      }
    ],
    "0.1.1a3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fcb15a5abb4e22fb40857e7db0c9cb4d",
          "sha256": "67e5f01a4f28c444dac2a5b6d2fd580b47f9cbe10b525cdc23eacd9ab629fb57"
        },
        "downloads": 649,
        "filename": "harold-0.1.1a3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fcb15a5abb4e22fb40857e7db0c9cb4d",
        "packagetype": "bdist_wheel",
        "python_version": "3.4",
        "size": 45975,
        "upload_time": "2015-09-21T08:54:05",
        "url": "https://files.pythonhosted.org/packages/b6/3f/26ab4f75822f6c833a3043f6b33a0cafd191251a5f16b88a8f737f3d6c3b/harold-0.1.1a3-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d097e3e268707d71000576222602091b",
          "sha256": "4071eb790507b46f888d1d4f66974b807276da8d4712cf1f95c122a82987f1ba"
        },
        "downloads": 639,
        "filename": "harold-0.1.1a3.zip",
        "has_sig": false,
        "md5_digest": "d097e3e268707d71000576222602091b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 48103,
        "upload_time": "2015-09-21T08:53:42",
        "url": "https://files.pythonhosted.org/packages/d8/f4/d569a739f094afdf23de6f35650fd4a141482b490a0e0a588ba2652f11bd/harold-0.1.1a3.zip"
      }
    ],
    "0.1.1a4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e5acf3956c43e8589a7fcd6137566504",
          "sha256": "ece0a412ab38583d11ecedd4db5e7baef7e2ac05dbb066223bbb2f78c41cbf6a"
        },
        "downloads": 600,
        "filename": "harold-0.1.1a4-cp34-none-win32.whl",
        "has_sig": false,
        "md5_digest": "e5acf3956c43e8589a7fcd6137566504",
        "packagetype": "bdist_wheel",
        "python_version": "cp34",
        "size": 3795,
        "upload_time": "2015-09-23T21:56:49",
        "url": "https://files.pythonhosted.org/packages/ed/93/314eb9f04bd17dce6c23068c54d273fa32c50365920e42d6d84213392dce/harold-0.1.1a4-cp34-none-win32.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "bb3e4ab63872988088dc9a981eaf3a07",
          "sha256": "aba454d378649b453914d4863f49fd77a882d93b3aec5e89f41f3ff68d9f5623"
        },
        "downloads": 615,
        "filename": "harold-0.1.1a4.zip",
        "has_sig": false,
        "md5_digest": "bb3e4ab63872988088dc9a981eaf3a07",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5476,
        "upload_time": "2015-09-23T21:56:54",
        "url": "https://files.pythonhosted.org/packages/ba/d9/bb1443a3181e7e315caf33884dbe021497a3c52f45ca95bbb5d32e3d2ecc/harold-0.1.1a4.zip"
      }
    ],
    "0.1.1a5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ddafb5247e679056f45b455a4f7f432e",
          "sha256": "70ca0f5092643ac16aa42aa0e0fd5fe274577ac39686c66d9f84edd6bfcab99e"
        },
        "downloads": 710,
        "filename": "harold-0.1.1a5.zip",
        "has_sig": false,
        "md5_digest": "ddafb5247e679056f45b455a4f7f432e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 595443,
        "upload_time": "2015-09-23T22:15:14",
        "url": "https://files.pythonhosted.org/packages/60/8e/9feed74182383259956fb8ffda908624da13d3c94bbf591f990ed6ed7d67/harold-0.1.1a5.zip"
      }
    ],
    "0.1.1a8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "49feff6fed01ea5ce57591e32baba379",
          "sha256": "2ae406ce6045d889ada303cf0352071d536a5a29b443128ba0086e27e03a6399"
        },
        "downloads": 386,
        "filename": "harold-0.1.1a8.zip",
        "has_sig": false,
        "md5_digest": "49feff6fed01ea5ce57591e32baba379",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 606385,
        "upload_time": "2016-02-05T12:56:41",
        "url": "https://files.pythonhosted.org/packages/3c/11/3903ea354c0516d03102fa53302777e91eb81e8c7c3eb4b46b1aa138246b/harold-0.1.1a8.zip"
      }
    ],
    "0.1.1b1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8743d567f315eb05319f7fbaf3f88e75",
          "sha256": "737ed090b7c8f8c7eb99b0aacf13a18a5139a1b1e8675026cdf3e9fe6e8c2f26"
        },
        "downloads": 132,
        "filename": "harold-0.1.1b1.zip",
        "has_sig": false,
        "md5_digest": "8743d567f315eb05319f7fbaf3f88e75",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1004412,
        "upload_time": "2016-07-20T00:25:42",
        "url": "https://files.pythonhosted.org/packages/a3/b5/c029da78b63fa03fc93f7c02bd7514cac7342c01fc646a164e7b39c243a5/harold-0.1.1b1.zip"
      }
    ],
    "0.1.1b4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "aec592e3c253089bd984ddc73f838710",
          "sha256": "b4e8f6413b7ce52b30fb5a321462c3c333f67d72ac4c046cdce41bf58cfbc03d"
        },
        "downloads": 0,
        "filename": "harold-0.1.1b4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aec592e3c253089bd984ddc73f838710",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 80417,
        "upload_time": "2017-05-01T21:45:33",
        "url": "https://files.pythonhosted.org/packages/d6/38/46d3d787f0c750457b8c4a86090fbbea002d9bda1cb0e6e4bd702ae9e662/harold-0.1.1b4-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "11a1ff36303e88bd68b65ac9e0d6d1cb",
          "sha256": "1d48ddcadb811a4f77699a2a9eb908e6d93182a0a655f481a5531b2b1b18dc0c"
        },
        "downloads": 0,
        "filename": "harold-0.1.1b4.tar.gz",
        "has_sig": false,
        "md5_digest": "11a1ff36303e88bd68b65ac9e0d6d1cb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 959198,
        "upload_time": "2017-05-01T21:45:58",
        "url": "https://files.pythonhosted.org/packages/9e/8e/5b85f48d581b4b75faa34bcca2d9dbba2fa1698cc2c33b419ccde550b8f1/harold-0.1.1b4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "aec592e3c253089bd984ddc73f838710",
        "sha256": "b4e8f6413b7ce52b30fb5a321462c3c333f67d72ac4c046cdce41bf58cfbc03d"
      },
      "downloads": 0,
      "filename": "harold-0.1.1b4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aec592e3c253089bd984ddc73f838710",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 80417,
      "upload_time": "2017-05-01T21:45:33",
      "url": "https://files.pythonhosted.org/packages/d6/38/46d3d787f0c750457b8c4a86090fbbea002d9bda1cb0e6e4bd702ae9e662/harold-0.1.1b4-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "11a1ff36303e88bd68b65ac9e0d6d1cb",
        "sha256": "1d48ddcadb811a4f77699a2a9eb908e6d93182a0a655f481a5531b2b1b18dc0c"
      },
      "downloads": 0,
      "filename": "harold-0.1.1b4.tar.gz",
      "has_sig": false,
      "md5_digest": "11a1ff36303e88bd68b65ac9e0d6d1cb",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 959198,
      "upload_time": "2017-05-01T21:45:58",
      "url": "https://files.pythonhosted.org/packages/9e/8e/5b85f48d581b4b75faa34bcca2d9dbba2fa1698cc2c33b419ccde550b8f1/harold-0.1.1b4.tar.gz"
    }
  ]
}