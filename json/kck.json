{
  "info": {
    "author": "Framework Labs",
    "author_email": "fred@frameworklabs.us",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.5",
      "Topic :: Database :: Front-Ends",
      "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# KCK\nKCK (or the Knowledge Construction Kit) is a framework, like Ruby-on-Rails, Django or\nLaravel, but instead of making it easy to build data-driven web-sites, KCK manages the\ndata for data-driven applications and makes the data available fast.\n\n## Features\n* **Sophisticated data pipelines can be written simply.**  Folks with SQL chops can\n  build a backend for their new React application in an afternoon.  With a little\n  Python, it's pretty straightforward to turn petabytes of corporate data into\n  simple statistics for the C-level dashboard.\n* **It's really fast.**  KCK manages data flowing in and out of Postgres so it can keep\n  its stable of data products up-to-date, but it serves data from a cache built on\n  Cassandra and the data gets to the application immediately so long as it's in the\n  cache.  And KCK helps make sure the data is in the cache and fresh, before an\n  application needs it.\n* **Plays well with others.**  KCK makes it easy to use SQL and SQLAlchemy, but it's\n  Django-friendly too and it'll happily accept data from any source you can talk to\n  with Python.\n* **Includes HTTP Server with JWT.** KCK is accessible via an include HTTP server that\n  can optionally use JWT to authenticate clients.\n* **Makes tiny database servers look fast.** Seriously. KCK reduces database pressure\n  to a minimum, then it spreads it out so your database writes don't have to compete\n  with a deluge of read traffic from your web servers and background tasks.  And cached\n  writes are on the TODO list.\n* **Designed to scale.** Both the HTTP servers and the Cassandra cluster on which KCK\n  depends can scale horizontally.\n\n## Status\nNone of this code should be used in production.\n\nWith that said, the core parts are the cache, the http service, the refresh worker, and\nthe process worker.  The status of each is detailed below.\n\n### The cache\nThe cache is working and it's pretty nifty.  Cache misses can cause _primers_ to fire,\nreturning the data and storing it in the cache on the way out so it'll be more quickly\navailable the next time it's requested.  Cache entries can be invalidated or they can be\nset to expire after a certain amount of time.  *But cache entries can also be automatically\nrefreshed as data is updated, or at a set interval, or even when the system boots up.*\n\n### The HTTP service\nThe HTTP service is working.  It's very basic, just a /fetch and an /update and,\noptionally, JWT authentication so it can be used as a backend for mobile apps or\nnewer Javascript web apps made with React or Angular. So there's a lot of power\nin a pretty simple wrapper and it's easily consumed by other services, languages,\netc.\n\n### The refresh and process workers are _in-progress_\nTo be fully-functional, there needs to be a refresh worker and a process worker running and\nneither of those are working yet.\n\nThe process worker is pretty simple and a good chunk of use cases don't require it at all.\nIt mostly just needs to run a single method every so often so that will go quickly once\nI sit down to write it.\n\nThe refresh worker, unfortunately, is more important than the process worker, so I'm\nworking on it first.  I've just completed an overhaul of the background refresh queue\ncode and it's working in a very simple way, but it needs to be scalable and it needs\nto choose tasks to refresh a bit more carefully than it currently does before it's\nperforming up to spec.  So it's still a few weeks out.\n\n## System overview\nEvery piece is scalable and the most user-facing components are the most scalable.\nThe diagram below shows the basics of the KCK system structure.\n\n\n\n![Scaling KCK](misc/kck_system_design.png)",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://gitlab.com/frameworklabs/kck",
    "keywords": "performance-oriented data pipeline framework",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kck",
    "platform": "",
    "project_url": "https://pypi.org/project/kck/",
    "release_url": "https://pypi.org/project/kck/0.5.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A high-performance framework for dynamic data",
    "version": "0.5.1"
  },
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1fe422de31082a768e454c1ae8ec26ac",
          "sha256": "f43be9838927514c8c59eb607569e34a3b64c770c5de36eaaa4430d19493c7c3"
        },
        "downloads": -1,
        "filename": "kck-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1fe422de31082a768e454c1ae8ec26ac",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16772,
        "upload_time": "2017-10-23T04:49:54",
        "url": "https://files.pythonhosted.org/packages/6d/21/34aa4d1edf883e202ab5f463c6cd89e3bd6b7c3014d9f28006de38051d28/kck-0.5.0.tar.gz"
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5b155f37caee3bfcdee56b9d162e255c",
          "sha256": "3a7623a7086357eddd984740189d99665d0d7fc55352e13a1249490cca679ae6"
        },
        "downloads": -1,
        "filename": "kck-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5b155f37caee3bfcdee56b9d162e255c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17131,
        "upload_time": "2017-10-23T05:05:05",
        "url": "https://files.pythonhosted.org/packages/43/f2/e87b1d11b88f085733d4d15d8cc9238ae63ca1b1f2b7befc1f97398e9ca9/kck-0.5.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5b155f37caee3bfcdee56b9d162e255c",
        "sha256": "3a7623a7086357eddd984740189d99665d0d7fc55352e13a1249490cca679ae6"
      },
      "downloads": -1,
      "filename": "kck-0.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5b155f37caee3bfcdee56b9d162e255c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 17131,
      "upload_time": "2017-10-23T05:05:05",
      "url": "https://files.pythonhosted.org/packages/43/f2/e87b1d11b88f085733d4d15d8cc9238ae63ca1b1f2b7befc1f97398e9ca9/kck-0.5.1.tar.gz"
    }
  ]
}