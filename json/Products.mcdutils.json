{
  "info": {
    "author": "Christian Theune",
    "author_email": "ct@gocept.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Zope2",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": ".. contents::\n\nThe 'mcdutils' product supplies a replacement for the ZODB-based session data\ncontainer supplied by the 'Transience' product, shipped with the Zope core.\nRather than using a ZODB storage as the backing store for session data, as\n'Transience' does, 'mcdutils' stores session data in a cluster of one or more\n'memcached' servers.\n\nThis approach is a bit of a cheat, as it uses the daemons as primary stores,\nrather than as caches for results of an expensive query.  Nevertheless, the\nsemantics are not a bad match for typical session usage.\n\nInstallation\n============\n\nEnsure that the 'Products.mcdutils' egg is available on your Python path, e.g.\nby running 'easy_install Products.mcdutils' or including it in your buildout\nconfiguration.\n\nConfiguration\n=============\n\n1. After installation, add an instance of the 'MemCache Proxy' type from\n   the ZMI add list, typically in the root of your ZODB, and give it a\n   memorable name, e.g., 'mcproxy'.\n\n2. Configure the proxy using its \"Properties\" tab.  Set the 'servers'\n   property to a list of servers, one per line, where each line is in\n   the format, '<host>:<port'.  For instance, to use the 'memcached'\n   running on the default port on your local machine, the value would be\n   'localhost:11211'.\n\n3. Add an instance of the 'MemCache Session Data Container' type, e.g.\n   'mcsdc' in the root.\n\n4. Configure that instance on its \"Properties\" tab to use the proxy\n   you created above (e.g., '/mcproxy').\n\n5. Finally, on the main tab of your 'session_data_manager' instance\n   (typically also in the root), change the 'Transient Object Container Path'\n   value to match the location of your new proxy, e.g. '/mcsdc'.\n\nYou can test the memcached configuration on its \"Test\" tab.  Enter one or more\nlines describing key-value pairs, where the \"key\" for your session is\nseparated from the value by the first space character.  Note that the session\nvalues are displayed below the form.\n\nAttribution\n===========\n\nThanks go to Tres Seaver for implementing this product back in 2006.\n\n\nResources\n=========\n\n- The main memcached site explains the memcached architecture, and contains\n  information on administering and tuning a memcached cluster.\n\n  o http://www.danga.com/memcached/\n\n- The Python client bindings for memcached are maintained by\n  Sean Reifschneider at Tummy.com:\n\n  o http://www.python.org/pypi/memcached/1.2_tummy6\n\n- 'tugela' is an alternate cache daemon implementation, which stores\n  its mapping using a Berkeley b-tree on disk.  It conforms to the same\n  wire protocol as 'memcached':\n\n  o http://meta.wikimedia.org/wiki/Tugela_Cache\n\n- This product's home page and bug tracker:\n\n  o https://bitbucket.org/ctheune/mcdutils\n\n\nChanges\n=======\n\n0.2b3 (2011-11-21)\n------------------\n\n- Extend MANIFEST.in to include other missing files (.gif, .pt, .txt)\n\n\n0.2b2 (2011-11-21)\n------------------\n\n- Fix source distribution by including README.txt and CHANGES.txt via\n  manifest.\n\n- Include test runner in buildout and fix broken tests.\n\n\n0.2b1 (2011-11-19)\n------------------\n\n- Turn product into an egg and release on PyPI.\n\n- Implement a forced refresh of the in-process cache of memcache data at the\n  end of transactions to avoid stale data.\n\n- mapping.py: Added 'getContainerKey' method to 'MemCacheMapping' in\n  order to make it compatible with the API of the TemporaryFolder version\n  (allows the session testing rig code can generate error messages).\n\n- Added (preliminary) RAMCacheManager replacement.\n\n- Removed  proxy's 'create' method, to allow other multiple of data to be\n  stored.  The session data container now handles instantiating the\n  mapping.\n\n- Fixed the pickling of mappings *correctly*, instead of requiring that\n  the proxy pick out the 'data' member.\n\n- Expanded API for IProxy to expose more of the memcached client API.\n\n\n0.1 (2006-05-31)\n----------------\n\n- CVS tag, 'mcdutils-0_1'\n\n- Initial public release.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://bitbucket.org/ctheune/mcdutils",
    "keywords": "session memcache memcached Products",
    "license": "ZPL 2.1",
    "maintainer": null,
    "maintainer_email": null,
    "name": "Products.mcdutils",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/Products.mcdutils/",
    "release_url": "https://pypi.org/project/Products.mcdutils/0.2b3/",
    "requires_python": null,
    "summary": "A Zope2 product which provides facilities for storing sessions in memcached.",
    "version": "0.2b3"
  },
  "releases": {
    "0.2b1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7107509b6a59ff4a9a8a22b4058ea0bb",
          "sha256": "d1d58ff1395d79f5f0b8ea6b8719149beb22f47099c4a97c15909f6c3727d379"
        },
        "downloads": 2912,
        "filename": "Products.mcdutils-0.2b1.tar.gz",
        "has_sig": false,
        "md5_digest": "7107509b6a59ff4a9a8a22b4058ea0bb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16296,
        "upload_time": "2011-11-19T07:54:22",
        "url": "https://files.pythonhosted.org/packages/55/44/84179e3c1b19d0f16555567316e1dd8573ca9e88dbcbaaf9d1aafe18fff1/Products.mcdutils-0.2b1.tar.gz"
      }
    ],
    "0.2b2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2bcd41b8e14937d7cbfd2c1f5b4ee36c",
          "sha256": "55a4d8ff96329a64e91ea2195e406ba5335c921e9840234b55f628792aff2d10"
        },
        "downloads": 2881,
        "filename": "Products.mcdutils-0.2b2.tar.gz",
        "has_sig": false,
        "md5_digest": "2bcd41b8e14937d7cbfd2c1f5b4ee36c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16604,
        "upload_time": "2011-11-21T10:34:14",
        "url": "https://files.pythonhosted.org/packages/a8/9f/fd14863228842020a40a05cab926607cb2a0dc5a75819af7f42fbc7bc3b3/Products.mcdutils-0.2b2.tar.gz"
      }
    ],
    "0.2b3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5d0206e22d1599a071739faae3714e78",
          "sha256": "ba861a39131f4b3196661cea97b5a9d09e36c11f52f84decbbecb8dc469e3abd"
        },
        "downloads": 3885,
        "filename": "Products.mcdutils-0.2b3.tar.gz",
        "has_sig": false,
        "md5_digest": "5d0206e22d1599a071739faae3714e78",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18269,
        "upload_time": "2011-11-21T14:54:20",
        "url": "https://files.pythonhosted.org/packages/d8/66/e3135e9b1258e9584e047f44dbe2b0cfa7f023078121835c117ee702cfe4/Products.mcdutils-0.2b3.tar.gz"
      }
    ],
    "0.2dev": []
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5d0206e22d1599a071739faae3714e78",
        "sha256": "ba861a39131f4b3196661cea97b5a9d09e36c11f52f84decbbecb8dc469e3abd"
      },
      "downloads": 3885,
      "filename": "Products.mcdutils-0.2b3.tar.gz",
      "has_sig": false,
      "md5_digest": "5d0206e22d1599a071739faae3714e78",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 18269,
      "upload_time": "2011-11-21T14:54:20",
      "url": "https://files.pythonhosted.org/packages/d8/66/e3135e9b1258e9584e047f44dbe2b0cfa7f023078121835c117ee702cfe4/Products.mcdutils-0.2b3.tar.gz"
    }
  ]
}