{
  "info": {
    "author": "J\u00f3gvan Magnus Haugaard Olsen",
    "author_email": "foeroyingur@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Chemistry",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "PyFraME: Python tools for Fragment-based Multiscale Embedding calculations\n==========================================================================\n\n.. image:: https://gitlab.com/FraME-projects/PyFraME/badges/master/build.svg\n   :target: https://gitlab.com/FraME-projects/PyFraME/commits/master\n.. image:: https://gitlab.com/FraME-projects/PyFraME/badges/master/coverage.svg\n   :target: https://gitlab.com/FraME-projects/PyFraME/commits/master\n.. image:: https://api.codacy.com/project/badge/Grade/8cfac142c47040e0a9b2d318ee11becf\n   :target: https://www.codacy.com/app/foeroyingur/PyFraME?utm_source=gitlab.com&amp;utm_medium=referral&amp;utm_content=FraME-projects/PyFraME&amp;utm_campaign=Badge_Grade\n.. image:: https://api.codacy.com/project/badge/Coverage/8cfac142c47040e0a9b2d318ee11becf\n   :target: https://www.codacy.com/app/foeroyingur/PyFraME?utm_source=gitlab.com&amp;utm_medium=referral&amp;utm_content=FraME-projects/PyFraME&amp;utm_campaign=Badge_Coverage\n\nArchived copies: |DOI|\n\n.. |DOI| image:: https://zenodo.org/badge/DOI/10.5281/zenodo.293765.svg\n   :target: https://doi.org/10.5281/zenodo.293765\n\n\nDescription\n-----------\n\nPyFraME is a Python package that provides tools for setting up and\nrunning fragment-based multiscale embedding calculations. The aim is to\nprovide tools that can automatize the workflow of such calculations in a\nflexible manner.\n\nThe typical workflow is as follows:\n\n1. a part of the total molecular system is chosen as the core region\n   which is typically treated a high level of theory\n2. the remainder is split into a number of regions each of which can be\n   treated at different levels of theory\n3. each region (except the core) is divided into fragments that consist\n   of either small molecules or parts of larger molecules that have been\n   fragmented into smaller computationally manageable fragments\n4. a calculation is run on each fragment to obtain fragment parameters\n   (if necessary)\n5. all fragment parameters of all regions are assembled and constitute\n   the embedding potential\n6. a final calculation is run on the core region using the embedding\n   potential to model the effect from the remainder of the molecular\n   system\n\nHow to cite\n-----------\n\nTo cite PyFraME please use a format similar to the following\n\n\"J. M. H. Olsen, *PyFraME: Python tools for Fragment-based Multiscale\nEmbedding (version 0.1.0)*, **2017**,\nhttps://doi.org/10.5281/zenodo.293765\"\n\nwhere the version and DOI should of course correspond to the actual\nversion that was used. A possible BibTeX entry could be::\n\n    @misc{pyframe,\n          author = {Olsen, J. M. H.},\n          title = {{PyFraME}: {P}ython tools for {F}ragment-based {M}ultiscale {E}mbedding (version 0.1.0)},\n          year = {2017},\n          note = {https://doi.org/10.5281/zenodo.293765}}\n\nAlternatively, BibTeX and other formats can be generated by `Zenodo <https://doi.org/10.5281/zenodo.293765>`_.\n\nRequirements\n------------\n\nTo use PyFraME you need:\n\n* `Python 3 <http://www.python.org/>`_\n* `NumPy <http://www.numpy.org/>`_\n* `Numba <https://numba.pydata.org/>`_\n\nFor certain functionality you will need one or more of the following:\n\n* `Dalton <http://www.daltonprogram.org/>`_\n* `LoProp for Dalton <https://github.com/vahtras/loprop>`_\n* `Molcas 8 <http://www.molcas.org/>`_\n\nTo run the test suite you need:\n\n* `nose <http://nose.readthedocs.io>`_\n\nor\n\n* `pytest <http://pytest.org>`_\n\nInstallation\n------------\n\nThe source can be downloaded from\n`GitLab <https://gitlab.com/FraME-projects/PyFraME>`_ or\n`Zenodo <https://doi.org/10.5281/zenodo.293765>`_. Alternatively, it can be\ninstalled from `PyPI <https://pypi.org/>`_::\n\n    pip install pyframe\n\nAlternatively, it can be cloned from the repository::\n\n    git clone https://gitlab.com/FraME-projects/PyFraME.git\n\nThe package is installed by running::\n\n    python setup.py install\n\nfrom the PyFraME root directory. You may wish to add ``--user`` in the\nlast line if you do not have root access / sudo rights. Note that this\nwill install NumPy and Numba if they are not installed already.\n\n\nTests\n-----\n\nTo run the test suite type::\n\n    nosetests\n\nor::\n\n    pytest\n\nfrom the PyFraME root directory.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://gitlab.com/FraME-projects/PyFraME",
    "keywords": "",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyFraME",
    "platform": "",
    "project_url": "https://pypi.org/project/PyFraME/",
    "release_url": "https://pypi.org/project/PyFraME/0.1.1/",
    "requires_dist": [],
    "requires_python": ">=3",
    "summary": "PyFraME: Python tools for Fragment-based Multiscale Embedding",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c4125fedaf9e3e91c27d36ec2095e888",
          "sha256": "73546688d4350988b96fc33f6424409ef22dc91834afbdb83653adc2c983d806"
        },
        "downloads": -1,
        "filename": "PyFraME-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c4125fedaf9e3e91c27d36ec2095e888",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32811,
        "upload_time": "2018-02-07T14:35:41",
        "url": "https://files.pythonhosted.org/packages/88/10/ccf4019e8be392f31e0797490b6a7e30bc0a2ba17bf3c327c3973642697d/PyFraME-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "09a4aed70d106cb4a719b36c75c29df7",
          "sha256": "2e5af63b6efb504adc5b1d49a1e93aeef8e72862722cd9d2e990d3a7807f5249"
        },
        "downloads": -1,
        "filename": "PyFraME-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "09a4aed70d106cb4a719b36c75c29df7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 663936,
        "upload_time": "2018-02-08T09:47:23",
        "url": "https://files.pythonhosted.org/packages/21/3e/96cc19c40df6b06121d0d8a3a555290df6f0bf1a06b9d578c988ae3514a9/PyFraME-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "09a4aed70d106cb4a719b36c75c29df7",
        "sha256": "2e5af63b6efb504adc5b1d49a1e93aeef8e72862722cd9d2e990d3a7807f5249"
      },
      "downloads": -1,
      "filename": "PyFraME-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "09a4aed70d106cb4a719b36c75c29df7",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 663936,
      "upload_time": "2018-02-08T09:47:23",
      "url": "https://files.pythonhosted.org/packages/21/3e/96cc19c40df6b06121d0d8a3a555290df6f0bf1a06b9d578c988ae3514a9/PyFraME-0.1.1.tar.gz"
    }
  ]
}