{
  "info": {
    "author": "Ingmar Steen",
    "author_email": "iksteen@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Environment :: Plugins",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Pelican-Albums\n==============\n\nPelican-Albums is a plugin for Pelican that helps you to easily manage your\nphoto albums (or galleries).\n\nFeatures\n--------\n\n- Easily reference an image in your album path using {image}album/image.jpg.\n- Automatically create a thumbnail for an image in your album path using\n  ``{thumbnail}album/image.jpg`` or ``{thumbnail:NxN@Q}album/image.jpg``.\n- Automatically create album pages by adding a page to an album directory.\n\nInstallation\n------------\n\nTo install pelican-albums to your pelican installation use::\n\n    $ pip install pelican-albums\n\nThen, add 'pelican_albums' to the plugin list in your publishconf.py::\n\n    PLUGINS = ['pelican_albums']\n\nSettings\n--------\n\nPelican-albums provides a couple of settings:\n\n- ``ALBUM_PATH`` (*images*): What directory inside ``content`` contains your\n  albums.\n- ``THUMBNAIL_OUTPUT_PATH`` (*images/thumbnails*): What directory inside\n  the ``output`` directory will be used to store thumbnails.\n- ``THUMBNAIL_OUTPUT_FORMAT`` (*JPEG*): As what format the thumbnails should\n  be created (*JPEG* or *PNG*).\n- ``THUMBNAIL_DEFAULT_SIZE`` (*192x192*): What the default size of a\n  thumbnail should be.\n- ``THUMBNAIL_DEFAULT_QUALITY`` (*80*): What the default quality of a\n  JPEG thumbnail should be.\n- ``ALBUM_SAVE_AS`` (*albums/{slug}.html*): Where to store album indexes.\n- ``ALBUM_URL`` (*albums/{slug}.html*):  The URL scheme to reference an album.\n\nAlbums\n------\n\nTo create a new album, just create a new directory in the ``ALBUM_PATH`` (the\ndefault is *content/images*) and place the images inside it. Please note that\npelican-albums does not offer facilities to rotate or resize the images for\nyou (except for creating thumbnails) at this moment.\n\nThumbnails\n----------\n\nPelican-albums will automatically generate the requested thumbnails at the\nrequested sizes. It will check the ``mtime`` of the original file to that\nof the thumbnail to check if the thumbnail should be refreshed.\n\nYou can specify the size and quality of a thumbnail on different places:\n\n- Inside the {thumbnail} tag: {thumbnail:128x128@80}album/image.jpg\n- In the metadata of the content: Thumbnail-Size: 128x128@80\n- As a parameter to the ``album.thumbnail(spec=None)`` in your templates.\n- In the global pelican settings.\n\nA thumbnail size specifier can have a number of different forms:\n\n- *WIDTHxHEIGHT* -- Crop and resize an image until a thumbnail of these\n  exact dimensions is the result (f.e. 192x192).\n- *DIMENSION* -- Shorthand for *DIMENSIONxDIMENSION* (f.e. 192).\n- *WIDTHx* -- Create a thumbnail with the given width but keep the original\n  aspect ratio so the height might vary (f.e. 192x).\n- *xHEIGHT* -- Create a thumbnail with the given height but keep the original\n  aspect ratio so the width might vary (f.e. x192).\n\nYou can optionally add an *@nn* suffix to the size to indicate the thumbnail\nquality that should be used (f.e. 192@80 for a 192x192 thumbnail at 80%\nquality). This specifies the JPEG file quality and does not apply to PNG\nthumbnails.\n\nAlbum pages\n-----------\n\nBy creating a page inside an album folder, a page will be generated using the\n``album.html`` template. Both the ``album`` and the ``page`` will be available\ninside the template. The ``page`` object works exactly as the regular pelican\npage objects.\n\nThe ``album`` object has several properties:\n\n- ``images`` -- The images contained in this album.\n- ``albums`` -- A list of sub-albums (if any).\n- ``pages`` -- The album pages for this album (you can create multiple pages\n  for each album if you want).\n\nThe ``image`` objects returned by ``album.images`` have the following\nproperties:\n\n- ``album`` -- The album this image belongs to.\n- ``filename`` -- The filename of this image.\n- ``url`` -- The URL of this image relative to the site URL.\n- ``thumbnail(spec=None)`` -- A method that returns the URL of a thumbnail of\n  the given (or default) size and quality relative to the site URL.\n\nalbum.html\n----------\n\nAn example template for album pages (save this as *album.html* inside your\ntemplates directory)::\n\n    {% extends \"base.html\" %}\n    {% block title %}{{ page.title }}{%endblock%}\n    {% block content %}\n    <article class=\"page\">\n        <header>\n            <div class=\"title\">\n                {{ page.title }}\n            </div>\n        </header>\n    \n        <div class=\"entry-content\">\n            {{ page.content }}\n        </div>\n    \n        <div class=\"album\">\n            {% for image in album.images %}\n                <a href=\"{{ SITEURL }}/{{ image.url }}\">\n                    <img src=\"{{ SITEURL }}/{{ image.thumbnail(page.metadata.get('thumbnail-size')) }}\"\n                         title=\"{{ image.filename }}\" />\n                </a>\n            {% endfor %}\n        </div>\n    </article>\n    {% endblock %}\n\nRelease history\n###############\n\n0.6.0 (2015-04-28)\n==================\n\n* Allow using PNG files as thumbnails instead of JPEG.\n* Allow specifying the thumbnail quality.\n* Increase default quality to 80%.\n\n0.5.1 (2015-04-13)\n==================\n\n* Automatically exclude the album path from the article and page generators.\n* Documentation improvements.\n\n0.5.0 (2015-04-12)\n==================\n\n* Initial release.",
    "docs_url": null,
    "download_url": "https://github.com/iksteen/pelican-albums/tarball/v0.6.0",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/iksteen/pelican-albums/",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pelican-albums",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pelican-albums/",
    "release_url": "https://pypi.org/project/pelican-albums/0.6.0/",
    "requires_python": null,
    "summary": "Automatic photo album generation and thumbnailing for Pelican.",
    "version": "0.6.0"
  },
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a832476bbdedd92f26cb9e749fb74376",
          "sha256": "6cba2132aefb20937d56d9ae3237272586891e77fc11b64978855abd7ba81afa"
        },
        "downloads": 981,
        "filename": "pelican-albums-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a832476bbdedd92f26cb9e749fb74376",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5659,
        "upload_time": "2015-04-12T09:45:31",
        "url": "https://files.pythonhosted.org/packages/cd/bb/63fef0f6cb4c6a64ea5dc4f6ef865f301a3fe82ee6076cbc7f57858a86e5/pelican-albums-0.5.0.tar.gz"
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "95b484595b2517ab8e6f9b75f322c52f",
          "sha256": "1bfdaee2e05954c7b9cc85f8638b0604a2905272ce1d6e58e4b25da07bee69d0"
        },
        "downloads": 990,
        "filename": "pelican-albums-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "95b484595b2517ab8e6f9b75f322c52f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5942,
        "upload_time": "2015-04-13T10:12:00",
        "url": "https://files.pythonhosted.org/packages/52/57/30e4ea4645a506d6b997282b815082179d593e0695f7b040e87a8b764cdb/pelican-albums-0.5.1.tar.gz"
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3e60c1c7cee2eac5d33052d26c69feaa",
          "sha256": "392784b3c435d928d695b36f894d3f9d249b11a1ea279fc2e6b9a5eaf1b140c0"
        },
        "downloads": 2259,
        "filename": "pelican-albums-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3e60c1c7cee2eac5d33052d26c69feaa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6479,
        "upload_time": "2015-04-28T18:57:25",
        "url": "https://files.pythonhosted.org/packages/11/a8/dbb31fc4a8febb268da5dc3ae56d13c190e20c11b7ba9ca7d40e1698d15c/pelican-albums-0.6.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "3e60c1c7cee2eac5d33052d26c69feaa",
        "sha256": "392784b3c435d928d695b36f894d3f9d249b11a1ea279fc2e6b9a5eaf1b140c0"
      },
      "downloads": 2259,
      "filename": "pelican-albums-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3e60c1c7cee2eac5d33052d26c69feaa",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6479,
      "upload_time": "2015-04-28T18:57:25",
      "url": "https://files.pythonhosted.org/packages/11/a8/dbb31fc4a8febb268da5dc3ae56d13c190e20c11b7ba9ca7d40e1698d15c/pelican-albums-0.6.0.tar.gz"
    }
  ]
}