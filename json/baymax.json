{
  "info": {
    "author": "Dima Moroz",
    "author_email": "me@dimamoroz.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "Baymax, a simple telegram bot framework on top of Python asyncio\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWork in progress\n\nRequirements\n~~~~~~~~~~~~\n\n-  Python 3.6 or higher\n\nInstallation\n~~~~~~~~~~~~\n\n.. code:: bash\n\n    pip install baymax\n\nBasic usage example\n~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from baymax.bot import Bot\n\n    bot = Bot('token')\n\n    @bot.on('/start')\n    async def start_handler(update):\n        await bot.reply(update, 'Welcome!')\n\n    bot.run()\n\nMiddleware example\n~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    @bot.middleware\n    async def message_logging_middleware(raw_update):\n        bot.logger.info('New update received: %s', raw_update['update_id'])\n\n..\n\n    NOTE: All middleware functions should be coroutines for now, even if\n    they do not have asynchronous actions.\n\nReply keyboard markup example\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from baymax.markups import KeyboardButton, ReplyKeyboardMarkup\n\n    @bot.on('/rate')\n    async def rate_handler(update):\n        await bot.reply(update, 'Rate me', reply_markup=ReplyKeyboardMarkup(\n            [\n                [\n                    KeyboardButton('\u2b50\ufe0f'),\n                    KeyboardButton('\u2b50\ufe0f\u2b50\ufe0f'),\n                    KeyboardButton('\u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f')\n                ]\n            ], resize_keyboard=True, one_time_keyboard=True))\n\n..\n\n    NOTE: Reply markup API / objects will be changing, they are far from\n    good now.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/dmrz/baymax",
    "keywords": "telegram bot asyncio",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "baymax",
    "platform": "",
    "project_url": "https://pypi.org/project/baymax/",
    "release_url": "https://pypi.org/project/baymax/0.0.2/",
    "requires_dist": [
      "uvloop (==0.9.1)",
      "colorlog (==3.1.0)",
      "async-timeout (==2.0.0)",
      "aiohttp (==2.3.9)",
      "aiodns (==1.1.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "A simple telegram bot framework on top of Python asyncio",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a639e9d01af450743abf3efb960ec4f4",
          "sha256": "a72a91ab08fce5ece1621ab794511740953dcc2854554986dc2ae2b78081c2de"
        },
        "downloads": -1,
        "filename": "baymax-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a639e9d01af450743abf3efb960ec4f4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 6582,
        "upload_time": "2018-01-27T14:01:56",
        "url": "https://files.pythonhosted.org/packages/82/7a/9f54e10793576bc8e5e7264c0da63a31ee458bf6e106f3b1004a5fe8db4a/baymax-0.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "769a1ec00b92dd3c9e573a3d637f042a",
          "sha256": "e72002bfa8942f3a0b72f09eb659d3b281bedf3cb03908e4c8b04184602b07ea"
        },
        "downloads": -1,
        "filename": "baymax-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "769a1ec00b92dd3c9e573a3d637f042a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 7680,
        "upload_time": "2018-01-27T14:20:48",
        "url": "https://files.pythonhosted.org/packages/3a/5c/1e84d9b6c238a8aefc9d5827a9b023e103924df53e0d1b049bef10673cad/baymax-0.0.1-py3-none-any.whl"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "94d23eeb50396dcf21a0dc4cbd9a19b6",
          "sha256": "646a194299fd059e1c12346f5316590e49324effcc09105a89db097d54c8c471"
        },
        "downloads": -1,
        "filename": "baymax-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94d23eeb50396dcf21a0dc4cbd9a19b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 7678,
        "upload_time": "2018-01-27T14:22:31",
        "url": "https://files.pythonhosted.org/packages/1e/1a/76a0ff3b3c7380c88a3538c49c359fa33b1d20723f77df3b78e771aefc1a/baymax-0.0.2-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "94d23eeb50396dcf21a0dc4cbd9a19b6",
        "sha256": "646a194299fd059e1c12346f5316590e49324effcc09105a89db097d54c8c471"
      },
      "downloads": -1,
      "filename": "baymax-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "94d23eeb50396dcf21a0dc4cbd9a19b6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 7678,
      "upload_time": "2018-01-27T14:22:31",
      "url": "https://files.pythonhosted.org/packages/1e/1a/76a0ff3b3c7380c88a3538c49c359fa33b1d20723f77df3b78e771aefc1a/baymax-0.0.2-py3-none-any.whl"
    }
  ]
}