{
  "info": {
    "author": "x1ah",
    "author_email": "x1ahgxq@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: Chinese (Simplified)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "farmer\n======\n\n\u4ecb\u7ecd\n----\n\n``farmer``\\ \uff0c\u662f\u4e00\u4e2a\u6781\u7b80\u7684 MySQL Python ORM\uff0c\u6781\u7b80\u7684 CURD \u6620\u5c04\u65b9\u6cd5\uff0c\u652f\u6301\u8fde\u63a5\u6c60\uff0c\u4e8b\u52a1\u7b49\u7279\u6027\uff0c\u4ee5\u53ca\u5e38\u89c1\u7684\u589e\u5220\u6539\u67e5\u64cd\u4f5c\n\n\u5f00\u59cb\u4f7f\u7528\n--------\n\n``farmer``\\ \u5e76\u4e0d\u63d0\u4f9b\u5efa\u8868\u5efa\u5e93\u7684\u529f\u80fd\uff0c\u6240\u6709 Model \u64cd\u4f5c\u90fd\u5efa\u7acb\u5728\u5df2\u7ecf\u5b58\u5728\u5bf9\u5e94\u6570\u636e\u5e93\uff0c\u5df2\u7ecf\u5b58\u5728\u5bf9\u5e94\u8868\u7684\u524d\u63d0\u4e0b\uff0c\u5efa\u8868\u5efa\u5e93\u6539\u8868\u7b49\u63a8\u8350\u4f7f\u7528 `pt-online <https://www.percona.com/doc/percona-toolkit/LATEST/pt-online-schema-change.html>`__\n\n\n\u5047\u8bbe\u5df2\u7ecf\u5728\u672c\u673a 3306 \u7aef\u53e3\u542f\u7528 MySQL \u670d\u52a1\uff0c\u5176\u4e2d\u4e00\u4e2a database \u4e3a ``chalet``\\ \uff0c\u6539\u5e93\u7528\u6237\u540d\u5bc6\u7801\u5206\u522b\u4e3a ``chalet``, ``chalet@pswd`` \u5e76\u5728 ``chalet`` \u91cc\u6709\u4e00\u5f20\u8868\uff0c\u7ed3\u6784\u5982\u4e0b\uff1a\n\n.. code:: sql\n\n    mysql chalet@localhost:chalet> show create table post;\n    +-------+-------------------------------------------------------------------------------------------+\n    | Table | Create Table                                                                              |\n    +-------+-------------------------------------------------------------------------------------------+\n    | post  | CREATE TABLE `post` (                                                                     |\n    |       |   `id` int(8) unsigned NOT NULL AUTO_INCREMENT,                                           |\n    |       |   `author_id` int(8) unsigned NOT NULL,                                                   |\n    |       |   `content` longblob,                                                                     |\n    |       |   `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,                             |\n    |       |   `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, |\n    |       |   `status` tinyint(4) NOT NULL,                                                           |\n    |       |   PRIMARY KEY (`id`),                                                                     |\n    |       |   KEY `idx_author_id_status` (`author_id`,`status`)                                       |\n    |       | ) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8                                    |\n    +-------+-------------------------------------------------------------------------------------------+\n    1 row in set\n    Time: 0.020s\n\n\u5b89\u88c5\n~~~~~~~~~~~~~~~~\n\n.. code:: python\n    $ pip install farmer-orm\n\n\u521b\u5efa\u6570\u636e\u5e93\u8fde\u63a5\u6c60\n~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    # coding: utf-8\n\n    from farmer import SQLBase\n\n\n    db = SQLBase('localhost', 'chalet', 3306, 'chalet', 'chalet@pswd')\n    # SQLBase.__init__ \u51fd\u6570\u7b7e\u540d\u4e3a def __init__(self, host, database, port, user, passwd, **kw)\uff0c\u5206\u522b\u5bf9\u5e94\u6570\u636e\u5e93\u521d\u59cb\u5316\u51e0\u4e2a\u5fc5\u586b\u53c2\u6570\n\n\u5b9a\u4e49 Model\n~~~~~~~~~~\n\n.. code:: python\n\n    import datetime\n\n    from farmer import Model\n\n\n    class BaseModel(Model):\n        __database__ = db\n\n\n    class Post(BaseModel):\n        __table__ = 'post'\n\n        class Fields:\n            id = None\n            author_id = None\n            content = ''\n            status = None\n            create_time = datetime.datetime.now\n            update_time = datetime.datetime.now\n\n\n    class User(BaseModel):\n        __table__ = 'user'\n\n        class Fields:\n            pass\n\nQuery\n~~~~~\n\n\u4f7f\u7528 farmer \u67e5\u8be2\uff0c\u63d0\u4f9b\u4e86\u4e24\u4e2a\u57fa\u672c\u65b9\u6cd5\uff0c\\ ``Model.get``\\ \uff0c\\ ``Model.where``\\ \uff0c\\ ``get`` \u8fd4\u56de\u6ee1\u8db3\u6761\u4ef6\u7684\u7b2c\u4e00\u4e2a\uff0c\\ ``where`` \u8fd4\u56de\u6ee1\u8db3\u6761\u4ef6\u7684\u6240\u6709\u8bb0\u5f55\u7684\u8fed\u4ee3\u5668\uff0c\\ ``where`` \u53ef\u81ea\u7531\u7ec4\u5408\uff0c\\ ``get`` \u548c ``where`` \u7684\u51fd\u6570\u7b7e\u540d\u4e00\u81f4\uff0c\u5982 ``where id > 10 AND status = 1 AND author_id = 100``, \u5bf9\u5e94\u5230 farmer \u7b49\u4ef7\u4e8e\u5982\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a - ``Model.where('id > 10', 'status = 1', 'author_id = 100')`` - ``Model.where('id > 10').where('status = 1').where('author_id = 100')`` - ``Model.where('id > 10', status=1, author_id=100)`` - ``Model.where('id > 10').where(status=1).where(author_id=100)``\n\n\u771f\u5b9e\u7528\u4f8b\n^^^^^^^^\n\n.. code:: python\n\n    >>> ret = Post.get(id=2)\n    >>> ret\n    Post(id=2, author_id=100, content={\"content\": \"\u4f60\u597d\u4e16\u754c\ud83d\ude36\"}, create_time=2017-11-26 20:18:50, update_time=2017-11-27 08:26:45, status=1)\n    >>> ret.id, ret.author_id, ret.content\n    (2, 100, '{\"content\": \"\u4f60\u597d\u4e16\u754c\ud83d\ude36\"}')\n    >>>\n    >>> ret = Post.where('id < 4')\n    >>> ret\n    [Post(id=1, author_id=100, content={\"content\": \"hello world\"}, create_time=2017-11-26 18:53:21, update_time=2017-11-26 18:53:21, status=1), Post(id=2, author_id=100, content={\"content\": \"\u4f60\u597d\u4e16\u754c\ud83d\ude36\"}, create_time=2017-11-26 20:18:50, update_time=2017-11-27 08:26:45, status=1), Post(id=3, author_id=100, content=test, create_time=2017-12-02 15:22:46, update_time=2017-12-02 15:22:46, status=1)]\n    >>> ret_first = ret[0]\n    >>> ret_first\n    Post(id=1, author_id=100, content={\"content\": \"hello world\"}, create_time=2017-11-26 18:53:21, update_time=2017-11-26 18:53:21, status=1)\n    >>>\n    >>> ret = Post.where('id > 8', status=1)\n    >>> ret\n    [Post(id=11, author_id=100, content=test, create_time=2017-12-09 05:47:41, update_time=2017-12-09 05:47:41, status=1), Post(id=13, author_id=100, content=test, create_time=2017-12-09 05:48:14, update_time=2017-12-09 05:48:14, status=1), Post(id=15, author_id=3200, content={aaaa}, create_time=2017-11-11 11:11:11, update_time=2017-11-11 11:11:11, status=1), Post(id=16, author_id=3200, content={aaaa}, create_time=2017-11-11 11:11:11, update_time=2017-11-11 11:11:11, status=1), Post(id=17, author_id=3200, content={aaaa}, create_time=2017-11-11 11:11:11, update_time=2017-11-11 11:11:11, status=1), Post(id=18, author_id=300, content={}, create_time=2017-11-11 11:11:11, update_time=2017-11-11 11:11:11, status=1)]\n    >>> ret = Post.where(status=1).where('id < 4')\n    >>> ret\n    [Post(id=1, author_id=100, content={\"content\": \"hello world\"}, create_time=2017-11-26 18:53:21, update_time=2017-11-26 18:53:21, status=1), Post(id=2, author_id=100, content={\"content\": \"\u4f60\u597d\u4e16\u754c\ud83d\ude36\"}, create_time=2017-11-26 20:18:50, update_time=2017-11-27 08:26:45, status=1), Post(id=3, author_id=100, content=test, create_time=2017-12-02 15:22:46, update_time=2017-12-02 15:22:46, status=1)]\n\nDelete\n~~~~~~\n\n``farmer`` \u63d0\u4f9b ``Model.delete()`` \u6765\u5220\u9664\u8bb0\u5f55\uff0c\\ ``delete()`` \u53ef\u76f4\u63a5\u63a5\u5728 ``Model.where()``/``Model.get()`` \u540e, \u5220\u9664\u6761\u4ef6\u8bed\u53e5\u4e8e\u4e0a\u9762 Query \u7528\u6cd5\u76f8\u540c\n\n\u771f\u5b9e\u7528\u4f8b\n^^^^^^^^\n\n.. code:: python\n\n    >>> ret = Post.get(id=25)\n    >>> ret\n    Post(id=25, author_id=13, content=13, create_time=2017-11-11 11:11:11, update_time=2017-11-11 11:11:11, status=3)\n    >>> ret.delete()\n    1\n    >>> ret = Post.get(id=25)\n    >>> ret\n    >>>\n    >>> Post.where('id > 20')\n    [Post(id=21, author_id=10, content=, create_time=2017-11-11 11:11:11, update_time=2017-11-11 11:11:11, status=10), Post(id=22, author_id=111, content=111, create_time=2017-11-11 11:11:11, update_time=2017-11-11 11:11:11, status=111), Post(id=23, author_id=222, content=222, create_time=2017-11-11 11:11:11, update_time=2017-11-11 11:11:11, status=22), Post(id=24, author_id=12, content=12, create_time=2017-11-11 11:11:11, update_time=2017-11-11 11:11:11, status=12)]\n    >>> Post.where('id > 20').delete()\n    4\n\nUpdate\n~~~~~~\n\n``farmer`` \u63d0\u4f9b\u4e86 ``Model.update()``\\ \u3001\\ ``Model.save()`` \u7b49\u65b9\u6cd5\u6765\u66f4\u65b0\u8bb0\u5f55\uff0c\u540c\u4e0a\u9762\u7684 ``delete``\\ \uff0c\\ ``.update()`` \u53ef\u4ee5\u76f4\u63a5\u63a5\u5728 ``Model.get()``/``Model.where()`` \u8bed\u53e5\u540e\uff0c\u8fdb\u884c\u5355\u6761\u3001\u6279\u91cf\u66f4\u65b0\uff0c\u82e5\u66f4\u65b0\u65f6\u672a\u6307\u660e\u5b57\u6bb5\u503c\uff0c\u5176\u503c\u9ed8\u8ba4\u4e3a\u5728\\ ``Model.Fields`` \u5185\u5b9a\u4e49\u7684\u9ed8\u8ba4\u503c\u3002\n\n\u771f\u5b9e\u7528\u4f8b\n^^^^^^^^\n\n.. code:: python\n\n    >>> ret = Post.where(id=18)[0]\n    >>> ret\n    Post(id=18, author_id=300, content={}, create_time=2017-11-11 11:11:11, update_time=2017-11-11 11:11:11, status=1)\n    >>> ret.content\n    '{}'\n    >>> import json\n    >>> ret.content = json.dumps({'content': 'hello farmer'})\n    >>> ret.content\n    '{\"content\": \"hello farmer\"}'\n    >>> ret.save()\n    Post(id=0, author_id=300, content={\"content\": \"hello farmer\"}, create_time=2017-11-11 11:11:11, update_time=2017-11-11 11:11:11, status=1)\n    >>> ret = Post.where(id=18)[0]\n    >>> ret.content\n    '{\"content\": \"hello farmer\"}'\n    >>>\n    >>> ret = Post.where(id=18)[0]\n    >>> ret.update(author_id=1000000)\n    1\n    >>> ret = Post.where(id=18)[0]\n    >>> ret.author_id\n    1000000\n    >>>\n    >>> [(p.id, p.status) for p in Post.where('id > 15')]\n    [(16, 1), (17, 1), (18, 1), (19, 2), (20, 4)]\n    >>> Post.where('id > 15').update(status=1)\n    4\n    >>> [(p.id, p.status) for p in Post.where('id > 15')]\n    [(16, 1), (17, 1), (18, 1), (19, 1), (20, 1)]\n\nInsert\n~~~~~~\n\n\u63d2\u5165\u8bb0\u5f55\u4e0e\u66f4\u65b0\u8bb0\u5f55\u5927\u4f53\u76f8\u540c\n\n\u771f\u5b9e\u7528\u4f8b\n^^^^^^^^\n\n.. code:: python\n\n    >>> ret = Post(author_id=123, content='{}', status=0)\n    >>> ret.save()\n    Post(author_id=123, content={}, status=0, id=26, create_time=2017-11-11 11:11:11, update_time=2017-11-11 11:11:11)\n    >>>\n    >>>\n    >>> ret = Post(author_id=123, content='{}', status=0).save()\n    >>> ret\n    Post(author_id=123, content={}, status=0, id=27, create_time=2017-11-11 11:11:11, update_time=2017-11-11 11:11:11)\n    >>>\n    >>> ret = Post()\n    >>> ret.author_id = 234\n    >>> ret.status = 1\n    >>> ret.save()\n    Post(author_id=234, status=1, id=28, content=, create_time=2017-11-11 11:11:11, update_time=2017-11-11 11:11:11)\n\n\u4e8b\u52a1\n~~~~\n\n``farmer`` \u5c01\u88c5\u4e86\u4e8b\u52a1\u65b9\u6cd5\uff0c\u53ef\u4ee5\u66f4\u4e3a\u65b9\u4fbf\u7684\u5957\u4e0a\u4e8b\u52a1\uff0c\u63d0\u4f9b\u4e86 ``db.with_transaction()`` \u88c5\u9970\u5668\uff0c\\ ``db.transaction_context()`` \u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\n\n\u771f\u5b9e\u7528\u4f8b\n^^^^^^^^\n\n.. code:: python\n\n    >>> @db.with_transaction\n        def update_status(id):\n            ret = Post.where('id > %s' % id).update(status=1)\n\n    >>> with db.transaction_context():\n            Post.where('id > 10').update(status=1)\n\nTips\n~~~~\n\nfarmer \u5904\u4e8e\u5f00\u53d1\u5b8c\u5584\u9636\u6bb5\uff0c\u8c28\u614e\u7528\u4e8e\u751f\u4ea7\u73af\u5883\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/x1ah/farmer",
    "keywords": "MySQL Python ORM",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "farmer-orm",
    "platform": "",
    "project_url": "https://pypi.org/project/farmer-orm/",
    "release_url": "https://pypi.org/project/farmer-orm/0.2.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "MySQL Python ORM",
    "version": "0.2.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e0e3af24542cab4a1632db71ac87ddc4",
          "sha256": "cb9ebbecbbc744d77c7bd765b4601d48df6b23b58296993529836ec318ff2f0c"
        },
        "downloads": -1,
        "filename": "farmer-orm-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e0e3af24542cab4a1632db71ac87ddc4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11357,
        "upload_time": "2017-12-09T15:27:31",
        "url": "https://files.pythonhosted.org/packages/33/a1/6c89fd7c46d9b7a07ff3a285a84bab6e2596ed725c41495efc6d7a6142a3/farmer-orm-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0e813a8e8fcea2d8c34dbcec46543220",
          "sha256": "f5363aee42c25a6a0f2a444d81fbf1943c2987293ffe3db735756eff9d8eed1c"
        },
        "downloads": -1,
        "filename": "farmer-orm-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0e813a8e8fcea2d8c34dbcec46543220",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11425,
        "upload_time": "2017-12-09T15:33:27",
        "url": "https://files.pythonhosted.org/packages/14/eb/3487f48b037cbc21c1f871b3b83bf88bc84a962e8bf5b7a20b28a05b2223/farmer-orm-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "75da1bef153ddd1ce15f301ef375a5f4",
          "sha256": "6fea4794317d996e6e3a827b72e0ecdab29ad949812b524db891e2d47f2deeb6"
        },
        "downloads": -1,
        "filename": "farmer-orm-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "75da1bef153ddd1ce15f301ef375a5f4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12243,
        "upload_time": "2017-12-10T15:16:24",
        "url": "https://files.pythonhosted.org/packages/7c/54/97aee78d47de3e4d5727a2ebd56d17f7a0f7dd16e8ddc31cdb596ab2b176/farmer-orm-0.1.2.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8a1c7d8fab358f2f5f62febb28d865c7",
          "sha256": "e4d223cd46592ed6f168c412b8f94bb3aaf43f3b4ba5a979b4d788995965af1b"
        },
        "downloads": -1,
        "filename": "farmer-orm-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8a1c7d8fab358f2f5f62febb28d865c7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12281,
        "upload_time": "2017-12-16T14:11:59",
        "url": "https://files.pythonhosted.org/packages/4a/8f/aa1c9a4e596cc8a5a6a5b080c59cb91f8aa0071af162583283ac715f1177/farmer-orm-0.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "8a1c7d8fab358f2f5f62febb28d865c7",
        "sha256": "e4d223cd46592ed6f168c412b8f94bb3aaf43f3b4ba5a979b4d788995965af1b"
      },
      "downloads": -1,
      "filename": "farmer-orm-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8a1c7d8fab358f2f5f62febb28d865c7",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 12281,
      "upload_time": "2017-12-16T14:11:59",
      "url": "https://files.pythonhosted.org/packages/4a/8f/aa1c9a4e596cc8a5a6a5b080c59cb91f8aa0071af162583283ac715f1177/farmer-orm-0.2.0.tar.gz"
    }
  ]
}