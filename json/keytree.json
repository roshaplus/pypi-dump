{
  "info": {
    "author": "Sean Gillies",
    "author_email": "sgillies@frii.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: GIS"
    ],
    "description": "Keytree\n=======\n\nKeytree provides several functions for manipulating KML using the ElementTree API. Elements can be adapted to the Python geo interface and then used with packages like Shapely_::\n\n  >>> data = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  ... <kml xmlns=\"http://www.opengis.net/kml/2.2\">\n  ...   <Document>\n  ...     <Placemark>\n  ...       <name>point</name>\n  ...       <description>Point test</description>\n  ...       <Point>\n  ...         <coordinates>\n  ...           -122.364383,37.824664,0\n  ...         </coordinates>\n  ...       </Point>\n  ...     </Placemark>\n  ...   </Document>\n  ... </kml>\n  ... \"\"\"\n  >>> from xml.etree import ElementTree\n  >>> tree = ElementTree.fromstring(data)\n  >>> kmlns = tree.tag.split('}')[0][1:]\n  >>> placemarks = tree.findall('*/{%s}Placemark' % kmlns)\n  >>> p0 = placemarks[0]\n  >>> import keytree\n  >>> f = keytree.feature(p0)\n  >>> from shapely.geometry import asShape\n  >>> shape = asShape(f.geometry)\n  >>> shape.buffer(1.5).exterior.length\n  9.4209934708642571\n\nObjects like those from geojson_ that provide the Python geo interface can also be converted to ElementTree API Elements::\n\n  >>> from geojson import Feature\n  >>> f = Feature('1', \n  ...             geometry={\n  ...                 'type': 'Point', \n  ...                 'coordinates': (-122.364383, 37.824663999999999)\n  ...                 },\n  ...             title='Feature 1', \n  ...             summary='The first feature', \n  ...             content='Blah, blah, blah.'\n  ...             )\n\nA Shapely (or geojson) geometry could also be used in place of the dict::\n\n  >>> from shapely.geometry import Point\n  >>> f = Feature('1', \n  ...             geometry=Point(-122.364383, 37.824664),\n  ...             title='Feature 1', \n  ...             summary='The first feature', \n  ...             content='Blah, blah, blah.'\n  ...             )\n  \nThe first argument to the keytree.element function is an XML context, the created element will have the same namespace as that element::\n\n  >>> elem = keytree.element(tree, f)\n  >>> import pprint\n  >>> pprint.pprint((elem.tag, elem.text, list(elem)))\n  ('{http://www.opengis.net/kml/2.2}Placemark',\n   None,\n   [<Element {http://www.opengis.net/kml/2.2}name at ...>,\n    <Element {http://www.opengis.net/kml/2.2}Snippet at ...>,\n    <Element {http://www.opengis.net/kml/2.2}description at ...>,\n    <Element {http://www.opengis.net/kml/2.2}Point at ...>])\n  >>> pprint.pprint(list((e.tag, e.text, list(e)) for e in elem))\n  [('{http://www.opengis.net/kml/2.2}name', 'Feature 1', []),\n   ('{http://www.opengis.net/kml/2.2}Snippet', 'The first feature', []),\n   ('{http://www.opengis.net/kml/2.2}description', 'Blah, blah, blah.', []),\n   ('{http://www.opengis.net/kml/2.2}Point',\n    None, \n    [<{http://www.opengis.net/kml/2.2}Element coordinates at ...>])]\n  \n.. _Shapely: http://pypi.python.org/pypi/Shapely\n.. _geojson: http://pypi.python.org/pypi/geojson",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://atlantides.org/svn/pleiades/pleiades.keytree",
    "keywords": "KML etree ElementTree",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "keytree",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/keytree/",
    "release_url": "https://pypi.org/project/keytree/0.2.1/",
    "requires_python": null,
    "summary": "KML utilities for the ElementTree API",
    "version": "0.2.1"
  },
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2b75f82071a4dfe6fafc959180947995",
          "sha256": "01e754fc5776b226ac2d065ecb5d8721730b13ffd3ca29cb8475ad0856772c76"
        },
        "downloads": 3973,
        "filename": "keytree-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2b75f82071a4dfe6fafc959180947995",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6820,
        "upload_time": "2009-04-05T06:32:20",
        "url": "https://files.pythonhosted.org/packages/6b/fc/fbf9c2dbe122e6c096e400e47eaed35c2b217faa82b77690375f0aac7e47/keytree-0.2.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2b75f82071a4dfe6fafc959180947995",
        "sha256": "01e754fc5776b226ac2d065ecb5d8721730b13ffd3ca29cb8475ad0856772c76"
      },
      "downloads": 3973,
      "filename": "keytree-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2b75f82071a4dfe6fafc959180947995",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6820,
      "upload_time": "2009-04-05T06:32:20",
      "url": "https://files.pythonhosted.org/packages/6b/fc/fbf9c2dbe122e6c096e400e47eaed35c2b217faa82b77690375f0aac7e47/keytree-0.2.1.tar.gz"
    }
  ]
}