{
  "info": {
    "author": "OCEAN S.A.",
    "author_email": "osf@ocean.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "aioamqp_consumer\n================\n\n:info: Consumer/producer like library built over amqp (aioamqp)\n\n.. image:: https://img.shields.io/travis/wikibusiness/aioamqp_consumer.svg\n    :target: https://travis-ci.org/wikibusiness/aioamqp_consumer\n\n.. image:: https://img.shields.io/pypi/v/aioamqp_consumer.svg\n    :target: https://pypi.python.org/pypi/aioamqp_consumer\n\nInstallation\n------------\n\n.. code-block:: shell\n\n    pip install aioamqp_consumer\n\nUsage\n-----\n\n.. code-block:: python\n\n    import asyncio\n    from functools import partial\n\n    from aioamqp_consumer import Consumer, Producer\n\n\n    async def task(payload, options, sleep=0, *, loop):\n        await asyncio.sleep(sleep, loop=loop)\n        print(payload)\n\n\n    async def main(*, loop):\n        amqp_url = 'amqp://guest:guest@127.0.0.1:5672//'\n        amqp_queue = 'your-queue-here'\n        queue_kwargs = {\n            'durable': True,\n        }\n        amqp_kwargs = {}  # https://aioamqp.readthedocs.io/en/latest/api.html#aioamqp.connect\n\n        async with Producer(amqp_url, amqp_kwargs=amqp_kwargs, loop=loop) as producer:\n            for _ in range(5):\n                await producer.publish(\n                    b'hello',\n                    amqp_queue,\n                    queue_kwargs=queue_kwargs,\n                )\n\n        consumer = Consumer(\n            amqp_url,\n            partial(task, loop=loop, sleep=1),\n            amqp_queue,\n            queue_kwargs=queue_kwargs,\n            amqp_kwargs=amqp_kwargs,\n            loop=loop,\n        )\n        await consumer.scale(20)  # scale up to 20 background coroutines\n        await consumer.scale(5)  # downscale to 5 background coroutines\n        await consumer.join()  # wait for rabbitmq queue is empty and all local messages are processed\n        consumer.close()\n        await consumer.wait_closed()\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main(loop=loop))\n    loop.close()\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/wikibusiness/aioamqp_consumer",
    "keywords": "aioamqp",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aioamqp_consumer",
    "platform": "",
    "project_url": "https://pypi.org/project/aioamqp_consumer/",
    "release_url": "https://pypi.org/project/aioamqp_consumer/0.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Consumer/producer like library built over amqp (aioamqp)",
    "version": "0.1.0"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "904aea1b2014e09a55ea098ef25bca35",
          "sha256": "9b5c402440ce0a07e9c021b661bcea3855007429f72e4e8bab58969e58ded426"
        },
        "downloads": -1,
        "filename": "aioamqp_consumer-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "904aea1b2014e09a55ea098ef25bca35",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7459,
        "upload_time": "2017-07-05T10:44:14",
        "url": "https://files.pythonhosted.org/packages/01/9b/11c6339dd3965b04ac4700bb4ab8665ae67ac7b6db636f25adc787be3420/aioamqp_consumer-0.0.1.tar.gz"
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "db01ea9aa378e8d3740065a193895c29",
          "sha256": "6035345e9e82e1999d34771cf9ebeef838dcdf9df372f68567033d0c3d642482"
        },
        "downloads": -1,
        "filename": "aioamqp_consumer-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "db01ea9aa378e8d3740065a193895c29",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8234,
        "upload_time": "2017-11-21T18:48:20",
        "url": "https://files.pythonhosted.org/packages/9c/d3/de2d056b34f2888675b7c70e566fc79eecfcde7fffc2a020da2dd598e666/aioamqp_consumer-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "db01ea9aa378e8d3740065a193895c29",
        "sha256": "6035345e9e82e1999d34771cf9ebeef838dcdf9df372f68567033d0c3d642482"
      },
      "downloads": -1,
      "filename": "aioamqp_consumer-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "db01ea9aa378e8d3740065a193895c29",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8234,
      "upload_time": "2017-11-21T18:48:20",
      "url": "https://files.pythonhosted.org/packages/9c/d3/de2d056b34f2888675b7c70e566fc79eecfcde7fffc2a020da2dd598e666/aioamqp_consumer-0.1.0.tar.gz"
    }
  ]
}