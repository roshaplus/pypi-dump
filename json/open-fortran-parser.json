{
  "info": {
    "author": "Mateusz Bysiek",
    "author_email": "mb@mbdev.pl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Education",
      "Topic :: Scientific/Engineering",
      "Topic :: Utilities"
    ],
    "description": ".. role:: bash(code)\n    :language: bash\n\n.. role:: java(code)\n    :language: java\n\n.. role:: python(code)\n    :language: python\n\n.. role:: xml(code)\n    :language: xml\n\n\nXML output generator for Open Fortran Parser\n============================================\n\n.. image:: https://travis-ci.org/mbdevpl/open-fortran-parser-xml.svg?branch=master\n    :target: https://travis-ci.org/mbdevpl/open-fortran-parser-xml\n    :alt: build status from Travis CI\n\n.. image:: https://ci.appveyor.com/api/projects/status/github/mbdevpl/open-fortran-parser-xml?branch=master&svg=true\n    :target: https://ci.appveyor.com/project/mbdevpl/open-fortran-parser-xml\n    :alt: build status from AppVeyor\n\n.. image:: https://api.codacy.com/project/badge/Grade/1e5602a9efed41998eca0437d84cc1db\n    :target: https://www.codacy.com/app/mbdevpl/open-fortran-parser-xml\n    :alt: grade from Codacy\n\n.. image:: https://codecov.io/gh/mbdevpl/open-fortran-parser-xml/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/mbdevpl/open-fortran-parser-xml\n    :alt: test coverage from Codecov\n\n.. image:: https://img.shields.io/pypi/l/open-fortran-parser.svg\n    :target: https://github.com/mbdevpl/open-fortran-parser-xml/blob/master/NOTICE\n    :alt: license\n\nImplementation has 2 parts: the XML generator written in Java, and Python wrapper for the generator.\n\nThe implementation is tested on Linux, OS X and Windows.\n\nIn this file, first the Java implementation is described and then the Python wrapper.\n\n\nJava XML generator for OFP\n==========================\n\n.. image:: https://img.shields.io/github/release/mbdevpl/open-fortran-parser-xml.svg\n    :target: https://github.com/mbdevpl/open-fortran-parser-xml/releases\n    :alt: latest GitHub release\n\nThis is an extension of Open Fortran Parser (OFP), which outputs abstract syntaxt tree (AST)\nof parsed Fortran file in XML format - to a file or to :java:`System.out`.\n\n\ndependencies\n------------\n\n*   Java 1.7 or later\n\n*   Open Fortran Parser 0.8.4-3\n\n    https://github.com/mbdevpl/open-fortran-parser/releases\n\n    This is a patched version of OFP. The list of changes is available at the above link.\n\n*   ANTRL 3.3 (dependency of Open Fortran Parser)\n\n    http://www.antlr3.org/download/\n\n*   Apache Commons CLI 1.4 (or later)\n\n    https://commons.apache.org/proper/commons-cli/download_cli.cgi\n\n\nhow to build\n------------\n\nGet dependencies, either manually, or using the provided script:\n\n.. code:: bash\n\n    pip3 install -U -r requirements.txt\n    python3 -m open_fortran_parser --dev-deps\n    export CLASSPATH=\"${CLASSPATH}:$(pwd)/lib/*\"\n\nBuild:\n\n.. code:: bash\n\n    ant\n    export CLASSPATH=\"${CLASSPATH}:$(pwd)/dist/*\"\n\nThis will create a `.jar` file in `dist` directory, and add it to the Java classpath.\n\n\nhow to run\n----------\n\n.. code:: bash\n\n    java fortran.ofp.FrontEnd --class fortran.ofp.XMLPrinter \\\n      --output output.xml --verbosity 0~100 input.f\n\nwhere:\n\n*   The :bash:`--verbosity` flag controls verbosity of the parse tree. Defaluts to :bash:`100`\n    when omitted.\n\n    *   Maximum, :bash:`100`, means that all details picked up by Open Fortran Parser\n        will be preserved.\n\n    *   Minimum, :bash:`0`, means that tree will contain only what is needed to reconstruct\n        the program without changing it's meaning.\n\n*   The :bash:`--output` flag controls where the XML should be written. Defaults to standard output\n    when omitted.\n\nand remaining command-line options are exactly as defined in OFP 0.8.4.\n\nTo parse :bash:`some_fortran_file.f` and save XML output in :bash:`tree.xml` with minimum verbosity:\n\n.. code:: bash\n\n    java fortran.ofp.FrontEnd --class fortran.ofp.XMLPrinter \\\n      --output tree.xml --verbosity 0 some_fortran_file.f\n\nAnd to dump XML with maximum verbosity to console:\n\n.. code:: bash\n\n    java fortran.ofp.FrontEnd --class fortran.ofp.XMLPrinter \\\n      --verbosity 100 some_fortran_file.f\n\n\nAST specification\n-----------------\n\nRoot node is :xml:`<ofp>`, it has one subnode :xml:`<file>`.\n\nInside the :xml:`<file>`, there might be one or many of the following nodes:\n\n*   :xml:`<program>`\n*   :xml:`<subroutine>`\n*   :xml:`<module>`\n*   :xml:`<interface>`\n*   ...\n\nEach of which has :xml:`<header>` and :xml:`<body>`.\nAdditionally, :xml:`<module>` has :xml:`<members>`.\n\nThe contents of the header depend on the type of the node. For example, in case of subroutines,\nit contains list of parameters.\n\nIn the body, a special node :xml:`<specification>`, followed by a collection of statements can be found.\n\nThe :xml:`<specification>` contains a collection of :xml:`<declaraion>` nodes.\n\nAnd, each of the statements listed after the specification, can be either compound or simple.\n\nCompound statements, e.g.:\n\n*   :xml:`<if>`\n*   :xml:`<loop>`\n*   :xml:`<select>`\n*   ...\n\neach have :xml:`<header>` and :xml:`<body>`.\n\nIn the header of the :xml:`<loop>`, at least one :xml:`<index-variable>` is present.\nIt has :xml:`<lower-bound>`, :xml:`<upper-bound>`  and :xml:`<step>`.\n\nIn the header of :xml:`<if>`, an expression is present.\n\nExpression might be a single node like:\n\n*   :xml:`<name>`\n*   :xml:`<literal>`\n*   ...\n\nMore complex expressions are built from the :xml:`<operation>` nodes, each of which contains\na collection of :xml:`<operand>` and :xml:`<operator>` nodes. Each operand constains an expression.\n\nAll simple statements are using :xml:`<statement>` node, which wraps around nodes like:\n\n*   :xml:`<assignment>`\n*   :xml:`<call>`\n*   :xml:`<open>`\n*   :xml:`<close>`\n*   :xml:`<write>`\n*   :xml:`<format>`\n*   :xml:`<print>`\n*   :xml:`<allocate>`\n*   :xml:`<deallocate>`\n*   :xml:`<return>`\n*   :xml:`<stop>`\n*   :xml:`<continue>`\n*   :xml:`<cycle>`\n*   ...\n\nRemaining details of AST are not decided yet. For the time being, to see implementation details,\nplease take a look into `<src/fortran/ofp/XMLPrinter.java>`_.\n\n\nPython wrapper for the generator\n================================\n\n.. image:: https://img.shields.io/pypi/v/open-fortran-parser.svg\n    :target: https://pypi.python.org/pypi/open-fortran-parser\n    :alt: package version from PyPI\n\nUsing the wrapper should not require any special knowledge about the generator itself, other than\nknowing the abstract syntax tree (AST) specification.\n\n\ndependencies\n------------\n\nJava XML generator for OFP and all of its dependencies.\n\nPython version >= 3.6.\n\nPython libraries as specified in `<requirements.txt>`_.\n\nBuilding and running tests additionally requires packages listed in `<test_requirements.txt>`_.\n\n\nhow to build\n------------\n\n.. code:: bash\n\n    pip3 install -U -r test_requirements.txt\n    python3 setup.py sdist --formats=gztar,zip\n    python3 setup.py bdist_wheel\n\nhow to install\n--------------\n\nYou can simply install from PyPI:\n\n.. code:: bash\n\n    pip3 install open-fortran-parser\n\nOr using any of below commands, when installing from source:\n\n.. code:: bash\n\n    pip3 install .\n    pip3 install dist/<filename>.whl\n    pip3 install dist/<filename>.tar.gz\n    pip3 install dist/<filename>.zip\n\n\nhow to run\n----------\n\nThe wrapper can be used as a script, or as a library.\n\nWhen running any installed version, even if installed from source, dependencies are automatically\ninstalled together with the wrapper.\n\nBefore running from source (without installation), however, please follow \"how to build\" section\nfor Java implementation above.\nYou can make sure that dependencies are configured correctly by running:\n\n.. code:: bash\n\n    python3 -m open_fortran_parser --deps\n\nIf the depenencies changed since you first ran the wrapper from the source tree, you can cleanup\noutdated dependencies by executing:\n\n.. code:: bash\n\n    python3 -m open_fortran_parser --cleanup-deps\n\n\nas script\n~~~~~~~~~\n\n.. code:: bash\n\n    $ python3 -m open_fortran_parser -h\n    usage: open_fortran_parser [-h] [--version] [-v VERBOSITY]\n                               [--get-dependencies]\n                               [input] [output]\n\n    Python wrapper around XML generator for Open Fortran Parser\n\n    positional arguments:\n      input                 path to Fortran source code file (default: None)\n      output                writable path for where to store resulting XML,\n                            defaults to stdout if no path provided (default: None)\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --version             show program's version number and exit\n      -v VERBOSITY, --verbosity VERBOSITY\n                            level of verbosity, from 0 to 100 (default: 100)\n      --get-dependencies, --deps\n                            download dependencies and exit (default: False)\n\n    Copyright 2017 Mateusz Bysiek https://mbdevpl.github.io/, Apache License 2.0\n\n\nas library\n~~~~~~~~~~\n\n.. code:: python\n\n    from open_fortran_parser import parse\n\n    xml = parse('my_legacy_code.f', verbosity=0)\n\n\ntesting\n-------\n\n.. code:: bash\n\n    python3 -m pylint --load-plugins=pylint.extensions.mccabe --docstring-min-length 5 \\\n      --no-docstring-rgx \"^(test)?_|.*Tests$\" --unsafe-load-any-extension y \\\n      --output-format colorized  --reports y $(find . -name \"*.py\")\n    python3 -m coverage run --branch --source . -m unittest discover --verbose\n    python3 -m coverage report --show-missing\n    python3 -m coverage html\n\n\n",
    "docs_url": null,
    "download_url": "https://github.com/mbdevpl/open-fortran-parser-xml",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://mbdevpl.github.io/",
    "keywords": "abstract syntax tree,ast,parser,xml",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "open-fortran-parser",
    "platform": "",
    "project_url": "https://pypi.org/project/open-fortran-parser/",
    "release_url": "https://pypi.org/project/open-fortran-parser/0.4.0/",
    "requires_dist": [
      "wget"
    ],
    "requires_python": ">=3.6",
    "summary": "Python wrapper for XML output generator for Open Fortran Parser",
    "version": "0.4.0"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b5a4d85692149d6560fcc344388e3535",
          "sha256": "46c3df6317793aa8ff70fe9d44352c3d354636e25dc4320b8bd4b419e20b0995"
        },
        "downloads": -1,
        "filename": "open_fortran_parser-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5a4d85692149d6560fcc344388e3535",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 11391,
        "upload_time": "2017-06-06T11:02:19",
        "url": "https://files.pythonhosted.org/packages/61/7d/ae96882018032e8649c2ca2ddfe6e76828aa99956a3083df0aa89d6bd6eb/open_fortran_parser-0.1.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2ce2932bbe4fc3dbd9d6bf1c662aa367",
          "sha256": "9db840f672d440d7809dcaf6656ac05444a580901602a403c6e3d35b241af1b6"
        },
        "downloads": -1,
        "filename": "open-fortran-parser-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2ce2932bbe4fc3dbd9d6bf1c662aa367",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16882,
        "upload_time": "2017-06-06T11:02:52",
        "url": "https://files.pythonhosted.org/packages/e9/5c/7d93754a23709965c5933431408145d74f7fe74ab7dcbbb6c8591b06c1d4/open-fortran-parser-0.1.1.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e238259dccdc86848390318b74df2343",
          "sha256": "4188c28390e851a48364fdeaf4139f4a006b6f08d9cbde0c562fb1ef8fc7d935"
        },
        "downloads": -1,
        "filename": "open_fortran_parser-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e238259dccdc86848390318b74df2343",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 12776,
        "upload_time": "2017-09-06T08:15:57",
        "url": "https://files.pythonhosted.org/packages/36/12/9b19a58cebd5d994c08ee75f1efe46ed25f488f8bacc1348ec5b05cc27e7/open_fortran_parser-0.2.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6a9b785a5ad42d344f4008d8f39559af",
          "sha256": "fc7b11956a69b765acaeb23e51686c93252cd1f5a5e53514acb812ce654843c0"
        },
        "downloads": -1,
        "filename": "open-fortran-parser-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6a9b785a5ad42d344f4008d8f39559af",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24120,
        "upload_time": "2017-09-06T08:16:16",
        "url": "https://files.pythonhosted.org/packages/7c/01/f6e7215b22aa5223087bdc7bc4f51573f17855a1d5bc3a327bbc050ecbf3/open-fortran-parser-0.2.0.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dddb461bb6d5df5935ba1fd516227f58",
          "sha256": "cf0d26e77cd9188dc0899dfe36d0c3b61bfb3964998b7563783eae8757caf7a8"
        },
        "downloads": -1,
        "filename": "open_fortran_parser-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dddb461bb6d5df5935ba1fd516227f58",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 3285098,
        "upload_time": "2017-10-13T00:10:21",
        "url": "https://files.pythonhosted.org/packages/80/73/1ff8c36be3a4a5680aca929a65c1908fdbb52430d70fb7f62bcc2ab5f2e6/open_fortran_parser-0.3.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8f4c49a64480073b28d20e474e36aadd",
          "sha256": "2dc3177e5419dfe11cd79ad62bc01c48c66278c015b062f24ca155ac93f1a7a8"
        },
        "downloads": -1,
        "filename": "open-fortran-parser-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8f4c49a64480073b28d20e474e36aadd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3469832,
        "upload_time": "2017-10-13T00:10:40",
        "url": "https://files.pythonhosted.org/packages/d3/28/e63d8f46bd5a8f8e2a5c32f764bdf5bcdd28b33c64ebee7afc73f53ba3bb/open-fortran-parser-0.3.0.tar.gz"
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "216783b88259f9daf68fea4849d0e025",
          "sha256": "7b0d069d47579fedc987962bc399786f196a13ab5b32d2b1bcdbc82e318c47d8"
        },
        "downloads": -1,
        "filename": "open_fortran_parser-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "216783b88259f9daf68fea4849d0e025",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 3338165,
        "upload_time": "2017-12-10T08:25:16",
        "url": "https://files.pythonhosted.org/packages/f0/44/36e6469b76efeed7a3b402c3a661111837bfe1393d79e0020e98adba0f9a/open_fortran_parser-0.4.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e9665952f770b304043f2dd0d457ddc8",
          "sha256": "1dd32cfc06e78de105929cd51123aa71665cbad87e14d147700cb30c63b5aa2b"
        },
        "downloads": -1,
        "filename": "open-fortran-parser-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e9665952f770b304043f2dd0d457ddc8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3351639,
        "upload_time": "2017-12-10T08:25:35",
        "url": "https://files.pythonhosted.org/packages/2d/96/4267114b377bb262e2ce3dc52520b61b42f8db94ee0603986fb0fa45ef46/open-fortran-parser-0.4.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "216783b88259f9daf68fea4849d0e025",
        "sha256": "7b0d069d47579fedc987962bc399786f196a13ab5b32d2b1bcdbc82e318c47d8"
      },
      "downloads": -1,
      "filename": "open_fortran_parser-0.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "216783b88259f9daf68fea4849d0e025",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 3338165,
      "upload_time": "2017-12-10T08:25:16",
      "url": "https://files.pythonhosted.org/packages/f0/44/36e6469b76efeed7a3b402c3a661111837bfe1393d79e0020e98adba0f9a/open_fortran_parser-0.4.0-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "e9665952f770b304043f2dd0d457ddc8",
        "sha256": "1dd32cfc06e78de105929cd51123aa71665cbad87e14d147700cb30c63b5aa2b"
      },
      "downloads": -1,
      "filename": "open-fortran-parser-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e9665952f770b304043f2dd0d457ddc8",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3351639,
      "upload_time": "2017-12-10T08:25:35",
      "url": "https://files.pythonhosted.org/packages/2d/96/4267114b377bb262e2ce3dc52520b61b42f8db94ee0603986fb0fa45ef46/open-fortran-parser-0.4.0.tar.gz"
    }
  ]
}