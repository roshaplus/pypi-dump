{
  "info": {
    "author": "Mateusz Bysiek",
    "author_email": "mb@mbdev.pl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Education",
      "Topic :: Scientific/Engineering",
      "Topic :: Utilities"
    ],
    "description": ".. role:: bash(code)\n    :language: bash\n\n.. role:: java(code)\n    :language: java\n\n.. role:: python(code)\n    :language: python\n\n.. role:: xml(code)\n    :language: xml\n\n\n============================================\nXML output generator for Open Fortran Parser\n============================================\n\n.. image:: https://travis-ci.org/mbdevpl/open-fortran-parser-xml.svg?branch=master\n    :target: https://travis-ci.org/mbdevpl/open-fortran-parser-xml\n    :alt: build status from Travis CI\n\n.. image:: https://img.shields.io/pypi/l/open-fortran-parser.svg\n    :target: https://travis-ci.org/mbdevpl/open-fortran-parser-xml/blob/master/NOTICE\n    :alt: license\n\n\nImplementation has 2 parts: the XML generator written in Java, and Python wrapper for the generator.\n\nIn this file, first the Java implementation is described and then the Python wrapper.\n\n\n==========================\nJava XML generator for OFP\n==========================\n\nThis is an extension of Open Fortran Parser (OFP), which outputs abstract syntaxt tree (AST)\nof parsed Fortran file in XML format - to a file or to `System.out`.\n\n\n------------\ndependencies\n------------\n\n*   Open Fortran Parser 0.8.4-1\n\n    https://github.com/mbdevpl/open-fortran-parser/releases/tag/v0.8.4-1\n\n    This is a patched version of OFP. Specifically, `FortranParserActionPrint` class in OFP\n    could not be properly subclassed due to access levels of members of that class, so for example\n    writing my own printer would introduce a lot of code duplication. Patch resolves this,\n    without affecting any functionality.\n\n    The patch also resolves an issue when compiling with recent GCC versions.\n\n*   ANTRL 3.3 (dependency of Open Fortran Parser)\n\n    http://www.antlr3.org/download/\n\n*   Apache Commons CLI 1.4 (or later)\n\n    https://commons.apache.org/proper/commons-cli/download_cli.cgi\n\n\n------------\nhow to build\n------------\n\nGet dependencies, either manually, or using the provided script:\n\n.. code:: bash\n\n    python3 open_fortran_parser/dev_dependencies.py\n    export CLASSPATH=\"${CLASSPATH}:$(pwd)/lib/*\"\n\nBuild:\n\n.. code:: bash\n\n    ant\n    export CLASSPATH=\"${CLASSPATH}:$(pwd)/dist/*\"\n\nThis will create a `.jar` file in `dist` directory.\n\n\n----------\nhow to run\n----------\n\n.. code:: bash\n\n    java fortran.ofp.FrontEnd --class fortran.ofp.XMLPrinter \\\n      --output output.xml --verbosity 0~100 input.f\n\nwhere:\n\n*   The :bash:`--verbosity` flag controls verbosity of the parse tree. Defaluts to :bash:`100`\n    when omitted.\n\n    *   Maximum, :bash:`100`, means that all details picked up by Open Fortran Parser\n        will be preserved.\n\n    *   Minimum, :bash:`0`, means that tree will contain only what is needed to reconstruct\n        the program without changing it's meaning.\n\n*   The :bash:`--output` flag controls where the XML should be written. Defaults to standard output\n    when omitted.\n\nand remaining command-line options are exactly as defined in OFP 0.8.4.\n\nTo parse :bash:`some_fortran_file.f` and save XML output in :bash:`tree.xml` with minimum verbosity:\n\n.. code:: bash\n\n    java fortran.ofp.FrontEnd --class fortran.ofp.XMLPrinter \\\n      --output tree.xml --verbosity 0 some_fortran_file.f\n\nAnd to dump XML with maximum verbosity to console:\n\n.. code:: bash\n\n    java fortran.ofp.FrontEnd --class fortran.ofp.XMLPrinter \\\n      --verbosity 100 some_fortran_file.f\n\n\n-----------------\nAST specification\n-----------------\n\nIn progress.\n\nRoot node is :xml:`<ofp>`, it has one subnode :xml:`<file>`.\n\n\n================================\nPython wrapper for the generator\n================================\n\n.. image:: https://img.shields.io/pypi/v/open-fortran-parser.svg\n    :target: https://pypi.python.org/pypi/open-fortran-parser\n    :alt: package version from PyPI\n\nUsing the wrapper should not require any special knowledge about the generator itself, other than\nknowing the abstract syntax tree (AST) specification.\n\n\n------------\ndependencies\n------------\n\nJava Runtime Environment (JRE).\n\nPython version >= 3.6.\n\nPython libraries as specified in `<requirements.txt>`_.\n\nBuilding and running tests additionally requires packages listed in `<test_requirements.txt>`_.\n\n\n------------\nhow to build\n------------\n\n.. code:: bash\n\n  - pip3 install -U -r test_requirements.txt\n    python3 setup.py sdist --formats=gztar,zip\n    python3 setup.py bdist_wheel\n\n\n----------\nhow to run\n----------\n\nThe wrapper can be used as a script, or as a library.\n\nBefore running, however, please make sure that dependencies are configured correctly.\nYou can do that by either following the \"how to build\" section for Java implementation above,\nor by executing this:\n\n.. code:: bash\n\n    python3 open_fortran_parser/dependencies.py\n    export CLASSPATH=\"${CLASSPATH}:$(pwd)/lib/*\"\n\nas script\n~~~~~~~~~\n\n.. code:: bash\n\n    $ python3 -m open_fortran_parser -h\n    usage: open_fortran_parser [-h] [-v VERBOSITY] input [output]\n\n    Python wrapper around XML generator for Open Fortran Parser 0.8.4\n\n    positional arguments:\n      input                 path to Fortran source code file\n      output                writable path for where to store resulting XML,\n                            defaults to stdout if no path provided (default: None)\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -v VERBOSITY, --verbosity VERBOSITY\n                            level of verbosity, from 0 to 100 (default: 100)\n\n    Copyright 2017 Mateusz Bysiek https://mbdevpl.github.io/, Apache License 2.0\n\n\nas library\n~~~~~~~~~~\n\n.. code:: python\n\n    from open_fortran_parser import parse\n\n    xml = parse('my_legacy_code.f', verbosity=0)",
    "docs_url": null,
    "download_url": "https://github.com/mbdevpl/open-fortran-parser-xml",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://mbdevpl.github.io/",
    "keywords": "abstract syntax tree,ast,parser,xml",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "open-fortran-parser",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/open-fortran-parser/",
    "release_url": "https://pypi.org/project/open-fortran-parser/0.1.1/",
    "requires_python": ">=3.6",
    "summary": "Python wrapper for XML output generator for Open Fortran Parser",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b5a4d85692149d6560fcc344388e3535",
          "sha256": "46c3df6317793aa8ff70fe9d44352c3d354636e25dc4320b8bd4b419e20b0995"
        },
        "downloads": 0,
        "filename": "open_fortran_parser-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5a4d85692149d6560fcc344388e3535",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 11391,
        "upload_time": "2017-06-06T11:02:19",
        "url": "https://files.pythonhosted.org/packages/61/7d/ae96882018032e8649c2ca2ddfe6e76828aa99956a3083df0aa89d6bd6eb/open_fortran_parser-0.1.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2ce2932bbe4fc3dbd9d6bf1c662aa367",
          "sha256": "9db840f672d440d7809dcaf6656ac05444a580901602a403c6e3d35b241af1b6"
        },
        "downloads": 0,
        "filename": "open-fortran-parser-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2ce2932bbe4fc3dbd9d6bf1c662aa367",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16882,
        "upload_time": "2017-06-06T11:02:52",
        "url": "https://files.pythonhosted.org/packages/e9/5c/7d93754a23709965c5933431408145d74f7fe74ab7dcbbb6c8591b06c1d4/open-fortran-parser-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b5a4d85692149d6560fcc344388e3535",
        "sha256": "46c3df6317793aa8ff70fe9d44352c3d354636e25dc4320b8bd4b419e20b0995"
      },
      "downloads": 0,
      "filename": "open_fortran_parser-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b5a4d85692149d6560fcc344388e3535",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 11391,
      "upload_time": "2017-06-06T11:02:19",
      "url": "https://files.pythonhosted.org/packages/61/7d/ae96882018032e8649c2ca2ddfe6e76828aa99956a3083df0aa89d6bd6eb/open_fortran_parser-0.1.1-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "2ce2932bbe4fc3dbd9d6bf1c662aa367",
        "sha256": "9db840f672d440d7809dcaf6656ac05444a580901602a403c6e3d35b241af1b6"
      },
      "downloads": 0,
      "filename": "open-fortran-parser-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2ce2932bbe4fc3dbd9d6bf1c662aa367",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 16882,
      "upload_time": "2017-06-06T11:02:52",
      "url": "https://files.pythonhosted.org/packages/e9/5c/7d93754a23709965c5933431408145d74f7fe74ab7dcbbb6c8591b06c1d4/open-fortran-parser-0.1.1.tar.gz"
    }
  ]
}