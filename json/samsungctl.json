{
  "info": {
    "author": "Lauri Niskanen",
    "author_email": "ape@ape3000.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Home Automation"
    ],
    "description": "samsungctl\n==========\nsamsungctl is a library and a command line tool for remote controlling Samsung\ntelevisions via a TCP/IP connection. It currently supports both pre-2016 TVs\nas well most of the modern Tizen-OS TVs with Ethernet or Wi-Fi connectivity.\n\nDependencies\n------------\n\n- `Python 3`\n- `websocket-client` (optional, for 2016+ TVs)\n\nInstallation\n------------\nsamsungctl can be installed using [pip](https://pip.pypa.io/):\n\n\t# pip install samsungctl\n\nAlternatively you can clone the Git repository and run:\n\n\t# python setup.py install\n\nIt's possible to use the command line tool without installation:\n\n\t$ python -m samsungctl\n\nCommand line usage\n------------------\n\nYou can use `samsungctl` command to send keys to a TV:\n\n\t$ samsungctl --host <host> [options] <key> [key ...]\n\n`host` is the hostname or IP address of the TV. `key` is a key code, e.g.\n`KEY_VOLDOWN`. See [Key codes](#key-codes).\n\nThere is also an interactive mode (ncurses) for sending the key presses:\n\n\t$ samsungctl --host <host> [options] --interactive\n\nUse `samsungctl --help` for more information about the command line arguments:\n\n```\nusage: samsungctl [-h] [--version] [-v] [-q] [-i] [--host HOST] [--port PORT]\n                  [--name NAME] [--description DESC] [--id ID]\n                  [--timeout TIMEOUT]\n                  [key [key ...]]\n\nRemote control Samsung televisions via TCP/IP connection\n\npositional arguments:\n  key                 keys to be sent (e.g. KEY_VOLDOWN)\n\noptional arguments:\n  -h, --help          show this help message and exit\n  --version           show program's version number and exit\n  -v, --verbose       increase output verbosity\n  -q, --quiet         suppress non-fatal output\n  -i, --interactive   interactive control\n  --host HOST         TV hostname or IP address\n  --port PORT         TV port number (TCP)\n  --method METHOD     Connection method (legacy or websocket)\n  --name NAME         remote control name\n  --description DESC  remote control description\n  --id ID             remote control id\n  --timeout TIMEOUT   socket timeout in seconds (0 = no timeout)\n\nE.g. samsungctl --host 192.168.0.10 --name myremote KEY_VOLDOWN\n```\n\nThe settings can be loaded from a configuration file. The file is searched from\n`$XDG_CONFIG_HOME/samsungctl.conf`, `~/.config/samsungctl.conf`, and\n`/etc/samsungctl.conf` in this order. A simple default configuration is bundled\nwith the source as [samsungctl.conf](samsungctl.conf).\n\nLibrary usage\n-------------\n\nsamsungctl can be imported as a Python 3 library:\n\n```python\nimport samsungctl\n```\n\nA context managed remote controller object of class `Remote` can be constructed\nusing the `with` statement:\n\n```python\nwith samsungctl.Remote(config) as remote:\n    # Use the remote object\n```\n\nThe constructor takes a configuration dictionary as a parameter. All\nconfiguration items must be specified.\n\n| Key         | Type   | Description                                 |\n| ----------- | ------ | -----------------------------------------   |\n| host        | string | Hostname or IP address of the TV.           |\n| port        | int    | TCP port number. (Default: `55000`)         |\n| method      | string | Connection method (\"legacy\" or \"websocket\") |\n| name        | string | Name of the remote controller.              |\n| description | string | Remote controller description.              |\n| id          | string | Additional remote controller ID.            |\n| timeout     | int    | Timeout in seconds. `0` means no timeout.   |\n\nThe `Remote` object is very simple and you only need the `control(key)` method.\nThe only parameter is a string naming the key to be sent (e.g.\n`\"KEY_VOLDOWN\"`). See [Key codes](#key-codes). You can call `control` multiple\ntimes using the same `Remote` object. The connection is automatically closed\nwhen exiting the `with` statement.\n\nWhen something goes wrong you will receive an exception:\n\n| Exception         | Description                             |\n| ----------------- | --------------------------------------- |\n| AccessDenied      | The TV does not allow you to send keys. |\n| ConnectionClosed  | The connection was closed.              |\n| UnhandledResponse | An unexpected response was received.    |\n| socket.timeout    | The connection timed out.               |\n\n### Example program\n\nThis simple program opens and closes the menu a few times.\n\n```python\n#!/usr/bin/env python3\n\nimport samsungctl\nimport time\n\nconfig = {\n    \"name\": \"samsungctl\",\n    \"description\": \"PC\",\n    \"id\": \"\",\n    \"host\": \"192.168.0.10\",\n    \"port\": 55000,\n    \"method\": \"legacy\",\n    \"timeout\": 0,\n}\n\nwith samsungctl.Remote(config) as remote:\n    for i in range(10):\n        remote.control(\"KEY_MENU\")\n        time.sleep(0.5)\n```\n\nKey codes\n---------\n\nThe list of accepted keys may vary depending on the TV model, but the following\nlist has some common key codes and their descriptions.\n\n| Key code          | Description  |\n| ----------------- | ------------ |\n| KEY_POWEROFF      | Power off    |\n| KEY_UP            | Up           |\n| KEY_DOWN          | Down         |\n| KEY_LEFT          | Left         |\n| KEY_RIGHT         | Right        |\n| KEY_CHUP          | P Up         |\n| KEY_CHDOWN        | P Down       |\n| KEY_ENTER         | Enter        |\n| KEY_RETURN        | Return       |\n| KEY_CH_LIST       | Channel List |\n| KEY_MENU          | Menu         |\n| KEY_SOURCE        | Source       |\n| KEY_GUIDE         | Guide        |\n| KEY_TOOLS         | Tools        |\n| KEY_INFO          | Info         |\n| KEY_RED           | A / Red      |\n| KEY_GREEN         | B / Green    |\n| KEY_YELLOW        | C / Yellow   |\n| KEY_BLUE          | D / Blue     |\n| KEY_PANNEL_CHDOWN | 3D           |\n| KEY_VOLUP         | Volume Up    |\n| KEY_VOLDOWN       | Volume Down  |\n| KEY_MUTE          | Mute         |\n| KEY_0             | 0            |\n| KEY_1             | 1            |\n| KEY_2             | 2            |\n| KEY_3             | 3            |\n| KEY_4             | 4            |\n| KEY_5             | 5            |\n| KEY_6             | 6            |\n| KEY_7             | 7            |\n| KEY_8             | 8            |\n| KEY_9             | 9            |\n| KEY_DTV           | TV Source    |\n| KEY_HDMI          | HDMI Source  |\n\nPlease note that some codes are different on the 2016+ TVs. For example, `KEY_POWEROFF` is `KEY_POWER` on the newer TVs.\n\nReferences\n----------\nI did not reverse engineer the control protocol myself and samsungctl is not\nthe only implementation. Here is the list of things that inspired samsungctl.\n\n- http://sc0ty.pl/2012/02/samsung-tv-network-remote-control-protocol/\n- https://gist.github.com/danielfaust/998441\n- https://github.com/Bntdumas/SamsungIPRemote\n- https://github.com/kyleaa/homebridge-samsungtv2016",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Ape/samsungctl",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "samsungctl",
    "platform": "",
    "project_url": "https://pypi.org/project/samsungctl/",
    "release_url": "https://pypi.org/project/samsungctl/0.6.0/",
    "requires_python": "",
    "summary": "Remote control Samsung televisions via TCP/IP connection",
    "version": "0.6.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "acbffbfe73407428c985a62aecf2587c",
          "sha256": "59c78d9ace6ac9495d02f10121177cafd2b4ea76036616e1820f6f331ad5f3d1"
        },
        "downloads": 1873,
        "filename": "samsungctl-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "acbffbfe73407428c985a62aecf2587c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2947,
        "upload_time": "2014-03-14T09:56:58",
        "url": "https://files.pythonhosted.org/packages/50/78/3cd11b7f7b748b9b2827e30c79ffdc81f928ea734a802d497cef80eb5050/samsungctl-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cf6ceddff8a990883529455ad84eef26",
          "sha256": "8bf6c1918c874eda401c57aee25bef1a3d4f440bbafc894992495479a1162eda"
        },
        "downloads": 1993,
        "filename": "samsungctl-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cf6ceddff8a990883529455ad84eef26",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2975,
        "upload_time": "2014-03-14T21:52:00",
        "url": "https://files.pythonhosted.org/packages/34/39/ad94af0f1be381be4c18659b85286699e52645faa3be932cfd915092b762/samsungctl-0.1.1.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a46b8fb1be648f5867898af65be53e46",
          "sha256": "a6c253d4f228f2efe5e2bb7dae76e02aad2644cdc020ac4688d2e59d4e42d7eb"
        },
        "downloads": 1699,
        "filename": "samsungctl-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a46b8fb1be648f5867898af65be53e46",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3414,
        "upload_time": "2014-03-19T18:37:11",
        "url": "https://files.pythonhosted.org/packages/c0/90/a019b6bdf03adb84c312158466a5b60de71a76281ab31885283155d1ef63/samsungctl-0.2.0.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "19311d9c3f0dcd12308fff35197e8965",
          "sha256": "6fe7de40c029afa215ceddf5cd13d74e3de0a9902101bf9958629bc752ca4af8"
        },
        "downloads": 2498,
        "filename": "samsungctl-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "19311d9c3f0dcd12308fff35197e8965",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4055,
        "upload_time": "2014-03-21T17:12:13",
        "url": "https://files.pythonhosted.org/packages/60/95/30a4b5e1edea7654ba6b083be78cab64aff190914eb2a355b7e5bcef0c75/samsungctl-0.3.0.tar.gz"
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bfb2817d138d223d125b1f13c622a046",
          "sha256": "76606e24468cbcd10a364344c1ad79c753196c551552f96e654bde6d817866bb"
        },
        "downloads": 388,
        "filename": "samsungctl-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bfb2817d138d223d125b1f13c622a046",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4570,
        "upload_time": "2016-01-06T10:35:43",
        "url": "https://files.pythonhosted.org/packages/1a/f2/25fe71bc0ca096bd3362d939e3b771470df320305733d0c674e5e8c3e4ef/samsungctl-0.4.0.tar.gz"
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "addd6426712c32baf2f3beb6f03a984c",
          "sha256": "b560384434d8990dae97227884bf97b44b43e4238e66c8ae9f7e24c8740772d2"
        },
        "downloads": 360,
        "filename": "samsungctl-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "addd6426712c32baf2f3beb6f03a984c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4933,
        "upload_time": "2016-01-07T12:05:57",
        "url": "https://files.pythonhosted.org/packages/2d/f2/31348c017a322322ddaef11b8079451db86f60941c7936e0e4566670f4c7/samsungctl-0.5.0.tar.gz"
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8e644739ff9c9968bfd4124eb2602df0",
          "sha256": "1448cb203ed037e624b5bc31942d9b449670d9f88c849c08d866f76d52f4117f"
        },
        "downloads": 2768,
        "filename": "samsungctl-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8e644739ff9c9968bfd4124eb2602df0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5870,
        "upload_time": "2016-01-20T13:43:30",
        "url": "https://files.pythonhosted.org/packages/88/ad/7e0e701cc46b0caef4d361a4d9524d2268b4bccc0ea71967a2473c2ade89/samsungctl-0.5.1.tar.gz"
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fea2e755b3c307d7a8edecc1b2822d22",
          "sha256": "59d4666baab4446879710779604b6c01620a3c107f719f6bcaa5c46455456fd7"
        },
        "downloads": 559,
        "filename": "samsungctl-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fea2e755b3c307d7a8edecc1b2822d22",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8628,
        "upload_time": "2016-12-31T08:29:29",
        "url": "https://files.pythonhosted.org/packages/09/13/9d6bcf85cd142dd35ca11de6fa32b773e825b2a1b7ab056e9259af40d426/samsungctl-0.6.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fea2e755b3c307d7a8edecc1b2822d22",
        "sha256": "59d4666baab4446879710779604b6c01620a3c107f719f6bcaa5c46455456fd7"
      },
      "downloads": 559,
      "filename": "samsungctl-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fea2e755b3c307d7a8edecc1b2822d22",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8628,
      "upload_time": "2016-12-31T08:29:29",
      "url": "https://files.pythonhosted.org/packages/09/13/9d6bcf85cd142dd35ca11de6fa32b773e825b2a1b7ab056e9259af40d426/samsungctl-0.6.0.tar.gz"
    }
  ]
}