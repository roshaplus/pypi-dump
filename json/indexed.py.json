{
  "info": {
    "author": "Niklas Fiekas",
    "author_email": "niklas.fiekas@tu-clausthal.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "indexed.py: a dictionary that is indexed by insertion order\n===========================================================\n\n.. image:: https://travis-ci.org/niklasf/indexed.py.png?branch=master\n    :target: https://travis-ci.org/niklasf/indexed.py\n    :alt: Build status\n\nIntroduction\n------------\n\n``indexed.IndexedOrderedDict`` is fully compatible with\n``collections.OrderedDict`` and can be used as a drop in replacement.\nThe main difference is that key, value and item views support accessing\nelements by their index.\n\n::\n\n    d = indexed.IndexedOrderedDict()\n    d[\"first-key\"] = \"first-value\"\n    d[\"second-key\"] = \"second-value\"\n    d[\"third-key\"] = \"third-value\"\n\n    values = d.values()\n    assert values[2] == \"third-value\"\n\n    assert d.keys().index(\"second-key\") == 1\n\nFeatures\n--------\n\n* Can be used with both Python 2 and 3. Provides ``keysview()``,\n  ``valuesview()`` and ``itemsview()`` which were removed from Python 3 for\n  compability.\n\n* Access keys, values and items by index, e.g. ``d.keys()[5]``.\n\n* Find the index of a key, e.g. ``d.keys().index(\"key\")``.\n\nExcluding those additions the API is the same as the API of\n``collections.OrderedDict()``. Including:\n\n* Initializing, setting, getting and deleting items\n\n* Iterating forwards and in reverse\n\n* ``d.clear()``\n\n* ``d.popitem(last=True)``\n\n* ``d.move_to_end(key, last=True)``\n\n* ``d.keys()``, ``d.values()``, ``d.items()``\n\n* ``d.pop(key[, default])``\n\n* ``d.setdefault(key, default=None)``\n\n* String representation\n\n* Pickling\n\n* Copying\n\n* Creating from keys\n\n* Comparing order sensitively with other ordered dictionaries or order\n  insensitively with standard mappings\n\nInstalling\n----------\nThe only dependencies are Python >= 2.7 or Python >= 3.0.\n\n* With pip:\n\n  ::\n\n      sudo pip install indexed.py\n\n* With easy_install:\n\n  ::\n\n      sudo easy_install indexed.py\n\n* From current source code:\n\n  ::\n\n      python setup.py build\n      sudo python setup.py install\n\nPerformance\n-----------\n\nPerformance is practically on the same order of magnitude as the built in\n``collections.OrderedDict``.\n\n================= ========== ================== ======== ======================\nd                 ``collections.OrderedDict``   ``indexed.IndexedOrderedDict``\n----------------- ----------------------------- -------------------------------\nOperation         Avergage   Worst case         Average  Worst case\n================= ========== ================== ======== ======================\nd.copy()          O(n)       O(n)               O(n)     O(n)  \n----------------- ---------- ------------------ -------- ----------------------\nd[key]            O(1)       O(n)               O(1)     O(n)\n----------------- ---------- ------------------ -------- ----------------------\nd[key] = value    O(1)       O(n) [#a]_         O(1)     O(n) [#a]_\n----------------- ---------- ------------------ -------- ----------------------\ndel d[key]        **O(1)**   O(n)               O(n)     O(n)\n----------------- ---------- ------------------ -------- ----------------------\nd.keys()[i]       O(n) [#k]_ O(n) [#k]_         **O(1)** **O(1)**\n----------------- ---------- ------------------ -------- ----------------------\nd.values()[i]     O(n) [#v]_ O(n) [#v]_         **O(1)** O(n)\n----------------- ---------- ------------------ -------- ----------------------\nd.items()[i]      O(n) [#v]_ O(n) [#v]_         **O(1)** O(n)\n----------------- ---------- ------------------ -------- ----------------------\nd.keys().index(x) O(n) [#v]_ O(n) [#v]_         O(n)     O(n)\n================= ========== ================== ======== ======================\n\n.. [#a] These are amortized_ worst case runtimes.\n.. [#k] This does not work in Python 3 because ``colections.KeysView`` is not\n        indexable. One of the theoretically best work arounds is\n        ``next(itertools.islice(d.keys(), i, i + 1))``.\n.. [#v] Assuming the theoretically best possible workaround.\n\nLicense\n-------\nindexed.py is licensed under the GPL3. See the LICENSE file for full copyright\nand license information.\n\n.. _amortized: http://en.wikipedia.org/wiki/Amortized_analysis",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/niklasf/indexed.py",
    "keywords": null,
    "license": "GPL3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "indexed.py",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/indexed.py/",
    "release_url": "https://pypi.org/project/indexed.py/0.0.1/",
    "requires_python": null,
    "summary": "A dictionary that is indexed by insertion order.",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "47f0517b630018bed6dfe44ba50a9873",
          "sha256": "10e1e58f4a6e29192e0a7fe1a4528e9c3fc1d212440cbdbf9fb50662621e375a"
        },
        "downloads": 2730,
        "filename": "indexed.py-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "47f0517b630018bed6dfe44ba50a9873",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16869,
        "upload_time": "2013-09-06T20:02:15",
        "url": "https://files.pythonhosted.org/packages/eb/50/5dbda519b536d1d6ae4e740c36b74c15a4b6ff0a5fec75e19d6a1b78276a/indexed.py-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "47f0517b630018bed6dfe44ba50a9873",
        "sha256": "10e1e58f4a6e29192e0a7fe1a4528e9c3fc1d212440cbdbf9fb50662621e375a"
      },
      "downloads": 2730,
      "filename": "indexed.py-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "47f0517b630018bed6dfe44ba50a9873",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 16869,
      "upload_time": "2013-09-06T20:02:15",
      "url": "https://files.pythonhosted.org/packages/eb/50/5dbda519b536d1d6ae4e740c36b74c15a4b6ff0a5fec75e19d6a1b78276a/indexed.py-0.0.1.tar.gz"
    }
  ]
}