{
  "info": {
    "author": "Werner Robitza",
    "author_email": "werner.robitza@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Multimedia :: Video"
    ],
    "description": "h26x-extractor\n==============\n\nAuthor: Werner Robitza\n\nExtracts NAL units from H.264 bitstreams and decodes their type and\ncontent, if supported.\n\n**Note:** This is not a replacement for a proper tool like\n`h264bitstream <https://github.com/aizvorski/h264bitstream>`__.\n``h26x-extractor`` is not fast and not robust, but rather a playground\nfor parsing bitstreams. Use with caution!\n\nInstallation\n============\n\nPython 2.7:\n\n::\n\n    pip install h26x-extractor\n\nPython 3.x:\n\n::\n\n    pip3 install h26x-extractor\n\nStatus\n======\n\nCurrently supported:\n\n-  Parsing of H.264 bitstreams\n-  Parsing of NALU\n-  Parsing of AUD\n-  Parsing of CodedSliceIDR\n-  Parsing of CodedSliceNonIDR\n-  Parsing of SPS\n-  Parsing of PPS\n\nCurrently planned:\n\n-  Parsing of SEI\n-  Parsing of VUI\n-  Parsing of H.265 bitstreams\n\nUsage\n=====\n\n::\n\n    h26x-extractor [options] <input-file>...\n\nYou can pass the ``-v`` flag to enable verbose output, e.g. the\nfollowing. You will get, for each NAL unit:\n\n-  The bye position range\n-  The offset from the start of the stream\n-  The overall length including start code\n-  The type (also translated in plaintext)\n-  Its content in raw bytes, encoded as hex\n-  Its RBSP content\n-  A table with its content decoded, if supported\n\nExample:\n\n::\n\n    NALU bytepos:   [0, 28]\n    NALU offset:    0 Bytes\n    NALU length:    29 Bytes (including start code)\n    NALU type:      7 (Sequence parameter set)\n    NALU bytes:     0x0000000167f4000d919b28283f6022000003000200000300641e28532c\n    NALU RBSP:      0xf4000d919b28283f602200000002000000641e28532c\n\n    SPS (payload size: 22.0 Bytes)\n    +--------------------------------------+---------+\n    | field                                | value   |\n    +======================================+=========+\n    | constraint_set0_flag                 | 0       |\n    +--------------------------------------+---------+\n    | constraint_set1_flag                 | 0       |\n    +--------------------------------------+---------+\n    ....\n\nProgrammatic usage\n==================\n\nYou can also use this library in your code, e.g.:\n\n::\n\n    from h26x_extractor.h26x_parser import H26xParser\n\n    H26xParser.set_callback(\"nalu\", do_something)\n    H26xParser.parse()\n    def do_something(bytes):\n      # do something with the NALU bytes\n\nValid callbacks are:\n\n-  ``sps``\n-  ``pps``\n-  ``slice``\n-  ``aud``\n-  ``nalu``\n\nRaw data for all callbacks includes the RBSP.\n\nYou can also call the ``nalutypes`` classes to decode the individual\nfields, e.g. ``nalutypes.SPS``.\n\nLicense\n=======\n\nThe MIT License (MIT)\n\nCopyright (c) 2017 Werner Robitza\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nHistory\n=======\n\n0.2 (2017-08-02)\n----------------\n\n-  Parse RBSP syntax correctly\n-  Code style improvements\n\n0.1 (2017-07-17)\n----------------\n\n-  Initial release\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/slhck/h26x-extractor",
    "keywords": "video",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "h26x-extractor",
    "platform": "",
    "project_url": "https://pypi.org/project/h26x-extractor/",
    "release_url": "https://pypi.org/project/h26x-extractor/0.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Extract NAL units from H.264 bitstreams",
    "version": "0.2"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bbd6fa428ef56694e3e15ef5c50b3715",
          "sha256": "e48707a6fa0797910946e7d3e2d8d9d097aaed1848ac94982ee641904ff2bc76"
        },
        "downloads": 0,
        "filename": "h26x-extractor-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bbd6fa428ef56694e3e15ef5c50b3715",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9063,
        "upload_time": "2017-07-17T09:12:11",
        "url": "https://files.pythonhosted.org/packages/28/b9/8ecfdc79b5b6d7396113fcf1bb02ccf08812243af4aed77e7dd0ef3557ab/h26x-extractor-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bc7e141238cd8939afa3794a457103be",
          "sha256": "61621ff184c7e22566532cf045429e3baf68a9b2d5c7b096725a7f4416d3607a"
        },
        "downloads": 0,
        "filename": "h26x-extractor-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bc7e141238cd8939afa3794a457103be",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9246,
        "upload_time": "2017-08-02T13:49:59",
        "url": "https://files.pythonhosted.org/packages/c8/05/d5d43ce64d61a14b99482db4fc3c9a8d459cdd9fc2e8fff00466be89de2e/h26x-extractor-0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "bc7e141238cd8939afa3794a457103be",
        "sha256": "61621ff184c7e22566532cf045429e3baf68a9b2d5c7b096725a7f4416d3607a"
      },
      "downloads": 0,
      "filename": "h26x-extractor-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "bc7e141238cd8939afa3794a457103be",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9246,
      "upload_time": "2017-08-02T13:49:59",
      "url": "https://files.pythonhosted.org/packages/c8/05/d5d43ce64d61a14b99482db4fc3c9a8d459cdd9fc2e8fff00466be89de2e/h26x-extractor-0.2.tar.gz"
    }
  ]
}