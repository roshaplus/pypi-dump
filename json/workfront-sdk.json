{
  "info": {
    "author": "Bridge",
    "author_email": "info@bridgecorp.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Workfront for Python (SDK)\n==========================\n.. image:: https://img.shields.io/pypi/v/workfront-sdk.svg\n    :target: https://pypi.python.org/pypi/workfront-sdk\n    :alt: [Latest Release Version]\n\nSDK for managing Workfront tasks\n\nInstallation\n------------\n\nInstall via ``pip``:\n\n.. code-block:: console\n\n  $ pip install workfront-sdk\n\nInstall from source:\n\n.. code-block:: console\n\n  $ git clone git://github.com/BridgeMarketing/workfront-sdk.git\n  $ cd workfront-sdk\n  $ python setup.py install\n\n\nExamples\n--------\n\nHow to create a Workfront Service object\n----------------------------------------\n\nCreate the Workfront object and login:\n\n.. code-block:: pycon\n\n  >>> from workfront import Workfront\n  >>> wf = Workfront(\"ay.caramba@thebridgecorp.com\", \"1234wfpass\")\n  >>> wf.login()\n\nThen you can use it.\n\nHow to create a user object\n---------------------------\n\nWith a Workfront service object, you can create a user by email or by id:\n\n.. code-block:: pycon\n\n  >>> from workfront.objects import user\n  >>> user_by_email = user.from_email(wf, \"ay.caramba@thebridgecorp.com\")\n  >>> user_by_id = user.from_id(wf, \"<WORKFRONT_USER_ID>\")\n\nYou can then access some fields of the users:\n\n.. code-block:: pycon\n\n  >>> print user_by_email.wf_id # print the workfront id\n  >>> print user_by_email.name # print the name of the user\n  >>> print user_by_email.emailAddr # print the email of the user\n\nHow to create and interact with a Task\n--------------------------------------\n\nCreate the task by it's workfront id and giving a Workfront service\n\n.. code-block:: pycon\n\n  >>> from workfront.objects.task import WFTask\n  >>> task = WFTask(wf, \"<WF_TASK_ID>\")\n\nChange the status of a task\n---------------------------\n\n.. code-block:: pycon\n\n  >>> from workfront.objects.status import WFTaskStatus\n  >>> task.set_status(WFTaskStatus.in_progress)\n\nAssign a task to a different user\n---------------------------------\n\nOnce you have a WF user and a task you can:\n\n.. code-block:: pycon\n\n  >>> from workfront.objects import user\n  >>> from workfront.objects.task import WFTask\n  >>> user_by_email = user.from_email(wf, \"ay.caramba@thebridgecorp.com\")\n  >>> task = WFTask(wf, \"<WF_TASK_ID>\")\n  >>> task.assign_to_user(user_by_email)\n\nGet and set custom fields\n-------------------------\n\nYou can use the methods **set_param_values** and **get_param_values** to modify and access task custom fields.\n\n.. code-block:: pycon\n\n  >>> task = WFTask(wf, \"<WF_TASK_ID>\")\n  >>> task.get_param_values()\n  >>> {\"custom_field\": \"value\", \"list_field\": [\"value1\", \"value2\"]}\n  >>> task.set_param_values({\"custom_field\": \"other_value\"})\n  >>> task.get_param_values()\n  >>> {\"custom_field\": \"other_value\", \"list_field\": [\"value1\", \"value2\"]}\n\nHow to use projects\n-------------------\n\nYou can load a project from the id, and access the template id:\n\n.. code-block:: pycon\n\n  >>> from workfront.objects import project\n  >>> p = project.WFProject(wf, \"<WF_PROJECT_ID>\")\n  >>> project_template_id = p.get_template_id()\n\nWith the template id, you can create another project:\n\n.. code-block:: pycon\n\n  >>> from workfront.objects import project\n  >>> new_project = project.crt_from_template(wf, project_template_id, \"NEW PROJECT NAME\")\n  >>> new_project.wf_id\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/BridgeMarketing/workfront-sdk",
    "keywords": "",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "workfront-sdk",
    "platform": "",
    "project_url": "https://pypi.org/project/workfront-sdk/",
    "release_url": "https://pypi.org/project/workfront-sdk/0.7/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Workfront for Python (SDK)",
    "version": "0.7"
  },
  "releases": {
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ab8eff04b1421b208a890c32579016b7",
          "sha256": "0f19312bce1df0253245083bb70800539b82b7df204388245a68d1a93737b291"
        },
        "downloads": -1,
        "filename": "workfront-sdk-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ab8eff04b1421b208a890c32579016b7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7394,
        "upload_time": "2018-01-10T17:26:27",
        "url": "https://files.pythonhosted.org/packages/89/0d/88ca226f183179f9cee153789ce9716af85a648e1e57f4c4a75501fb139d/workfront-sdk-0.4.tar.gz"
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f8e2fd324ea38f30ae3d0e73e3438038",
          "sha256": "5c37a55e8287930d1f7a32113fb14d1f90ad51350904ef46aef1e5afede085b9"
        },
        "downloads": -1,
        "filename": "workfront-sdk-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f8e2fd324ea38f30ae3d0e73e3438038",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6821,
        "upload_time": "2018-01-17T18:47:24",
        "url": "https://files.pythonhosted.org/packages/30/9e/28f97c2cc13fb07b5872c620273594757699c81113bb20dac9ec02b053f0/workfront-sdk-0.5.tar.gz"
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7240e4d0e4574ac1fb1927934e87cfbb",
          "sha256": "27b8e8aebc05f53dcb86f070bfbad654338b81c14994b0d4c2c845535b856ea2"
        },
        "downloads": -1,
        "filename": "workfront-sdk-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "7240e4d0e4574ac1fb1927934e87cfbb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6846,
        "upload_time": "2018-01-18T13:00:06",
        "url": "https://files.pythonhosted.org/packages/ac/b0/9194170ffeed3b4c9e83904f80cb6e50db9d64087d2278b503f69f373ad9/workfront-sdk-0.6.tar.gz"
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "35dadd7a40aa40763ecc1fc980c40d56",
          "sha256": "1fd82c180b42e2c4a2f2d41ca1c1328751c0123f9bf85fdd76fe925513c1699c"
        },
        "downloads": -1,
        "filename": "workfront-sdk-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "35dadd7a40aa40763ecc1fc980c40d56",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7061,
        "upload_time": "2018-02-06T19:45:38",
        "url": "https://files.pythonhosted.org/packages/0f/7b/60795367abec071c84459c2d9789aa1a5e1a054162613db403dccbc36f9d/workfront-sdk-0.7.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "35dadd7a40aa40763ecc1fc980c40d56",
        "sha256": "1fd82c180b42e2c4a2f2d41ca1c1328751c0123f9bf85fdd76fe925513c1699c"
      },
      "downloads": -1,
      "filename": "workfront-sdk-0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "35dadd7a40aa40763ecc1fc980c40d56",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7061,
      "upload_time": "2018-02-06T19:45:38",
      "url": "https://files.pythonhosted.org/packages/0f/7b/60795367abec071c84459c2d9789aa1a5e1a054162613db403dccbc36f9d/workfront-sdk-0.7.tar.gz"
    }
  ]
}