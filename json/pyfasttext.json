{
  "info": {
    "author": "Vincent Rasneur",
    "author_email": "vrasneur@free.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: C++",
      "Programming Language :: Cython",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "pyfasttext\n==========\n\nYet another Python binding for\n`fastText <https://github.com/facebookresearch/fastText>`__.\n\nThe binding supports Python 2.7 and Python 3. It requires Cython.\n\n``pyfasttext`` has been tested successfully on Linux and Mac OS X.\n\nTable of Contents\n=================\n\n-  `pyfasttext <#pyfasttext>`__\n\n   -  `Installation <#installation>`__\n\n      -  `Cloning <#cloning>`__\n      -  `Requirements for Python 2.7 <#requirements-for-python-27>`__\n      -  `Building and installing <#building-and-installing>`__\n\n   -  `Usage <#usage>`__\n\n      -  `How to load the library? <#how-to-load-the-library>`__\n      -  `How to load an existing\n         model? <#how-to-load-an-existing-model>`__\n      -  `Word representation\n         learning <#word-representation-learning>`__\n\n         -  `Training using Skipgram <#training-using-skipgram>`__\n         -  `Training using CBoW <#training-using-cbow>`__\n         -  `Vector for a given word <#vector-for-a-given-word>`__\n\n      -  `Get all the word vectors in a\n         model <#get-all-the-word-vectors-in-a-model>`__\n      -  `Get the number of words in the\n         model <#get-the-number-of-words-in-the-model>`__\n\n         -  `Word similarity <#word-similarity>`__\n\n      -  `Most similar words <#most-similar-words>`__\n\n         -  `Analogies <#analogies>`__\n\n      -  `Text classification <#text-classification>`__\n\n         -  `Supervised learning <#supervised-learning>`__\n         -  `Get all the labels <#get-all-the-labels>`__\n         -  `Get the number of labels <#get-the-number-of-labels>`__\n         -  `Prediction <#prediction>`__\n         -  `Labels and probabilities <#labels-and-probabilities>`__\n\n            -  `Normalized probabilities <#normalized-probabilities>`__\n\n         -  `Labels only <#labels-only>`__\n         -  `Quantization <#quantization>`__\n\n      -  `Misc utilities <#misc-utilities>`__\n\n         -  `Show the model\n            (hyper)parameters <#show-the-model-hyperparameters>`__\n         -  `Extract labels or classes from a\n            dataset <#extract-labels-or-classes-from-a-dataset>`__\n         -  `Extract labels <#extract-labels>`__\n         -  `Extract classes <#extract-classes>`__\n\n      -  `Exceptions <#exceptions>`__\n\nInstallation\n------------\n\nTo compile ``pyfasttext``, make sure you have a compiler with C++11\nsupport.\n\nCloning\n~~~~~~~\n\n| ``pyfasttext`` uses git\n  `submodules <https://git-scm.com/book/en/v2/Git-Tools-Submodules>`__.\n| So, you need to add the ``--recursive`` option when you clone the\n  repository.\n\n.. code:: bash\n\n    git clone --recursive https://github.com/vrasneur/pyfasttext.git\n    cd pyfasttext\n\nRequirements for Python 2.7\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n| Python 2.7 support relies on the `future <http://python-future.org>`__\n  module: ``pyfasttext`` needs ``bytes`` objects, which are not\n  available natively in Python2.\n| You can install the ``future`` module with ``pip``.\n\n.. code:: bash\n\n    pip install future\n\nBuilding and installing\n~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    python setup.py install\n\nUsage\n-----\n\nHow to load the library?\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    >>> from pyfasttext import FastText\n\nHow to load an existing model?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    >>> model = FastText('/path/to/model.bin')\n\nor\n\n.. code:: python\n\n    >>> model = FastText()\n    >>> model.load_model('/path/to/model.bin')\n\nWord representation learning\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n| You can use all the options provided by the ``fastText`` binary\n  (``input``, ``output``, ``epoch``, ``lr``, ...).\n| Just use keyword arguments in the training methods of the ``FastText``\n  object.\n\nTraining using Skipgram\n^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> model = FastText()\n    >>> model.skipgram(input='data.txt', output='model', epoch=100, lr=0.7)\n\nTraining using CBoW\n^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> model = FastText()\n    >>> model.cbow(input='data.txt', output='model', epoch=100, lr=0.7)\n\nVector for a given word\n^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> model['dog']\n    array('f', [-0.4947430193424225, 8.133808296406642e-05, ...])\n\nGet all the word vectors in a model\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    >>> for word in model.words:\n    ...   print(word, model[word])\n\nGet the number of words in the model\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    >>> model.nwords\n    500000\n\nWord similarity\n^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> model.similarity('dog', 'cat')\n    0.75596606254577637\n\nMost similar words\n~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    >>> model.nearest_neighbors('dog', k=2)\n    [('dogs', 0.7843924736976624), ('cat', 75596606254577637)]\n\nAnalogies\n^^^^^^^^^\n\nThe ``most_similar()`` method works similarly as the one in\n`gensim <https://radimrehurek.com/gensim/models/keyedvectors.html>`__.\n\n.. code:: python\n\n    >>> model.most_similar(positive=['woman', 'king'], negative=['man'], k=1)\n    [('queen', 0.77121970653533936)]\n\nText classification\n~~~~~~~~~~~~~~~~~~~\n\nSupervised learning\n^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> model = FastText()\n    >>> model.supervised(input='/path/to/input.txt', output='/path/to/model', epoch=100, lr=0.7)\n\nGet all the labels\n^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> model.labels\n    ['LABEL1', 'LABEL2', ...]\n\nGet the number of labels\n^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> model.nlabels\n    100\n\nPrediction\n^^^^^^^^^^\n\n| To obtain the ``k`` most likely labels from test sentences, there are\n  multiple ``predict_*()`` methods.\n| If you want to obtain all the possible labels, use ``None`` for ``k``.\n\nLabels and probabilities\n''''''''''''''''''''''''\n\nIf you have a list of strings (or an iterable object), use this:\n\n.. code:: python\n\n    >>> model.predict_proba(['first sentence', 'second sentence'], k=2)\n    [[('LABEL1', 0.99609375), ('LABEL3', 1.953126549381068e-08)], [('LABEL2', 1.0), ('LABEL3', 1.953126549381068e-08)]]\n\nIf your test data is stored inside a file, use this:\n\n.. code:: python\n\n    >>> model.predict_proba_file('/path/to/test.txt', k=2)\n    [[('LABEL1', 0.99609375), ('LABEL3', 1.953126549381068e-08)], [('LABEL2', 1.0), ('LABEL3', 1.953126549381068e-08)]]\n\nIf you want to test a single string, use this:\n\n.. code:: python\n\n    >>> model.predict_proba_single('first sentence', k=2)\n    [('LABEL1', 0.99609375), ('LABEL3', 1.953126549381068e-08)]\n\nNormalized probabilities\n                        \n\nFor performance reasons, fastText probabilities often do not sum up to\n1.0.\n\nIf you want normalized probabilities (where the sum is closer to 1.0\nthan the original probabilities), you can use the ``normalized=True``\nparameter in all the methods that output probabilities\n(``predict_proba()``, ``predict_proba_file()`` and\n``predict_proba_single()``).\n\n.. code:: python\n\n    >>> sum(proba for label, proba in model.predict_proba_single('this is a sentence that needs to be classified', k=None))\n    0.9785203068801335\n    >>> sum(proba for label, proba in model.predict_proba_single('this is a sentence that needs to be classified', k=None, normalized=True))\n    0.9999999999999898\n\nLabels only\n'''''''''''\n\nIf you have a list of strings (or an iterable object), use this:\n\n.. code:: python\n\n    >>> model.predict(['first sentence', 'second sentence'], k=2)\n    [['LABEL1', 'LABEL3'], ['LABEL2', 'LABEL3']]\n\nIf your test data is stored inside a file, use this:\n\n.. code:: python\n\n    >>> model.predict_file('/path/to/test.txt', k=2)\n    [['LABEL1', 'LABEL3'], ['LABEL2', 'LABEL3']]\n\nIf you want to test a single string, use this:\n\n.. code:: python\n\n    >>> model.predict_single('first sentence', k=2)\n    ['LABEL1', 'LABEL3']\n\nQuantization\n^^^^^^^^^^^^\n\nUse keyword arguments in the ``quantize()`` method.\n\n.. code:: python\n\n    >>> model.quantize(input='/path/to/input.txt', output='/path/to/model')\n\nYou can load quantized models using the ``FastText`` constructor or the\n``load_model()`` method.\n\nMisc utilities\n~~~~~~~~~~~~~~\n\nShow the model (hyper)parameters\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> model.args\n    {'bucket': 11000000,\n     'cutoff': 0,\n     'dim': 100,\n     'dsub': 2,\n     'epoch': 100,\n    ...\n    }\n\nExtract labels or classes from a dataset\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n| You can use the ``FastText`` object to extract labels or classes from\n  a dataset.\n| The label prefix (which is ``__label__`` by default) is set using the\n  ``label`` parameter in the constructor.\n\nIf you load an existing model, the label prefix will be the one defined\nin the model.\n\n.. code:: python\n\n    >>> model = FastText(label='__my_prefix__')\n\nExtract labels\n''''''''''''''\n\nThere can be multiple labels per line.\n\n.. code:: python\n\n    >>> model.extract_labels('/path/to/dataset1.txt')\n    [['LABEL2', 'LABEL5'], ['LABEL1'], ...]\n\nExtract classes\n'''''''''''''''\n\nThere can be only one class per line.\n\n.. code:: python\n\n    >>> model.extract_classes('/path/to/dataset2.txt')\n    ['LABEL3', 'LABEL1', 'LABEL2', ...]\n\nExceptions\n~~~~~~~~~~\n\nThe ``fastText`` source code directly calls exit() when something wrong\nhappens (e.g. a model file does not exist, ...).\n\nInstead of exiting, ``pyfasttext`` raises a Python exception\n(``RuntimeError``).\n\n.. code:: python\n\n    >>> import pyfasttext\n    >>> model = pyfasttext.FastText('/path/to/non-existing_model.bin')\n    Model file cannot be opened for loading!\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n      File \"src/pyfasttext.pyx\", line 124, in pyfasttext.FastText.__cinit__ (src/pyfasttext.cpp:1800)\n      File \"src/pyfasttext.pyx\", line 348, in pyfasttext.FastText.load_model (src/pyfasttext.cpp:5947)\n    RuntimeError: fastext tried to exit: 1",
    "docs_url": null,
    "download_url": "https://github.com/vrasneur/pyfasttext/releases/download/0.1.0/pyfasttext-0.1.0.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/vrasneur/pyfasttext",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyfasttext",
    "platform": "",
    "project_url": "https://pypi.org/project/pyfasttext/",
    "release_url": "https://pypi.org/project/pyfasttext/0.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Yet another Python binding for fastText",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8f1a6d23f40824c9f23c05ee3c3b34af",
          "sha256": "e822820e9a96f89c0dbedd38001a05bfb13b5c0a2a786629e6b3ab8c6deea1dd"
        },
        "downloads": 0,
        "filename": "pyfasttext-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8f1a6d23f40824c9f23c05ee3c3b34af",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 135287,
        "upload_time": "2017-08-01T20:22:28",
        "url": "https://files.pythonhosted.org/packages/13/28/ac911b206a24585c4c893b62c2d481570f5ec3a9b9ac9b388c58dc8236bc/pyfasttext-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "8f1a6d23f40824c9f23c05ee3c3b34af",
        "sha256": "e822820e9a96f89c0dbedd38001a05bfb13b5c0a2a786629e6b3ab8c6deea1dd"
      },
      "downloads": 0,
      "filename": "pyfasttext-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8f1a6d23f40824c9f23c05ee3c3b34af",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 135287,
      "upload_time": "2017-08-01T20:22:28",
      "url": "https://files.pythonhosted.org/packages/13/28/ac911b206a24585c4c893b62c2d481570f5ec3a9b9ac9b388c58dc8236bc/pyfasttext-0.1.0.tar.gz"
    }
  ]
}