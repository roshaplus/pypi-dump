{
  "info": {
    "author": "Luc Jean",
    "author_email": "ljean@apidev.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Natural Language :: French",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"
    ],
    "description": "coop_cms is a Content Management System (CMS) for Django\n===============================================\n* `Yet another CMS ?`_\n* `Quick start`_\n\n.. _Yet another CMS?: #yacms\n.. _Quick start?: #quick-start\n\n\n.. _yacms:\n\nYet another CMS ?\n------------------------------------\n\n#. Coop-cms is built around Articles. It defines a basic abstract model so you can define your own model.\n#. It has a website tree in a nice admin widget, to let you order Articles and *any other standard django model* you've defined in your project.\n#. Based on the tree, you get templatetags for menu navigation, siblings links, breadcrumb, etc\n\nCoop-cms has some sister apps to make it more usable:\n\n* `coop_bar <https://github.com/ljean/coop-bar/>`_, an extensible toolbar (same concept : any app you create can add links in the toolbar).\n* `coop_html_editor <https://github.com/ljean/coop_html_editor/>`_, integration of in-site html editors._\n* `colorbox <https://github.com/ljean/coop-colorbox/>`_, make easy integration of jquery colorbox library.\n\n.. _quick-start:\n\nQuick start\n-----------\n\nPython 2.7, Django 1.8+ required\n\nInstall it with ``pip install apidev_coop_cms``\n\nurls.py\n~~~~~~~\n\nAt *the very end* of your urls.py file, add::\n\n    urlpatterns += patterns('',\n        (r'^html-editor/', include('coop_html_editor.urls')),\n        (r'^', include('coop_cms.urls')),\n        (r'^coop_bar/', include('coop_bar.urls')),\n    )\n\nPlease note that coop-cms will handle any page slug, except the ones you will have defined before.\n\nsettings.py\n~~~~~~~~~~~\nIn settings.py::\n\n    MIDDLEWARE_CLASSES = (\n        'django.contrib.sessions.middleware.SessionMiddleware',\n        'django.middleware.common.CommonMiddleware',\n        'django.middleware.locale.LocaleMiddleware',\n        'django.middleware.csrf.CsrfViewMiddleware',\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\n        'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n        'django.contrib.messages.middleware.MessageMiddleware',\n        'django.middleware.clickjacking.XFrameOptionsMiddleware',\n        'django.middleware.security.SecurityMiddleware',\n        'coop_cms.middleware.PermissionsMiddleware',  # Optional: redirect to login when PermissionDenied is raised\n        'coop_cms.utils.RequestMiddleware',\n        ...\n    )\n\n    TEMPLATE_CONTEXT_PROCESSORS = (\n        \"django.contrib.auth.context_processors.auth\",\n        \"django.template.context_processors.debug\",\n        \"django.template.context_processors.i18n\",\n        'django.template.context_processors.request',\n        \"django.template.context_processors.media\",\n        \"django.template.context_processors.static\",\n        \"django.contrib.messages.context_processors.messages\",\n        ...\n    )\n\n    AUTHENTICATION_BACKENDS = (\n        'coop_cms.perms_backends.ArticlePermissionBackend',\n        'coop_cms.apps.email_auth.auth_backends.EmailAuthBackend',  # Optional -> login with email rather than username\n        'django.contrib.auth.backends.ModelBackend', # Django's default auth backend\n    )\n\n    INSTALLED_APPS = (\n        # Contribs\n        'django.contrib.auth',\n        'django.contrib.contenttypes',\n        'django.contrib.sessions',\n        'django.contrib.sites',\n        'django.contrib.messages',\n        'django.contrib.staticfiles',\n        'django.contrib.admin',\n        'django.contrib.admindocs',\n\n        # 3rd parties\n        'django_extensions',\n        'sorl.thumbnail',\n        'floppyforms',\n        'registration', # Optional\n\n        # apps\n        'coop_bar',\n        'coop_html_editor',\n        'colorbox',\n        'coop_cms',\n        'coop_cms.apps.coop_bootstrap', # Optional -> utilities for Bootstrap CSS framework\n        'coop_cms.apps.email_auth', # Optional -> login with email rather than username\n\n        # The coop_cms Article is an abstract model, you must define an Article in one of your app\n        # We provide 2 apps that can be used if needed. Choose one or the other\n        # 'coop_cms.apps.basic_cms', # Nothing else than a concrete Article model.\n        'coop_cms.apps.demo_cms', # A ready-to-use example app.\n\n        # The app below make possible to create articles from a RSS feed. Add it if needed\n        'coop_cms.apps.rss_sync',\n    )\n\n    # These are settings to customize the CMS behavior. The values are just examples and correspond to the demo_cms app.\n\n    # Define the Concrete Article to use. Not required if basic_cms is used\n    COOP_CMS_ARTICLE_CLASS = 'coop_cms.apps.demo_cms.models.Article'\n\n    # Define a custom form for Article editing. Not required if basic_cms is used\n    COOP_CMS_ARTICLE_FORM = 'coop_cms.apps.demo_cms.forms.ArticleForm'\n\n    # Make possible to customize the menus in the admin bar. Optional.\n    # If not defined, the tuple is build with the coop_bar_cfg modules of all INSTALLED_APPS\n    COOPBAR_MODULES = (\n        'coop_cms.apps.demo_cms.my_coop_bar',\n    )\n\n    # Populate the urls when editing <a> tag in HTML editor\n    COOP_HTML_EDITOR_LINK_MODELS = (\n        'demo_cms.Article',\n    )\n\n    # Optional: you can overload the aloha plugins used by coop_cms --> see coop_html_editor docs for details\n    ALOHA_PLUGINS = (\n        \"common/format\",\n        \"common/highlighteditables\",\n    )\n\n    # Optional: you can change the jquery version used by aloha --> see coop_html_editor docs for details\n    ALOHA_JQUERY = 'js/jquery.1.7.2.js'\n\n    # Optional : you can customize the whole behavior of aloha by proving the url of config file.\n    # It will overload the config provided by coop_html_editor --> see coop_html_editor for details\n    ALOHA_INIT_URL = '/static/js/my_aloha_config.js'\n\n    # Default size of the article logo. Can be changed in template\n    COOP_CMS_ARTICLE_LOGO_SIZE = \"128x128\"\n\n    # Templates that can be used for an article\n    # It can be a tuple or a function returning a tuple\n    COOP_CMS_ARTICLE_TEMPLATES = 'coop_cms.apps.demo_cms.get_article_templates'\n    # COOP_CMS_ARTICLE_TEMPLATES = (\n    #     ('standard.html', 'Standard'),\n    #     ('homepage.html', 'Homepage'),\n    #     ('blog.html', 'Blog'),\n    # )\n\n    # Prefix for making absolute links\n    COOP_CMS_SITE_PREFIX = 'http://127.0.0.1:8000'\n\n    # from email : the domain of this address should allow the IP of your SMTP server : See SPF\n    COOP_CMS_FROM_EMAIL = '\"Your name\" <your@email.com>'\n\n    # TODO : REPLY-TO\n    COOP_CMS_REPLY_TO = '\"Your name\" <your@email.com>'\n\n    # Email address to send a newsletter test\n    COOP_CMS_TEST_EMAILS = (\n        '\"Your name\" <your@email.com>',\n    )\n\n    # tuples of templates that can be used for a newsletter.\n    COOP_CMS_NEWSLETTER_TEMPLATES = (\n        ('basic_newsletter.html', 'Basic'),\n        ('special_newsletter.html', 'With sections'),\n        ('sortable_newsletter.html', 'Sortable sections'),\n    )\n    # optional : A custom form for editing the newsletter\n    COOP_CMS_NEWSLETTER_FORM = 'coop_cms.apps.demo_cms.forms.SortableNewsletterForm'\n\nBase template\n~~~~~~~~~~~~~\nYou need to create a base template ``base.html`` in one of your template folders. The ``article.html`` will inherit from this base template.\n\nYou need the following templatetags libs::\n\n    {% load coop_navigation coop_bar_tags %}\n\nIn the <head> of the document::\n\n    {% coop_bar_headers %}\n    {% block jquery_declaration %}{% endblock %}\n    {% block extra_head %}{% endblock %}\n\nIn the <body> of the document::\n\n    {% block document %}...{% endblock %}\n    {% coop_bar %}\n\nJust before </body> at the end of the document::\n\n    {% coop_bar_footer %}\n\nYou can also put some navigations in the <body>::\n\n    {% navigation_as_nested_ul %}\n\nThe navigation_as_nested_ul templatetag accepts several args\n * tree=\"english\" --> The name of the navigation_tree to use. \"default\" if missing\n * li_template=\"dropdown_li.html\" --> a template for every <li> tags\n * ul_template=\"dropdown_ul.html\" --> a template for every <ul> tags\n * li_args=\"dropdown_li_class.html\" --> args to be used for any <li> tags\n\nThere are others templatetags for navigation : ``navigation_breadcrumb``, ``navigation_children``, ``navigation_siblings`` with similar behavior\n\nNavigation configuration\n~~~~~~~~~~~~~~~~~~~~~~~~\nDon't forget to register the navigable types. In order to be accessible from the navigation, Model classes must be registered.\n * In the django admin, go to coop_cms - Navigable types\n * Add a new object and choose the model class you want to make accessible in navigation\n * Define how to get the label in navigation for a given object : use the __unicode__, use the search field or use a custom get_label method\n * If search_field is choosed, define the name of this field.\n * The search field make possible to define which field to use when the navigation tree ask for matching objects.\n\n * Then Go to a Navigation object in admin, the admin page propose to configure it thanks to a tree view\n * Type some text in the text field at the top\n * The field autocomplete propose all the objects of a NavigableType matching the text you entered\n * Select one object and click 'Add a new item'\n * The object is now part of the current navigation\n\n\nGoing further\n-------------\n\nYou can look at the demo_app in apps folder to see how to customize the behavior of coop_cms:\n * Editable \"pieces of HTML\" in your page : A editable block that can be shared by several pages.\n * Custom templates for articles and newsletters\n * Custom fields in article\n * Custom admin bar\n * Configuration values\n \nInternationalization\n--------------------\n\nIf you want to make an international site, coop_cms works well with `django-modeltranslation`.\n\nWe recommend to remove `django-modeltranslation` from the apps when making the model migrations\n\n\n    if not (len(sys.argv) > 1 and sys.argv[1] in ('makemigrations', )):\n        INSTALLED_APPS = ('modeltranslation', ) + INSTALLED_APPS\n\nThe model migrations wil not take the translation fields into account and it will be easier to add or remove languages\nwith the following commands\n\n    python manage.py sync_translation_fields --noinput\n    python manage.py update_translation_fields\n\n\nLicense\n=======\n\napidev-coop-cms is a fork of credis/coop_cms and uses BSD license see license.txt.\n\ncoop-cms development was funded by `CREDIS <http://credis.org/>`_, FSE (European Social Fund) and Conseil Regional d'Auvergne.",
    "docs_url": null,
    "download_url": "https://github.com/ljean/coop_cms/tarball/master",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ljean/coop_cms/",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "apidev-coop",
    "platform": "",
    "project_url": "https://pypi.org/project/apidev-coop/",
    "release_url": "https://pypi.org/project/apidev-coop/1.2.26/",
    "requires_python": "",
    "summary": "Small CMS built around a tree navigation open to any django models",
    "version": "1.2.26"
  },
  "releases": {
    "1.2.26": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1ac5a57d9b1c5525e27b4cbd5e254db1",
          "sha256": "af616c50d4de0855e9b86554a8b91185e650a95d6199eb82400bdd39990d5104"
        },
        "downloads": 0,
        "filename": "apidev-coop-1.2.26.tar.gz",
        "has_sig": false,
        "md5_digest": "1ac5a57d9b1c5525e27b4cbd5e254db1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 966997,
        "upload_time": "2017-06-03T05:16:08",
        "url": "https://files.pythonhosted.org/packages/e3/00/b94399b2fbe768c478747bd8a23c325ea2abfa4f437d9c3e4f5b9035887c/apidev-coop-1.2.26.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "1ac5a57d9b1c5525e27b4cbd5e254db1",
        "sha256": "af616c50d4de0855e9b86554a8b91185e650a95d6199eb82400bdd39990d5104"
      },
      "downloads": 0,
      "filename": "apidev-coop-1.2.26.tar.gz",
      "has_sig": false,
      "md5_digest": "1ac5a57d9b1c5525e27b4cbd5e254db1",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 966997,
      "upload_time": "2017-06-03T05:16:08",
      "url": "https://files.pythonhosted.org/packages/e3/00/b94399b2fbe768c478747bd8a23c325ea2abfa4f437d9c3e4f5b9035887c/apidev-coop-1.2.26.tar.gz"
    }
  ]
}