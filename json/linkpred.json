{
  "info": {
    "author": "Raf Guns",
    "author_email": "raf.guns@uantwerpen.be",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "linkpred\n========\n\n**linkpred** is a Python package for link prediction: given a network, **linkpred** provides a number of heuristics (known as *predictors*) that assess the likelihood of potential links in a future snapshot of the network.\n\nWhile some predictors are fairly straightforward (e.g., if two people have a large number of mutual friends, it seems likely that eventually they will meet and become friends), others are more involved.\n\n\n.. image:: https://travis-ci.org/rafguns/linkpred.svg?branch=master\n    :target: https://travis-ci.org/rafguns/linkpred\n\n.. image:: https://coveralls.io/repos/rafguns/linkpred/badge.svg?branch=master\n    :target: https://coveralls.io/r/rafguns/linkpred?branch=master\n\n\nExample\n-------\n\n::\n\n    >>> import linkpred\n    >>> G = linkpred.read_network(\"examples/training.net\")\n    11:49:00 - INFO - Reading file 'examples/training.net'...\n    11:49:00 - INFO - Successfully read file.\n    >>> len(G)   # number of nodes\n    632\n    >>> # We exclude edges already present, to predict only new links\n    >>> simrank = linkpred.predictors.SimRank(G, excluded=G.edges())\n    >>> simrank_results = simrank.predict(c=0.5)\n    >>> top = simrank_results.top(5)\n    >>> for authors, score in top.items():\n    ...    print authors, score\n    ...\n    Tomizawa, H - Fujigaki, Y 0.188686630053\n    Shirabe, M - Hayashi, T 0.143866427916\n    Garfield, E - Fuseler, EA 0.148097050146\n    Persson, O - Larsen, IM 0.138516589957\n    Vanleeuwen, TN - Noyons, ECM 0.185040358711",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/rafguns/linkpred/",
    "keywords": null,
    "license": "New BSD License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "linkpred",
    "platform": "any",
    "project_url": "https://pypi.org/project/linkpred/",
    "release_url": "https://pypi.org/project/linkpred/0.1/",
    "requires_python": null,
    "summary": "Python package for link prediction",
    "version": "0.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "eb8c439521773287a21ac5e29dabc376",
          "sha256": "83e25bfa5d851a801a33a77ceaf2fe5cad67bd8d65f07483ff4a3fd49607652d"
        },
        "downloads": 427,
        "filename": "linkpred-0.1.zip",
        "has_sig": false,
        "md5_digest": "eb8c439521773287a21ac5e29dabc376",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 31710,
        "upload_time": "2016-04-22T14:26:49",
        "url": "https://files.pythonhosted.org/packages/49/a1/ffaf0edaae8b7c2d474e44a37f7c1b69cf462d6eef33199bb8e8f0bbff4f/linkpred-0.1.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "eb8c439521773287a21ac5e29dabc376",
        "sha256": "83e25bfa5d851a801a33a77ceaf2fe5cad67bd8d65f07483ff4a3fd49607652d"
      },
      "downloads": 427,
      "filename": "linkpred-0.1.zip",
      "has_sig": false,
      "md5_digest": "eb8c439521773287a21ac5e29dabc376",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 31710,
      "upload_time": "2016-04-22T14:26:49",
      "url": "https://files.pythonhosted.org/packages/49/a1/ffaf0edaae8b7c2d474e44a37f7c1b69cf462d6eef33199bb8e8f0bbff4f/linkpred-0.1.zip"
    }
  ]
}