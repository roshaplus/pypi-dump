{
  "info": {
    "author": "Freezer Team",
    "author_email": "openstack-dev@lists.openstack.org",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "========================\nTeam and repository tags\n========================\n\n.. image:: http://governance.openstack.org/badges/freezer.svg\n    :target: http://governance.openstack.org/reference/tags/index.html\n\n.. Change things from this point on\n\n=======\nFreezer\n=======\n\n.. image:: freezer_logo.jpg\n\nNOTE\n----\n\nFreezer has four different components; Freezer Web UI, Freezer Scheduler,\nFreezer Agent and Freezer API.\n\nIf you need to use Freezer Backup Restore DR as a Service platform, you need to\ninstall Freezer Scheduler, Freezer Agent on client and Freezer Web UI, Freezer\nAPI on OpenStack controller server.\n(The server where your Horizon and Keystone installed)\n\nThis is the source code of Freezer Scheduler and Freezer Agent.\n\nIf you need to get the source code of other components,\nplease visit proper Github pages:\n\nFreezer Web UI:\nhttps://github.com/openstack/freezer-web-ui\n\nFreezer API:\nhttps://github.com/openstack/freezer-api\n\nFeatures\n========\n\nFreezer is a Backup Restore DR as a Service platform that helps you to automate\nthe data backup and restore process.\n\nThe following features are available:\n\n-  Backup file system using point-in-time snapshot\n-  Strong encryption supported: AES-256-CFB\n-  Backup file system tree directly (without volume snapshot)\n-  Backup journalled MongoDB directory tree using lvm snapshot to Swift\n-  Backup MySQL with lvm snapshot\n-  Restore data from a specific date automatically to file system\n-  Low storage consumption as the backup are uploaded as a stream\n-  Flexible backup policy (incremental and differential)\n-  Data is archived in GNU Tar format for file based incremental\n-  Multiple compression algorithm support (zlib, bzip2, xz)\n-  Remove old backup automatically according to the provided parameters\n-  Multiple storage media support (Swift, local file system, or ssh)\n-  Flush kernel buffered memory to disk\n-  Multi-platform (Linux, Windows, \\*BSD, OSX)\n-  Manage multiple jobs (I.e., multiple backups on the same node)\n-  Synchronize backups and restore on multiple nodes\n-  Web user interface integrated with OpenStack Horizon\n-  Execute scripts/commands before or after a job execution\n\nFreezer Components\n==================\n\n+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------+\n| Component         | Description                                                                                                                                    |\n+===================+================================================================================================================================================+\n| Freezer Web UI    | Web interface that interacts with the Freezer API to configure and change settings.                                                            |\n|                   | It provides most of the features from the Freezer Agent CLI, advanced scheduler settings such as multi-node backup synchronization,            |\n|                   | metrics, and reporting.                                                                                                                        |\n+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------+\n| Freezer Scheduler | A client side component, running on the node where the data backup is to be executed.                                                          |\n|                   | It consists of a daemon that retrieves the data from the freezer API and executes jobs (i.e. backups, restore, admin actions, info actions,    |\n|                   | pre and/or post job scripts) by running the Freezer Agent.                                                                                     |\n|                   | The metrics and exit codes returned by the freezer agent are captured and sent to the Freezer API.                                             |\n|                   | The scheduler manages the execution and synchronization of multiple jobs executed on a single or multiple nodes.                               |\n|                   | The status of the execution of all the nodes is saved through the API.                                                                         |\n|                   | The Freezer scheduler takes care of uploading jobs to the API by reading job files on the file system.                                         |\n|                   | It also has its own configuration file where job session or other settings like the freezer API polling interval can be configured.            |\n|                   | The Freezer scheduler manages jobs, for more information about jobs please refer to: freezer_api/README.rst under JOB the sections             |\n+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------+\n| Freezer Agent     | Multiprocessing Python software that runs on the client side, where the data backup is to be executed.                                         |\n|                   | It can be executed standalone or by the Freezer Scheduler.                                                                                     |\n|                   | The Freezer Agent provides a flexible way to execute backup, restore and other actions on a running system.                                    |\n|                   | In order to provide flexibility in terms of data integrity, speed, performance, resources usage, etc the freezer agent offers a                |\n|                   | wide range of options to execute optimized backup according to the available resources as:                                                     |\n|                   |                                                                                                                                                |\n|                   |   - Segments size (the amount of memory used)                                                                                                  |\n|                   |   - Queues size (optimize backups where I/O, bandwidth, memory or CPU is a constraint)                                                         |\n|                   |   - I/O Affinity and process priority (it can be used with real time I/O and maximum user level process priority)                              |\n|                   |   - Bandwidth limitation                                                                                                                       |\n|                   |   - Client side Encryption (AES-256-CFB)                                                                                                       |\n|                   |   - Compression (multiple algorithms supported as zlib, bzip2, xz/lzma)                                                                        |\n|                   |   - Parallel upload to pluggable storage media (i.e., upload backup to swift and to a remote node by ssh,                                      |\n|                   |     or upload to two or more independent swift instances with different credentials, etc)                                                      |\n|                   |   - Execute file based incremental (like tar), block based incremental (like rsync algorithm) and differential based backup and restore        |\n|                   |   - Multi-platform as it can be run on Linux, Windows, \\*BSD and OSX                                                                           |\n|                   |   - Automatic removal of old backups                                                                                                           |\n+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------+\n| Freezer API       | The API is used to store and provide metadata to the Freezer Web UI and to the Freezer Scheduler.                                              |\n|                   | Also the API is used to store session information for multi node backup synchronization. No workload data is stored in the API.                |\n|                   | For more information to the API please refer to: freezer_api/README.rst                                                                        |\n+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------+\n| DB Elasticsearch  | Backend used by the API to store and retrieve metrics, metadata sessions information, job status, etc.                                         |\n+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------+\n\nLinux Requirements\n==================\n\n-  OpenStack Swift Account (optional)\n-  python\n-  GNU Tar >= 1.26\n-  gzip, bzip2, xz\n-  OpenSSL\n-  python-swiftclient\n-  keystoneauth1\n-  pymongo\n-  PyMySQL\n-  libmysqlclient-dev\n-  sync\n-  libffi-dev\n-  libssl-dev\n-  python-dev\n-  pycrypto\n-  At least 128 MB of memory reserved for Freezer\n\nWindows Requirements\n====================\n\n- Python 2.7\n- GNU Tar binaries (we recommend to follow [this guide] (https://github.com/openstack-freezer-utils/freezer-windows-binaries#windows-binaries-for-freezer) to install them)\n- [OpenSSL pre-compiled for windows] (https://wiki.openssl.org/index.php/Binaries) or [direct download](https://indy.fulgan.com/SSL/openssl-1.0.1-i386-win32.zip)\n- [Sync] (https://technet.microsoft.com/en-us/sysinternals/bb897438.aspx)\n- [Microsoft Visual C++ Compiler for Python 2.7] (http://aka.ms/vcpython27)\n- [PyWin32 for python 2.7] (http://sourceforge.net/projects/pywin32/files/pywin32/Build%20219/)\n\nAdd binaries to Windows Path\n----------------------------\nGo to **Control Panel\\System and Security\\System** and then **Advanced System Settings**, and click **Environment Variables** under **System Variables** edit **Path** and append in the end.\n- ;C:\\\\Sync\n- ;C:\\\\OpenSSL-Win64\\\\bin\n- ;C:\\\\Python27;C:\\\\Python27\\\\Lib\\\\site-packages\\\\;C:\\\\Python27\\\\Scripts\\\\\n\nThe following components support Windows OS Platform:\n\n- freezer-agent\n- freezer-scheduler\n\nInstall Windows Scheduler\n-------------------------\n\nFreezer scheduler on windows run as a windows service and it needs to be installed as a user service.\n\n- open cmd as admin\n- whoami\n- cd C:\\\\Python27\\\\Lib\\\\site-packages\\\\freezer\\\\scheduler\n- python win_service.py --username {whoami} --password {pc-password} install\n\n\nUnofficial Installer for Windows\n--------------------------------\n\nFreezer offers a [windows installer] (https://github.com/openstack-freezer-utils/freezer-windows-installer#windows-freezer-installer) supported by the community\n\n\n\nInstallation & Env Setup\n========================\n\nBefore Installation\n-------------------\n\n1-) Chose correct branch for corresponding OpenStack version.\nIf your OpenStack installation is Kilo, chose Stable/Kilo release. etc...\n\n2-) This installation instruction only for Freezer Agent and Freezer Scheduler\non client side. If you need to install other components, visit their Github page.\n\n3-) Make sure you have installed same version of all four components.\nDo not miss match different version. For example; do not use Freezer Agent Stable/Kilo\nrelease with Freeze API Stable/Liberty release.\n\n4-) Following installation instructions only for Freezer Scheduler\nand Freezer Agent.\n\n\nUbuntu / Debian\n---------------\n\nSwift client and Keystone client::\n\n    $ sudo apt-get install -y python-dev\n    For python3:\n    $ sudo apt-get install -y python3-dev\n    $ sudo easy_install -U pip\n\nMongoDB backup::\n\n    $ sudo apt-get install -y python-pymongo\n\nMySQL backup::\n\n    $ sudo pip install pymysql\n\nFreezer installation from Python package repo::\n\n    $ sudo pip install freezer\n\nOR::\n\n    $ sudo easy_install freezer\n\nThe basic Swift account configuration is needed to use freezer. Make\nsure python-swiftclient is installed.\n\nAlso the following ENV vars are needed. You can put them in ~/.bashrc::\n\n    export OS_REGION_NAME=region-a.geo-1\n    export OS_TENANT_ID=<account tenant>\n    export OS_PASSWORD=<account password>\n    export OS_AUTH_URL=https://region-a.geo-1.identity.hpcloudsvc.com:35357/v2.0\n    export OS_USERNAME=automationbackup\n    export OS_TENANT_NAME=automationbackup\n\n    $ source ~/.bashrc\n\nLet's say you have a container called freezer_foobar-container, by executing\n\"swift list\" you should see something like::\n\n    $ swift list\n    freezer_foobar-container-2\n    $\n\nThese are just use case example using Swift in the HP Cloud.\n\n*Is strongly advised to execute backups using LVM snapshot, so\nfreezer will execute a backup on point-in-time data. This avoids the risk of\ndata inconsistencies and corruption.*\n\n\nWindows\n-------\nGeneral packages::\n\n    > easy_install -U pip\n    > pip install freezer\n\nThe basic Swift account configuration is needed to use freezer. Make sure python-swiftclient is installed::\n\n    set OS_REGION_NAME=region-a.geo-1\n    set OS_TENANT_ID=<account tenant>\n    set OS_PASSWORD=<account password>\n    set OS_AUTH_URL=https://region-a.geo-1.identity.hpcloudsvc.com:35357/v2.0\n    set OS_USERNAME=automationbackup\n    set OS_TENANT_NAME=automationbackup\n\n\nUsage Example\n=============\n\nFreezer will automatically add the prefix \"freezer\\_\" to the container name,\nwhere it is provided by the user and doesn't already start with this prefix.\nIf no container name is provided, the default is \"freezer_backups\".\n\nThe execution options can be set from the command line and/or config file\nin ini format. There's an example of the job config file available in\nfreezer/freezer/specs/job-backup.conf.example. Command line options\nalways override the same options in the config file.\n\nBackup\n------\n\nThe most simple backup execution is a direct file system backup::\n\n    $ sudo freezer-agent --path-to-backup /data/dir/to/backup\n    --container freezer_new-data-backup --backup-name my-backup-name\n\n    * On windows (need admin rights)*\n    > freezer-agent --action backup --mode fs --backup-name testwindows\n    --path-to-backup \"C:\\path\\to\\backup\" --container freezer_windows\n    --log-file  C:\\path\\to\\log\\freezer.log\n\nBy default --mode fs is set. The command will generate a compressed tar\ngzip file of the directory /data/dir/to/backup. The generated file will\nbe segmented in stream and uploaded in the Swift container called\nfreezer_new-data-backup, with backup name my-backup-name.\n\nNow check to see if your backup executed correctly by looking at\n/var/log/freezer.log\n\nExecute a MongoDB backup using lvm snapshot:\n\nWe need to check before to see on which volume group and logical volume our\nmongo data is located. This information can be obtained as per the following::\n\n    $ mount\n    [...]\n\nOnce we know the volume on which our Mongo data is mounted, we can get\nthe volume group and logical volume info::\n\n    $ sudo vgdisplay\n    [...]\n    $ sudo lvdisplay\n    [...]\n\nWe assume our mongo volume is \"/dev/mongo/mongolv\" and the volume group\nis \"mongo\"::\n\n    $ sudo freezer-agent --lvm-srcvol /dev/mongo/mongolv --lvm-dirmount /var/lib/snapshot-backup\n    --lvm-volgroup mongo --path-to-backup /var/lib/snapshot-backup/mongod_ops2\n    --container freezer_mongodb-backup-prod --exclude \"*.lock\" --mode mongo --backup-name mongod-ops2\n\nNow freezer-agent creates an lvm snapshot of the volume /dev/mongo/mongolv. If\nno options are provided, the default snapshot name is \"freezer\\_backup\\_snap\".\nThe snapshot vol will be mounted automatically on /var/lib/snapshot-backup,\nand the backup metadata and segments will be uploaded in the container\nmongodb-backup-prod with the name mongod-ops2.\n\nExecute a file system backup using lvm snapshot::\n\n    $ sudo freezer-agent --lvm-srcvol /dev/jenkins/jenkins-home --lvm-dirmount\n    /var/snapshot-backup --lvm-volgroup jenkins\n    --path-to-backup /var/snapshot-backup --container freezer_jenkins-backup-prod\n    --exclude \"\\*.lock\" --mode fs --backup-name jenkins-ops2\n\nMySQL backup requires a basic configuration file. The following is an\nexample of the config::\n\n    $ sudo cat /root/.freezer/db.conf\n    [default]\n    host = your.mysql.host.ip\n    user = backup\n    password = userpassword\n\nEvery listed option is mandatory. There's no need to stop the mysql\nservice before the backup execution.\n\nExecute a MySQL backup using lvm snapshot::\n\n    $ sudo freezer-agent --lvm-srcvol /dev/mysqlvg/mysqlvol\n    --lvm-dirmount /var/snapshot-backup\n    --lvm-volgroup mysqlvg --path-to-backup /var/snapshot-backup\n    --mysql-conf /root/.freezer/freezer-mysql.conf--container\n    freezer_mysql-backup-prod --mode mysql --backup-name mysql-ops002\n\nCinder backups\n==============\n\nTo make a cinder backup you should provide cinder-vol-id or cindernative-vol-id\nparameters in command line arguments. Freezer doesn't do any additional checks\nand assumes that making a backup of that image will be sufficient to restore your\ndata in the future.\n\nExecute a cinder backup::\n\n    $ freezer-agent --mode cinder --cinder-vol-id 3ad7a62f-217a-48cd-a861-43ec0a04a78b\n\nExecute a MySQL backup with Cinder::\n\n   $ freezer-agent --mysql-conf /root/.freezer/freezer-mysql.conf\n   --container freezer_mysql-backup-prod --mode mysql\n   --backup-name mysql-ops002\n   --cinder-vol-id 3ad7a62f-217a-48cd-a861-43ec0a04a78b\n\nNova backups\n============\n\nTo make a Nova backup you should provide a Nova parameter in the arguments.\nFreezer doesn't do any additional checks and assumes that making a backup\nof that instance will be sufficient to restore your data in future.\n\nExecute a nova backup::\n\n    $ freezer-agent --mode nova --nova-inst-id 3ad7a62f-217a-48cd-a861-43ec0a04a78b\n\nExecute a MySQL backup with Nova::\n\n   $ freezer-agent --mysql-conf /root/.freezer/freezer-mysql.conf\n   --container freezer_mysql-backup-prod --mode mysql\n   --backup-name mysql-ops002\n   --nova-inst-id 3ad7a62f-217a-48cd-a861-43ec0a04a78b\n\nAll the freezer-agent activities are logged into /var/log/freezer.log.\n\n\nSwift, Local and SSH Storage\n----------------------------\n\nFreezer can use:\n\n* local storage - a folder that is available in the same OS (may be mounted)\n* Swift storage - OS object storage\n* SSH storage - a folder on a remote machine\n\nLocal Storage\n=============\n\nTo use local storage specify \"--storage local\"\nAnd use \"--container <path-to-folder-with-backups>\"\nBackup example::\n\n   $ sudo freezer-agent --path-to-backup /data/dir/to/backup\n   --container /tmp/my_backup_path/ --backup-name my-backup-name\n   --storage local\n\nRestore example::\n\n   $ sudo freezer-agent --action restore --restore-abs-path /data/dir/to/backup\n   --container /tmp/my_backup_path/ --backup-name my-backup-name\n   --storage local\n\n\nSwift storage\n=============\n\nTo use swift storage specify \"--storage swift\" or omit \"--storage\" parameter\naltogether (Swift storage is the default).\nAnd use \"--container <swift-container-name>\"\n\nBackup example::\n\n   $ sudo freezer-agent --path-to-backup /data/dir/to/backup\n   --container freezer-container --backup-name my-backup-name\n   --storage swift\n\nRestore example::\n\n   $ sudo freezer-agent --action restore --restore-abs-path /data/dir/to/backup\n   --container freezer-container --backup-name my-backup-name\n   --storage swift\n\nSSH storage\n===========\n\nTo use ssh storage specify \"--storage ssh\"\nAnd use \"--container <path-to-folder-with-backups-on-remote-machine>\"\nAlso you should specify ssh-username, ssh-key and ssh-host parameters.\nssh-port is optional parameter, default is 22.\n\nssh-username for user ubuntu should be \"--ssh-username ubuntu\"\nssh-key should be path to your secret ssh key \"--ssh-key <path-to-secret-key>\"\nssh-host can be ip of remote machine or resolvable dns name \"--ssh-host 8.8.8.8\"\n\nBackup example::\n\n   $ sudo freezer-agent --path-to-backup /data/dir/to/backup\n   --container /remote-machine-path/ --backup-name my-backup-name\n   --storage ssh --ssh-username ubuntu --ssh-key ~/.ssh/id_rsa\n   --ssh-host 8.8.8.8\n\nRestore example::\n\n  $ sudo freezer-agent  --action restore --restore-abs-pat /data/dir/to/backup\n  --container /remote-machine-path/ --backup-name my-backup-name\n  --storage ssh --ssh-username ubuntu --ssh-key ~/.ssh/id_rsa\n  --ssh-host 8.8.8.8\n\n\nRestore\n-------\n\nAs a general rule, when you execute a restore, the application that\nwrites or reads data should be stopped so that during the restore\noperation, the restored data is not inadvertently read or written by the\napplication.\n\nThere are 3 main options that need to be set for data restore\n\nfile system Restore:\n\nExecute a file system restore of the backup name\nadminui.git::\n\n    $ sudo freezer-agent --action restore --container freezer_foobar-container-2\n    --backup-name adminui.git\n    --hostname git-HP-DL380-host-001 --restore-abs-path\n    /home/git/repositories/adminui.git/\n    --restore-from-date \"2014-05-23T23:23:23\"\n\nMySQL restore:\n\nExecute a MySQL restore of the backup name holly-mysql.\nLet's stop mysql service first::\n\n    $ sudo service mysql stop\n\nExecute Restore::\n\n    $ sudo freezer-agent --action restore --container freezer_foobar-container-2\n    --backup-name mysq-prod --hostname db-HP-DL380-host-001\n    --restore-abs-path /var/lib/mysql --restore-from-date \"2014-05-23T23:23:23\"\n\nAnd finally restart mysql::\n\n    $ sudo service mysql start\n\nExecute a MongoDB restore of the backup name mongobigdata::\n\n    $ sudo freezer-agent --action restore --container freezer_foobar-container-2\n    --backup-name mongobigdata --hostname db-HP-DL380-host-001\n    --restore-abs-path /var/lib/mongo --restore-from-date \"2014-05-23T23:23:23\"\n\n\nList remote containers::\n\n    $ sudo freezer-agent --action info\n\nList remote objects in container::\n\n    $ sudo freezer-agent --action info --container freezer_testcontainer -l\n\n\nRemove backups older then 1 day::\n\n    $ freezer-agent --action admin --container freezer_dev-test --remove-older-then 1 --backup-name dev-test-01\n\n\nCinder restore currently creates a volume with the contents of the saved one,\nbut doesn't implement detachment of existing volume and attachment of the new\none to the vm. You should implement these steps manually. To create a new volume\nfrom existing content run the next command:\n\nExecute a cinder restore::\n\n    $ freezer-agent --action restore --cinder-inst-id 3ad7a62f-217a-48cd-a861-43ec0a04a78b\n    $ freezer-agent --action restore --cindernative-vol-id 3ad7a62f-217a-48cd-a861-43ec0a04a78b\n\nNova restore currently creates an instance with the content of saved one, but the\nip address of the vm will be different as well as its id.\n\nExecute a nova restore::\n\n    $ freezer-agent --action restore --nova-inst-id 3ad7a62f-217a-48cd-a861-43ec0a04a78b\n\nLocal storage restore execution::\n\n    $ sudo freezer-agent --action restore --container /local_backup_storage/\n    --backup-name adminui.git\n    --hostname git-HP-DL380-host-001 --restore-abs-path\n    /home/git/repositories/adminui.git/\n    --restore-from-date \"2014-05-23T23:23:23\"\n    --storage local\n\nArchitecture\n============\n\n\nFreezer architectural components are the following:\n\n-  OpenStack Swift (the storage)\n-  freezer client running on the node where the backups and restores are to be executed\n\nFreezer uses GNU Tar or Rsync algorithm under the hood to execute incremental backup and\nrestore. When a key is provided, it uses OpenSSL or pycrypto module (OpenSSL compatible)\nto encrypt data. (AES-256-CFB)\n\n=============\n\nThe Freezer architecture is composed of the following components:\n\n+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------+\n| Component         | Description                                                                                                                                    |\n+===================+================================================================================================================================================+\n| Freezer Web UI    | Web interface that interacts with the Freezer API to configure and change settings.                                                            |\n|                   | It provides most of the features from the freezer-agent CLI as well as advanced scheduler settings such as multi-node backup synchronization,  |\n|                   | metrics, and reporting.                                                                                                                        |\n+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------+\n| Freezer Scheduler | A client side component, running on the node where the data backup is to be executed.                                                          |\n|                   | It consists of a daemon that retrieves the data from the freezer API and executes jobs (i.e., backups, restore, admin actions, info actions,   |\n|                   | pre and/or post job scripts) by running the Freezer Agent.                                                                                     |\n|                   | The metrics and exit codes returned by the freezer agent are captured and sent to the Freezer API.                                             |\n|                   | The scheduler manages the execution and synchronization of multiple jobs executed on a single or multiple nodes.                               |\n|                   | The status of the execution of all the nodes is saved through the API.                                                                         |\n|                   | The Freezer scheduler takes care of uploading jobs to the API by reading job files on the file system.                                         |\n|                   | It also has its own configuration file where job session or other settings like the freezer API polling interval can be configured.            |\n|                   | The Freezer scheduler manages jobs. For more information about jobs please refer to: freezer_api/README.rst under JOB the sections             |\n+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------+\n| Freezer Agent     | Multiprocessing Python software that runs on the client side, where the data backup is to be executed.                                         |\n|                   | It can be executed standalone or by the Freezer Scheduler.                                                                                     |\n|                   | The freezer-agent provides a flexible way to execute backup, restore and other actions on a running system.                                    |\n|                   | In order to provide flexibility in terms of data integrity, speed, performance, resources usage, etc the freezer agent offers a                |\n|                   | wide range of options to execute optimized backup according to the available resources as:                                                     |\n|                   |                                                                                                                                                |\n|                   |   - Segments size (the amount of memory used)                                                                                                  |\n|                   |   - Queues size (optimize backups where I/O, bandwidth, memory or CPU is a constraint)                                                         |\n|                   |   - I/O Affinity and process priority (it can be used with real time I/O and maximum user level process priority)                              |\n|                   |   - Bandwidth limitation                                                                                                                       |\n|                   |   - Client side Encryption (AES-256-CFB)                                                                                                       |\n|                   |   - Compression (multiple algorithms supported as zlib, bzip2, xz/lzma)                                                                        |\n|                   |   - Parallel upload to pluggable storage media (i.e.,upload backup to swift and to a remote node by SSH,                                       |\n|                   |     or upload to two or more independent swift instances with different credentials, etc)                                                      |\n|                   |   - Execute file based incremental (like tar), block based incremental (like rsync algorithm) and differential based backup and restore        |\n|                   |   - Multi-platform as it can be run on Linux, Windows, \\*BSD and OSX                                                                           |\n|                   |   - Automatic removal of old backups                                                                                                           |\n|                   |                                                                                                                                                |\n+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------+\n| Freezer API       | The API is used to store and provide metadata to the Freezer Web UI and to the Freezer Scheduler.                                              |\n|                   | Also the API is used to store session information for multi node backup synchronization. No workload data is stored in the API.                |\n|                   | For more information on the API please refer to: freezer_api/README.rst                                                                        |\n+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------+\n| DB ElasticSearch  | Backend used by the API to store and retrieve metrics, metadata sessions information, job status, etc.                                         |\n+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------+\n\nFreezer currently uses GNU Tar under the hood to execute incremental backup and\nrestore. When a key is provided, it uses OpenSSL to encrypt data (AES-256-CFB).\n\nThe following diagrams can help to better understand the solution:\n\n**Service Architecture**\n\n.. image::\n    specs/Service_Architecture_02.png\n\n**Freezer Agent backup work flow with API**\n\n.. image::\n    specs/freezer_agent_backup_api.png\n\n**Freezer Agent backup without API**\n\n.. image::\n    specs/freezer_agent_backup.png\n\n**Freezer Scheduler with API**\n\n.. image:: specs/freezer_scheduler_api.png\n\n**Freezer Job Session**\n\n.. image:: specs/job_session.png\n\n**Freezer Dashboard**\n\n.. image:: specs/freezer_dashboard.png\n\n**How to scale**\n\n.. image:: specs/freezer_scheduler_api.png\n\nLow resources requirement\n-------------------------\n\nFreezer is designed to reduce to the minimum I/O, CPU and Memory Usage.\nThis is achieved by generating a data stream from tar (for archiving)\nand gzip (for compressing). Freezer segments the stream in a configurable\nchunk size (with the option --max-seg-size). The default segment size is\n64MB, so it can be safely stored in memory, encrypted if the key is\nprovided, and uploaded to Swift as a segment.\n\nMultiple segments are sequentially uploaded using the Swift Manifest.\nAll the segments are uploaded first, and then the Manifest file is\nuploaded too, so the data segments cannot be accessed directly. This\nensures data consistency.\n\nBy keeping the segments small, in-memory, I/O usage is reduced. Also as\nthere's no need to store locally the final compressed archive\n(tar-gziped), no additional or dedicated storage is required for the\nbackup execution. The only additional storage needed is the LVM snapshot\nsize (set by default at 5GB). The lvm snapshot size can be set with the\noption --lvm-snapsize. It is important to not specify a too small snapshot\nsize, because in case a quantity of data is being written to the source\nvolume and consequently the lvm snapshot is filled up, then the data will be\ncorrupted.\n\nIf more memory is available for the backup process, the maximum\nsegment size can be increased. This will speed up the process. Please\nnote that the segments must be smaller then 5GB, since that is the maximum\nobject size in the Swift server.\n\nOn the other hand, if a server has small memory availability, the\n--max-seg-size option can be set to lower values. The unit of this\noption is in bytes.\n\nHow the incremental works\n-------------------------\n\nThe incremental backups is one of the most crucial features. The\nfollowing basic logic happens when Freezer executes:\n\n1) Freezer starts the execution and checks if the provided backup name for\n   the current node already exists in Swift.\n\n2) If the backup exists, then the Manifest file is retrieved. This is\n   important as the Manifest file contains the information of the\n   previous Freezer execution.\n\n\nNova and Cinder Backups\n-----------------------\n\nIf our data is stored on cinder volume or nova instance disk, we can implement\nfile backup using nova snapshots or volume backups.\n\nNova backups\n============\n\nIf you provide nova arguments in the parameters, freezer assumes that all\nnecessary data is located on instance disk and it can be successfully stored\nusing nova snapshot mechanism.\n\nFor example if we want to store our MySQL located on instance disk, we\nwill execute the same actions as in the case of lvm or tar snapshots, but\nwe will invoke nova snapshot instead of lvm or tar.\n\nAfter that we will place the snapshot in a Swift container as a dynamic large object.\n\ncontainer/<instance_id>/<timestamp> <- large object with metadata\ncontainer_segments/<instance_id>/<timestamp>/segments...\n\nRestore will create a snapshot from stored data and restore an instance from\nthis snapshot. Instance will have different id and old instance should be\nterminated manually.\n\n\nCinder backups\n==============\n\nCinder has its own mechanism for backups, and freezer supports it. But it also\nallows creating a glance image from volume and uploading to swift.\n\nTo use standard cinder backups please provide --cindernative-vol-id argument.\n\n\nParallel backup\n---------------\n\nParallel backup can be executed only by config file. In config file you\nshould create n additional sections that start with \"storage:\"\n\nExample [storage:my_storage1], [storage:ssh], [storage:storage3]\n\nEach storage section should have 'container' argument and all parameters\nrelated to the storage\n\nExample: ssh-username, ssh-port\n\nFor swift storage you should provide additional parameter called 'osrc'\nOsrc should be a path to file with OpenStack Credentials like::\n\n  unset OS_DOMAIN_NAME\n  export OS_AUTH_URL=http://url:5000/v3\n  export OS_PROJECT_NAME=project_name\n  export OS_USERNAME=username\n  export OS_PASSWORD=secret_password\n  export OS_PROJECT_DOMAIN_NAME=Default\n  export OS_USER_DOMAIN_NAME=Default\n  export OS_IDENTITY_API_VERSION=3\n  export OS_AUTH_VERSION=3\n  export OS_CACERT=/etc/ssl/certs/ca-certificates.crt\n  export OS_ENDPOINT_TYPE=internalURL\n\nExample of Config file for two local storages and one swift storage::\n\n  [default]\n  action = backup\n  mode = fs\n  path_to_backup = /foo/\n  backup_name = mytest6\n  always_level = 2\n  max_segment_size = 67108864\n  container = /tmp/backup/\n  storage = local\n  [storage:first]\n  storage=local\n  container = /tmp/backup1/\n  [storage:second]\n  storage=local\n  container = /tmp/backup2/\n  [storage:swift]\n  storage=swift\n  container = test\n  osrc = openrc.osrc\n\nfreezer-scheduler\n-----------------\nThe freezer-scheduler is one of the two freezer components which is run on\nthe client nodes; the other one being the freezer-agent.\nIt has a double role: it is used both to start the scheduler process, and as\na cli-tool which allows the user to interact with the API.\n\nThe freezer-scheduler process can be started/stopped in daemon mode using the usual\npositional arguments::\n\n  freezer-scheduler start|stop\n\nIt can be also be started as a foreground process using the ``--no-daemon`` flag::\n\n  freezer-scheduler --no-daemon start\n\nThis can be useful for testing purposes, when launched in a Docker container,\nor by a babysitting process such as systemd.\n\nThe cli-tool version is used to manage the jobs in the API.\nA \"job\" is basically a container; a document which contains one\nor more \"actions\".\n\nAn action contains the instructions for the freezer-agent. They are the same\nparameters that would be passed to the agent on the command line. For example:\n\"backup_name\", \"path_to_backup\", \"max_level\"\n\nTo sum it up, a job is a sequence of parameters that the scheduler pulls\nfrom the API and passes to a newly spawned freezer-agent process at the\nright time.\n\nThe scheduler understands the \"scheduling\" part of the job document,\nwhich it uses to actually schedule the job, while the rest of the parameters\nare substantially opaque.\n\nIt may also be useful to use the ``-c`` parameter to specify the client-id that\nthe scheduler will use when interacting with the API.\n\nThe purpose of the *client-id* is to associate a job with the\nscheduler instance which is supposed to execute that job.\n\nA single OpenStack user could manage different resources on different nodes\n(and actually may even have different freezer-scheduler instances running\non the same node with different local privileges, for example),\nand the client-id allows him to associate the specific scheduler instance\nwith its specific jobs.\n\nWhen not provided with a custom client-id, the scheduler falls back to the default\nwhich is composed from the tenant-id and the hostname of the machine on which it is\nrunning.\n\n\nThe first step to use the scheduler is creating a document with the job::\n\n  cat test_job.json\n\n  {\n    \"job_actions\": [\n        {\n            \"freezer_action\": {\n                \"action\": \"backup\",\n                \"mode\": \"fs\",\n                \"backup_name\": \"backup1\",\n                \"path_to_backup\": \"/home/me/datadir\",\n                \"container\": \"schedule_backups\",\n                \"log_file\": \"/home/me/.freezer/freezer.log\"\n            },\n            \"max_retries\": 3,\n            \"max_retries_interval\": 60\n        }\n    ],\n    \"job_schedule\": {\n        \"schedule_interval\": \"4 hours\",\n        \"schedule_start_date\": \"2015-08-16T17:58:00\"\n    },\n    \"description\": \"schedule_backups 6\"\n  }\n\nThen upload that job into the API::\n\n  freezer-scheduler -c node12 job-create --file test_job.json\n\nThe newly created job can be found with::\n\n  freezer-scheduler -c node12 job-list\n\n  +----------------------------------+--------------------+-----------+--------+-------+--------+------------+\n  |              job_id              |    description     | # actions | status | event | result | session_id |\n  +----------------------------------+--------------------+-----------+--------+-------+--------+------------+\n  | 07999ea33a494ccf84590191d6fe850c | schedule_backups 6 |     1     |        |       |        |            |\n  +----------------------------------+--------------------+-----------+--------+-------+--------+------------+\n\nIts content can be read with::\n\n  freezer-scheduler -c node12 job-get -j 07999ea33a494ccf84590191d6fe850c\n\nThe scheduler can be started on the target node with::\n\n  freezer-scheduler -c node12 -i 15 -f ~/job_dir start\n\nThe scheduler could have already been started. As soon as the freezer-scheduler contacts the API,\nit fetches the job and schedules it.\n\n\nMisc\n====\n\nDependencies notes\n------------------\nIn stable/kilo and stable/liberty the module ``pep3143daemon`` is imported\nfrom local path rather than pip. This generated many issues as the package\nis not in the global-requirements.txt of kilo and liberty.\n\nAlso pbr in the kilo release does not support env markers which further\ncomplicated the installation.\n\nPlease check the `FAQ <FAQ.rst>`_ too.\n\nAvailable options::\n\n    usage: freezer-agent [-h] [--action ACTION] [--always-level ALWAYS_LEVEL]\n                     [--backup-name BACKUP_NAME]\n                     [--cinder-vol-id CINDER_VOL_ID]\n                     [--cindernative-vol-id CINDERNATIVE_VOL_ID]\n                     [--command COMMAND] [--compression COMPRESSION]\n                     [--config CONFIG] [--config-dir DIR] [--config-file PATH]\n                     [--container CONTAINER] [--debug]\n                     [--dereference-symlink DEREFERENCE_SYMLINK]\n                     [--download-limit DOWNLOAD_LIMIT] [--dry-run]\n                     [--encrypt-pass-file ENCRYPT_PASS_FILE]\n                     [--exclude EXCLUDE] [--hostname HOSTNAME] [--insecure]\n                     [--log-config-append PATH]\n                     [--log-date-format DATE_FORMAT] [--log-dir LOG_DIR]\n                     [--log-file PATH] [--log-format FORMAT]\n                     [--lvm-auto-snap LVM_AUTO_SNAP]\n                     [--lvm-dirmount LVM_DIRMOUNT]\n                     [--lvm-snap-perm LVM_SNAPPERM]\n                     [--lvm-snapname LVM_SNAPNAME]\n                     [--lvm-snapsize LVM_SNAPSIZE] [--lvm-srcvol LVM_SRCVOL]\n                     [--lvm-volgroup LVM_VOLGROUP] [--max-level MAX_LEVEL]\n                     [--max-priority MAX_PRIORITY]\n                     [--max-segment-size MAX_SEGMENT_SIZE]\n                     [--metadata-out METADATA_OUT] [--mode MODE]\n                     [--mysql-conf MYSQL_CONF]\n                     [--no-incremental NO_INCREMENTAL] [--nodebug]\n                     [--nodry-run] [--noinsecure] [--nooverwrite] [--noquiet]\n                     [--nouse-syslog] [--nouse-syslog-rfc-format]\n                     [--nova-inst-id NOVA_INST_ID] [--noverbose]\n                     [--nowatch-log-file]\n                     [--os-identity-api-version OS_IDENTITY_API_VERSION]\n                     [--overwrite] [--path-to-backup PATH_TO_BACKUP]\n                     [--proxy PROXY] [--quiet]\n                     [--remove-from-date REMOVE_FROM_DATE]\n                     [--remove-older-than REMOVE_OLDER_THAN]\n                     [--restart-always-level RESTART_ALWAYS_LEVEL]\n                     [--restore-abs-path RESTORE_ABS_PATH]\n                     [--restore-from-date RESTORE_FROM_DATE]\n                     [--snapshot SNAPSHOT] [--sql-server-conf SQL_SERVER_CONF]\n                     [--ssh-host SSH_HOST] [--ssh-key SSH_KEY]\n                     [--ssh-port SSH_PORT] [--ssh-username SSH_USERNAME]\n                     [--storage STORAGE]\n                     [--syslog-log-facility SYSLOG_LOG_FACILITY]\n                     [--upload-limit UPLOAD_LIMIT] [--use-syslog]\n                     [--use-syslog-rfc-format] [--verbose] [--version]\n                     [--watch-log-file]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --action ACTION       Set the action to be taken. backup and restore are\n                        self explanatory, info is used to retrieve info from\n                        the storage media, exec is used to execute a script,\n                        while admin is used to delete old backups and other\n                        admin actions. Default backup.\n  --always-level ALWAYS_LEVEL\n                        Set backup maximum level used with tar to implement\n                        incremental backup. If a level 3 is specified, the\n                        backup will be executed from level 0 to level 3 and to\n                        that point always a backup level 3 will be executed.\n                        It will not restart from level 0. This option has\n                        precedence over --max-backup-level. Default False\n                        (Disabled)\n  --backup-name BACKUP_NAME, -N BACKUP_NAME\n                        The backup name you want to use to identify your\n                        backup on Swift\n  --cinder-vol-id CINDER_VOL_ID\n                        Id of cinder volume for backup\n  --cindernative-vol-id CINDERNATIVE_VOL_ID\n                        Id of cinder volume for native backup\n  --command COMMAND     Command executed by exec action\n  --compression COMPRESSION\n                        compression algorithm to use. gzip is default\n                        algorithm\n  --config CONFIG       Config file abs path. Option arguments are provided\n                        from config file. When config file is used any option\n                        from command line provided take precedence.\n  --config-dir DIR      Path to a config directory to pull \\*.conf files from.\n                        This file set is sorted, so as to provide a\n                        predictable parse order if individual options are\n                        over-ridden. The set is parsed after the file(s)\n                        specified via previous --config-file, arguments hence\n                        over-ridden options in the directory take precedence.\n  --config-file PATH    Path to a config file to use. Multiple config files\n                        can be specified, with values in later files taking\n                        precedence. Defaults to None.\n  --container CONTAINER, -C CONTAINER\n                        The Swift container (or path to local storage) used to\n                        upload files to\n  --debug, -d           If set to true, the logging level will be set to DEBUG\n                        instead of the default INFO level.\n  --dereference-symlink DEREFERENCE_SYMLINK\n                        Follow hard and soft links and archive and dump the\n                        files they refer to. Default False.\n  --download-limit DOWNLOAD_LIMIT\n                        Download bandwidth limit in Bytes per sec. Can be\n                        invoked with dimensions (10K, 120M, 10G).\n  --dry-run             Do everything except writing or removing objects\n  --encrypt-pass-file ENCRYPT_PASS_FILE\n                        Passing a private key to this option, allow you to\n                        encrypt the files before to be uploaded in Swift.\n                        Default do not encrypt.\n  --exclude EXCLUDE     Exclude files,given as a PATTERN.Ex: --exclude '\\*.log'\n                        will exclude any file with name ending with .log.\n                        Default no exclude\n  --hostname HOSTNAME, --restore_from_host HOSTNAME\n                        Set hostname to execute actions. If you are executing\n                        freezer from one host but you want to delete objects\n                        belonging to another host then you can set this option\n                        that hostname and execute appropriate actions. Default\n                        current node hostname.\n  --insecure            Allow to access swift servers without checking SSL\n                        certs.\n  --log-config-append PATH, --log_config PATH\n                        The name of a logging configuration file. This file is\n                        appended to any existing logging configuration files.\n                        For details about logging configuration files, see the\n                        Python logging module documentation. Note that when\n                        logging configuration files are used all logging\n                        configuration is defined in the configuration file and\n                        other logging configuration options are ignored (for\n                        example, log_format).\n  --log-date-format DATE_FORMAT\n                        Defines the format string for %(asctime)s in log\n                        records. Default: None . This option is ignored if\n                        log_config_append is set.\n  --log-dir LOG_DIR, --logdir LOG_DIR\n                        (Optional) The base directory used for relative\n                        log_file paths. This option is ignored if\n                        log_config_append is set.\n  --log-file PATH, --logfile PATH\n                        (Optional) Name of log file to send logging output to.\n                        If no default is set, logging will go to stderr as\n                        defined by use_stderr. This option is ignored if\n                        log_config_append is set.\n  --lvm-dirmount LVM_DIRMOUNT\n                        Set the directory you want to mount the lvm snapshot\n                        to. If not provided, a unique name will be generated\n                        with thebasename /var/lib/freezer\n  --lvm-snap-perm LVM_SNAPPERM\n                        Set the lvm snapshot permission to use. If the\n                        permission is set to ro The snapshot will be immutable\n                        - read only -. If the permission is set to rw it will\n                        be mutable\n  --lvm-snapname LVM_SNAPNAME\n                        Set the name of the snapshot that will be created. If\n                        not provided, a unique name will be generated.\n  --lvm-snapsize LVM_SNAPSIZE\n                        Set the lvm snapshot size when creating a new\n                        snapshot. Please add G for Gigabytes or M for\n                        Megabytes, i.e. 500M or 8G. It is also possible to use\n                        percentages as with the -l option of lvm, i.e. 80%FREE\n                        Default 1G.\n  --lvm-srcvol LVM_SRCVOL\n                        Set the lvm volume you want to take a snaphost from.\n                        Default no volume\n  --lvm-volgroup LVM_VOLGROUP\n                        Specify the volume group of your logical volume. This\n                        is important to mount your snapshot volume. Default\n                        not set\n  --max-level MAX_LEVEL\n                        Set the backup level used with tar to implement\n                        incremental backup. If a level 1 is specified but no\n                        level 0 is already available, a level 0 will be done\n                        and subsequently backs to level 1. Default 0 (No\n                        Incremental)\n  --max-priority MAX_PRIORITY\n                        Set the cpu process to the highest priority (i.e. -20\n                        on Linux) and real-time for I/O. The process priority\n                        will be set only if nice and ionice are installed\n                        Default disabled. Use with caution.\n  --max-segment-size MAX_SEGMENT_SIZE, -M MAX_SEGMENT_SIZE\n                        Set the maximum file chunk size in bytes to upload to\n                        swift Default 33554432 bytes (32MB)\n  --metadata-out METADATA_OUT\n                        Set the filename to which write the metadata regarding\n                        the backup metrics. Use '-' to output to standard\n                        output.\n  --mode MODE, -m MODE  Set the technology to back from. Options are, fs\n                        (filesystem),mongo (MongoDB), mysql (MySQL), sqlserver\n                        (SQL Server) Default set to fs\n  --mysql-conf MYSQL_CONF\n                        Set the MySQL configuration file where freezer\n                        retrieve important information as db_name, user,\n                        password, host, port. Following is an example of\n                        config file: # backup_mysql_confhost = <db-host>user =\n                        <mysqluser>password = <mysqlpass>port = <db-port>\n  --no-incremental NO_INCREMENTAL\n                        Disable incremental feature. By default freezer build\n                        the meta data even for level 0 backup. By setting this\n                        option incremental meta data is not created at all.\n                        Default disabled\n  --nodebug             The inverse of --debug\n  --nodry-run           The inverse of --dry-run\n  --noinsecure          The inverse of --insecure\n  --nooverwrite         The inverse of --overwrite\n  --noquiet             The inverse of --quiet\n  --nouse-syslog        The inverse of --use-syslog\n  --nouse-syslog-rfc-format\n                        The inverse of --use-syslog-rfc-format\n  --nova-inst-id NOVA_INST_ID\n                        Id of nova instance for backup\n  --noverbose           The inverse of --verbose\n  --nowatch-log-file    The inverse of --watch-log-file\n  --os-identity-api-version OS_IDENTITY_API_VERSION, --os_auth_ver OS_IDENTITY_API_VERSION\n                        OpenStack identity api version, can be 1, 2, 2.0 or 3\n  --overwrite           With overwrite removes files from restore path before\n                        restore.\n  --path-to-backup PATH_TO_BACKUP, -F PATH_TO_BACKUP\n                        The file or directory you want to back up to Swift\n  --proxy PROXY         Enforce proxy that alters system HTTP_PROXY and\n                        HTTPS_PROXY, use '' to eliminate all system proxies\n  --quiet, -q           Suppress error messages\n  --remove-from-date REMOVE_FROM_DATE\n                        Checks the specified container and removes objects\n                        older than the provided datetime in the form 'YYYY-MM-\n                        DDThh:mm:ss' i.e. '1974-03-25T23:23:23'. Make sure the\n                        'T' is between date and time\n  --remove-older-than REMOVE_OLDER_THAN, -R REMOVE_OLDER_THAN\n                        Checks in the specified container for object older\n                        than the specified days. If i.e. 30 is specified, it\n                        will remove the remote object older than 30 days.\n                        Default False (Disabled)\n  --restart-always-level RESTART_ALWAYS_LEVEL\n                        Restart the backup from level 0 after n days. Valid\n                        only if --always-level option if set. If --always-\n                        level is used together with --remove-older-then, there\n                        might be the chance where the initial level 0 will be\n                        removed. Default False (Disabled)\n  --restore-abs-path RESTORE_ABS_PATH\n                        Set the absolute path where you want your data\n                        restored. Default False.\n  --restore-from-date RESTORE_FROM_DATE\n                        Set the date of the backup from which you want to\n                        restore.This will select the most recent backup\n                        previous to the specified date (included). Example: if\n                        the last backup was created at '2016-03-22T14:29:01'\n                        and restore-from-date is set to '2016-03-22T14:29:01',\n                        the backup will be restored successfully. The same for\n                        any date after that, even if the provided date is in\n                        the future. However if restore-from-date is set to\n                        '2016-03-22T14:29:00' or before, that backup will not\n                        be found. Please provide datetime in format 'YYYY-MM-\n                        DDThh:mm:ss' i.e. '1979-10-03T23:23:23'. Make sure the\n                        'T' is between date and time Default None.\n  --snapshot SNAPSHOT, -s SNAPSHOT\n                        Create a snapshot of the fs containing the resource to\n                        backup. When used, the lvm parameters will be guessed\n                        and/or the default values will be used, on windows it\n                        will invoke vssadmin\n  --sql-server-conf SQL_SERVER_CONF\n                        Set the SQL Server configuration file where freezer\n                        retrieve the sql server instance. Following is an\n                        example of config file: instance = <db-instance>\n  --ssh-host SSH_HOST   Remote host for ssh storage only\n  --ssh-key SSH_KEY     Path to ssh-key for ssh storage only\n  --ssh-port SSH_PORT   Remote port for ssh storage only (default 22)\n  --ssh-username SSH_USERNAME\n                        Remote username for ssh storage only\n  --storage STORAGE     Storage for backups. Can be Swift or Local now. Swift\n                        is default storage now. Local stores backups on the\n                        same defined path and swift will store files in\n                        container.\n  --syslog-log-facility SYSLOG_LOG_FACILITY\n                        Syslog facility to receive log lines. This option is\n                        ignored if log_config_append is set.\n  --upload-limit UPLOAD_LIMIT\n                        Upload bandwidth limit in Bytes per sec. Can be\n                        invoked with dimensions (10K, 120M, 10G).\n  --use-syslog          Use syslog for logging. Existing syslog format is\n                        DEPRECATED and will be changed later to honor RFC5424.\n                        This option is ignored if log_config_append is set.\n  --use-syslog-rfc-format\n                        Enables or disables syslog rfc5424 format for logging.\n                        If enabled, prefixes the MSG part of the syslog\n                        message with APP-NAME (RFC5424). This option is\n                        ignored if log_config_append is set.\n  --verbose, -v         If set to false, the logging level will be set to\n                        WARNING instead of the default INFO level.\n  --version             show program's version number and exit\n  --watch-log-file      Uses logging handler designed to watch file system.\n                        When log file is moved or removed this handler will\n                        open a new log file with specified path\n                        instantaneously. It makes sense only if log_file\n                        option is specified and Linux platform is used. This\n                        option is ignored if log_config_append is set.\n\n\nScheduler Options\n-----------------\n\nTo get an updated sample of freezer-scheduler configuration you the following command::\n\n    oslo-config-generator --config-file config-generator/scheduler.conf\n\nyou will find the update sample file in etc/scheduler.conf.sample\n\nAgent Options\n-------------\n\nTo list options available in freezer-agent use the following command::\n\n    oslo-config-generator --namespace freezer --namespace oslo.log\n\nthis will print all options to the screen you direct the output to a file if you want::\n\n    oslo-config-generator --namespace freezer --namespace oslo.log --output-file etc/agent.conf.sample\n\n\nBandwidth limitation (Trickle)\n------------------------------\n\nTrickle for bandwidth limiting (How it works ):\n\nWe have 3 cases to handle:\n\n1. User used ``--upload-limit`` or ``--download-limit`` from the CLI\n2. User used configuration files to execute an action\n3. A combination of both of these options.\n\nUser used --upload-limit or -download-limit from the CLI\n========================================================\nWe need to remove these limits from the cli arguments and then run trickle\nusing subprocess\n\nEX::\n\n    # freezer-agent --action backup -F /etc/ -C freezer --upload-limit = 1k\n\nthis will be translated to::\n\n    # trickle -u 1024 -d -1 freezer-agent --action backup -F /etc/ -C freezer\n\nUser used config files to execute an action\n===========================================\n\nWe need to create a new config file without the limits So we will get the all\nthe arguments provided and remove limits then run trickle using subprocess\n\nEX: We have a config file contains::\n\n    [default]\n    action = backup\n    storage = ssh\n    ssh_host = 127.0.0.1\n    ssh_username = saad\n    ssh_key = /home/saad/.ssh/saad\n    container = /home/saad/backups_freezers\n    backup_name = freezer_jobs\n    path_to_backup = /etc\n    upload_limit=2k\n    download_limit=1k\n\nand we are going to execute this job as follow::\n\n    freezer-agent --config /home/user/job1.ini\n\nthis will be translated to::\n\n    trickle -u 2048 -d 1024 freezer-agent --config /tmp/freezer_job_x21aj29\n\nThe new config file has the following arguments::\n\n    [default]\n    action = backup\n    storage = ssh\n    ssh_host = 127.0.0.1\n    ssh_username = saad\n    ssh_key = /home/saad/.ssh/saad\n    container = /home/saad/backups_freezers\n    backup_name = freezer_jobs\n    path_to_backup = /etc\n\nHybrid approach using config file and CLI options\n=================================================\n\nWe will use a mix of both procedures:\n\n* remove limits (cli or config )\n* reproduce the same command again with trickle\n\nEX::\n\n $ freezer-agent --config /home/user/job2.ini --upload-limit 1k\n\nThe Freezer logo is released under the licence Attribution 3.0 Unported (CC BY3.0).\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://wiki.openstack.org/wiki/Freezer",
    "keywords": "freezer",
    "license": "Apache-2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "freezer",
    "platform": "",
    "project_url": "https://pypi.org/project/freezer/",
    "release_url": "https://pypi.org/project/freezer/4.0.1/",
    "requires_dist": [
      "six (>=1.9.0)",
      "setuptools (!=34.2.0,!=34.3.2,!=34.0.0,!=34.3.1,!=34.0.1,!=24.0.0,!=34.0.2,!=34.0.3,!=34.1.1,!=34.1.0,!=34.3.0,>=16.0)",
      "python-swiftclient (>=3.2.0)",
      "python-openstackclient (>=3.3.0)",
      "python-novaclient (!=7.0.0,>=6.0.0)",
      "python-glanceclient (>=2.5.0)",
      "python-freezerclient (>=1.0.0)",
      "python-cinderclient (!=1.7.1,>=1.6.0,!=1.7.0)",
      "pymongo (>=3.0.2,!=3.1)",
      "pycrypto (>=2.6)",
      "psutil (>=3.0.1)",
      "pbr (>=1.8)",
      "paramiko (>=2.0)",
      "oslo.utils (>=3.18.0)",
      "oslo.log (>=3.11.0)",
      "oslo.i18n (>=2.1.0)",
      "oslo.config (>=3.14.0,!=3.18.0)",
      "keystoneauth1 (>=2.18.0)",
      "astroid (<1.4.0)",
      "apscheduler",
      "PyMySQL (>=0.7.6)"
    ],
    "requires_python": "",
    "summary": "The OpenStack Backup Restore and Disaster Recovery as a Service Platform",
    "version": "4.0.1"
  },
  "releases": {
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ae9581999c42e830d9eaf0339a91308c",
          "sha256": "1bd7bc8d61a5e18e599b7af86cdfd85e5b5ba28c53d226bff9e6964d1d4c2057"
        },
        "downloads": 1840,
        "filename": "freezer-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "ae9581999c42e830d9eaf0339a91308c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32059,
        "upload_time": "2014-06-07T22:47:04",
        "url": "https://files.pythonhosted.org/packages/65/0e/4c794822b74621488d2e6fecca095018d5d458298610eaf346cbd59915ac/freezer-1.0.8.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c7dd3e5650ee28c4c9fe4d23814787cf",
          "sha256": "49904fc0337197ae42696b26d7c85b9ada099e781d30364ef1ad078d2e8f7861"
        },
        "downloads": 1285,
        "filename": "freezer-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c7dd3e5650ee28c4c9fe4d23814787cf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 51090,
        "upload_time": "2014-12-14T14:57:36",
        "url": "https://files.pythonhosted.org/packages/dd/18/3290d4d173ce1a4ae83a2848f6b2adcea0a36bc7c1382f54f5a0fb8494f4/freezer-1.1.0.tar.gz"
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "df42e96b6440dc393e607385a2396c26",
          "sha256": "cb8d13df815d7cc3e839d5da171907bef1b73ac33024174e3922405803638fb8"
        },
        "downloads": 1619,
        "filename": "freezer-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "df42e96b6440dc393e607385a2396c26",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 54777,
        "upload_time": "2015-01-24T19:41:23",
        "url": "https://files.pythonhosted.org/packages/6e/3f/5f980a009e5539169f6315f4929605220c823504e55a92d774ef054a7ed1/freezer-1.1.1.tar.gz"
      }
    ],
    "1.1.2": [
      {
        "comment_text": "built for Linux-3.13.0-46-generic-i686-with-glibc2.4",
        "digests": {
          "md5": "10559d3ab69904948a2ebf7a04d3c7d4",
          "sha256": "bed99b3a0652aff2cae35c62c340a443776fe9973b615f7bf0b448cd99482a34"
        },
        "downloads": 1544,
        "filename": "freezer-1.1.2.linux-i686.tar.gz",
        "has_sig": false,
        "md5_digest": "10559d3ab69904948a2ebf7a04d3c7d4",
        "packagetype": "bdist_dumb",
        "python_version": "any",
        "size": 86767,
        "upload_time": "2015-03-22T19:35:49",
        "url": "https://files.pythonhosted.org/packages/f1/1a/7c67cded929253dc5e626eb6428449eabcab46172fcbf5c3e6f441560491/freezer-1.1.2.linux-i686.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9b365c9b2d5140ae5a94a56b38cbb845",
          "sha256": "9895ea00a5d0d175075696c68e11bcb8f32d723c8dc8cd18a92b7d599667c2d0"
        },
        "downloads": 1346,
        "filename": "freezer-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9b365c9b2d5140ae5a94a56b38cbb845",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 57807,
        "upload_time": "2015-03-22T19:35:45",
        "url": "https://files.pythonhosted.org/packages/da/33/2ea821c1f2cd52abf696c158838da11640c664270b5d2a51f9738d90edde/freezer-1.1.2.tar.gz"
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c1e385faff9ffeaaa97fffe6a0109236",
          "sha256": "68f38b3fd7dfd86b2e72e6a5073ac02d6f4201bfe6b823eaaf79334880cd3d2b"
        },
        "downloads": 615,
        "filename": "freezer-1.1.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "c1e385faff9ffeaaa97fffe6a0109236",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 103165,
        "upload_time": "2015-11-16T13:37:45",
        "url": "https://files.pythonhosted.org/packages/f2/45/6c56fcd30bbb83faeffb260ef3c2a529efec3c8c472f4ea26ec99dee51dd/freezer-1.1.3-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b119fcf1f987105f12bbff6e51374680",
          "sha256": "e74b8e4a9e6eb38dc157d38b07cc6d87b539611a578dc32d377651c46ebf52b3"
        },
        "downloads": 554,
        "filename": "freezer-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b119fcf1f987105f12bbff6e51374680",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 630099,
        "upload_time": "2015-11-16T13:37:55",
        "url": "https://files.pythonhosted.org/packages/91/4e/6ff47af7e951110b69072bd45265e1dc50fd376350b00160bf1efab8c9ea/freezer-1.1.3.tar.gz"
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6b295fcfd86a744ff0db3726e1bb18cb",
          "sha256": "90e9181e395a91c3c663e6a392f3ec425d95b002088875b2304d8aaf3e4f0c99"
        },
        "downloads": 321,
        "filename": "freezer-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6b295fcfd86a744ff0db3726e1bb18cb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 462010,
        "upload_time": "2016-01-21T22:35:46",
        "url": "https://files.pythonhosted.org/packages/73/60/de7b9db69c44cf1dcc1e5692ec457030ca4cf2f2566ee5fd649706eefe70/freezer-1.2.0.tar.gz"
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8c5495e583c40aef2ec1af0b6300f357",
          "sha256": "117fb2b0bae06947b4c701a8c59070d56815103e9dde175f23de7e56459a2a63"
        },
        "downloads": 270,
        "filename": "freezer-1.2.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c5495e583c40aef2ec1af0b6300f357",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 119703,
        "upload_time": "2016-01-27T16:38:36",
        "url": "https://files.pythonhosted.org/packages/a5/e1/fc085a2300ad8f2e6950a8e49454f391549f8b77c0fd4886f9797d63ba55/freezer-1.2.1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "07ac975d45e2e4549dd22a337b5a9491",
          "sha256": "fa83fb398220ab51c6001de6378bfc57cc681e59101556f90d25d5256195ecfb"
        },
        "downloads": 280,
        "filename": "freezer-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "07ac975d45e2e4549dd22a337b5a9491",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 465642,
        "upload_time": "2016-01-27T16:38:45",
        "url": "https://files.pythonhosted.org/packages/b6/bb/00a1f5b0219bad710072eff8d9ab800e5a872092d4bc219b57c658f5497c/freezer-1.2.1.tar.gz"
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3b4846b02af1b9b572416453b3c8c9d3",
          "sha256": "de53f0f408071617303b1fb80f1e9af6e566bc73f3cdaf56feafff23cc5c8850"
        },
        "downloads": 161,
        "filename": "freezer-2.0.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b4846b02af1b9b572416453b3c8c9d3",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 138755,
        "upload_time": "2016-04-07T07:42:20",
        "url": "https://files.pythonhosted.org/packages/f5/b4/add431ce53e4295e30e86be986226b9a7f8f348a1e60b8ec8c7fae2853bb/freezer-2.0.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "70d0763200788ec5cffa04bd60b5a3e0",
          "sha256": "32acf524a290c6cb136161026090a398ec217c5d796c46eb1ac4bfc361aadee6"
        },
        "downloads": 145,
        "filename": "freezer-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "70d0763200788ec5cffa04bd60b5a3e0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 473028,
        "upload_time": "2016-04-07T07:42:44",
        "url": "https://files.pythonhosted.org/packages/2c/7a/f70f67b6eecd0230cba973945ef0a9b29157a1e568dfc67f3ba26ad027f7/freezer-2.0.0.tar.gz"
      }
    ],
    "2.0.0.0b2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ef657bd71b0c4460cd5b638112ea20d4",
          "sha256": "0552006fd575083bc3002cedf110d9ded3e1079133d8c3476a898518712ea095"
        },
        "downloads": 280,
        "filename": "freezer-2.0.0.0b2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef657bd71b0c4460cd5b638112ea20d4",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 119563,
        "upload_time": "2016-01-22T08:27:26",
        "url": "https://files.pythonhosted.org/packages/61/b6/3a2814d0022d7d9f0f08e84664c27293d9e509fb3ad47a5273b3eac3d065/freezer-2.0.0.0b2-py2-none-any.whl"
      }
    ],
    "2.0.0.0b3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1eb231d1789fef0dd2ec19467a197548",
          "sha256": "e807678d3b4da80e219dd9f1b53e134f40af63b45917495e5811f7c31f63d47e"
        },
        "downloads": 140,
        "filename": "freezer-2.0.0.0b3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "1eb231d1789fef0dd2ec19467a197548",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 131360,
        "upload_time": "2016-03-04T09:50:06",
        "url": "https://files.pythonhosted.org/packages/e7/00/6a6725d6914a58a8263b93809b65b96115f88527ccadaf62fb340dc689ff/freezer-2.0.0.0b3-py2-none-any.whl"
      }
    ],
    "2.0.0.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1998a051d3801c54e682fbd01db856ed",
          "sha256": "305e0ae8513fa46f59b4c3676bfb508ae3a7a1cd1582e6612b8a8baf1a44f1e1"
        },
        "downloads": 146,
        "filename": "freezer-2.0.0.0rc1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "1998a051d3801c54e682fbd01db856ed",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 133956,
        "upload_time": "2016-03-22T19:55:06",
        "url": "https://files.pythonhosted.org/packages/02/b3/7fd1d058b92f993787811a3c12f1728cbf1ff57910b18fbdf556a80e1226/freezer-2.0.0.0rc1-py2-none-any.whl"
      }
    ],
    "2.0.0.0rc2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "424d88b0b119340ddf69d2187723e1d5",
          "sha256": "956924911069b3727d7bf64d2c07deda165b8203f65022d2fad3f3b96f453837"
        },
        "downloads": 151,
        "filename": "freezer-2.0.0.0rc2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "424d88b0b119340ddf69d2187723e1d5",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 138858,
        "upload_time": "2016-03-30T15:02:39",
        "url": "https://files.pythonhosted.org/packages/63/f4/309a092778af49ffd912c40370ff8e3c1a4baa103914ef1381ada64879b9/freezer-2.0.0.0rc2-py2-none-any.whl"
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0ec283232ca1f405e61bcabbb25d1980",
          "sha256": "b5ae842297971fdaae39397134a585ce106241067bca47a99e0649584bc08fbb"
        },
        "downloads": 214,
        "filename": "freezer-3.0.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ec283232ca1f405e61bcabbb25d1980",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 202490,
        "upload_time": "2016-10-06T13:15:58",
        "url": "https://files.pythonhosted.org/packages/a8/9e/9a73e7377720815ea0c6cb0f54ed9c533b5bdf83ad773ab496abc5592432/freezer-3.0.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5ebebb52b177a0fe26349d760a4307a6",
          "sha256": "1aa49c6d16852cfb49980875a8ca9817014eccce656d4b891b59d6f537e1dbac"
        },
        "downloads": 211,
        "filename": "freezer-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5ebebb52b177a0fe26349d760a4307a6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 852102,
        "upload_time": "2016-10-06T13:16:03",
        "url": "https://files.pythonhosted.org/packages/81/5f/14301217d3953f143dcfdb9d345c060a3adcee73cd9af2e112d8e2a82c4c/freezer-3.0.0.tar.gz"
      }
    ],
    "3.0.0.0b1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c839cc6b9ed7089a9d7392cf9986e1e0",
          "sha256": "b6c3c6088b1ed4166fc7d74595e108926fa9e3ee414542ab7af3ec9346b5fbe6"
        },
        "downloads": 136,
        "filename": "freezer-3.0.0.0b1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "c839cc6b9ed7089a9d7392cf9986e1e0",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 151634,
        "upload_time": "2016-06-03T08:03:08",
        "url": "https://files.pythonhosted.org/packages/bd/ca/6bf8224cdba6226d3669e66b8ac04a3fe832f01f7f3f03d74f04a33d4af9/freezer-3.0.0.0b1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "117a82d8f10a345d54a0689aefef3d18",
          "sha256": "0ac36534d7e226e04cbb7a13e03cc77140e0b7e418ae6701fdac86be87a3c958"
        },
        "downloads": 144,
        "filename": "freezer-3.0.0.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "117a82d8f10a345d54a0689aefef3d18",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 537306,
        "upload_time": "2016-06-03T08:03:13",
        "url": "https://files.pythonhosted.org/packages/8c/13/84f94c4d72cc0726da855ad924be52f13bcefec373b058a5451bb617d6e1/freezer-3.0.0.0b1.tar.gz"
      }
    ],
    "3.0.0.0b2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "01811d9822355e0cc12d6f2f7ef38ae1",
          "sha256": "fb975799a8771b74b8e7025c6c53f4a3bb9bf97d8d4898c30b5f458f87f0bce8"
        },
        "downloads": 233,
        "filename": "freezer-3.0.0.0b2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "01811d9822355e0cc12d6f2f7ef38ae1",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 165743,
        "upload_time": "2016-07-13T17:01:15",
        "url": "https://files.pythonhosted.org/packages/da/6b/fb7307b8ea4a526613570b701b48ed7dd993004d848d1c2f9109d49dca2b/freezer-3.0.0.0b2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ff21ef1de5a99aef2eab02352be6b9c3",
          "sha256": "5e3777f1bc4027e5f8962bdead45668abb52b8a23c9399278528c1642e8515ac"
        },
        "downloads": 233,
        "filename": "freezer-3.0.0.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "ff21ef1de5a99aef2eab02352be6b9c3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 852064,
        "upload_time": "2016-07-13T17:01:18",
        "url": "https://files.pythonhosted.org/packages/34/1e/c06d39dc49b16438d65c456e587eb6c5f751e8d7b313feb943b6aa8a6f2c/freezer-3.0.0.0b2.tar.gz"
      }
    ],
    "3.0.0.0b3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5d400c665a2065d6a43ffe0f5ac823b2",
          "sha256": "43d7a7938274b515bf543e1cd16da106a6f43559231a015e235e6d6edcebfe91"
        },
        "downloads": 161,
        "filename": "freezer-3.0.0.0b3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "5d400c665a2065d6a43ffe0f5ac823b2",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 169800,
        "upload_time": "2016-08-31T15:13:53",
        "url": "https://files.pythonhosted.org/packages/bb/40/ca44c3f5b4842a4540237bd935b65659e76cf9245f4d60ff8768476c2dcd/freezer-3.0.0.0b3-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "32c7291cc49aba421d3ecebe317b0550",
          "sha256": "d928dc9853118519d98e607e793fc9c4fd3a68a04bf1706b7add6f60bf17efca"
        },
        "downloads": 152,
        "filename": "freezer-3.0.0.0b3.tar.gz",
        "has_sig": false,
        "md5_digest": "32c7291cc49aba421d3ecebe317b0550",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 850913,
        "upload_time": "2016-08-31T15:13:56",
        "url": "https://files.pythonhosted.org/packages/b2/59/6e49a2dc40b91eba325216b5501e477334b464aa7eafcce01208b69635d8/freezer-3.0.0.0b3.tar.gz"
      }
    ],
    "3.0.0.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "16b61f30ac40c0e0b7d4756708420f75",
          "sha256": "2250ad176bb81b92200cb6562918a4e223af8d06cf7ec8686a8a3be97dfe5e91"
        },
        "downloads": 91,
        "filename": "freezer-3.0.0.0rc1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "16b61f30ac40c0e0b7d4756708420f75",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 203130,
        "upload_time": "2016-09-15T22:11:03",
        "url": "https://files.pythonhosted.org/packages/a4/85/dfaa6d788f964a9526a387541bda272e6029c368ba1dbf255824dd3b02cb/freezer-3.0.0.0rc1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "532d7cd2ce3cee56d4b18aa8d7dcc82c",
          "sha256": "fddc195a658aef779beac55d2a668a68a426e35d30c287a5fc9aa61a9c480e16"
        },
        "downloads": 98,
        "filename": "freezer-3.0.0.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "532d7cd2ce3cee56d4b18aa8d7dcc82c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 853083,
        "upload_time": "2016-09-15T22:11:08",
        "url": "https://files.pythonhosted.org/packages/e6/9a/0b4e210c2f437295bf93f9ba570dd59c1efda999a435f0130856ab5deacc/freezer-3.0.0.0rc1.tar.gz"
      }
    ],
    "3.0.0.0rc2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7103eaaa2e8f8504b91aa96faca5c5e6",
          "sha256": "114ece59e4f493267591788a5742b7b5731ba77f73b27327d5be0ed134c06a26"
        },
        "downloads": 87,
        "filename": "freezer-3.0.0.0rc2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "7103eaaa2e8f8504b91aa96faca5c5e6",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 202589,
        "upload_time": "2016-09-28T19:48:13",
        "url": "https://files.pythonhosted.org/packages/5e/00/d377056bcfcebe34efa5d3269ff93a7f6c90ff0c8726dbea02d0b6477108/freezer-3.0.0.0rc2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "77d005d6a0ba36fef2eebfa8d6ee602f",
          "sha256": "22dc17fa0a9e09256922b036e852676788f014cb6275f67c847a1d6c963c2726"
        },
        "downloads": 95,
        "filename": "freezer-3.0.0.0rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "77d005d6a0ba36fef2eebfa8d6ee602f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 851273,
        "upload_time": "2016-09-28T19:48:18",
        "url": "https://files.pythonhosted.org/packages/9f/b2/5fba61d0e7ca7b91f96ce8d9b2412d1b4772ad4a9087d5e2d8bbf99a56f3/freezer-3.0.0.0rc2.tar.gz"
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cd890160fc1d777618840ab22318e3c9",
          "sha256": "656075bd3efa35ac04c0692522133c5501927d5937c4714344fb54de6f87dd97"
        },
        "downloads": 0,
        "filename": "freezer-3.0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd890160fc1d777618840ab22318e3c9",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 202652,
        "upload_time": "2017-05-24T08:49:42",
        "url": "https://files.pythonhosted.org/packages/4c/cb/3a61a9837fc479b2a609bc8a3ccf37e80b7d027380fa4a8470d54b5264ca/freezer-3.0.1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "bb9d10dc2fb591ff3b499e17a5e433d4",
          "sha256": "61fd2ec8bbe43e2b1d079883e1b4abba37e859fcad40317ebf375faedd7fa93a"
        },
        "downloads": 0,
        "filename": "freezer-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bb9d10dc2fb591ff3b499e17a5e433d4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 850483,
        "upload_time": "2017-05-24T08:49:47",
        "url": "https://files.pythonhosted.org/packages/d6/1b/ea69e5793d05cbb26a7a8f78b60a45316987de132949f1671d5a1d510871/freezer-3.0.1.tar.gz"
      }
    ],
    "4.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dc4dd37b344d867d248a77d2bdd97f3b",
          "sha256": "38db0ac0da387850d0e5c55fbb64fdc61ba2904a19c1a8a8509e8b1b42c12bbe"
        },
        "downloads": 18,
        "filename": "freezer-4.0.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc4dd37b344d867d248a77d2bdd97f3b",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 202127,
        "upload_time": "2017-02-22T13:42:09",
        "url": "https://files.pythonhosted.org/packages/7e/cc/01fe3fb7c05515d4472267938bd0934e294cfbb02186a5df1ac3b512bb34/freezer-4.0.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "14f25f985921eeab6c989485ca96f53a",
          "sha256": "b24840c3b6e6e37647f21328c8455e5f210e77bdda4e800c2e2c035cf981d2f3"
        },
        "downloads": 22,
        "filename": "freezer-4.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "14f25f985921eeab6c989485ca96f53a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 860757,
        "upload_time": "2017-02-22T13:42:11",
        "url": "https://files.pythonhosted.org/packages/0a/fe/b1078b1432ffd808b4583ad4acd1cca809cc66d5a1a498dc572aeb595f8f/freezer-4.0.0.tar.gz"
      }
    ],
    "4.0.0.0b2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9e0f923e303e3153bf99feed276dd067",
          "sha256": "9e3bebe485ede71c5a00f5e1d5f94c9d6d9c3e62defd403411eb5cd7b442f1c9"
        },
        "downloads": 165,
        "filename": "freezer-4.0.0.0b2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e0f923e303e3153bf99feed276dd067",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 184723,
        "upload_time": "2016-12-15T12:53:03",
        "url": "https://files.pythonhosted.org/packages/00/6c/a937b50f71be41c4045c5b84372979f408c602e465b0308fb5450018772f/freezer-4.0.0.0b2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "920280d554b476e093c18c273328f28a",
          "sha256": "ea9226e740cb23cf60bfe136977ce213950a177755f6f40309dc46b79af71c43"
        },
        "downloads": 172,
        "filename": "freezer-4.0.0.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "920280d554b476e093c18c273328f28a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 849251,
        "upload_time": "2016-12-15T12:53:06",
        "url": "https://files.pythonhosted.org/packages/2f/3e/c5b5028aa4e2475d098f2986ebf4281405849820723142414f58ea0ef157/freezer-4.0.0.0b2.tar.gz"
      }
    ],
    "4.0.0.0b3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "89ebfb23db1870da33d334d19500e0a0",
          "sha256": "336442692c6e8d586e34ed68f3fbebc5c036e55fa4693bd43f7928bec0078992"
        },
        "downloads": 9,
        "filename": "freezer-4.0.0.0b3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "89ebfb23db1870da33d334d19500e0a0",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 202239,
        "upload_time": "2017-01-25T20:00:42",
        "url": "https://files.pythonhosted.org/packages/f2/ad/407706617e3e67d57fb4c802a472a02d6d0a28ed29a8fc4d26c51208153e/freezer-4.0.0.0b3-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d63caaecf6d4b591d244fc00c46d1155",
          "sha256": "60742bd53364576960ff2ee9d90ea7ef864e204ea20cc6725807edc20785a740"
        },
        "downloads": 12,
        "filename": "freezer-4.0.0.0b3.tar.gz",
        "has_sig": false,
        "md5_digest": "d63caaecf6d4b591d244fc00c46d1155",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 862541,
        "upload_time": "2017-01-25T20:00:45",
        "url": "https://files.pythonhosted.org/packages/35/72/97a791b9f5d2643576c7ceb8afbce09e6ee1a726de636218d5f46eb229ea/freezer-4.0.0.0b3.tar.gz"
      }
    ],
    "4.0.0.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "24081e7e72a2fd3989a2519d157e0e10",
          "sha256": "c066ce256afa6603933a0a23b095df01e9a85a773b3c39657a30af4f5d1ea485"
        },
        "downloads": 13,
        "filename": "freezer-4.0.0.0rc1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "24081e7e72a2fd3989a2519d157e0e10",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 202227,
        "upload_time": "2017-02-02T21:52:08",
        "url": "https://files.pythonhosted.org/packages/3f/ee/efcbaa8f69b61d5f95edaafd0597ad4ee3bfac82670ceebb94e56ce8d2a4/freezer-4.0.0.0rc1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "363964068ae6353443feb60499a91188",
          "sha256": "a0ee2027792fd576dbd26ca325f39edab5f121c1fbc465719c0663455069ece7"
        },
        "downloads": 11,
        "filename": "freezer-4.0.0.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "363964068ae6353443feb60499a91188",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 860740,
        "upload_time": "2017-02-02T21:52:12",
        "url": "https://files.pythonhosted.org/packages/fa/df/6e9a8097de3e8f1357ed3f63ffd27a5ca0357fd55350bb159377d91e09f8/freezer-4.0.0.0rc1.tar.gz"
      }
    ],
    "4.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b188ddc8e20edb6e3d74bfef22ef47f1",
          "sha256": "7da868bee931def1cf7027585cc10792d22f29f6c49f27f072e843879ba2d3e0"
        },
        "downloads": 0,
        "filename": "freezer-4.0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "b188ddc8e20edb6e3d74bfef22ef47f1",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 202712,
        "upload_time": "2017-05-23T16:34:41",
        "url": "https://files.pythonhosted.org/packages/66/69/bd72d136fff7fdd8d1d467e0c63f048e9916b175b75d57204eebd98c2242/freezer-4.0.1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "611c0b372101bb87515f0271dbf19f63",
          "sha256": "8d7e7cb5b6a615c2b3e43e9c6ae0dec27a287f82453f1475778207d38843e7ca"
        },
        "downloads": 0,
        "filename": "freezer-4.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "611c0b372101bb87515f0271dbf19f63",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 864129,
        "upload_time": "2017-05-23T16:34:44",
        "url": "https://files.pythonhosted.org/packages/95/4b/2ce4c515eb12c4b1867f14dc1dcb46a4cef5eb9b21c4b4ec3d582288fa94/freezer-4.0.1.tar.gz"
      }
    ],
    "5.0.0.0b1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a1ba8789da309d120d938eed2be39509",
          "sha256": "765aa672d979bc44421ab6bd97143ac5682bf9ee795134f47fe5a6fe03900496"
        },
        "downloads": 0,
        "filename": "freezer-5.0.0.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "a1ba8789da309d120d938eed2be39509",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 870955,
        "upload_time": "2017-04-12T18:51:27",
        "url": "https://files.pythonhosted.org/packages/8e/c0/1341fdc68a99cf72edb818f090f5b6e420c7b01067337e9ae225a1009308/freezer-5.0.0.0b1.tar.gz"
      }
    ],
    "5.0.0.0b2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "568e7b31ec631d350fffde06923c3f65",
          "sha256": "7db76ac90e9875fac6b2ad0b5527294ef16d7d2d83d1375f5043ea46cc02788a"
        },
        "downloads": 0,
        "filename": "freezer-5.0.0.0b2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "568e7b31ec631d350fffde06923c3f65",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 218082,
        "upload_time": "2017-06-08T18:25:40",
        "url": "https://files.pythonhosted.org/packages/b2/67/ef46e73d522ea432d9ff6417927c736fdbaef710bb24a90a1afc20f26e74/freezer-5.0.0.0b2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1b58dba981ac40b1835258b4b0167fa6",
          "sha256": "f678bfccc26eadbf9d07cd445e51556749c6567bc205870f57a6ab8384fa60ab"
        },
        "downloads": 0,
        "filename": "freezer-5.0.0.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "1b58dba981ac40b1835258b4b0167fa6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 886106,
        "upload_time": "2017-06-08T18:25:45",
        "url": "https://files.pythonhosted.org/packages/e8/82/fafbe1401a6e2a66989ef14158fe59105fda5b1ee663f52adcf7fcec8580/freezer-5.0.0.0b2.tar.gz"
      }
    ],
    "5.0.0.0b3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5a9f2b0c66a639ec54eff113d92a3d90",
          "sha256": "f338f30425534ce3d7f9dff685ee14852ba3033e6861dc23d21a853b4edcf147"
        },
        "downloads": 0,
        "filename": "freezer-5.0.0.0b3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a9f2b0c66a639ec54eff113d92a3d90",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 221749,
        "upload_time": "2017-07-26T13:32:26",
        "url": "https://files.pythonhosted.org/packages/3d/7d/c540857bad8da048771bcb6e72cc6d3add7e1a56c05a9b623eca263eff19/freezer-5.0.0.0b3-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6fc1f40aa46851a950cd71bfe361fb00",
          "sha256": "6d56bff7717578c87f69db67995dc309072ff4e6500b912664ebc35e8b05c082"
        },
        "downloads": 0,
        "filename": "freezer-5.0.0.0b3.tar.gz",
        "has_sig": false,
        "md5_digest": "6fc1f40aa46851a950cd71bfe361fb00",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 889899,
        "upload_time": "2017-07-26T13:32:29",
        "url": "https://files.pythonhosted.org/packages/a9/35/cbda3832ddf955db697340cb447270b4997fe167f829f2b015a45457c363/freezer-5.0.0.0b3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b188ddc8e20edb6e3d74bfef22ef47f1",
        "sha256": "7da868bee931def1cf7027585cc10792d22f29f6c49f27f072e843879ba2d3e0"
      },
      "downloads": 0,
      "filename": "freezer-4.0.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "b188ddc8e20edb6e3d74bfef22ef47f1",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 202712,
      "upload_time": "2017-05-23T16:34:41",
      "url": "https://files.pythonhosted.org/packages/66/69/bd72d136fff7fdd8d1d467e0c63f048e9916b175b75d57204eebd98c2242/freezer-4.0.1-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "611c0b372101bb87515f0271dbf19f63",
        "sha256": "8d7e7cb5b6a615c2b3e43e9c6ae0dec27a287f82453f1475778207d38843e7ca"
      },
      "downloads": 0,
      "filename": "freezer-4.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "611c0b372101bb87515f0271dbf19f63",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 864129,
      "upload_time": "2017-05-23T16:34:44",
      "url": "https://files.pythonhosted.org/packages/95/4b/2ce4c515eb12c4b1867f14dc1dcb46a4cef5eb9b21c4b4ec3d582288fa94/freezer-4.0.1.tar.gz"
    }
  ]
}