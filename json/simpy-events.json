{
  "info": {
    "author": "Lo\u00efc Peron",
    "author_email": "peronloic.us@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "simpy_events\n=======================\n\n|license| |python version| |build-status| |docs| |coverage| |pypi package|\n\n.. |license| image:: https://img.shields.io/github/license/loicpw/simpy_events.svg\n.. |build-status| image:: https://travis-ci.org/loicpw/simpy_events.svg?branch=master\n    :target: https://travis-ci.org/loicpw/simpy_events\n.. |docs| image:: https://readthedocs.org/projects/simpy-events/badge/?version=latest\n    :target: http://simpy-events.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n.. |coverage| image:: https://coveralls.io/repos/github/loicpw/simpy_events/badge.svg?branch=master\n    :target: https://coveralls.io/github/loicpw/simpy_events?branch=master\n.. |pypi package| image:: https://badge.fury.io/py/simpy-events.svg\n    :target: https://badge.fury.io/py/simpy-events\n.. |python version| image:: https://img.shields.io/pypi/pyversions/simpy_events.svg\n   :target: https://pypi.python.org/pypi/simpy_events\n\n\nThis project was created in order to ease code reusing when creating \nsimulations with `simpy`_\n\nIt provides an event framework the way python `logging`_ module works:\n\n\n\n\n- module.py:\n\n.. code-block:: python\n\n    from simpy_events import Event\n    ev = Event('foo.bar')\n\n    def process(env):\n        value = yield ev(env.timeout(1, value='a')))\n\n- other_module.py: \n\n.. code-block:: python\n\n    from simpy_events import Event\n    top_event = Event('foo')\n\n    @top_event.callbacks\n    def when_processing_event(origin, event, *args, **kw):\n        print('processing the event, origin is \"{origin}\"'\n              ', event value is \"{value}\".format(origin=origin,\n                                                 value=event.value))\n\n- main.py:\n\n.. code-block:: python\n\n    import simpy\n    import module \n    import other_module\n    env = simpy.Environment()\n    env.process(module.process(env))\n    env.run()\n\n.. code-block:: bash\n\n    $ python main.py\n    processing the event, origin is \"Event(foo.bar)\", event value is \"a\"\n\nThe event core system is the same as python `logging`_ module, but it\ndoesn't use it. The code has been duplicated and modified so it works\nwhatever the runtime logging setup is.\n\n.. warning:: works only in python 3\n\ninstall and test\n=======================\n\nproduction install\n********************\n\nusing pip:\n\n.. code-block:: bash\n\n    $ pip install -r requirements.txt\n    $ pip install .\n\nThere is also a makefile in the project root directory, which does the\nsame:\n\n.. code-block:: bash\n\n    $ make install\n\nrun the tests\n******************\n\nUse the makefile in the project root directory:\n\n.. code-block:: bash\n\n    $ make test\n\nThis runs the tests generating a coverage html report\n\ndev install\n****************\n\nThere is a makefile in the project root directory:\n\n.. code-block:: bash\n\n    $ make dev\n\nUsing pip, the above is equivalent to:\n\n.. code-block:: bash\n\n    $ pip install -r requirements-dev.txt                                             \n    $ pip install -e .\n\n\n.. note:: in order to keep requirements file alphabetically sorted and\n          keep comments, use the makefile to **pip freeze** which will\n          generate a **.pipfreeze.txt** file containing sorted result,\n          and then edit the actual files manually:\n\n          .. code-block:: bash\n\n            $ make freeze\n\nbuild the doc\n******************\n\nThe documentation is made with sphinx, you can use the makefile in the\nproject root directory to build html doc:\n\n.. code-block:: bash\n\n    $ make doc\n\nDocumentation\n=======================\n\nDocumentation on `Read The Docs`_.\n\nMeta\n=======================\n\nLo\u00efc Peron - peronloic.us@gmail.com\n\nDistributed under the MIT license. See ``LICENSE.txt`` for more information.\n\nhttps://github.com/loicpw\n\n\n.. _simpy: https://simpy.readthedocs.org\n.. _logging: https://docs.python.org/3.5/library/logging.html#module-logging\n.. _Read The Docs: http://simpy-events.readthedocs.io/en/latest/\n\n\n\n\n\n",
    "docs_url": null,
    "download_url": "https://github.com/loicpw/simpy_events.git",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/loicpw/simpy_events",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "simpy-events",
    "platform": "",
    "project_url": "https://pypi.org/project/simpy-events/",
    "release_url": "https://pypi.org/project/simpy-events/0.0.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "event types with simpy to ease code reusing.",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5d17ec1c266ee3804427a0478d244c53",
          "sha256": "cbf5a64987ae04a768dc736a2141d985e9e7bdadcb202afec52ad9ad1e3c4291"
        },
        "downloads": -1,
        "filename": "simpy_events-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5d17ec1c266ee3804427a0478d244c53",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 16911,
        "upload_time": "2018-01-09T10:11:39",
        "url": "https://files.pythonhosted.org/packages/9a/94/968b3726617ad4547b9ce35e839ef189507696479329123212890991c4ad/simpy_events-0.0.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3abf34c72fef53b6916e13a5fe455f81",
          "sha256": "aacb4732fad25b971e75e8738921e0335b93ff4bac9bd6ec5e7ad9290248cd00"
        },
        "downloads": -1,
        "filename": "simpy_events-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3abf34c72fef53b6916e13a5fe455f81",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15267,
        "upload_time": "2018-01-09T10:11:42",
        "url": "https://files.pythonhosted.org/packages/5e/33/059ea9f46beb39815e7dd67c642a06f7cc24a59c6626a925d2f438f9670b/simpy_events-0.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5d17ec1c266ee3804427a0478d244c53",
        "sha256": "cbf5a64987ae04a768dc736a2141d985e9e7bdadcb202afec52ad9ad1e3c4291"
      },
      "downloads": -1,
      "filename": "simpy_events-0.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5d17ec1c266ee3804427a0478d244c53",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 16911,
      "upload_time": "2018-01-09T10:11:39",
      "url": "https://files.pythonhosted.org/packages/9a/94/968b3726617ad4547b9ce35e839ef189507696479329123212890991c4ad/simpy_events-0.0.2-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "3abf34c72fef53b6916e13a5fe455f81",
        "sha256": "aacb4732fad25b971e75e8738921e0335b93ff4bac9bd6ec5e7ad9290248cd00"
      },
      "downloads": -1,
      "filename": "simpy_events-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3abf34c72fef53b6916e13a5fe455f81",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15267,
      "upload_time": "2018-01-09T10:11:42",
      "url": "https://files.pythonhosted.org/packages/5e/33/059ea9f46beb39815e7dd67c642a06f7cc24a59c6626a925d2f438f9670b/simpy_events-0.0.2.tar.gz"
    }
  ]
}