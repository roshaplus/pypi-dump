{
  "info": {
    "author": "Gandi",
    "author_email": "feedback@gandi.net",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Internet :: Name Service (DNS)"
    ],
    "description": "\ndnsknife: a DNS tool\n====================\n\nQuick overview:\n---------------\n\n.. code:: python\n\n    >>> from dnsknife import resolver\n    >>> ans = resolver.query('example.com', 'A', dnssec=True)\n\nSpecific queries shortcuts:\n\n.. code:: python\n\n    >>> import dnsknife\n    >>> print dnsknife.Checker('example.com').mx()\n    []\n\n    >>> print dnsknife.Checker('example.com').spf()\n    None\n\n    >>> print dnsknife.Checker('example.com').txt()\n    $Id: example.com 4415 2015-08-24 20:12:23Z davids $\n    v=spf1 -all\n\n\nChecking a domain TXT record is installed, looking at each domain NS (no\nlocal caches) for a match:\n\n.. code:: python\n\n    >>> from dnsknife import Checker\n    >>> Checker('example.com', direct=True).has_txt('dbef8938bef', ignore_case=True)\n    False\n\nQuerying a few dozen things at the same time:\n\n.. code:: python\n\n    >>> from dnsknife.resolver import Resolver\n    >>> with Resolver(timeout=2) as r:\n            a = r.query_at('www.example.com', 'A', '1.2.3.4')\n            ...\n            x = r.query_at('www.example.com', 'A', '1.2.3.4')\n\n    >>> print a.get()\n    <dns.resolver.Answer at 0x7f6e3d398ad0>\n\n    >>> print x.get()\n    <dns.resolver.Answer at 0x7f6e3d398bd0>\n\nScanning a zone:\n\n.. code:: python\n\n    In [16]: from dnsknife.scanner import Scanner\n    In [9]: time list(scanner.Scanner('google.com').scan())\n    CPU times: user 476 ms, sys: 28 ms, total: 504 ms\n    Wall time: 2.4 s\n    Out[9]: \n    [<DNS mail.google.com. IN CNAME RRset>,\n     <DNS support.google.com. IN CNAME RRset>,\n     <DNS google.com. IN A RRset>,\n     <DNS google.com. IN AAAA RRset>,\n     <DNS google.com. IN NS RRset>,\n     <DNS google.com. IN MX RRset>,\n     <DNS google.com. IN TXT RRset>,\n     <DNS www.google.com. IN A RRset>,\n     <DNS www.google.com. IN AAAA RRset>,\n     <DNS googlemail.l.google.com. IN A RRset>,\n     <DNS googlemail.l.google.com. IN AAAA RRset>,\n     <DNS mail.google.com. IN TXT RRset>,\n     <DNS corp.google.com. IN A RRset>,\n     <DNS corp.google.com. IN AAAA RRset>,\n     <DNS corp.google.com. IN NS RRset>,\n     <DNS admin.google.com. IN A RRset>,\n     <DNS admin.google.com. IN AAAA RRset>,\n     <DNS www3.l.google.com. IN A RRset>,\n     <DNS www3.l.google.com. IN AAAA RRset>,\n     <DNS googlemail.l.google.com. IN A RRset>,\n     <DNS googlemail.l.google.com. IN AAAA RRset>,\n     <DNS www3.l.google.com. IN A RRset>,\n     <DNS www3.l.google.com. IN AAAA RRset>,\n     <DNS ns4.google.com. IN A RRset>,\n     <DNS ns2.google.com. IN A RRset>,\n     <DNS ns1.google.com. IN A RRset>,\n     <DNS ns3.google.com. IN A RRset>,\n     <DNS alt4.aspmx.l.google.com. IN A RRset>,\n     <DNS alt4.aspmx.l.google.com. IN AAAA RRset>,\n     <DNS aspmx.l.google.com. IN A RRset>,\n     <DNS aspmx.l.google.com. IN AAAA RRset>,\n     <DNS alt2.aspmx.l.google.com. IN A RRset>,\n     <DNS alt2.aspmx.l.google.com. IN AAAA RRset>,\n     <DNS alt1.aspmx.l.google.com. IN A RRset>,\n     <DNS alt1.aspmx.l.google.com. IN AAAA RRset>,\n     <DNS alt3.aspmx.l.google.com. IN A RRset>,\n     <DNS alt3.aspmx.l.google.com. IN AAAA RRset>,\n     <DNS ns2.google.com. IN A RRset>,\n     <DNS ns1.google.com. IN A RRset>,\n     <DNS ns3.google.com. IN A RRset>,\n     <DNS ns4.google.com. IN A RRset>]\n\n\nIt can be used for DNSSEC lookups, implements a few CDS/CDNSKEY drafts:\n-----------------------------------------------------------------------\n\n.. code:: python\n\n    >>> c = Checker('example.com', dnssec=True)\n    >>> print c.spf()\n    None\n\n    >>> Checker('ten.pm').cdnskey()\n\n    ---------------------------------------------------------------------------\n    BadCDNSKEY                                Traceback (most recent call last)\n    ...\n\n    BadCDNSKEY: 1324 did not sign DNSKEY RR\n\n.. code:: python\n\n    >>> from dnsknife import dnssec, resolver\n    >>> keys = resolver.query('example.com', 'DNSKEY')\n    >>> dnssec.signed_by(ans, keys[0])\n    True\n\n.. code:: python\n\n    >>> dnssec.signers(dnsknife.Checker('pm.', dnssec=True)\n                       .query_relative('', 'DNSKEY'))\n    {<DNS name pm.>: [35968, 60859]}\n\n.. code:: python\n\n    >>> dnssec.trusted(ans)\n    True\n\n\nFinally it implements TPDA - the draft_ can be found in docs_.\n----------------------------------------------------------------\n\n.. _docs: docs/\n.. _draft: docs/extending_registrar_functions.txt\n\nA third party provider wanting to change customer NS:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    >>> from dnsknife import tpda\n\n    >>> # initialize with private key from repo:\n    >>> client = tpda.Client('ten.pm', 'dnsknife/tests/test.key')\n\n    >>> # generate url for domain\n    >>> URI = client.nameservers_uri('whe.re', ['ns1.ten.pm','ns2.ten.pm'])\n\nA DNS operator/registrar validating inbound params:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    >>> tpda.validate_URI(URI)\n    'http://partners.gandi.net/nameservers/v1?source=ten.pm&domain=whe.re&expires=20160415000918&ns=ns1.ten.pm&ns=ns2.ten.pm'\n\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/gandi/dnsknife",
    "keywords": "dns lookup dnssec tpda rdap",
    "license": "GPLv3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "dnsknife",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/dnsknife/",
    "release_url": "https://pypi.org/project/dnsknife/0.11/",
    "requires_python": null,
    "summary": "DNS tools",
    "version": "0.11"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2575bb7a71a3491a8f54576ec1549dfa",
          "sha256": "4dbe91d7828b251a81f3a9ff54b2526d381cf1a17300872973bccb308b2817d7"
        },
        "downloads": 132,
        "filename": "dnsknife-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2575bb7a71a3491a8f54576ec1549dfa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9379,
        "upload_time": "2016-04-16T18:28:26",
        "url": "https://files.pythonhosted.org/packages/cc/b7/a970761ec33d794c253ce5744ade888a60c126f932e8b026f89c4e3d3c16/dnsknife-0.1.tar.gz"
      }
    ],
    "0.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a595bffc9e917ecc54fb0d2fc68a18e3",
          "sha256": "30ef07f4b6e93b5f5e2895407de1c701838ca99428c5d1328f360bd868d77a85"
        },
        "downloads": 85,
        "filename": "dnsknife-0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "a595bffc9e917ecc54fb0d2fc68a18e3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14902,
        "upload_time": "2016-09-23T19:36:59",
        "url": "https://files.pythonhosted.org/packages/72/c3/296577053a18662cbe5e86b4f087475a1d54746edcc35239bbc55973b0e7/dnsknife-0.10.tar.gz"
      }
    ],
    "0.11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "52a0554a9607f2c88d317636a38d0fb8",
          "sha256": "fcda1994c9655d84604e0e736418a3416255e021724be87df5d9aa14436953d1"
        },
        "downloads": 132,
        "filename": "dnsknife-0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "52a0554a9607f2c88d317636a38d0fb8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15301,
        "upload_time": "2016-10-06T21:36:36",
        "url": "https://files.pythonhosted.org/packages/02/db/7e13c448167e37046b785ef165a2ba022d14dffec1bf5950da80e6f0ed45/dnsknife-0.11.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3a96bc137da74f590e1c48bc6a244155",
          "sha256": "8bdfe5d1f1acfbeeb4ac985a21e6fcdc2955c4fc9459f4e82cfacdf9ccba71f4"
        },
        "downloads": 154,
        "filename": "dnsknife-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3a96bc137da74f590e1c48bc6a244155",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10983,
        "upload_time": "2016-05-25T02:05:11",
        "url": "https://files.pythonhosted.org/packages/f8/8d/c88588be512e90c6fefa38d182eef598bd4f76d3d3a4ebd4126d96dff0f6/dnsknife-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "268f5e5e411e2b4be324b97a23c76c64",
          "sha256": "22696663603d8189c867266fc0f969d78e6d921f19f03c411e115cecdc4b2701"
        },
        "downloads": 136,
        "filename": "dnsknife-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "268f5e5e411e2b4be324b97a23c76c64",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12844,
        "upload_time": "2016-06-02T23:10:23",
        "url": "https://files.pythonhosted.org/packages/1e/2d/a940438daedfd5332a746e2d93701032b435ecdf4057f4bca41c78dc890d/dnsknife-0.3.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "07379f441436d38a3e9841ace481b102",
          "sha256": "6f4144416098ee4bba51d8b7ab710c32535efa9a17d0d7084832aff782dd06a5"
        },
        "downloads": 138,
        "filename": "dnsknife-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "07379f441436d38a3e9841ace481b102",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12934,
        "upload_time": "2016-06-03T16:37:47",
        "url": "https://files.pythonhosted.org/packages/ed/4e/29515990811e65212462ac6c5396f4cb2fdd1dd1aa9d6decb0bb2808cee2/dnsknife-0.4.tar.gz"
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7764c0aca0b77548a77373d856b191f7",
          "sha256": "cf99cc9ab3defa72bf21c32bb328bbdf54754f700392a88f22f593fd36f421a2"
        },
        "downloads": 140,
        "filename": "dnsknife-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7764c0aca0b77548a77373d856b191f7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12919,
        "upload_time": "2016-06-07T20:35:00",
        "url": "https://files.pythonhosted.org/packages/94/37/e1aa1fff34875733b9dd44fff8286f88c13e63fb1e4f25a3df3418f4f7f5/dnsknife-0.5.tar.gz"
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b95f77198daba3ee2aee7b0458df16b4",
          "sha256": "2a2c547a7d3959eddd7d82fd398179a5ffad692e6642478d6e0a19354d4a8355"
        },
        "downloads": 138,
        "filename": "dnsknife-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b95f77198daba3ee2aee7b0458df16b4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13703,
        "upload_time": "2016-06-10T23:27:54",
        "url": "https://files.pythonhosted.org/packages/1c/ab/4653622d4f156687b3d301907de75f0588052c7c6a4ca1bd1030b2097e43/dnsknife-0.6.tar.gz"
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6cbee6f9750e31508247c660661207b1",
          "sha256": "10fe4b48bff5b9267a01fa958de9812525add92c3bd629e64f0f9dc6509fafdd"
        },
        "downloads": 133,
        "filename": "dnsknife-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "6cbee6f9750e31508247c660661207b1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13780,
        "upload_time": "2016-06-11T00:34:25",
        "url": "https://files.pythonhosted.org/packages/ca/9d/7b3f532da125340e7b1a3d555707215f865262841024795a79936f0e77cc/dnsknife-0.7.tar.gz"
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2cc3c70527a6646bd0865588695aaa40",
          "sha256": "b092013f5e2bee8ebaae604860e59af1388633bf2eaea2412700fc4e384e0ec2"
        },
        "downloads": 144,
        "filename": "dnsknife-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "2cc3c70527a6646bd0865588695aaa40",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13881,
        "upload_time": "2016-06-12T23:30:18",
        "url": "https://files.pythonhosted.org/packages/d1/b1/c015d61babd9bf5a25ea6a752fadd2d8d0f9eed5ebc19a9f8c065858bfe4/dnsknife-0.8.tar.gz"
      }
    ],
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3d55789c7601c75e45b831003805c426",
          "sha256": "8d32f0b787325da9d9110aa5fd9b0df46157902a38b2e4b361afcf729bf4540c"
        },
        "downloads": 619,
        "filename": "dnsknife-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "3d55789c7601c75e45b831003805c426",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14175,
        "upload_time": "2016-06-24T04:14:29",
        "url": "https://files.pythonhosted.org/packages/35/7d/7e78a6506f34e9dac5fd6675c974bc114adff0659c77855506a389118f52/dnsknife-0.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "52a0554a9607f2c88d317636a38d0fb8",
        "sha256": "fcda1994c9655d84604e0e736418a3416255e021724be87df5d9aa14436953d1"
      },
      "downloads": 132,
      "filename": "dnsknife-0.11.tar.gz",
      "has_sig": false,
      "md5_digest": "52a0554a9607f2c88d317636a38d0fb8",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15301,
      "upload_time": "2016-10-06T21:36:36",
      "url": "https://files.pythonhosted.org/packages/02/db/7e13c448167e37046b785ef165a2ba022d14dffec1bf5950da80e6f0ed45/dnsknife-0.11.tar.gz"
    }
  ]
}