{
  "info": {
    "author": "M. Massenzio",
    "author_email": "marco@alertavert.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3"
    ],
    "description": "filecrypt - OpenSSL file encryption\n===================================\n\n  Author    [M. Massenzio](https://github.com/massenz)\n  --------- ------------------------------------------------\n  Version   0.4.0\n  Updated   2017-08-29\n  Code      [github](https://github.com/massenz/filecrypt)\n\noverview\n========\n\nUses OpenSSL library to encrypt a file using a private/public key pair\nand a one-time secret.\n\nA full description of the process can be found\n[here](https://github.com/massenz/HOW-TOs/blob/master/HOW-TO%20Encrypt%20archive.rst).\n\nSee also this [blog\nentry](https://codetrips.com/2016/07/13/filecrypt-openssl-file-encryption/)\nfor more details.\n\ninstallation\n============\n\nInstall directly from PyPi:\n\n    pip install crytto\n\nPlease note the **package name** (`filecrypt` was conflicting with the\nexisting `FileCrypt` package name, and `crypto` was already taken).\n\nThis requires OpenSSL to be installed on your machine:\n\n    sudo apt-get install openssl\n\nAlternatively, clone the project from github and follow the instructions\nbelow:\n\n    git clone git@github.com:massenz/filecrypt.git\n\nOnce cloned, you can try out functionality using the `run` script (which\nreplaces the `console-scripts` installed by the package) which takes the\nsame arguments as the [encryption](#encryption) (\\#encryption) command;\nor adding a `-d` flag, will execute the [decryption](#decryption)\ncommand.\n\nOnce all dependencies are installed:\n\n    pip install -r requirements.txt\n\ntests can be run via:\n\n    nosetests tests\n\nconfiguration\n=============\n\nThis uses a YAML file to describe the configuration; by default it\nassumes it is in `/etc/filecrypt/conf.yml` but its location can be\nspecified using the `-f` flag.\n\nThe structure of the `conf.yml` file is as follows:\n\n``` {.yaml}\nkeys:\n     private: sample.pem\n     public: sample.pub\n     secrets: .\n\nstore: keys.csv\n\n##\n# Any option below is optional and can be omitted.\n#\n# Where to store the encrypted file; the folder MUST already exist and the user\n# have write permissions.  Defaults to the current directory; can be overridden\n# using --out on the command line.\n#\n#out: /data/store/file\n\n# Whether to securely delete the original plaintext file; by default it is kept.\n# It can be overridden by using `--keep` when running `encrypt`.  True by default.\nshred: true\n\n# Optional logging configuration - mostly useful to\n# diagnose issues.  Default is WARN level.\nlogging:\n   format: \"%(asctime)s [%(levelname)-5s] %(message)s\"\n   level: WARN\n```\n\nThe `private`/`public` keys are a key-pair generated using the\n`openssl genrsa` command; the encryption key used to actually encrypt\nthe file will be created in the `secrets` folder, and afterward\nencrypted using the `public` key and stored in the location provided.\n\nThe name will be `pass-key-nnnn.enc`, where `nnnn` will be a random\nvalue between `1000` and `9999`, that has not been already used for a\nfile in that folder.\n\nThe name of the secret passphrase can also be defined by the user, using\nthe `--secret` option (it will be left unmodified):\n\n-   if it does not exist a random secure one will be created, used for\n    encryption, then encrypted and saved with the given path, while the\n    plain-text temporary version securely destroyed; OR\n\n-   if it is the name of an already existing file, it will be decrypted,\n    used to encrypt the file, then left **unchanged** on disk.\n\n**NOTE** we recommend NOT to re-use encryption passphrases, but always\ngenerate a new secret.\n\n**NOTE** it is currently not possible to specify a plain-text\npassphrase: we always assume that the given file has been encrypted\nusing the `private` key.\n\nThe `store` file is a CSV list of:\n\n    \"Original archive\",\"Encryption key\",\"Encrypted archive\"\n    201511_data.tar.gz,/opt/store/pass-key-001.enc,201511_data.tar.gz.enc\n\na new line will be appended at the end; any comments will be left\nunchanged.\n\nusage\n-----\n\n### keypair generation\n\nWe do not provide the means to generate them (this will be done at a\nlater stage), but for now they can be generated using:\n\n    openssl genrsa -out ./key.pem 2048\n    openssl rsa -in key.pem -out key.pub -outform PEM -pubout\n\ntheir path can then be specified in the `conf.yaml` file.\n\n### encryption\n\nAlways use the `--help` option to see the most up-to-date options\navailable; anyway, the basic usage is:\n\n    encrypt my_secret.txt\n\nwhich will create a `my_secret.txt.enc` file in the current directory,\nunless a different one has been specified using the `out` option in\n`/etc/filecrypt/conf.yml`.\n\nA completely random and cryptographically secure key will have been\ncreated; used; and then encrypted to the `secrets` location, its full\npath stored in the CSV keystore named in the `store` option of the YAML\nconfiguration file.\n\nFinally, the plaintext version of this key will have been safely\ndestroyed.\n\nA more elaborate one (see the example configuration in\n`examples/example_conf.yaml`):\n\n    encrypt -f example_conf.yaml -s secret-key.enc plaintext.txt\n\nwill create an encrypted copy of the file to be stored as\n`/data/store/plaintext.txt.enc`; the original file **will not** be\nsecurely destroyed (using `shred`); and the encryption key name and\nlocation (the current directory, and `secret-key.enc`) to be stored in\nthe `keys.csv` file:\n\n``` {.yaml}\n# Fragment of example_conf.yaml\n...\nstore: keys.csv\nout: /data/store\nshred: false\n```\n\n**Specifying the encryption destination**\n\nBy default, the encrypted filename has the same name as the plaintext\nfile, with the `.enc` extension appended; and it is saved to either the\ncurrent directory or the `out` location specified in the configuration\nYAML.\n\nBy using the `--out` (`-o`) option, it is possible to specify the\nlocation of the output encrypted file, either absolute, or relative to\nthe current directory:\n\n    encrypt -o mysecret.ser my_secret.doc\n\nor:\n\n    encrypt -o secret/files/mysecret.ser my_secret.doc\n\nRegardless of the means of specifying the input/outpup files, the full\npath to both files will **always** be used in the CSV keystore,\nregardless of whether a relative or absolute path was specified on the\ncommand line.\n\n**IMPORTANT** &gt;We recommend testing your configuration and\ncommand-line options on test files: `shred` erases files in a *terminal*\nway that is **not** recoverable: if you mess up, **you will lose data**.\n&gt; &gt;You have been warned.\n\n### decryption\n\nTo decrypt a file that has been encrypted using this utility, `decrypt`\nand pass the name of the encrypted file; it will be decrypted using the\npassed-in secret key (`-s` flag):\n\n    decrypt -f example_conf.yaml -s secret-key.enc plaintext.txt\n\nIf the encryption key (`--secret` or `-s`) is not specified, then the\napplication will try and locate the plaintext file in the keystore\nspecified in the `conf.yaml` using the `store` key:\n\n``` {.yaml}\nstore: keys.csv\n...\n```\n\nand derive the location of the encryption key from the entry, if one is\nfound.\n\nPlease note that **the full absolute path must match** even if only a\nrelative path was given at the command line, as files are always stored\nwith their full path when saved to the key store.\n\nAs with encryption, the `--out` flag can be used to specify the output\nfile; otherwise, the current directory will be used.\n\nThe encrypted file will be left untouched: the `--keep` flag *may* be\nused, but will have no effect and the value of the `shred:` option will\nbe ignored.\n\nAs the encrypted file is already cryptographically secure a simple\n`rm my_secret.doc.enc` will be sufficient to guarantee privacy.\n\n### pruning\n\nThe keystore may grow very large and entries may become obsolete, as\nfiles are deleted: using the `prune_store` script (optionally, giving it\nthe name of the keystore to prune) all entries where either of the files\nare no longer existing will be removed.\n\n**This command may lead to data loss**, however, a copy of the keystore\nis backed up with the `.bak` extension.\n\n**Note** For Decryption, we will not use the value of the `out:` flag in\nthe YAML configuration file, even if specified.\n\nreferences\n----------\n\n-   a [detailed HOW-TO](how-to) with the steps to encrypt a file\n    manually;\n-   the original [Ask\n    Ubuntu](http://askubuntu.com/questions/95920/encrypt-tar-gz-file-on-create)\n    post;\n-   [OpenSSL](https://openssl.org);\n-   [Ubuntu guide to\n    OpenSSL](https://help.ubuntu.com/community/OpenSSL).\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/massenz/filecrypt",
    "keywords": "",
    "license": "Apache2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "crytto",
    "platform": "",
    "project_url": "https://pypi.org/project/crytto/",
    "release_url": "https://pypi.org/project/crytto/0.4.1/",
    "requires_dist": [
      "sh (>=1.11)",
      "PyYAML (>=3.11)"
    ],
    "requires_python": "",
    "summary": "An OpenSSL-based file encryption and decryption utility",
    "version": "0.4.1"
  },
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3b8a5eb748757a2706229177d3d89ac4",
          "sha256": "71864e40915cda7d666362ad488764c8b69923aedad7fd0a843e48946303ad32"
        },
        "downloads": 89,
        "filename": "crytto-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b8a5eb748757a2706229177d3d89ac4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 26647,
        "upload_time": "2016-09-19T01:41:40",
        "url": "https://files.pythonhosted.org/packages/87/9f/d51c281e4e97c367b1868f1180c00bdd37655dc675329eb25d0eeec3bfdc/crytto-0.2.0-py3-none-any.whl"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e0095cb4826db8089b7fde21888d4673",
          "sha256": "8e0313f9eb2d09f9b436840905ea9778c7ac8b4c53a9a3af8daceefdb587480b"
        },
        "downloads": 106,
        "filename": "crytto-0.2.1.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "e0095cb4826db8089b7fde21888d4673",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11217,
        "upload_time": "2016-09-19T15:07:51",
        "url": "https://files.pythonhosted.org/packages/73/dc/d50fae2842d43f841fd575114dabb9e2c5bf41d79ed29acbbb74139079f3/crytto-0.2.1.linux-x86_64.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "53764efff43fb7ea9e065b9e384a9f13",
          "sha256": "6e46e21bef1ecfe3d61d6a61e08e0ce186f79d70a74f713dc06c3e12c9081fbe"
        },
        "downloads": 198,
        "filename": "crytto-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53764efff43fb7ea9e065b9e384a9f13",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 26903,
        "upload_time": "2016-09-19T15:07:49",
        "url": "https://files.pythonhosted.org/packages/a8/99/6a404c388985002cd8b81fdea06622f0a8314fbd7de79bfd57ed1f97bf63/crytto-0.2.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3e227de6d5cdfdd796abf36f08aaddd2",
          "sha256": "bbf1c8ffbb93b2a05cbe6db71f06a6211f019fe442572317a3855e3896593ecf"
        },
        "downloads": 105,
        "filename": "crytto-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3e227de6d5cdfdd796abf36f08aaddd2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10923,
        "upload_time": "2016-09-19T15:07:53",
        "url": "https://files.pythonhosted.org/packages/62/d9/6a54fc631c85da59133d95b774e4c7026580e2996ea8149b7055390371af/crytto-0.2.1.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "78ef6b37a2fe9ee3fadc1afc184d0309",
          "sha256": "377fc18de2dc2f7cc160f3f95f00957548218146072d0695a751d735c70ab3b0"
        },
        "downloads": 0,
        "filename": "crytto-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78ef6b37a2fe9ee3fadc1afc184d0309",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 27101,
        "upload_time": "2017-06-01T04:24:29",
        "url": "https://files.pythonhosted.org/packages/59/d7/3b42c0d83789387f0c3e1a7959a040cc8d6976697ec0c1ea69edf61b3a9d/crytto-0.3.1-py3-none-any.whl"
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "94aaf2efe24478103b15149569358999",
          "sha256": "9c61cb83f2558e4a528d96eb62be67fccecbad27ca0315693cb7a294211763a7"
        },
        "downloads": 0,
        "filename": "crytto-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94aaf2efe24478103b15149569358999",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 28879,
        "upload_time": "2017-08-30T06:09:50",
        "url": "https://files.pythonhosted.org/packages/11/db/bc7ea9c88b0e60f6321e23f3ee093d621e958a9acf660b8a3c54a157fd2a/crytto-0.4.0-py3-none-any.whl"
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "be4cb2695a2456951cab9829722d35eb",
          "sha256": "91af223d626ab0e7293c5a120f418274a8dfa4fc83cf8dfee533372603e7fc83"
        },
        "downloads": 0,
        "filename": "crytto-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be4cb2695a2456951cab9829722d35eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 28889,
        "upload_time": "2017-09-03T22:51:11",
        "url": "https://files.pythonhosted.org/packages/5b/fc/66b2d74a7e1344271ec36f62b58b6915155d366f780aa4eda883c78e6f13/crytto-0.4.1-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "be4cb2695a2456951cab9829722d35eb",
        "sha256": "91af223d626ab0e7293c5a120f418274a8dfa4fc83cf8dfee533372603e7fc83"
      },
      "downloads": 0,
      "filename": "crytto-0.4.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "be4cb2695a2456951cab9829722d35eb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 28889,
      "upload_time": "2017-09-03T22:51:11",
      "url": "https://files.pythonhosted.org/packages/5b/fc/66b2d74a7e1344271ec36f62b58b6915155d366f780aa4eda883c78e6f13/crytto-0.4.1-py3-none-any.whl"
    }
  ]
}