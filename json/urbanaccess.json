{
  "info": {
    "author": "UrbanSim Inc. and Samuel D. Blanchard",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "UrbanAccess\n===========\n\n|Build Status|\n\nA tool for computing GTFS transit and OSM pedestrian networks for\naccessibility analysis.\n\n|Integrated AC Transit and BART transit and pedestrian network travel times for Oakland, CA|\n*Integrated AC Transit and BART transit and pedestrian network travel times for Oakland, CA*\n\nOverview\n========\n\nUrbanAccess is tool for creating multi-modal graph networks for use in\nmulti-scale (e.g. address level to the metropolitan level) transit\naccessibility analyses with the network analysis tool Pandana.\nUrbanAccess uses open data from General Transit Feed Specification\n(GTFS) data to represent disparate operational schedule transit networks\nand pedestrian OpenStreetMap (OSM) data to represent the pedestrian\nnetwork. UrbanAccess provides a generalized, computationally efficient,\nand unified accessibility calculation framework by linking tools for: 1)\nnetwork data acquisition, validation, and processing; 2) computing an\nintegrated pedestrian and transit weighted network graph; and 3) network\nanalysis using Pandana.\n\nUrbanAccess offers the following tools:\n\n* GTFS and OSM network data acquisition via APIs\n* Network data validation and regional network aggregation\n* Compute network impedance:\n\n  * by transit schedule day of the week and time of day\n  * by transit mode\n  * by including average passenger headways to approximate passenger transit stop wait time\n\n* Integrate pedestrian and transit networks to approximate pedestrian scale accessibility\n* Resulting networks are designed to be used to compute accessibility\n  metrics using the open source network analysis tool\n  `Pandana <https://github.com/UDST/pandana>`__\n\n  * Compute cumulative accessibility metrics\n  * Nearest feature analysis using POIs\n\nLet us know what you are working on or if you think you have a great use\ncase by tweeting us at ``@urbansim`` or post on the UrbanSim\n`forum <http://discussion.urbansim.com/>`__.\n\nCurrent status\n--------------\n\nUrbanAccess is currently in a alpha release and only compatible with\nPython 2.x. Further code refinements are expected.\n\n*Forthcoming improvements:*\n\n- Unit tests\n- Python 3\n\nReporting bugs\n--------------\n\nPlease report any bugs you encounter via `GitHub\nissues <https://github.com/UDST/urbanaccess/issues>`__.\n\nContributing to UrbanAccess\n---------------------------\n\nIf you have improvements or new features you would like to see in\nUrbanAccess:\n\n1. Open a feature request via `GitHub issues <https://github.com/UDST/urbanaccess/issues>`__.\n2. Contribute your code from a fork or branch by using a Pull Request and request a review so it can be considered as an addition to the codebase.\n\nInstall the latest release\n--------------------------\n\nconda\n~~~~~~\nconda installation is forthcoming.\n\npip\n~~~~~~\nUrbanAccess is available on PyPI and can be installed with::\n\n    pip install -U urbanaccess\n\nDevelopment Installation\n------------------------\n\nUrbanAccess is currently in a alpha release and further code refinements are expected. As such, it is suggested to install using the ``develop`` command rather than ``install``. Make sure you are using the latest version of the code base by using git's ``git pull`` inside the cloned repository.\n\nTo install UrbanAccess follow these steps:\n\n1. Git clone the `UrbanAccess repo <https://github.com/udst/urbanaccess>`__\n2. in the cloned directory run: ``python setup.py develop``\n\nTo update to the latest development version:\n\nUse ``git pull`` inside the cloned repository\n\nDocumentation and demo\n----------------------\n\nDocumentation for UrbanAccess can be found\n`here <https://udst.github.io/urbanaccess/index.html>`__.\n\nA demo jupyter notebook for UrbanAccess can be found in the `demo\ndirectory <https://github.com/UDST/urbanaccess/tree/master/demo>`__.\n\nMinimum GTFS data requirements\n------------------------------\n\nThe minimum `GTFS data\ntypes <https://developers.google.com/transit/gtfs/>`__ required to use\nUrbanAccess are: ``stop_times``, ``stops``, ``routes``, ``calendar``,\nand ``trips`` however if there is no ``calendar``, ``calendar_dates``\ncan be used as a replacement.\n\nCitation and academic literature\n--------------------------------\n\nTo cite this tool and for a complete description of the UrbanAccess methodology see the paper below:\n\n`Samuel D. Blanchard and Paul Waddell. 2017. \"UrbanAccess: Generalized Methodology for Measuring Regional Accessibility with an Integrated Pedestrian and Transit Network.\" Transportation Research Record: Journal of the Transportation Research Board. No. 2653. pp. 35\u201344. <http://trrjournalonline.trb.org/doi/pdf/10.3141/2653-05>`__\n\nFor other related literature see `here <https://udst.github.io/urbanaccess/introduction.html#citation-and-academic-literature>`__.\n\nRelated UDST libraries\n----------------------\n\n-  `Pandana <https://github.com/UDST/pandana>`__\n-  `OSMnet <https://github.com/UDST/osmnet>`__\n\n.. |Build Status| image:: https://travis-ci.org/UDST/urbanaccess.svg?branch=master\n   :target: https://travis-ci.org/UDST/urbanaccess\n.. |Integrated AC Transit and BART transit and pedestrian network travel times for Oakland, CA| image:: docs/source/_images/travel_time_net.png\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/UDST/urbanaccess",
    "keywords": "",
    "license": "AGPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "urbanaccess",
    "platform": "",
    "project_url": "https://pypi.org/project/urbanaccess/",
    "release_url": "https://pypi.org/project/urbanaccess/0.1.0/",
    "requires_dist": [
      "scikit-learn (>=0.17.1)",
      "requests (>=2.9.1)",
      "pyyaml (>=3.11)",
      "pandas (>=0.17.0)",
      "pandana (>=0.2.0)",
      "osmnet (>=0.1.4)",
      "numpy (>=1.11)",
      "matplotlib (>=2.0)",
      "geopy (>=1.11.0)"
    ],
    "requires_python": "",
    "summary": "A tool for creating GTFS transit and OSM pedestrian networks for use in Pandana accessibility analyses.",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9f6f67bd8c98178eb18dc496d33f40b6",
          "sha256": "239ae673d4c7eab21253eff3169457c993e15461ed26f25fc608680b2c499c39"
        },
        "downloads": 0,
        "filename": "urbanaccess-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f6f67bd8c98178eb18dc496d33f40b6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 50790,
        "upload_time": "2017-08-02T12:41:28",
        "url": "https://files.pythonhosted.org/packages/0d/36/ee6ff32a3c4edd2b46a2a0ab099b1f24ef5be57d4967ac962be73243b136/urbanaccess-0.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ec3a0570e03be0a4fb7565a7605465c2",
          "sha256": "b2d7905a42b896923508b4419b0809b1494eb5c5f0c5c62998df6ff8c6a3fd92"
        },
        "downloads": 0,
        "filename": "urbanaccess-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ec3a0570e03be0a4fb7565a7605465c2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 43333,
        "upload_time": "2017-08-02T12:41:32",
        "url": "https://files.pythonhosted.org/packages/08/b7/e65a53ac6688888ae20529e30cb02eb1e789aebd193ece31ec06db70a183/urbanaccess-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9f6f67bd8c98178eb18dc496d33f40b6",
        "sha256": "239ae673d4c7eab21253eff3169457c993e15461ed26f25fc608680b2c499c39"
      },
      "downloads": 0,
      "filename": "urbanaccess-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9f6f67bd8c98178eb18dc496d33f40b6",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 50790,
      "upload_time": "2017-08-02T12:41:28",
      "url": "https://files.pythonhosted.org/packages/0d/36/ee6ff32a3c4edd2b46a2a0ab099b1f24ef5be57d4967ac962be73243b136/urbanaccess-0.1.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "ec3a0570e03be0a4fb7565a7605465c2",
        "sha256": "b2d7905a42b896923508b4419b0809b1494eb5c5f0c5c62998df6ff8c6a3fd92"
      },
      "downloads": 0,
      "filename": "urbanaccess-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ec3a0570e03be0a4fb7565a7605465c2",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 43333,
      "upload_time": "2017-08-02T12:41:32",
      "url": "https://files.pythonhosted.org/packages/08/b7/e65a53ac6688888ae20529e30cb02eb1e789aebd193ece31ec06db70a183/urbanaccess-0.1.0.tar.gz"
    }
  ]
}