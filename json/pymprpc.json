{
  "info": {
    "author": "hsz",
    "author_email": "hsz1273327@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Documentation :: Sphinx"
    ],
    "description": "\r\npymprpc\r\n===============================\r\n\r\n* version: 0.0.1\r\n\r\n* status: dev\r\n\r\n* author: hsz\r\n\r\n* email: hsz1273327@gmail.com\r\n\r\nDesc\r\n--------------------------------\r\n\r\n a rpc framework for message-pack rpc.\r\n\r\n\r\nkeywords:rpc,server,tcp\r\n\r\n\r\nFeature\r\n----------------------\r\n* api seems to stdlib xmlrpc\r\n* easy to use, easy to debug\r\n* support stream response\r\n\r\nExample\r\n-------------------------------\r\n\r\nserver\r\n\r\n.. code:: python\r\n\r\n    import platform\r\n    from pymprpc import SimpleMprpcServer\r\n    if platform.system() == \"Windows\":\r\n        try:\r\n            import aio_windows_patch as asyncio\r\n        except:\r\n            import warnings\r\n            warnings.warn(\r\n                \"you should install aio_windows_patch to support windows\",\r\n                RuntimeWarning,\r\n                stacklevel=3)\r\n            import asyncio\r\n\r\n    else:\r\n        import asyncio\r\n    try:\r\n        import uvloop\r\n        asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())\r\n    except ImportError:\r\n        pass\r\n\r\n\r\n    class MyMPRPCServer(SimpleMprpcServer):\r\n        pass\r\n\r\n\r\n    with MyMPRPCServer((\"127.0.0.1\", 5000), debug=True) as server:\r\n        server.register_introspection_functions()\r\n\r\n        @server.register_function()\r\n        def testfunc(a, b):\r\n            '''\u6709help'''\r\n            return a + b\r\n\r\n        @server.register_function()\r\n        async def testcoro(a, b):\r\n            await asyncio.sleep(0.1)\r\n            return a + b\r\n\r\n        @server.register_function()\r\n        async def testcorogen(a, b):\r\n            for i in range(10):\r\n                await asyncio.sleep(0.1)\r\n                yield i + a + b\r\n\r\n        class TestClass:\r\n\r\n            def testclassmethod(self, a, b):\r\n                return a + b\r\n\r\n            async def testclasscoro(self, a, b):\r\n                await asyncio.sleep(0.1)\r\n                return a + b\r\n\r\n            async def testclasscorogen(self, a, b):\r\n                for i in range(10):\r\n                    await asyncio.sleep(0.1)\r\n                    yield i + a + b\r\n        t = TestClass()\r\n        server.register_instance(t)\r\n        server.run_forever()\r\n\r\n\r\nsync client\r\n\r\n.. code:: python\r\n\r\n    import time\r\n    from pymprpc import RPC\r\n\r\n    with RPC(addr=\"tcp://admin:admin@127.0.0.1:5000\",\r\n            debug=True) as rpc:\r\n        print(rpc.system.listMethods())\r\n        print(rpc.system.methodSignature(\"testclassmethod\"))\r\n        print(rpc.system.methodHelp(\"testfunc\"))\r\n        print(rpc.system.lenConnections())\r\n        print(rpc.system.lenUndoneTasks())\r\n        print(rpc.testclassmethod(1, 2))\r\n        print(rpc.testclasscoro(2, 3))\r\n        print(rpc.testcoro(5, 6))\r\n        print(rpc.testfunc(5, 4))\r\n        agen = rpc.testcorogen(1, 2)\r\n        for i in agen:\r\n            print(i)\r\n        time.sleep(200)\r\n        print(\"wait done\")\r\n        # rpc.close()\r\n        print(rpc.testfunc())\r\n\r\n\r\n\r\nasync client\r\n\r\n.. code:: python\r\n\r\n    import asyncio\r\n    from pymprpc_client import AsyncRPC\r\n\r\n\r\n    async def main(loop):\r\n        async with AsyncRPC(\r\n                addr=\"tcp://admin:admin@127.0.0.1:5000\",\r\n                loop=loop,\r\n                debug=True) as rpc:\r\n            print(await rpc.system.listMethods())\r\n            print(await rpc.system.methodSignature(\"testclassmethod\"))\r\n            print(await rpc.system.methodHelp(\"testfunc\"))\r\n            print(await rpc.system.lenConnections())\r\n            print(await rpc.system.lenUndoneTasks())\r\n            print(await rpc.testclassmethod(1, 2))\r\n            print(await rpc.testclasscoro(2, 3))\r\n            print(await rpc.testcoro(5, 6))\r\n            print(await rpc.testfunc(5, 4))\r\n            # await asyncio.sleep(200)\r\n            print(\"wait done\")\r\n            print(await rpc.testfunc())\r\n        print(\"end\")\r\n    loop = asyncio.get_event_loop()\r\n    try:\r\n        loop.run_until_complete(main(loop))\r\n    except Exception as e:\r\n        raise e\r\n\r\n\r\nInstall\r\n--------------------------------\r\n\r\n- ``python -m pip install pymprpc``\r\n\r\n\r\nDocumentation\r\n--------------------------------\r\n\r\n`Documentation on Readthedocs <https://github.com/Basic-Components/msgpack-rpc-protocol>`_.\r\n\r\n\r\n\r\nTODO\r\n-----------------------------------\r\n\r\n* Load balancing broker\r\n\r\nLimitations\r\n-----------\r\n\r\n* sync client do not support heartbeat and timeout\r\n\r\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Basic-Components/msgpack-rpc-protocol",
    "keywords": "rpc",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pymprpc",
    "platform": "",
    "project_url": "https://pypi.org/project/pymprpc/",
    "release_url": "https://pypi.org/project/pymprpc/0.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": " a rpc framework for message-pack rpc.",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e82b7d8cab159f33f0b772e75db142b1",
          "sha256": "89769c5da8fc4df2d0913e51d3fdeb7b7b3a1273ddaf7200df8a7d82a1e9e9c7"
        },
        "downloads": -1,
        "filename": "pymprpc-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e82b7d8cab159f33f0b772e75db142b1",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 31455,
        "upload_time": "2018-02-11T09:59:56",
        "url": "https://files.pythonhosted.org/packages/5b/d2/81a832d36c7fead04e6476ea4833724ac4e9f7f8760bd27fa1af1995ff5c/pymprpc-0.0.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "fbe9472734951835adf3736ddb021778",
          "sha256": "b5861af9c97f85a0abad27fd58c6d7229134ed458a7ac3b580823ae36d00a13a"
        },
        "downloads": -1,
        "filename": "pymprpc-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fbe9472734951835adf3736ddb021778",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22089,
        "upload_time": "2018-02-11T09:59:51",
        "url": "https://files.pythonhosted.org/packages/9e/6b/d3894facda308033a62f30e77e5e07fb56e0bf2844b2c296d3c4d04dbddc/pymprpc-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e82b7d8cab159f33f0b772e75db142b1",
        "sha256": "89769c5da8fc4df2d0913e51d3fdeb7b7b3a1273ddaf7200df8a7d82a1e9e9c7"
      },
      "downloads": -1,
      "filename": "pymprpc-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e82b7d8cab159f33f0b772e75db142b1",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 31455,
      "upload_time": "2018-02-11T09:59:56",
      "url": "https://files.pythonhosted.org/packages/5b/d2/81a832d36c7fead04e6476ea4833724ac4e9f7f8760bd27fa1af1995ff5c/pymprpc-0.0.1-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "fbe9472734951835adf3736ddb021778",
        "sha256": "b5861af9c97f85a0abad27fd58c6d7229134ed458a7ac3b580823ae36d00a13a"
      },
      "downloads": -1,
      "filename": "pymprpc-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fbe9472734951835adf3736ddb021778",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 22089,
      "upload_time": "2018-02-11T09:59:51",
      "url": "https://files.pythonhosted.org/packages/9e/6b/d3894facda308033a62f30e77e5e07fb56e0bf2844b2c296d3c4d04dbddc/pymprpc-0.0.1.tar.gz"
    }
  ]
}