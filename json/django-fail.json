{
  "info": {
    "author": "James Socol",
    "author_email": "james@mozilla.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Environment :: Web Environment :: Mozilla",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "===========\nDjango Fail\n===========\n\n**Django Fail** provides tools for testing your site under less-than-ideal\nconditions.\n\nWhen working locally, response times are near instant, and there is no entropy\nintroduced by network hardware (e.g. proxies or load balancers) that may, for\nsome reason or other, fail.\n\n**Django Fail** helps you test what happens when some parts of your site don't\nload or load slowly. This can be particularly helpful for responses used in\nAjax-powered applications.\n\n\n``@fail(status=500, content='', mimetype='text/html')``\n=======================================================\n\nThe ``@fail()`` decorator makes a view return some kind of failure response,\ninstead of a real response.\n\nFor the arguments, ``status`` is the status code, normally ``500``, ``content``\nis any content to return, normally ``''``, and ``mimetype`` is the mimetype of\nthe response, normally ``text/html``.\n\nThe ``@fail()`` decorator can be globally disabled by adding ``FAIL_ON =\nFalse`` to ``settings.py``.\n\n\n``@slow(delay=2)``\n==================\n\nThe ``@slow()`` decorator makes a response wait a while before returning. The\ndelay is in seconds and defaults to ``2``.\n\nThe ``@slow()`` decorator can be globally disabled by adding ``SLOW_ON =\nFalse`` to settings.py.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/jsocol/django-fail",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-fail",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-fail/",
    "release_url": "https://pypi.org/project/django-fail/0.1.0/",
    "requires_python": null,
    "summary": "Make your app fail!",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fc4841bf3dc552298b1ecc0093256b3b",
          "sha256": "ab219b50c634050372f69d8c40764e8b2ae3218550989c645f59c7d543c72843"
        },
        "downloads": 3595,
        "filename": "django-fail-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fc4841bf3dc552298b1ecc0093256b3b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3015,
        "upload_time": "2011-02-28T18:56:08",
        "url": "https://files.pythonhosted.org/packages/a9/43/3d443af1bc0897bef3845faab2fc4230cfb6e6a2700e3736d92d398f38a7/django-fail-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fc4841bf3dc552298b1ecc0093256b3b",
        "sha256": "ab219b50c634050372f69d8c40764e8b2ae3218550989c645f59c7d543c72843"
      },
      "downloads": 3595,
      "filename": "django-fail-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fc4841bf3dc552298b1ecc0093256b3b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3015,
      "upload_time": "2011-02-28T18:56:08",
      "url": "https://files.pythonhosted.org/packages/a9/43/3d443af1bc0897bef3845faab2fc4230cfb6e6a2700e3736d92d398f38a7/django-fail-0.1.0.tar.gz"
    }
  ]
}