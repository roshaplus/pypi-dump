{
  "info": {
    "author": "Israel Saeta P\u00e9rez",
    "author_email": "israel.saeta@dukebody.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\nSklearn-pandas\n==============\n\nThis module provides a bridge between `Scikit-Learn <http://scikit-learn.org/stable/>`__'s machine learning methods and `pandas <http://pandas.pydata.org/>`__-style Data Frames.\n\nIn particular, it provides:\n\n1. A way to map ``DataFrame`` columns to transformations, which are later recombined into features.\n2. A compatibility shim for old ``scikit-learn`` versions to cross-validate a pipeline that takes a pandas ``DataFrame`` as input. This is only needed for ``scikit-learn<0.16.0`` (see `#11 <https://github.com/paulgb/sklearn-pandas/issues/11>`__ for details). It is deprecated and will likely be dropped in ``skearn-pandas==2.0``.\n3. A ``CategoricalImputer`` that replaces null-like values with the mode and works with string columns.\n\nInstallation\n------------\n\nYou can install ``sklearn-pandas`` with ``pip``::\n\n    # pip install sklearn-pandas\n\nTests\n-----\n\nThe examples in this file double as basic sanity tests. To run them, use ``doctest``, which is included with python::\n\n    # python -m doctest README.rst\n\nUsage\n-----\n\nImport\n******\n\nImport what you need from the ``sklearn_pandas`` package. The choices are:\n\n* ``DataFrameMapper``, a class for mapping pandas data frame columns to different sklearn transformations\n* ``cross_val_score``, similar to ``sklearn.cross_validation.cross_val_score`` but working on pandas DataFrames\n\nFor this demonstration, we will import both::\n\n    >>> from sklearn_pandas import DataFrameMapper, cross_val_score\n\nFor these examples, we'll also use pandas, numpy, and sklearn::\n\n    >>> import pandas as pd\n    >>> import numpy as np\n    >>> import sklearn.preprocessing, sklearn.decomposition, \\\n    ...     sklearn.linear_model, sklearn.pipeline, sklearn.metrics\n    >>> from sklearn.feature_extraction.text import CountVectorizer\n\nLoad some Data\n**************\n\nNormally you'll read the data from a file, but for demonstration purposes we'll create a data frame from a Python dict::\n\n    >>> data = pd.DataFrame({'pet':      ['cat', 'dog', 'dog', 'fish', 'cat', 'dog', 'cat', 'fish'],\n    ...                      'children': [4., 6, 3, 3, 2, 3, 5, 4],\n    ...                      'salary':   [90, 24, 44, 27, 32, 59, 36, 27]})\n\nTransformation Mapping\n----------------------\n\nMap the Columns to Transformations\n**********************************\n\nThe mapper takes a list of tuples. The first is a column name from the pandas DataFrame, or a list containing one or multiple columns (we will see an example with multiple columns later). The second is an object which will perform the transformation which will be applied to that column. The third is optional and is a dictionary containing the transformation options, if applicable (see \"custom column names for transformed features\" below).\n\nLet's see an example::\n\n    >>> mapper = DataFrameMapper([\n    ...     ('pet', sklearn.preprocessing.LabelBinarizer()),\n    ...     (['children'], sklearn.preprocessing.StandardScaler())\n    ... ])\n\nThe difference between specifying the column selector as ``'column'`` (as a simple string) and ``['column']`` (as a list with one element) is the shape of the array that is passed to the transformer. In the first case, a one dimensional array will be passed, while in the second case it will be a 2-dimensional array with one column, i.e. a column vector.\n\nThis behaviour mimics the same pattern as pandas' dataframes ``__getitem__``  indexing:\n\n    >>> data['children'].shape\n    (8,)\n    >>> data[['children']].shape\n    (8, 1)\n\nBe aware that some transformers expect a 1-dimensional input (the label-oriented ones) while some others, like ``OneHotEncoder`` or ``Imputer``, expect 2-dimensional input, with the shape ``[n_samples, n_features]``.\n\nTest the Transformation\n***********************\n\nWe can use the ``fit_transform`` shortcut to both fit the model and see what transformed data looks like. In this and the other examples, output is rounded to two digits with ``np.round`` to account for rounding errors on different hardware::\n\n    >>> np.round(mapper.fit_transform(data.copy()), 2)\n    array([[ 1.  ,  0.  ,  0.  ,  0.21],\n           [ 0.  ,  1.  ,  0.  ,  1.88],\n           [ 0.  ,  1.  ,  0.  , -0.63],\n           [ 0.  ,  0.  ,  1.  , -0.63],\n           [ 1.  ,  0.  ,  0.  , -1.46],\n           [ 0.  ,  1.  ,  0.  , -0.63],\n           [ 1.  ,  0.  ,  0.  ,  1.04],\n           [ 0.  ,  0.  ,  1.  ,  0.21]])\n\nNote that the first three columns are the output of the ``LabelBinarizer`` (corresponding to ``cat``, ``dog``, and ``fish`` respectively) and the fourth column is the standardized value for the number of children. In general, the columns are ordered according to the order given when the ``DataFrameMapper`` is constructed.\n\nNow that the transformation is trained, we confirm that it works on new data::\n\n    >>> sample = pd.DataFrame({'pet': ['cat'], 'children': [5.]})\n    >>> np.round(mapper.transform(sample), 2)\n    array([[ 1.  ,  0.  ,  0.  ,  1.04]])\n\n\nOutput features names\n*********************\n\nIn certain cases, like when studying the feature importances for some model,\nwe want to be able to associate the original features to the ones generated by\nthe dataframe mapper. We can do so by inspecting the automatically generated ``transformed_names_`` attribute of the mapper after transformation::\n\n    >>> mapper.transformed_names_\n    ['pet_cat', 'pet_dog', 'pet_fish', 'children']\n\n\nCustom column names for transformed features\n********************************************\n\nWe can provide a custom name for the transformed features, to be used instead\nof the automatically generated one, by specifying it as the third argument\nof the feature definition::\n\n\n  >>> mapper_alias = DataFrameMapper([\n  ...     (['children'], sklearn.preprocessing.StandardScaler(),\n  ...      {'alias': 'children_scaled'})\n  ... ])\n  >>> _ = mapper_alias.fit_transform(data.copy())\n  >>> mapper_alias.transformed_names_\n  ['children_scaled']\n\n\nPassing Series/DataFrames to the transformers\n*********************************************\n\nBy default the transformers are passed a numpy array of the selected columns\nas input. This is because ``sklearn`` transformers are historically designed to\nwork with numpy arrays, not with pandas dataframes, even though their basic\nindexing interfaces are similar.\n\nHowever we can pass a dataframe/series to the transformers to handle custom\ncases initializing the dataframe mapper with ``input_df=True``::\n\n    >>> from sklearn.base import TransformerMixin\n    >>> class DateEncoder(TransformerMixin):\n    ...    def fit(self, X, y=None):\n    ...        return self\n    ...\n    ...    def transform(self, X):\n    ...        dt = X.dt\n    ...        return pd.concat([dt.year, dt.month, dt.day], axis=1)\n    >>> dates_df = pd.DataFrame(\n    ...     {'dates': pd.date_range('2015-10-30', '2015-11-02')})\n    >>> mapper_dates = DataFrameMapper([\n    ...     ('dates', DateEncoder())\n    ... ], input_df=True)\n    >>> mapper_dates.fit_transform(dates_df)\n    array([[2015,   10,   30],\n           [2015,   10,   31],\n           [2015,   11,    1],\n           [2015,   11,    2]])\n\nWe can also specify this option per group of columns instead of for the\nwhole mapper::\n\n  >>> mapper_dates = DataFrameMapper([\n  ...     ('dates', DateEncoder(), {'input_df': True})\n  ... ])\n  >>> mapper_dates.fit_transform(dates_df)\n  array([[2015,   10,   30],\n         [2015,   10,   31],\n         [2015,   11,    1],\n         [2015,   11,    2]])\n\nOutputting a dataframe\n**********************\n\nBy default the output of the dataframe mapper is a numpy array. This is so because most sklearn estimators expect a numpy array as input. If however we want the output of the mapper to be a dataframe, we can do so using the parameter ``df_out`` when creating the mapper::\n\n    >>> mapper_df = DataFrameMapper([\n    ...     ('pet', sklearn.preprocessing.LabelBinarizer()),\n    ...     (['children'], sklearn.preprocessing.StandardScaler())\n    ... ], df_out=True)\n    >>> np.round(mapper_df.fit_transform(data.copy()), 2)\n       pet_cat  pet_dog  pet_fish  children\n    0      1.0      0.0       0.0      0.21\n    1      0.0      1.0       0.0      1.88\n    2      0.0      1.0       0.0     -0.63\n    3      0.0      0.0       1.0     -0.63\n    4      1.0      0.0       0.0     -1.46\n    5      0.0      1.0       0.0     -0.63\n    6      1.0      0.0       0.0      1.04\n    7      0.0      0.0       1.0      0.21\n\nThe names for the columns are the same ones present in the ``transformed_names_``\nattribute.\n\nNote this does not work together with the ``default=True`` or ``sparse=True`` arguments to the mapper.\n\nTransform Multiple Columns\n**************************\n\nTransformations may require multiple input columns. In these cases, the column names can be specified in a list::\n\n    >>> mapper2 = DataFrameMapper([\n    ...     (['children', 'salary'], sklearn.decomposition.PCA(1))\n    ... ])\n\nNow running ``fit_transform`` will run PCA on the ``children`` and ``salary`` columns and return the first principal component::\n\n    >>> np.round(mapper2.fit_transform(data.copy()), 1)\n    array([[ 47.6],\n           [-18.4],\n           [  1.6],\n           [-15.4],\n           [-10.4],\n           [ 16.6],\n           [ -6.4],\n           [-15.4]])\n\nMultiple transformers for the same column\n*****************************************\n\nMultiple transformers can be applied to the same column specifying them\nin a list::\n\n    >>> mapper3 = DataFrameMapper([\n    ...     (['age'], [sklearn.preprocessing.Imputer(),\n    ...                sklearn.preprocessing.StandardScaler()])])\n    >>> data_3 = pd.DataFrame({'age': [1, np.nan, 3]})\n    >>> mapper3.fit_transform(data_3)\n    array([[-1.22474487],\n           [ 0.        ],\n           [ 1.22474487]])\n\nColumns that don't need any transformation\n******************************************\n\nOnly columns that are listed in the DataFrameMapper are kept. To keep a column but don't apply any transformation to it, use `None` as transformer::\n\n    >>> mapper3 = DataFrameMapper([\n    ...     ('pet', sklearn.preprocessing.LabelBinarizer()),\n    ...     ('children', None)\n    ... ])\n    >>> np.round(mapper3.fit_transform(data.copy()))\n    array([[ 1.,  0.,  0.,  4.],\n           [ 0.,  1.,  0.,  6.],\n           [ 0.,  1.,  0.,  3.],\n           [ 0.,  0.,  1.,  3.],\n           [ 1.,  0.,  0.,  2.],\n           [ 0.,  1.,  0.,  3.],\n           [ 1.,  0.,  0.,  5.],\n           [ 0.,  0.,  1.,  4.]])\n\nApplying a default transformer\n******************************\n\nA default transformer can be applied to columns not explicitly selected\npassing it as the ``default`` argument to the mapper:\n\n    >>> mapper4 = DataFrameMapper([\n    ...     ('pet', sklearn.preprocessing.LabelBinarizer()),\n    ...     ('children', None)\n    ... ], default=sklearn.preprocessing.StandardScaler())\n    >>> np.round(mapper4.fit_transform(data.copy()), 1)\n    array([[ 1. ,  0. ,  0. ,  4. ,  2.3],\n           [ 0. ,  1. ,  0. ,  6. , -0.9],\n           [ 0. ,  1. ,  0. ,  3. ,  0.1],\n           [ 0. ,  0. ,  1. ,  3. , -0.7],\n           [ 1. ,  0. ,  0. ,  2. , -0.5],\n           [ 0. ,  1. ,  0. ,  3. ,  0.8],\n           [ 1. ,  0. ,  0. ,  5. , -0.3],\n           [ 0. ,  0. ,  1. ,  4. , -0.7]])\n\nUsing ``default=False`` (the default) drops unselected columns. Using\n``default=None`` pass the unselected columns unchanged.\n\nFeature selection and other supervised transformations\n******************************************************\n\n``DataFrameMapper`` supports transformers that require both X and y arguments. An example of this is feature selection. Treating the 'pet' column as the target, we will select the column that best predicts it.\n\n    >>> from sklearn.feature_selection import SelectKBest, chi2\n    >>> mapper_fs = DataFrameMapper([(['children','salary'], SelectKBest(chi2, k=1))])\n    >>> mapper_fs.fit_transform(data[['children','salary']], data['pet'])\n    array([[ 90.],\n           [ 24.],\n           [ 44.],\n           [ 27.],\n           [ 32.],\n           [ 59.],\n           [ 36.],\n           [ 27.]])\n\nWorking with sparse features\n****************************\n\nA ``DataFrameMapper`` will return a dense feature array by default. Setting ``sparse=True`` in the mapper will return a sparse array whenever any of the extracted features is sparse. Example:\n\n    >>> mapper5 = DataFrameMapper([\n    ...     ('pet', CountVectorizer()),\n    ... ], sparse=True)\n    >>> type(mapper5.fit_transform(data))\n    <class 'scipy.sparse.csr.csr_matrix'>\n\nThe stacking of the sparse features is done without ever densifying them.\n\nCross-Validation\n****************\n\nNow that we can combine features from pandas DataFrames, we may want to use cross-validation to see whether our model works. ``scikit-learn<0.16.0`` provided features for cross-validation, but they expect numpy data structures and won't work with ``DataFrameMapper``.\n\nTo get around this, sklearn-pandas provides a wrapper on sklearn's ``cross_val_score`` function which passes a pandas DataFrame to the estimator rather than a numpy array::\n\n    >>> pipe = sklearn.pipeline.Pipeline([\n    ...     ('featurize', mapper),\n    ...     ('lm', sklearn.linear_model.LinearRegression())])\n    >>> np.round(cross_val_score(pipe, X=data.copy(), y=data.salary, scoring='r2'), 2)\n    array([ -1.09,  -5.3 , -15.38])\n\nSklearn-pandas' ``cross_val_score`` function provides exactly the same interface as sklearn's function of the same name.\n\n``CategoricalImputer``\n**********************\n\nSince the ``scikit-learn``  ``Imputer`` transformer currently only works with\nnumbers, ``sklearn-pandas`` provides an equivalent helper transformer that do\nwork with strings, substituting null values with the most frequent value in\nthat column.\n\nExample:\n\n    >>> from sklearn_pandas import CategoricalImputer\n    >>> data = np.array(['a', 'b', 'b', np.nan], dtype=object)\n    >>> imputer = CategoricalImputer()\n    >>> imputer.fit_transform(data)\n    array(['a', 'b', 'b', 'b'], dtype=object)\n\n\nChangelog\n---------\n\n1.5.0 (2017-06-24)\n******************\n* Allow inputting a dataframe/series per group of columns.\n* Get feature names also from ``estimator.get_feature_names()`` if present.\n* Attempt to derive feature names from individual transformers when applying a\n  list of transformers.\n* Do not mutate features in ``__init__`` to be compatible with\n  ``sklearn>=0.20`` (#76).\n\n\n1.4.0 (2017-05-13)\n******************\n* Allow specifying a custom name (alias) for transformed columns (#83).\n* Capture output columns generated names in ``transformed_names_`` attribute (#78).\n* Add ``CategoricalImputer`` that replaces null-like values with the mode\n  for string-like columns.\n* Add ``input_df`` init argument to allow inputting a dataframe/series to the\n  transformers instead of a numpy array (#60).\n\n\n1.3.0 (2017-01-21)\n******************\n\n* Make the mapper return dataframes when ``df_out=True`` (#70, #74).\n* Update imports to avoid deprecation warnings in sklearn 0.18 (#68).\n\n\n1.2.0 (2016-10-02)\n******************\n\n* Deprecate custom cross-validation shim classes.\n* Require ``scikit-learn>=0.15.0``. Resolves #49.\n* Allow applying a default transformer to columns not selected explicitly in\n  the mapper. Resolves #55.\n* Allow specifying an optional ``y`` argument during transform for\n  supervised transformations. Resolves #58.\n\n\n1.1.0 (2015-12-06)\n*******************\n\n* Delete obsolete ``PassThroughTransformer``. If no transformation is desired for a given column, use ``None`` as transformer.\n* Factor out code in several modules, to avoid having everything in ``__init__.py``.\n* Use custom ``TransformerPipeline`` class to allow transformation steps accepting only a X argument. Fixes #46.\n* Add compatibility shim for unpickling mappers with list of transformers created before 1.0.0. Fixes #45.\n\n\n1.0.0 (2015-11-28)\n*******************\n\n* Change version numbering scheme to SemVer.\n* Use ``sklearn.pipeline.Pipeline`` instead of copying its code. Resolves #43.\n* Raise ``KeyError`` when selecting unexistent columns in the dataframe. Fixes #30.\n* Return sparse feature array if any of the features is sparse and ``sparse`` argument is ``True``. Defaults to ``False`` to avoid potential breaking of existing code. Resolves #34.\n* Return model and prediction in custom CV classes. Fixes #27.\n\n\n0.0.12 (2015-11-07)\n********************\n\n* Allow specifying a list of transformers to use sequentially on the same column.\n\n\nCredits\n-------\n\nThe code for ``DataFrameMapper`` is based on code originally written by `Ben Hamner <https://github.com/benhamner>`__.\n\nOther contributors:\n\n* Arnau Gil Amat\n* Cal Paterson\n* Gustavo Sena Mafra\n* Israel Saeta P\u00e9rez\n* Jeremy Howard\n* Jimmy Wan\n* Olivier Grisel\n* Paul Butler\n* Ritesh Agrawal\n* Vitaley Zaretskey\n* Zac Stewart\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/paulgb/sklearn-pandas",
    "keywords": "scikit,sklearn,pandas",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sklearn-pandas",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/sklearn-pandas/",
    "release_url": "https://pypi.org/project/sklearn-pandas/1.5.0/",
    "requires_dist": [
      "scipy (>=0.14)",
      "scikit-learn (>=0.15.0)",
      "pandas (>=0.11.0)",
      "numpy (>=1.6.1)"
    ],
    "requires_python": "",
    "summary": "Pandas integration with sklearn",
    "version": "1.5.0"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f29af70d99702f63dccf120a8aa60e0b",
          "sha256": "a55272932e2aa82fefdc2babddc65ff85f5b4ed03c6a1f879f1e137886add640"
        },
        "downloads": 1942,
        "filename": "sklearn-pandas-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f29af70d99702f63dccf120a8aa60e0b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4690,
        "upload_time": "2013-04-25T18:28:36",
        "url": "https://files.pythonhosted.org/packages/8b/0d/4611e0258716567542d60d8b3e6e0674bd37c26c8dd92ce73f01f38ccec2/sklearn-pandas-0.0.1.tar.gz"
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "43c7a3496ef6b5ad1f1737687df6ac57",
          "sha256": "319b072edebfcd2b3b75026df89a9688c71b42a654828b06dcb14c9ef53a2750"
        },
        "downloads": 4536,
        "filename": "sklearn_pandas-0.0.10-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "43c7a3496ef6b5ad1f1737687df6ac57",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 3521,
        "upload_time": "2015-05-30T05:38:11",
        "url": "https://files.pythonhosted.org/packages/e0/0f/457dec824726cf5099b736fd8f5faa45e0f53db938d762cb5bc2510106c3/sklearn_pandas-0.0.10-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "50b06ee91cc553972de4477d66dc6419",
          "sha256": "21e9293603261ce7ac6a642558e1304f34a06a4ebdbc3a2bb72d6059c6f6532d"
        },
        "downloads": 3731,
        "filename": "sklearn-pandas-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "50b06ee91cc553972de4477d66dc6419",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5454,
        "upload_time": "2015-05-30T05:38:08",
        "url": "https://files.pythonhosted.org/packages/a1/91/8eec56a2e4f7f75d0d3a0e1af06dbe93feaf3f126de3af102b1329130365/sklearn-pandas-0.0.10.tar.gz"
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4ea06e4893019bb5f7922a22b3108ab4",
          "sha256": "404d21669da3a6b8ee41ee650db0d69648594f77b45364f50da32a3208e82e40"
        },
        "downloads": 976,
        "filename": "sklearn_pandas-0.0.12-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "4ea06e4893019bb5f7922a22b3108ab4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 4004,
        "upload_time": "2015-11-07T18:41:29",
        "url": "https://files.pythonhosted.org/packages/9e/13/09a7a30de5f394f78d7aa293b59832f308e934b74e17d953349fa4474e5c/sklearn_pandas-0.0.12-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d05b53c1f105dd0f1000b4cf22a55006",
          "sha256": "04130cd587ecc27e2827ae3d2b572e5ba09179ff07cb85d77684205e200a1eb6"
        },
        "downloads": 569,
        "filename": "sklearn-pandas-0.0.12.tar.gz",
        "has_sig": true,
        "md5_digest": "d05b53c1f105dd0f1000b4cf22a55006",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6581,
        "upload_time": "2015-11-07T18:41:40",
        "url": "https://files.pythonhosted.org/packages/3d/9f/4daf28032169ad003c5c4149d1bc5600c5052f35a0341f5c35ca242f8853/sklearn-pandas-0.0.12.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c1d9089e5eb4993d1ddd72fb65022351",
          "sha256": "2dade5242ff8a33871836378f72e4a2b58562a266d2eee96e2e7c8d3de8b842f"
        },
        "downloads": 1968,
        "filename": "sklearn-pandas-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c1d9089e5eb4993d1ddd72fb65022351",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4710,
        "upload_time": "2013-04-25T18:43:55",
        "url": "https://files.pythonhosted.org/packages/3d/b8/33c577804f55f0fba98f2894b57604f3dba6b8d091e302484ca75c3b994e/sklearn-pandas-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7faad708e983133a2650cc26a9c94c3a",
          "sha256": "a0ef2c2e0115da95c1468f8b3bed71cce317c9ff4eede37ee891e8aa0a94136f"
        },
        "downloads": 2112,
        "filename": "sklearn-pandas-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7faad708e983133a2650cc26a9c94c3a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4729,
        "upload_time": "2013-07-08T13:37:51",
        "url": "https://files.pythonhosted.org/packages/3f/ca/959b3e308663311302973988b742ab14de3f3a4c0959043ba5e2f101387a/sklearn-pandas-0.0.3.tar.gz"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bc9d5040d2ec0dd32e18b5b2b573e0b7",
          "sha256": "d1357caacd2a359a75873a76ab8a4042108725312b0000b858a4b7469476ec5a"
        },
        "downloads": 1840,
        "filename": "sklearn-pandas-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "bc9d5040d2ec0dd32e18b5b2b573e0b7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5585,
        "upload_time": "2013-09-20T03:08:22",
        "url": "https://files.pythonhosted.org/packages/1f/bf/9155759e94eda383989ddc7655644eb5526201c1dc265f19426be7744456/sklearn-pandas-0.0.4.tar.gz"
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "eb9ee13be3e8437e770644f2008c33da",
          "sha256": "15bb688a739ca3c4a0223e6160bf2dca370f0aa9481ce05c79ea919d8fa35273"
        },
        "downloads": 2289,
        "filename": "sklearn-pandas-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "eb9ee13be3e8437e770644f2008c33da",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5377,
        "upload_time": "2013-09-22T19:19:26",
        "url": "https://files.pythonhosted.org/packages/6a/4d/071222540a8088176ce6117e1485012eda21724051458c7e14bf9382e866/sklearn-pandas-0.0.5.tar.gz"
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6c7635ab0a3dfb361937e97ea02ea40e",
          "sha256": "9d6b8828cf0cf6fa77fef46a902edbaa6f26368c5b26e73644f7d95fd5aad297"
        },
        "downloads": 1943,
        "filename": "sklearn-pandas-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6c7635ab0a3dfb361937e97ea02ea40e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5394,
        "upload_time": "2013-09-28T13:18:38",
        "url": "https://files.pythonhosted.org/packages/b2/a4/4ac7e571092d7ff34b4e0b9aca00ee223961147a22ce843b87ae42b329cd/sklearn-pandas-0.0.6.tar.gz"
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e5fc87bab6f989e9922faab3e8035b07",
          "sha256": "48c2ee88842a8655f349952fc719ce9d9978ef0257a29f5b5c120da51d71b8e4"
        },
        "downloads": 2030,
        "filename": "sklearn-pandas-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "e5fc87bab6f989e9922faab3e8035b07",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5400,
        "upload_time": "2013-10-22T18:26:46",
        "url": "https://files.pythonhosted.org/packages/25/9e/5f42773d412e15326324ccfb275a86633303d4d5766b1ad7ffbe354a54e9/sklearn-pandas-0.0.7.tar.gz"
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cb48edbd39d1078ce67fa23fd5e2dec7",
          "sha256": "8091960d517bbfaaf3f2397c32e99d2a388a3a8fcecdc57d58fd3508392db161"
        },
        "downloads": 2177,
        "filename": "sklearn-pandas-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "cb48edbd39d1078ce67fa23fd5e2dec7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5455,
        "upload_time": "2013-11-29T14:46:30",
        "url": "https://files.pythonhosted.org/packages/8e/89/c1dac730808c1c5f607535a75c6f99ebf936ccf993a2e3daf48c57ea41d9/sklearn-pandas-0.0.8.tar.gz"
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b74e219bab0973f2ef71d8032ff405ff",
          "sha256": "b8af92725bcf2656031198cae5e8aae4e45f4bb70e00adcedd6f23001d9ce6b3"
        },
        "downloads": 10434,
        "filename": "sklearn-pandas-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "b74e219bab0973f2ef71d8032ff405ff",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5539,
        "upload_time": "2014-01-27T23:10:27",
        "url": "https://files.pythonhosted.org/packages/91/4d/3aacfbea91130cac0db3634eccf978259eb4362756b8b7f52daea0eb698f/sklearn-pandas-0.0.9.tar.gz"
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "40f5d4e2e517970d1bd90aa94cc4a5e4",
          "sha256": "b383f1149c973ebb39ae9d08446a4daba8d9e7458bffd94e8b8ee35222a37908"
        },
        "downloads": 603,
        "filename": "sklearn_pandas-1.0.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "40f5d4e2e517970d1bd90aa94cc4a5e4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 4144,
        "upload_time": "2015-11-28T12:39:48",
        "url": "https://files.pythonhosted.org/packages/2c/52/6abe91a9033fa82f2fb4c2ed91ac437463bb2ba442a6e9d181d88daeff44/sklearn_pandas-1.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "62f4f61efbf22b0d21a3f1bfd28c4d82",
          "sha256": "8cf8b548a33438df9131a0c0dd5683a3d062fda0f9da14ef83a39706aa493989"
        },
        "downloads": 473,
        "filename": "sklearn-pandas-1.0.0.tar.gz",
        "has_sig": true,
        "md5_digest": "62f4f61efbf22b0d21a3f1bfd28c4d82",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7182,
        "upload_time": "2015-11-28T12:39:58",
        "url": "https://files.pythonhosted.org/packages/bb/57/b3adc3fb8afc2d5a8ac69b6153328cf449cc5b1c02cd15b02ac7eb7b0522/sklearn-pandas-1.0.0.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "42eee1216613a9d5488d8a02078ac12c",
          "sha256": "20adda05a4cb540a04c57d98b749a971518ab21ec88ad95b4a1ec411fd6e9dd0"
        },
        "downloads": 4027,
        "filename": "sklearn_pandas-1.1.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "42eee1216613a9d5488d8a02078ac12c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 5781,
        "upload_time": "2015-12-06T12:38:27",
        "url": "https://files.pythonhosted.org/packages/b3/ec/2eb03330cd0d939317007a5c403fca7898afc597c558ec9d2691854bf6a2/sklearn_pandas-1.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "266476cb69b0082466a96988d03f1eb0",
          "sha256": "9e38759b8b2f79444f1c9d7db46fb72b72ddf5c4d78449f69be9c409be3e35f7"
        },
        "downloads": 673,
        "filename": "sklearn-pandas-1.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "266476cb69b0082466a96988d03f1eb0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8207,
        "upload_time": "2015-12-06T12:38:40",
        "url": "https://files.pythonhosted.org/packages/1c/41/dfddcf44ce978bb0ccea1a757bbb66a95e8294bf8851086a29e29e4b196a/sklearn-pandas-1.1.0.tar.gz"
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d7d97e44344c6b901d02b88fcfa9f29d",
          "sha256": "593140d80338f509f41701cdf118da201917fbb2b3929e28acd49ee3d83823a8"
        },
        "downloads": 1153,
        "filename": "sklearn_pandas-1.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7d97e44344c6b901d02b88fcfa9f29d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 6541,
        "upload_time": "2016-10-02T11:27:38",
        "url": "https://files.pythonhosted.org/packages/46/02/15345d7a10cbe552238b4792ab179f224b5d84367a9f29c77baf3928a56e/sklearn_pandas-1.2.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "802b29b978b348026ba01567f12be612",
          "sha256": "7aa16e58a95dc3181ea1ad4c6592c15ceeadc9f214cc1c96828b55c738302a1f"
        },
        "downloads": 316,
        "filename": "sklearn-pandas-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "802b29b978b348026ba01567f12be612",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9693,
        "upload_time": "2016-10-02T11:27:41",
        "url": "https://files.pythonhosted.org/packages/71/0b/59ac42f59c89844c172bc486b8f77fcc1c0d94eb37194cdba51ae600cb9d/sklearn-pandas-1.2.0.tar.gz"
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d4e15e7395eb94c23acc36376fd44d6d",
          "sha256": "f75ba2544ed243c682a2fdfb8d48370d4caa2d8c98d5a986bc17d9767f23e5ee"
        },
        "downloads": 417,
        "filename": "sklearn_pandas-1.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4e15e7395eb94c23acc36376fd44d6d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7129,
        "upload_time": "2017-01-21T08:48:59",
        "url": "https://files.pythonhosted.org/packages/b2/07/7f986cca8dce87935c28adb45e46d64b37473ed50f0c07d3182ef4f6e566/sklearn_pandas-1.3.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "04929e992af9466cfa46fe3fa4d2f317",
          "sha256": "3c6017f31e32de194a3446a19668abd147165507557e84f5da24abfa9a46ccbc"
        },
        "downloads": 13,
        "filename": "sklearn-pandas-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "04929e992af9466cfa46fe3fa4d2f317",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10564,
        "upload_time": "2017-01-22T17:03:32",
        "url": "https://files.pythonhosted.org/packages/1d/8e/b8b2b29618c99dda21e5ad7f0fe57a88944cd47b22ffeb32c19ce166aa74/sklearn-pandas-1.3.0.tar.gz"
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b5b79696e679547dc5e0814aeed7384e",
          "sha256": "6537994a67961c7c8dfe4f0fcdb6c01ae93ca7c79d8be72a02432e9a197f2ec9"
        },
        "downloads": 0,
        "filename": "sklearn_pandas-1.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5b79696e679547dc5e0814aeed7384e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 8520,
        "upload_time": "2017-05-13T13:47:43",
        "url": "https://files.pythonhosted.org/packages/96/5d/0ce62f58c253ae3e7ecb168640a6b67a0061b31099e214f26f6091240f21/sklearn_pandas-1.4.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1e69b0986a56eed60dd7026cc9fbfacc",
          "sha256": "f0064b7ca4219511450f670560993ef0dd1966011c94ea37c0d64d833cde1e2d"
        },
        "downloads": 0,
        "filename": "sklearn-pandas-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1e69b0986a56eed60dd7026cc9fbfacc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12580,
        "upload_time": "2017-05-13T13:46:03",
        "url": "https://files.pythonhosted.org/packages/ea/9d/8fcfef8f97c97f35c48cde0390ab9ede13ffbf8fd6769d262a823a0581c3/sklearn-pandas-1.4.0.tar.gz"
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3d701643f2a87f45eeac34e2159316c1",
          "sha256": "38e82bda7b2ec957d7fca38c560907d7d6af1c32405048411e1ecf30df9d764d"
        },
        "downloads": 0,
        "filename": "sklearn_pandas-1.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d701643f2a87f45eeac34e2159316c1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 8888,
        "upload_time": "2017-06-24T17:24:18",
        "url": "https://files.pythonhosted.org/packages/88/69/020eb5a111c20f78aa00234ecdbf53eae53e760c254c751bcc6ab2305013/sklearn_pandas-1.5.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3e1e3cb23b18a7aca8e6d7f63f905d6c",
          "sha256": "5c6c8217d27b14c6fbe5c95e98d4c044d972583bb20f4c43bca43c1d9f718c6d"
        },
        "downloads": 0,
        "filename": "sklearn-pandas-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3e1e3cb23b18a7aca8e6d7f63f905d6c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13104,
        "upload_time": "2017-06-24T17:24:35",
        "url": "https://files.pythonhosted.org/packages/62/21/9847922a9ef01e845300436a5e5b8673b28c7d266e577e7bf8b2599161e9/sklearn-pandas-1.5.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "3d701643f2a87f45eeac34e2159316c1",
        "sha256": "38e82bda7b2ec957d7fca38c560907d7d6af1c32405048411e1ecf30df9d764d"
      },
      "downloads": 0,
      "filename": "sklearn_pandas-1.5.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3d701643f2a87f45eeac34e2159316c1",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 8888,
      "upload_time": "2017-06-24T17:24:18",
      "url": "https://files.pythonhosted.org/packages/88/69/020eb5a111c20f78aa00234ecdbf53eae53e760c254c751bcc6ab2305013/sklearn_pandas-1.5.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "3e1e3cb23b18a7aca8e6d7f63f905d6c",
        "sha256": "5c6c8217d27b14c6fbe5c95e98d4c044d972583bb20f4c43bca43c1d9f718c6d"
      },
      "downloads": 0,
      "filename": "sklearn-pandas-1.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3e1e3cb23b18a7aca8e6d7f63f905d6c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 13104,
      "upload_time": "2017-06-24T17:24:35",
      "url": "https://files.pythonhosted.org/packages/62/21/9847922a9ef01e845300436a5e5b8673b28c7d266e577e7bf8b2599161e9/sklearn-pandas-1.5.0.tar.gz"
    }
  ]
}