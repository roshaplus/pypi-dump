{
  "info": {
    "author": "Dion H\u00e4fner (NBI Copenhagen)",
    "author_email": "mail@dionhaefner.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering"
    ],
    "description": "![Veros](doc/_images/veros-logo-400px.png?raw=true)\n\n[![Documentation Status](https://readthedocs.org/projects/veros/badge/?version=latest)](http://veros.readthedocs.io/?badge=latest) [![Build Status](https://travis-ci.org/dionhaefner/veros.svg?branch=master)](https://travis-ci.org/dionhaefner/veros)\n\nVeros, the *versatile ocean simulator*, is just that: A powerful tool that makes high-performance ocean modeling approachable and fun. Since it is a pure Python module, the days of struggling with complicated model setup workflows, ancient programming environments, and obscure legacy code are finally over.\n\nVeros supports both a NumPy backend for small-scale problems and a fully parallelized high-performance backend [powered by Bohrium](https://github.com/bh107/bohrium) using either OpenMP (CPU) or OpenCL (GPU). The underlying numerics are based on [pyOM2](https://wiki.cen.uni-hamburg.de/ifm/TO/pyOM2), an ocean model developed by Carsten Eden (Institut f\u00fcr Meereskunde, Hamburg University).\nA good starting point to gain an overview of Veros' design, performance, and capabilities are [these slides of a talk on Veros](http://slides.com/dionhaefner/veros-ams) held during the 98th Annual Meeting of the American Meteorological Society.\n\nVeros is currently being developed at Niels Bohr Institute, Copenhagen University.\n\n## Features\n\nVeros provides\n\n-   a fully staggered **3-D grid geometry** (*C-grid*)\n-   support for both **idealized and realistic configurations** in Cartesian or pseudo-spherical coordinates\n-   several **friction and advection schemes** to choose from\n-   isoneutral mixing, eddy-kinetic energy, turbulent kinetic energy, and internal wave energy **parameterizations**\n-   several **pre-implemented diagnostics** such as energy fluxes, variable time averages, and a vertical overturning stream function (written to netCDF output)\n-   **pre-configured idealized and realistic set-ups** that are ready to run and easy to adapt\n-   **accessibility, readability, and extensibility** - thanks to the power of Python!\n\n## Veros for the impatient\n\nA minimal example to install and run Veros:\n\n    $ pip install veros[all]\n    $ veros copy-setup acc --to /tmp\n    $ cd /tmp/acc\n    $ python acc.py\n\n\n## Installation\n\n### Dependencies\n\nCurrently, the only officially supported Python version for Veros is Python 2.7 (64-bit), which should be the standard Python interpreter on most systems.\n\nVeros only has two external library dependencies, namely `HDF5` and `netCDF`. The installation procedure of those libraries varies between platforms. Probably the easiest way to install Veros and its dependencies (includung Bohrium) is [Anaconda Python](https://www.continuum.io/downloads) that ships with a package manager (``conda``).\n\nIf you do not want to use Anaconda, the most convenient way is to use your operating system's package manager. On Debian / Ubuntu, you can e.g. use\n\n    $ sudo apt-get install libhdf5-dev libnetcdf-dev\n\nSimilar package managers on OSX are [Homebrew](https://brew.sh/) or [MacPorts](https://www.macports.org/), which both provide the required dependencies as pre-compiled binaries.\n\n### Installing Veros\n\nAs soon as you have a working environment, installing Veros is simple:\n\n1.  Clone the repository to your hard-drive:\n\n        $ git clone https://github.com/dionhaefner/veros.git\n\n2.  Install it, preferably with\n\n        $ pip install -e veros\n\n    If you use the `-e` flag, any changes you make to the model code are immediately reflected without having to re-install.\n\nIn case you want to use the Bohrium backend, you will have to install [Bohrium](https://github.com/bh107/bohrium), e.g. through `conda` or `apt-get`, or by building it from source.\n\n## Basic usage\n\nTo run Veros, you need to set up a model - i.e., specify which settings and model domain you want to use. This is done by subclassing the ``Veros`` base class in a *setup script* that is written in Python. You should have a look at the pre-implemented model setups in the repository's ``setup`` folder, or use the ``veros copy-setup`` command to copy one into your current folder. A good place to start is the [``ACC`` model](https://github.com/dionhaefner/veros/blob/master/setup/acc/acc.py).\n\nAfter setting up your model, all you need to do is call the ``setup`` and ``run`` methods on your setup class. The pre-implemented setups can all be executed as scripts, e.g. through\n\n    $ python acc.py\n\nFor more information on using Veros, have a look at [our documentation](http://veros.readthedocs.io).\n\n## Contributing\n\nContributions to Veros are always welcome, no matter if you spotted an inaccuracy in [the documentation](http://veros.readthedocs.io), wrote a nice setup, fixed a bug, or even extended Veros' core mechanics. There are two ways to contribute:\n\n-   If you want to report a bug or request a missing feature, please [open an issue](https://github.com/dionhaefner/veros/issues). If you are reporting a bug, make sure to include all relevant information for reproducing it (ideally through a *minimal* code sample).\n-   If you want to fix the issue yourself, or wrote an extension for Veros - great! You are welcome to submit your code for review by committing it to a repository and opening a [pull request](https://github.com/dionhaefner/veros/pulls). However, before you do so, please check [the contribution guide](http://veros.readthedocs.io/quickstart/get-started.html#enhancing-veros) for some tips on testing and benchmarking, and to make sure that your modifications adhere with our style policies. Most importantly, please ensure that you follow the [PEP8 guidelines](https://www.python.org/dev/peps/pep-0008/), use *meaningful* variable names, and document your code using [Google-style docstrings](http://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html).\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://veros.readthedocs.io",
    "keywords": "oceanography python parallel numpy multi-core geophysics ocean-model bohrium",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "veros",
    "platform": "",
    "project_url": "https://pypi.org/project/veros/",
    "release_url": "https://pypi.org/project/veros/0.1.1/",
    "requires_dist": [
      "matplotlib; extra == 'postprocessing'",
      "xarray; extra == 'postprocessing'",
      "pyopencl; extra == 'gpu'",
      "bohrium; extra == 'gpu'",
      "pyamg; extra == 'fast'",
      "bohrium; extra == 'fast'",
      "versioneer; extra == 'dev'",
      "pyinstrument; extra == 'dev'",
      "bohrium; extra == 'bohrium'",
      "xarray; extra == 'all'",
      "versioneer; extra == 'all'",
      "pyopencl; extra == 'all'",
      "pyinstrument; extra == 'all'",
      "pyamg; extra == 'all'",
      "matplotlib; extra == 'all'",
      "bohrium; extra == 'all'",
      "future",
      "backports.functools-lru-cache",
      "ruamel.yaml",
      "pillow",
      "h5py",
      "netCDF4",
      "scipy",
      "numpy (>=1.13)",
      "requests",
      "click"
    ],
    "requires_python": "",
    "summary": "The versatile ocean simulator, in pure Python, powered by Bohrium.",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3c5cd6df17b4eed4cbcc680defac77b2",
          "sha256": "0be5659cdc27c8274e51ce18f18e5dcf524e8da6e29bdd25e53b8ea2c849a871"
        },
        "downloads": -1,
        "filename": "veros-0.1.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c5cd6df17b4eed4cbcc680defac77b2",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 299971,
        "upload_time": "2018-01-25T07:32:59",
        "url": "https://files.pythonhosted.org/packages/c5/aa/d04dae4de3eadf758fe69c0757ed05217a3607d873ca02805f5520249032/veros-0.1.1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "16e8c62cba3db322ec45d897e09a9ba7",
          "sha256": "9470fc2da6abcf817e41b041d05d0278bbeb82066a6ce19164c9faf1bfcd1591"
        },
        "downloads": -1,
        "filename": "veros-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16e8c62cba3db322ec45d897e09a9ba7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 299971,
        "upload_time": "2018-01-25T07:33:03",
        "url": "https://files.pythonhosted.org/packages/04/49/d9c5a3d5c9acd388f252eff7c3d94067c4c77ceeaf70d29e740693448edf/veros-0.1.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b85a62fd6e61d32f67ae349751140bc1",
          "sha256": "b9ca807932403b138f5e5c8cd8c26267afb7eb04179de190d1cc63c03d19c077"
        },
        "downloads": -1,
        "filename": "veros-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b85a62fd6e61d32f67ae349751140bc1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 288960,
        "upload_time": "2018-01-25T07:33:07",
        "url": "https://files.pythonhosted.org/packages/30/85/e45cf4c8710ea38b964102487c9dbbecd10a1f251d177d55c8a84bb2f6d7/veros-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "3c5cd6df17b4eed4cbcc680defac77b2",
        "sha256": "0be5659cdc27c8274e51ce18f18e5dcf524e8da6e29bdd25e53b8ea2c849a871"
      },
      "downloads": -1,
      "filename": "veros-0.1.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "3c5cd6df17b4eed4cbcc680defac77b2",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 299971,
      "upload_time": "2018-01-25T07:32:59",
      "url": "https://files.pythonhosted.org/packages/c5/aa/d04dae4de3eadf758fe69c0757ed05217a3607d873ca02805f5520249032/veros-0.1.1-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "16e8c62cba3db322ec45d897e09a9ba7",
        "sha256": "9470fc2da6abcf817e41b041d05d0278bbeb82066a6ce19164c9faf1bfcd1591"
      },
      "downloads": -1,
      "filename": "veros-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "16e8c62cba3db322ec45d897e09a9ba7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 299971,
      "upload_time": "2018-01-25T07:33:03",
      "url": "https://files.pythonhosted.org/packages/04/49/d9c5a3d5c9acd388f252eff7c3d94067c4c77ceeaf70d29e740693448edf/veros-0.1.1-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "b85a62fd6e61d32f67ae349751140bc1",
        "sha256": "b9ca807932403b138f5e5c8cd8c26267afb7eb04179de190d1cc63c03d19c077"
      },
      "downloads": -1,
      "filename": "veros-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b85a62fd6e61d32f67ae349751140bc1",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 288960,
      "upload_time": "2018-01-25T07:33:07",
      "url": "https://files.pythonhosted.org/packages/30/85/e45cf4c8710ea38b964102487c9dbbecd10a1f251d177d55c8a84bb2f6d7/veros-0.1.1.tar.gz"
    }
  ]
}