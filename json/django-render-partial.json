{
  "info": {
    "author": "utapyngo",
    "author_email": "ut@pyngo.tom.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "Installation\r============\r\r\r1. ``pip install django_render_partial``\r2. Add ``'django_render_partial'`` to ``INSTALLED_APPS``\r3. Ensure that ``'django.core.context_processors.request'`` is in\r   ``TEMPLATE_CONTEXT_PROCESSORS``\r\r\rUsage\r=====\r\rWrite a template for partial view, e.g. ``partial_view.html``::\r\r    <p>{{ arg1 }} + {{ arg2 }} = {{ result }}</p>\r\rWrite a partial view::\r\r    def partial_view(request, *args, **kwargs):\r        result = kwargs['arg1'] + kwargs['arg2']\r        kwargs['result'] = result\r        return render(request, 'partial_view.html', kwargs)\r\rif you are using function-based views, or::\r\r    class PartialView(TemplateView):\r        template_name = 'partial_view.html'\r\r        def get_context_data(self, **kwargs):\r            result = kwargs['arg1'] + kwargs['arg2']\r            kwargs['result'] = result\r            return super(PartialView, self).get_context_data(**kwargs)\r\rif you are using class-based views.\r\r\rAdd it to ``urls.py``::\r\r    url(r'^partial-view/(?P<arg1>\\w+)/(?P<arg2>\\w+)/$',\r        partial_view,\r        name='partial_view'),\r\ror::\r\r    url(r'^partial-view/(?P<arg1>\\w+)/(?P<arg2>\\w+)/$',\r        PartialView.as_view(),\r        name='partial_view'),\r\rIn your template::\r\r    {% load render_partial %}\r    {% with some_var=2 %}\r      {% render_partial 'partial_view' arg1=40 arg2=some_var %}\r    {% endwith %}\r\rThe ``render_partial`` tag would be rendered to::\r\r    <p>40 + 2 = 42</p>\r\rNote that the ``with`` tag above is not required for ``render_partial``\rto work. It is used to show that ``render_partial`` accepts variables.\rEvery argument will be evaluated against context except for the names of\rany keyword arguments.\r\rIf you don't want to expose your partial view in ``urls.py``, you can\ralso use fully qualified dot separated view name::\r\r  {% render_partial 'partial_test.views.PartialView' arg1=40 arg2=some_var %}\r  {% render_partial 'partial_test.views.partial_view' arg1=40 arg2=some_var %}\r\r\r**IMPORTANT**: the calling template must receive a context variable called\r``request`` containing the original ``HttpRequest``. Don't forget to add\r``'django.core.context_processors.request'`` to\r``TEMPLATE_CONTEXT_PROCESSORS``.\r\r\rAdapted from https://djangosnippets.org/snippets/1568/",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/utapyngo/django-render-partial",
    "keywords": "django,render,partial,view,template,tag",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-render-partial",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-render-partial/",
    "release_url": "https://pypi.org/project/django-render-partial/0.1/",
    "requires_python": null,
    "summary": "Django render_partial tag allows inserting rendered views into templates",
    "version": "0.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "27afa7feb91d104703f99b6111bea5db",
          "sha256": "64028539161dee6a1c5bc6d4bac4205593c0a76646e59229b7bf721cb38d4a2a"
        },
        "downloads": 5012,
        "filename": "django-render-partial-0.1.zip",
        "has_sig": false,
        "md5_digest": "27afa7feb91d104703f99b6111bea5db",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7425,
        "upload_time": "2014-07-19T07:27:49",
        "url": "https://files.pythonhosted.org/packages/e7/76/f0d6ade47aa6fd69b8cfa37ace104989134c557344ec15f08e7d61a7691c/django-render-partial-0.1.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "27afa7feb91d104703f99b6111bea5db",
        "sha256": "64028539161dee6a1c5bc6d4bac4205593c0a76646e59229b7bf721cb38d4a2a"
      },
      "downloads": 5012,
      "filename": "django-render-partial-0.1.zip",
      "has_sig": false,
      "md5_digest": "27afa7feb91d104703f99b6111bea5db",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7425,
      "upload_time": "2014-07-19T07:27:49",
      "url": "https://files.pythonhosted.org/packages/e7/76/f0d6ade47aa6fd69b8cfa37ace104989134c557344ec15f08e7d61a7691c/django-render-partial-0.1.zip"
    }
  ]
}