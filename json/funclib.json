{
  "info": {
    "author": "CN-Tower",
    "author_email": "247114045@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# FuncLib\n```\n    ===================================================================================\n                                        FuncLib\n                        A data processing methods lib for Python(2/3)\n    -----------------------------------------------------------------------------------\n                                 Author: @CN-Tower\n                              Create At: 2018-2-2\n                              Update At: 2018-2-10\n                                Version: V2.0.4\n                                 GitHub: http://github.com/CN-Tower/FuncLib\n    -----------------------------------------------------------------------------------\n                          0: T.info                 1: T.index\n                          2: T.find                 3: T.filter\n                          4: T.reject               5: T.reduce\n                          6: T.contains             7: T.flatten\n                          8: T.each                 9: T.uniq\n                         10: T.drop                11: T.pluck\n                         12: T.every               13: T.some\n                         14: T.list                15: T.dump\n                         16: T.clone               17: T.test\n                         18: T.replace             19: T.iscan\n                         20: T.log                 21: T.timer\n                         22: T.now                 23: T.help\n    ===================================================================================\n```\n## Quick Start\n```\n$ pip install funclib\n$ python\n>>> from funclib import T\n>>> T.help()\n```\n## Methods\n * [T.index   ](#tindex)\n * [T.find    ](#tfind)\n * [T.filter  ](#tfilter)\n * [T.reject  ](#treject)\n * [T.reduce  ](#treduce)\n * [T.contains](#tcontains)\n * [T.flatten ](#tflatten)\n * [T.each    ](#teach)\n * [T.uniq    ](#tuniq)\n * [T.drop    ](#tdrop)\n * [T.pluck   ](#tpluck)\n * [T.every   ](#tevery)\n * [T.some    ](#tsome)\n * [T.list    ](#tlist)\n * [T.dump    ](#tdump)\n * [T.clone   ](#tclone)\n * [T.test    ](#ttest)\n * [T.replace ](#treplace)\n * [T.iscan   ](#tiscan)\n * [T.log     ](#tlog)\n * [T.timer   ](#ttimer)\n * [T.now     ](#tnow)\n * [T.help    ](#thelp)\n## Document\n### T.index\n```\n    Looks through the list and returns the item index. If no match is found,\n    or if list is empty, -1 will be returned.\n    eg:\n        from funclib import T\n        persons = [{\"name\": \"Tom\", \"age\": 12},\n            {\"name\": \"Jerry\", \"age\": 20},\n            {\"name\": \"Mary\", \"age\": 35}]\n\n        Jerry_idx = T.index({\"name\": 'Jerry'}, persons)\n        Mary_idx  = T.index(lambda x: x['name'] == 'Mary', persons)\n\n        print(Jerry_idx)  # => 1\n        print(Mary_idx)   # => 2\n\n```\n### T.find\n```\n    Looks through each value in the list, returning the first one that passes\n    a truth test (predicate), or None.If no value passes the test the function\n    returns as soon as it finds an acceptable element, and doesn't traverse\n    the entire list.\n    eg:\n        from funclib import T\n        persons = [{\"name\": \"Tom\", \"age\": 12},\n            {\"name\": \"Jerry\", \"age\": 20},\n            {\"name\": \"Mary\", \"age\": 35}]\n\n        Jerry = T.find({\"name\": 'Jerry'}, persons)\n        Mary  = T.find(lambda x: x['name'] == 'Mary', persons)\n\n        print(Jerry)  # => {'age': 20, 'name': 'Jerry'}\n        print(Mary)   # => {'age': 35, 'name': 'Mary'}\n\n```\n### T.filter\n``` \n    Looks through each value in the list, returning an array of all the values that\n    pass a truth test (predicate).\n    eg:\n        from funclib import T\n        persons = [{\"name\": \"Tom\", \"age\": 20},\n                   {\"name\": \"Jerry\", \"age\": 20},\n                   {\"name\": \"Jerry\", \"age\": 35}]\n\n        Jerry = T.filter({\"age\": 20}, persons)\n        Mary = T.filter(lambda x: x['name'] == 'Jerry', persons)\n        print(Jerry)  # => [{'age': 20, 'name': 'Tom'}, {'age': 20, 'name': 'Jerry'}]\n        print(Mary)   # => [{'age': 20, 'name': 'Jerry'}, {'age': 35, 'name': 'Jerry'}]\n        \n```\n### T.reject\n``` \n    Returns the values in list without the elements that the truth test (predicate) passes.\n    The opposite of filter.\n    eg:\n        from funclib import T\n        persons = [{\"name\": \"Tom\", \"age\": 12},\n                   {\"name\": \"Jerry\", \"age\": 20},\n                   {\"name\": \"Mary\", \"age\": 35}]\n\n        not_Mary = T.reject({\"name\": \"Mary\"}, persons)\n        adults = T.reject(lambda x: x['age'] < 18, persons)\n\n        print(not_Mary)  # => [{\"age\": 12, \"name\": \"Tom\"}, {\"age\": 20, \"name\": \"Jerry\"}]\n        print(adults)    # => [{\"age\": 20, \"name\": \"Jerry\"}, {\"age\": 35, \"name\": \"Mary\"}]\n\n```\n### T.reduce\n```\n    Returns the buildIn method 'reduce', in python 3 the 'reduce' is imported from functools.\n    eg:\n        from funclib import T\n        num_list = [1 , 2, 3, 4]\n        print(T.reduce(lambda a, b: a + b, num_list))  # => 10\n\n```\n### T.contains\n```\n    Returns true if the value is present in the list.\n    eg:\n        from funclib import T\n        persons = [{\"name\": \"Tom\", \"age\": 12},\n                   {\"name\": \"Jerry\", \"age\": 20},\n                   {\"name\": \"Mary\", \"age\": 35}]\n\n        is_contains_Jerry = T.contains({\"name\": \"Jerry\", \"age\": 12}, persons)\n        is_contains_Mary = T.contains(lambda x: x['name'] == 'Mary', persons)\n\n        print(is_contains_Jerry)  # => False\n        print(is_contains_Mary)   # => True\n\n```\n### T.flatten\n```\n    Flattens a nested array (the nesting can be to any depth). If you pass shallow,\n    the array will only be flattened a single level.\n    eg:\n        from funclib import T\n        flt_list_01 = T.flatten([1, [2], [3, [[4]]]])\n        flt_list_02 = T.flatten([1, [2], [3, [[4]]]], True)\n        print (flt_list_01)  # => [1, 2, 3, [[4]]]\n        print (flt_list_02)  # => [1, 2, 3, 4];\n\n```\n### T.each\n```\n    Produces a new values list by mapping each value in list through a transformation\n    function (iteratee).\n    eg:\n        from funclib import T\n        num_list = [1 , 2, 3, 4]\n        list_10 = T.each(lambda x: x % 2, num_list)\n        print(list_10)  #=> [1, 0, 1, 0]\n\n```\n### T.uniq\n```\n    Produces a duplicate-free version of the array.\n    In particular only the first occurence of each value is kept.\n    eg:\n        from funclib import T\n        persons00 = (\"Tom\", \"Tom\", \"Jerry\")\n        persons01 = [\"Tom\", \"Tom\", \"Jerry\"]\n        persons02 = [{\"name\": \"Tom\", \"age\": 12, \"sex\": \"m\"},\n                     {\"name\": \"Tom\", \"age\": 20, \"sex\": \"m\"},\n                     {\"name\": \"Mary\", \"age\": 35, \"sex\": \"f\"}]\n        demo_list = [False, [], False, True, [], {}, False, '']\n\n        unique_persons00 = T.uniq(persons00)\n        unique_persons01 = T.uniq(persons01)\n        unique_demo_list = T.uniq(demo_list)\n        one_Tom = T.uniq({\"name\": \"Tom\"}, persons02)\n        one_mail = T.uniq(lambda x: x['sex'] == \"m\", persons02)\n\n        print(unique_persons00)  # => [\"Jerry\", \"Tom\"]\n        print(unique_persons01)  # => [\"Jerry\", \"Tom\"]\n        print(unique_demo_list)  # => [False, [], True, {}, '']\n        print(one_Tom)  # => [{'age': 12, 'name': 'Tom', 'sex': 'm'}, {'age': 35, 'name': 'Mary', 'sex': 'f'}]\n        print(one_mail)  # => [{'age': 12, 'name': 'Tom', 'sex': 'm'}, {'age': 35, 'name': 'Mary', 'sex': 'f'}]\n\n```\n### T.drop\n```\n    Delete false values expect 0.\n    eg:\n        from funclib import T\n        tmp_list = [0, '', 3, None, [], {}, ['Yes'], 'Test']\n        drop_val = T.drop(tmp_list)\n        drop_val_and_0 = T.drop(tmp_list, True)\n\n        print(drop_val)        # => [0, 3, ['Yes'], 'Test']\n        print(drop_val_and_0)  # => [3, ['Yes'], 'Test']\n\n```\n### T.pluck\n```\n    Pluck the list element of collections.\n    eg:\n        from funclib import T\n        persons = [{\"name\": \"Tom\", \"hobbies\": [\"sing\", \"running\"]},\n            {\"name\": \"Jerry\", \"hobbies\": []},\n            {\"name\": \"Mary\", \"hobbies\": ['hiking', 'sing']}]\n\n        hobbies = T.pluck(persons, 'hobbies')\n        hobbies_uniq = T.pluck(persons, 'hobbies', uniq=True)\n\n        print(hobbies)      # => [\"sing\", \"running\", 'hiking', 'sing']\n        print(hobbies_uniq) # => [\"sing\", \"running\", 'hiking']\n\n```\n### T.every\n```\n    Returns true if all of the values in the list pass the predicate truth test.\n    Short-circuits and stops traversing the list if a false element is found.\n    eg:\n        from funclib import T\n        num_list = [1, 1, 2, 3, 5, 8]\n        persons = [{\"name\": \"Tom\", \"age\": 12, \"sex\": \"m\"},\n                   {\"name\": \"Jerry\", \"age\": 20, \"sex\": \"m\"},\n                   {\"name\": \"Mary\", \"age\": 35, \"sex\": \"f\"}]\n\n        is_all_five = T.every(5, num_list)\n        is_all_male = T.every({\"sex\": \"m\"}, persons)\n        is_all_adult = T.every(lambda x: x['age'] > 18, persons)\n        print(is_all_five)   # => False\n        print(is_all_male)   # => False\n        print(is_all_adult)  # => False\n\n```\n### T.some\n```\n    Returns true if any of the values in the list pass the predicate truth test.\n    Short-circuits and stops traversing the list if a true element is found.\n    eg:\n        from funclib import T\n        num_list = [1, 1, 2, 3, 5, 8]\n        persons = [{\"name\": \"Tom\", \"age\": 12, \"sex\": \"m\"},\n                   {\"name\": \"Jerry\", \"age\": 20, \"sex\": \"m\"},\n                   {\"name\": \"Mary\", \"age\": 35, \"sex\": \"f\"}]\n\n        is_any_five = T.some(5, num_list)\n        is_any_male = T.some({\"sex\": \"m\"}, persons)\n        is_any_adult = T.some(lambda x: x['age'] > 18, persons)\n        print(is_any_five)   # => True\n        print(is_any_male)   # => True\n        print(is_any_adult)  # => True\n\n```\n### T.list\n```\n    Return now system time.\n    eg:\n        from funclib import T\n        print(T.list())       # => []\n        print(T.list([]))     # => []\n        print(T.list({}))     # => [{}]\n        print(T.list(None))   # => [None]\n        print(T.list('test')) # => ['test']\n\n```\n### T.dump\n```\n    Return a formatted json string.\n    eg:\n        from funclib import T\n        persons = [{\"name\": \"Tom\", \"hobbies\": [\"sing\", \"running\"]},\n            {\"name\": \"Jerry\", \"hobbies\": []}]\n        print(T.dump(persons)) #=>\n        [\n          {\n            \"hobbies\": [\n              \"sing\",\n              \"running\"\n            ],\n            \"name\": \"Tom\"\n          },\n          {\n            \"hobbies\": [],\n            \"name\": \"Jerry\"\n          }\n        ]\n\n```\n### T.clone\n```\n    Create a deep-copied clone of the provided plain object.\n    eg:\n        from funclib import T\n        persons = [{\"name\": \"Tom\", \"age\": 12}, {\"name\": \"Jerry\", \"age\": 20}]\n        persons_01 = persons\n        persons_02 = T.clone(persons)\n        T.find({'name': 'Tom'}, persons)['age'] = 18\n        print(persons_01)  # => [{\"name\": \"Tom\", \"age\": 18}, {\"name\": \"Jerry\", \"age\": 20}]\n        print(persons_02)  # => [{\"name\": \"Tom\", \"age\": 12}, {\"name\": \"Jerry\", \"age\": 20}]\n\n```\n### T.test\n```\n    Check is the match successful, a boolean value will be returned.\n    eg:\n        from funclib import T\n        not_in = T.test(r'ab', 'Hello World!')\n        in_str = T.test(r'll', 'Hello World!')\n        print(not_in)  # => False\n        print(in_str)  # => True\n\n```\n### T.replace\n```\n    Replace sub string of the origin string with re.sub()\n    eg:\n        from funclib import T\n        greetings = 'Hello I\\'m Tom!'\n        print(T.replace('Tom', 'Jack', greetings))  # => Hello I'm Jack!\n\n```\n### T.iscan\n```\n    Test is the expression valid, a boolean value will be returned.\n    eg:\n        from funclib import T\n        print(T.iscan(\"int('a')\"))  # => False\n        print(T.iscan(\"int('5')\"))  # => True\n\n```\n### T.log\n```\n    Show log clear in console.\n    eg:\n        from funclib import T\n        T.log([{\"name\": \"Tom\", \"hobbies\": [\"sing\", \"running\"]}, {\"name\": \"Jerry\", \"hobbies\": []}])\n\n        # =>\n        ===========================================================================\n                                    FuncLib ( V2.0.4 )\n        ---------------------------------------------------------------------------\n        [\n          {\n            \"hobbies\": [\n              \"sing\",\n              \"running\"\n            ],\n            \"name\": \"Tom\"\n          },\n          {\n            \"hobbies\": [],\n            \"name\": \"Jerry\"\n          }\n        ]\n        ===========================================================================\n\n```\n### T.timer\n```\n    Set a timer with interval and timeout limit.\n    eg:\n        from funclib import T\n        count = 0\n        def fn():\n            global count\n            if count == 4:\n                return True\n            count += 1\n            print(count)\n        T.timer(fn, 10, 2)\n        # =>\n            >>> 1  #at 0s\n            >>> 2  #at 2s\n            >>> 3  #at 4s\n            >>> 4  #at 4s\n\n```\n### T.now\n```\n    Return now system time.\n    eg:\n        from funclib import T\n        print(T.now()) # => '2018-2-1 19:32:10'\n\n```\n### T.help\n```\n    Return the FuncLib or it's method doc\n    eg:\n        from funclib import T\n        T.help('index')\n        # =>\n    ===========================================================================\n                            FuncLib ( V2.0.4 ) --> T.index\n    ---------------------------------------------------------------------------\n        Looks through the list and returns the item index. If no match is found,\n        or if list is empty, -1 will be returned.\n        eg:\n            from funclib import T\n            persons = [{\"name\": \"Tom\", \"age\": 12},\n                {\"name\": \"Jerry\", \"age\": 20},\n                {\"name\": \"Mary\", \"age\": 35}]\n\n            Jerry_idx = T.index({\"name\": 'Jerry'}, persons)\n            Mary_idx  = T.index(lambda x: x['name'] == 'Mary', persons)\n\n            print(Jerry_idx)  # => 1\n            print(Mary_idx)   # => 2\n    ===========================================================================\n\n```",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/CN-Tower/FuncLib",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "funclib",
    "platform": "all",
    "project_url": "https://pypi.org/project/funclib/",
    "release_url": "https://pypi.org/project/funclib/2.0.4/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A data processing methods lib of python",
    "version": "2.0.4"
  },
  "releases": {
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "96335e02690fa6e5cd894ede801c8ee0",
          "sha256": "f79e0dcf1ac6be1b1561291443fcd90af66f8cadb3c92ce9e7ea87e3031ef0c9"
        },
        "downloads": -1,
        "filename": "funclib-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "96335e02690fa6e5cd894ede801c8ee0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10511,
        "upload_time": "2018-02-10T02:42:37",
        "url": "https://files.pythonhosted.org/packages/c8/69/4c2487804e3e09a9100454d52fa840a2d09f38040ce6be4f596785256416/funclib-2.0.1.tar.gz"
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6a0e1199d0379408ee721236a3499ef8",
          "sha256": "f85e26f1037255170f72facca97f71f28a3a7521e0d6ca188ad7412390cc484e"
        },
        "downloads": -1,
        "filename": "funclib-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6a0e1199d0379408ee721236a3499ef8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10650,
        "upload_time": "2018-02-10T07:06:26",
        "url": "https://files.pythonhosted.org/packages/c3/18/b1d3778f331d074207f265523adb2ea198c6a77ba983233e5fd1db7bee87/funclib-2.0.2.tar.gz"
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f25f44de64bf48c961e2e0874b63843c",
          "sha256": "5cdbeae1f12e5563c9dc5a8d5c117259f296ca98fa41c54dec712ba28fc42d65"
        },
        "downloads": -1,
        "filename": "funclib-2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f25f44de64bf48c961e2e0874b63843c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9462,
        "upload_time": "2018-02-10T13:32:24",
        "url": "https://files.pythonhosted.org/packages/5a/a6/36c3478f6fcb3820d8977fd352ab35120a44f60087771986cae2819b9b60/funclib-2.0.3.tar.gz"
      }
    ],
    "2.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e55a478911c4e2948a10dcb3bca6abd5",
          "sha256": "f674dbf927ccdccbd976780331fdf3fa5f01749b15c364f53222542cca1f0519"
        },
        "downloads": -1,
        "filename": "funclib-2.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e55a478911c4e2948a10dcb3bca6abd5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9449,
        "upload_time": "2018-02-10T13:43:52",
        "url": "https://files.pythonhosted.org/packages/bc/7a/fbe9e0255cf2dbcfc9222be5555651c7afc97f3208a5155e022ec57584bc/funclib-2.0.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e55a478911c4e2948a10dcb3bca6abd5",
        "sha256": "f674dbf927ccdccbd976780331fdf3fa5f01749b15c364f53222542cca1f0519"
      },
      "downloads": -1,
      "filename": "funclib-2.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "e55a478911c4e2948a10dcb3bca6abd5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9449,
      "upload_time": "2018-02-10T13:43:52",
      "url": "https://files.pythonhosted.org/packages/bc/7a/fbe9e0255cf2dbcfc9222be5555651c7afc97f3208a5155e022ec57584bc/funclib-2.0.4.tar.gz"
    }
  ]
}