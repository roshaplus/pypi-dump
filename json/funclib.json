{
  "info": {
    "author": "CN-Tower",
    "author_email": "247114045@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# FuncLib\n\nA data processing methods lib of python\n\nFor Python2.7\n\n## about\n    Author: CN-Tower\n    Version: V1.0.2\n    Date: 2018-2-2\n    GitHub: http://github.com/CN-Tower/dataTools\n\n## Methods\n * [T.help](#thelp)\n * [T.find](#tfind)\n * [T.find_index](#tfind_index)\n * [T.find_where](#tfind_where) \n * [T.contains](#tcontains)\n * [T.reject](#treject)\n * [T.every](#tevery)\n * [T.some](#tsome)\n * [T.uniq](#tuniq)\n * [T.pluck](#tpluck)\n * [T.list](#tlist)\n * [T.dump](#tdump)\n * [T.log](#tlog)\n * [T.timer](#ttimer)\n * [T.now](#tnow)\n\n## Document\n\n### T.help\n```\n    Return the FuncLib or it's method doc\n    eg:\n        T.help('find')\n        # =>\n        =====================================================================================\n                           Msg From T-log (V1.0.4)\n        -------------------------------------------------------------------------------------\n\n            ### T.find\n            ```\n                Looks through each value in the list, returning the first one that passes\n                a truth test (predicate), or None.If no value passes the test the function\n                returns as soon as it finds an acceptable element, and doesn't traverse\n                the entire list.\n\n                eg:\n                    persons = [{\"name\": \"Tom\", \"age\": 12},\n                        {\"name\": \"Jerry\", \"age\": 20},\n                        {\"name\": \"Mary\", \"age\": 35}]\n\n                    Tom = T.find(lambda x: x['name'] == 'Tom', persons)\n\n                    print(Tom)  # => {\"age\": 12, \"name\": \"Tom\"}\n\n            ```\n\n        =====================================================================================\n\n```\n### T.find\n```\n    Looks through each value in the list, returning the first one that passes\n    a truth test (predicate), or None.If no value passes the test the function\n    returns as soon as it finds an acceptable element, and doesn't traverse\n    the entire list.\n\n    eg:\n        persons = [{\"name\": \"Tom\", \"age\": 12},\n            {\"name\": \"Jerry\", \"age\": 20},\n            {\"name\": \"Mary\", \"age\": 35}]\n\n        Tom = T.find(lambda x: x['name'] == 'Tom', persons)\n\n        print(Tom)  # => {\"age\": 12, \"name\": \"Tom\"}\n\n```\n### T.find_index\n``` \n    Looks through the list and returns the item index. If no match is found,\n    or if list is empty, -1 will be returned.\n\n    eg:\n        persons = [{\"name\": \"Tom\", \"age\": 12},\n            {\"name\": \"Jerry\", \"age\": 20},\n            {\"name\": \"Mary\", \"age\": 35}]\n\n        Hint_idx = T.find_index({\"name\": 'Mary'}, persons)\n\n        print(Hint_idx)  # => 2\n        \n```\n### T.find_where\n``` \n    Looks through the list and returns the first value that matches all of the\n    key-value pairs listed in properties. If no match is found, or if list is\n    empty, None will be returned.\n\n    eg:\n        persons = [{\"name\": \"Tom\", \"age\": 12},\n            {\"name\": \"Jerry\", \"age\": 20},\n            {\"name\": \"Mary\", \"age\": 35}]\n\n        person = T.find_where({\"age\": 35}, persons)\n\n        print(person)  # => {\"age\": 35, \"name\": \"Mary\"}\n\n```\n### T.contains\n``` \n\n    Returns true if the value is present in the list.\n    eg:\n        persons = [{\"name\": \"Tom\", \"age\": 12},\n            {\"name\": \"Jerry\", \"age\": 20},\n            {\"name\": \"Mary\", \"age\": 35}]\n\n        is_contains_Marry = T.contains({\"name\": \"Mary\", \"age\": 22}, persons)\n\n        print(is_contains_Marry)  # => False\n\n```\n### T.reject\n``` \n\n    Returns the values in list without the elements that the truth test (predicate) passes.\n    The opposite of filter.\n    eg:\n        persons = [{\"name\": \"Tom\", \"age\": 12},\n            {\"name\": \"Jerry\", \"age\": 20},\n            {\"name\": \"Mary\", \"age\": 35}]\n\n        adult = T.reject(lambda x: x['age'] < 18, persons)\n\n        print(adult)  # => [{\"age\": 20, \"name\": \"Jerry\"}, {\"age\": 35, \"name\": \"Mary\"}]\n\n```\n### T.every\n``` \n\n    Returns true if all of the values in the list pass the predicate truth test.\n    Short-circuits and stops traversing the list if a false element is found.\n    eg:\n        tmp_list = [0, '', 3, None]\n\n        every_true = T.every(True, tmp_list)\n\n        print(every_true)  # => False\n\n    eg:\n        persons = [{\"name\": \"Tom\", \"age\": 12, \"sex\": \"m\"},\n           {\"name\": \"Jerry\", \"age\": 20, \"sex\": \"m\"},\n           {\"name\": \"Mary\", \"age\": 35, \"sex\": \"f\"}]\n\n        is_all_male = T.every(lambda x: x['sex'] == \"m\", persons)\n\n        print(is_all_male)  # => False\n\n```\n### T.some\n``` \n\n    Returns true if any of the values in the list pass the predicate truth test.\n    Short-circuits and stops traversing the list if a true element is found.\n    eg:\n        tmp_list = [0, '', 3, None]\n\n        some_true = T.some(True, tmp_list)\n\n        print(some_true)  # => True\n\n    eg:\n        persons = [{\"name\": \"Tom\", \"age\": 12, \"sex\": \"m\"},\n            {\"name\": \"Jerry\", \"age\": 20, \"sex\": \"m\"},\n            {\"name\": \"Mary\", \"age\": 35, \"sex\": \"f\"}]\n\n        is_some_female = T.some(lambda x: x['sex'] == \"f\", persons)\n\n        print(is_some_female)  # => True\n\n```\n### T.drop\n``` \n\n    Delete false values expect 0.\n    eg:\n        tmp_list = [0, '', 3, None, [], {}, ['Yes'], 'Test']\n        drop_val = T.drop(tmp_list)\n        drop_val_and_0 = T.drop(tmp_list, True)\n\n        print(drop_val)        # => [0, 3, ['Yes'], 'Test']\n        print(drop_val_and_0)  # => [3, ['Yes'], 'Test']\n\n```\n### T.uniq\n``` \n\n    Produces a duplicate-free version of the array.\n    In particular only the first occurence of each value is kept.\n    eg:\n        persons = [\"Tom\", \"Tom\", \"Jerry\"]\n\n        persons = T.uniq(persons)\n\n        print(persons)  # => [\"Jerry\", \"Tom\"]\n\n    eg:\n        persons = [{\"name\": \"Tom\", \"age\": 12, \"sex\": \"m\"},\n            {\"name\": \"Tom\", \"age\": 20, \"sex\": \"m\"},\n            {\"name\": \"Mary\", \"age\": 35, \"sex\": \"f\"}]\n\n        persons = T.uniq(persons, {\"name\": \"Tom\"})\n\n        print(persons)  # => [{\"age\": 12, \"name\": \"Tom\", \"sex\": \"m\"}, {\"age\": 35, \"name\": \"Mary\", \"sex\": \"f\"}]\n\n```\n### T.pluck\n``` \n\n    Pluck the list element of collections.\n    eg:\n        persons = [{\"name\": \"Tom\", \"hobbies\": [\"sing\", \"running\"]},\n            {\"name\": \"Jerry\", \"hobbies\": []},\n            {\"name\": \"Mary\", \"hobbies\": ['hiking', 'sing']}]\n\n        hobbies = T.pluck(persons, 'hobbies')\n        hobbies_uniq = T.pluck(persons, 'hobbies', uniq=True)\n\n        print(hobbies)      # => [\"sing\", \"running\", 'hiking', 'sing']\n        print(hobbies_uniq) # => [\"sing\", \"running\", 'hiking']\n\n```\n### T.list\n``` \n\n    Return now system time.\n    eg:\n        print(T.list())       # => []\n        print(T.list([]))     # => []\n        print(T.list({}))     # => [{}]\n        print(T.list(None))   # => [None]\n        print(T.list('test')) # => ['test']\n``` \n### T.dump\n``` \n    Return a formatted json string.\n    eg:\n        persons = [{\"name\": \"Tom\", \"hobbies\": [\"sing\", \"running\"]},\n            {\"name\": \"Jerry\", \"hobbies\": []}]\n            \n        print(T.dump(persons)) #=>\n        [\n          {\n            \"hobbies\": [\n              \"sing\", \n              \"running\"\n            ], \n            \"name\": \"Tom\"\n          }, \n          {\n            \"hobbies\": [], \n            \"name\": \"Jerry\"\n          }\n        ]\n```\n\n### T.log\n``` \n\n    Show log clear in console.\n    eg:\n        T.log()\n        T.log('Hello T-log!')\n        T.log('This is Test message!', 'Msg From Test:')\n        T.log([{\"name\": \"Tom\", \"hobbies\": [\"sing\", \"running\"]}, {\"name\": \"Jerry\", \"hobbies\": []}], persons)\n\n        # =>\n        ===========================================================================\n                                    Msg From T-log (V1.0.2)\n        ---------------------------------------------------------------------------\n        Have no Message!\n        ===========================================================================\n\n        # =>\n        ===========================================================================\n                                    Msg From T-log (V1.0.2)\n        ---------------------------------------------------------------------------\n        Hello T-log!\n        ===========================================================================\n\n        # =>\n        ===========================================================================\n                                        Msg From Test:\n        ---------------------------------------------------------------------------\n        This is Test message!\n        ===========================================================================\n\n        # =>\n        ===========================================================================\n                                          persons\n        ---------------------------------------------------------------------------\n        [\n          {\n            \"hobbies\": [\n              \"sing\", \n              \"running\"\n            ], \n            \"name\": \"Tom\"\n          }, \n          {\n            \"hobbies\": [], \n            \"name\": \"Jerry\"\n          }\n        ]\n        ===========================================================================\n\n```\n\n### T.timer\n```\n\n    Set a interval and times limit.\n    eg:\n        count = 0\n        def fun():\n            return count == 3:\n            print(count)\n            count += 1\n        T.timer(fn, 5, 2)\n        # =>\n            >>> 1  #at 0s\n            >>> 2  #at 2s\n            >>> 3  #at 4s\n\n```\n\n### T.now\n``` \n\n    Return now system time.\n    eg:\n        print(T.now()) # => '2018-2-1 19:32:10'\n\n```",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/CN-Tower/FuncLib",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "funclib",
    "platform": "all",
    "project_url": "https://pypi.org/project/funclib/",
    "release_url": "https://pypi.org/project/funclib/1.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A data processing methods lib of python",
    "version": "1.1.0"
  },
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4c7caec5bb1b49a0d0871258c4a57f69",
          "sha256": "bbfab71f680e0e0a6f8e791f57c031e48015ac07389212c7ebc7f88d291340c6"
        },
        "downloads": -1,
        "filename": "funclib-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4c7caec5bb1b49a0d0871258c4a57f69",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5634,
        "upload_time": "2018-02-04T13:59:49",
        "url": "https://files.pythonhosted.org/packages/b8/b1/bf5edb72955a9e344f00af734ffca85215834e08f6cfb6da6092c736ce76/funclib-1.0.3.tar.gz"
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "485c1860bcc89b93e57b42dc4725c1a3",
          "sha256": "12af5b29f0ed52843bafab31e6151989fecb76bcca31a8449ad01db4345d108e"
        },
        "downloads": -1,
        "filename": "funclib-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "485c1860bcc89b93e57b42dc4725c1a3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5642,
        "upload_time": "2018-02-04T14:12:32",
        "url": "https://files.pythonhosted.org/packages/48/d1/7c31ed7e90f64ea6ee2c634c3a1d0782a4d2e976132acf2daa6332586ad4/funclib-1.0.4.tar.gz"
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5ceaf13d0fe04deb4febed7d430a434c",
          "sha256": "e509314bbbda66def9383e892994d1b0cc324c981e337eea29e3d18689ab4dd0"
        },
        "downloads": -1,
        "filename": "funclib-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5ceaf13d0fe04deb4febed7d430a434c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6656,
        "upload_time": "2018-02-04T16:21:40",
        "url": "https://files.pythonhosted.org/packages/2c/2d/e74291b082dede6103bd5acbd9c8b5155fe3e4c2a2b99c4f72ef4b7b3c12/funclib-1.0.5.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4692561e2e5fb5e3113fd60d820a5c2d",
          "sha256": "fde6bd34c35b8371855863631990e062cb3c15851580f9b3cbe59d5c41f331da"
        },
        "downloads": -1,
        "filename": "funclib-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4692561e2e5fb5e3113fd60d820a5c2d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7072,
        "upload_time": "2018-02-05T16:19:19",
        "url": "https://files.pythonhosted.org/packages/5d/66/86c37c2ba1a70d8c7cb28766f087f901166557a4029294dd09aadf48b200/funclib-1.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4692561e2e5fb5e3113fd60d820a5c2d",
        "sha256": "fde6bd34c35b8371855863631990e062cb3c15851580f9b3cbe59d5c41f331da"
      },
      "downloads": -1,
      "filename": "funclib-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4692561e2e5fb5e3113fd60d820a5c2d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7072,
      "upload_time": "2018-02-05T16:19:19",
      "url": "https://files.pythonhosted.org/packages/5d/66/86c37c2ba1a70d8c7cb28766f087f901166557a4029294dd09aadf48b200/funclib-1.1.0.tar.gz"
    }
  ]
}