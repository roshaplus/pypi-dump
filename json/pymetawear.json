{
  "info": {
    "author": "Henrik Blidh",
    "author_email": "henrik.blidh@nedomkull.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4"
    ],
    "description": "==========\nPyMetaWear\n==========\n\n.. image:: https://travis-ci.org/hbldh/pymetawear.svg?branch=master\n    :target: https://travis-ci.org/hbldh/pymetawear\n.. image:: https://coveralls.io/repos/github/hbldh/pymetawear/badge.svg?branch=master\n    :target: https://coveralls.io/github/hbldh/pymetawear?branch=master\n\nPython package for connecting to and using\n`MbientLab's MetaWear <https://mbientlab.com/>`_ boards.\n\nPyMetawear is meant to be a thin wrapper around the\n`MetaWear C++ API <https://github.com/mbientlab/Metawear-CppAPI>`_,\nproviding a more Pythonic interface. It has support for two different\nPython packages for Bluetooth Low Energy communication:\n\n- `pygatt <https://github.com/peplin/pygatt>`_\n- `pybluez <https://github.com/karulis/pybluez>`_ with\n  `gattlib <https://bitbucket.org/OscarAcena/pygattlib>`_\n\nPyMetaWear can be run with Python 2 and 3.4 with both backends,\nbut only with the `pygatt` backend for Python 3.5.\n\n**It is a Linux-only package right now**! It can be built on Windows, given that\nVisual Studio Community 2015 has been installed first,\nbut there is no working backend for Windows BLE yet.\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    $ pip install pymetawear\n\nCurrently, only the `pygatt <https://github.com/peplin/pygatt>`_ communication\nbackend is installed by default. The other backend can be installed as extras:\n\n.. code-block:: bash\n\n    $ pip install pymetawear[pybluez]\n\n\nDebian requirements for ``pymetawear``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* ``build-essential``\n* ``python-dev``\n\nAdditional requirements for ``pybluez``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* ``libglib2.0-dev``\n* ``bluetooth``\n* ``libbluetooth-dev``\n* ``libboost-python-dev``\n* ``libboost-thread-dev``\n\n\nDevelopment\n~~~~~~~~~~~\n\nClone this repository and run\n\n.. code-block:: bash\n\n    $ python setup.py build\n\nto pull in the `MetaWear C++ API <https://github.com/mbientlab/Metawear-CppAPI>`_ submodule,\nbuild it and copy the Python wrappers from it to the PyMetaWear folder. This can also be achieved by\nrunning\n\n.. code-block:: bash\n\n    $ pip install -e .\n\nin the cloned repository's root folder.\n\nDocumentation\n-------------\n\nAvailable in the `Github pages <https://hbldh.github.io/pymetawear/>`_\nof this repository.\n\nBasic Usage\n-----------\n\nThe MetaWear client can be used in two ways: either as Pythonic\nconvenience class for handling a MetaWear board or as\na simple communication client governed by the ``libmetawear`` C++ library.\n\nCreating a client, and thus also setting up a Bluetooth connection to the\nMetaWear board, is equal for both the two usage profiles:\n\n.. code-block:: python\n\n    from pymetawear.client import MetaWearClient\n    backend = 'pygatt'  # Or 'pybluez'\n    c = MetaWearClient('DD:3A:7D:4D:56:F0', backend)\n\nAn example: blinking with the LED lights can be done like this with the\nconvenience methods:\n\n.. code-block:: python\n\n    pattern = c.led.load_preset_pattern('blink', repeat_count=10)\n    c.led.write_pattern(pattern, 'g')\n    c.led.play()\n\nor like this using the raw ``libmetawear`` shared library:\n\n.. code-block:: python\n\n    from ctypes import byref\n    from pymetawear import libmetawear\n    from pymetawear.mbientlab.metawear.peripheral import Led\n\n    pattern = Led.Pattern(repeat_count=10)\n    libmetawear.mbl_mw_led_load_preset_pattern(byref(pattern), Led.PRESET_BLINK)\n    libmetawear.mbl_mw_led_write_pattern(c.board, byref(pattern), Led.COLOR_GREEN)\n    libmetawear.mbl_mw_led_play(c.board)\n\n\nActual addresses to your MetaWear board can be found by scanning, either\ndirectly with ``hcitool lescan`` or with the included ``discover_devices`` method:\n\n.. code-block:: python\n\n    from pymetawear.client import discover_devices\n    out = discover_devices()\n    print out\n    [(u'DD:3A:7D:4D:56:F0', u'MetaWear'), (u'FF:50:35:82:3B:5A', u'MetaWear')]\n\nSee the examples folder for more examples on how to use the ``libmetawear``\nlibrary with this client.\n\nModules\n~~~~~~~\n\nAll functionality of the MetaWear C++ API is able to be used using the\nPyMetaWear client, and some of the modules have had convenience methods\nadded to simplify the use of them. Below are two list, one of modules which\nhave had their convenience methods written and one of modules that are\nawaiting such focus.\n\n================= =============== =====================\nCompleted Modules Partial Modules Unimplemented Modules\n================= =============== =====================\nAccelerometer     Settings        Proximity\nGyroscope                         Color Detector\nHaptic                            Humidity\nSwitch                            GPIO\nLED                               I2C\nBarometer                         iBeacon\nMagnetometer                      NeoPixel\nTemperature\nAmbient Light\n================= =============== =====================\n\n\n=======\nHistory\n=======\n\nv0.7.1 (2017-02-04)\n-------------------\n- Using MetaWear-CppAPI version 0.7.10\n- Sensor fusion module contributed from user m-georgi (#26).\n- Fix to magnetometer power preset setting due to\n  change in MetaWear-CppAPI (#25).\n\nv0.7.0 (2017-01-13)\n-------------------\n- Using MetaWear-CppAPI version 0.7.4\n- Removed bluepy backend due to it not being fully functional.\n- Refactored connection behaviour. Optional autoconnect via keyword.\n- Unit test work started with Mock backend.\n- Flake8 adaptations.\n- Fix for logging bug (#22)\n- New examples: Two client setup and complimentary filter sensor fusion (#23).\n\nv0.6.0 (2016-10-31)\n-------------------\n- Using MetaWear-CppAPI version 0.6.0\n- Replaced print-logging with proper logging module usage.\n- Removed 64-bit special handling that was no longer needed.\n\nv0.5.2 (2016-10-13)\n-------------------\n- Temperature Module\n- Using Pygatt 3.0.0 (including PR from PyMetaWear contributors)\n- Builds on Windows\n\nv0.5.1 (2016-09-15)\n-------------------\n- Corrections to make it distributable via PyPI.\n\nv0.5.0 (2016-09-15)\n-------------------\n- Using MetaWear-CppAPI version 0.5.22\n- Changed building procedure to handle ARM processors\n- Updated requirements to make pygatt default, all others extras\n- Bluepy backend implemented and partially working\n- BL interface selection for all backends\n- Magnetometer module\n- Barometer module\n- Ambient Light module\n- Modifying notification wrappers to accommodate Epoch value in the data.\n- High speed sampling for accelerometer and gyroscope\n\nv0.4.4 (2016-04-28)\n-------------------\n- Updated MetaWear-CppAPI submodule version.\n- Removed temporary build workaround.\n\nv0.4.3 (2016-04-27)\n-------------------\n- Critical fix for switch notifications.\n- Updated MetaWear-CppAPI submodule version.\n- Now using the new ``setup_metawear`` method.\n- Restructured the ``IS_64_BIT`` usage which is still needed.\n\nv0.4.2 (2016-04-27)\n-------------------\n- Critical fix for timeout in pybluez/gattlib backend.\n- Added Gyroscope module.\n- Added soft reset method to client.\n- Updated examples.\n- Updated documentation.\n\nv0.4.1 (2016-04-20)\n-------------------\n- Cleanup of new modules sensor data parsing.\n- Bug fix related to accelerometer module.\n- Timeout parameter for client and backends.\n\nv0.4.0 (2016-04-17)\n-------------------\n- Major refactorisation into new module layout.\n- New examples using the new module handling.\n- Accelerometer convenience methods shows strange lag still.\n\nv0.3.1 (2016-04-10)\n-------------------\n- Critical fix for data signal subscription method.\n- ``Setup.py`` handling of building made better,\n- Documentation improved.\n\nv0.3.0 (2016-04-09)\n-------------------\n- Major refactoring: all BLE comm code practically moved to backends.\n- Backend ``pybluez`` with ``gattlib`` now works well.\n- Travis CI problems with Python 2.7 encoding led to\n  that we are now building on 2.7.11\n\nv0.2.3 (2016-04-07)\n-------------------\n- Changed from using ``gattlib`` on its own to using\n  ``pybluez`` with ``gattlib``\n- Travis CI and Coveralls\n- Travis CI deploys documentation to gh-pages.\n- Some documentation written.\n\nv0.2.2 (2016-04-06)\n-------------------\n- Convenience method for switch.\n- Sphinx documentation added.\n- Docstring updates.\n\nv0.2.1 (2016-04-04)\n-------------------\n- Refactoring in moving functionality back to client from backends.\n- Enable BlueZ 4.X use with ``pygatt``.\n- Disconnect methods added.\n- Example with switch button notification.\n\nv0.2.0 (2016-04-02)\n-------------------\n- Two backends: ``pygatt`` and ``gattlib``\n- ``pygatt`` backend can be fully initialize, i.e. handles notifications.\n- ``gattlib`` backend **cannot** fully initialize, i.e. does **not** handles notifications.\n\nv0.1.1 (2016-03-30)\n-------------------\n- Fix to support Python 3\n\nv0.1.0 (2016-03-30)\n-------------------\n- Initial release\n- Working communication, tested with very few API options.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/hbldh/pymetawear",
    "keywords": "Bluetooth,IMU,MetaWear,MbientLab",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pymetawear",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/pymetawear/",
    "release_url": "https://pypi.org/project/pymetawear/0.7.2/",
    "requires_python": null,
    "summary": "Python client for connecting to MbientLab's MetaWear boards",
    "version": "0.7.2"
  },
  "releases": {
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "25b0628fea8fadb51474e219644d29a3",
          "sha256": "75b200e7978dfde9c673edf791ed37efce2ae5d1c1e360de8bf82d4bce18ab40"
        },
        "downloads": 182,
        "filename": "pymetawear-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "25b0628fea8fadb51474e219644d29a3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 205724,
        "upload_time": "2016-09-15T09:09:35",
        "url": "https://files.pythonhosted.org/packages/d8/ff/58ed8effbf6a2c51b28472082315ac985c3926d84896cdec627db7d03bd6/pymetawear-0.5.1.tar.gz"
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "74401797361a031dc5728a709f445645",
          "sha256": "81607b3c0c0956173c3584d0adbb3cd222870c6eafbca899cd894b5d2d8523d1"
        },
        "downloads": 96,
        "filename": "pymetawear-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "74401797361a031dc5728a709f445645",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 206281,
        "upload_time": "2016-10-13T12:13:44",
        "url": "https://files.pythonhosted.org/packages/ad/28/ac953c4ea8cf67366cddbb1f05f20a3b992f614152df5cfabd7885e06f8c/pymetawear-0.5.2.tar.gz"
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c3c1f5792c342d9d54a094dca56a8dcc",
          "sha256": "f66354900117099a64ca930dc3119e5d7aedca68534a04f0c1e7933f727a5000"
        },
        "downloads": 54,
        "filename": "pymetawear-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c3c1f5792c342d9d54a094dca56a8dcc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 212611,
        "upload_time": "2016-10-31T08:55:05",
        "url": "https://files.pythonhosted.org/packages/cd/ba/c59b45fb9781fd764d10acaca627cb2c067c0d35b12aca8775a83ba84e6e/pymetawear-0.6.0.tar.gz"
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cd2c89662a246ff0069b9e99c63e1cdc",
          "sha256": "7ccb42372e9d0d1981886432aadb7c2e4477b1b47b98b955f31046517edcfd7f"
        },
        "downloads": 11,
        "filename": "pymetawear-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cd2c89662a246ff0069b9e99c63e1cdc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 222218,
        "upload_time": "2017-01-13T10:27:07",
        "url": "https://files.pythonhosted.org/packages/dc/72/fa8b6f572d4e0411500fe93d7949afbf31fedcf494fa0bd829ebb6211228/pymetawear-0.7.0.tar.gz"
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4ebc64ddefd105e952e7b91abeed0be7",
          "sha256": "30a4bf91a00a00073291fed3ffd4646c0969d02caea8cd9810b99740c18a35a7"
        },
        "downloads": 14,
        "filename": "pymetawear-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4ebc64ddefd105e952e7b91abeed0be7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 223559,
        "upload_time": "2017-02-04T09:09:03",
        "url": "https://files.pythonhosted.org/packages/2a/7e/938123c875f93f0e59df33150723b4c1dfe53618dd3c6fda3daae9826fe2/pymetawear-0.7.1.tar.gz"
      }
    ],
    "0.7.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bad444e35f0ca046ec291a2044b759dd",
          "sha256": "07db0b79f002453a8a3efae8be3b2d5ee41c67922cc3550b4200e3db73290a5c"
        },
        "downloads": 22,
        "filename": "pymetawear-0.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bad444e35f0ca046ec291a2044b759dd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 224322,
        "upload_time": "2017-03-03T15:21:45",
        "url": "https://files.pythonhosted.org/packages/06/9d/00e847ba463559aa5e52ede6dbbd4eb9ac86088358dacbaa117f6ebfeb3b/pymetawear-0.7.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "bad444e35f0ca046ec291a2044b759dd",
        "sha256": "07db0b79f002453a8a3efae8be3b2d5ee41c67922cc3550b4200e3db73290a5c"
      },
      "downloads": 22,
      "filename": "pymetawear-0.7.2.tar.gz",
      "has_sig": false,
      "md5_digest": "bad444e35f0ca046ec291a2044b759dd",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 224322,
      "upload_time": "2017-03-03T15:21:45",
      "url": "https://files.pythonhosted.org/packages/06/9d/00e847ba463559aa5e52ede6dbbd4eb9ac86088358dacbaa117f6ebfeb3b/pymetawear-0.7.2.tar.gz"
    }
  ]
}