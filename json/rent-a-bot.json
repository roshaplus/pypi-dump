{
  "info": {
    "author": "Charles Poisson",
    "author_email": "charles.poisson@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Flask",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Utilities"
    ],
    "description": "Rent-A-Bot\n==========\n\n|Build Status| |codecov| |pipeline status| |coverage report|\n\n--------------\n\nRent-a-bot, your automation resource provider.\n\nExclusive access to a static resource is a common problem in automation,\nrent-a-bot allows you to abstract your resources and lock them to\nprevent any concurrent access.\n\nPurpose\n-------\n\nRent-a-bot pursue the same objective as Jenkins `Lockable Resource Plugin\n<https://wiki.jenkins.io/display/JENKINS/Lockable+Resources+Plugin>`__.\n\nThis latter works quite well, but only if you use... well... Jenkins.\n\nRent-A-Bot purpose is to fill the same needs in an environment where\nmultiple automation applications exist.\n\ne.g. - Multiple Jenkins application servers - Mixed automation\napplication, gitlab CI + Jenkins - Shared resources between humans and\nautomates.\n\nWhat is a resource?\n-------------------\n\nA resource is defined by a **name** and the existence of a **lock\ntoken** indicating if the resource is locked.\n\nOptional available fields help you customize you resources with\nadditional information:\n\n-  Resource description\n-  Lock description\n-  Endpoint\n-  Tags\n\nHow to install and run\n----------------------\n\nClone the repository from GitLab or GitHub\n\n.. code:: commandline\n\n    git clone git@gitlab.com:cpoisson/rent-a-bot.git\n\n.. code:: commandline\n\n    git clone git@github.com:cpoisson/rent-a-bot.git\n\nCreate a virtual env (here using virtualenv wrapper)\n\n.. code:: commandline\n\n    mkvirtualenv rent-a-bot\n    workon rent-a-bot\n\nInstall the package\n\n.. code:: commandline\n\n    pip install .   # pip install -e . if you want to install it in editable mode\n\nAdd Flask environment variables\n\n.. code:: commandline\n\n    export FLASK_APP=rentabot\n\n    export FLASK_DEBUG=true # If you need the debug mode\n\nAnd... run!\n\n.. code:: commandline\n\n    flask run\n\nHow to use it\n-------------\n\nAlright, rent-a-bot is up and running.\n\nAt this stage you can connect to the front end at http://127.0.0.1:5000/\n(assuming your flask app listen to the port 500)\n\nYou will notice that the resource list is empty (dang...), let's\npopulate it\n\nPopulate the database\n~~~~~~~~~~~~~~~~~~~~~\n\nYou will need a resource descriptor file to populate the database at\nstartup.\n\n.. code:: commandline\n\n    RENTABOT_RESOURCE_DESCRIPTOR=\"/absolute/path/to/your/resource/descriptor.yml\"\n\nResource descriptor\n~~~~~~~~~~~~~~~~~~~\n\nThe resource descriptor is a YAML file. It's purpose is to declare the\nresources you want to make available on rent-a-bot\n\n.. code:: yaml\n\n    # Resources Description\n    # This file describes resources to populate in the database at rent-a-bot startup\n\n    coffee-machine:\n        description: \"Kitchen coffee machine\"\n        endpoint: \"tcp://192.168.1.50\"\n        tags: \"coffee kitchen food\"\n\n    3d-printer-1:\n        description: \"Basement 3d printer 1\"\n        endpoint: \"tcp://192.168.1.60\"\n        tags: \"3d-printer basement tool\"\n\n    another-resource:\n        description: \"yet another resource\"\n        endpoint: \"\"\n        tags: \"\"\n\nOnce set, (re)start the flask application. The web view should be\npopulated with your resources.\n\nRestFul API\n~~~~~~~~~~~\n\nList resources\n^^^^^^^^^^^^^^\n\nGET /api/v1.0/resources\n\ne.g.\n\n.. code:: commandline\n\n    curl -X GET -i http://localhost:5000/rentabot/api/v1.0/resources\n\nAccess to a given resource\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nGET /api/v1.0/resources/{resource\\_id}\n\ne.g.\n\n.. code:: commandline\n\n    curl -X GET -i http://localhost:5000/rentabot/api/v1.0/resources/2\n\nLock a resource\n^^^^^^^^^^^^^^^\n\nPOST /api/v1.0/resources/{resource\\_id}/lock\n\ne.g.\n\n.. code:: commandline\n\n    curl -X POST -i http://localhost:5000/rentabot/api/v1.0/resources/6/lock\n\n**Note:** If the resource is available, a lock-token will be returned.\nOtherwise an error code is returned.\n\nUnlock a resource\n^^^^^^^^^^^^^^^^^\n\nPOST\n/api/v1.0/resources/{resource\\_id}/unlock?lock-token={resource/lock/token}\n\n.. code:: commandline\n\n    curl -X POST -i http://localhost:5000/rentabot/api/v1.0/resources/6/unlock\\?lock-token\\={resource/lock/token}\n\n**Note:** If the resource is already unlocked or the lock-token is not\nvalid, an error code is returned.\n\nHow to tests\n------------\n\nTests implementation\n~~~~~~~~~~~~~~~~~~~~\n\nUnit tests are done using py.test and coverage\n\nHow to run unit tests\n~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: commandline\n\n    python setup.py test\n\n--------------\n\nHelpful documentation used to design this application\n-----------------------------------------------------\n\n-  `Designing a RESTful API with Python and\n   Flask <https://blog.miguelgrinberg.com/post/designing-a-restful-api-with-python-and-flask>`__\n-  `Testing Flask\n   Applications <http://flask.pocoo.org/docs/0.12/testing/#testing>`__\n-  `Flask Project\n   Template <https://github.com/xen/flask-project-template>`__\n-  `Flask\n   SQLAlchemy <http://flask-sqlalchemy.pocoo.org/2.1/quickstart/>`__\n-  `Put versus\n   Post <https://knpuniversity.com/screencast/rest/put-versus-post>`__\n-  `Best practice for a pragmatic restful\n   API <http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api#ssl>`__\n-  `Implementing a RESTful Web API with Python &\n   Flask <http://blog.luisrei.com/articles/flaskrest.html>`__\n-  `HTTP status\n   code <https://restpatterns.mindtouch.us/HTTP_Status_Codes>`__\n-  `Implementing API\n   Exceptions <http://flask.pocoo.org/docs/0.12/patterns/apierrors/>`__\n-  `The Hitchhiker's Guide To\n   Python <http://docs.python-guide.org/en/latest/>`__\n\n.. |Build Status| image:: https://travis-ci.org/cpoisson/rent-a-bot.svg?branch=master\n   :target: https://travis-ci.org/cpoisson/rent-a-bot\n.. |codecov| image:: https://codecov.io/gh/cpoisson/rent-a-bot/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/cpoisson/rent-a-bot\n.. |pipeline status| image:: https://gitlab.com/cpoisson/rent-a-bot/badges/master/pipeline.svg\n   :target: https://gitlab.com/cpoisson/rent-a-bot/commits/master\n.. |coverage report| image:: https://gitlab.com/cpoisson/rent-a-bot/badges/master/coverage.svg\n   :target: https://gitlab.com/cpoisson/rent-a-bot/commits/master",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/cpoisson/rent-a-bot",
    "keywords": "Resource allocation application for automation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rent-a-bot",
    "platform": "",
    "project_url": "https://pypi.org/project/rent-a-bot/",
    "release_url": "https://pypi.org/project/rent-a-bot/0.0.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Rent-A-Bot, your automation resource provider.",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4dae1406682d4b5b1d79f3ed1710668a",
          "sha256": "6559ea3b4cb7acbc3059129c697f8ff67eb2c53adedd7128138f04ac442c4302"
        },
        "downloads": -1,
        "filename": "rent-a-bot-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4dae1406682d4b5b1d79f3ed1710668a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8710,
        "upload_time": "2017-10-22T00:22:55",
        "url": "https://files.pythonhosted.org/packages/12/23/9294549f6f2ecdc79af10af25e6f707a8f8efd33e98c1c72de1f17a84485/rent-a-bot-0.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4dae1406682d4b5b1d79f3ed1710668a",
        "sha256": "6559ea3b4cb7acbc3059129c697f8ff67eb2c53adedd7128138f04ac442c4302"
      },
      "downloads": -1,
      "filename": "rent-a-bot-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4dae1406682d4b5b1d79f3ed1710668a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8710,
      "upload_time": "2017-10-22T00:22:55",
      "url": "https://files.pythonhosted.org/packages/12/23/9294549f6f2ecdc79af10af25e6f707a8f8efd33e98c1c72de1f17a84485/rent-a-bot-0.0.2.tar.gz"
    }
  ]
}