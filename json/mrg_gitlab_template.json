{
  "info": {
    "author": "Hans Smit",
    "author_email": "jcsmit@xs4all.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "mrg_gitlab_template\r\n===================\r\n\r\nA Python gitlab template for initiating new projects in gitlab. The\r\nboilerplate / template files that are copied are based on best-practices\r\nfor Python package development. The new project contains the following\r\nfeatures,\r\n\r\n* ``tests`` directory for defining unittests\r\n* ``examples`` directory for placing example snippets\r\n* ``docs`` \r\n    Sphinx based on the RTD theme for API and\r\n    architectural documentation. It also enables UML\r\n    diagrams to be dynamically generated based on PlantUML\r\n    and graphviz tool.\r\n* ``run.py`` main script entry point with a generic argument parser implementation.\r\n* ``versioneer.py`` an automated version numbering system.\r\n* ``pylint.cfg`` file for source code lexical analysis.\r\n* ``setup.py``: file for wheel file building and deployment to PyPI server.\r\n* ``.gitlab-ci.yml`` file for continuous integration for,\r\n    * unit testing\r\n    * code coverage\r\n    * lint analysis\r\n    * Sphinx documentation building\r\n    * Pages documentation generation\r\n    * deployment to PyPI server.\r\n\r\n\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nInstall using pip::\r\n\r\n    pip install mrg_gitlab_template\r\n\r\nOr to upgrade::\r\n\r\n    pip install --upgrade --no-cache-dir mrg_gitlab_template\r\n\r\n\r\nCommand line usage\r\n------------------\r\n\r\nThe ``pygitcopy`` is a command line utility program to create a new project.\r\nThe help switch provides the command line arguments::\r\n\r\n    $ pygitcopy --help\r\n\r\n    usage: pygitcopy [-h] -g GROUP [-p PAGES_DOMAIN] [-u GITLAB_URL] [-a AUTHOR]\r\n                     [-e EMAIL] [-y YEAR] [-d DIRECTORY] [-v]\r\n                     package\r\n\r\n    Create new project from template\r\n\r\n    positional arguments:\r\n      package               package name\r\n\r\n    optional arguments:\r\n      -h, --help            show this help message and exit\r\n      -g GROUP, --group GROUP\r\n                            the gitlab account. Example: mrg-tools, sci-fv, your\r\n                            account name, etc (default: None)\r\n      -p PAGES_DOMAIN, --pages-domain PAGES_DOMAIN\r\n                            the gitlab pages url domain. Example: gitlab.io,\r\n                            io.esa.int (default: gitlab.io)\r\n      -u GITLAB_URL, --gitlab-url GITLAB_URL\r\n                            the gitlab pages url domain. Example: gitlab.com,\r\n                            gitlab.esa.int (default: gitlab.com)\r\n      -a AUTHOR, --author AUTHOR\r\n                            author name (default: {{author}})\r\n      -e EMAIL, --email EMAIL\r\n                            author email (default: {{email}})\r\n      -y YEAR, --year YEAR  author email (default: <this-year>)\r\n      -d DIRECTORY, --directory DIRECTORY\r\n                            base directory location (default: .)\r\n      -v, --verbosity       Increase output verbosity (default: 0)\r\n\r\n\r\nCreating a new project\r\n----------------------\r\n\r\nExecute the following command::\r\n\r\n    pygitcopy <package> --group <group> --directory <new-project-base-dir> -vv\r\n\r\nExecute the following commands to add the new project to gitlab::\r\n\r\n    cd <new-project-base-dir>/<name>\r\n    git init\r\n    git add .\r\n    git commit -m \"First commit\"\r\n\r\nNavigate to https://gitlab.com/projects/new\r\nand create a new <name> project. Your local can be linked to this repository\r\nusing the following commands::\r\n\r\n\r\n\r\n    git remote add origin https://gitlab.com/<group>/<name>.git\r\n    git push -u origin --all\r\n    git push -u origin --tags\r\n\r\nTo delete a repository from gitlab, use this link and scroll to the\r\nend,\r\n\r\n* https://gitlab.com/<group>/<name>/edit\r\n\r\n\r\nCreate \"testproj\" Example\r\n-------------------------\r\n\r\nThis example will show you how to,\r\n\r\n* create a virtual environment\r\n* create a new gitlab repository\r\n* create a new local project based on this template project\r\n* link the local project to the repository\r\n* commit and push the project files to the repository\r\n\r\nInstall system requirements::\r\n\r\n    sudo apt-get install git\r\n    sudo apt-get install virtualenv\r\n    sudo apt-get install plantuml\r\n\r\nCreate the new testproj repository project in the gitlab web site:\r\n\r\n    firefox https://gitlab.com/projects/new\r\n\r\nCreate virtual environment::\r\n\r\n    mkdir ~/venv\r\n    cd ~venv\r\n    virtualenv -p python3 py3\r\n    source py3/bin/activate\r\n\r\n\r\nInstall the template package::\r\n\r\n    pip install mrg_gitlab_template\r\n\r\n\r\nCreate a new local project and upload to git::\r\n\r\n    cd ~/PycharmProjects/\r\n    pygitcopy testproj --group mrg-tools\r\n    cd testproj\r\n    git init\r\n    git add .\r\n    git remote add origin https://gitlab.com/mrg-tools/testproj.git\r\n    git push -u origin --all\r\n\r\nCheck the gitlab pipelines and generated files,\r\n\r\n* https://gitlab.com/mrg-tools/testproj/pipelines\r\n* https://mrg-tools.gitlab.io/testproj\r\n* https://mrg-tools.gitlab.io/testproj/doc/\r\n\r\nPrepare the project for development::\r\n\r\n    pip install -r requirements-dev.txt\r\n    export PYTHONPATH=$PWD\r\n\r\nRun some tests::\r\n\r\n    pylint --pylint-rc=pylint.cfg testproj\r\n    pytest\r\n    pytest --cov\r\n\r\nBuild the documentation::\r\n\r\n    cd docs\r\n    make html\r\n    firefox build/html/index.html\r\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mrg_gitlab_template",
    "platform": "",
    "project_url": "https://pypi.org/project/mrg_gitlab_template/",
    "release_url": "https://pypi.org/project/mrg_gitlab_template/0.6.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A Python gitlab template for initiating new projects in gitlab",
    "version": "0.6.2"
  },
  "releases": {
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8b71bfc8906fc0f0ec97ab6700596014",
          "sha256": "81d1071dd79ffd3c199ff31a3fa8d33c66be43526fa87fe435ff7af53c9954a8"
        },
        "downloads": -1,
        "filename": "mrg_gitlab_template-0.6.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b71bfc8906fc0f0ec97ab6700596014",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 73945,
        "upload_time": "2017-12-22T10:51:09",
        "url": "https://files.pythonhosted.org/packages/24/6e/cfcdef7051779bbfe580a6a00782132df10683f84ccf23326340f652e20f/mrg_gitlab_template-0.6.1-py2.py3-none-any.whl"
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5f337698dc00e6443f32e58cb22159a7",
          "sha256": "d8f420a9b7dc93f6e47ec8f70b31348790fba49b0a998e73269d48d16762379c"
        },
        "downloads": -1,
        "filename": "mrg_gitlab_template-0.6.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f337698dc00e6443f32e58cb22159a7",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 73954,
        "upload_time": "2017-12-22T10:55:53",
        "url": "https://files.pythonhosted.org/packages/3b/0b/23a83ad0d70485ff7c3caa3a85336c1800697c7cb602df4be079b341a319/mrg_gitlab_template-0.6.2-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5f337698dc00e6443f32e58cb22159a7",
        "sha256": "d8f420a9b7dc93f6e47ec8f70b31348790fba49b0a998e73269d48d16762379c"
      },
      "downloads": -1,
      "filename": "mrg_gitlab_template-0.6.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5f337698dc00e6443f32e58cb22159a7",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 73954,
      "upload_time": "2017-12-22T10:55:53",
      "url": "https://files.pythonhosted.org/packages/3b/0b/23a83ad0d70485ff7c3caa3a85336c1800697c7cb602df4be079b341a319/mrg_gitlab_template-0.6.2-py2.py3-none-any.whl"
    }
  ]
}