{
  "info": {
    "author": "Alec Mitchell, Jazkarta, Inc",
    "author_email": "alecpm@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Plone",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "collective.zoomit\n=================\n\nThis add-on integrates the `zoom.it <http://zoom.it/>`_ service into\nPlone.  It includes a Dexterity behavior which can be assigned to\ncontent types, and also a marker interface ``IZoomItImage`` which\ncan be assigned to individual instances or to content classes (using\ne.g. ``implements``, ``classImplements``, or the zcml ``class``\ndirective).\n\nZoom.it is a Microsoft Live Labs provided webservice which generates\nDeepZoom tiled image representations of hosted images and provides a\nfriendly SeaDragon-based viewer for them.  It allows very high\nresolution images to be viewed in a friendly manner.\n\nThe adapter/behavior provided in this package assumes the content it\nis applied to has an ``image`` attribute or a ``getImage`` method. The\npackage provides scripts to replace the image in the primary view with\nthe js/silverlight viewer.  That script assumes that the primary view\nof the content includes the primary image in the main content area\ninside of an anchor (i.e. ``#content a > img:first-child``).\n\nThe zoom.it API is called to process the image the first time the\ncontent is saved.  However, the API call will only be made if the\nimage is publicly visible (because the zoom.it service needs to\nretrieve it via a public url).  If the image has not yet been\nprocessed, Image processing will also be initiated after workflow\ntransitions.  As a result, image content that was not publicly\naccessible to the zoom.it service will be automatically processed once\nit becomes accessible via a workflow transition.  This will not cause\nnon-workflowed images in private folders to be processed when the\nfolder is made public.  In that case, the image must be resaved or\nmanually processed using the Zoom.it action menu.\n\nProcessing of large images may take some time (and may occasionally\nfail), to handle this the add-on provides an action menu item for\nviewing and updating the progress of the image processing and manually\nre-initiating the process after a failure.  If the processing has not\nbeen completed, editing the content will also update the status\ninformation.\n\nEditing the image field will also cause the image to be re-processed.\n\n\nCaveats\n-------\n\nMicrosoft's Zoom.it service is an unsupported experimental service,\nwith questionable reliability.  It is also a one of a kind way to make\nit easy to display very high resolution images with minimal effort via\na convenient API.  Images which have already been processed seem to be\nreliably available from the service; however, there appear to be\nextended periods where the service will not accept new images.  As a\nresult, initial processing may fail.  For that reason this add-on is\ndesigned as a progressive enhancement, and will only display the\nviewer when the processed image is available.\n\nSee the `FAQ <http://zoom.it/pages/faq/>`_.\n\nBecause Zoom.it requires a publicly accessible URL to retrieve the\nimage, this add-on will not work on ``private`` content or when edited\nfrom non-internet accessible urls.  The adapter intentionally skips\nrequests originating from loopback addresses, but a placeholder image\ncan be used for testing from a local address by setting the variable\n``collective.zoomit.config.DEBUG`` to ``True``.\n\n\nContributors\n------------\n\n* `Jazkarta, Inc. <http://www.jazkarta.com>`_\n\n\n    * Alec Mitchell\n\n\n\nThanks To\n---------\n\n* `Dumbarton Oaks Garden Archives <http://doaks.org>`_\n\nChangelog\n=========\n\n0.7 (2014-03-08)\n-------------------\n\n- Improve logging to better understand service failures\n\n\n0.6 (2013-12-19)\n-------------------\n\n- Initial release",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://svn.plone.org/svn/collective/",
    "keywords": "Deepzoom Zoom.it Images Plone",
    "license": "GPL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "collective.zoomit",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/collective.zoomit/",
    "release_url": "https://pypi.org/project/collective.zoomit/0.7/",
    "requires_python": null,
    "summary": "Integration of Zoom.it hosted image zoom in plone.",
    "version": "0.7"
  },
  "releases": {
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "47a0b710131179e5eec0b92a7735bc41",
          "sha256": "694164a0c38ea18a438757260fd3644222cc058929645cdc2464ac52a6792663"
        },
        "downloads": 2443,
        "filename": "collective.zoomit-0.5.zip",
        "has_sig": false,
        "md5_digest": "47a0b710131179e5eec0b92a7735bc41",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25629,
        "upload_time": "2013-12-19T23:51:41",
        "url": "https://files.pythonhosted.org/packages/39/c3/2463725e50dfd2be01f8a7a934939af44c94e08d63882ffea83d8910242e/collective.zoomit-0.5.zip"
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f70f5c330ce86fcefccf0b268194bfe1",
          "sha256": "da4d84f1505c1e0d97f5837e5005820dd3ce00559668eb0603d686e919469287"
        },
        "downloads": 2122,
        "filename": "collective.zoomit-0.6.zip",
        "has_sig": false,
        "md5_digest": "f70f5c330ce86fcefccf0b268194bfe1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25757,
        "upload_time": "2013-12-19T23:53:37",
        "url": "https://files.pythonhosted.org/packages/21/fd/5a32f4b4308dac2925a97889f4ed51ab38cf879975660cd88f2c3d68d874/collective.zoomit-0.6.zip"
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c3cdc6793ef6ff0c639a9060c0810e42",
          "sha256": "d7b634f0875798d46d8b56ea50d54635b64017dc54c5a27b7ff9f08e546cdbee"
        },
        "downloads": 2196,
        "filename": "collective.zoomit-0.7.zip",
        "has_sig": false,
        "md5_digest": "c3cdc6793ef6ff0c639a9060c0810e42",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26367,
        "upload_time": "2014-03-08T04:27:06",
        "url": "https://files.pythonhosted.org/packages/d3/52/235f4826e0188a9914b6242f500f8e76e5966d29efedb8aa38f4bbc247a1/collective.zoomit-0.7.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c3cdc6793ef6ff0c639a9060c0810e42",
        "sha256": "d7b634f0875798d46d8b56ea50d54635b64017dc54c5a27b7ff9f08e546cdbee"
      },
      "downloads": 2196,
      "filename": "collective.zoomit-0.7.zip",
      "has_sig": false,
      "md5_digest": "c3cdc6793ef6ff0c639a9060c0810e42",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 26367,
      "upload_time": "2014-03-08T04:27:06",
      "url": "https://files.pythonhosted.org/packages/d3/52/235f4826e0188a9914b6242f500f8e76e5966d29efedb8aa38f4bbc247a1/collective.zoomit-0.7.zip"
    }
  ]
}