{
  "info": {
    "author": "Dimitri Capitaine",
    "author_email": "grytes29@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Phoenix database adapter for Python\n===================================\n\n``pyphoenix`` is a Python library for accessing the\n`Phoenix SQL database <http://phoenix.apache.org/>`_\nusing the\n`remote query server <http://phoenix.apache.org/server.html>`_ introduced\nin Phoenix 4.4.  The library implements the\nstandard `DB API 2.0 <https://www.python.org/dev/peps/pep-0249/>`_ interface,\nwhich should be familiar to most Python programmers.\nIt include sqlachemy plugins.\n\n\nInstallation\n------------\n\nThe easiest way to install the library is using `pip <https://pip.pypa.io/en/stable/>`_::\n\n    pip install pyPhoenix\n\nYou can also download the source code and install it manually::\n\n    cd /path/to/pyphoenix/\n    python setup.py install\n\nUsage\n-----\n\nThe library implements the standard DB API 2.0 interface, so it can be\nused the same way you would use any other SQL database from Python, for example::\n\n    import pyphoenix\n\n    database_url = 'http://localhost:8765/'\n    conn = pyphoenix.connect(database_url, autocommit=True)\n\n    cursor = conn.cursor()\n    cursor.execute(\"CREATE TABLE users (id INTEGER PRIMARY KEY, username VARCHAR)\")\n    cursor.execute(\"UPSERT INTO users VALUES (?, ?)\", (1, 'admin'))\n    cursor.execute(\"SELECT * FROM users\")\n    print cursor.fetchall()\n\nPhoenix versions\n----------------\n\nPhoenix 4.7 uses a serialization based on Protocol Buffers (proto3) by default.\n\nThis library only supports Protocol serialization.\n\nSetting up a development environment\n------------------------------------\n\nIf you want to quickly try out the included examples, you can set up a\nlocal `virtualenv <https://virtualenv.pypa.io/en/latest/>`_ with all the\nnecessary requirements::\n\n    virtualenv e\n    source e/bin/activate\n    pip install -r requirements.txt\n    python setup.py develop\n\nIf you need a Phoenix server for experimenting, you can get one running\nquickly using Vagrant::\n\n    vagrant up\n\nYou can connect to the virtual machine and work with the Phoenix shell\nfrom there::\n\n    vagrant ssh\n    /opt/phoenix/bin/sqlline.py localhost\n\nInteractive SQL shell\n---------------------\n\nThere is a Python-based interactive shell include in the examples folder, which can be\nused to connect to Phoenix and execute queries::\n\n    ./examples/shell.py http://localhost:8765/\n    db=> CREATE TABLE test (id INTEGER PRIMARY KEY, name VARCHAR);\n    no rows affected (1.363 seconds)\n    db=> UPSERT INTO test (id, name) VALUES (1, 'Lukas');\n    1 row affected (0.004 seconds)\n    db=> SELECT * FROM test;\n    +------+-------+\n    |   ID | NAME  |\n    +======+=======+\n    |    1 | Lukas |\n    +------+-------+\n    1 row selected (0.019 seconds)\n\nRunning the test suite\n----------------------\n\nThe library comes with a test suite for testing Python DB API 2.0 compliance and\nvarious Phoenix-specific features. In order to run the test suite, you need a\nworking Phoenix database and set the ``pyphoenix_TEST_DB_URL`` environment variable::\n\n    export pyphoenix_TEST_DB_URL='http://localhost:8765/'\n    nosetests\n\nKnown issues\n------------\n\n- In general, the library has not been battle-tested yet. You might encounter almost any problem. Use with care.\n- You can only use the library in autocommit mode. The native Java Phoenix library also implements batched upserts, which can be committed at once, but this is not exposed over the remote server.\n  (`CALCITE-767 <https://issues.apache.org/jira/browse/CALCITE-767>`_)\n- TIME and DATE columns in Phoenix are stored as full timestamps with a millisecond accuracy,\n  but the remote protocol only exposes the time (hour/minute/second) or date (year/month/day)\n  parts of the columns. (`CALCITE-797 <https://issues.apache.org/jira/browse/CALCITE-797>`_, `CALCITE-798 <https://issues.apache.org/jira/browse/CALCITE-798>`_)\n- TIMESTAMP columns in Phoenix are stored with a nanosecond accuracy, but the remote protocol truncates them to milliseconds. (`CALCITE-796 <https://issues.apache.org/jira/browse/CALCITE-796>`_)\n- ARRAY columns are not supported.\n  (`CALCITE-1050 <https://issues.apache.org/jira/browse/CALCITE-1050>`_, `PHOENIX-2585 <https://issues.apache.org/jira/browse/PHOENIX-2585>`_)\n\nSQLachemy\n===================================\n- Creates versions for select\n- select over queryserver with pyphoenix\n\nUsage\n-----\n\nexample::\n\n    import sqlalchemy\n\n    db = sqlalchemy.create_engine('phoenix://localhost:8765/')\n    conn = db.connect()",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Pirionfr/pyPhoenix",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyPhoenix",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pyPhoenix/",
    "release_url": "https://pypi.org/project/pyPhoenix/0.9.4/",
    "requires_python": "",
    "summary": "python interface to Phoenix and SQLAlchemy interfaces",
    "version": "0.9.4"
  },
  "releases": {
    "0.9.2": [],
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "56cf80a9e7fc80526c09aba4dbd746fb",
          "sha256": "de19f6ab63d1327bd21aa1243e27cc13e8340166e0a23c60df4e820c181f4920"
        },
        "downloads": 13,
        "filename": "pyPhoenix-0.9.4-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "56cf80a9e7fc80526c09aba4dbd746fb",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 44687,
        "upload_time": "2017-03-20T22:54:44",
        "url": "https://files.pythonhosted.org/packages/6e/d8/37b72a0e0b3ba79805662960d157be5334879f1b55f13d4bbcf901cd4a3a/pyPhoenix-0.9.4-py2-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "56cf80a9e7fc80526c09aba4dbd746fb",
        "sha256": "de19f6ab63d1327bd21aa1243e27cc13e8340166e0a23c60df4e820c181f4920"
      },
      "downloads": 13,
      "filename": "pyPhoenix-0.9.4-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "56cf80a9e7fc80526c09aba4dbd746fb",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "size": 44687,
      "upload_time": "2017-03-20T22:54:44",
      "url": "https://files.pythonhosted.org/packages/6e/d8/37b72a0e0b3ba79805662960d157be5334879f1b55f13d4bbcf901cd4a3a/pyPhoenix-0.9.4-py2-none-any.whl"
    }
  ]
}