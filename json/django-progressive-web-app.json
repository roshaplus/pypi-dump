{
  "info": {
    "author": "Scott Vitale",
    "author_email": "svvitale@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "django-progressive-web-app\n==========================\n\nThis Django app turns your project into a `progressive web\napp <https://developers.google.com/web/progressive-web-apps/>`__.\nNavigating to your site on an Android phone will prompt you to add the\napp to your home screen.\n\n.. figure:: images/screenshot1.png\n   :alt: Prompt for install\n\n   Prompt for install\n\nLaunching the app from your home screen will display your app `without\nbrowser chrome <images/screenshot2.png>`__. As such, it's critical that\nyour application provides all navigation within the HTML (no reliance on\nthe browser back or forward button).\n\nRequirements\n============\n\nProgressive Web Apps require HTTPS unless being served from localhost.\nIf you're not already using HTTPS on your site, check out `Let's\nEncrypt <https://letsencrypt.org/>`__ and\n`ZeroSSL <https://zerossl.com/>`__.\n\nInstallation\n============\n\nInstall from PyPI:\n\n::\n\n    pip install django-progressive-web-app\n\nConfiguration\n=============\n\nAdd ``pwa`` to your list of ``INSTALLED_APPS`` in settings.py:\n\n.. code:: python\n\n    INSTALLED_APPS = [\n        ...\n        'pwa',\n        ...\n    ]\n\nConfigure your app name, description, and icons in settings.py:\n\n.. code:: python\n\n    PWA_APP_NAME = 'My Kickass App'\n    PWA_APP_DESCRIPTION = \"Do kickass things all day long without that pesky browser chrome\"\n    PWA_APP_THEME_COLOR = '#0A0302'\n    PWA_APP_ICONS = [\n        {\n            'src': '/static/images/my_app_icon.png',\n            'sizes': '160x160'\n        }\n    ]\n\nAdd the progressive web app URLs to urls.py:\n\n.. code:: python\n\n    from django.conf.urls import url, include\n\n    urlpatterns = [\n        ...\n        url('', include('pwa.urls')),  # You MUST use an empty string as the URL prefix\n        ...\n    ]\n\nInject the required meta tags in your base.html (or wherever your HTML\n<head> is defined):\n\n.. code:: html\n\n    {% load pwa %}\n\n    <head>\n        ...\n        {% progressive_web_app_meta %}\n        ...\n    </head>\n\nTroubleshooting\n===============\n\nWhile running the Django test server: 1. Verify that ``/manifest.json``\nis being served 1. Verify that ``/serviceworker.js`` is being served 1.\nUse the Application tab in the Chrome Developer Tools to verify the\nprogressive web app is configured correctly. 1. Use the \"Add to\nhomescreen\" link on the Application Tab to verify you can add the app\nsuccessfully.\n\nAdding Your Own Service Worker\n==============================\n\nBy default, the service worker implemented by this app is empty. To add\nservice worker functionality, you'll want to create a\n``serviceworker.js`` or similarly named file, and then point at it using\nthe PWA\\_SERVICE\\_WORKER\\_PATH variable.\n\n.. code:: python\n\n    PWA_SERVICE_WORKER_PATH = os.path.join(BASE_DIR, 'my_app', 'serviceworker.js')\n\nFeedback\n========\n\nI welcome your feedback and pull requests. Enjoy!\n\nLicense\n=======\n\nAll files in this repository are distributed under the MIT license.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/svvitale/django-progressive-web-app",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-progressive-web-app",
    "platform": "",
    "project_url": "https://pypi.org/project/django-progressive-web-app/",
    "release_url": "https://pypi.org/project/django-progressive-web-app/0.1/",
    "requires_python": "",
    "summary": "A Django app to include a manifest.json and Service Worker instance to enable progressive web app behavior",
    "version": "0.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "41557e6a41ada16b80d00b184ba7c347",
          "sha256": "859c4b4b7d573f2422cde49a271cc7dd0b06a88911780f8b2148ffd2b584e662"
        },
        "downloads": 11,
        "filename": "django-progressive-web-app-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "41557e6a41ada16b80d00b184ba7c347",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5506,
        "upload_time": "2017-02-05T05:16:37",
        "url": "https://files.pythonhosted.org/packages/f4/c0/f21f5bb2d34a2857fff287aaaab5a99ed1b7ef823851216a2e89845b7a67/django-progressive-web-app-0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "41557e6a41ada16b80d00b184ba7c347",
        "sha256": "859c4b4b7d573f2422cde49a271cc7dd0b06a88911780f8b2148ffd2b584e662"
      },
      "downloads": 11,
      "filename": "django-progressive-web-app-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "41557e6a41ada16b80d00b184ba7c347",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5506,
      "upload_time": "2017-02-05T05:16:37",
      "url": "https://files.pythonhosted.org/packages/f4/c0/f21f5bb2d34a2857fff287aaaab5a99ed1b7ef823851216a2e89845b7a67/django-progressive-web-app-0.1.tar.gz"
    }
  ]
}