{
  "info": {
    "author": "Charles Jekel",
    "author_email": "cjekel@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "About\n=====\n\nA library for fitting a continuous piecewise linear function f(x) to\ndata. Just specify the number of line segments you desire and your data\nset.\n\nCheck out the\n`examples <https://github.com/cjekel/piecewise_linear_fit_py/tree/master/examples>`__!\n\nRead the `blog\npost <http://jekel.me/2017/Fit-a-piecewise-linear-function-to-data/>`__.\n\n.. figure:: https://raw.githubusercontent.com/cjekel/piecewise_linear_fit_py/master/examples/examplePiecewiseFit.png\n   :alt: Example of a continuous piecewise linear fit to a data set.\n\n   Example of a continuous piecewise linear fit to a data set.\n\n.. figure:: https://raw.githubusercontent.com/cjekel/piecewise_linear_fit_py/master/examples/sinWaveFit.png\n   :alt: Example of a continuous piecewise linear fit to a sin wave\n\n   Example of a continuous piecewise linear fit to a sin wave\n\nFeatures\n========\n\nFor a specified number of line segments, you can determine (and predict\nfrom) the optimal continuous piecewise linear function f(x). See `this\nexample <https://github.com/cjekel/piecewise_linear_fit_py/blob/master/examples/fitForSpecifiedNumberOfLineSegments.py>`__.\n\nYou can fit and predict a continuous piecewise linear function f(x) if\nyou know the specific x locations where the line segments terminate. See\n`this\nexample <https://github.com/cjekel/piecewise_linear_fit_py/blob/master/examples/fitWithKnownLineSegmentLocations.py>`__.\n\nIf you want to pass different keywords for the SciPy differential\nevolution algorithm see `this\nexample <https://github.com/cjekel/piecewise_linear_fit_py/blob/master/examples/fitForSpecifiedNumberOfLineSegments_passDiffEvoKeywords.py>`__.\n\nYou can use a different optimization algorithm to find the optimal\nlocation for line segments by using the objective function that\nminimizes the sum of square of residuals. See `this\nexample <https://github.com/cjekel/piecewise_linear_fit_py/blob/master/examples/useCustomOptimizationRoutine.py>`__.\n\nInstallation\n============\n\nYou can now install with pip.\n\n::\n\n    sudo pip install pwlf\n\nOr clone the repo\n\n::\n\n    git clone https://github.com/cjekel/piecewise_linear_fit_py.git\n\nthen install with pip\n\n::\n\n    sudo pip install piecewise_linear_fit_py/\n\nor easy\\_install\n\n::\n\n    sudo easy_install piecewise_linear_fit_py/\n\nor using setup.py\n\n::\n\n    cd piecewise_linear_fit_py/\n    sudo python setup.py install\n\nHow it works\n============\n\nThis is based on a formulation of a piecewise linear least squares fit,\nwhere the user must specify the location of break points. A simple\nderivation of this fit has been done by `Golovchenko\n(2004) <http://golovchenko.org/docs/ContinuousPiecewiseLinearFit.pdf>`__.\nThe routine for fitting the piecewise linear function is based on\nGolovchenko's MATLAB code (which I can't seem to find on the internet),\nwhich I ported to Python. Alternatively you can view `this\ncode <https://www.mathworks.com/matlabcentral/fileexchange/40913-piecewise-linear-least-square-fit>`__.\n\nGlobal optimization is used to find the best location for the user\ndefined number of lline segments. I specifically use the `differential\nevolution <https://docs.scipy.org/doc/scipy-0.17.0/reference/generated/scipy.optimize.differential_evolution.html>`__\nalgorithm in SciPy. I default the differential evolution algorithm to be\naggressive, and it is probably overkill for your problem. So feel free\nto pass your own differential evolution keywords to the library. See\n`this\nexample <https://github.com/cjekel/piecewise_linear_fit_py/blob/master/examples/fitForSpecifiedNumberOfLineSegments_passDiffEvoKeywords.py>`__.\n\nWhy\n===\n\nAll other methods require the user to specify the specific location of\nbreak points, but in most cases the best location for these break points\nis unknown. It makes more sense to rather have the user specify the\ndesired number of line segments, and then to quantitatively choose the\nbest location for the ends of these line segments.\n\nChangelog\n=========\n\n-  2017/11/03 add setup.py, new tests folder and test scripts, new\n   version tracking, initialize break0 breakN in the beginning\n-  2017/10/31 bug fix related to the case where break points exactly\n   equal to x data points ( as per issue\n   https://github.com/cjekel/piecewise\\_linear\\_fit\\_py/issues/1 ) and\n   added attributes .sep\\_data\\_x, .sep\\_data\\_y, .sep\\_predict\\_data\\_x\n   for troubleshooting issues related to the separation of data points\n   to their respective regions\n-  2017/10/20 remove determinant calculation and use try-except instead,\n   this will offer a larger performance boost for big problems. Change\n   library name to something more Pythonic. Add version attribute.\n-  2017/08/03 gradients (slopes of the line segments) now stored as\n   piecewise\\_lin\\_fit.slopes (or myPWLF.slopes) after they have been\n   calculated by performing a fit or predicting\n-  2017/04/01 initial release\n\nRequirements\n============\n\nPython 2.7+ (Python 2.7 and Python 3.4 have been tested)\n\nNumPy (Tested on version >= 1.11.3 )\n\nSciPy (Tested on version >= 0.19.0)\n\nLicense\n=======\n\nMIT License",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/cjekel/piecewise_linear_fit_py",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pwlf",
    "platform": "any",
    "project_url": "https://pypi.org/project/pwlf/",
    "release_url": "https://pypi.org/project/pwlf/0.0.12/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "fit piece-wise linear function to data",
    "version": "0.0.12"
  },
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d2aea60cc5ad12585cee45942c6d6303",
          "sha256": "ea851f308b17110d064b09587b068aecf5cf6b87cc75ee0017c7d21f88a47aab"
        },
        "downloads": -1,
        "filename": "pwlf-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "d2aea60cc5ad12585cee45942c6d6303",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6394,
        "upload_time": "2017-11-03T21:09:18",
        "url": "https://files.pythonhosted.org/packages/c3/53/9bdb7f4eb2bb21d1d1710b02842928d9ead2681bf25054a5153197686ea0/pwlf-0.0.10.tar.gz"
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8fd8ff65309b28eb085c441c4808af60",
          "sha256": "93337cb79fa40a1739b1f5b83ba917d905e2b1ad8bdcf4b006b96b9f18446c4d"
        },
        "downloads": -1,
        "filename": "pwlf-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "8fd8ff65309b28eb085c441c4808af60",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6394,
        "upload_time": "2017-11-03T21:20:27",
        "url": "https://files.pythonhosted.org/packages/4f/18/487655ed7a6222f637e259e4e6216689e8bff1f8e8376b366d9bdb145b3a/pwlf-0.0.11.tar.gz"
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d152f74ca3691fdef607591120a3a5a8",
          "sha256": "da704ecdecf24a08e67eb91c403b214b2ccef9ba04b7958b62524efffdc618c4"
        },
        "downloads": -1,
        "filename": "pwlf-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "d152f74ca3691fdef607591120a3a5a8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6394,
        "upload_time": "2017-11-04T20:19:31",
        "url": "https://files.pythonhosted.org/packages/b7/7c/55ebcd21011c0e0fea4674a7b5b5915b68c9e84e53d8e5f95e87ab5b2e07/pwlf-0.0.12.tar.gz"
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "102aa75e16516fa172efd1ceaeff6552",
          "sha256": "e62b1454ef1a6217221172ddd915910c979cecf30c1a765aebef84e6b632d759"
        },
        "downloads": -1,
        "filename": "pwlf-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "102aa75e16516fa172efd1ceaeff6552",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5262,
        "upload_time": "2017-11-03T20:51:26",
        "url": "https://files.pythonhosted.org/packages/19/35/42fa7390018767d01bb53f4b8f9b46e75883104848fe318c1ded137d4790/pwlf-0.0.8.tar.gz"
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a0ce8168e01fd3d3118818eddd1a175b",
          "sha256": "09d2a0c2f15de395b4ecf556aa277611939a126f6ff7e9f3a1f5323f22a54eb9"
        },
        "downloads": -1,
        "filename": "pwlf-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "a0ce8168e01fd3d3118818eddd1a175b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6392,
        "upload_time": "2017-11-03T21:05:59",
        "url": "https://files.pythonhosted.org/packages/43/40/6fc2dca4d1f5d0d881a500c9933e23333164e1412ffdc692d9b9a9bbaf44/pwlf-0.0.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d152f74ca3691fdef607591120a3a5a8",
        "sha256": "da704ecdecf24a08e67eb91c403b214b2ccef9ba04b7958b62524efffdc618c4"
      },
      "downloads": -1,
      "filename": "pwlf-0.0.12.tar.gz",
      "has_sig": false,
      "md5_digest": "d152f74ca3691fdef607591120a3a5a8",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6394,
      "upload_time": "2017-11-04T20:19:31",
      "url": "https://files.pythonhosted.org/packages/b7/7c/55ebcd21011c0e0fea4674a7b5b5915b68c9e84e53d8e5f95e87ab5b2e07/pwlf-0.0.12.tar.gz"
    }
  ]
}