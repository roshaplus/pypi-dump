{
  "info": {
    "author": "Novimir Antoniuk Pablant",
    "author_email": "novimir.pablant@amicitas.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Cython",
      "Programming Language :: Other",
      "Programming Language :: Python",
      "Topic :: Software Development :: Interpreters"
    ],
    "description": "********\npyidlrpc\n********\n\n\nDepreciation notice\n===================\n\n*pyidlrpc* has been made part of the *mirpyidl* project and is now considered depreciated.  *mirpyidl* retains all of the *pyidlrpc* functionality, but can also be used without the need for a *idlrpc* process.\n\n*mirpyidl* can be found here: \n\n  * https://bitbucket.org/amicitas/mirpyidl\n  * https://pypi.python.org/pypi/mirpyidl\n  \n\nIntroduction\n============\n\nA library to call IDL (Interactive Data Language) from python.  Allows trasparent wrapping of IDL routines and objects as well as arbitrary execution of IDL code.  \n\n*pyidlrpc* requires a licenced installation of IDL and works by connecting with an idlrpc server.  Data is transfered back and forth using the idlrpc API distrbuted with IDL. \n\nAll standard IDL and python/numpy datatypes are supported, and *pyidlrpc* transparently handles translating between equivilent datatypes. This includes translation between IDL structures and python dictionaries.\n\n*pyidlrpc* is hosted at: \n    https://bitbucket.org/amicitas/pyidlrpc\n\nDocumentation can be found at:\n    http://amicitas.bitbucket.org/pyidlrpc\n\n\n*pyidlrpc* was written by Novimir A. Pablant, and is released under an MIT licence.\n\n\nDependencies\n============\n\n- IDL (8.0)\n- python (2.7, 3.0 or later)\n\n  * numpy\n  * psutil (2.0 or later)\n\n- cython\n\n*pyidlrpc* requires a licenced installation of IDL.  Currently only IDL 8.0 or later is spported due to the additon of the ``HASH`` and ``LIST`` types.  Older versions may be compatible but are untested.\n\n\n*pyidlrpc* is currently only supported on linux and OS X.  It should also work fine on windows, but the ``setup.py`` script has not been setup to find the IDL installation directory.  If you want to give this a try on windows, just add the appropriate directories to setup.py. (If it works submit a pull reqeust so that I can update the public package.)\n\n\nInstallation\n============\n\n\n*pyidlrpc* can be installed using the following command::\n  \n    python setup.py install\n\nFor more control over the installation, all standard ``distutils`` commands are available.  If ``setuputils`` is installed, then the extended commands will also work.\n\n\nIf a full installation is not desired, the *pyidlrpc* module can be built in place using::\n\n    python setup.py build_ext --inplace\n\nThis will build *pyidlrpc* in place and create the ``pyidlrpc.so`` shared library which can then be imported from python.\n\n\nWarning:\n    On Mac OS X the setup script will change the installation name of the libidl_rpc.dylib library to @rpath/libidl_rpc.dylib.\n\n\nexamples\n========\n\nHere are a few simple examples.  A full set of examples and tutorials is included in the documentation.\n\nstarting the idlrpc server\n--------------------------\n\nFor any of the examples below it is recommended than an ``idlrpc`` server be started in a separate terminal window::\n\n    idlrpc\n\nThis step is not strictly necessary as a server will be started automatically if needed. However, *pyidlrpc* currenly leaves the idlrpc server running in the background, which eventually has to be manually killed. This behavior will be fixed in the next version.\n\n\nexecuting idl code\n------------------\n\nHere is a simple example for executing arbitrary IDL code from python:\n\n.. code-block:: python\n\n    # Import pyidlrpc.\n    import pyidlrpc as idl\n\n    # Execute a command in IDL.\n    # This will print 'Hello mom!' in the idlrpc window.\n    idl.execute(\"PRINT, 'Hello mom!'\")\n\n\nAs a more complex example, we will now send some data back and forth between IDL and python.\n\n.. code-block:: python\n\n    import numpy as np\n    import pyidlrpc as idl\n\n    # Create a numpy array in python.\n    py_array = np.random.normal(size=1000)\n\n    # Copy this data to IDL.\n    idl.setVariable('idl_array', py_array)\n\n    # Calculate the standard devation and the mean in IDL.\n    idl.execute('idl_stddev = STDDEV(idl_array)')\n    idl.execute('idl_mean = MEAN(idl_array)')\n\n    # Copy the results back to python.\n    py_stddev = idl.getVariable('idl_stddev')\n    py_mean = idl.getVariable('idl_mean')\n\n    # Print out the results.\n    print('Mean: {}, StdDev: {}'.format(py_mean, py_stddev))\n\n \ncalling functions and procedures\n--------------------------------\n\nIn the examples above we used just the most basic pyidlrpc commands to control an IDL session and pass data between IDL and python. In these next examples we use the *pyidlrpc* wrapping routines to do simplify the code in the previous example significantly.\n\n\n.. code-block:: python\n\n    import numpy as np\n    import pyidlrpc as idl\n\n    # Create a numpy array in python.\n    py_array = np.random.normal(size=1000)\n\n    # Calculate the standard devication and mean using IDL.\n    py_stddev = idl.callFunction('STDDEV', [py_array])\n    py_mean = idl.callFunction('MEAN', [py_array])\n\n    # Print out the results.\n    print('Mean: {}, StdDev: {}'.format(py_mean, py_stddev))\n\n\nwraping functions and procedures\n--------------------------------\n\nWrapping functions or procedures looks very similar to the example above.  Let say we want to wrap the IDL ``STDDEV`` and ``MEAN`` functions in python module name ``idlmath``.\n\n\n.. code-block:: python\n\n    # idlmath.py\n\n    import pyidlrpc as idl\n\n    def stddev(*args, **kwargs):\n        return idl.callFunction('STDDEV', args, kwargs)\n\n    def mean(*args, **kwargs):\n        return idl.callFunction('MEAN', args, kwargs)\n\nThat's all there is to it.  Now we can call these functions as though they were native python funcitons.\n\n.. code-block:: python\n\n    import numpy as np\n    import idlmath\n\n    array = np.random.normal(size=1000)\n\n    # Here we transparently call the wrapped IDL functions.\n    mean = idlmath.mean(array)\n    stddev = idlmath.stddev(array)\n\n\nwrapping objects\n----------------\n\n*pyidlrpc* also has the ability to fully wrap IDL objects.\n           \nPython wrapping objects should all inherit from PyIDLObject.  Here is an example of wrapping a hypothetical Gaussian object.\n\n.. code-block:: python\n\n\n    # _IdlGaussan.py\n\n    from pyidlrpc import PyIDLObject\n\n    class IdlGaussian(PyIDLObject):\n\n        # Define the the IDL command needed to create the object.\n        _creation_command = \"OBJ_NEW\"\n        _creation_params = ['GAUSSIAN']\n        _creation_keywords = None \n\n        def evaluate(self, *args, **kwargs):\n            return, self.callMethodFunction('EVALUATE', args, kwargs)\n\n        def setParam(self, *args, **kwargs):\n            return, self.callMethodPro('SET_PARAM', args, kwargs)\n\n        def getParam(self, *args, **kwargs):\n            return, self.callMethodFunction('GET_PARAM', args, kwargs)",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://amicitas.bitbucket.org/pyidlrpc/",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pyidlrpc",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pyidlrpc/",
    "release_url": "https://pypi.org/project/pyidlrpc/0.1.6/",
    "requires_python": null,
    "summary": "A library to call IDL (Interactive Data Language) from python.",
    "version": "0.1.6"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1b32a9d5bb6607de3bcbbbf0ba2e83d1",
          "sha256": "26f4613b5a3cb00b41aa38de6b407fd47d68872e944be54cff97367ca9118958"
        },
        "downloads": 2234,
        "filename": "pyidlrpc-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1b32a9d5bb6607de3bcbbbf0ba2e83d1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 122769,
        "upload_time": "2014-01-08T01:55:43",
        "url": "https://files.pythonhosted.org/packages/c1/6f/e512a2f132da146466746a3a2ad066abafd2a62c1251ab8ad4acd4c3e8af/pyidlrpc-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "79cfd20b33057125444f53705ea9c66f",
          "sha256": "63745fc027e2047e7131850ea9b65465a9e081e64d5e7529ee206a08d44dd950"
        },
        "downloads": 1903,
        "filename": "pyidlrpc-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "79cfd20b33057125444f53705ea9c66f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 124385,
        "upload_time": "2014-01-09T06:19:53",
        "url": "https://files.pythonhosted.org/packages/b5/14/847e2bed707bc21702b4f3bc5f552448c0086483dfc438763f65ce756474/pyidlrpc-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6d1436c27bd0fcf55585c07067a9629f",
          "sha256": "1373ba02e7ff68b757a7956e150b464b28a04955871c0bdaade786e4c5ed0f4c"
        },
        "downloads": 1847,
        "filename": "pyidlrpc-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6d1436c27bd0fcf55585c07067a9629f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 124339,
        "upload_time": "2014-01-09T16:51:29",
        "url": "https://files.pythonhosted.org/packages/75/76/8358848f2a4979b8435c42734404c022a832606040e1f718223f5f6cb77c/pyidlrpc-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c013e1529184373aff682363c2014f29",
          "sha256": "159cff518b1ecdcd40400532cc27da7ff23765d22cf215f49996a8851032ba5f"
        },
        "downloads": 1824,
        "filename": "pyidlrpc-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c013e1529184373aff682363c2014f29",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 125723,
        "upload_time": "2014-02-07T15:41:15",
        "url": "https://files.pythonhosted.org/packages/86/ee/c45aba46d641d5ddf122cffa00dbe8cdff70c4cf5909570ff35e8fa626dc/pyidlrpc-0.1.3.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "59c80ad279799339ae216dd1a0c7bbb7",
          "sha256": "26c7ae156065b00582ba75b08347552326319c75cd4b25212481390d712754e9"
        },
        "downloads": 1910,
        "filename": "pyidlrpc-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "59c80ad279799339ae216dd1a0c7bbb7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 129902,
        "upload_time": "2014-05-07T02:43:36",
        "url": "https://files.pythonhosted.org/packages/d2/95/ff26513c6cd99c3d8f3319bb31c47fbbb55400700b7f190e4b1a250cf6ae/pyidlrpc-0.1.4.tar.gz"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8ae2454fecc0037200b77bdcfca7ff5a",
          "sha256": "9403c840c736507ff5976d392a681dc22d21b82f8c3eef9a8411de9a22749468"
        },
        "downloads": 2784,
        "filename": "pyidlrpc-0.1.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8ae2454fecc0037200b77bdcfca7ff5a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 135909,
        "upload_time": "2015-07-01T18:35:57",
        "url": "https://files.pythonhosted.org/packages/ef/d8/3142e1f77810413832b627389c0113835eb3a94312f38ad6cf64645ac1f9/pyidlrpc-0.1.5.2.tar.gz"
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c20844cd2e144637c72aed857363c061",
          "sha256": "323bb31eb8f7c50f596ae7a53cedcd1c4c4206861e88bf8be9f73bf5d0642535"
        },
        "downloads": 877,
        "filename": "pyidlrpc-0.1.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c20844cd2e144637c72aed857363c061",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 136995,
        "upload_time": "2015-07-06T21:00:03",
        "url": "https://files.pythonhosted.org/packages/3f/da/3bcec338b76675d08a1386c5d97e0554d271196043f16b918ece1f64c7e7/pyidlrpc-0.1.6.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c20844cd2e144637c72aed857363c061",
        "sha256": "323bb31eb8f7c50f596ae7a53cedcd1c4c4206861e88bf8be9f73bf5d0642535"
      },
      "downloads": 877,
      "filename": "pyidlrpc-0.1.6.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c20844cd2e144637c72aed857363c061",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 136995,
      "upload_time": "2015-07-06T21:00:03",
      "url": "https://files.pythonhosted.org/packages/3f/da/3bcec338b76675d08a1386c5d97e0554d271196043f16b918ece1f64c7e7/pyidlrpc-0.1.6.1.tar.gz"
    }
  ]
}