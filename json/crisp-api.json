{
  "info": {
    "author": "Valerian Saliou",
    "author_email": "valerian@valeriansaliou.name",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "Natural Language :: English",
      "Programming Language :: Python"
    ],
    "description": "# python-crisp-api\n\nThe Crisp API Python wrapper. Authenticate, send messages, fetch conversations, access your agent accounts from your Python code.\n\nCopyright 2018 Crisp IM SARL. See LICENSE for copying information.\n\n* **\ud83d\udcdd Implements**: [Crisp Platform - API ~ v1](https://docs.crisp.chat/api/v1/) at reference revision: 12/31/2017\n* **\ud83d\ude18 Maintainer**: [@valeriansaliou](https://github.com/valeriansaliou)\n\n## Usage\n\nInstall the library:\n\n```bash\npip install crisp-api\n```\n\nThen, import it:\n\n```python\nfrom crisp_api import Crisp\n```\n\nConstruct a new authenticated Crisp client with your `identifier` and `key` tokens.\n\n```python\nclient = Crisp()\n\nclient.authenticate(identifier, key)\n```\n\nThen, your client is ready to be consumed!\n\n## Authentication\n\nTo authenticate against the API, generate your session identifier and session key **once** using the following cURL request in your terminal (replace `YOUR_ACCOUNT_EMAIL` and `YOUR_ACCOUNT_PASSWORD`):\n\n```bash\ncurl -H \"Content-Type: application/json\" -X POST -d '{\"email\":\"YOUR_ACCOUNT_EMAIL\",\"password\":\"YOUR_ACCOUNT_PASSWORD\"}' https://api.crisp.chat/v1/user/session/login\n```\n\nIf authentication succeeds, you will get a JSON response containing your authentication keys: `identifier` and `key`. **Keep those 2 values private, and store them safely for long-term use**.\n\nThen, add authentication parameters to your `client` instance right after you create it:\n\n```python\nclient = Crisp()\n\n# Authenticate to API (identifier, key)\n# eg. client.authenticate(\"13937834-f6ce-4556-ae4f-9e0c54faf038\", \"eb6c3623245521d7a6c35f5b29f3fa756e893f034ed551d84518961c5ff16dec\")\nclient.authenticate(identifier, key)\n\n# Now, you can use authenticated API sections.\n```\n\n**\ud83d\udd34 Important: Be sure to login once, and re-use the same authentication keys (same `identifier` + `key`) in all your subsequent requests to the API. Do not generate new tokens from your code for every new request to the API (you will be heavily rate-limited; that will induce HTTP failures for some of your API calls).**\n\n## Resource Methods\n\nMost useful available Crisp API resources are implemented. **Programmatic methods names are named after their label name in the [API Reference](https://docs.crisp.chat/api/v1/)**.\n\nThus, it is straightforward to look for them in the library while reading the [API Reference](https://docs.crisp.chat/api/v1/).\n\nIn the following method prototypes, `crisp` is to be replaced with your Crisp API instance. For example, instanciate `client = Crisp()` and then call eg: `client.user.check_session_validity()`.\n\nWhen calling a method that writes data to the API (eg. send a message with: `client.website.send_message_in_conversation()`), you need to submit it this way:\n\n```python\nwebsite_id = \"88972681-a00c-4b3b-a383-cab281636484\"\nsession_id = \"session_9df2a21e-f113-41d4-8ed2-bad8b49cafd1\"\n\nclient.website.send_message_in_conversation(\n  website_id, session_id,\n\n  {\n    \"type\": \"text\",\n    \"content\": \"This message was sent from python-crisp-api! :)\",\n    \"from\": \"operator\",\n    \"origin\": \"chat\"\n  }\n)\n```\n\n### Website\n\n* **Website Conversations**\n  * **List Conversations**: `client.website.list_conversations`\n\n* **Website Conversation**\n  * **Create A New Conversation**: `client.website.create_new_conversation`\n  * **Check If Conversation Exists**: `client.website.check_conversation_exists`\n  * **Get A Conversation**: `client.website.get_conversation`\n  * **Remove A Conversation**: `client.website.remove_conversation`\n  * **Initiate A Conversation With Existing Session**: `client.website.initiate_conversation_with_existing_session`\n  * **Get Messages In Conversation**: `client.website.get_messages_in_conversation`\n  * **Send A Message In Conversation**: `client.website.send_message_in_conversation`\n  * **Update A Message In Conversation**: `client.website.update_message_in_conversation`\n  * **Compose A Message In Conversation**: `client.website.compose_message_in_conversation`\n  * **Mark Messages As Read In Conversation**: `client.website.mark_messages_read_in_conversation`\n  * **Mark Messages As Delivered In Conversation**: `client.website.mark_messages_delivered_in_conversation`\n  * **Get Conversation Routing Assign**: `client.website.get_conversation_routing_assign`\n  * **Assign Conversation Routing**: `client.website.assign_conversation_routing`\n  * **Get Conversation Metas**: `client.website.get_conversation_metas`\n  * **Update Conversation Metas**: `client.website.update_conversation_metas`\n  * **List Conversation Pages**: `client.website.list_conversation_pages`\n  * **List Conversation Events**: `client.website.list_conversation_events`\n  * **Get Conversation State**: `client.website.get_conversation_state`\n  * **Change Conversation State**: `client.website.change_conversation_state`\n  * **Get Block Status For Conversation**: `client.website.get_block_status_for_conversation`\n  * **Block Incoming Messages For Conversation**: `client.website.block_incoming_messages_for_conversation`\n  * **Request Email Transcript For Conversation**: `client.website.request_email_transcript_for_conversation`\n\n* **Website People**\n  * **Get People Statistics**: `client.website.get_people_statistics`\n  * **List People Segments**: `client.website.list_people_segments`\n  * **List People Profiles**: `client.website.list_people_profiles`\n  * **Add New People Profile**: `client.website.add_new_people_profile`\n  * **Check If People Profile Exists**: `client.website.check_people_profile_exists`\n  * **Get People Profile**: `client.website.get_people_profile`\n  * **Save People Profile**: `client.website.save_people_profile`\n  * **Update People Profile**: `client.website.update_people_profile`\n  * **Remove People Profile**: `client.website.remove_people_profile`\n  * **List People Conversations**: `client.website.list_people_conversations`\n  + **Add A People Event**: `client.website.add_people_event`\n  + **List People Events**: `client.website.list_people_events`\n  + **Get People Data**: `client.website.get_people_data`\n  + **Save People Data**: `client.website.save_people_data`\n  + **Get People Subscription Status**: `client.website.get_people_subscription_status`\n  + **Update People Subscription Status**: `client.website.update_people_subscription_status`\n\n* **Website Base**\n  * **Create Website**: `client.website.create_website`\n  * **Get A Website**: `client.website.get_website`\n  * **Delete A Website**: `client.website.delete_website`\n\n* **Website Batch**\n  * **Batch Resolve Items**: `client.website.batch_resolve_items`\n  * **Batch Read Items**: `client.website.batch_read_items`\n  * **Batch Remove Items**: `client.website.batch_remove_items`\n\n* **Website Availability**\n  * **Get Website Availability Status**: `client.website.get_website_availability_status`\n\n* **Website Operator**\n  * **List Website Operators**: `client.website.list_website_operators`\n  * **List Last Active Website Operators**: `client.website.list_last_active_website_operators`\n\n* **Website Settings**\n  * **Get Website Settings**: `client.website.get_website_settings`\n  * **Update Website Settings**: `client.website.update_website_settings`\n\n* **Website Visitors**\n  * **Count Visitors**: `client.website.count_visitors`\n  * **List Visitors**: `client.website.list_visitors`\n\n### Bucket\n\n* **Bucket URL**\n  * **Generate Bucket URL**: `client.bucket.generate_bucket_url`\n\n### User\n\n* **User Availability**\n  * **Get User Availability**: `client.user.get_user_availability`\n  * **Update User Availability**: `client.user.update_user_availability`\n  * **Get User Availability Status**: `client.user.get_user_availability_status`\n\n* **User Account Base**\n  * **Get User Account**: `client.user.get_user_account`\n  * **Create User Account**: `client.user.create_user_account`\n\n* **User Account Websites**\n  * **List Websites**: `client.user.list_websites`\n\n* **User Account Profile**\n  * **Get Profile**: `client.user.get_profile`\n  * **Update Profile**: `client.user.update_profile`\n\n* **User Session**\n  * **Check Session Validity**: `client.user.check_session_validity`\n  * **Create A New Session**: `client.user.create_new_session`\n  * **Destroy A Session**: `client.user.destroy_session`\n\n* **User Statistics**\n  * **Count Total Unread Messages**: `client.user.count_total_unread_messages`\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/crisp-im/python-crisp-api",
    "keywords": "",
    "license": "MIT - http://opensource.org/licenses/mit-license.php",
    "maintainer": "",
    "maintainer_email": "",
    "name": "crisp-api",
    "platform": "",
    "project_url": "https://pypi.org/project/crisp-api/",
    "release_url": "https://pypi.org/project/crisp-api/1.0.4/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Crisp API Python.",
    "version": "1.0.4"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b3277e73f0f7af63b315316254495e10",
          "sha256": "db08a97a76e8925bcb656cccae1b851083756aeea013a26155c9141828db4e39"
        },
        "downloads": -1,
        "filename": "crisp-api-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b3277e73f0f7af63b315316254495e10",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5019,
        "upload_time": "2018-01-04T09:28:59",
        "url": "https://files.pythonhosted.org/packages/aa/da/f8a224d8afffd2da5f13a860ad26f232a19ccc7371672823d00c97a1a346/crisp-api-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c42f1454140f3a3c70d45501956611e1",
          "sha256": "aba92ce6c902c9ee59dc8da63099a1dfc8b1726939c0c2d83ed222f0ee761035"
        },
        "downloads": -1,
        "filename": "crisp-api-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c42f1454140f3a3c70d45501956611e1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5007,
        "upload_time": "2018-01-04T09:29:50",
        "url": "https://files.pythonhosted.org/packages/14/19/5f0164718e6ed0544040b55d6ec15b05633b8221a3d699f76417100c2696/crisp-api-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "db64505d59885cff82293bc5dc9361db",
          "sha256": "f240a754ba78f1f98eeb5c57b2254ac64b8d38bafb9c31a7ba51b1f71abaa5cd"
        },
        "downloads": -1,
        "filename": "crisp-api-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "db64505d59885cff82293bc5dc9361db",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5000,
        "upload_time": "2018-01-04T14:26:41",
        "url": "https://files.pythonhosted.org/packages/41/2a/d9778822dc09b3fefb4c8db25126dcd9f154af789398f4f83ef6f0f012a3/crisp-api-1.0.2.tar.gz"
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6351788e435f16115b835a4cd87bf898",
          "sha256": "2875373d6f302417e0b24b5abdd25abf32ebec8fbeb165df51a72f9752b6df6f"
        },
        "downloads": -1,
        "filename": "crisp-api-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6351788e435f16115b835a4cd87bf898",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6356,
        "upload_time": "2018-01-25T15:53:48",
        "url": "https://files.pythonhosted.org/packages/84/fe/98c554ff9f5f913bf4a3d3ce94de5607adc6103eacda828cf8cc02fbd6b7/crisp-api-1.0.3.tar.gz"
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cd1d0f53ad0fdb40c2cada181fbe7b43",
          "sha256": "397843b5973714b8dc3a484c92d50f837af203b368ff70f103eaf9004227ada9"
        },
        "downloads": -1,
        "filename": "crisp-api-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cd1d0f53ad0fdb40c2cada181fbe7b43",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6377,
        "upload_time": "2018-01-25T16:06:29",
        "url": "https://files.pythonhosted.org/packages/4b/e7/fd22691467bdb201a7db603469780c4aaa3ddd659094d37d92eb765983a7/crisp-api-1.0.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "cd1d0f53ad0fdb40c2cada181fbe7b43",
        "sha256": "397843b5973714b8dc3a484c92d50f837af203b368ff70f103eaf9004227ada9"
      },
      "downloads": -1,
      "filename": "crisp-api-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "cd1d0f53ad0fdb40c2cada181fbe7b43",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6377,
      "upload_time": "2018-01-25T16:06:29",
      "url": "https://files.pythonhosted.org/packages/4b/e7/fd22691467bdb201a7db603469780c4aaa3ddd659094d37d92eb765983a7/crisp-api-1.0.4.tar.gz"
    }
  ]
}