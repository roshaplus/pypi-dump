{
  "info": {
    "author": "Ludwig Schwardt",
    "author_email": "ludwig@ska.ac.za",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Scientific/Engineering :: Astronomy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "katdal\n======\n\nThis package serves as a data access library to the HDF5 files produced by\nthe Fringe Finder, KAT-7 and MeerKAT data capturing systems. It uses memory\ncarefully, allowing files to be inspected and partially loaded into memory.\nData sets may be concatenated and split via a flexible selection mechanism.\nIn addition, it provides a script to convert these HDF5 files to CASA\nMeasurementSets.\n\nQuick Tutorial\n--------------\n\nOpen any HDF5 file through a single function to obtain a data set object:\n\n.. code:: python\n\n  import katdal\n  d = katdal.open('1234567890.h5')\n\nThis automatically determines whether it is a version 1 (FF), version 2\n(KAT-7) or version 3 (MeerKAT) file. Multiple files (even of different\nversions) may also be concatenated together (as long as they have the\nsame dump rate):\n\n.. code:: python\n\n  d = katdal.open(['1234567890.h5', '1234567891.h5'])\n\nInspect the contents of the file by printing the object:\n\n.. code:: python\n\n  print d\n\nHere is a typical output::\n\n  ===============================================================================\n  Name: 1313067732.h5 (version 2.0)\n  ===============================================================================\n  Observer: someone  Experiment ID: 2118d346-c41a-11e0-b2df-a4badb44fe9f\n  Description: 'Track on Hyd A,Vir A, 3C 286 and 3C 273'\n  Observed from 2011-08-11 15:02:14.072 SAST to 2011-08-11 15:19:47.810 SAST\n  Dump rate: 1.00025 Hz\n  Subarrays: 1\n  ID  Antennas                            Inputs  Corrprods\n   0  ant1,ant2,ant3,ant4,ant5,ant6,ant7  14      112\n  Spectral Windows: 1\n  ID  CentreFreq(MHz)  Bandwidth(MHz)  Channels  ChannelWidth(kHz)\n   0  1822.000         400.000          1024      390.625\n  -------------------------------------------------------------------------------\n  Data selected according to the following criteria:\n  subarray=0\n  ants=['ant1', 'ant2', 'ant3', 'ant4', 'ant5', 'ant6', 'ant7']\n  spw=0\n  -------------------------------------------------------------------------------\n  Shape: (1054 dumps, 1024 channels, 112 correlation products) => Size: 967.049 MB\n  Antennas: *ant1,ant2,ant3,ant4,ant5,ant6,ant7  Inputs: 14  Autocorr: yes  Crosscorr: yes\n  Channels: 1024 (index 0 - 1023, 2021.805 MHz - 1622.195 MHz), each 390.625 kHz wide\n  Targets: 4 selected out of 4 in catalogue\n  ID  Name    Type      RA(J2000)     DEC(J2000)  Tags  Dumps  ModelFlux(Jy)\n   0  Hyd A   radec      9:18:05.28  -12:05:48.9          333      33.63\n   1  Vir A   radec     12:30:49.42   12:23:28.0          251     166.50\n   2  3C 286  radec     13:31:08.29   30:30:33.0          230      12.97\n   3  3C 273  radec     12:29:06.70    2:03:08.6          240      39.96\n  Scans: 8 selected out of 8 total       Compscans: 1 selected out of 1 total\n  Date        Timerange(UTC)       ScanState  CompScanLabel  Dumps  Target\n  11-Aug-2011/13:02:14 - 13:04:26    0:slew     0:             133    0:Hyd A\n              13:04:27 - 13:07:46    1:track    0:             200    0:Hyd A\n              13:07:47 - 13:08:37    2:slew     0:              51    1:Vir A\n              13:08:38 - 13:11:57    3:track    0:             200    1:Vir A\n              13:11:58 - 13:12:27    4:slew     0:              30    2:3C 286\n              13:12:28 - 13:15:47    5:track    0:             200    2:3C 286\n              13:15:48 - 13:16:27    6:slew     0:              40    3:3C 273\n              13:16:28 - 13:19:47    7:track    0:             200    3:3C 273\n\nThe first segment of the printout displays the static information of the data\nset, including observer, dump rate and all the available subarrays and spectral\nwindows in the data set. The second segment (between the dashed lines) highlights\nthe active selection criteria. The last segment displays dynamic information\nthat is influenced by the selection, including the overall visibility array\nshape, antennas, channel frequencies, targets and scan info.\n\nThe data set is built around the concept of a three-dimensional visibility array\nwith dimensions of time, frequency and correlation product. This is reflected in\nthe *shape* of the dataset:\n\n.. code:: python\n\n  d.shape\n\nwhich returns ``(1054, 1024, 112)``, meaning 1054 dumps by 1024 channels by 112\ncorrelation products.\n\nLet's select a subset of the data set:\n\n.. code:: python\n\n  d.select(scans='track', channels=slice(200,300), ants='ant4')\n  print d\n\nThis results in the following printout::\n\n  ===============================================================================\n  Name: /Users/schwardt/Downloads/1313067732.h5 (version 2.0)\n  ===============================================================================\n  Observer: siphelele  Experiment ID: 2118d346-c41a-11e0-b2df-a4badb44fe9f\n  Description: 'track on Hyd A,Vir A, 3C 286 and 3C 273 for Lud'\n  Observed from 2011-08-11 15:02:14.072 SAST to 2011-08-11 15:19:47.810 SAST\n  Dump rate: 1.00025 Hz\n  Subarrays: 1\n  ID  Antennas                            Inputs  Corrprods\n   0  ant1,ant2,ant3,ant4,ant5,ant6,ant7  14      112\n  Spectral Windows: 1\n  ID  CentreFreq(MHz)  Bandwidth(MHz)  Channels  ChannelWidth(kHz)\n   0  1822.000         400.000          1024      390.625\n  -------------------------------------------------------------------------------\n  Data selected according to the following criteria:\n  channels=slice(200, 300, None)\n  subarray=0\n  scans='track'\n  ants='ant4'\n  spw=0\n  -------------------------------------------------------------------------------\n  Shape: (800 dumps, 100 channels, 4 correlation products) => Size: 2.560 MB\n  Antennas: ant4  Inputs: 2  Autocorr: yes  Crosscorr: no\n  Channels: 100 (index 200 - 299, 1943.680 MHz - 1905.008 MHz), each 390.625 kHz wide\n  Targets: 4 selected out of 4 in catalogue\n  ID  Name    Type      RA(J2000)     DEC(J2000)  Tags  Dumps  ModelFlux(Jy)\n   0  Hyd A   radec      9:18:05.28  -12:05:48.9          200      31.83\n   1  Vir A   radec     12:30:49.42   12:23:28.0          200     159.06\n   2  3C 286  radec     13:31:08.29   30:30:33.0          200      12.61\n   3  3C 273  radec     12:29:06.70    2:03:08.6          200      39.32\n  Scans: 4 selected out of 8 total       Compscans: 1 selected out of 1 total\n  Date        Timerange(UTC)       ScanState  CompScanLabel  Dumps  Target\n  11-Aug-2011/13:04:27 - 13:07:46    1:track    0:             200    0:Hyd A\n              13:08:38 - 13:11:57    3:track    0:             200    1:Vir A\n              13:12:28 - 13:15:47    5:track    0:             200    2:3C 286\n              13:16:28 - 13:19:47    7:track    0:             200    3:3C 273\n\nCompared to the first printout, the static information has remained the same\nwhile the dynamic information now reflects the selected subset. There are many\npossible selection criteria, as illustrated below:\n\n.. code:: python\n\n  d.select(timerange=('2011-08-11 13:10:00', '2011-08-11 13:15:00'), targets=[1, 2])\n  d.select(spw=0, subarray=0)\n  d.select(ants='ant1,ant2', pol='H', scans=(0,1,2), freqrange=(1700e6, 1800e6))\n\nSee the docstring of ``DataSet.select`` for more detailed information (i.e.\ndo ``d.select?`` in IPython). Take note that only one subarray and one spectral\nwindow must be selected.\n\nOnce a subset of the data has been selected, you can access the data and\ntimestamps on the data set object:\n\n.. code:: python\n\n  vis = d.vis[:]\n  timestamps = d.timestamps[:]\n\nNote the ``[:]`` indexing, as the ``vis`` and ``timestamps`` properties are\nspecial ``LazyIndexer`` objects that only give you the actual data when\nyou use indexing, in order not to inadvertently load the entire array into memory.\n\nFor the example dataset and no selection the ``vis`` array will have a shape of\n``(1054, 1024, 112)``. The time dimension is labelled by ``d.timestamps``, the\nfrequency dimension by ``d.channel_freqs`` and the correlation product dimension\nby ``d.corr_products``.\n\nAnother key concept in the data set object is that of *sensors*. These are named\ntime series of arbritrary data that are either loaded from the file (*actual*\nsensors) or calculated on the fly (*virtual* sensors). Both variants are\naccessed through the *sensor cache* (available as ``d.sensor``) and cached there\nafter the first access. The data set object also provides convenient properties\nto expose commonly-used sensors, as shown in the plot example below:\n\n.. code:: python\n\n  import matplotlib.pyplot as plt\n  plt.plot(d.az, d.el, 'o')\n  plt.xlabel('Azimuth (degrees)')\n  plt.ylabel('Elevation (degrees)')\n\nOther useful attributes include ``ra``, ``dec``, ``lst``, ``mjd``, ``u``,\n``v``, ``w``, ``target_x`` and ``target_y``. These are all one-dimensional\nNumPy arrays that dynamically change length depending on the active selection.\n\nAs in katdal's predecessor (scape) there is a ``DataSet.scans`` generator\nthat allows you to step through the scans in the data set. It returns the\nscan index, scan state and target object on each iteration, and updates\nthe active selection on the data set to include only the current scan.\nIt is also possible to iterate through the compound scans with the\n``DataSet.compscans`` generator, which yields the compound scan index, label\nand first target on each iteration for convenience. These two iterators may also\nbe used together to traverse the data set structure:\n\n.. code:: python\n\n  for compscan, label, target in d.compscans():\n      plt.figure()\n      for scan, state, target in d.scans():\n          if state in ('scan', 'track'):\n              plt.plot(d.ra, d.dec, 'o')\n      plt.xlabel('Right ascension (J2000 degrees)')\n      plt.ylabel('Declination (J2000 degrees)')\n      plt.title(target.name)\n\nFinally, all the targets (or fields) in the data set are stored in a catalogue\navailable at ``d.catalogue``, and the original HDF5 file is still accessible via\na back door installed at ``d.file`` in the case of a single-file data set.\n\n\nHistory\n=======\n\n0.9 (2018-01-16)\n----------------\n* New ChunkStore and telstate-based parser for future v4 format\n* Use python-casacore (>=2.2.1) to create Measurement Sets instead of blank.ms\n* Read new-style noise diode sensor names, serial numbers and L0 stream metadata\n* Select multiple polarisations (useful for cross-pol)\n* Relax the \"expected number of dumps\" check to avoid spurious warnings\n* Fix NumPy 1.14 warnings\n\n0.8 (2017-08-08)\n----------------\n* Fix upside-down MeerKAT images\n* SensorData rework to load gain solutions and access telstate efficiently\n* Improve mapping of sensor events onto dumps, especially for long (8 s) dumps\n* Fix NumPy 1.13 warnings and errors\n* Support UHF receivers\n\n0.7.1 (2017-01-19)\n------------------\n\n* Fix MODEL_DATA / CORRECTED_DATA shapes in h5toms\n* Produce calibration solution tables in h5toms and improve error messages\n* Autodetect receiver band on older RTS files\n\n0.7 (2016-12-14)\n----------------\n\n* Support weights in file and improve vis / weights / flags API\n* Support multiple receivers and improve centre frequency extraction\n* Speed up h5toms by ordering visibilities by time\n* Fix band selection and corr products for latest SDP (cam2telstate)\n* Allow explicit MS names in h5toms\n\n0.6 (2016-09-16)\n----------------\n\n* Initial release of katdal",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ska-sa/katdal",
    "keywords": "meerkat ska",
    "license": "Modified BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "katdal",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/katdal/",
    "release_url": "https://pypi.org/project/katdal/0.9/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Karoo Array Telescope data access library to interact with HDF5 and MS files",
    "version": "0.9"
  },
  "releases": {
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3d9733f6e5632b6c22f2cdc0e31813bd",
          "sha256": "42ff0db14e849edc3f36ae4a2bd7735b7dfa9450646e985791430d60a458ada0"
        },
        "downloads": -1,
        "filename": "katdal-0.6-py2-none-any.whl",
        "has_sig": true,
        "md5_digest": "3d9733f6e5632b6c22f2cdc0e31813bd",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 107354,
        "upload_time": "2016-09-16T15:25:16",
        "url": "https://files.pythonhosted.org/packages/1d/66/4abedceb7afa7c655fabef4490e3c1e1116c4510325e2a0f7fff1486d2bc/katdal-0.6-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "78d44e8c5cf35576d1e57002dd1fd811",
          "sha256": "63118b8b2d37094cc55df73778ed95dde70ccfb30e800041407420122850aff5"
        },
        "downloads": -1,
        "filename": "katdal-0.6.tar.gz",
        "has_sig": true,
        "md5_digest": "78d44e8c5cf35576d1e57002dd1fd811",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 105776,
        "upload_time": "2016-09-16T15:25:30",
        "url": "https://files.pythonhosted.org/packages/17/90/2f75534574eeaa19c41d42b42f30f5584138f497596ea690b57a5747bf2d/katdal-0.6.tar.gz"
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9967908609c44ac7344f7f3b6b3d3271",
          "sha256": "7dbda4a0aa657752acb312a377bb2302df0d58f6bf6bc2129e82a7b7d78c5050"
        },
        "downloads": -1,
        "filename": "katdal-0.7-py2-none-any.whl",
        "has_sig": true,
        "md5_digest": "9967908609c44ac7344f7f3b6b3d3271",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 110515,
        "upload_time": "2016-12-14T20:23:33",
        "url": "https://files.pythonhosted.org/packages/cd/cb/d2851fc9daafd0587391b5556b05eedf26afe25786bb7818dbd7cb20b05b/katdal-0.7-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "92d534fa3016ed958166a11c94f05d99",
          "sha256": "790e6bf4778193445b012c86d1aecf53c49ec32eed951f2893d75e5c95ddeabf"
        },
        "downloads": -1,
        "filename": "katdal-0.7.tar.gz",
        "has_sig": true,
        "md5_digest": "92d534fa3016ed958166a11c94f05d99",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 93421,
        "upload_time": "2016-12-14T20:23:45",
        "url": "https://files.pythonhosted.org/packages/2b/59/258059dd09ff0d04a366949484093807ceab9c22cf1b69ab91c6f546d056/katdal-0.7.tar.gz"
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "013455fe1977d4ff0e39b3490ce59f04",
          "sha256": "a836f5f9557346c3e308d47af0bf37f40468fafaf5b742f844d7517dd8fd9229"
        },
        "downloads": -1,
        "filename": "katdal-0.7.1-py2-none-any.whl",
        "has_sig": true,
        "md5_digest": "013455fe1977d4ff0e39b3490ce59f04",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 113868,
        "upload_time": "2017-01-19T20:35:39",
        "url": "https://files.pythonhosted.org/packages/bb/01/2df9022c03a754d1aa2189e287ad4fd4b433430380247937edaff92487c3/katdal-0.7.1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "42cbbcc3c2e2d68f6e520324d0bc1de8",
          "sha256": "9b57cbc10a578e01dfb20214b4699c1c7eafce22c6bacdfa3c936e2f45647339"
        },
        "downloads": -1,
        "filename": "katdal-0.7.1.tar.gz",
        "has_sig": true,
        "md5_digest": "42cbbcc3c2e2d68f6e520324d0bc1de8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 96982,
        "upload_time": "2017-01-19T20:35:14",
        "url": "https://files.pythonhosted.org/packages/89/47/1378110f16cfb60ee4f8f8c75e1d107be46363c6a4079dd6d57e4cdf8186/katdal-0.7.1.tar.gz"
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4e3974a707156fc07169cfeefac6125f",
          "sha256": "916011673b0bca1c3b71d58f726e8d72f46a5f202535ed4395243f82f4acefec"
        },
        "downloads": -1,
        "filename": "katdal-0.8-py2-none-any.whl",
        "has_sig": true,
        "md5_digest": "4e3974a707156fc07169cfeefac6125f",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 121055,
        "upload_time": "2017-08-08T10:18:09",
        "url": "https://files.pythonhosted.org/packages/bc/1f/a36c6ce69a096dbb91e90a6a91be42e8fb6f5124e631728217c873bde14d/katdal-0.8-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d1982961608bedbdcb29141f079fb640",
          "sha256": "5ca4f31e3aa52459fd4a474564b21fca9d4f80b6d2f81daf851ea43780d20626"
        },
        "downloads": -1,
        "filename": "katdal-0.8.tar.gz",
        "has_sig": true,
        "md5_digest": "d1982961608bedbdcb29141f079fb640",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 104434,
        "upload_time": "2017-08-08T10:17:45",
        "url": "https://files.pythonhosted.org/packages/01/07/a0fe0a63530fec1e93b1588b40a9f3232700297a464c3d6c675b5e5e368f/katdal-0.8.tar.gz"
      }
    ],
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "566cd140b67ddfddda81677540344dcd",
          "sha256": "9bf6ecd68e439dfa1ace31716b103a36e77ccdcfaa468b3d0e2a0d930ba2e146"
        },
        "downloads": -1,
        "filename": "katdal-0.9-py2-none-any.whl",
        "has_sig": true,
        "md5_digest": "566cd140b67ddfddda81677540344dcd",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 149516,
        "upload_time": "2018-01-16T13:11:58",
        "url": "https://files.pythonhosted.org/packages/0e/3d/7a0469600617fd8203f145336f59f8272d142ea65f5ecb91fe94e425b1a5/katdal-0.9-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c405ec9b099c62be31c5065feb38407b",
          "sha256": "c1d268505ca6346662e949dd004e074a0dcda9cac35dfd66b81b1c9c078fb482"
        },
        "downloads": -1,
        "filename": "katdal-0.9.tar.gz",
        "has_sig": true,
        "md5_digest": "c405ec9b099c62be31c5065feb38407b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 122777,
        "upload_time": "2018-01-16T13:11:12",
        "url": "https://files.pythonhosted.org/packages/f0/d0/582951a889d432f624feb2b796caa5ada48686af44673988ef848d64f038/katdal-0.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "566cd140b67ddfddda81677540344dcd",
        "sha256": "9bf6ecd68e439dfa1ace31716b103a36e77ccdcfaa468b3d0e2a0d930ba2e146"
      },
      "downloads": -1,
      "filename": "katdal-0.9-py2-none-any.whl",
      "has_sig": true,
      "md5_digest": "566cd140b67ddfddda81677540344dcd",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 149516,
      "upload_time": "2018-01-16T13:11:58",
      "url": "https://files.pythonhosted.org/packages/0e/3d/7a0469600617fd8203f145336f59f8272d142ea65f5ecb91fe94e425b1a5/katdal-0.9-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "c405ec9b099c62be31c5065feb38407b",
        "sha256": "c1d268505ca6346662e949dd004e074a0dcda9cac35dfd66b81b1c9c078fb482"
      },
      "downloads": -1,
      "filename": "katdal-0.9.tar.gz",
      "has_sig": true,
      "md5_digest": "c405ec9b099c62be31c5065feb38407b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 122777,
      "upload_time": "2018-01-16T13:11:12",
      "url": "https://files.pythonhosted.org/packages/f0/d0/582951a889d432f624feb2b796caa5ada48686af44673988ef848d64f038/katdal-0.9.tar.gz"
    }
  ]
}