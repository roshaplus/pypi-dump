{
  "info": {
    "author": "Jazeps Basko",
    "author_email": "jazeps.basko@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# wr-attrs\n\n\n * Attributes are descriptors for classes and values for instances \n \n        class A(AttrContainer):\n            p = Attr()\n        \n        a = A()\n        \n        assert isinstance(A.p, Attr)\n        assert A.p.name == 'p' \n        assert A.p.default is None\n        \n        assert a.p is None\n \n * Attributes can be easily initialised\n \n        a = A(p=23)\n        \n        assert isinstance(A.p, Attr)\n        assert A.p.default is None\n        \n        assert a.p == 23\n        \n * Attributes are inherited\n \n        class B(A):\n            q = Attr()\n            r = Attr()\n        \n        b = B(p=23, q=42)\n\n        assert B.p is A.p\n        \n        assert b.p == 23\n        assert b.q == 42\n        assert b.r is None\n\n\n * Attributes are registered in a collection.\n \n        b = B(q=42)\n\n        assert len(b.attrs) == 3\n        assert b.attrs.names == ['p', 'q', 'r']\n        assert list(b.attrs.values) == [('p', None), ('q', 42), ('r', None)]\n        \n        assert b.attrs.q is B.q\n        assert b.attrs['q'] is B.q\n        assert b.attrs.get('q') == 42\n \n\n * Attributes can have default values set in inherited classes without overwriting\n   the descriptor.\n   \n        class C(B):\n            p = 0\n            q = 1\n   \n        c = C()\n\n        assert c.p == 0\n        assert c.q == 1\n        assert c.r is None\n    \n        assert C.p is B.p\n        assert C.q is B.q\n        assert C.r is B.r\n \n * Attributes can have custom setters.\n \n        class D(C):\n            s = Attr()\n            \n            @s.setter\n            def s(self, value):\n                self.attrs.set('s', value * 5)\n\n        d = D(s=0)\n        d.s = 5\n        assert d.s == 25",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jbasko/wr-attrs",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wr-attrs",
    "platform": "",
    "project_url": "https://pypi.org/project/wr-attrs/",
    "release_url": "https://pypi.org/project/wr-attrs/0.1.5/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "wr-attrs",
    "version": "0.1.5"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b923e6775f5a935f749e864697b0e8bb",
          "sha256": "06669477bc1a3876c26fdcea006fd105873107c5ba26f575fe92327d8aaf1259"
        },
        "downloads": -1,
        "filename": "wr-attrs-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b923e6775f5a935f749e864697b0e8bb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5363,
        "upload_time": "2018-01-06T15:30:40",
        "url": "https://files.pythonhosted.org/packages/7c/1b/44840a0853d5b875c27e65f8e35182ef86fc02f1defe5ec0fa8fdf04162c/wr-attrs-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a5b59667c3bbfc8a7286804ee19251a1",
          "sha256": "8b48c88d6a2ec7b04ff7c23785e5ae7e98a8dd6c9bb5e452e0eb1306baa4a2ab"
        },
        "downloads": -1,
        "filename": "wr-attrs-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a5b59667c3bbfc8a7286804ee19251a1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5367,
        "upload_time": "2018-01-06T15:40:50",
        "url": "https://files.pythonhosted.org/packages/27/0b/27a48ec7b8167d968fa8d5652913e109de75ea281b908b174f933db66204/wr-attrs-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5ef99a34181e341106c2670c8937856b",
          "sha256": "53cec5a732105b58667238192320f76bfa83e542a1e73e3b515340fbd9c8ec88"
        },
        "downloads": -1,
        "filename": "wr-attrs-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5ef99a34181e341106c2670c8937856b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5393,
        "upload_time": "2018-01-06T16:49:23",
        "url": "https://files.pythonhosted.org/packages/40/e0/d901328fdfb6cae1b177174b6050c05d561a0b5d3533543fb5047f7e0102/wr-attrs-0.1.2.tar.gz"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5e9fcbb08cc2b50b97de5aa51e485394",
          "sha256": "21535efc292d762e9567adf3d516a65079ce24ccac21a88c470eb57822f477bc"
        },
        "downloads": -1,
        "filename": "wr-attrs-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5e9fcbb08cc2b50b97de5aa51e485394",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5487,
        "upload_time": "2018-01-07T12:53:11",
        "url": "https://files.pythonhosted.org/packages/ac/fc/ccaf46b0e8d5c4629e15f44b82d87650a06bc99b313e38d43d0184fc99ce/wr-attrs-0.1.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5e9fcbb08cc2b50b97de5aa51e485394",
        "sha256": "21535efc292d762e9567adf3d516a65079ce24ccac21a88c470eb57822f477bc"
      },
      "downloads": -1,
      "filename": "wr-attrs-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "5e9fcbb08cc2b50b97de5aa51e485394",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5487,
      "upload_time": "2018-01-07T12:53:11",
      "url": "https://files.pythonhosted.org/packages/ac/fc/ccaf46b0e8d5c4629e15f44b82d87650a06bc99b313e38d43d0184fc99ce/wr-attrs-0.1.5.tar.gz"
    }
  ]
}