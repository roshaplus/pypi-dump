{
  "info": {
    "author": "Jo Bovy",
    "author_email": "bovy@ias.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 6 - Mature",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: C",
      "Programming Language :: Python :: 2.7",
      "Topic :: Scientific/Engineering :: Astronomy",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "mwdust\n======\n\n**Dust in 3D in the Milky Way**\n\n\n\n\nInstallation\n-------------\n\nPlease define an environment variable ``DUST_DIR`` before installing\nthe code; this is a directory that will contain the dust data.\n\nStandard python setup.py build/install\n\nEither\n\n``sudo python setup.py install``\n\nor \n\n``python setup.py install --prefix=/some/directory/``\n\nThe installation automatically downloads the relevant dust data. You\nmight have to define an environment variable ``SUDO_USER`` if not\ninstalling with sudo.\n\nDust Data\n---------\n\nThe code can automatically download all of the necessary data (use the\ninstallation option ``--no-downloads`` to turn this off). These data\nare put in subdirectories of a directory ``DUST_DIR``, with roughly\nthe following lay-out::\n\n    $DUST_DIR/\n       combined15/\n          dust-map-3d.h5\n       green15/\n          dust-map-3d.h5\n       maps/\n          SFD_dust_4096_ngp.fits\n\t  SFD_dust_4096_sgp.fits\n       marshall06/\n          ReadMe\n\t  table1.dat\n       sale14/\n          Amap.dat\n          ReadMe\n\nThe data for the Drimmel et al. (2003) map is installed in the code\ndirectory, because it is not very large.\n\nUsage\n------\n\nAll of the maps can be initialized similar to::\n\n    import mwdust\n    drimmel= mwdust.Drimmel03(filter='2MASS H')\n    sfd= mwdust.SFD(filter='2MASS H')\n\nwhich sets up a Drimmel et al. (2003) map for the *H*-band filter. The\nmaps can be evaluate for a given Galactic longitude *l*, Galactic\nlatitude *b*, and an array (or scalar) of distances *D*::\n\n\t drimmel(60.,0.,3.) # inputs are (l,b,D)\n\t array([ 0.42794197])\n\t drimmel(30.,3.,numpy.array([1.,2.,3.,10.]))\n\t array([ 0.24911393,  0.53050198,  0.78045575,  1.14657304])\n\t # SFD is just the constant SFD extinction\n\t sfd(30.,3.,numpy.array([1.,2.,3.]))\n\t array([ 1.19977335,  1.19977335,  1.19977335])\n\nand they can be plotted as::\n\n    drimmel.plot(55.,0.5) # inputs are (l,b)\n\n(plot not shown). \n\nSupported bandpasses\n---------------------\n\nCurrently only a few filters are supported; if no filter is supplied,\n*E(B-V)* is returned on the SFD scale if the object is initialized\nwith ``sf10=True`` (which tells the code to use re-scalings from\n`Schlafly & Finkbeiner 2011\n<http://adsabs.harvard.edu/abs/2011ApJ...737..103S>`__). ``sf10=True``\nis the default initialization for every map, so be careful in\ninterpreting the raw *E(B-V)* that come out of the code. *Only use*\n``sf10=False`` *when you have an extinction map in true E(B-V)*, **not**\n*SFD E(B-V)*. No map currently included in this package is in this\nsituation, so using ``sf10=False`` is never recommended.\n\nTo check what bandpasses are supported on the ``sf10=True`` scale do\n(these are all the bandpasses from Table 6 in `Schlafly & Finkbeiner\n2011 <http://adsabs.harvard.edu/abs/2011ApJ...737..103S>`__)::\n\n   from mwdust.util import extCurves  \n   extCurves.avebvsf.keys()\n\nwhich gives::\n\n      ['Stromgren u',\n       'Stromgren v',\n       'ACS clear',\n       'CTIO R',\n       'CTIO V',\n       'CTIO U',\n       'CTIO I',\n       ...]\n\nTo check the bandpasses that are supported on the old SFD scale (``sf10=False``), do::\n\n   numpy.array(extCurves.avebv.keys())[True-numpy.isnan(extCurves.avebv.values())]\n\nwhich gives::\n\n      array(['CTIO R', 'CTIO V', 'CTIO U', 'CTIO I', 'CTIO B', 'DSS-II i',\n       'DSS-II g', 'WISE-1', 'WISE-2', 'DSS-II r', 'UKIRT H', 'UKIRT J',\n       'UKIRT K', 'IRAC-1', 'IRAC-2', 'IRAC-3', 'IRAC-4', '2MASS H',\n       'SDSS r', 'SDSS u', 'SDSS z', 'SDSS g', 'SDSS i', '2MASS Ks',\n       '2MASS J'], \n      dtype='|S14'\n\nAcknowledgements\n-----------------\n\nWhen making use of this code in a publication, please cite `Bovy et\nal. (2015a) <http://arxiv.org/abs/1509.06751>`__. Also cite the relevant papers for the dust\nmap that you use:\n\n* **mwdust.SFD**: `Schlegel et al. (1998) <http://adsabs.harvard.edu/abs/1998ApJ...500..525S>`__\n\n* **mwdust.Drimmel03**: `Drimmel et al. (2003) <http://adsabs.harvard.edu/abs/2003A%26A...409..205D>`__\n\n* **mwdust.Marshall06**: `Marshall et al. (2006) <http://adsabs.harvard.edu/abs/2006A%26A...453..635M>`__\n\n* **mwdust.Sale14**: `Sale et al. (2014) <http://adsabs.harvard.edu/abs/2014MNRAS.443.2907S>`__\n\n* **mwdust.Green15**: `Green et al. (2015) <http://adsabs.harvard.edu/abs/2015arXiv150701005G>`__\n\n* **mwdust.Combined15**: Combination of `Marshall et al. (2006) <http://adsabs.harvard.edu/abs/2006A%26A...453..635M>`__, `Green et al. (2015) <http://adsabs.harvard.edu/abs/2015arXiv150701005G>`__, and `Drimmel et al. (2003) <http://adsabs.harvard.edu/abs/2003A%26A...409..205D>`__; see `Bovy et al. (2015a) <http://adsabs.harvard.edu/abs/2015arXiv150906751B>`__\n\n* **mwdust.Zero**: `Bovy et al. (2015b) <http://adsabs.harvard.edu/abs/2015arXiv150905796B>`__ :smirk:",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jobovy/mwdust",
    "keywords": null,
    "license": "New BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "mwdust",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/mwdust/",
    "release_url": "https://pypi.org/project/mwdust/1.0/",
    "requires_python": null,
    "summary": "Dust in the Milky Way",
    "version": "1.0"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e2966e65de3d81610ce97d2f073674ed",
          "sha256": "c63502519029666eb45b160138dc112b40f6d277a49a0a3d095ec0744f6da4f2"
        },
        "downloads": 798,
        "filename": "mwdust-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e2966e65de3d81610ce97d2f073674ed",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 27174505,
        "upload_time": "2015-12-29T03:55:50",
        "url": "https://files.pythonhosted.org/packages/bb/21/d320bfe348ec994103d0485e4bfdcc38792a6fd8a2feed76d680aa6aa0c0/mwdust-1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e2966e65de3d81610ce97d2f073674ed",
        "sha256": "c63502519029666eb45b160138dc112b40f6d277a49a0a3d095ec0744f6da4f2"
      },
      "downloads": 798,
      "filename": "mwdust-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e2966e65de3d81610ce97d2f073674ed",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 27174505,
      "upload_time": "2015-12-29T03:55:50",
      "url": "https://files.pythonhosted.org/packages/bb/21/d320bfe348ec994103d0485e4bfdcc38792a6fd8a2feed76d680aa6aa0c0/mwdust-1.0.tar.gz"
    }
  ]
}