{
  "info": {
    "author": "Rob Schaefer, Joe Jeffers",
    "author_email": "schae234@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "![COB LOGO](https://s3-us-west-2.amazonaws.com/camoco/COBLogo.png)\n\nCOB - The Co-expression Browser\n===============================\n\nCOB is a complete client/server package built to browse gene co-expression networks\ncreated by [Camoco](https://github.com/schae234/Camoco). The client is written in \njavascript, and the server is written in python. \n\nGetting Started\n---------------\nThis package is entirely dependent on [Camoco](https://github.com/schae234/Camoco).\nIt is is designed such that once the Camoco has been installed, COB can be\nadded by, inside the camoco virtual environment, running:\n```\n$ pip install <PYPI NAME>\n```\nOnce installed, COB has a convinient command line interface to manage the server.\nTo run it with all of the default options, no options are required, just execute\nin the camoco virtual environment:\n```\n$ cob\n```\nThis will start the server in the current terminal window. To see the site, navigate \nto `http://localhost:50000` in your web browser once the server has finished loading. \nTo terminate the server, press `Ctrl+C` in the same terminal window. To run the \nserver in the background, add the `-d` flag to the start command. To terminate all\ninstances of the COB server, run `cob -k`. To define a specific server to kill, \nadd the `-n` flag followed by the name of the server as such:\n```\n$ cob -k -n my_server\n```\nTo use a specific configuration file for server settings, the file may be defined\nwith the `-c` flag:\n```\n$ cob -c my_server.conf\n```\nIf no configuration file is defined, COB then checks for a section `web` in the\nmain camoco configuration file `~/.camoco.conf`. If there are no settings in that\nfile, it will load with default values. The full configuration options are discussed\nin the next section.\n\nThis is the full documentation for all `cob` CLI options, which can also be accessed\nby executing `cob -h`:\n```\nusage: cob [-h] [-c USERCONF] [-d] [-k] [-l] [-n NAME]\n\nManage instances of the COB server.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c USERCONF, --config USERCONF\n                        Provide a YAML formatted configuration file, if not\n                        provided, general Camoco config file is used.\n  -d, --daemon          Run gunicorn as a daemon (allows closing of this\n                        terminal).\n  -k, --kill            Kill running server. Use '-n' to define specific\n                        server to kill otherwise all will be.\n  -l, --list            Kill running server. Use '-n' to define specific\n                        server to kill otherwise all will be.\n  -n NAME, --name NAME  Name of server to start or kill.\n```\n\nConfiguration\n-------------\nA powerful configuration engine is provided to both set options for the server\nand also options for the content for the website, such as default option \nvalues. As mentioned above, these can either be provided through a standalone\nYAML configuration file ([`example.conf`](https://github.com/monprin/cob/blob/master/example.conf)\nis included in the repo) or in a section with the same format titled `web` in\nthe main camoco configuration file (found at `~/.camoco.conf`). One need not \ninclude one at all, this will just be started with the default values (seen \nbelow). This will also trigger all available Camoco networks and GWAS datasets\nto be loaded in. To prevent this, one may specify the desired datasets. The \nfollowing is an annotated version of the default settings, showing all the\npotential configuration options:\n\n### Server Options\n```\nname: cob                   # The name of this server instance, must be unique for \n                            #      each instance, can be overridden by '-n' flag\nport: 50000                 # Port to which the server will be attached\nthreads: 8                  # How many individual threads the sever process may use\ntimeout: 500                # How long a thread maybe unresponsive before termination\n```\n\n### Datasets\n```\nnetworks:                   # Camoco networks that are to be loaded in the server.\n  - My_Network_1            #      If this is not included, all available Camoco\n  - My_Network_2            #      networks will be loaded.\ngwas:                       # GWAS datasets that will be loaded in the server. If\n  - My_GWAS_1               #      this is not included, all GWAS datasets that \n                            #      correspond to loaded networks will be loaded.\n```\n\n### Default Values\n```\ndefaults:                   # This is the dictionary containing all of the defaults\n                            #      for the options on the web site\n  logSpacing: True          # Spacing of genes in Polywas layout, log or true distance\n  visEnrich: True           # Only enrich genes visible on graph or all in table\n  fdrFilter: True           # Whether to use FDR to filter query results\n  nodeCutoff: 1             # How many edges a node must have to be visible\n  edgeCutoff: 3.0           # The cutoff for significance of edge scores\n  fdrCutoff: 0.35           # If the FDR Filter is used, the cutoff for being visible\n  windowSize: 50000         # Window size used in the query\n  flankLimit: 2             # Flank limit used in the query\n  visNeighbors: 25          # Default number of neighbors visible in custom network\n  nodeSize: 10              # Size of the nodes on the graph\n  pCutoff: 0.05             # P value cutoff for enrichment queries\n  minTerm: 5                # Minimum number of genes a GO term must have to be included\n  maxTerm: 300              # Maximum number of genes a GO term must have to be included\n```\n\n### Reference Links\nThis section allows for linking directly from genes to an external website for more\ninformation. This can be configured for each different reference genome (RefGen) used \nto build the included networks. If not included, the option won't appear. To configure\nthis,start by writing the name of the RefGen under the `refLinks` option, followed by\na colon and a space as seen below. Then you must go to the database you wish to use \nfor that RefGen, and search any gene. After finding this, copy the URL onto the line\nafter the name of the RefGen. Finally replace the name of the gene in the URL with \nthe string `{id}`. This allows the website to find where in the URL the gene name \ngoes, and replace it with any gene for that organism. The following example works for\nmaize, soybean, and medicago. Add or subtract species at will.\n```\nrefLinks:\n  Zm5bFGS: http://www.maizegdb.org/gene_center/gene/{id}\n  Gmax_a2_V1: https://www.soybase.org/sbt/search/search_results.php?category=FeatureName&version=Glyma2.0&search_term={id}\n  Mt_4.0: http://medicago.jcvi.org/cgi-bin/medicago/manatee/shared/ORF_infopage.cgi?db=mta4&user=access&password=access&identifier=locus&orf={id}\n```\n\nNotes\n-----\nIf you care to make this site accessible to the web, you can add a reverse proxy\nto Apache, allowing for access by using a normal URL. An example of how to do\nthis is provided here, but for more detailed documentation, see the \n[Apache docs](https://httpd.apache.org/docs/2.4/).\n```\n<VirtualHost *:80>\n       ProxyPass /cob http://127.0.0.1:50002\n       ProxyPassReverse /cob/ http://127.0.0.1:50002\n</VirtualHost *:80>\n```\n\nAnnotations\n-----------\nFDR results are now simply provided by the GWASData class in Camoco, thus to add \nthem to the site, simply initialize them for their respective reference genome \nor GWAS data set and they will appear. This method will be deprecated pending \nfuture direct inclusion of this functionality into the Camoco OverlapAnalysis class.\nStay tuned for future changes.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/LinkageIO/cob",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "camoco-cob",
    "platform": "",
    "project_url": "https://pypi.org/project/camoco-cob/",
    "release_url": "https://pypi.org/project/camoco-cob/0.9.2/",
    "requires_dist": [
      "gunicorn (>=19.6.0)",
      "flask (>=0.12)",
      "camoco"
    ],
    "requires_python": ">=3",
    "summary": "The Co-Expression Network Browser",
    "version": "0.9.2"
  },
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "01fe265448307465b9dc654c8f10f157",
          "sha256": "1020e1df853d663ac7bdc784e39d38901d9d69828151c789ea6b87bff47dcf18"
        },
        "downloads": -1,
        "filename": "camoco_cob-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01fe265448307465b9dc654c8f10f157",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 44676,
        "upload_time": "2018-01-08T02:06:03",
        "url": "https://files.pythonhosted.org/packages/88/72/038ebd6e7288cbaedacd8f3381bb86401abbcdb0254070ff60ffc253def4/camoco_cob-0.9.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "fdf2080fe9113116563e5742019ca23b",
          "sha256": "735a6eb972cafec127de1a0bb311bbcc5a5cf8d2a93890a7690e1faff0367e35"
        },
        "downloads": -1,
        "filename": "camoco-cob-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fdf2080fe9113116563e5742019ca23b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 36513,
        "upload_time": "2018-01-08T02:06:04",
        "url": "https://files.pythonhosted.org/packages/12/f0/7d1ce49d03c65229d1d60a4fb85d675819ea7253820a7252ffdd3db3d3f5/camoco-cob-0.9.0.tar.gz"
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b4cea3a64d01cd8d337e34d9ea183dae",
          "sha256": "8ddba519b308d692ea8cb872a307e8d8dfa10c4a38401d117a6edba6583808cf"
        },
        "downloads": -1,
        "filename": "camoco_cob-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4cea3a64d01cd8d337e34d9ea183dae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 50836,
        "upload_time": "2018-01-08T02:14:51",
        "url": "https://files.pythonhosted.org/packages/1f/9d/f48abfd20b9da263479fd5e5f4848315966817eec87a07e891f3f52eeb3e/camoco_cob-0.9.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ee44160d344c995d626c448f59c338c6",
          "sha256": "eaaa5c8f4efb0f79c1a8d090b26127dd87fe07b4d1b55298484ec379143bb98c"
        },
        "downloads": -1,
        "filename": "camoco-cob-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ee44160d344c995d626c448f59c338c6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 39841,
        "upload_time": "2018-01-08T02:15:20",
        "url": "https://files.pythonhosted.org/packages/2f/69/872127d5593ce8c6b1d082dde11a94f3236b7914d6a1a93222c25ae5fe19/camoco-cob-0.9.1.tar.gz"
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b7892b20cadc9dc1fa2856544fc1f062",
          "sha256": "d1926fbfae92d5111e19cc811c15c4be5ca5fff6730ba55275e15abef71bb704"
        },
        "downloads": -1,
        "filename": "camoco_cob-0.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7892b20cadc9dc1fa2856544fc1f062",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 50818,
        "upload_time": "2018-01-08T02:27:52",
        "url": "https://files.pythonhosted.org/packages/58/41/6856922b32db84a93589f987bac91e2b0d7f86c5b744bcada16f918f5603/camoco_cob-0.9.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b74e9bccda1b631f2cc0f6f45a9ba6cd",
          "sha256": "add770ab9442e124f2c20462cda94f41a46431e694fdda34d0f64938e1ed864c"
        },
        "downloads": -1,
        "filename": "camoco-cob-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b74e9bccda1b631f2cc0f6f45a9ba6cd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40054,
        "upload_time": "2018-01-08T02:27:53",
        "url": "https://files.pythonhosted.org/packages/6c/9d/d74ee5eaabc14a702814f0072d7986d0798a30961d60a6c657903bef0dd6/camoco-cob-0.9.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b7892b20cadc9dc1fa2856544fc1f062",
        "sha256": "d1926fbfae92d5111e19cc811c15c4be5ca5fff6730ba55275e15abef71bb704"
      },
      "downloads": -1,
      "filename": "camoco_cob-0.9.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b7892b20cadc9dc1fa2856544fc1f062",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 50818,
      "upload_time": "2018-01-08T02:27:52",
      "url": "https://files.pythonhosted.org/packages/58/41/6856922b32db84a93589f987bac91e2b0d7f86c5b744bcada16f918f5603/camoco_cob-0.9.2-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "b74e9bccda1b631f2cc0f6f45a9ba6cd",
        "sha256": "add770ab9442e124f2c20462cda94f41a46431e694fdda34d0f64938e1ed864c"
      },
      "downloads": -1,
      "filename": "camoco-cob-0.9.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b74e9bccda1b631f2cc0f6f45a9ba6cd",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 40054,
      "upload_time": "2018-01-08T02:27:53",
      "url": "https://files.pythonhosted.org/packages/6c/9d/d74ee5eaabc14a702814f0072d7986d0798a30961d60a6c657903bef0dd6/camoco-cob-0.9.2.tar.gz"
    }
  ]
}