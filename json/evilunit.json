{
  "info": {
    "author": "podhmo",
    "author_email": "UNKNOWN",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "evilunit\n========================================\n\nfeatures\n\n- shortcuts\n- parameterized\n- nested\n\nshortcuts\n----------------------------------------\n\nthis is tiresome.\n\n.. code:: python\n\n    import unittest\n\n    class Tests(unittest.TestCase):\n        def _getTarget(self):\n            from foo.bar import boo\n            return boo\n\n        def _callFUT(self, *args, **kwargs):\n            self._getTarget()(*args, **kwargs)\n\n        def test_it(self):\n            params = object()\n            result = self._callFUT(params)\n            self.assertEqual(result, params)\n\n\nshortcuts decorator\n\n- test_target -- adding _getTarget(), _makeOne() methods\n- test_function  -- adding _getTarget(), _callFUT() methods\n\n\n.. code:: python\n\n    import unittest\n    from evilunit import test_function\n\n    @test_function(\"foo.bar:boo\")\n    class Tests(unittest.TestCase):\n        def test_it(self):\n            params = object()\n            result = self._callFUT(params)\n            self.assertEqual(result, params)\n\n\n\nparameterized\n----------------------------------------\n\n.. code:: python\n\n    import unittest\n    from evilunit import NestedTest, nested_test_compile\n\n    class Tests(unittest.TestCase):\n        def _callFUT(self, x, y):\n            return x + y\n\n        @paramaterized([\n            (1, 2, 3),\n            (1, 1, 2),\n            (1, 0, 1),\n            (2, 3, 5),\n            (4, 4, 8)\n        ])\n        def _test_add(self, x, y, expected):\n            \"\"\"adding number\"\"\"\n            result = self._callFUT(x, y)\n            self.assertEqual(result, expected)\n\n        @classmethod\n        def tearDownClass(cls):\n            count_of_test_method = sum(1 for k, v in cls.__dict__.items() if k.startswith(\"test_\") and callable(v))\n            assert count_of_test_method == 5\n\n\nnested\n----------------------------------------\n\n.. code:: python\n\n    import unittest\n    from evilunit import NestedTest, nested_test_compile\n\n\n    L = []\n\n\n    @nested_test_compile\n    class ToplevelTest(NestedTest):\n        @classmethod\n        def setUpClass(cls):\n            assert issubclass(cls, unittest.TestCase)\n            L.append(\"t1\")\n\n        def setUp(self):\n            assert isinstance(self, unittest.TestCase)\n            L.append(\"t2\")\n\n        def test_it(self):\n            assert isinstance(self, unittest.TestCase)\n            L.append(\"t3\")\n            self.assertEqual(L, [\"t1\", \"t2\", \"t3\"])\n\n        def tearDown(self):\n            assert isinstance(self, unittest.TestCase)\n            global L\n            L = []\n\n        class Child(NestedTest):\n            @classmethod\n            def setUpClass(cls):\n                assert issubclass(cls, unittest.TestCase)\n                L.append(\"m1\")\n\n            def setUp(self):\n                assert isinstance(self, unittest.TestCase)\n                L.append(\"m2\")\n\n            def test_it(self):\n                assert isinstance(self, unittest.TestCase)\n                L.append(\"m3\")\n                self.assertEqual(L, [\"t1\", \"m1\", \"t2\", \"m2\", \"m3\"])\n\n            class GrandChild(NestedTest):\n                @classmethod\n                def setUpClass(cls):\n                    assert issubclass(cls, unittest.TestCase)\n                    L.append(\"n1\")\n\n                def setUp(self):\n                    assert isinstance(self, unittest.TestCase)\n                    L.append(\"n2\")\n\n                def test_it(self):\n                    assert isinstance(self, unittest.TestCase)\n                    L.append(\"n3\")\n                    self.assertEqual(L, [\"t1\", \"m1\", \"n1\", \"t2\", \"m2\", \"n2\", \"n3\"])\n\n        class Child2(NestedTest):\n            @classmethod\n            def setUpClass(cls):\n                assert issubclass(cls, unittest.TestCase)\n                L.append(\"o1\")\n\n            def setUp(self):\n                assert isinstance(self, unittest.TestCase)\n                L.append(\"o2\")\n\n            def test_it(self):\n                assert isinstance(self, unittest.TestCase)\n                L.append(\"o3\")\n                self.assertEqual(L, [\"t1\", \"o1\", \"t2\", \"o2\", \"o3\"])\n\n\n0.1.1:\n- fix if fixture is undefined in child class parent class's method is not called.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/podhmo/evilunit",
    "keywords": "unittest,test",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "evilunit",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/evilunit/",
    "release_url": "https://pypi.org/project/evilunit/0.1.3/",
    "requires_python": null,
    "summary": "evil parts of unittest(python3 only)",
    "version": "0.1.3"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dfdf0096b5d0de9425ca7489b7989a61",
          "sha256": "33139d2caec29d12f191db73a57f16f9a63760885aba67459e0dc3bddf7904b9"
        },
        "downloads": 1648,
        "filename": "evilunit-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dfdf0096b5d0de9425ca7489b7989a61",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5224,
        "upload_time": "2014-12-06T12:48:08",
        "url": "https://files.pythonhosted.org/packages/4b/a8/03d57a78fad49adea4c960f7f69a3691ded03b56d29b31b870532f361d4a/evilunit-0.1.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c3941be93c905e060fbedac1811aeeff",
          "sha256": "af092de7555bb1f301569b9e1b853594acb07bd9da0a7c0014ccefee517458d5"
        },
        "downloads": 1264,
        "filename": "evilunit-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c3941be93c905e060fbedac1811aeeff",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5277,
        "upload_time": "2014-12-08T22:21:01",
        "url": "https://files.pythonhosted.org/packages/8f/bf/5c98bb711007b739be37cdf8423acf83499928c1740b86117c6482c452c2/evilunit-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "493fec05e9d786953d4d39339f04a669",
          "sha256": "d9d8f76141d68aada174d8299afea4b0512a0f8fe4eb5301eb9af5280a5e58f4"
        },
        "downloads": 1068,
        "filename": "evilunit-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "493fec05e9d786953d4d39339f04a669",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5286,
        "upload_time": "2015-02-11T13:50:42",
        "url": "https://files.pythonhosted.org/packages/8a/aa/7ef036f7a18df7cff8428e092bf06f5c30e24e0f805215b815112fd9adc2/evilunit-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b7ed43ebb57d5a463d4609089c3cb547",
          "sha256": "4ffa01173f5ad1022ee379bfa7efd45165ad04969361c745bb0f153ba1b7dbf3"
        },
        "downloads": 1245,
        "filename": "evilunit-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b7ed43ebb57d5a463d4609089c3cb547",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5284,
        "upload_time": "2015-03-08T09:31:02",
        "url": "https://files.pythonhosted.org/packages/3d/64/44a8c321f1c79875f8f119f558ad97366ad2ce51d3feec6198a7b3e2e153/evilunit-0.1.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b7ed43ebb57d5a463d4609089c3cb547",
        "sha256": "4ffa01173f5ad1022ee379bfa7efd45165ad04969361c745bb0f153ba1b7dbf3"
      },
      "downloads": 1245,
      "filename": "evilunit-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "b7ed43ebb57d5a463d4609089c3cb547",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5284,
      "upload_time": "2015-03-08T09:31:02",
      "url": "https://files.pythonhosted.org/packages/3d/64/44a8c321f1c79875f8f119f558ad97366ad2ce51d3feec6198a7b3e2e153/evilunit-0.1.3.tar.gz"
    }
  ]
}