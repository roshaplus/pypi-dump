{
  "info": {
    "author": "Marcus McCurdy",
    "author_email": "marcus.mccurdy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\n==========================\nKeras Consistency Callback\n==========================\n\nA Keras callback that calculates your model's consistency during training at\neach epoch. The callback prints the consistency and also adds the consistency at\nthe end of each epoch to the training history under the ``consistency`` key.\n\nUsage\n-----\n\nHere is a usage example::\n\n    import pandas as pd\n    from numeraicb import Consistency\n    from keras.models import Sequential\n    from keras.layers.core import Dense\n\n    train = pd.read_csv('numerai_training_data.csv')\n    tourn = pd.read_csv('numerai_tournament_data.csv')\n\n    validation = tourn[tourn.data_type == 'validation']\n\n    features = ['feature{}'.format(i) for i in range(1, 51)]\n\n    X = train[features].values\n    Y = train.target.values\n\n    X_validation = validation[features].values\n    Y_validation = validation.target.values\n\n    model = Sequential()\n    model.add(Dense(30, kernel_initializer='uniform', input_dim=X.shape[1], activation='relu'))\n    model.add(Dense(1, activation='sigmoid'))\n    model.compile(optimizer='adamax', loss='binary_crossentropy')\n\n    cb = Consistency(tourn)\n\n    # Now your models consistency will be printed at each epoch\n    history = model.fit(X, Y, callbacks=[cb], validation_data=(X_validation, Y_validation))\n\n    # Consistency is stored in the history as well\n    for epoch, consistency in enumerate(history.history['consistency']):\n        print('consistency at epoch {}: {:.2%}'.format(epoch, consistency))\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/volker48/numeraicb",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "numeraicb",
    "platform": "",
    "project_url": "https://pypi.org/project/numeraicb/",
    "release_url": "https://pypi.org/project/numeraicb/1.0.0/",
    "requires_dist": [
      "scikit-learn (>=0.18)",
      "numpy (>=1.9.1)",
      "pandas (>=0.18.1)",
      "Keras (>=2.0.0)"
    ],
    "requires_python": "",
    "summary": "Keras Callback to track Numerai consistency",
    "version": "1.0.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2ef37bf3abbf68a6c1051a3b6b654216",
          "sha256": "893e8370c247a6d0c9c646fda229be8853d3e507b816457eca3e6059e28e6e44"
        },
        "downloads": -1,
        "filename": "numeraicb-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ef37bf3abbf68a6c1051a3b6b654216",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 4159,
        "upload_time": "2017-11-11T01:35:55",
        "url": "https://files.pythonhosted.org/packages/64/02/4caacab2077957ad291ee361306e881cdb6258a0c70ad2bdc85c813e24ce/numeraicb-1.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f1c549842bb9f6b97d578c5146457453",
          "sha256": "8e70ad04b9c0c754621b2028972d9fc02ce9dfeab0fce20d94462b1c263bb051"
        },
        "downloads": -1,
        "filename": "numeraicb-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f1c549842bb9f6b97d578c5146457453",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15464,
        "upload_time": "2017-11-11T01:35:56",
        "url": "https://files.pythonhosted.org/packages/08/0b/7c9e06ac0bf17bdba2a3d2a5b238a7b0fe2ecd4e72e1f7b7b7a8feb440a3/numeraicb-1.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2ef37bf3abbf68a6c1051a3b6b654216",
        "sha256": "893e8370c247a6d0c9c646fda229be8853d3e507b816457eca3e6059e28e6e44"
      },
      "downloads": -1,
      "filename": "numeraicb-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2ef37bf3abbf68a6c1051a3b6b654216",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 4159,
      "upload_time": "2017-11-11T01:35:55",
      "url": "https://files.pythonhosted.org/packages/64/02/4caacab2077957ad291ee361306e881cdb6258a0c70ad2bdc85c813e24ce/numeraicb-1.0.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "f1c549842bb9f6b97d578c5146457453",
        "sha256": "8e70ad04b9c0c754621b2028972d9fc02ce9dfeab0fce20d94462b1c263bb051"
      },
      "downloads": -1,
      "filename": "numeraicb-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f1c549842bb9f6b97d578c5146457453",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15464,
      "upload_time": "2017-11-11T01:35:56",
      "url": "https://files.pythonhosted.org/packages/08/0b/7c9e06ac0bf17bdba2a3d2a5b238a7b0fe2ecd4e72e1f7b7b7a8feb440a3/numeraicb-1.0.0.tar.gz"
    }
  ]
}