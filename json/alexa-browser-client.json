{
  "info": {
    "author": "Richard Tier",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "alexa-browser-client\n====================\n\nAlexa client in your browser. Django app.\n\nTalk to Alexa from your desktop, phone, or tablet browser.\n\nDependencies\n------------\n\nThis project depends on: -\n`django-channels <https://channels.readthedocs.io/en/stable/>`__. -\n`Snowboy <https://github.com/Kitt-AI/snowboy#compile-a-python-wrapper>`__\n\nInstall and configure those first.\n\nSnowboy\n~~~~~~~\n\n`Snowboy <https://github.com/Kitt-AI/snowboy#compile-a-python-wrapper>`__\ndetects when the wakeword \"Alexa\" is uttered.\n\nYou must compile\n`Snowboy <https://github.com/Kitt-AI/snowboy#compile-a-python-wrapper>`__\nmanually. Copy the compiled ``snowboy`` folder to the top level of you\nproject. By default, the folder structure should be:\n\n::\n\n    .\n    \u251c\u2500\u2500 ...\n    \u251c\u2500\u2500 snowboy\n    |   \u251c\u2500\u2500 snowboy-detect-swig.cc\n    |   \u251c\u2500\u2500 snowboydetect.py\n    |   \u2514\u2500\u2500 resources\n    |       \u251c\u2500\u2500 alexa.umdl\n    |       \u2514\u2500\u2500 common.res\n    \u2514\u2500\u2500 ...\n\nIf the default folder structure does not suit your needs you can\n`customize the wakeword detector <#wakeword>`__.\n\nInstallation\n------------\n\n::\n\n    pip install alexa_browser_client\n\nAdd ``alexa_browser_client`` to your settings ``INSTALLED_APPS``.\n\nRouting and urls\n~~~~~~~~~~~~~~~~\n\nAdd ``url(r'^', include('alexa_browser_client.config.urls')),`` to\n``urls.py`` ``url_patterns``.\n\nAdd ``include('alexa_browser_client.config.routing.channel_routing')``\nto your ``routing.py`` ``channel_routing``.\n\nAuthentication\n--------------\n\nThis app uses Alexa Voice Service. To use AVS you must first have a\n`developer account <http://developer.amazon.com>`__. Then register your\nproduct\n`here <https://developer.amazon.com/avs/home.html#/avs/products/new>`__.\nChoose \"Application\" under \"Is your product an app or a device\"?\n\nEnsure you update your settings.py:\n\n+-------------------------------------+--------------------------------------+\n| Setting                             | Notes                                |\n+=====================================+======================================+\n| ``ALEXA_BROWSER_CLIENT_AVS_CLIENT_I | Retrieve by clicking on the your     |\n| D``                                 | product listed                       |\n|                                     | `here <https://developer.amazon.com/ |\n|                                     | avs/home.html#/avs/home>`__          |\n+-------------------------------------+--------------------------------------+\n| ``ALEXA_BROWSER_CLIENT_AVS_CLIENT_S | Retrieve by clicking on the your     |\n| ECRET``                             | product listed                       |\n|                                     | `here <https://developer.amazon.com/ |\n|                                     | avs/home.html#/avs/home>`__          |\n+-------------------------------------+--------------------------------------+\n| ``ALEXA_BROWSER_CLIENT_AVS_REFRESH_ | You must generate this. `See         |\n| TOKEN``                             | here <#refresh-token>`__             |\n+-------------------------------------+--------------------------------------+\n| ``ALEXA_BROWSER_CLIENT_AVS_DEVICE_T | Retrieve by reading \"Product ID\"     |\n| YPE_ID``                            | `here <https://developer.amazon.com/ |\n|                                     | avs/home.html#/avs/home>`__          |\n+-------------------------------------+--------------------------------------+\n\nRefresh token\n~~~~~~~~~~~~~\n\nYou will need to login to Amazon via a web browser to get your refresh\ntoken.\n\nTo enable this first go\n`here <https://developer.amazon.com/avs/home.html#/avs/home>`__ and\nclick on your product to set some security settings under\n``Security Profile``:\n\n+-----------------------+------------------------------------+\n| setting               | value                              |\n+=======================+====================================+\n| Allowed Origins       | https://localhost:9000             |\n+-----------------------+------------------------------------+\n| Allowed Return URLs   | https://localhost:9000/callback/   |\n+-----------------------+------------------------------------+\n\nThen run:\n\n.. code:: sh\n\n    ./manage.py create_amazon_refresh_token\n\nFollow the on-screen instructions shown at ``http://localhost:9000`` in\nyour web browser. On completion Amazon will return your\n``refresh_token``. Set your\\ ``ALEXA_BROWSER_CLIENT_AVS_REFRESH_TOKEN``\nsetting accordingly.\n\nUsage\n-----\n\nOnce you have all the settings configured:\n\n-  Run django: ``./manage.py runserver``\n-  Go to ``http://localhost:8000/alexa-browser-client/`` and start\n   talking to Alexa.\n\nCustomization\n-------------\n\nWakeword\n~~~~~~~~\n\nThe default wakeword is \"Alexa\". You can change this by customizing the\nlifecycle's ``audio_detector_class``:\n\n.. code:: py\n\n    # my_project/custom.py\n\n    import alexa_browser_client\n    import command_lifecycle\n\n\n    class CustomAudioDetector(command_lifecycle.wakeword.SnowboyWakewordDetector):\n        wakeword_library_import_path = 'dotted.import.path.to.wakeword.Detector'\n        resource_file = b'path/to/resource_file.res'\n        decoder_model = b'path/to/model_file.umdl'\n\n\n    class CustomAudioLifecycle(alexa_browser_client.AudioLifecycle):\n        audio_detector_class = CustomAudioDetector\n\nThen in your ``settings.py``, change ``settings.AUDIO_LIFECYCLE_CLASS``\nto the new custom audio lifecycle:\n\n.. code:: py\n\n    ALEXA_BROWSER_CLIENT_LIFECYCLE_CLASS = 'my_project.custom.CustomAudioLifecycle'\n\nOther projects\n--------------\n\nThis project uses `Voice Command\nLifecycle <https://github.com/richtier/voice-command-lifecycle>`__ and\n`Alexa Voice Service\nClient <https://github.com/richtier/alexa-voice-service-client>`__.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/richtier/alexa-browser-client",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alexa-browser-client",
    "platform": "",
    "project_url": "https://pypi.org/project/alexa-browser-client/",
    "release_url": "https://pypi.org/project/alexa-browser-client/0.3.1/",
    "requires_dist": [
      "setuptools-git (==1.2)",
      "command-lifecycle (==0.4.1)",
      "channels (>=1.1.6)",
      "avs-client (==0.5.0)",
      "Django (>=1.11.1)"
    ],
    "requires_python": "",
    "summary": "Alexa client in your browser. Django app.",
    "version": "0.3.1"
  },
  "releases": {
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f5e585cbb07d69a458a344a6755efe53",
          "sha256": "324cbc233f2cc068cbca6658e182430e3de830bcfa7e381b856b553e59c37f5f"
        },
        "downloads": 0,
        "filename": "alexa_browser_client-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5e585cbb07d69a458a344a6755efe53",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 11807,
        "upload_time": "2017-08-28T22:32:32",
        "url": "https://files.pythonhosted.org/packages/13/b7/5b6fa81b62316418ae9266b2c15eac2b5d722aa758df3d1e6e7323c4dc42/alexa_browser_client-0.3.1-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f5e585cbb07d69a458a344a6755efe53",
        "sha256": "324cbc233f2cc068cbca6658e182430e3de830bcfa7e381b856b553e59c37f5f"
      },
      "downloads": 0,
      "filename": "alexa_browser_client-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f5e585cbb07d69a458a344a6755efe53",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 11807,
      "upload_time": "2017-08-28T22:32:32",
      "url": "https://files.pythonhosted.org/packages/13/b7/5b6fa81b62316418ae9266b2c15eac2b5d722aa758df3d1e6e7323c4dc42/alexa_browser_client-0.3.1-py3-none-any.whl"
    }
  ]
}