{
  "info": {
    "author": "Satellogic SA",
    "author_email": "oss@satellogic.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "Orbit Predictor\n===============\n\nOrbit Predictor is a Python library to propagate orbits of Earth-orbiting objects (satellites, ISS, \nSanta Claus, etc) using `TLE (Two-Line Elements set) <https://en.wikipedia.org/wiki/Two-line_element_set>`_\n\nAl the hard work is done by The Brandon Rhodes implementation of \n`SGP4 <https://github.com/brandon-rhodes/python-sgp4>`_. \n\nWe can say *Orbit predictor* is kind of a \"wrapper\" for the python implementation of SGP4\n\nTo install it\n-------------\n\nYou can install orbit-predictor from pypi::\n\n    pip install orbit-predictor # WIP\n\nUse example\n-----------\n\nWhen will be the ISS over Argentina?\n\n:: \n\n    In [1]: from orbit_predictor.sources import EtcTLESource\n\n    In [2]: from orbit_predictor.locations import ARG\n\n    In [3]: source = EtcTLESource(filename=\"examples/iss.tle\")\n\n    In [4]: predictor = source.get_predictor(\"ISS\")\n\n    In [5]: predictor.get_next_pass(ARG)\n    Out[5]: <PredictedPass ISS over ARG on 2017-11-10 22:48:10.607212>\n\n    In [6]: predicted_pass = _\n\n    In [7]: position = predictor.get_position(predicted_pass.aos)\n\n    In [8]: ARG.is_visible(position)  # Can I see the ISS from this location?\n    Out[8]: True\n\n    In [9]: import datetime\n\n    In [10]: position_delta = predictor.get_position(predicted_pass.los + datetime.timedelta(minutes=20))\n\n    In [11]: ARG.is_visible(position_delta)\n    Out[11]: False\n\n    In [12]: tomorrow = datetime.datetime.utcnow() + datetime.timedelta(days=1)\n\n    In [13]: predictor.get_next_pass(ARG, tomorrow, max_elevation_gt=20)\n    Out[13]: <PredictedPass ISS over ARG on 2017-11-11 23:31:36.878827>\n\n\n`WSTLESource` needs the tle.satellogic.com service to be working. We are doing changes to have it public available.\n\n\nCurrently you have available these sources\n------------------------------------------\n\n- Memorytlesource: in memory storage.\n- EtcTLESource: a uniq TLE is stored in `/etc/latest_tle`\n- WSTLESource: It source is using the `TLE API. <http://tle.satellogics.com/api/tle/>`_\n\n\nAbout HighAccuracyTLEPredictor \n------------------------------\n\nThe default 'predictor' code is tunned to low CPU usage. (IE: a Satellite computer). The \nerror estimation is ~20 seconds. If you need more than that you can use the *HighAccuracyTLEPredictor*  \npassing `precise=True` to `get_predictor()`. \n\n\nHow to contribute\n-----------------\n\n- Write pep8 complaint code. \n- Wrap the code on 100 collumns.\n- Always use a branch for each feature and Merge Proposals.\n- Always run the tests before to push. (test implies pep8 validation)\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/satellogic/orbit-predictor",
    "keywords": "orbit,sgp4,TLE,space,satellites",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "orbit-predictor",
    "platform": "",
    "project_url": "https://pypi.org/project/orbit-predictor/",
    "release_url": "https://pypi.org/project/orbit-predictor/1.8.5/",
    "requires_dist": [
      "mock; extra == 'dev'",
      "logassert; extra == 'dev'",
      "hypothesis[datetime]; extra == 'dev'",
      "hypothesis; extra == 'dev'",
      "flake8; extra == 'dev'",
      "sgp4",
      "requests"
    ],
    "requires_python": "",
    "summary": "Python library to propagate satellite orbits.",
    "version": "1.8.5"
  },
  "releases": {
    "1.8.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4273f02a536cc242e6edb974e78f199f",
          "sha256": "60a8d417d9f17ab847196cbe6c19b0ce82b54a898edf550ebccd50dff0222da4"
        },
        "downloads": -1,
        "filename": "orbit_predictor-1.8.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4273f02a536cc242e6edb974e78f199f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 25176,
        "upload_time": "2017-11-13T16:50:15",
        "url": "https://files.pythonhosted.org/packages/c4/f9/9d976500bfd1a91896493be7a6568d73dad4e8312049698e321079081680/orbit_predictor-1.8.4-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "38bd82d90e0d838b0812e17816da7775",
          "sha256": "7422f90c787ea4f9517698b4bc59fa3cc0f72f1a94310078dfb6fce9536a8d78"
        },
        "downloads": -1,
        "filename": "orbit-predictor-1.8.4.tar.gz",
        "has_sig": false,
        "md5_digest": "38bd82d90e0d838b0812e17816da7775",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17576,
        "upload_time": "2017-11-13T16:50:21",
        "url": "https://files.pythonhosted.org/packages/b0/92/130850bdb7718ccb67244b123d3c864a80e82200b759dc02abff6eb852fc/orbit-predictor-1.8.4.tar.gz"
      }
    ],
    "1.8.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "86248c23a3c51dbf4be5f4562b908430",
          "sha256": "a66f2deffc9b410288746b41c004442264d886ba8dd73fcd58ee6aad2e45558c"
        },
        "downloads": -1,
        "filename": "orbit_predictor-1.8.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86248c23a3c51dbf4be5f4562b908430",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 25014,
        "upload_time": "2017-11-13T16:50:18",
        "url": "https://files.pythonhosted.org/packages/2e/ac/5680250061a3d3fc08f11ac9cecab8e4bd55a0a6c2cca14d163c6c7fe4b4/orbit_predictor-1.8.5-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0232ec759dfa119e59142c9fcc36f159",
          "sha256": "aa6ede33839e99b32716c19a849995ffacb36263e753207929ee29aa6ad88cfd"
        },
        "downloads": -1,
        "filename": "orbit-predictor-1.8.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0232ec759dfa119e59142c9fcc36f159",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17423,
        "upload_time": "2017-11-13T16:50:24",
        "url": "https://files.pythonhosted.org/packages/43/b4/1607b4f39c7b6bf6a58d350c1822cb55961d536065227addf71b2e38a85b/orbit-predictor-1.8.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "86248c23a3c51dbf4be5f4562b908430",
        "sha256": "a66f2deffc9b410288746b41c004442264d886ba8dd73fcd58ee6aad2e45558c"
      },
      "downloads": -1,
      "filename": "orbit_predictor-1.8.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "86248c23a3c51dbf4be5f4562b908430",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 25014,
      "upload_time": "2017-11-13T16:50:18",
      "url": "https://files.pythonhosted.org/packages/2e/ac/5680250061a3d3fc08f11ac9cecab8e4bd55a0a6c2cca14d163c6c7fe4b4/orbit_predictor-1.8.5-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "0232ec759dfa119e59142c9fcc36f159",
        "sha256": "aa6ede33839e99b32716c19a849995ffacb36263e753207929ee29aa6ad88cfd"
      },
      "downloads": -1,
      "filename": "orbit-predictor-1.8.5.tar.gz",
      "has_sig": false,
      "md5_digest": "0232ec759dfa119e59142c9fcc36f159",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 17423,
      "upload_time": "2017-11-13T16:50:24",
      "url": "https://files.pythonhosted.org/packages/43/b4/1607b4f39c7b6bf6a58d350c1822cb55961d536065227addf71b2e38a85b/orbit-predictor-1.8.5.tar.gz"
    }
  ]
}