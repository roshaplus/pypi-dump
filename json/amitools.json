{
  "info": {
    "author": "Christian Vogelgsang",
    "author_email": "chris@vogelgsang.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Programming Language :: Python",
      "Topic :: System :: Emulators"
    ],
    "description": "# amitools - various AmigaOS tools for other platforms\n\n - written by Christian Vogelgsang <chris@vogelgsang.org>\n - under the GNU Public License V2\n\n## Introduction\n\namitools is a collection of (currently python 2.x only) tools that I've\nwritten to work with Amiga OS binaries and files on Mac OS X. But they\nshould work on all other platforms supporting Pythons, too.\n\nI focus with my tools on classic Amiga setups, i.e. a 680x0 based system with\nAmiga OS 1.x - 3.x running on it. However, this is an open project, so you can\nprovide other Amiga support, too.\n\nThe tools are mostly developer-oriented, so a background in Amiga programming\nwill be very helpful.\n\n## Prerequisites\n\n - Python 2.7.x is currently supported\n - pip\n\n### Optional Packages\n\n - If you want to rebuild the C extension or work on the Git repo then you need:\n   - [Cython][1] >= 0.21\n - Optional Package:\n   - [lhafile - FS Edition][2] (Optional: required to use lha file scanner)\n\n### Install pip\n\n - First make sure to have the Python package installer ```pip```:\n\n#### macOS\n\n - On macOS using [MacPorts][3] (Tool is called ```pip-2.7``` here):\n```\nsudo port install py27-pip\nsudo pip-2.7 install cython\n```\n\n#### Linux/Ubuntu\n\n - On Linux Ubuntu use the provided packages ```python-pip```\n  ```\nsudo apt-get install python-pip\nsudo pip install cython\n```\n\n#### Windows\n\n - On Windows with [MSYS2][4] (use x86_64 version if possible):\n   - Install with exe installer\n   - Initial update is done with: (Open shell first)\n```\npacman -Sy\npacman --needed -S bash pacman msys2-runtime\n```\n   - Now close shell and re-open a new dev shell (```MinGW-w64 Win64 Shell```)\n```\npacman -Su\npacman -S mingw-w64-x86_64-python2-pip mingw-w64-x86_64-gcc git make\n```\n\n[1]: http://cython.org\n[2]: https://github.com/FrodeSolheim/lhafile\n[3]: https://www.macports.org\n[4]: https://github.com/msys2/msys2/wiki\n\n## Installation\n\n### The Easy Way\n\n```\npip install amitools\n```\n\nNote: requires a host C compiler to compile the extension.\n\n### Developers\n\n - Clone the Git repo: [amitools@git](https://github.com/cnvogelg/amitools)\n\n - You have multiple variants to install the tools with Python's `setuptools`:\n - **Global Install** is available for all users of your system and needs root privileges\n```\nsudo python setup.py install\n```\n - **User Install** is available for your user only but does not require special privileges\n```\npython setup.py install --user\n```\n - **Developer Setup** only links this code into your installation and allows\n   you to change/develop the code and test it immediately. (I prefer user install here)\n```\npython setup.py develop --user\n```\n - **Run In Place** allows you to run the binaries directly from the `bin` directory\n   without any installation. You need `make` only to build the native library\n   of vamos:\n```\npython setup.py build_ext -i\n```\nor simply\n```\nmake\n```\n\n## Contents\n\n### Tools\n\n  - [vamos](doc/vamos.md) **V)irtual AM)iga OS**\n\n    vamos allows you to run command line (CLI) Amiga programs on your host\n    Mac or PC. vamos is an API level Amiga OS Emulator that replaces exec\n    and dos calls with its own implementation and maps all file access to\n    your local file system.\n\n  - [xdftool](doc/xdftool.txt)\n\n    Create and modify ADF or HDF disk image files.\n\n  - [xdfscan](doc/xdfscan.txt)\n\n    Scan directory trees for ADF or HDF disk image files and verify the contents.\n\n  - [rdbtool](doc/rdbtool.txt)\n\n    Create or modify disk images with Rigid Disk Block (RDB)\n\n  - [romtool](doc/romtool.md)\n\n    A tool to inspect, dissect, and build Amiga Kickstart ROM images to be\n    used with emulators, run with soft kickers or burned into flash ROMs.\n\n  - hunktool\n\n    The hunktool uses amitools' hunk library to load a hunk-based amiga\n    binary. Currently, its main purpose is to display the contents of the\n    files in various formats.\n\n    You can load hunk-based binaries, libraries, and object files. Even\n    overlayed binary files are supporte.\n\n  - typetool\n\n    This little tool is a companion for vamos. It allows you to dump and get\n    further information on the API C structure of AmigaOS used in vamos.\n\n  - fdtool\n\n    This tool reads the fd (function description) files Commodore supplied for\n    all of their libraries and dumps their contents in different formats\n    including a code structure used in vamos.\n\n    You can query functions and find their jump table offset.\n\n\n### Libraries\n\n  - Hunk library ```amitools.binfmt.hunk```\n\n    This library allows to read Amiga OS loadSeg()able binaries and represent\n    them in a python structure. You could query all items found there,\n    retrieve the code, data, and bss segments and even relocate them to target\n    addresses\n\n  - ELF library ```amitools.binfmt.elf```\n\n    This library allows to read a subset of the ELF format mainly used in\n    AROS m68k.\n\n  - .fd File Parser ```amitools.fd```\n\n    Parse function descriptions shipped by Commodore to describe the Amiga APIs\n\n  - OFS and FFS File System Tools ```amitools.fs```\n\n    Create or modify Amiga's OFS and FFS file system structures\n\n  - File Scanners ```amitools.scan```\n\n    I've written some scanners that walk through file trees and retrieve the\n    file data for further processing. I support file trees on the file system,\n    in lha archives or in adf/hdf disk images",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/cnvogelg/amitools",
    "keywords": "",
    "license": "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "amitools",
    "platform": "",
    "project_url": "https://pypi.org/project/amitools/",
    "release_url": "https://pypi.org/project/amitools/0.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A package to support development with classic Amiga m68k systems",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "55552f2885390b39eb07a055c8a0fa31",
          "sha256": "09a1f65b159043a08d34f3ccd57e8851849605a17648703c0f83649c751defd4"
        },
        "downloads": 0,
        "filename": "amitools-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "55552f2885390b39eb07a055c8a0fa31",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 478293,
        "upload_time": "2017-08-03T18:29:55",
        "url": "https://files.pythonhosted.org/packages/3b/f5/c486d4c4540e1f01fb1dd93c372fbd2c110b06207cdd3868fa64a9022f23/amitools-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "55552f2885390b39eb07a055c8a0fa31",
        "sha256": "09a1f65b159043a08d34f3ccd57e8851849605a17648703c0f83649c751defd4"
      },
      "downloads": 0,
      "filename": "amitools-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "55552f2885390b39eb07a055c8a0fa31",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 478293,
      "upload_time": "2017-08-03T18:29:55",
      "url": "https://files.pythonhosted.org/packages/3b/f5/c486d4c4540e1f01fb1dd93c372fbd2c110b06207cdd3868fa64a9022f23/amitools-0.1.0.tar.gz"
    }
  ]
}