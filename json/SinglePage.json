{
  "info": {
    "author": "Taylor lee (chinese)",
    "author_email": "Tank357@icloud.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Flask",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Server"
    ],
    "description": "# Document for SingePage\n[GitHub](https://github.com/TaylorHere/SinglePage)\nSingePage \u662f\u4e00\u4e2a\u57fa\u4e8eflask\u7684python RESTful \u6846\u67b6\n\n\u6e90\u4ee3\u7801\u5f88\u7b80\u5355\uff0c\u5bb9\u6613\u4fee\u6539\u4e0e\u6269\u5c55\n\n\u4f7f\u7528\u7b80\u5355\uff0c\u63d0\u4f9bGeneralView\uff0c\u5b8c\u5168\u4e0d\u7528\u7ba1json\u90e8\u5206\n\n\n\n\u6846\u67b6\u76ee\u524d\u4e3b\u8981\u7c7b\uff0c\u63cf\u8ff0\u5217\u8868\u5982\u4e0b\uff1a\n\n|            \u7c7b\u540d             |                    \u7528\u9014                    |\n| :-----------------------: | :--------------------------------------: |\n|            url            |                \u7ed9View\u6ce8\u518curl                |\n|        SinglePage         |       \u57fa\u4e8eflask.view\uff0c\u63d0\u4f9b\u8bf7\u6c42\u5206\u53d1\uff0c\u7ed3\u679c\u5e8f\u5217\u5316\u529f\u80fd        |\n| GeneralViewWithSQLAlchemy | \u57fa\u4e8eSinglePage\u7c7b\u7684\u901a\u7528\u89c6\u56fe\u51fd\u6570\uff0c\u80fd\u548cSQLAlchemy\u914d\u5408\u5feb\u901f\u5b9e\u73b0\u63a5\u53e3 |\n|        permission         |           \u7528\u4e8e\u89c6\u56fe\u8bbf\u95ee\u6743\u9650\u7ba1\u7406\uff0c\u53ef\u7528\u6765\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91           |\n\n\n\n## \u5feb\u901f\u5f00\u59cb\n\n\u4e0eflask\u5e38\u7528\u7684\u57fa\u4e8e\u65b9\u6cd5\u7684\u89c6\u56fe\u4e0d\u540c\uff0cSinglePage\u7684\u5e38\u89c4\u7528\u6cd5\u662f\u57fa\u4e8e\u7c7b\n\n~~~python\n# coding: utf-8\nfrom SinglePage import app, SinglePage\nfrom base import Base, db_session\nfrom sqlalchemy import Column, Integer, String, Text, Boolean, Float, DateTime, Enum\n\nclass Address(SinglePage, Base):\n    pass\n~~~\n\n\u4ee5\u4e0a\u4ee3\u7801\u7247\u6bb5\uff0c\u4eceSinglePage\u5bfc\u5165flask\u5b9e\u4f8b\uff0cSinglePage\u7c7b\uff0c\u5bfc\u5165\u6570\u636e\u5e93\u76f8\u5173\n\n\u6211\u4eec\u7684Address\u7c7b\u7ee7\u627f\u81f3SinglePage\uff0c\u540c\u65f6\u7ee7\u627f\u4e86\u6765\u81eaSQLAlchemy\u7684Base\uff0c\u8fd9\u6837\u8fd9\u4e2a\u7c7b\u540c\u65f6\u662f\u89c6\u56fe\u548cORM\n\n\u5f53\u7136\u76ee\u524d\u8fd9\u4efd\u4ee3\u7801\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\uff0c\u6211\u4eec\u7ee7\u7eed\u5b8c\u5584\u5b83\uff0c\u9996\u5148\u5b9a\u4e49\u5b57\u6bb5\n\n~~~python\n# coding: utf-8\nfrom SinglePage import *\nfrom SinglePage import app\nfrom base import Base, db_session\nfrom sqlalchemy import Column, Integer, String, Text, Boolean, Float, DateTime, Enum\n\nclass Address(SinglePage, Base):\n    # \u5b9a\u4e49\u8868\u5b57\u6bb5\n    __tablename__ = 'address'\n    id = Column(Integer, primary_key=True)\n    address = Column(String(15))\n~~~\n\n\u65b0\u589e\u7684\u4ee3\u7801\u5b9a\u4e49\u4e86\u8868\u540d\u5b57\uff0c\u4e3b\u952eid\uff0caddress\n\n\u65e2\u7136\u8fd9\u662f\u4e00\u4e2aRESTful\u6846\u67b6\uff0c\u90a3\u4e48\u5e94\u8be5\u80fd\u591f\u65b9\u4fbf\u7684\u54cd\u5e94HTTP\u52a8\u8bcd\uff0c\u4e8b\u5b9e\u4e0a\u5728SinglePage\u5185\u90e8\u5b9e\u73b0\u4e86\u8bf7\u6c42\u5206\u53d1\uff0c\u4e0d\u540c\u52a8\u8bcd\u7684\u8bf7\u6c42\u4f1a\u7531\u4e0d\u540c\u7684\u65b9\u6cd5\u6765\u54cd\u5e94\uff0c\u76ee\u524d\u652f\u6301\uff0c**PUT,GET,POST,DELETE** ,\u56db\u79cd\u5e38\u7528\u7684\u65b9\u6cd5\uff0c\u4ed6\u4eec\u4f1a\u5206\u522b\u7531\u540c\u540d\u4f46\u662f\u5c0f\u5199\u7684\u65b9\u6cd5\u6765\u54cd\u5e94\uff0c\u4ee3\u7801\u5982\u4e0b\u3002\n\n~~~python\n# coding: utf-8\nfrom SinglePage import *\nfrom SinglePage import app\nfrom base import Base, db_session\nfrom sqlalchemy import Column, Integer, String, Text, Boolean, Float, DateTime, Enum\n\nclass Address(SinglePage, Base):\n    # \u5b9a\u4e49\u6570\u636e\u8868\n    __tablename__ = 'address'\n    id = Column(Integer, primary_key=True)\n    address = Column(String(15))\n\n    # \u5904\u7406http get\u65b9\u6cd5\n    def get(self):\n        return db_session.query(self.object).all(), 'sqlalchemy'\n\n    # \u5904\u7406http post\u65b9\u6cd5\n    def post(self):\n        # \u83b7\u53d6request\u7684json\u5e76\u65b0\u5efa\u4e00\u4e2a\u7528\u6237\n        data = request.get_json()\n        address = self.object(data)\n        db_session.add(address)\n        db_session.commit()\n        return 'ok', 'basic'\n\n~~~\n\n\u4ee5\u4e0a\u4ee3\u7801\u5904\u7406\u4e86GET\u548cPOST\u65b9\u6cd5\uff0c\u5f53\u5bf9\u5e94\u7684\u8bf7\u6c42\u5230\u6765\u65f6\u4f1a\u5206\u522b\u7531get(),post()\u6765\u54cd\u5e94\n\n\u5176\u4e2dget\u65b9\u6cd5\u4f1a\u628a\u6570\u636e\u5e93\u4e2d\u6240\u6709address\u8868\u8bb0\u5f55\u8fd4\u56de\uff0cpost\u65b9\u6cd5\u4f1a\u65b0\u589e\u4e00\u6761\u8bb0\u5f55\n\n\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u4e86\uff0creturn\u8bed\u53e5\u5f88\u5947\u602a\u3002\n\n~~~python\nreturn db_session.query(self.object).all(), 'sqlalchemy'\nreturn 'ok', 'basic'\n~~~\n\n\u7b2c\u4e00\u6761\u8bed\u53e5\u8fd4\u56de\u4e86\u67e5\u8be2\u961f\u5217\u548c\u5b57\u7b26\u4e32\u2018sqlalchemy\u2019\uff0c\u7b2c\u4e8c\u6761\u961f\u5217\u8fd4\u56de\u4e86\u5b57\u7b26\u4e32\u2019ok\u2018\u548c\u5b57\u7b26\u4e32\u2019basic\u2018\n\n\u4e8b\u5b9e\u4e0aSinglePage\u5904\u7406\u4e86\u52a8\u8bcd\u54cd\u5e94\u65b9\u6cd5\u7684\u8fd4\u56de\uff0c\u5b83\u4f1a\u5c06\u8fd9\u4e9b\u8fd4\u56de\u8fdb\u884c\u5e8f\u5217\u5316\u548cJSON\u5316\uff0c\u7531\u4e8e\u5e8f\u5217\u5316\u5668\u5b9e\u73b0\u7684\u539f\u56e0\uff0c\u5fc5\u987b\u6307\u660e\u5e26\u5e8f\u5217\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u76ee\u524d\u652f\u6301\u7684\u5e8f\u5217\u5316\u5bf9\u8c61\u5305\u62ecsqlalchemy\u7684\u666e\u901a\u7c7b\uff0c\u4ed6\u4eec\u5bf9\u5e94\u4f7f\u7528'sqlalchemy'\u548c'basic'\u6765\u6ce8\u660e\uff0c\u5b57\u7b26\u4e32\uff0c\u6570\u636e\u5305\u88c5\u7c7b\u90fd\u5c5e\u4e8e\u2018basic\u2019\uff0c\u5f53\u7136\uff0c\u6211\u77e5\u9053\uff0c\u8fd9\u5f88\u4e0d\u4f18\u96c5\u3002\n\n\u7b2c\u4e8c\u4e2a\u8ba9\u4eba\u9057\u61be\u7684\u5730\u65b9\u5e94\u8be5\u662fself.object\uff0c\u5b83\u6307\u5411\u7c7b\u81ea\u8eab\uff0c\u6ce8\u610fself.object\u5f97\u5230\u7684\u4e0d\u662f\u7c7b\u5b9e\u4f8b\u800c\u662f\u7c7b\u672c\u8eab\u3002\n\n\u6240\u4ee5\u4ee5\u4e0b\u4ee3\u7801\uff1a\n\n~~~python\ndata = request.get_json()\naddress = self.object(data)\n~~~\n\n \u83b7\u53d6\u6765\u81ea\u8bf7\u6c42\u4e2d\u7684json\u6570\u636e\uff0cself.object(data),\u5b9e\u9645\u4e0a\u6267\u884c\u4e86Address\u7684\u5b9e\u4f8b\u5316\u64cd\u4f5c\uff0cSinglePage\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u6620\u5c04\uff0c\u5b83\u4f1a\u81ea\u52a8\u628a\u6211\u4eec\u5b9a\u4e49\u7684id\uff0c\u548caddress\u5b57\u6bb5\u4f5c\u4e3ajson\u4e2d\u7684key\uff0c\u53bb\u83b7\u53d6json\u4e2d\u7684\u503c\uff0c\u5e76\u5b8c\u6210\u521b\u5efaSQLAlchemy\u5bf9\u8c61\u7684\u64cd\u4f5c\u3002\n\nok\uff0c\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u6570\u636e\u5e93\uff0c\u8868\u5b9a\u4e49\uff0c\u548c\u63a5\u53e3\u89c4\u5219\uff0c\u90a3\u4e48URL\u5462\uff1f\n\n~~~python\n# coding: utf-8\nfrom SinglePage import *\nfrom SinglePage import app\nfrom base import Base, db_session\nfrom sqlalchemy import Column, Integer, String, Text, Boolean, Float, DateTime, Enum\n\n# \u6ce8\u518curl\n@url('/addresses/')\nclass Address(SinglePage, Base):\n    # \u5b9a\u4e49\u6570\u636e\u8868\n    __tablename__ = 'address'\n    id = Column(Integer, primary_key=True)\n    address = Column(String(15))\n\n    # \u5904\u7406http get\u65b9\u6cd5\n    def get(self, address_id):\n        # \u67e5\u8be2\u6570\u636e\n        if address_id is not None:\n            return db_session.query(self.object).filter(self.object.id == address_id), 'sqlalchemy'\n        else:\n            return db_session.query(self.object).all(), 'sqlalchemy'\n\n    # \u5904\u7406http post\u65b9\u6cd5\n    def post(self):\n        # \u83b7\u53d6request\u7684json\u5e76\u65b0\u5efa\u4e00\u6761\u5730\u5740\n        data = request.get_json()\n        address = self.object(data)\n        db_session.add(address)\n        db_session.commit()\n        return 'ok', 'basic'\nif __name__ = '__main__':\n\tAddress()\n    app.run()\n~~~\n\n\u4f7f\u7528@\u8bed\u6cd5\u53ef\u4ee5\u8f7b\u677e\u7684\u6ce8\u518c\u628aAddress\u6ce8\u518c\u5230\u8def\u7531\u7cfb\u7edf\uff0cURL\u4e2d\u8bf7\u4e00\u5b9a\u5e26\u4e0a\u7ed3\u5c3e\u7684'/'\u3002\n\n\u63a5\u4e0b\u6765\u5728\u542f\u52a8\u8fd9\u4e2apython\u811a\u672c\uff0cAdders()\u8fd9\u4e2a\u5b9e\u4f8b\u5316\u64cd\u4f5c\uff0c\u4f1a\u628aAddress\u771f\u6b63\u7684\u6ce8\u518c\u5230\u8def\u7531\u7cfb\u7edf\u4e2d\uff0c\u7136\u540e\u8bbf\u95eehttp:127.0.0.1:5000/addresses/\u4fbf\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u89c6\u56fe\u4e86\u3002\n\n## \u66f4RESTful\u7684\u4f7f\u7528URL\n\nRESTful\u5e94\u8be5\u6309\u5982\u4e0b\u65b9\u5f0f\u6765\u4f7f\u7528URL\n\n| URL           | HTTP\u52a8\u8bcd | \u529f\u80fd        |\n| ------------- | ------ | --------- |\n| /addresses/   | GET    | \u83b7\u53d6\u6240\u6709\u6570\u636e    |\n| /addresses/id | GET    | \u83b7\u53d6\u5bf9\u5e94id\u7684\u6570\u636e |\n| /addresses/   | POST   | \u65b0\u589e\u4e00\u6761      |\n| /addresses/id | PUT    | \u66f4\u65b0\u5bf9\u5e94id\u7684\u6570\u636e |\n\n\u60f3\u8981\u4f7f\u7528id\uff0c\u53ea\u9700\u8981\u5728\u5bf9\u5e94\u65b9\u6cd5\u91cc\u589e\u52a0\u4e00\u4e2a\u53c2\u6570\uff0cid\u53d8\u4f1a\u6ce8\u518c\u5230\u8def\u7531\u7cfb\u7edf\u4e2d\uff0c\u5982\u4e0b\uff1a\n\n~~~python\n# coding: utf-8\nfrom SinglePage import *\nfrom SinglePage import app\nfrom base import Base, db_session\nfrom sqlalchemy import Column, Integer, String, Text, Boolean, Float, DateTime, Enum\n\n# \u6ce8\u518curl\n\n\n@url('/addresses/')\nclass Address(SinglePage, Base):\n    # \u5b9a\u4e49\u6570\u636e\u8868\n    __tablename__ = 'address'\n    id = Column(Integer, primary_key=True)\n    address = Column(String(15))\n    # __exclude__ = ['id']\n    # \u5904\u7406http get\u65b9\u6cd5\n\n    def get(self, address_id):\n        # \u67e5\u8be2\u6570\u636e\n        if address_id is not None:\n            return db_session.query(self.object).filter(self.object.id == address_id), 'sqlalchemy'\n        else:\n            return db_session.query(self.object).all(), 'sqlalchemy'\n    # \u5904\u7406http post\u65b9\u6cd5\n\n    def post(self):\n        # \u83b7\u53d6request\u7684json\u5e76\u65b0\u5efa\u4e00\u4e2a\u7528\u6237\n        data = request.get_json()\n        address = self.object(data)\n        db_session.add(address)\n        db_session.commit()\n        return 'ok', 'basic'\n~~~\n\n\u6211\u4eec\u4fbf\u6709\u4e86/addresses/address_id\u8fd9\u6837\u4e00\u6761url\u4f60\u53ef\u4ee5\u7528\u4ee5\u4e0b\u65b9\u5f0f\u4f7f\u7528\u5b83\n\n~~~python\n/addresses/address_id=1\n/addresses/1\n~~~\n\n\u4e24\u79cd\u65b9\u6cd5\u4e2d\u76841\u6700\u7ec8\u90fd\u4f1a\u6620\u5c04\u5230get\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570address_id\u4e0a\u9762\n\n\u5982\u679c\u4ec5\u4ec5\u8bbf\u95ee/addresses/\u90a3\u4e48\u8fd9\u4e2a\u53c2\u6570\u4e3aNone\uff0c\u6240\u4ee5\u4f60\u4e0d\u7528\u8bbe\u7f6e\u9ed8\u8ba4\u503c\u4e3aNone\n\n## \u4e0d\u9700\u8981\u5ba2\u6237\u7aef\u77e5\u9053\u4e1c\u897f\n\n\u4e0a\u6587\u63d0\u5230\u8fc7self.object()\u4f1a\u77e5\u9053\u628aAddress\u4e2d\u5b9a\u4e49\u7684\u5b57\u6bb5\u4f5c\u4e3ajson\u6570\u636e\u7684key\u53bb\u83b7\u53d6json\u91cc\u9762\u7684\u503c\uff0c\u7136\u540e\u5b9e\u4f8b\u5316\u4e00\u4e2aORM\u5bf9\u8c61\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u56de\u7591\u95ee\uff0c\u96be\u9053id\u4e5f\u8981\u7531\u5ba2\u6237\u7aef\u4f20\u5165\u5417\uff1f\n\n\u5f53\u7136\u6211\u4eec\u505a\u4e86\u4e00\u4e0b\u7b80\u5355\u7684\u63aa\u65bd\u6765\u9632\u6b62\u5ba2\u6237\u7aef\u586b\u5145\u4e0d\u9700\u8981\u7684\u5b57\u6bb5\n\n~~~python\n# coding: utf-8\nfrom SinglePage import *\nfrom SinglePage import app\nfrom base import Base, db_session\nfrom sqlalchemy import Column, Integer, String, Text, Boolean, Float, DateTime, Enum\n\n# \u6ce8\u518curl\n\n\n@url('/addresses/')\nclass Address(SinglePage, Base):\n    # \u5b9a\u4e49\u6570\u636e\u8868\n    __tablename__ = 'address'\n    id = Column(Integer, primary_key=True)\n    address = Column(String(15))\n    __in_exclude__ = ['id']\n    __exclude__ = ['id']\n    # \u5904\u7406http get\u65b9\u6cd5\n\n    def get(self, address_id):\n        # \u67e5\u8be2\u6570\u636e\n        if address_id is not None:\n            return db_session.query(self.object).filter(self.object.id == address_id), 'sqlalchemy'\n        else:\n            return db_session.query(self.object).all(), 'sqlalchemy'\n    # \u5904\u7406http post\u65b9\u6cd5\n\n    def post(self):\n        # \u83b7\u53d6request\u7684json\u5e76\u65b0\u5efa\u4e00\u4e2a\u7528\u6237\n        data = request.get_json()\n        address = self.object(data)\n        db_session.add(address)\n        db_session.commit()\n        return 'ok', 'basic'\n\n~~~\n\n~~~python\n__in_exclude__\n~~~\n\n\u8fd9\u4e2a\u5217\u8868\u5185\u7684\u5b57\u7b26\u4e32\uff0c\u6807\u6ce8\u4e86\u4e0d\u9700\u8981\u7531\u5ba2\u6237\u7aef\u586b\u5145\u7684\u5b57\u6bb5\n\n~~~python\n__exclude__\n~~~\n\n\u8fd9\u4e2a\u5217\u8868\u5185\u7684\u5b57\u7b26\u4e32\uff0c\u6807\u6ce8\u4e86\u4e0d\u4f1a\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u7684\u5b57\u6bb5\uff0c\n\n## \u5b9e\u4f8b\u5316\u8fd9\u6b65\u6211\u6709\u8bdd\u8bf4\n\n\u6216\u8bb8\u81ea\u52a8\u751f\u6210ORM\u5b9e\u4f8b\u8fd9\u6b65\uff0c\u4f1a\u5f71\u54cd\u5230\u4f60\u5904\u7406\u4e00\u4e9b\u5b57\u6bb5\u6570\u636e\uff0c\u6bd4\u5982\u5ba2\u6237\u7aef\u53d1\u6765\u5bc6\u7801\u800c\u4f60\u6253\u7b97\u5c06\u5bc6\u7801hash\u4e4b\u540e\u518d\u5b58\u50a8\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u4f7f\u7528python\u7684\u5c5e\u6027\u65b9\u6cd5\u4ee5\u53caSinglePage\u7684\u5c5e\u6027\u65b9\u6cd5\u5b57\u5178\n\n~~~python\n# coding: utf-8\nfrom SinglePage import *\nfrom SinglePage import app\nfrom base import Base, db_session\nfrom sqlalchemy import Column, Integer, String, Text, Boolean, Float, DateTime, Enum\n# \u6ce8\u518curl\n\n\n@url('/users/')\nclass User(GeneralViewWithSQLAlchemy, Base):\n    # \u914d\u7f6e\u6570\u636e\u5e93\u4f1a\u8bdd\u94fe\u63a5\n    db_session = db_session\n    # \u5b9a\u4e49delete\u65b9\u6cd5\u662f\u771f\u5b9e\u5220\u9664\u8fd8\u662f\u8f6f\u5220\u9664\n    real_delete = False\n    # \u5b9a\u4e49\u6570\u636e\u8868\n    __tablename__ = 'User'\n    id = Column(Integer, primary_key=True)\n    telephone = Column(String(15))\n    nickname = Column(String(20))\n    _pwd = Column(String(50))\n    deleted = Column(Boolean())\n    # \u5b9a\u4e49\u54ea\u4e9b\u5b57\u6bb5\u4e0d\u7531\u524d\u7aef\u586b\u5145\n    __in_exclude__ = ['id', '_pwd', 'deleted']\n    # \u5b9a\u4e49\u54ea\u4e9b\u5b57\u6bb5\u4e0d\u5c55\u793a\u7ed9\u524d\u7aef\n    __exclude__ = ['_pwd']\n    # \u5b9a\u4e49\u5c5e\u6027\u88c5\u9970\u65b9\u6cd5\n    __property__ = {'pwd': '_pwd'}\n\n    @property\n    def pwd(self):\n        return self._pwd\n\n    @pwd.setter\n    def pwd(self, value):\n        self._pwd = u'\u5047\u88c5\u52a0\u5bc6' + value\nif __name__ == '__main__':\n    User()\n    app.run()\n~~~\n\n\u4ee5\u4e0a\u4ee3\u7801\u7684\u6548\u679c\u662f\uff0c\u5ba2\u6237\u7aef\u62e5\u6709\u4e00\u4e2a/users/\u63a5\u53e3\uff0c\u53ef\u4ee5\u8f7b\u677e\u4f7f\u7528HTTP\u52a8\u8bcd\u6267\u884c\u6570\u636e\u7684\u589e\u5220\u6539\u67e5\n\n\u5e76\u4e14\uff0c\u6bcf\u6b21pwd\u5b57\u6bb5\u53d8\u52a8\u65f6\u90fd\u4f1a\u8fdb\u884c\u5728\u5ba2\u6237\u7aef\u503c\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u2018\u5047\u88c5\u52a0\u5bc6\u2018\u8fd9\u6837\u7684\u524d\u7f00\uff0c\n\n~~~python\n# \u5b9a\u4e49\u54ea\u4e9b\u5b57\u6bb5\u4e0d\u7531\u524d\u7aef\u586b\u5145\n__in_exclude__ = ['id', '_pwd', 'deleted']\n# \u5b9a\u4e49\u54ea\u4e9b\u5b57\u6bb5\u4e0d\u5c55\u793a\u7ed9\u524d\u7aef\n__exclude__ = ['_pwd']\n# \u5b9a\u4e49\u5c5e\u6027\u88c5\u9970\u65b9\u6cd5\n__property__ = {'pwd': '_pwd'}\n~~~\n\n\u8fd9\u4e09\u6761\u8bed\u53e5\u6307\u660e\u4e86\u4e0d\u9700\u8981\u5ba2\u6237\u7aef\u586b\u5145\u7684\u5b57\u6bb5\uff0c\u548c\u4e0d\u9700\u8981\u5c55\u793a\u7ed9\u5ba2\u6237\u7aef\u7684\u5b57\u6bb5\uff0c\u4ee5\u53ca_pwd\u5b57\u6bb5\u7684\u5c5e\u6027\u65b9\u6cd5\u4e3apwd\n\n\u5ba2\u6237\u7aef\u4f7f\u7528POST\u65f6\u53ea\u9700\u63d0\u4ea4\uff1a\n\n~~~json\n{\n    \"nickname\":\"TayloeHere\",\n    \"telephone\":\"151****8887\",\n    \"pwd\":\"00000\"\n}\n~~~\n\n\u4f7f\u7528GET\u65f6\u4f1a\u6536\u5230\u5230\u5982\u4e0b\u7c7b\u4f3c\u7684\u6570\u636e\uff1a\n\n~~~json\n{\n  \"data\": [\n    {\n      \"deleted\": null,\n      \"id\": 1,\n      \"nickname\": \"TaylorHere\",\n      \"pwd\": \"\u5047\u88c5\u52a0\u5bc600000\",\n      \"telephone\": \"151****8887\"\n    }\n  ]\n}\n~~~\n\n\u7ec6\u5fc3\u7684\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0User\u7c7b\u662f\u57fa\u4e8eGeneralViewWithSQLAlchemy\u5b9e\u73b0\u7684\n\n\u8fd9\u4e2a\u7c7b\u63d0\u4f9b\u4e86\u901a\u7528\u7684\u89c6\u56fe\uff0c\u5e76\u6309RESTful\u7684\u98ce\u683c\u63d0\u4f9bURL\u548c\u8fd4\u56de\uff0c\u540c\u65f6\u63d0\u4f9b\u4e86\u8f6f\u5220\u9664\u9009\u9879\uff0c\u5f53\u7136\u8fd9\u9700\u8981\u4f60\u5b9a\u4e49\u4e00\u4e2a\u53eb\u505adeleted\u7684boolean\u578b\u5b57\u6bb5\u3002\n\n\u901a\u7528\u89c6\u56fe\u63d0\u4f9b\u7684URL\u5982\u4e0b\uff08\u4ee5User\u7c7b\u4e3a\u4f8b\uff09:\n\n| URL       | HTTP\u52a8\u8bcd | \u529f\u80fd        |\n| --------- | ------ | --------- |\n| /users/   | GET    | \u83b7\u53d6\u6240\u6709\u6570\u636e    |\n| /users/id | GET    | \u83b7\u53d6\u5bf9\u5e94id\u7684\u7528\u6237 |\n| /users/   | POST   | \u65b0\u589e\u4e00\u6761      |\n| /users/id | PUT    | \u66f4\u65b0\u5bf9\u5e94id\u7684\u7528\u6237 |\n\n\n\n## \u6743\u9650\u7ba1\u7406\n\n~~~python\nclass permission():\n\n    def get(self, request):\n        'get permission'\n        return True\n\n    def post(self, request):\n        'post permission'\n        return True\n\n    def put(self, request):\n        'put permission'\n        return True\n\n    def delete(self, request):\n        'delete permission'\n        return True\n~~~\n\n\u4ee5\u4e0a\u4e3apermission\u6e90\u4ee3\u7801\uff0c\u4e00\u4e2apermission\u53ef\u4ee5\u63a7\u5236\u4e00\u4e2a\u89c6\u56fe\u4e0d\u540c\u52a8\u4f5c\u51fd\u6570\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u51c6\u786e\u8bf4\u662f\u8bbf\u95ee\u8fd9\u4e2a\u52a8\u4f5c\u540e\uff0c\u662f\u5426\u6267\u884c\u52a8\u4f5c\u5185\u4ee3\u7801\u7684\u6743\u9650\u3002\n\n\u4f7f\u7528\u65f6\u53ea\u9700\u7ee7\u627fpermission\u7c7b\uff0c\u5e76\u91cd\u8f7d\u5bf9\u5e94\u52a8\u4f5c\u65b9\u6cd5\uff0c\u8fd4\u56deTrue\u5219\u4e3a\u6743\u9650\u901a\u8fc7\uff0c\u8fd4\u56defalse\u4e3a\u6743\u9650\u4e0d\u901a\u8fc7\uff0c\n\n\u6700\u540e\u5c06\u4f60\u7684\u6743\u9650\u7c7b\u6ce8\u518c\u5230\\__permission__\u5217\u8868\u4e2d\uff0c\u4e00\u4e2a\u89c6\u56fe\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a\u6743\u9650\u7c7b\uff0c\u540c\u65f6\uff0c\u6743\u9650\u52a8\u4f5c\u65b9\u6cd5\u4e2d\u7684\u6ce8\u91ca\u4f1a\u88ab\u4f5c\u4e3a\u6743\u9650\u4e0d\u540c\u65f6\u7684\u9ed8\u8ba4\u8fd4\u56de\u3002\n\n~~~python\n# coding: utf-8\nfrom SinglePage import *\nfrom SinglePage import app\nfrom base import Base, db_session\nfrom sqlalchemy import Column, Integer, String, Text, Boolean, Float, DateTime, Enum\n# \u6ce8\u518curl\n\n\n@url('/users/')\nclass User(GeneralViewWithSQLAlchemy, Base):\n\n    class UserPermission(permission):\n        \"\"\"author:Taylor<tank357@icloud.com>\"\"\"\n\n        def get(self, request):\n            'do not open this api'\n            return False\n    # \u914d\u7f6e\u6570\u636e\u5e93\u4f1a\u8bdd\u94fe\u63a5\n    db_session = db_session\n    # \u5b9a\u4e49delete\u65b9\u6cd5\u662f\u771f\u5b9e\u5220\u9664\u8fd8\u662f\u8f6f\u5220\u9664\n    real_delete = False\n    # \u5b9a\u4e49\u6570\u636e\u8868\n    __tablename__ = 'User'\n    id = Column(Integer, primary_key=True)\n    telephone = Column(String(15))\n    nickname = Column(String(20))\n    _pwd = Column(String(50))\n    deleted = Column(Boolean())\n    # \u5b9a\u4e49\u54ea\u4e9b\u5b57\u6bb5\u4e0d\u7531\u524d\u7aef\u586b\u5145\n    __in_exclude__ = ['id', '_pwd', 'deleted']\n    # \u5b9a\u4e49\u54ea\u4e9b\u5b57\u6bb5\u4e0d\u5c55\u793a\u7ed9\u524d\u7aef\n    __exclude__ = ['_pwd']\n    # \u5b9a\u4e49\u5c5e\u6027\u88c5\u9970\u65b9\u6cd5\n    __property__ = {'pwd': '_pwd'}\n    __permission__ = [UserPermission]\n\n    @property\n    def pwd(self):\n        return self._pwd\n\n    @pwd.setter\n    def pwd(self, value):\n        self._pwd = u'\u5047\u88c5\u52a0\u5bc6' + value\n\n~~~\n\n\n\n## \u8fc7\u6ee4\u5668\n\n\u5bf9\u4e8e\u8fc7\u6ee4\u5668\u7684\u8bbe\u8ba1\u662f\u6700\u7ea0\u7ed3\u7684\uff0c\u65e2\u8981\u8003\u8651\u5230\u62d3\u5c55\u53c8\u8981\u8003\u8651\u5230\u901a\u7528\uff0c\u540c\u65f6\u8fd8\u5e0c\u671b\u5b9e\u73b0\u7ed3\u679c\u7f13\u5b58\u3002\n\n\u6240\u4ee5\u6700\u7ec8\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u4e3a\u6bcf\u4e2aget\u64cd\u4f5c\u63d0\u4f9b\u4e00\u7ec4\u9ed8\u8ba4\u8fc7\u6ee4\u5668\uff0c\u6ce8\u518c\u5728\\__query_args__\u5b57\u5178\u91cc\uff0c\u6269\u5c55\u65f6\u53ea\u9700\u63d0\u4f9b\u8fc7\u6ee4\u5668\u540d\u79f0\u548c\u5b9e\u73b0\u65b9\u6cd5\u5373\u53ef\u3002\n\n\u4f8b\u5982asc_order_by\u8fc7\u6ee4\u5668\u5b9e\u73b0\u662f\u8fd9\u6837\u7684\uff1a\n\n~~~python\ndef asc_order_by(self, query, value):\n        from sqlalchemy import text\n\n        return query.order_by(text(value))\n~~~\n\n\u6211\u4eec\u4e00\u5171\u5b9e\u73b0\u4e865\u4e2a\u8fc7\u6ee4\u5668\uff0c\u5e76\u4e14\u5f88\u7ea0\u7ed3\u662f\u5426\u5e94\u8be5\u5b9e\u73b0\u6700\u540e\u4e24\u4e2a\uff0c\u8fd95\u4e2a\u8fc7\u6ee4\u5668\u5982\u4e0b\uff1a\n\n~~~python\ndef filter(self, query, value):\n        \"\"\"\n        \u7b49\u4e8e key = value\n        \u4e0d\u7b49\u4e8e key != value\n        boolean \u503c Flase\uff1a0\uff0cTrue\uff1a1\n        \u5927\u4e8e key > value\n        \u5c0f\u4e8e key < value\n        \u6216 expression A or expression B\n        \u4e14 expression A and expression B\n            ex:\n                'name = taylor and and age <20 and deleted = 0'\n        \"\"\"\n        from sqlalchemy import text\n\n        return query.filter(text(value))\n\ndef asc_order_by(self, query, value):\n\tfrom sqlalchemy import text\n\n\treturn query.order_by(text(value))\n\ndef desc_order_by(self, query, value):\n\tfrom sqlalchemy import desc\n\tfrom sqlalchemy import text\n\n    return query.order_by(desc(text(value)))\n\ndef limit(self, query, value):\n    return query[0:int(value)]\n\ndef fileds(self, query, value):\n    pass\n\n    # \u8fc7\u6ee4\u5668\u5b9e\u73b0\u4e8eargs\u540d\u79f0\u5b57\u5178\n    __query_args__ = {'filter': filter, 'asc_order_by': asc_order_by,\n                      'desc_order_by': desc_order_by, 'limit': limit, 'fileds': fileds}\n~~~\n\n\u6211\u4eec\u5728\u601d\u8003\u662f\u5426\u5e94\u8be5\u9ed8\u8ba4\u63d0\u4f9blimit(\u5206\u9875\u529f\u80fd),\u548cfileds(\u8fd4\u56de\u5b57\u6bb5\u8fc7\u6ee4)\uff0c\u56e0\u4e3a\u6211\u4eec\u8ba4\u4e3a\u5e94\u8be5\u628a\u8fd9\u4e24\u4e2a\u4ea4\u7ed9Query\u8d44\u6e90\u53bb\u5904\u7406\n\n## Query\u8d44\u6e90\n\nQuery\u8d44\u6e90\u5373\u628a\u67e5\u8be2\u672c\u8eab\u770b\u4f5c\u4e00\u79cd\u8d44\u6e90\uff0c\u4f7f\u7528post\u53d1\u8d77\u4e00\u4e2a\u8d44\u6e90\uff0c\u6211\u4eec\u77e5\u9053post\u52a8\u8bcd\u5e94\u8be5\u5bf9\u5e94\u521b\u5efa\u64cd\u4f5c\uff0c\u4e8b\u5b9e\u4e0a\u6211\u4eec\u5c31\u662f\u8fd9\u6837\u601d\u8003\u7684\uff0cpost\u53d1\u8d77\u4e00\u6b21\u67e5\u8be2\u540e\uff0c\u67e5\u8be2\u7ed3\u679c\u4f1a\u88ab\u7f13\u5b58\uff0c\u4e4b\u540e\u53ef\u4ee5\u901a\u8fc7get\u6216\u8005post\u83b7\u53d6\u8fd9\u6b21\u7f13\u5b58\uff0c\u5f53\u7136\u4f7f\u7528post\u6267\u884c\u83b7\u53d6\uff0c\u4f1a\u663e\u5f97\u5f88\u5947\u602a\uff0c\u4f46\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u5bf9\u4e8e\u666e\u901a\u8d44\u6e90\uff0c\u6211\u4eec\u4f7f\u7528post\u521b\u5efa\u4e00\u4e2a\u5df2\u5b58\u5728\u8d44\u6e90\u65f6\uff0c\u4ed6\u4f9d\u7136\u4f1a\u628a\u8fd9\u4e2a\u5df2\u5b58\u5728\u8d44\u6e90\u8fd4\u56de\uff0c\u6240\u4ee5\u8fd9\u6837\u60f3\u5c31\u4e0d\u5947\u602a\u4e86\u3002\n\nQuery\u8d44\u6e90\u53ef\u4ee5\u8f7b\u677e\u4f7f\u7528SinglePage\u5b50\u7c7b\u6765\u5b9e\u73b0\u3002\n\nQuery\u8d44\u6e90\u8fd8\u5728\u5f00\u53d1\u4e2d\u3002\n\n## \u672a\u6765\n\nSinglePage\u662f\u82b1\u8349\u79c0\u56e2\u961f\u76ee\u524d\u6b63\u5728\u5f00\u53d1\u4e2d\u7684RESTful\u6846\u67b6\uff0c\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4f1a\u4e3a\u6539\u6846\u67b6\u6dfb\u52a0\u66f4\u591a\u7684\u7279\u6027\uff0c\u4f7f\u5176\u66f4\u7b26\u5408\u5546\u4e1a\u7528\u4f8b\u3002",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/TaylorHere/SinglePage",
    "keywords": "RESTful framework Flask",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "SinglePage",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/SinglePage/",
    "release_url": "https://pypi.org/project/SinglePage/0.1.0/",
    "requires_python": null,
    "summary": "A RESTful framework based on Flask and SQLAlchemy and Redis",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "84d8a9bb09e82a20f39c8c927a3e8f22",
          "sha256": "571f8d6b5b5eb0f23b69eb0c475527b89c1b9dbd649585d800f121fb011d66c6"
        },
        "downloads": 84,
        "filename": "SinglePage-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "84d8a9bb09e82a20f39c8c927a3e8f22",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9090,
        "upload_time": "2016-11-19T11:08:11",
        "url": "https://files.pythonhosted.org/packages/39/2e/7c9cecd8c5f0140f406796c505deeee3192324ca30b689996e6227eba730/SinglePage-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "84d8a9bb09e82a20f39c8c927a3e8f22",
        "sha256": "571f8d6b5b5eb0f23b69eb0c475527b89c1b9dbd649585d800f121fb011d66c6"
      },
      "downloads": 84,
      "filename": "SinglePage-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "84d8a9bb09e82a20f39c8c927a3e8f22",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9090,
      "upload_time": "2016-11-19T11:08:11",
      "url": "https://files.pythonhosted.org/packages/39/2e/7c9cecd8c5f0140f406796c505deeee3192324ca30b689996e6227eba730/SinglePage-0.1.0.tar.gz"
    }
  ]
}