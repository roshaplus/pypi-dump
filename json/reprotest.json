{
  "info": {
    "author": "Ceridwen",
    "author_email": "ceridwenv@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Topic :: Utilities"
    ],
    "description": "Command Line Interface\n======================\n\nThe easiest way to run reprotest is via our presets:\n\n    # Build the current directory in a null server (/tmp)\n    reprotest auto .\n    reprotest auto . -- null -d # for more verbose output\n\n    # Build the given Debian source package in an schroot\n    # See https://wiki.debian.org/sbuild for instructions on setting that up.\n    reprotest auto reprotest_0.3.3.dsc -- schroot unstable-amd64-sbuild\n\nCurrently, we only support this for Debian packages, but are keen on adding\nmore. If we don't have knowledge on how to build your file or directory, you\ncan send a patch to us on adding this intelligence - see the reprotest.presets\npython module, and adapt the existing logic.\n\nBefore that happens, you can use the more advanced CLI to build arbitrary\nthings. This takes two mandatory arguments, the build command to run and the\nbuild artifact file/pattern to test after running the build. For example:\n\n    reprotest 'python3 setup.py bdist' 'dist/*.tar.gz'\n\nWhen using this from a shell:\n\nIf the build command has spaces, you will need to quote them, e.g.\n`reprotest \"debuild -b -uc -us\" [..]`.\n\nIf you want to use several build artifact patterns, you will also\nneed to quote them, e.g. `reprotest [..] \"*.tar.gz *.tar.xz\"`.\n\nIf your build artifacts have spaces in their names, you will need to\nquote these twice, e.g. `'\"a file with spaces.gz\"'` for a single\nartifact or `'\"dir 1\"/* \"dir 2\"/*'` for multiple patterns.\n\nTo get more help for the CLI, including documentation on optional\narguments and what they do, run:\n\n    reprotest --help\n    reprotest --help schroot\n\n\nRunning in a virtual server\n===========================\n\nYou can also run the build inside what is called a \"virtual server\". This could\nbe a container, a chroot, etc. There are different ones available, see `--help`\nfull list. You run them like this:\n\n    reprotest 'python3 setup.py bdist_wheel' 'dist/*.whl' qemu /path/to/qemu.img\n    reprotest 'debuild -b -uc -us' '../*.deb' schroot unstable-amd64\n\nYou can also run `reprotest --help <virtual_server_name>` for a full list of\noptions for that particular virtual server.\n\nYou will probably have to give extra commands to reprotest, in order to set up\nyour build dependencies inside the virtual server. For example, to take you\nthrough what the \"Debian directory\" preset would look like, if we ran it via\nthe advanced CLI:\n\n    reprotest auto . -- schroot unstable-amd64-sbuild\n    # equivalent to:\n    reprotest \\\n        --testbed-init 'apt-get -y --no-install-recommends install \\\n                        util-linux disorderfs 2>/dev/null; \\\n                        test -c /dev/fuse || mknod -m 666 /dev/fuse c 10 229' \\\n        'PATH=/sbin:/usr/sbin:$PATH apt-get -y --no-install-recommends build-dep ./; \\\n         dpkg-buildpackage -uc -us -b' \\\n        '../*.deb' \\\n        -- \\\n        schroot unstable-amd64-sbuild\n\nThe `--testbed-init` argument is needed to set up basic tools, which reprotest\nneeds in order to make the variations in the first place. This should be the\nsame regardless of what package is being built, but might differ depending on\nwhat virtual_server is being used.\n\nNext, we have the build_command. For our Debian directory, we install\nbuild-dependencies using apt-get, then we run the actual build command itself\nusing dpkg-buildpackage(1).\n\nThen, we have the artifact pattern. For reproducibility, we're only interested\nin the binary packages.\n\nFinally, we specify that this is to take place in the \"schroot\" virtual_server\nwith arguments \"unstable-amd64-sbuild\".\n\n\nConfig File\n===========\n\nThe config file has one section, basics, and the same options as the\nCLI, except there's no dont_vary option, and there are `build_command`\nand `artifact` fields.  If `build_command` and/or `artifact` are set\nin the config file, reprotest can be run without passing those as\ncommand-line arguments.  Command-line arguments always override config\nfile options.  Reprotest currently searches the working directory for\nthe config file, but it will also eventually search the user's home\ndirectory.  A sample config file is below.\n\n    [basics]\n    build_command = setup.py sdist\n    artifact = dist/reprotest-0.2.tar.gz\n    source_root = reprotest/\n    variations =\n      environment\n      domain_host\n      filesystem\n      home\n      host\n      kernel\n      locales\n      path\n      shell\n      time\n      timezone\n      umask\n      user_group\n\n\n\nRunning the Tests\n=================\n\nThe easiest way to run the tests is with\n[Tox](https://pypi.python.org/pypi/tox).  Install it,\n[Coverage](https://pypi.python.org/pypi/coverage), and\n[pytest](https://pypi.python.org/pypi/pytest).  (On Debian, this can\nbe done with `apt-get install python3-coverage tox python3-pytest`.)\n\nTo run the tests, go to the root of the repository, where `tox.ini` is\nand run `tox`.  For more verbose output, run `tox -- -s`.\n\nHowever, this runs the tests with no virtualization. To test that\nreprotest works correctly with virtualization, you'll need to setup\nthe virtualization servers schroot and qemu.\n\nSome of the following instructions rely on Debian utilities.  For\nschroot, run `mk-sbuild --debootstrap-include=devscripts stable`.  (If\nyou aren't on `amd64`, you'll have to include `--arch`.)  For qemu,\nfirst `apt-get install autopkgtest vmdebootstrap qemu`, then run:\n\n    vmdebootstrap --verbose --serial-console --distribution=sid \\\n                 --customize=/usr/share/autopkgtest/setup-commands/setup-testbed \\\n                 --user=adt/adt --size=10000000000 --grub --image=adt-sid.raw\n    qemu-img convert -O qcow2 adt-sid.raw  adt-sid.img\n    rm adt-sid.raw\n\nThe last two commands reduce the size of the image but aren't strictly\nnecessary.  Move `adt-sid.img` to `linux/` under your home directory.\n\nTo log into the schroot and qemu containers, respectively, run:\n\n    sudo schroot -c source:stable-amd64\n    qemu-system-x86_64 -enable-kvm -drive file=~/linux/adt-sid.img,if=virtio -net user -net nic,model=virtio -m 1024\n\nAfter replacing `~` with your home directory.\n\nFor the host system and the two containers, run:\n\n    apt-get install disorderfs\n    (Additionally for mk-sbuild stable,  enable the backports repository.)\n    (Additionally for chroot, run:\n    mknod -m 666 /dev/fuse c 10 229)\n    apt-get install python3 python3-pip\n    apt-get install locales-all\n\nNow, finally run the tests:\n\n    REPROTEST_TEST_SERVERS=null,qemu,schroot tox -- -s\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://anonscm.debian.org/cgit/reproducible/reprotest.git/",
    "keywords": "",
    "license": "GPL-3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "reprotest",
    "platform": "",
    "project_url": "https://pypi.org/project/reprotest/",
    "release_url": "https://pypi.org/project/reprotest/0.5/",
    "requires_python": "",
    "summary": "Build packages and check them for reproducibility.",
    "version": "0.5"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d8e185a391f94edc5009a0bbdc8ee28b",
          "sha256": "f5982b3746a287bedb7b15c24efc29459c8a1b2df42ba33980a56b5cfbbb3115"
        },
        "downloads": 477,
        "filename": "reprotest-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d8e185a391f94edc5009a0bbdc8ee28b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5609,
        "upload_time": "2016-06-14T16:41:31",
        "url": "https://files.pythonhosted.org/packages/d5/91/4b7f2dc133d97c982d13b042c0ed012be0dbc655a483b6ee311426564c50/reprotest-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bd95ec5f7abe324cb4ac4ad5ee621417",
          "sha256": "9f0fe656008e6e386d3ab4ea6770c06e355e4c3eeaa05dae02e4dcb617392eb6"
        },
        "downloads": 116,
        "filename": "reprotest-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bd95ec5f7abe324cb4ac4ad5ee621417",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 70766,
        "upload_time": "2016-07-25T18:51:03",
        "url": "https://files.pythonhosted.org/packages/d8/62/07a83c61a791a3a5bcdf5b9192335396c21c3f8eb501b2f940349ff11e17/reprotest-0.2.tar.gz"
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dc3e82cce2b69482499d383b6262db56",
          "sha256": "0b62a1a9e9ce43ef2b33bd9fd66f94d148736198593e947639a70c29937c99eb"
        },
        "downloads": 151,
        "filename": "reprotest-0.5.tar.gz",
        "has_sig": true,
        "md5_digest": "dc3e82cce2b69482499d383b6262db56",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 57803,
        "upload_time": "2017-01-06T20:56:00",
        "url": "https://files.pythonhosted.org/packages/2f/be/a8afd0cce990158fa290166fda387f2d2c7952da454ddc698c4921d2f104/reprotest-0.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "dc3e82cce2b69482499d383b6262db56",
        "sha256": "0b62a1a9e9ce43ef2b33bd9fd66f94d148736198593e947639a70c29937c99eb"
      },
      "downloads": 151,
      "filename": "reprotest-0.5.tar.gz",
      "has_sig": true,
      "md5_digest": "dc3e82cce2b69482499d383b6262db56",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 57803,
      "upload_time": "2017-01-06T20:56:00",
      "url": "https://files.pythonhosted.org/packages/2f/be/a8afd0cce990158fa290166fda387f2d2c7952da454ddc698c4921d2f104/reprotest-0.5.tar.gz"
    }
  ]
}