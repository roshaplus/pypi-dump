{
  "info": {
    "author": "Colin Craig",
    "author_email": "admin@weatherbit.io",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "*******************\nPython Weather API - Pyweatherbit\n*******************\n\nThis is a wrapper for the Weatherbit API.\n\nThe Weatherbit IO allows you to access forecasts, current data, and historical data. This library wraps this functionality, and makes it accessible with Python.\n\n\nInstallation\n############\nYou should use pip to install pyweatherbit.\n\n* To install: pip install pyweatherbit\n* To remove:  pip uninstall pyweatherbit\n\nRequirements\n############\n\n- You need an API key to use it (https://weatherbit.io/). Sign up for the Free tier to get started.\n\n\nBasic Use\n#########\n\nFor additional information, refer to the Weatherbit.io documentation at https://www.weatherbit.io .\n\nTo use the wrapper:\n\n.. code-block:: python\n\n\tfrom weatherbit.api import Api\n\tapi_key = \"YOUR API KEY\"\n\tlat = 38.00\n\tlong = -125.75\n\n\tapi = Api(api_key)\n\n\t# Optional - Use HTTPS instead.\n\t# api.set_https(True)\n\n\t# Set the granularity of the API - Options: ['daily','hourly','3hourly']\n\t# Will only affect forecast requests.\n\tapi.set_granularity('3hourly')\n\n\tforecast = api.get_forecast(lat=lat, lon=long)\n\n\t# You can also query by city:\n\tforecast = api.get_forecast(city=\"Raleigh,NC\")\n\n\t# Or City, state, and country:\n\tforecast = api.get_forecast(city=\"Raleigh\", state=\"North Carolina\", country=\"US\")\n\n\t# To get a time series of temperature, and precipitation:\n\tprint forecast.get_series(['temp','precipitation'])\n\t...\n\nThe ``get_forecast()`` method requires named parameters. The current choices are either (lat=..., lon=...), (city=\"City,ST\"), or (city=..., state=..., country=...)\n\n\nAdvanced\n########\n\n*function* weatherbit.Api.get_forecast(lat=..., lon=...)\n---------------------------------------------------\n\nThis makes an API request and returns a **Forecast** object (see below).\n\nParameters:\n\t- **key** - Your API key from https://www.weatherbit.io.\n\t- **lat** - The latitude of the location for the forecast\n\t- **lon** - The longitude of the location for the forecast\n\t- **units** - (optional) A string of the preferred units of measurement. Choices are currently 'S' for scientific, 'M' for Metric, or 'I' for imperial units.\n\n*function* weatherbit.Api.get_forecast(city=..., state=..., country=...)\n---------------------------------------------------\n\nThis makes an API request and returns a **Forecast** object (see below).\n\nParameters:\n\t- **key** - Your API key from https://www.weatherbit.io.\n\t- **city** - The City to search by. This can be appended with a state like -> \"City,ST\".\n\t- **state** - (optional) State of location.\n\t- **country** - (optional) Country of location\n\t- **units** - (optional) A string of the preferred units of measurement. Choices are currently 'S' for scientific, 'M' for Metric, or 'I' for imperial units.\n\n*function* weatherbit.Api.get_history(lat=..., lon=...)\n---------------------------------------------------\n\nThis makes an API request and returns a **History** object (see below).\n\nParameters:\n\t- **key** - Your API key from https://www.weatherbit.io.\n\t- **lat** - The latitude of the location for the forecast\n\t- **lon** - The longitude of the location for the forecast\n\t- **units** - (optional) A string of the preferred units of measurement. Choices are currently 'S' for scientific, 'M' for Metric, or 'I' for imperial units.\n\n*function* weatherbit.Api.get_history(city=..., state=..., country=...)\n---------------------------------------------------\n\nThis makes an API request and returns a **History** object (see below).\n\nParameters:\n\t- **key** - Your API key from https://www.weatherbit.io.\n\t- **city** - The City to search by. This can be appended with a state like -> \"City,ST\".\n\t- **state** - (optional) State of location.\n\t- **country** - (optional) Country of location\n\t- **units** - (optional) A string of the preferred units of measurement. Choices are currently 'S' for scientific, 'M' for Metric, or 'I' for imperial units.\n\n----------------------------------------------------\n\n\n\n*class* forecastio.models.Forecast\n------------------------------------\n\nThe **Forecast** object, it contains both weather data and the HTTP response from Weatherbit\n\n**Attributes**\n\t- **response**\n\t\t- The Response object returned from requests request.get() method. See https://requests.readthedocs.org/en/latest/api/#requests.Response\n\t- **http_headers**\n\t\t- A dictionary of response headers. \n\t- **json**\n\t\t- A dictionary containing the json data returned from the API call.\n    - **city_name**\n    \t- City Name of the forecast points.\n    - **country_code**\n    \t- Country Code of the forecast points\n    - **state_code**\n    \t- State Code of the forecast points\n    - **lat**\n    \t- Latitude of the forecast points\n    - **lon**\n    \t- Longitude of the forecast points\n\t- **points**\n\t    - Array of forecast data Point objects.\n**Methods**\n\t- **get_series([var1, var2, ... , varn])**\n\t\t- Returns list of dicts sorted by datetime, containing the desired variables in a time series.\n\t- **update()**\n\t\t- Refreshes the forecast data by making a new request.\n\n----------------------------------------------------\n\n*class* forecastio.models.History\n------------------------------------\n\nThe **History** object, it contains both weather data and the HTTP response from Weatherbit\n\n**Attributes**\n\t- **response**\n\t\t- The Response object returned from requests request.get() method. See https://requests.readthedocs.org/en/latest/api/#requests.Response\n\t- **http_headers**\n\t\t- A dictionary of response headers. \n\t- **json**\n\t\t- A dictionary containing the json data returned from the API call.\n    - **city_name**\n    \t- City Name of the historical points.\n    - **country_code**\n    \t- Country Code of the historical points\n    - **state_code**\n    \t- State Code of the historical points\n    - **lat**\n    \t- Latitude of the historical points\n    - **lon**\n    \t- Longitude of the historical points\n\t- **points**\n\t    - Array of historical data Point objects.\n**Methods**\n\t- **get_series([var1, var2, ... , varn])**\n\t\t- Returns list of dicts sorted by datetime, containing the desired variables in a time series.\n\t- **update()**\n\t\t- Refreshes the forecast data by making a new request.\n\n----------------------------------------------------\n\n*class* weatherbit.models.Point\n---------------------------------------------\n\nContains data about a history or forecast over time.\n\n**Attributes**\n\t- **snow**\n\t\t- Total Snowfall.\n\t- **precip**\n\t\t- Total Liquid equivalent precipitation.\n\t- **snow6h**\n\t\t- 6h Total Snowfall.\n\t- **precip6h**\n\t\t- 6h Total Liquid equivalent precipitation.\n\t- **datetime**\n\t\t- Datetime object - Datetime  (UTC).\n\t- **wind_dir**\n\t\t- Average Wind direction in degrees (0-360).\n\t- **wind_spd**\n\t\t- Average Wind speed. \n\t- **rh**\n\t\t- Average Relative Humidity (%).\n\t- **clouds**\n\t\t- Average Cloud cover (%).\n\t- **slp**\n\t\t- Average Sea level pressure in millibars.\n\t- **temp**\n\t\t- Average Temperature.\n\t- **max_temp**\n\t\t- Maximum Temperature. (daily only)\n\t- **min_temp**\n\t\t- Minimum Temperature. (daily only)\n\t- **weather**\n\t    - Dict containing day/night weather icon, description, and code.\n\n----------------------------------------------------\n\n\n*class* weatherbit.models.SingleTimePoint\n---------------------------------------------\n\nContains data about a single point in time - Current weather data.\n\n**Attributes**\n\t- **snow**\n\t\t- Total Snowfall.\n\t- **precip**\n\t\t- Total Liquid equivalent precipitation.\n\t- **snow3h**\n\t\t- Total 3h Snowfall.\n\t- **precip3h**\n\t\t- Total 3h  Liquid equivalent precipitation.\n\t- **datetime**\n\t\t- Datetime object - Datetime  (UTC).\n\t- **sunrise**\n\t\t- Datetime object - Sunrise time (UTC).\n\t- **sunset**\n\t\t- Datetime object - Sunset time  (UTC).\n\t- **wind_dir**\n\t\t- Wind direction in degrees (0-360).\n\t- **wind_spd**\n\t\t- Wind speed. \n\t- **rh**\n\t\t- Relative Humidity (%).\n\t- **slp**\n\t\t- Sea level pressure in millibars.\n\t- **temp**\n\t\t- Temperature.\n\t- **clouds**\n\t\t- Cloud cover (%).\n\t- **visibility**\n\t\t- Visibility text (for METAR observations only).\n\t- **station**\n\t\t- Station ID.\n\t- **weather**\n\t    - Dict containing day/night weather icon, description, and code.\n\n----------------------------------------------------",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://www.weatherbit.io",
    "keywords": "weather API python wrapper weatherbit.io location",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pyweatherbit",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pyweatherbit/",
    "release_url": "https://pypi.org/project/pyweatherbit/1.0.0/",
    "requires_python": null,
    "summary": "A python weather api wrapper for the Weatherbit.io API.",
    "version": "1.0.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "50dfa4eda6124a5a97fc097afb76fc83",
          "sha256": "b190e45e898aa631a856d6a216501052a68e5bf8f8769873816e04f5c8e766ee"
        },
        "downloads": 18,
        "filename": "pyweatherbit-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "50dfa4eda6124a5a97fc097afb76fc83",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7022,
        "upload_time": "2017-02-28T23:09:03",
        "url": "https://files.pythonhosted.org/packages/76/d6/99bbcafb1a4615add093df2076b02e53670a44bca89a6482908b7937cce9/pyweatherbit-1.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "50dfa4eda6124a5a97fc097afb76fc83",
        "sha256": "b190e45e898aa631a856d6a216501052a68e5bf8f8769873816e04f5c8e766ee"
      },
      "downloads": 18,
      "filename": "pyweatherbit-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "50dfa4eda6124a5a97fc097afb76fc83",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7022,
      "upload_time": "2017-02-28T23:09:03",
      "url": "https://files.pythonhosted.org/packages/76/d6/99bbcafb1a4615add093df2076b02e53670a44bca89a6482908b7937cce9/pyweatherbit-1.0.0.tar.gz"
    }
  ]
}