{
  "info": {
    "author": "Globo.com",
    "author_email": "entretenimento1@corp.globo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "aio-alf |build-status|\n===========\n\naiohttp OAuth 2 Client\n---------------------\n\n`aio-alf` is a OAuth 2 Client base on the aiohttp's AsyncHTTPClient\n\nFeatures\n--------\n\n* Automatic token retrieving and renewing\n* Token expiration control\n* Automatic retry on status 401 (UNAUTHORIZED)\n\nUsage\n-----\n\nInitialize the client and use it as a AsyncHTTPClient object.\n\n.. code-block:: python\n\n    from aioalf.client import Client\n    from aioalf.httpclient import HTTPRequest\n\n    client = Client(\n        token_endpoint='http://example.com/token',\n        client_id='client-id',\n        client_secret='secret')\n\n    resource_uri = 'http://example.com/resource'\n\n    response = await client.request(\n        'POST',\n        resource_uri,\n        data='{\"name\": \"alf\"}',\n        headers={'Content-Type': 'application/json'}\n    )\n\n\nAlternatively one can pass directly a string to the fetch client\n\n.. code-block:: python\n\n    # ...\n    response = await client.request(\n        'POST',\n        'http://example.com/resource',\n        data='{\"name\": \"alf\"}',\n        headers={'Content-Type': 'application/json'}\n    )\n\n\n\nHow it works?\n-------------\n\nBefore any request the client tries to retrieve a token on the endpoint,\nexpecting a JSON response with the ``access_token`` and ``expires_in`` keys.\n\nThe client keeps the token until it is expired, according to the ``expires_in``\nvalue.\n\nAfter getting the token, the request is issued with a `Bearer authorization\nheader <http://tools.ietf.org/html/draft-ietf-oauth-v2-31#section-7.1>`_:\n\n.. code-block::\n\n    GET /resource/1 HTTP/1.1\n    Host: example.com\n    Authorization: Bearer token\n\nIf the request fails with a 401 (UNAUTHORIZED) status, a new token is retrieved\nfrom the endpoint and the request is retried. This happens only once, if it\nfails again the error response is returned.\n\n\nTroubleshooting\n---------------\n\nIn case of an error retrieving a token, the error response will be returned,\nthe real request won't happen.\n\n\nRelated projects\n----------------\n\nThis project tries to be an adaptation to aiohttp of\n`alf <https://github.com/globocom/alf>`_\n\n\n.. |build-status| image:: https://secure.travis-ci.org/globocom/aio-alf.png?branch=master\n                  :target: https://travis-ci.org/globocom/aio-alf\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/globocom/aio-alf",
    "keywords": "oauth client client_credentials aiohtpp",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aio-alf",
    "platform": "",
    "project_url": "https://pypi.org/project/aio-alf/",
    "release_url": "https://pypi.org/project/aio-alf/0.1.3/",
    "requires_dist": [
      "flake8; extra == 'tests'",
      "tox; extra == 'tests'",
      "ipdb; extra == 'tests'",
      "yanc; extra == 'tests'",
      "coverage; extra == 'tests'",
      "nose; extra == 'tests'",
      "bumpversion; extra == 'tests'",
      "asynctest; extra == 'tests'",
      "mock; extra == 'tests'",
      "aiohttp (>=2.3.0)"
    ],
    "requires_python": "",
    "summary": "OAuth Client For aiohttp",
    "version": "0.1.3"
  },
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "459b407b9f6d5072075bebd401f8d18d",
          "sha256": "0e2f15a40fee96e6f4c5e304b314e874b30ea219c2b66ebceaf8730b1ca39d0d"
        },
        "downloads": -1,
        "filename": "aio_alf-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "459b407b9f6d5072075bebd401f8d18d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 6729,
        "upload_time": "2017-12-03T11:28:34",
        "url": "https://files.pythonhosted.org/packages/a0/38/cf971bca561a3787bc91d51338ba2b49adee0447de8bcd295476df45c03a/aio_alf-0.1.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b3e8eb60960cf77305ad61898a9b70db",
          "sha256": "260c3b7ddc840d48622ce998fee7ec1410f706139a9e87a6e7444900f5138a5c"
        },
        "downloads": -1,
        "filename": "aio_alf-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3e8eb60960cf77305ad61898a9b70db",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 6725,
        "upload_time": "2017-12-03T11:28:36",
        "url": "https://files.pythonhosted.org/packages/77/b8/c592f0b519bb2907d2c055deb55e3def5dd82d972137d5f991e79e216df7/aio_alf-0.1.3-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "901f126d2d45d0ed0b268b51403c55fc",
          "sha256": "79e9cd8ae13d66662e089af5d571eb6157fdeaa101da75787b213073a24246b6"
        },
        "downloads": -1,
        "filename": "aio-alf-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "901f126d2d45d0ed0b268b51403c55fc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4000,
        "upload_time": "2017-12-03T11:28:38",
        "url": "https://files.pythonhosted.org/packages/a4/32/8d42c9f453d1b639a1f964d1f6d3da5341f385a2a51c84e658aa893f9ba4/aio-alf-0.1.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "459b407b9f6d5072075bebd401f8d18d",
        "sha256": "0e2f15a40fee96e6f4c5e304b314e874b30ea219c2b66ebceaf8730b1ca39d0d"
      },
      "downloads": -1,
      "filename": "aio_alf-0.1.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "459b407b9f6d5072075bebd401f8d18d",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 6729,
      "upload_time": "2017-12-03T11:28:34",
      "url": "https://files.pythonhosted.org/packages/a0/38/cf971bca561a3787bc91d51338ba2b49adee0447de8bcd295476df45c03a/aio_alf-0.1.3-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "b3e8eb60960cf77305ad61898a9b70db",
        "sha256": "260c3b7ddc840d48622ce998fee7ec1410f706139a9e87a6e7444900f5138a5c"
      },
      "downloads": -1,
      "filename": "aio_alf-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b3e8eb60960cf77305ad61898a9b70db",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 6725,
      "upload_time": "2017-12-03T11:28:36",
      "url": "https://files.pythonhosted.org/packages/77/b8/c592f0b519bb2907d2c055deb55e3def5dd82d972137d5f991e79e216df7/aio_alf-0.1.3-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "901f126d2d45d0ed0b268b51403c55fc",
        "sha256": "79e9cd8ae13d66662e089af5d571eb6157fdeaa101da75787b213073a24246b6"
      },
      "downloads": -1,
      "filename": "aio-alf-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "901f126d2d45d0ed0b268b51403c55fc",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4000,
      "upload_time": "2017-12-03T11:28:38",
      "url": "https://files.pythonhosted.org/packages/a4/32/8d42c9f453d1b639a1f964d1f6d3da5341f385a2a51c84e658aa893f9ba4/aio-alf-0.1.3.tar.gz"
    }
  ]
}