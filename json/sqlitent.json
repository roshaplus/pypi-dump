{
  "info": {
    "author": "Tobias Ammann",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Topic :: Database :: Front-Ends"
    ],
    "description": "sqlitent - namedtuples inside sqlite databases\n==============================================\n\n**THIS PROJECT IS CURRENTLY A STUB WITHOUT CODE**\n\nsqlitent provides a set-like interface on top of SQLite_. Values can\nbe None, int, float, str, and bytes. Tuple types are distinguished by\nname (case sensitive!) and number of fields. Documentation_.\n\nsqlitent was inspired by sqlitedict_ and kv_.\n\nExample\n-------\n\n::\n\n    >>> from collections import namedtuple\n    >>> from sqlitent import sqlitent, fuzzy\n    >>> db = sqlitent('database.sqlite', autocommit=True)\n    >>>\n    >>> Point = namedtuple('Point', ['x', 'y'])\n    >>> p1 = Point(11, y=22)\n    >>> p1\n    Point(x=11, y=22)\n    >>> p2 = p._replace(x=33)\n    Point(x=33, y=22)\n    >>> Car = namedtuple('Car', [\n    ...     'brand',\n    ...     'model',\n    ...     'configuration',\n    ...     'hp',\n    ... ])\n    >>> c = Car('Audi', 'A1', 'Sport 1.8 TFSI S tronic', 192)\n    >>> c\n    Car(brand='Audi', model='A1', configuration='Sport 1.8 TFSI S tronic', hp=192)\n    >>> db.register(Point, Car)  # necessary to read tuples\n\nIn addition to the methods which the set type provides, there are convenience\nmethods (insert, delete) that handle multiple tuples at once.\n\n::\n\n    >>> db.add(p1)\n    >>> db.remove(p1)\n    >>> db.insert(p1, p2)\n    >>> db.delete(p1, p2)\n    >>> db.insert([p1], [[p1], p2])\n    >>> db.insert(c)\n    >>> db.insert([c, p1])  # tuples may be of different types\n\nOf course, sqlitent also supports membership checking and counting:\n\n::\n\n    >>> d = c._replace(configuration='1.6 TDI S tronic', hp=116)\n    >>> d in db\n    False\n    >>> len(db)\n    3\n    >>> db.insert(d)\n    >>> d in db\n    True\n    >>> len(db)  # ...now we have 4 unique tuples in the database.\n    4\n\nThere are various ways to retreive tuples from the database:\n\n::\n\n    >>> p3 = db.one(Point)  # not deterministic\n    >>> p3\n    Point(x=11, y=22)\n    >>> p3 = db.one(p3)  # deterministic (since p3 is fully specified)\n    >>> p3 in db\n    True\n    >>> db.pop(p3)  # remove and return\n    Point(x=11, y=22)\n    >>> p3 in db\n    False\n    >>> db.pop(Point)  # not deterministic\n    Point(x=33, y=22)\n    >>> db.pop(Point)  # returns None since there are no more Point tuples\n    >>>\n\nObviously there are also functions to retrieve or pop multiple values out\nof the database. sqlitent also supports fuzzy matching on text fields and\nfilter functions:\n\n::\n\n    >>> cs = db.many(Car)  # get all cars\n    >>> cs\n    <generator object _sqlitent_iter at 0x10f39bb48>\n    >>> list(cs)\n    [Car(brand='Audi', model='A1', configuration='Sport 1.8 TFSI S tronic', hp=192),\n     Car(brand='Audi', model='A1', configuration='1.6 TDI S tronic', hp=116)]\n    >>> d = list(db.popmany(Car, configuration=fuzzy('%TDI%')))\n    >>> any(x in db for x in d)  # we removed all TDI cars from the database\n    False\n    >>> list(db.many(Car, hp=lambda v: v > 150))\n    [Car(brand='Audi', model='A1', configuration='Sport 1.8 TFSI S tronic', hp=192)]\n    >>> list(db.many(Car, brand='Kia'))\n    []\n\nThere is a locking facility that uses SQLite's transaction API:\n\n::\n\n    >>> with db.lock():\n    ...     p = db.pop(Point, x=11)\n    ...     db.add(p._replace(x=p.x+1))\n\nThe code is MIT licensed.\n\n.. _Sqlite: https://sqlite.org/\n.. _Documentation: https://digitalmensch.github.io/sqlitent/\n.. _sqlitedict: https://github.com/RaRe-Technologies/sqlitedict\n.. _kv: https://github.com/mgax/kv\n.. _code: https://github.com/digitalmensch/sqlitent",
    "docs_url": null,
    "download_url": "https://pypi.python.org/pypi/sqlitent",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/digitalmensch/sqlitent",
    "keywords": "sqlite,persistent set,namedtuple",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sqlitent",
    "platform": "any",
    "project_url": "https://pypi.org/project/sqlitent/",
    "release_url": "https://pypi.org/project/sqlitent/0.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "namedtuples inside set-like sqlite databases",
    "version": "0.0.1"
  },
  "releases": {
    "0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "71f953df1eb2534ceec6e85d09a47279",
          "sha256": "d6afe2bde1e3ced954aae4417aeb1a410280f47f70bdc3917ed52b7a9ea1aeca"
        },
        "downloads": -1,
        "filename": "sqlitent-0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "71f953df1eb2534ceec6e85d09a47279",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2862,
        "upload_time": "2018-01-05T04:44:52",
        "url": "https://files.pythonhosted.org/packages/17/7a/0b63cd13fa0bf9c61400d5a1ae3e5eb7e6876a5cbe8e5309b7057234ef83/sqlitent-0.0.tar.gz"
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "faab8dbd6518ce1ef5defdc44fb62415",
          "sha256": "1054968431e4b2dc0c534b19536ed5e15f8e22bc1fdbf85eeb32ef65b2b53953"
        },
        "downloads": -1,
        "filename": "sqlitent-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "faab8dbd6518ce1ef5defdc44fb62415",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2951,
        "upload_time": "2018-01-05T05:33:12",
        "url": "https://files.pythonhosted.org/packages/9d/3e/9ae306bd4e086536d4a43dfaf6ef34bb019fe341f216ef78ba01e7ef216a/sqlitent-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "faab8dbd6518ce1ef5defdc44fb62415",
        "sha256": "1054968431e4b2dc0c534b19536ed5e15f8e22bc1fdbf85eeb32ef65b2b53953"
      },
      "downloads": -1,
      "filename": "sqlitent-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "faab8dbd6518ce1ef5defdc44fb62415",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 2951,
      "upload_time": "2018-01-05T05:33:12",
      "url": "https://files.pythonhosted.org/packages/9d/3e/9ae306bd4e086536d4a43dfaf6ef34bb019fe341f216ef78ba01e7ef216a/sqlitent-0.0.1.tar.gz"
    }
  ]
}