{
  "info": {
    "author": "Jussi Vatjus-Anttila",
    "author_email": "Jussi.Vatjus-Anttila@arm.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Embedded Systems"
    ],
    "description": "# mbed-flasher\n\n## Description\n\nmbed-flasher is a simple Python-based tool for flashing single or multiple boards.\nIt provides a simple Command Line Interface and Python API for flashing.\n\nThe purpose is to provide a clean and simple library that is easy to integrate to other tools.\nIt can be easily developed further to support flashing in mbed OS and other platforms.\nDevelopers can also use it as a standalone tool for flashing their development boards.\n\n\n## Installation\n\nTo install the flasher, use:\n\n`python setup.py install`\n\nTo install the flasher in development mode:\n\n`python setup.py develop`\n\n## Usage\n\nThis tool has been tested and verified to work with Windows 7 and Ubuntu (14.04 LTS) Linux.\n\nDevices used in verification: NXP K64F, Nucleo F401RE, BBC micro:bit.\n\nSee the actual usage documentation [here](doc/usage.md).\n\n## Help\n\n**Main help**\n\n```\n/> mbedflash --help\nusage: mbedflash [-h] [-v] [-s] <command> ...\n\nFor specific command help, run: mbedflash <command> --help\n\noptional arguments:\n  -h, --help     show this help message and exit\n  -v, --verbose  Verbose level... repeat up to three times.\n  -s, --silent   Silent - only errors will be printed.\n\ncommand:\n  <command>      command help\n    list         Prints a list of supported platforms.\n    flashers     Prints a list of supported flashers.\n    version      Display version information\n    flash        Flash given resource\n    reset        Reset given resource\n    erase        Erase given resource\n\n```\n\n**Flash help**\n\n```\n/>mbedflash flash --help\nusage: mbedflash flash [-h] [-i INPUT] [--tid TARGET_ID] [-t PLATFORM_NAME]\n                       [--no-reset]\n                       [method]\n\npositional arguments:\n  method                <simple|pyocd|edbg>, used for flashing\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        Binary input to be flashed.\n  --tid TARGET_ID, --target_id TARGET_ID\n                        Target to be flashed, ALL will flash all connected\n                        devices with given platform-name, also multiple\n                        targets can be given. Does not continue flashing\n                        next device in case of failures. Short target_id\n                        matches boards by prefix\n  -t PLATFORM_NAME, --platform_name PLATFORM_NAME\n                        Platform of the target device(s)\n  --no-reset            Do not reset device before or after flashing\n\n```\n\n**Erase help**\n\n```\nc:\\>mbedflash erase --help\nusage: mbedflash erase [-h] [--tid TARGET_ID] [method]\n\npositional arguments:\n  method                <simple|pyocd|edbg>, used for erase\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --tid TARGET_ID, --target_id TARGET_ID\n                        Target to be erased or ALL, also multiple targets can\n                        be given. Short target_id matches boards by prefix\n\n```\n\n**Reset help**\n\n```\nc:\\>mbedflash reset --help\nusage: mbedflash reset [-h] [--tid TARGET_ID] [method]\n\npositional arguments:\n  method                <simple|pyocd|edbg>, used for reset\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --tid TARGET_ID, --target_id TARGET_ID\n                        Target to be reset or ALL, also multiple targets can\n                        be given. Short target_id matches boards by prefix\n\n```\n\n## Running unit tests\n\nRequired pre-installed packages: coverage, mock\n\n```\nsudo pip install coverage mock\n```\n\nTo execute the tests:\n```\ncoverage run -m unittest discover -s test\n```\n\nTo generate a coverage report:\n\n```\ncoverage html\n```\n\n## Creating the installer\n\n**For Windows:**\n```\npython setup.py build\npython setup.py bdist_msi\n```\n\n**For Linux:**\n```\npython setup.py build\n//for rpm package\npython setup.py bdist_rpm\n```\nRead [more on installers](https://docs.python.org/2/distutils/builtdist.html).\n",
    "docs_url": null,
    "download_url": "https://api.github.com/repos/ARMmbed/mbed-flasher/tarball/v0.6.3",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ARMmbed/mbed-flasher",
    "keywords": "",
    "license": "Copyright 2016 ARM Limited\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mbed-flasher",
    "platform": "",
    "project_url": "https://pypi.org/project/mbed-flasher/",
    "release_url": "https://pypi.org/project/mbed-flasher/0.6.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "mbed-flasher",
    "version": "0.6.3"
  },
  "releases": {
    "0.6.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "794ff93da317c80c89587f61f2e7852b",
          "sha256": "fde67193b53fac1c74e5eee30195c097070c7e5392dfece8acbcdb5618156964"
        },
        "downloads": -1,
        "filename": "mbed-flasher-0.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "794ff93da317c80c89587f61f2e7852b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29175,
        "upload_time": "2018-02-09T08:53:14",
        "url": "https://files.pythonhosted.org/packages/7a/54/9270a40e13f48f34e4ca511659f2dfd2c563099ed06cf30d92dd80c4f951/mbed-flasher-0.6.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "794ff93da317c80c89587f61f2e7852b",
        "sha256": "fde67193b53fac1c74e5eee30195c097070c7e5392dfece8acbcdb5618156964"
      },
      "downloads": -1,
      "filename": "mbed-flasher-0.6.3.tar.gz",
      "has_sig": false,
      "md5_digest": "794ff93da317c80c89587f61f2e7852b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 29175,
      "upload_time": "2018-02-09T08:53:14",
      "url": "https://files.pythonhosted.org/packages/7a/54/9270a40e13f48f34e4ca511659f2dfd2c563099ed06cf30d92dd80c4f951/mbed-flasher-0.6.3.tar.gz"
    }
  ]
}