{
  "info": {
    "author": "Lenson A. Pellouchoud, Amanda Fournier, Fang Ren, Yuriy Kolotovsky, Ronald Pandolfi, Apurva Mehta, Christopher Tassone",
    "author_email": "paws-developers@slac.stanford.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: Public Domain",
      "Programming Language :: Python :: 2.7",
      "Topic :: Scientific/Engineering"
    ],
    "description": "paws: the Platform for Automated Workflows by SSRL \n==================================================\n\n\nDescription\n-----------\n\n`paws` stands for the Platform for Automated Workflows by SSRL.\nIt was conceived to serve as a fast, lean, and modular \nworkflow manager for image-like data.\n\n`paws` provides machinery \nto build and execute data processing workflows,\nincluding an ever-growing library of Operations \nthat connect together to form a workflow \nwith somewhat of a directed graph structure.\n\nThe core modules of `paws` \nare pure Python and have very few dependencies.\n`paws` exposes a simple API\nthat interacts with these core modules,\nfor users to write scripts based on `paws`,\nor to import the `paws` API to perform\nback-end computations for other applications or widgets.\nThe current state of `paws` is alpha-\nnothing has been tested, \nand even less has been optimized.\n\nThe `paws` package also includes a graphical application \nbuilt on the `PySide` `Qt` bindings.\nThrough this GUI, users can build and configure workflows, \nexamine existing `paws` Operations,\ndevelop new `paws` Operations,\nand visualize the outputs of their workflows.\nVarious simplified GUIs are currently in development\nfor interacting with specific workflows. \n\n\nExample\n-------\n\nHere is an example of how to use `paws` \nto write a data processing script.\nNote: at the time this was written, \nthe example does not display in github.\nOpen the source file for this README\nto see the example.\nComplete instructions are included in the user manual. \nSee the `doc` directory of this repository.\n\nThis script performs a common diffraction data processing workflow:\nit reads some calibration parameters (in Nika format),\nconverts them to PONI (PyFAI) format,\nreads an image, uses the calibration parameters \nto calibrate and reduce the image with PyFAI,\nand windows the useful part of the data.\nAfter executing, the useful data is extracted\nand plotted using matplotlib.\n\n.. code-block:: python\n    import paws.api\n    from matplotlib import pyplot as plt\n\n    mypaw = paws.api.start()\n\n    # Start a workflow, name it\n    mypaw.add_wf('test')\n\n    # Instantiate operations, name them, add them to the workflow\n    mypaw.add_op('read_cal','INPUT.CALIBRATION.NikaToPONI')\n    mypaw.add_op('read_img','INPUT.TIF.LoadTif')\n    mypaw.add_op('cal_reduce','PROCESSING.CALIBRATION.CalReduce')\n    mypaw.add_op('window','PACKAGING.WindowZip')\n\n    # Set up the input routing: \n    # WXDToPONI reads a WXDiff calibration result \n    # and translates it to PONI (PyFAI) format\n    mypaw.set_input('read_cal', 'wxd_file',\n    src='filesystem', tp='path', val='/path/to/file.nika')\n\n    # LoadTif loads a tif image\n    mypaw.set_input('read_img', 'path',\n    src='filesystem', tp='path', val='/path/to/image.tif')\n\n    # CalReduce takes a PONI dict and an image,\n    # calibrates and reduces to I(q) vs. q\n    mypaw.set_input('cal_reduce', 'poni_dict',\n    src='workflow', tp='reference', val='read_cal.outputs.poni_dict')\n    mypaw.set_input('cal_reduce', 'image_data',\n    src='workflow', tp='reference', val='read_img.outputs.image_data')\n\n    # WindowZip takes x and y data and a window (xmin<x<xmax),\n    # outputs the x and y data that live within the window\n    mypaw.set_input('window','x',\n    src='workflow', tp='reference', val='cal_reduce.outputs.q')\n    mypaw.set_input('window','y',\n    src='workflow', tp='reference', val='cal_reduce.outputs.I')\n    mypaw.set_input('window','x_min', src='text', tp='float', val=0.02)\n    mypaw.set_input('window','x_max', src='text', tp='float', val=0.6)\n\n    # Execute the workflow\n    mypaw.execute()\n\n    # Grab the reduced data\n    q_I_out = mypaw.get_output('window','x_y_window')\n\n    # Plot the reduced data\n    plt.semilogy(q_I_out[:,0],q_I_out[:,1])\n    plt.show()\n\n\nInstallation\n------------\n\nTODO: put instructions here on how to install paws from PyPI.\nThe core modules, being pure Python, \nwill be very easy to install from PyPI (not yet implemented).\nBecause they depend on PySide,\ninstalling the gui modules will be somewhat more complex, \nfor those who wish to use the gui.\n\nContribution\n------------\n\nContribution to `paws` is encouraged and appreciated.\nWhether you are a researcher looking to contribute operations to the `paws` library,\nor a software developer looking to contribute to the platform itself,\nthe `paws` development team would love to hear from you.\n\nSee the manual in the `doc` directory for basic instructions on contributing,\nand/or get in touch with the `paws` development team\nat `paws-developers@slac.stanford.edu`.\n\n\nLicense\n-------\n\nThe BSD-like license attached to this software \ncan be found in the LICENSE file in the source code root directory.\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/slaclab/paws/",
    "keywords": "data analysis workflow",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pypaws",
    "platform": "",
    "project_url": "https://pypi.org/project/pypaws/",
    "release_url": "https://pypi.org/project/pypaws/0.6.0/",
    "requires_dist": [
      "pyyaml"
    ],
    "requires_python": ">=2.6, <3",
    "summary": "the Platform for Automated Workflows by SSRL",
    "version": "0.6.0"
  },
  "releases": {
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2fa6bfa36861129f52ca1903ba2692ed",
          "sha256": "79c0a24db1a67deb01e4ff6011082edf208e790425ded76589d2e1905d89284f"
        },
        "downloads": 0,
        "filename": "pypaws-0.6.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "2fa6bfa36861129f52ca1903ba2692ed",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 240586,
        "upload_time": "2017-07-07T06:18:43",
        "url": "https://files.pythonhosted.org/packages/7c/4c/f3c2818c369684c4487ceb8a1ad324c2576ac325f6af6af51dcf619e13ea/pypaws-0.6.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "bc74667b5c24eba8cf85cad9460c68c5",
          "sha256": "ce90079bee95ac7a35ba06dfc893c6865870fde13224909a472ffde860ff4c8b"
        },
        "downloads": 0,
        "filename": "pypaws-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bc74667b5c24eba8cf85cad9460c68c5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 103834,
        "upload_time": "2017-07-07T06:18:46",
        "url": "https://files.pythonhosted.org/packages/b4/0c/420707670bf5e43892a2917cd201b6679431d3e6d9ba430b98a352275a78/pypaws-0.6.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2fa6bfa36861129f52ca1903ba2692ed",
        "sha256": "79c0a24db1a67deb01e4ff6011082edf208e790425ded76589d2e1905d89284f"
      },
      "downloads": 0,
      "filename": "pypaws-0.6.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "2fa6bfa36861129f52ca1903ba2692ed",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 240586,
      "upload_time": "2017-07-07T06:18:43",
      "url": "https://files.pythonhosted.org/packages/7c/4c/f3c2818c369684c4487ceb8a1ad324c2576ac325f6af6af51dcf619e13ea/pypaws-0.6.0-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "bc74667b5c24eba8cf85cad9460c68c5",
        "sha256": "ce90079bee95ac7a35ba06dfc893c6865870fde13224909a472ffde860ff4c8b"
      },
      "downloads": 0,
      "filename": "pypaws-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bc74667b5c24eba8cf85cad9460c68c5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 103834,
      "upload_time": "2017-07-07T06:18:46",
      "url": "https://files.pythonhosted.org/packages/b4/0c/420707670bf5e43892a2917cd201b6679431d3e6d9ba430b98a352275a78/pypaws-0.6.0.tar.gz"
    }
  ]
}