{
  "info": {
    "author": "Andy Peace",
    "author_email": "andrew.peace@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: MIT License"
    ],
    "description": "Z-Wave to MQTT bridge\n=====================\n\nThis utility publishes to MQTT topics when sensor reports are published\nfrom multilevel-sensor devices on a Z-Wave network. So far it has been\ntested with the Aeotec Z-Stick and MultiSensor 6 devices.\n\nIt uses a configuration file, ``/etc/sensors/config``, to determine the\nMQTT host and username/password as well as topic prefix to use when\npublishing sensor updates.\n\nWhen a sensor sends a reading update, that update is published to the\ntopic ``topic_prefix + \"/ZWaveNode<n>\"``, where ``<n>`` is the node ID\nof the node that published the update. The message will contain a JSON\nobject containing a key whose name is the type of value updated\n(currently 'temperature', 'humidity', 'luminance', and 'ultraviolet' are\nsupported) and the value that was provided.\n\nInstallation\n============\n\nYou can install the Python package using ``pip``, e.g.\n``pip install .``.\n\nTo run at startup you can use the provided example ``systemd`` file,\nwhich needs to be installed in the ``/etc/systemd/system`` directory.\nNote that the provided example assumes that there is a user called\n``zwave`` that will have access to the appropriate serial device for the\nZ-Stick (usually ``/dev/ttyACM0``), and will create working files in\nthat user's home directory. You can create this user using, for example,\nthe ``adduser`` command:\n\n::\n\n    sudo adduser --system --no-create-home --ingroup dialout zwave",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/adpeace/zwave-mqtt-bridge.git",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zwave-mqtt-bridge",
    "platform": "",
    "project_url": "https://pypi.org/project/zwave-mqtt-bridge/",
    "release_url": "https://pypi.org/project/zwave-mqtt-bridge/0.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Bridge Z-Wave to MQTT",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4500f733ddc7d8aaab469a4b0aaed855",
          "sha256": "d34873309800da34203044ebea697c9c6b4c0f236e250f0f5f3b67970388d2de"
        },
        "downloads": -1,
        "filename": "zwave_mqtt_bridge-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4500f733ddc7d8aaab469a4b0aaed855",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3772,
        "upload_time": "2017-12-28T22:41:01",
        "url": "https://files.pythonhosted.org/packages/32/a8/89fc27610170d29d60dd6ddeccb2dd279871bf359cc895d526db5ac79ae9/zwave_mqtt_bridge-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4500f733ddc7d8aaab469a4b0aaed855",
        "sha256": "d34873309800da34203044ebea697c9c6b4c0f236e250f0f5f3b67970388d2de"
      },
      "downloads": -1,
      "filename": "zwave_mqtt_bridge-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4500f733ddc7d8aaab469a4b0aaed855",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3772,
      "upload_time": "2017-12-28T22:41:01",
      "url": "https://files.pythonhosted.org/packages/32/a8/89fc27610170d29d60dd6ddeccb2dd279871bf359cc895d526db5ac79ae9/zwave_mqtt_bridge-0.0.1.tar.gz"
    }
  ]
}