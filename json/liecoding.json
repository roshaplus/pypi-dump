{
  "info": {
    "author": "Remi Rampin",
    "author_email": "remirampin@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Communications",
      "Topic :: Education",
      "Topic :: Multimedia :: Graphics :: Presentation",
      "Topic :: System :: Shells",
      "Topic :: Terminals",
      "Topic :: Utilities"
    ],
    "description": "LieCoding\n=========\n\nLieCoding is a helper tool for live coding demos. Rather than having to type commands from memory, or showing a video, LieCoding is an intermediate option that will use the original program but type the input for you when you press a button.\n\nYou simply have to install LieCoding and provide it with a simple file listing the commands you'll have to enter. Press a button, and LieCoding enters the next input.\n\nExample session file\n--------------------\n\nSession files are YAML files listing the inputs. A few other actions can be performed, like printing fake output, customizing the typing speed, and more to come.\n\n..  code-block:: yaml\n\n    # A session contains multiple shortcuts that are triggered through Ctrl-T\n    shortcuts:\n      # Shortcuts are ordered, starting at the first input and advancing through\n      # the list each time 'Ctrl-T t' is used\n      # Each input also has a name, which is used to quickly jump somewhere in the\n      # list using 'Ctrl-T d <name><enter>'\n\n      # A shortcut only needs the input to type for you\n      # By default, slow=true which means that the input will be entered slowly, as\n      # if typed on the keyboard\n      - hello:\n        - input: \"echo \\\"Hello, world!\\\"\"\n\n      # A more complex shortcut, with multiple steps\n      - fake:\n        # This enters the first part of the command (slowly)\n        - input: \"echo \\\"Hello, \"\n        # Then enters more of it, but hides it from the terminal (by default, when\n        # entering text, it is \"echoed\" to the terminal, so we can see it)\n        # If hidden=true, by default slow=false\n        - input: \"Remi\"\n          hidden: true\n        # This is an output, meaning text that gets printed to the terminal, not\n        # sent to the command running in it. This way, we enter a command, but show\n        # another!\n        - output: \"Vicky\"\n          slow: true\n        # Enter the rest of the command\n        - input: \"!\\\"\"\n        # End effect: it will look like the following command is entered:\n        #   echo \"Hello, Vicky!\"\n        # while in fact the shell will receive and run the following command:\n        #   echo \"Hello, Remi!\"\n\n      # Another command. Note that for it to be run directly, a \\n has to be added\n      - exit:\n        - input: \"exit\\n\"",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://gitlab.com/remram44/liecoding",
    "keywords": "live,demo,live demo,coding,live coding",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "liecoding",
    "platform": "",
    "project_url": "https://pypi.org/project/liecoding/",
    "release_url": "https://pypi.org/project/liecoding/0.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Helper for live coding demos: terminal wrapper that will type commands for you, as you press a shortcut",
    "version": "0.0"
  },
  "releases": {
    "0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9870e91b20dcab4da9c2a0c2dca98f5b",
          "sha256": "01ad14ac13d10b14cebbe1a3b105d55f1a023d1f4f0a21c61f1f670f652c0a9d"
        },
        "downloads": -1,
        "filename": "liecoding-0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9870e91b20dcab4da9c2a0c2dca98f5b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3571,
        "upload_time": "2017-10-13T18:33:12",
        "url": "https://files.pythonhosted.org/packages/64/ad/ad7087bb4193dd578f70102fbe48abaca4cbec73106e111752d6a8446577/liecoding-0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9870e91b20dcab4da9c2a0c2dca98f5b",
        "sha256": "01ad14ac13d10b14cebbe1a3b105d55f1a023d1f4f0a21c61f1f670f652c0a9d"
      },
      "downloads": -1,
      "filename": "liecoding-0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9870e91b20dcab4da9c2a0c2dca98f5b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3571,
      "upload_time": "2017-10-13T18:33:12",
      "url": "https://files.pythonhosted.org/packages/64/ad/ad7087bb4193dd578f70102fbe48abaca4cbec73106e111752d6a8446577/liecoding-0.0.tar.gz"
    }
  ]
}