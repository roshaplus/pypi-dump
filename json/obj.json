{
  "info": {
    "author": "Bart Thate",
    "author_email": "bthate@dds.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Topic :: Utilities"
    ],
    "description": "OBJ\n###\n\nOBJ is a package that provides an Object class that can save/load from disk, thus providing persistence to objects.\n\nFiles are saved with a timestamp in their filenames, so that searching in a time related manner becomes possible.\n\nModules are provided to query saved objects as well as to run objects with a thread to manage their state.\n\nOBJ has a \"no-clause MIT license\" that should be the most liberal free license you can get at the year 2018.\n\nvariables\n=========\n\ncfg = Config()\n\ncfg.workdir = os.path.join(os.path.expanduser(\"~\"), \".obj\")\n\nyou can change cfg.workdir if you need to save your objects in an other\ndirectory then the default directory.\n\nmethods\n=======\n\ncache(path: str) \u2192 Object \n\n    load this object from cache or read it from disk.\n\nclear() \u2192 None\n\n    clear the ready flag.\n\nformat(keys=[], skip=[], nokeys=False, reverse=False) \u2192 str\n\n    return a displayable string from a list of attributes.\n\ngrep(val: str) \u2192 Object\n\n    return a new Object with the values that match provided val argument.\n\nisSet() \u2192 bool\n\n    check whether ready flag is set.\n\nload(path: str, force=False, skip=[], full=True) \u2192 Object\n\n    load a json file into this object. use skip as a list of keys to skip.\n\nloads(jsonstring: str) \u2192  Object\n\n    update with deconstructed (dict) json string.\n\nmerge(obj: Object) \u2192  Object\n\n    merge an object into this on, only set keys that are already present.\n\nnice() \u2192 str\n\n    return a nicyfied JSON dump.\n\nprepare() \u2192 str\n\n    prepare the object and return a string containing the \u201cdata\u201d part.\n\npure() \u2192 str\n\n    return a sliced (no _ keys), indent=4, sort_key is True, json dump\n\nread(path: str) \u2192 str\n\n    read a json dump from given path, returning the json string with comments stripped.\n\nready() \u2192 bool\n\n    signal this object as \u201cready\u201d.\n\nregister(key, val, force=False) \u2192 None\n\n    register key, value - throw an exception if key is already set.\n\nsave(path=\"\") \u2192 str\n\n    save a static (fix filepath) version of this object.\n\nsearch(name: str) \u2192 Object\n\n    search this objects keys skipping keys that start with \u201c_\u201d.\n\nsync(path='') \u2192 str\n\n    sync to disk using provided/created path. this sync() method does the real saving to disk.\n\nupgrade(input: dict) \u2192 None\n\n    upgrade this object with a dictionary, only setting attributes if they do not exist.\n\nwait(timeout=None) \u2192 list\n\n    wait for this object\u2019s ready flag and join all thread that have been started in handling this object,\n\nexceptions\n==========\n\nclass ESET(Exception):\n\n    key is already set.\n\nclass ENOJSON(Exception):\n\n    the provided string is not JSON.\n\nclass EBORDER(Exception):\n\n    attemped to write outside of the workdir.\n\nclass EFILENAME(Exception):\n\n    provided string is not a filename.\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://bitbucket.org/bthate/obj",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "obj",
    "platform": "",
    "project_url": "https://pypi.org/project/obj/",
    "release_url": "https://pypi.org/project/obj/3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "timestamped JSON objects.",
    "version": "3"
  },
  "releases": {
    "1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b77fad61509a561a931d1d69b0a93d38",
          "sha256": "198c749f0bd2dd0e92870bf406281d4790d7f2dc11a5eba3ca3485f4af981432"
        },
        "downloads": -1,
        "filename": "obj-1.tar.gz",
        "has_sig": false,
        "md5_digest": "b77fad61509a561a931d1d69b0a93d38",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6291,
        "upload_time": "2018-01-16T17:40:47",
        "url": "https://files.pythonhosted.org/packages/34/11/9e7f5d781b363937efdcbc0189f5576d25296b6a82c653ab16f8117e379b/obj-1.tar.gz"
      }
    ],
    "2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a9b9de89c588a7189cbaf093f278232e",
          "sha256": "c5a305637aa2706dbd72f21de2a358b3122c7990014f5c8bd7c0c86e5b1de8bb"
        },
        "downloads": -1,
        "filename": "obj-2.tar.gz",
        "has_sig": false,
        "md5_digest": "a9b9de89c588a7189cbaf093f278232e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6896,
        "upload_time": "2018-01-23T13:55:05",
        "url": "https://files.pythonhosted.org/packages/38/5c/fa35b8bab1325ec3fab01e1c85fcde0d0e1ade70c8f583140faa42e21ec4/obj-2.tar.gz"
      }
    ],
    "3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a41ad606f061267bdb58abfe97d5189c",
          "sha256": "c8d8fa87df09695654977fbe14cc65965061b99737c3d1856ef9c2b3564adb3c"
        },
        "downloads": -1,
        "filename": "obj-3.tar.gz",
        "has_sig": false,
        "md5_digest": "a41ad606f061267bdb58abfe97d5189c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14181,
        "upload_time": "2018-02-04T01:25:33",
        "url": "https://files.pythonhosted.org/packages/04/d9/efc5b071ce39a783b6c50531c2679a792c658e84a831dc1ed049cf82a3fc/obj-3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a41ad606f061267bdb58abfe97d5189c",
        "sha256": "c8d8fa87df09695654977fbe14cc65965061b99737c3d1856ef9c2b3564adb3c"
      },
      "downloads": -1,
      "filename": "obj-3.tar.gz",
      "has_sig": false,
      "md5_digest": "a41ad606f061267bdb58abfe97d5189c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 14181,
      "upload_time": "2018-02-04T01:25:33",
      "url": "https://files.pythonhosted.org/packages/04/d9/efc5b071ce39a783b6c50531c2679a792c658e84a831dc1ed049cf82a3fc/obj-3.tar.gz"
    }
  ]
}