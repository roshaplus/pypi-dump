{
  "info": {
    "author": "Laurent P. Ren\u00e9 de Cotret",
    "author_email": "laurent.renedecotret@mail.mcgill.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering"
    ],
    "description": "npstreams\n=========\n\n.. image:: https://img.shields.io/appveyor/ci/LaurentRDC/npstreams/master.svg\n    :target: https://ci.appveyor.com/project/LaurentRDC/npstreams\n    :alt: Windows Build Status\n.. image:: https://readthedocs.org/projects/npstreams/badge/?version=latest\n    :target: http://npstreams.readthedocs.io\n    :alt: Documentation Build Status\n.. image:: https://img.shields.io/pypi/v/npstreams.svg\n    :target: https://pypi.python.org/pypi/npstreams\n    :alt: PyPI Version\n\nnpstreams is an open-source Python package for streaming NumPy array operations. \nThe goal is to provide tested routines that operate on streams (or generators) of arrays instead of dense arrays.\nSome routines are CUDA-enabled, based on `PyCUDA <https://documen.tician.de/pycuda/>`_'s GPUArray (work-in-progress).\n\nStreaming reduction operations (sums, averages, etc.) can be implemented in constant memory, which in turns\nallows for easy parallelization.\n\nThis approach has been a huge boon when working with lots of images; the images are read\none-by-one from disk and combined/processed in a streaming fashion.\n\nThis package is developed in conjunction with other software projects in the \n`Siwick research group <http://www.physics.mcgill.ca/siwicklab/>`_.\n\nMotivating Example\n------------------\n\nConsider the following snippet to combine 50 images \nfrom an iterable :code:`source`::\n\n\timport numpy as np\n\n\timages = np.empty( shape = (2048, 2048, 50) )\n\tfrom index, im in enumerate(source):\n\t    images[:,:,index] = im\n\t\n\tavg = np.average(images, axis = 2)\n\nIf the :code:`source` iterable provided 1000 images, the above routine would\nnot work on most machines. Moreover, what if we want to transform the images \none by one before averaging them? What about looking at the average while it \nis being computed? Let's look at an example::\n\n\timport numpy as np\n\tfrom npstreams import iaverage\n\tfrom scipy.misc import imread\n\n\tstream = map(imread, list_of_filenames)\n\taveraged = iaverage(stream)\n\nAt this point, the generators :code:`map` and :code:`iaverage` are 'wired'\nbut will not compute anything until it is requested. We can look at the average evolve::\n\n    import matplotlib.pyplot as plt\n    for avg in average:\n        plt.imshow(avg); plt.show()\n\nWe can also use :code:`last` to get at the final average::\n\n\tfrom npstreams import last\n\n\ttotal = last(averaged) # average of the entire stream\n\nStreaming Functions\n-------------------\n\nnpstreams comes with some streaming functions built-in. Some examples:\n\n* Numerics : :code:`isum`, :code:`iprod`, :code:`isub`, etc.\n* Statistics : :code:`iaverage` (weighted mean), :code:`ivar` (single-pass variance), etc.\n* Stacking : :code:`iflatten`, :code:`istack`\n\nMore importantly, npstreams gives you all the tools required to build your own streaming function.\nAll routines are documented in the `API Reference on readthedocs.io <http://npstreams.readthedocs.io>`_.\n\nCreating your own: Streaming Maximum\n-------------------------------------\n\nLet's create a streaming maximum function for a stream. First, we have to choose \nhow to handle NaNs:\n\n* If we want to propagate NaNs, we should use :code:`numpy.maximum`\n* If we want to ignore NaNs, we should use :code:`numpy.fmax`\n\nBoth of those functions are binary ufuncs, so we can use :code:`ireduce_ufunc`. We will\nalso want to make sure that anything in the stream that isn't an array will be made into one\nusing the :code:`array_stream` decorator.\n\nPutting it all together::\n\n    from npstreams import array_stream, ireduce_ufunc\n    from numpy import maximum, fmax\n\n    @array_stream\n    def imax(arrays, axis = -1, ignore_nan = False, **kwargs):\n        \"\"\"\n        Streaming maximum along an axis.\n\n        Parameters\n        ----------\n        arrays : iterable\n            Stream of arrays to be compared.\n        axis : int or None, optional\n            Axis along which to compute the maximum. If None, \n            arrays are flattened before reduction.\n        ignore_nan : bool, optional\n            If True, NaNs are ignored. Default is False.\n        \n        Yields\n        ------\n        online_max : ndarray\n        \"\"\"\n        ufunc = fmax if ignore_nan else maximum\n        yield from ireduce_ufunc(arrays, ufunc, axis = axis, **kwargs)\n\nThis will provide us with a streaming function, meaning that we can look at the progress\nas it is being computer. We can also create a function that returns the max of the stream\nlike :code:`numpy.ndarray.max()` using the :code:`npstreams.last` function::\n\n    from npstreams import last\n\n    def smax(*args, **kwargs):  # s for stream\n        \"\"\"\n        Maximum of all arrays in a stream, along an axis.\n\n        Parameters\n        ----------\n        arrays : iterable\n            Stream of arrays to be compared.\n        axis : int or None, optional\n            Axis along which to compute the maximum. If None, \n            arrays are flattened before reduction.\n        ignore_nan : bool, optional\n            If True, NaNs are ignored. Default is False.\n        \n        Returns\n        -------\n        max : scalar or ndarray\n        \"\"\"\n        return last(imax(*args, **kwargs)\n\nFuture Work\n-----------\nSome of the features I want to implement in this package in the near future:\n\n* Benchmark section : how does the performance compare with NumPy functions, as array size increases?\n* Optimize the CUDA-enabled routines\n* More functions : more streaming functions borrowed from NumPy and SciPy.\n\nAPI Reference\n-------------\n\nThe `API Reference on readthedocs.io <http://npstreams.readthedocs.io>`_ provides API-level documentation, as \nwell as tutorials.\n\nInstallation\n------------\n\nThe only requirement is NumPy. To have access to CUDA-enabled routines, PyCUDA must also be\ninstalled. npstreams is available on PyPI; it can be installed with `pip <https://pip.pypa.io>`_.::\n\n    python -m pip install npstreams\n\nTo install the latest development version from `Github <https://github.com/LaurentRDC/npstreams>`_::\n\n    python -m pip install git+git://github.com/LaurentRDC/npstreams.git\n\nEach version is tested against Python 3.4, 3.5 and 3.6. If you are using a different version, tests can be run\nusing the standard library's `unittest` module.\n\nSupport / Report Issues\n-----------------------\n\nAll support requests and issue reports should be\n`filed on Github as an issue <https://github.com/LaurentRDC/npstreams/issues>`_.\n\nLicense\n-------\n\nnpstreams is made available under the BSD License, same as NumPy. For more details, see `LICENSE.txt <https://github.com/LaurentRDC/npstreams/blob/master/LICENSE.txt>`_.",
    "docs_url": null,
    "download_url": "http://github.com/LaurentRDC/npstreams",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "streaming,numpy,math",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "npstreams",
    "platform": "",
    "project_url": "https://pypi.org/project/npstreams/",
    "release_url": "https://pypi.org/project/npstreams/1.0.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Streaming operations on NumPy arrays",
    "version": "1.0.0"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1b0212a66e5bca5558754e7736fa5ca8",
          "sha256": "91b2d9a1df7eef8b82192dc4c753a7800ae2e79ccbf018bcd96dc3137a6c8a29"
        },
        "downloads": -1,
        "filename": "npstreams-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1b0212a66e5bca5558754e7736fa5ca8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 10620,
        "upload_time": "2017-07-31T13:11:40",
        "url": "https://files.pythonhosted.org/packages/b6/8f/500cf7535e9f6dabd2cc72656e7d9ac092b896b902a2e23155ec9040c2ff/npstreams-0.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "35ec2443581801f70b0268c96d7b4c63",
          "sha256": "08b4acac2d073ca113f81709bfb48ced17eb8379846017fe50666f9dc83e7cf1"
        },
        "downloads": -1,
        "filename": "npstreams-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "35ec2443581801f70b0268c96d7b4c63",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7565,
        "upload_time": "2017-07-31T13:11:45",
        "url": "https://files.pythonhosted.org/packages/74/f0/2baae7f5514a0fe8e7d5ec7a7d3920429037e0a77939167304427f96cbc7/npstreams-0.1.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "58e105cbbab5b2876a79e34ff10c5aa1",
          "sha256": "36e7278619686a48c5979984038386676199a6a9a4d887cccbfd3d382db3b460"
        },
        "downloads": -1,
        "filename": "npstreams-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "58e105cbbab5b2876a79e34ff10c5aa1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7632,
        "upload_time": "2017-07-31T13:15:16",
        "url": "https://files.pythonhosted.org/packages/6a/fb/08c621ca612c782807f9af74b57835eb71fe7ecf5405a44b5eb499a4dd07/npstreams-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bc819600469687fbb9902648e5f11923",
          "sha256": "090c431b22d71017f9c14d769d3e33451080839ff2260784b704bc067aa01a90"
        },
        "downloads": -1,
        "filename": "npstreams-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bc819600469687fbb9902648e5f11923",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10132,
        "upload_time": "2017-07-31T19:03:31",
        "url": "https://files.pythonhosted.org/packages/1b/b9/dbfab2507240649a35f45b6101b18c15d69dc9ee36dfff0b023e1c8e0a9d/npstreams-0.1.2.tar.gz"
      }
    ],
    "0.1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f269b7832a981d278adaa2e2e45297d1",
          "sha256": "2ee696434dcd7835da953cfe6cdf92a7d0833851fa7a0b75bba5e709cd1e1e0a"
        },
        "downloads": -1,
        "filename": "npstreams-0.1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f269b7832a981d278adaa2e2e45297d1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1585006,
        "upload_time": "2017-08-02T12:46:59",
        "url": "https://files.pythonhosted.org/packages/ed/4a/10e7ba4f2ffb018d3561a52fdbd88c463c3473825784c07906886d93f915/npstreams-0.1.2.1.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2ea96b5a40d002cf75650b14077a770d",
          "sha256": "7d4cd757675d7f412637d6685e6385d7c7dbdceb83b487a0eb861ec6120f9e3e"
        },
        "downloads": -1,
        "filename": "npstreams-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2ea96b5a40d002cf75650b14077a770d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1587600,
        "upload_time": "2017-08-03T20:02:41",
        "url": "https://files.pythonhosted.org/packages/63/f3/d3bb709f45f004ba87a302a4d8eb764c7b4db07cbe6832b5d03e2d310e64/npstreams-0.1.3.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "38e826507b2ed07fb6a705bd4434679e",
          "sha256": "4cfe88fdc27a0a59bacb6ea9408a03cc587a2e1407463218cf9853aa3fe7f37c"
        },
        "downloads": -1,
        "filename": "npstreams-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "38e826507b2ed07fb6a705bd4434679e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1590737,
        "upload_time": "2017-08-04T13:56:34",
        "url": "https://files.pythonhosted.org/packages/2c/57/ec133e26ad79a9ff87cfca44736e91184e28a36e5be33c6a1307123f603f/npstreams-0.1.4.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c608eaa55714580553393c04ceab020c",
          "sha256": "64e09b98f2c765b3ad274ce027792e6e08b74888a68d55d8137226663140f483"
        },
        "downloads": -1,
        "filename": "npstreams-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c608eaa55714580553393c04ceab020c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1595964,
        "upload_time": "2017-08-05T17:46:23",
        "url": "https://files.pythonhosted.org/packages/e3/49/d053a24adf2c13840827c5a8a03b4c318def46bea76eb6caf58c8151439b/npstreams-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "43a3ee8318d99a93ae14db8ce31ced66",
          "sha256": "df91a9f7ec103d65214bf3503eeb47c4f3669b7b215c6c190dc00e8f1ad3ce21"
        },
        "downloads": -1,
        "filename": "npstreams-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "43a3ee8318d99a93ae14db8ce31ced66",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1597019,
        "upload_time": "2017-08-15T18:10:51",
        "url": "https://files.pythonhosted.org/packages/ef/63/2f3b2e52342149d7444790b451d1ff34c7031652a92c937b2fa9122bf48e/npstreams-0.3.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "19caafaf9e15688bd65e6e3d8fdf11a7",
          "sha256": "9e785b806197833a50e7cc8f4e22d16ab3e17a76bd70c64d06793c5a3e71a3f1"
        },
        "downloads": -1,
        "filename": "npstreams-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "19caafaf9e15688bd65e6e3d8fdf11a7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1599618,
        "upload_time": "2017-08-23T14:07:05",
        "url": "https://files.pythonhosted.org/packages/77/53/53a34ad4be0ebe842d4407c4868e9dcc1a658b7a0ac8ae1b667f14af6c3d/npstreams-0.4.tar.gz"
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f39d810106577405e77d11b3d2fa4ea4",
          "sha256": "186f7ad72be0670625c4365b90882abe70930bcf46788415c8e63a9b7c034a24"
        },
        "downloads": -1,
        "filename": "npstreams-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f39d810106577405e77d11b3d2fa4ea4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1600919,
        "upload_time": "2017-10-16T20:07:12",
        "url": "https://files.pythonhosted.org/packages/1a/61/021f79817e010adfea78e3ef3b2fbc4049b4cff470f37c54d32e68bb1599/npstreams-1.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f39d810106577405e77d11b3d2fa4ea4",
        "sha256": "186f7ad72be0670625c4365b90882abe70930bcf46788415c8e63a9b7c034a24"
      },
      "downloads": -1,
      "filename": "npstreams-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f39d810106577405e77d11b3d2fa4ea4",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 1600919,
      "upload_time": "2017-10-16T20:07:12",
      "url": "https://files.pythonhosted.org/packages/1a/61/021f79817e010adfea78e3ef3b2fbc4049b4cff470f37c54d32e68bb1599/npstreams-1.0.0.tar.gz"
    }
  ]
}