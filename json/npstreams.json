{
  "info": {
    "author": "Laurent P. Ren\u00e9 de Cotret",
    "author_email": "laurent.renedecotret@mail.mcgill.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering"
    ],
    "description": "npstreams\n=========\n\n.. image:: https://img.shields.io/appveyor/ci/LaurentRDC/npstreams/master.svg\n    :target: https://ci.appveyor.com/project/LaurentRDC/npstreams\n    :alt: Windows Build Status\n.. image:: https://readthedocs.org/projects/npstreams/badge/?version=latest\n    :target: http://npstreams.readthedocs.io\n    :alt: Documentation Build Status\n.. image:: https://img.shields.io/pypi/v/npstreams.svg\n    :target: https://pypi.python.org/pypi/npstreams\n    :alt: PyPI Version\n\nnpstreams is an open-source Python package for streaming NumPy array operations. \nThe goal is to provide tested routines that operate on streams (or generators) of arrays instead of dense arrays.\n\nStreaming reduction operations (sums, averages, etc.) can be implemented in constant memory, which in turns\nallows for easy parallelization. Some routines in npstreams are parallelized in this way.\n\nIn my experience, this approach has been a godsend when working with images; the images are read\none-by-one from disk and combined/processed in a streaming fashion.\n\nMotivating Example\n------------------\n\nConsider the following snippet to combine 50 images \nfrom an iterable :code:`source`::\n\n\timport numpy as np\n\n\timages = np.empty( shape = (2048, 2048, 50) )\n\tfrom index, im in enumerate(source):\n\t    images[:,:,index] = im\n\t\n\tavg = np.average(images, axis = 2)\n\nIf the :code:`source` iterable provided 1000 images, the above routine would\nnot work on most machines. Moreover, what if we want to transform the images \none by one before averaging them? What about looking at the average while it \nis being computed? Let's look at an example::\n\n\timport numpy as np\n\tfrom npstreams import iaverage\n\tfrom scipy.misc import imread\n\n\tstream = map(imread, list_of_filenames)\n\taveraged = iaverage(stream)\n\nAt this point, the generators :code:`map` and :code:`iaverage` are 'wired'\nbut will not compute anything until it is requested. We can look at the average evolve::\n\n    import matplotlib.pyplot as plt\n    for avg in average:\n        plt.imshow(avg); plt.show()\n\nWe can also use :code:`last` to get at the final average::\n\n\tfrom npstreams import last\n\n\ttotal = last(averaged) # average of the entire stream\n\nStreaming Functions\n-------------------\n\nnpstreams comes with some streaming functions built-in. Some examples:\n\n* Numerics : :code:`isum`, :code:`iprod`, :code:`isub`, etc.\n* Statistics : :code:`iaverage` (weighted mean), :code:`ivar` (single-pass variance), etc.\n* Stacking : :code:`iflatten`, :code:`istack`\n\nAll routines are documented in the `API Reference on readthedocs.io <http://npstreams.readthedocs.io>`_.\n\nMaking your own Streaming Functions\n-----------------------------------\n\nAny NumPy reduction function can be transformed into a streaming function using the\n:code:`stream_reduce` function. For example::\n\n    from npstreams import stream_reduce\n    from numpy import prod\n\n    def streaming_prod(stream, axis, **kwargs):\n        \"\"\" Streaming product along axis \"\"\"\n        yield from stream_reduce(stream, npfunc = prod, axis = axis, **kwargs)\n\nThe above :code:`streaming_prod` will accumulate (and yield) the result of the operation\nas arrays come in the stream. \n\nThe two following snippets should return the same result::\n\n    from numpy import prod, stack\n    \n    dense = stack(stream, axis = -1) \n    from_numpy = prod(dense, axis = 0)  # numpy.prod = numpy.multiply.reduce\n\n.. code::\n\n    from npstreams import last\n\n    from_stream = last(streaming_prod(stream, axis = 0))\n\nHowever, :code:`streaming_prod` will work on 100 GB of data in a single line of code.\n\nFuture Work\n-----------\nSome of the features I want to implement in this package in the near future:\n\n* Benchmark section : how does the performance compare with NumPy functions, as array size increases?\n* Cython : cythonizing the underlying routines would probably help.\n* More functions : more streaming functions borrowed from NumPy and SciPy.\n\nAPI Reference\n-------------\n\nThe `API Reference on readthedocs.io <http://npstreams.readthedocs.io>`_ provides API-level documentation, as \nwell as tutorials.\n\nInstallation\n------------\n\nscikit-ued is available on PyPI; it can be installed with `pip <https://pip.pypa.io>`_.::\n\n    python -m pip install npstreams\n\nTo install the latest development version from `Github <https://github.com/LaurentRDC/npstreams>`_::\n\n    python -m pip install git+git://github.com/LaurentRDC/npstreams.git\n\nEach version is tested against Python 3.4, 3.5 and 3.6. If you are using a different version, tests can be run\nusing the standard library's `unittest` module.\n\nSupport / Report Issues\n-----------------------\n\nAll support requests and issue reports should be\n`filed on Github as an issue <https://github.com/LaurentRDC/npstreams/issues>`_.\n\nLicense\n-------\n\nnpstreams is made available under the BSD License, same as NumPy. For more details, see `LICENSE.txt <https://github.com/LaurentRDC/npstreams/blob/master/LICENSE.txt>`_.",
    "docs_url": null,
    "download_url": "http://github.com/LaurentRDC/npstreams",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "streaming,numpy,math",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "npstreams",
    "platform": "",
    "project_url": "https://pypi.org/project/npstreams/",
    "release_url": "https://pypi.org/project/npstreams/0.1.4/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Streaming operations on NumPy arrays",
    "version": "0.1.4"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1b0212a66e5bca5558754e7736fa5ca8",
          "sha256": "91b2d9a1df7eef8b82192dc4c753a7800ae2e79ccbf018bcd96dc3137a6c8a29"
        },
        "downloads": 0,
        "filename": "npstreams-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1b0212a66e5bca5558754e7736fa5ca8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 10620,
        "upload_time": "2017-07-31T13:11:40",
        "url": "https://files.pythonhosted.org/packages/b6/8f/500cf7535e9f6dabd2cc72656e7d9ac092b896b902a2e23155ec9040c2ff/npstreams-0.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "35ec2443581801f70b0268c96d7b4c63",
          "sha256": "08b4acac2d073ca113f81709bfb48ced17eb8379846017fe50666f9dc83e7cf1"
        },
        "downloads": 0,
        "filename": "npstreams-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "35ec2443581801f70b0268c96d7b4c63",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7565,
        "upload_time": "2017-07-31T13:11:45",
        "url": "https://files.pythonhosted.org/packages/74/f0/2baae7f5514a0fe8e7d5ec7a7d3920429037e0a77939167304427f96cbc7/npstreams-0.1.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "58e105cbbab5b2876a79e34ff10c5aa1",
          "sha256": "36e7278619686a48c5979984038386676199a6a9a4d887cccbfd3d382db3b460"
        },
        "downloads": 0,
        "filename": "npstreams-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "58e105cbbab5b2876a79e34ff10c5aa1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7632,
        "upload_time": "2017-07-31T13:15:16",
        "url": "https://files.pythonhosted.org/packages/6a/fb/08c621ca612c782807f9af74b57835eb71fe7ecf5405a44b5eb499a4dd07/npstreams-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bc819600469687fbb9902648e5f11923",
          "sha256": "090c431b22d71017f9c14d769d3e33451080839ff2260784b704bc067aa01a90"
        },
        "downloads": 0,
        "filename": "npstreams-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bc819600469687fbb9902648e5f11923",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10132,
        "upload_time": "2017-07-31T19:03:31",
        "url": "https://files.pythonhosted.org/packages/1b/b9/dbfab2507240649a35f45b6101b18c15d69dc9ee36dfff0b023e1c8e0a9d/npstreams-0.1.2.tar.gz"
      }
    ],
    "0.1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f269b7832a981d278adaa2e2e45297d1",
          "sha256": "2ee696434dcd7835da953cfe6cdf92a7d0833851fa7a0b75bba5e709cd1e1e0a"
        },
        "downloads": 0,
        "filename": "npstreams-0.1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f269b7832a981d278adaa2e2e45297d1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1585006,
        "upload_time": "2017-08-02T12:46:59",
        "url": "https://files.pythonhosted.org/packages/ed/4a/10e7ba4f2ffb018d3561a52fdbd88c463c3473825784c07906886d93f915/npstreams-0.1.2.1.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2ea96b5a40d002cf75650b14077a770d",
          "sha256": "7d4cd757675d7f412637d6685e6385d7c7dbdceb83b487a0eb861ec6120f9e3e"
        },
        "downloads": 0,
        "filename": "npstreams-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2ea96b5a40d002cf75650b14077a770d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1587600,
        "upload_time": "2017-08-03T20:02:41",
        "url": "https://files.pythonhosted.org/packages/63/f3/d3bb709f45f004ba87a302a4d8eb764c7b4db07cbe6832b5d03e2d310e64/npstreams-0.1.3.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "38e826507b2ed07fb6a705bd4434679e",
          "sha256": "4cfe88fdc27a0a59bacb6ea9408a03cc587a2e1407463218cf9853aa3fe7f37c"
        },
        "downloads": 0,
        "filename": "npstreams-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "38e826507b2ed07fb6a705bd4434679e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1590737,
        "upload_time": "2017-08-04T13:56:34",
        "url": "https://files.pythonhosted.org/packages/2c/57/ec133e26ad79a9ff87cfca44736e91184e28a36e5be33c6a1307123f603f/npstreams-0.1.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "38e826507b2ed07fb6a705bd4434679e",
        "sha256": "4cfe88fdc27a0a59bacb6ea9408a03cc587a2e1407463218cf9853aa3fe7f37c"
      },
      "downloads": 0,
      "filename": "npstreams-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "38e826507b2ed07fb6a705bd4434679e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 1590737,
      "upload_time": "2017-08-04T13:56:34",
      "url": "https://files.pythonhosted.org/packages/2c/57/ec133e26ad79a9ff87cfca44736e91184e28a36e5be33c6a1307123f603f/npstreams-0.1.4.tar.gz"
    }
  ]
}