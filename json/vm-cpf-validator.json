{
  "info": {
    "author": "Riverfount - Vicente Mar\u00e7al",
    "author_email": "vicente.marcal@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "CPF Validator\n=============\n\n.. image:: https://coveralls.io/repos/github/Riverfount/cpf_validator/badge.svg?branch=master\n   :target: https://coveralls.io/github/Riverfount/cpf_validator?branch=master\n   :alt: overage Status\n\n.. image:: https://travis-ci.org/Riverfount/cpf_validator.svg?branch=master\n   :target: https://travis-ci.org/Riverfount/cpf_validator?branch=master\n   :alt: Build Status\n\n.. image:: https://landscape.io/github/Riverfount/cpf_validator/master/landscape.svg?style=flat\n   :target: https://landscape.io/github/Riverfount/cpf_validator/master\n   :alt: Code Health\n\nThis library contains three modules to validate a Brazilian CPF. Each of\nmodules can be used separately.\n\n1. cpf\\_is\\_digits\n------------------\n\nThis first module receives the Brazilian CPF and returns True if it\ncontains only digits or False if not.\n\nThe syntax to use this module is:\n\n::\n\n    if cpf_is_digits(value):\n        print('The only contains digits')\n    else:\n        print('The value do not contains only digits, please type it only digits')\n\n2. cpf\\_has\\_correct\\_length\n----------------------------\n\nThis second module receives the Brazilian CPF and returns True if the\nlength of CPF is 11 or False if not.\n\nThe syntax to use this module is:\n\n::\n\n    if cpf_has_correct_length(value):\n        print('The contains 11 digits')\n    else:\n        print('The value do not contains 11 digits, please type it a correct length of digits')\n\n3. cpf\\_is\\_valid\n-----------------\n\nThe last module receives the Brazilian CPF and returns True if the CPF\nis valid or False if not valid.\n\nThe syntax to use this module is:\n\n::\n\n    if cpf_is_valid(value):\n        print('The CPF is valid')\n    else:\n        print('The CPF is not valid, please type it a valid CPF')\n\n.. |Build Status| image:: https://travis-ci.org/Riverfount/cpf_validator.svg?branch=master\n   :target: https://travis-ci.org/Riverfount/cpf_validator\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Riverfount/cpf_validator",
    "keywords": "Brazilian CPF Validation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vm-cpf-validator",
    "platform": "",
    "project_url": "https://pypi.org/project/vm-cpf-validator/",
    "release_url": "https://pypi.org/project/vm-cpf-validator/0.0.1/",
    "requires_dist": [
      "peppercorn"
    ],
    "requires_python": "",
    "summary": "This package contains three modules that validates the Brazilian CPF",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c5cd5c27feac67db8cd47da342033535",
          "sha256": "3945a271da736af92494c16baaa34478d4151a023db25ee1749d5baa81e0e4d7"
        },
        "downloads": 0,
        "filename": "vm_cpf_validator-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c5cd5c27feac67db8cd47da342033535",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 4086,
        "upload_time": "2017-07-20T17:41:38",
        "url": "https://files.pythonhosted.org/packages/0c/37/8cfc51e4142df46e45b35c42cc49649aa4acb4aab5f1140b2274f3718e52/vm_cpf_validator-0.0.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "00726d199c55740454c799f4d7c14fe5",
          "sha256": "b3812cf60543d3a95843847ad8472b1abcd76af9ab86d1c2318a89e4a583ec92"
        },
        "downloads": 0,
        "filename": "vm_cpf_validator-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "00726d199c55740454c799f4d7c14fe5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3467,
        "upload_time": "2017-07-20T17:41:39",
        "url": "https://files.pythonhosted.org/packages/60/d3/ac28511ef130ed293a5646dd7ae0457a79ab2f464aa2b708e9f33309896f/vm_cpf_validator-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c5cd5c27feac67db8cd47da342033535",
        "sha256": "3945a271da736af92494c16baaa34478d4151a023db25ee1749d5baa81e0e4d7"
      },
      "downloads": 0,
      "filename": "vm_cpf_validator-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c5cd5c27feac67db8cd47da342033535",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 4086,
      "upload_time": "2017-07-20T17:41:38",
      "url": "https://files.pythonhosted.org/packages/0c/37/8cfc51e4142df46e45b35c42cc49649aa4acb4aab5f1140b2274f3718e52/vm_cpf_validator-0.0.1-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "00726d199c55740454c799f4d7c14fe5",
        "sha256": "b3812cf60543d3a95843847ad8472b1abcd76af9ab86d1c2318a89e4a583ec92"
      },
      "downloads": 0,
      "filename": "vm_cpf_validator-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "00726d199c55740454c799f4d7c14fe5",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3467,
      "upload_time": "2017-07-20T17:41:39",
      "url": "https://files.pythonhosted.org/packages/60/d3/ac28511ef130ed293a5646dd7ae0457a79ab2f464aa2b708e9f33309896f/vm_cpf_validator-0.0.1.tar.gz"
    }
  ]
}