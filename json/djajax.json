{
  "info": {
    "author": "Adam Hill",
    "author_email": "adamghill@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# djajax\nSome helper utilities for building Ajax applications without throwing out all the nicities of Django out the window (or moving wholesale to something like Django REST Framework).\n\n## Models\n\n### SerializableMixin\nA model mixin that gives an easy way to serialize a model or queryset to JSON.\n\n#### to_json\nDefault dictionary representation of a model that can later be converted to JSON. May be overriden in a model by defining `to_json` in the model.\n\n#### serialize (static method)\nSerializes a queryset/model into a JSON-ifable dictionary. Will paginate a queryset if necessary.\n\n## Template tags\n\n### jsonify filter\nOutputs a dictionary input a JSON object. Returns an empty obj if the template variable is empty.\n\n```html\n<script type=\"text/javascript\">\nwindow.onload = function() {\n    (function() {\n        var djajaxJsonData = {{ json|jsonify }};\n        console.log('djajaxJsonData', djajaxJsonData);\n    })();\n}();\n</script>\n```\n\n### djajax_urls tag\nOutputs a dictionary of reverse lookups to urls for use in Javascript. Urls must be specified in DJAJAX_URL_REVERSE_LOOKUPS and must not need arguments.\n\nsettings.py\n```python\nDJAJAX_URL_REVERSE_LOOKUPS = [\n    'login',\n    'www:index',\n]\n```\n\nindex.html\n```html\n<script src=\"{% static 'js/djajax.js' %}\"></script>\n\n<script type=\"text/javascript\">\nwindow.onload = function() {\n    (function() {\n        var djajaxUrls = {% djajax_urls %};\n        console.log('djajaxUrls', djajaxUrls);\n    })();\n}();\n</script>\n```\n\n## HTTP responses\n\n### JsonHttpResponse\nReturns a JSON response with the correct headers set.\n\n## View helpers\n\n### is_idempotent\nReturns whether the request is idempotent (changes state on the server) or not.\n\n### response\nReturns an appropriate AJAX response for an AJAX request.\n\n### get_from_post_or_get\nAttempts to first get a value from the POST query dictionary, and if that fails, to look at the GET querystring.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/adamghill/djajax",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djajax",
    "platform": "",
    "project_url": "https://pypi.org/project/djajax/",
    "release_url": "https://pypi.org/project/djajax/0.0.1/",
    "requires_dist": [
      "Django"
    ],
    "requires_python": "",
    "summary": "Helper utilities for working with Ajax in Django",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "57f1786124ae29cd115903d89326ec83",
          "sha256": "201e566ce95ef21aa151d82121ba8699b347363eb8f131d585f5dca1160c7177"
        },
        "downloads": -1,
        "filename": "djajax-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57f1786124ae29cd115903d89326ec83",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10045,
        "upload_time": "2018-02-04T04:09:28",
        "url": "https://files.pythonhosted.org/packages/57/b1/c4e6a3944d361d6d20291c38b6975fcd74336df602a3aadf0751a1da2c46/djajax-0.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6341bdb542b18bbf498916732875099e",
          "sha256": "06092f0646ba312bd55c5a3128471756370b6cedb54028507a0b5cf9ffe8a9f6"
        },
        "downloads": -1,
        "filename": "djajax-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6341bdb542b18bbf498916732875099e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7701,
        "upload_time": "2018-02-04T04:09:29",
        "url": "https://files.pythonhosted.org/packages/83/cb/8a81131b33658950da01acd886795b86c2086aaf8991dede255f69f5a3fd/djajax-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "57f1786124ae29cd115903d89326ec83",
        "sha256": "201e566ce95ef21aa151d82121ba8699b347363eb8f131d585f5dca1160c7177"
      },
      "downloads": -1,
      "filename": "djajax-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "57f1786124ae29cd115903d89326ec83",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 10045,
      "upload_time": "2018-02-04T04:09:28",
      "url": "https://files.pythonhosted.org/packages/57/b1/c4e6a3944d361d6d20291c38b6975fcd74336df602a3aadf0751a1da2c46/djajax-0.0.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "6341bdb542b18bbf498916732875099e",
        "sha256": "06092f0646ba312bd55c5a3128471756370b6cedb54028507a0b5cf9ffe8a9f6"
      },
      "downloads": -1,
      "filename": "djajax-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6341bdb542b18bbf498916732875099e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7701,
      "upload_time": "2018-02-04T04:09:29",
      "url": "https://files.pythonhosted.org/packages/83/cb/8a81131b33658950da01acd886795b86c2086aaf8991dede255f69f5a3fd/djajax-0.0.1.tar.gz"
    }
  ]
}