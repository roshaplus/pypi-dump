{
  "info": {
    "author": "michaelb",
    "author_email": "michaelpb@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Multimedia :: Graphics :: Graphics Conversion"
    ],
    "description": "Omni-Converter - omnic\n======================\n\n.. figure:: https://travis-ci.org/michaelpb/omnic.svg?branch=master\n   :alt: Travis CI\n\n   Travis CI\n\nMostly stateless microservice for generating on-the-fly thumbs and\npreviews of a wide variety of file types. Fully extendable to create any\narbitrary conversion pipelines.\n\nOmni Converter (which can be shortened to OmniC or Omnic) is free\nsoftware, licensed under the GPL 3.0.\n\n**WIP WARNING:** Omnic is still 'unreleased software', a work in\nprogress. The API is subject to rapid change. I intend to release the\nfirst stable version before the end of this year (2017).\n\nInstallation\n============\n\nInstalling directly on your host system\n---------------------------------------\n\n**NOTE: Only Python 3.5+ is supported.**\n\nThe first step is simply installing the Python package:\n\n::\n\n    pip3 install omnic\n\nYou likely will want to install a few more python dependencies\n\n::\n\n    pip3 install sanic pillow jinja2 requests\n\nDepending on your needs, you will probably want to install a variety of\nother system-level package conversion programs. This might include:\n\n-  ``unoconv`` - for converting many document formats - Debian package:\n   ``sudo apt-get install unoconv``\n-  ``imagemagick`` - for raster image conversion and manipulation -\n   Debian package: ``sudo apt-get install imagemagick``\n-  ``inkscape`` - for vector conversion and manipulation - Debian\n   package: ``sudo apt-get install inkscape``\n\nAdditionally, converters specific to certain domains might be useful:\n\n-  ``meshlab`` - for converting between 3D model types - Debian package:\n   ``sudo apt-get install meshlab``\n-  ``jsc3d`` - for rendering 3D models in software - node package:\n   ``npm install -g jsc3d``\n-  ``obabel`` - for converting between chemical molecule filetypes -\n   Debian package: ``sudo apt-get install obabel``\n\nTODO: Using Docker\n------------------\n\nThe ideal situation would be to build a (bulky) docker image to support\nALL built-in converters, a ready-to-use kitchen-sink of file conversion.\nThis has not yet been done.\n\nUsage\n=====\n\nThere are 3 principle ways to use Omnic\n\n1. Commandline conversion and thumbnailing system\n-------------------------------------------------\n\nWhile OmniConverter was written for the web, the server components are\noptional. Thus it doubles as a handy \"swiss-army knife\" of file\nconversion and thumbnail generation.\n\n-  Example: Create thumb of an ``.doc`` file with:\n   ``omnic convert input.doc thumb.jpg:200x200``\n\n2. Ready-to-use conversion and thumbnailing web-server\n------------------------------------------------------\n\nThe most common usage of Omnic is as a microservice, supplying\non-the-fly file format converter and preview or thumb generator,\n\n-  Running a server is as simple as ``omnic runserver``\n\n-  Override values in the ``omnic/default_settings.py`` by specifying an\n   ``OMNIC_SETTINGS`` to point to an import path to your custom settings\n   module.\n\n3. General purpose media conversion web-framework\n-------------------------------------------------\n\nOmnic is written in a very modular format, with a structure inspired\npartially by Django. This allows you to tailor-make your own converters,\nusing it as a library, without forking. You can easily swap out any\npart, also.\n\n1. Create a new Python project as you normally would, including\n   ``omnic`` in your ``requirements.txt``.\n\n2. As with the above, override settings with a custom ``settings.py``\n\n3. Write your own converters and include them in ``settings.py``. No\n   full documentation or scaffolding is available for this yet: Take a\n   look at the ``omnic.builtin`` for examples on writing your own\n   converters or services.\n\nLaunching the admin interface\n=============================\n\nOmnic comes bundled with a read-only admin interface. It's main purpose\nis a sort of configuration sanity check, and queue monitoring, but it\nalso serves as a great demo. Once installed, get the omnic server\nrunning:\n\n::\n\n    omnic runserver\n\nNow point your browser at ``http://localhost:8080/admin/`` for the admin\ninterface.\n\nFrom here you can paste in an URL to a resource, that Omnic will attempt\nto display as a thumbnail. In this example an OBJ file (3D model format)\nof a trumpet was pasted in, and a 200x200 thumbnail was generated:\n\n.. figure:: docs/images/admin_conversion_view.jpg\n   :alt: Admin interface screenshot\n\n   Admin interface screenshot\n\nTo the right of the thumbnail it has an HTML snippet (the source-code of\nthe thumbnail to the left), and a button that will take you to the\nconversion graph for that type:\n\n.. figure:: docs/images/admin_graph_view.jpg\n   :alt: Admin graph screenshot\n\n   Admin graph screenshot\n\nContributing\n============\n\nSetting up a dev environment\n----------------------------\n\n1. Install Python 3, including ``pip`` and ``venv``:\n\n   -  On Debian-based distros:\n\n      -  ``sudo apt-get install python3 python3-env python3-pip``\n\n   -  On macOS, use something like ``brew``\n\n2. Create a virtualenv. For example:\n\n   -  ``mkdir -p ~/.venvs/``\n   -  ``python3 -m venv ~/.venvs/omnic``\n\n3. Activate virtualenv:\n\n   -  ``source ~/.venvs/omnic/bin/activate``\n   -  You will need to do this any time you want to work\n\n4. Install dependencies:\n\n   -  ``pip install -r requirements.txt``\n\n5. Run test suite, should have 140+ tests pass:\n\n   -  ``py.test``\n\n6. Start the server:\n\n   -  ``./bin/omnic runserver``\n\nMisc\n====\n\nTest routes\n-----------\n\nIf you want to test it without the admin interface, take a look at the\nfollowing URLs.\n\nTo test it, try visiting something like:\n\n-  http://localhost:8080/media/thumb.png:200x200/?url=unsplash.it/450/450\n\nThe first time you visit it it will just be a single placeholder pixel.\nSubsequent times it should be 200x200 thumbnail\n\nYou might also be able to run this, if you have ``unoconv`` and\nImageMagick (providing the ``convert`` command) installed:\n\n-  http://localhost:8080/media/thumb.jpg:200x200/?url=imr.sandia.gov/imrtemplate.doc\n\nThis will convert the ``.doc`` into a PDF, then into a JPG thumbnail\n\nIf you have ``jsc3d`` installed (a Node JavaScript based 3D model\nrenderer), then the following should render a delightful trumpet:\n\n-  http://localhost:8080/media/thumb.jpg:200x200/?url=people.sc.fsu.edu/~jburkardt/data/obj/trumpet.obj\n\nMolecular visualization:\n\n-  http://localhost:8080/media/thumb.jpg:200x200/?url=wiki.jmol.org/images/c/ca/Caffeine.mol\n\nThe built-in converters interface with a variety of system binaries in\norder to provide rendering and conversion of many document, image, mesh.\nAdding new converters and rasterizers is simple, with relatively minimal\ncode!\n\nProduction\n----------\n\nOmnic is not yet production ready, although you are welcome to try -- I\nlook forward to the pull requests!\n\nThe intended use is running as a microservice as part of a larger server\ninfrastructure. This is to supplement or fully replace traditional\nwork-queue based systems, such as using Celery. In a reasonable server\ntopology, many ``omnic`` servers would sit behind a sticky load balancer\n(such as nginx), configured to \"stick\" based on the url GET component.\nIn such a arrangement each omnic server would not need to be aware of\nits neighbors. The load balancer and/or an upstream proxy should also be\nconfigured to cache aggressively, to avoid Python serving static files\n(same philosophy to the ``whitenoise`` package).\n\nThe rationale for using omnic over a work-queue system:\n\n1. It is stateless with the exception of (disk-based) caching, and,\n   technically, (in-memory) queueing although both are non-critical, as\n   either getting cleared results in only a slower service, not a\n   non-functioning service.\n\n2. The load-balancer topology proposed above would eliminate the need of\n   servers to be away of siblings. This results in a much easier to\n   understand topology, and a very light-weight dev environment\n\n3. Processing, network, and disk space are coupled, which would make it\n   very cheap to run on AWS or DO (I intend to make the $5 nodes\n   sufficient).\n\nMisc\n~~~~\n\n-  Used Nekroze' cookiecutter to start this package: https://github.com/Nekroze/cookiecutter-pypackage\n\nDocumentation\n-------------\n\nTODO: Add full docs at http://omnic.rtfd.org.\"\"\"\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/michaelpb/omnic",
    "keywords": "omnic",
    "license": "GPL3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "omnic",
    "platform": "",
    "project_url": "https://pypi.org/project/omnic/",
    "release_url": "https://pypi.org/project/omnic/0.1.5/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Mostly stateless microservice framework for generating on-the-fly thumbs and previews of a wide variety of file types.",
    "version": "0.1.5"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f9289520315ab2e30daa43d61c587954",
          "sha256": "b53dcf3bcf34d2689fa8f22a451d21cc602f6f160e44488018c4de33703ccf4d"
        },
        "downloads": 0,
        "filename": "omnic-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f9289520315ab2e30daa43d61c587954",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 33780,
        "upload_time": "2017-07-18T23:08:30",
        "url": "https://files.pythonhosted.org/packages/c5/1e/42b723a22dcef72b15da09aa3737f62a5cbed4df01ebd02f343701631603/omnic-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ba2823c45a692931be9d970e31b29d4f",
          "sha256": "d9b7b075ed5993d8f9b3ad9f248ae94e32d2760e19fe0a99e861488059be1724"
        },
        "downloads": 0,
        "filename": "omnic-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba2823c45a692931be9d970e31b29d4f",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 9980,
        "upload_time": "2017-07-18T23:10:34",
        "url": "https://files.pythonhosted.org/packages/e1/39/c57754832e08c455b020785282f45004b96915c2084687294598caff8205/omnic-0.1.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d722961359c0032399f93c98f1ebc4ed",
          "sha256": "1aa51520b4b21898bb38bc8c027c8987fe425ced071f4951c4a30242cc1c6adc"
        },
        "downloads": 0,
        "filename": "omnic-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d722961359c0032399f93c98f1ebc4ed",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 33781,
        "upload_time": "2017-07-18T23:10:31",
        "url": "https://files.pythonhosted.org/packages/eb/f4/083877fbeb4e22925e409f6a1631b0316ad89d2f55d86185efcf7a4f76ca/omnic-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9177d808d9245bce3ea1a5617451c781",
          "sha256": "5ac6e2dfc54015f14f4311f337c94be600a7e7d1caaa606411d909fc35afb5a3"
        },
        "downloads": 0,
        "filename": "omnic-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9177d808d9245bce3ea1a5617451c781",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 70493,
        "upload_time": "2017-07-18T23:18:27",
        "url": "https://files.pythonhosted.org/packages/69/a3/ca56f984e2243e5699723ebfaf5e02a78cc08336b2178370ce57cbc2b8a6/omnic-0.1.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3abefc8ce319188dcc69bb83b35f069a",
          "sha256": "5b217cd178bb01ea40d01c74681b84c16fc6e5fa1d5b024f8ce3b6f9e383b303"
        },
        "downloads": 0,
        "filename": "omnic-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3abefc8ce319188dcc69bb83b35f069a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 59150,
        "upload_time": "2017-07-18T23:18:23",
        "url": "https://files.pythonhosted.org/packages/34/c2/d6e7b12a2cbd20b9d73bf3d831441159cabfe59ef6e293523961a979f510/omnic-0.1.3.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "60c22e8f868f552b65592f1cb24d5bb3",
          "sha256": "0477b30fc0ac522387bdc078f9c20b1f51546ef270f871191a4326bf3fcbb913"
        },
        "downloads": 0,
        "filename": "omnic-0.1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60c22e8f868f552b65592f1cb24d5bb3",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 72316,
        "upload_time": "2017-07-19T18:50:35",
        "url": "https://files.pythonhosted.org/packages/04/d3/5a3c9dc814eb10aa73919f27d86ef3d8cf19314d4a9a4c98347386f89330/omnic-0.1.4-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e76b46a5e39788b0c6c0143089796a5e",
          "sha256": "1e764394b6b407182b99bfe2c9e0d8b21e739bd9654387c1063ee08d3d6dd4bf"
        },
        "downloads": 0,
        "filename": "omnic-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e76b46a5e39788b0c6c0143089796a5e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 66099,
        "upload_time": "2017-07-19T18:50:31",
        "url": "https://files.pythonhosted.org/packages/46/af/24dbb8bf2121018e981acc1a60ba17ed54574cdb9301dd2fd559d52109b7/omnic-0.1.4.tar.gz"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e24cff6386e02f352ad33c7cb04cdf32",
          "sha256": "c2d71a0dd9ada46f16927d812f139ee50bf69c46e715eb1d5655f4ec6fa301a0"
        },
        "downloads": 0,
        "filename": "omnic-0.1.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e24cff6386e02f352ad33c7cb04cdf32",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 72368,
        "upload_time": "2017-07-19T18:54:34",
        "url": "https://files.pythonhosted.org/packages/f0/3c/9e52746ce9668640f26298c9145f840fc4f251257de6cdce2c9d5a2e908e/omnic-0.1.5-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4f1d7353f75922dae8e201157060be59",
          "sha256": "f4d1c7bccdce5b2a50f5d71f1a17edfb0d09136c159b35ba641ee1b354bb282b"
        },
        "downloads": 0,
        "filename": "omnic-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4f1d7353f75922dae8e201157060be59",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 66138,
        "upload_time": "2017-07-19T18:54:30",
        "url": "https://files.pythonhosted.org/packages/43/f2/d70ca556d21a40bff3f7ce6d0bce830d2e463d910df12fd058ba71cd0a12/omnic-0.1.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e24cff6386e02f352ad33c7cb04cdf32",
        "sha256": "c2d71a0dd9ada46f16927d812f139ee50bf69c46e715eb1d5655f4ec6fa301a0"
      },
      "downloads": 0,
      "filename": "omnic-0.1.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e24cff6386e02f352ad33c7cb04cdf32",
      "packagetype": "bdist_wheel",
      "python_version": "3.5",
      "size": 72368,
      "upload_time": "2017-07-19T18:54:34",
      "url": "https://files.pythonhosted.org/packages/f0/3c/9e52746ce9668640f26298c9145f840fc4f251257de6cdce2c9d5a2e908e/omnic-0.1.5-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "4f1d7353f75922dae8e201157060be59",
        "sha256": "f4d1c7bccdce5b2a50f5d71f1a17edfb0d09136c159b35ba641ee1b354bb282b"
      },
      "downloads": 0,
      "filename": "omnic-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "4f1d7353f75922dae8e201157060be59",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 66138,
      "upload_time": "2017-07-19T18:54:30",
      "url": "https://files.pythonhosted.org/packages/43/f2/d70ca556d21a40bff3f7ce6d0bce830d2e463d910df12fd058ba71cd0a12/omnic-0.1.5.tar.gz"
    }
  ]
}