{
  "info": {
    "author": "007gzs",
    "author_email": "007gzs@sina.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "#############################\nDjango REST_framework APIView\n#############################\n.. image:: https://travis-ci.org/007gzs/django_restframework_apiview.svg?branch=master\n       :target: https://travis-ci.org/007gzs/django_restframework_apiview\n\n***********\nScreenshots\n***********\n.. image:: https://github.com/007gzs/django_restframework_apiview/raw/master/img/demo.jpg\n\n****************\nUser in your app\n****************\nInstall using pip::\n\n    pip install django_restframework_apiview\n\nAdd 'apiview' to your INSTALLED_APPS setting::\n\n    INSTALLED_APPS = (\n        ...\n        'apiview',\n    )\n\nJSONP Renderer And debug apiview with paramslist::\n\n    REST_FRAMEWORK = {\n        ...\n        'DEFAULT_RENDERER_CLASSES': [\n            ...\n            'apiview.renderers.JSONPRenderer',\n        ],\n    }\n    if DEBUG:\n        REST_FRAMEWORK['DEFAULT_RENDERER_CLASSES'].append('apiview.renderers.BrowsableAPIRenderer')\n\nAdd error code to settings.py::\n    \n    ERROR_CODE_DEFINE = (\n        ('ERR_AUTH_NOLOGIN',            10001,  'No login'),\n        ('ERR_AUTH_USER_EXISTS',        10002,  'User name has exists'),\n        ('ERR_AUTH_USER_NOT_EXISTS',    10003,  'User not exists'),\n        ('ERR_AUTH_PASSWORD',           10005,  'Password error'),\n    )\n\nedit myapp/views.py::\n    \n    #! usr/bin/env python\n    # encoding: utf-8\n    from __future__ import unicode_literals, division\n\n    from django.db import IntegrityError, transaction\n    from django.contrib.auth import authenticate, login\n    from django.contrib.auth.models import User\n    from apiview.err_code import ErrCode\n    from apiview.exceptions import CustomError\n    from apiview.view import APIView\n    from apiview.views import ViewSite\n    from apiview.views import fields\n\n\n    site = ViewSite(name='base', app_name='base')\n\n\n    class APIBase(APIView):\n\n        class Meta:\n            path = '/'\n            param_fields = (\n                ('channel', fields.CharField(help_text='App Channel', required=False)),\n                ('version', fields.CharField(help_text='App Version', required=False)),\n            )\n\n\n    class UserAPIBase(APIBase):\n\n        def check_user_permission(self, request):\n            user = request.user\n            if not user.is_authenticated() or not isinstance(user, User):\n                raise CustomError(ErrCode.ERR_AUTH_NOLOGIN)\n\n        def view(self, request, *args, **kwargs):\n            self.check_user_permission(request)\n            return super(APIBase, self).view(request, *args, **kwargs)\n\n        class Meta:\n            path = '/user'\n\n\n    @site\n    class Login(APIBase):\n\n        name = '\u7528\u6237\u767b\u9646'\n\n        def get_context(self, request, *args, **kwargs):\n            user = authenticate(username=request.params.username, password=request.params.password)\n            if user is None:\n                raise CustomError(ErrCode.ERR_AUTH_PASSWORD)\n            login(request, user)\n            return self.get_default_context(user_info={'username':request.user.username, 'email':request.user.email})\n\n        class Meta:\n            path = 'user/login'\n            param_fields = (\n                ('username', fields.CharField(help_text='\u7528\u6237\u540d')),\n                ('password', fields.CharField(help_text='\u5bc6\u7801')),\n            )\n\n\n    @site\n    class Register(APIBase):\n\n        name = '\u7528\u6237\u6ce8\u518c'\n\n        def get_context(self, request, *args, **kwargs):\n            try:\n                user = User.objects.create_user(request.params.username, request.params.email, request.params.password)\n            except IntegrityError:\n                raise CustomError(ErrCode.ERR_AUTH_USER_EXISTS)\n            return self.get_default_context()\n\n        class Meta:\n            path = 'user/register'\n            param_fields = (\n                ('username', fields.RegexField(help_text='\u7528\u6237\u540d', regex=r'^[a-zA-Z0-9_]{3,10}$')),\n                ('password', fields.CharField(help_text='\u5bc6\u7801')),\n                ('email', fields.EmailField(help_text='Email')),\n            )\n\n    @site\n    class Info(UserAPIBase):\n\n        name = '\u7528\u6237\u4fe1\u606f'\n\n        def get_context(self, request, *args, **kwargs):\n            user_info = {'username':request.user.username, 'email':request.user.email}\n\n            return self.get_default_context(user_info=user_info)\n\n\n    @site\n    class Logout(UserAPIBase):\n\n        name = '\u9000\u51fa\u767b\u9646'\n\n        def get_context(self, request, *args, **kwargs):\n            logout(request)\n\n            return self.get_default_context()\n\n    urlpatterns = site.urlpatterns\n\nadd to urls.py end:\n\n    urlpatterns.append(url(r'^test/', include(\"myapp.views\")))\n\n*******\nExample\n*******\nrun example::\n\n    git clone https://github.com/007gzs/django_restframework_apiview.git\n    cd django_restframework_apiview/example\n    pip install -r requirements.txt\n    python manage.py makemigrations\n    python manage.py migrate\n    python manage.py runserver\n    open http://127.0.0.1:8000/example.html in browser\n\n    \n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/007gzs/django_restframework_apiview",
    "keywords": "django rest framework api view",
    "license": "LGPL v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django_restframework_apiview",
    "platform": "",
    "project_url": "https://pypi.org/project/django_restframework_apiview/",
    "release_url": "https://pypi.org/project/django_restframework_apiview/1.2.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Django REST_framework APIView",
    "version": "1.2.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0d8d2903539789443f2b61dca268ec17",
          "sha256": "858f3f00da19239a801cb2bd9ac928a96edfb9426253bda3ff785279a703901c"
        },
        "downloads": 0,
        "filename": "django_restframework_apiview-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0d8d2903539789443f2b61dca268ec17",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 37481,
        "upload_time": "2017-04-12T10:50:25",
        "url": "https://files.pythonhosted.org/packages/b2/e8/04e90227eeb48c4ed3234391ada0fe7368e10aa59d7957f22a0c1b0438b7/django_restframework_apiview-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a912406dc9af0dc35067b92c3c24ae77",
          "sha256": "c9cf7fe3d77caba92e33b1b164ce6c366e185e125e5ff1c7274f4c6bffdf1924"
        },
        "downloads": 0,
        "filename": "django_restframework_apiview-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a912406dc9af0dc35067b92c3c24ae77",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 37966,
        "upload_time": "2017-04-13T10:15:55",
        "url": "https://files.pythonhosted.org/packages/97/c0/1bc7a5fb0914abf821ee2499fcc786a98172adefe45027acd4c0b96acdc7/django_restframework_apiview-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1059e70837a252a83b8f101e7df07b14",
          "sha256": "d987ef2c50c87b042bdc1047ecaa0646fdba32cbb4912348adf7f2061758f7d3"
        },
        "downloads": 0,
        "filename": "django_restframework_apiview-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1059e70837a252a83b8f101e7df07b14",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 38379,
        "upload_time": "2017-04-25T04:06:56",
        "url": "https://files.pythonhosted.org/packages/40/11/74a85248d9d19474b06b3feb5be429768807487ec929c356090890ba1852/django_restframework_apiview-1.0.2.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d1e93000259861cbab0c2c4d6ad7d9ea",
          "sha256": "95672ccf929347f13add426932703e080e20a5ff2702cc12a3010535d20555d3"
        },
        "downloads": 0,
        "filename": "django_restframework_apiview-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d1e93000259861cbab0c2c4d6ad7d9ea",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40040,
        "upload_time": "2017-05-14T15:28:34",
        "url": "https://files.pythonhosted.org/packages/45/dd/fbbf5fc747f8604b3801b9cdc71d7013209aa1d0a63fc3532100cb4e0af1/django_restframework_apiview-1.1.0.tar.gz"
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b940127caba38118ca1a9d64d377dd9e",
          "sha256": "1786a44e204b13d40f29507ed453eab8d54907a90686306ef33e0e4c2fb3f3ae"
        },
        "downloads": 0,
        "filename": "django_restframework_apiview-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b940127caba38118ca1a9d64d377dd9e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40057,
        "upload_time": "2017-06-02T15:30:46",
        "url": "https://files.pythonhosted.org/packages/ed/9d/3c4d4d71b9cfdf0bcaa447b5593320ad04ca6d47eb9649fae5f8d990ca11/django_restframework_apiview-1.1.1.tar.gz"
      }
    ],
    "1.1.22": [
      {
        "comment_text": "",
        "digests": {
          "md5": "70067f7607958e2188c5b2d09ebca315",
          "sha256": "1a89eb5fed8aa482066a2cd8b3953d6adba8faa66f1cd3844d9ffa95c220f6d4"
        },
        "downloads": 0,
        "filename": "django_restframework_apiview-1.1.22.tar.gz",
        "has_sig": false,
        "md5_digest": "70067f7607958e2188c5b2d09ebca315",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40134,
        "upload_time": "2017-06-20T14:09:12",
        "url": "https://files.pythonhosted.org/packages/5a/13/922547843c1cea17c6d71f38c0c824cbe3290323432ef39c77777311adaa/django_restframework_apiview-1.1.22.tar.gz"
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e236e71732e6f479ae1dd320b54d4bb8",
          "sha256": "6a95312c3ef3e3c1c850164c9f7aa534c2eaf6a4af529c1c1f91ead35fb49b39"
        },
        "downloads": 0,
        "filename": "django_restframework_apiview-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e236e71732e6f479ae1dd320b54d4bb8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 40167,
        "upload_time": "2017-06-27T10:32:03",
        "url": "https://files.pythonhosted.org/packages/f5/dd/6ab33ada195cadd7bb9e9e26b8c46d3cc83212d058fdc0da592d8cf45787/django_restframework_apiview-1.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e236e71732e6f479ae1dd320b54d4bb8",
        "sha256": "6a95312c3ef3e3c1c850164c9f7aa534c2eaf6a4af529c1c1f91ead35fb49b39"
      },
      "downloads": 0,
      "filename": "django_restframework_apiview-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e236e71732e6f479ae1dd320b54d4bb8",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 40167,
      "upload_time": "2017-06-27T10:32:03",
      "url": "https://files.pythonhosted.org/packages/f5/dd/6ab33ada195cadd7bb9e9e26b8c46d3cc83212d058fdc0da592d8cf45787/django_restframework_apiview-1.2.0.tar.gz"
    }
  ]
}