{
  "info": {
    "author": "Gladyshev Bogdan",
    "author_email": "siredvin.dark@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Natural Language :: Russian",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Testing",
      "Topic :: Utilities"
    ],
    "description": "Sanic OAuth\n-----------\n\n\nSimple OAuth library to work with sanic. Basically, just rewrited version of aioauth_client_ with async/await syntax and some optimization. Can be used only with python 3.5/3.6.\n\nAvailable providers:\n\n- Google\n- GitLab\n- BitBucket\n- BitBucket v2\n- Flickr\n- Meetup\n- Plurk\n- Twitter\n- Tumblr\n- Vimeo\n- Yahoo\n- Amazon\n- Eventbrite\n- Facebook\n- Foursquare\n- Github\n- vk.com\n- ok.ru\n- Yandex\n- LinkedIn\n- Pinterest\n\n\nRequirements\n============\n\n* python >= 3.6\n\n\nInstallation\n============\n\nJust install via pip:\n\n.. code:: \n\n    pip install sanic_oauth\n\n\nUsage\n=====\n\n.. code:: python\n\n    # OAuth1\n    import aiohttp\n    from sanic_oauth import TwitterClient\n\n    session = aiohttp.ClientSession()\n    twitter = TwitterClient(\n        session\n        consumer_key='J8MoJG4bQ9gcmGh8H7XhMg',\n        consumer_secret='7WAscbSy65GmiVOvMU5EBYn5z80fhQkcFWSLMJJu4',\n    )\n\n    request_token, request_token_secret, _ = await twitter.get_request_token()\n\n    authorize_url = twitter.get_authorize_url(request_token)\n    print(\"Open\",authorize_url,\"in a browser\")\n    # ...\n    # Reload client to authorize_url and get oauth_verifier\n    # ...\n    print(\"PIN code:\")\n    oauth_verifier = input()\n    oauth_token, oauth_token_secret, _ = await twitter.get_access_token(oauth_verifier)\n\n    # Save the tokens for later use\n\n    # ...\n\n    twitter = TwitterClient(\n        session,\n        consumer_key='J8MoJG4bQ9gcmGh8H7XhMg',\n        consumer_secret='7WAscbSy65GmiVOvMU5EBYn5z80fhQkcFWSLMJJu4',\n        oauth_token=oauth_token,\n        oauth_token_secret=oauth_token_secret,\n    )\n\n    timeline = await twitter.request('GET', 'statuses/home_timeline.json')\n    content = await timeline.read()\n    print(content)\n    session.close()\n\n\n.. code:: python\n\n    # OAuth2\n    import aiohttp\n    from aioauth_client import GithubClient\n\n    session = aiohttp.ClientSession()\n    github = GithubClient(\n        session,\n        client_id='b6281b6fe88fa4c313e6',\n        client_secret='21ff23d9f1cad775daee6a38d230e1ee05b04f7c',\n    )\n\n    authorize_url = github.get_authorize_url(scope=\"user:email\")\n\n    # ...\n    # Reload client to authorize_url and get code\n    # ...\n\n    otoken, _ = await github.get_access_token(code)\n\n    # Save the token for later use\n\n    # ...\n\n    github = GithubClient(\n        session,\n        client_id='b6281b6fe88fa4c313e6',\n        client_secret='21ff23d9f1cad775daee6a38d230e1ee05b04f7c',\n        access_token=otoken,\n    )\n\n    response = await github.request('GET', 'user')\n    user_info = await response.json()\n    session.close()\n\n\n\nExample\n=======\n\nYou can see example_ with sanic_session usage. Google credentials are wrong, so to run it you will need own.\n\n\n\n.. _example: ./example.py\n.. _aioauth_client: https://github.com/klen/aioauth-client\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://gitlab.com/SirEdvin/sanic-oauth",
    "keywords": "asyncio,http,oauth,sanic",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sanic-oauth",
    "platform": "",
    "project_url": "https://pypi.org/project/sanic-oauth/",
    "release_url": "https://pypi.org/project/sanic-oauth/0.1.0/",
    "requires_dist": [
      "aiohttp (>=2.3.9)",
      "yarl (>=1.1.0)"
    ],
    "requires_python": "",
    "summary": "",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a7e7f0605e6dfebf51161d346f038ddd",
          "sha256": "1206e07897e1437307111f9efc5793293578858f5196382ec4765a1ff4393c54"
        },
        "downloads": -1,
        "filename": "sanic_oauth-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7e7f0605e6dfebf51161d346f038ddd",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 4414,
        "upload_time": "2018-01-27T08:28:52",
        "url": "https://files.pythonhosted.org/packages/44/ee/d5d5d6b29fe5371047e0f98376156c8ca72f3fea5188e4deb84a504b62e5/sanic_oauth-0.1.0-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a7e7f0605e6dfebf51161d346f038ddd",
        "sha256": "1206e07897e1437307111f9efc5793293578858f5196382ec4765a1ff4393c54"
      },
      "downloads": -1,
      "filename": "sanic_oauth-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a7e7f0605e6dfebf51161d346f038ddd",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 4414,
      "upload_time": "2018-01-27T08:28:52",
      "url": "https://files.pythonhosted.org/packages/44/ee/d5d5d6b29fe5371047e0f98376156c8ca72f3fea5188e4deb84a504b62e5/sanic_oauth-0.1.0-py2.py3-none-any.whl"
    }
  ]
}