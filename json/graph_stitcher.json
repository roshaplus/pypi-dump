{
  "info": {
    "author": "Thijs Metsch",
    "author_email": "UNKNOWN",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Topic :: Scientific/Engineering",
      "Topic :: Utilities"
    ],
    "description": "# Graph stitching\n\nThis tool is a little framework to determine possible merges between two graphs\nbased on a set of required additional relationships (aka stitches / edges).\nBased on a set of possible resulting candidate graphs we validate which of the\ncandidates graphs is the \"best\".\n\nAn example use case is a packaging problem: e.g. set of entities need to be\nplaced in an container which already contains a set of different entities.\n\nLet's assume the entities to be placed can be described using a *request* graph\n(as in entities having a relationship) and the existing *container* can be\ndescribed as a graph as well (entities having relationships and are already\nranked). Nodes & edges in the existing container should be ranked to indicate\nhow loaded/busy they are.\n\nAdding a new set of entities (e.g. a lamp described by the lamp bulb & fitting)\nto the existing container (e.g. a house) automatically requires certain\nrelationships to be added (e.g. the power cable which is plugged into the\nsocket). But not all possible relationship setups might be good as e.g. adding\nanother consumer (the lamp) to a certain power socket might impact other\nconsumers (the microwave) of the same socket as the fuse might give up. How\nloaded the power socket is can be expressed through the previously mentioned\nrank.\n\nHence **stitching** two graphs together is done by adding relationships (edges)\nbetween certain types of nodes from the *container* and the *request*. As\nmultiple stitches are possible we need to know determine and validate (adhering\nconditions like compositions and attribute requirements) the possible\ncandidates and determine the best. Defining the best one can be done using a\nvery simple principle. A good stitch is defined by:\n\n* all new relationships are satisfied\n* the resulting graph is stable and none of the existing nodes (entities) are\nimpacted by the requested once.\n\nThrough the pluggable architecture of this tool we can now implement\ndifferent algorithms on how to determine if a resulting graph is good\n& stable:\n\n* through a simple rule saying for a node of type A, the maximum number of\n  incoming dependencies is Y\n* through a simple rule saying for a node of type B, that it cannot take more\n  incoming relationships when it's rank is over an threshold K.\n* (many more .e.g implement your own)\n\nThis tool obviously can also be used to enhance the placement of workload after\na scheduling decision has been made (based on round-robin, preemptive,\npriority, fair share, fifo, ... algorithms) within clusters.\n\n## graph stitcher's internals\n\nAs mentioned above graph stitcher is pluggable, to test different algorithms of\n**graph stitching** & validation of the same. Hence it has a pluggable\ninterface for the *stitch()* and *validate()* routine (see *BaseStitcher*\nclass).\n\nTo stitch two graphs the tool needs to know which relationships are needed:\n\n    Type of source node | Type of target node\n    -----------------------------------------\n    type_a              | type_x\n    ...                 | ...\n\nThese are stored in the file (stitch.json). Sample graphs & tests can be found\nin the **tests** directory as well.\n\nThere is a *conditional_filter()* function implemented which can do some basic\nfiltering. Implementing your own is possible by passing conditions and the\n*conditional_filter()* routine you want to use as parameters to the *stich()*\ncall.\n\nThe basic filter support the following operations:\n\n  * based on required (exception: not equal operation) target attributes -\n    example below: node a requires it's stitched target to have an attribute\n    'foo' with value 'y'\n    * this can also be done with: not equal, larger than, less than or by a\n      regular expression.\n  * the notion that two nodes require the same or different target - example\n    below: node 1 & 2 need to have the same stitched target node and node 3 & 4\n    need to have different stitched target nodes.\n  * the notion that stitched target nodes (not) share a common attribute - \n    example below: node x & y need to be stitched to target nodes which share \n    the same attribute value for the attribute with the name 'group'.\n\nThe following dictionary can be passed in as a composition condition:\n\n    {\n     'attributes': [('eq', ('a', ('foo', 'y'))),\n                    ('neq', ('a', ('foo', 5))),\n                    ('lt', ('a', ('foo', 4))),\n                    ('lg', ('a', ('foo', 7))),\n                    ('regex', ('a', ('foo', '^a')))],\n     'compositions': [('same', ('1', '2')),\n                      ('diff', ('3', '4')),\n                      ('share', ('group', ['x', 'y'])),\n                      ('nshare', ('group', ['a', 'b']))]\n    }\n\nThis graph stitcher is mostly developed to test & play around. Also to check if\n[evolutionary algorithms](https://en.wikipedia.org/wiki/Evolutionary_algorithm)\ncan be developed to determine the best resulting graph. More details on the \nalgorithms in place can be found in the [/docs](/docs/) directory.\n\n## Running it\n\nJust do a:\n\n    $ ./run_me.py\n\nYou will hopefully see something similar to the following diagram. The *k*,\n*l*, *m* nodes form the request. All other nodes represent the container (node\ncolors indicate the rank, node forms the different types). The stitches are\ndotted lines. Each graph is a candidate solution, the results of the\nvalidation are shown as titles of the graphs.\n\n![output](./figure_1.png?raw=true \"Output\")\n\nTo test the evolutionary algorithm run:\n\n    $ ./run_me.py -a evolutionary\n\nPlease note that it might not always find a set of good solutions, as the \ncontainer and the request are pretty small. Also note that currently the \nfitness function expresses a fitness for the given conditions; and does not \ninclude a fitness value for the validation phase.\n\nTo test the bidding algorithm in which the container nodes try to find the \noptimal solution run:\n\n    $ ./run_me.py -a bidding\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/tmetsch/graph_stitcher",
    "keywords": "graph stitching algorithms framework",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "graph_stitcher",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/graph_stitcher/",
    "release_url": "https://pypi.org/project/graph_stitcher/0.0.15/",
    "requires_python": null,
    "summary": "This tool is a little framework to determine possiblemerges between two graphs based on a set of requiredadditional relationships (aka as stitches / edges).",
    "version": "0.0.15"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4a54a53a7af62c955ef83ea262d9b521",
          "sha256": "3a6510c81b564298cdd281b282bd1c358a719884cb56a6b8f311c17d2b1c9905"
        },
        "downloads": 471,
        "filename": "graph_stitcher-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4a54a53a7af62c955ef83ea262d9b521",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6485,
        "upload_time": "2015-12-28T17:38:14",
        "url": "https://files.pythonhosted.org/packages/56/10/83d476e517d53336ad84bbb88727bb587ec1665b9395befcd86ab02a01e5/graph_stitcher-0.0.1.tar.gz"
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0e3d72d1c84ac51a77eba001458253eb",
          "sha256": "e7fefea1119a2b951d81c5f13e75786f9dd3e75eb2fe4b70298ddd5117821d5a"
        },
        "downloads": 96,
        "filename": "graph_stitcher-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "0e3d72d1c84ac51a77eba001458253eb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10202,
        "upload_time": "2016-10-01T09:23:38",
        "url": "https://files.pythonhosted.org/packages/35/4c/673536189c72e8fffb24aa10a0be9005fa2e8c38665c2857d58fcb6685c3/graph_stitcher-0.0.10.tar.gz"
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "84a43d4eb39134f03143c30eadeab92d",
          "sha256": "28bc9a129b4c5ee68d7beed8f1a0c489084e25435a3deda866a80687af381d95"
        },
        "downloads": 57,
        "filename": "graph_stitcher-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "84a43d4eb39134f03143c30eadeab92d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10849,
        "upload_time": "2016-11-05T18:37:35",
        "url": "https://files.pythonhosted.org/packages/e6/27/ef0c3e14b1c85408dbca959ed7f16ee0422fdf5718d8c2547dc913e2b506/graph_stitcher-0.0.11.tar.gz"
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "md5": "16bce37169826a82e2416047a32fad04",
          "sha256": "684e222f7ca1c8d21056b86e6de99827835539ab208a582a30b3072726503786"
        },
        "downloads": 57,
        "filename": "graph_stitcher-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "16bce37169826a82e2416047a32fad04",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10858,
        "upload_time": "2016-11-10T16:45:50",
        "url": "https://files.pythonhosted.org/packages/43/59/a8d5fcd5319a88eee62aa58e8af613f0261a02da631b3c24933acaf11965/graph_stitcher-0.0.12.tar.gz"
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c76ba6f45f4318f2c45aed350922257c",
          "sha256": "87d36bb42b87c5c2a959e35299abccb8e1907adb355975a464b714b99626c7aa"
        },
        "downloads": 284,
        "filename": "graph_stitcher-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "c76ba6f45f4318f2c45aed350922257c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10897,
        "upload_time": "2016-12-27T15:07:36",
        "url": "https://files.pythonhosted.org/packages/22/18/d97d9ca036a36c7e1e91660f69c3014d8ca4f041e49663fbc42e4471a23e/graph_stitcher-0.0.13.tar.gz"
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "md5": "99b67aa8eb192b6ae11a937b64acf45e",
          "sha256": "1db1070fdfbcf79f265b71805d1d163c6218a914c84ba2cf0478946e94022640"
        },
        "downloads": 0,
        "filename": "graph_stitcher-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "99b67aa8eb192b6ae11a937b64acf45e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13892,
        "upload_time": "2017-04-17T13:15:55",
        "url": "https://files.pythonhosted.org/packages/9a/9d/bedf9562594ddfbabcd7466a1cfada7fa16ebf2412adf52f4d1979e48979/graph_stitcher-0.0.14.tar.gz"
      }
    ],
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9d93f54cd3bb72daaacf9b9aeaff36c6",
          "sha256": "369b887965d2cb44ff16e63ea6904eb2c915609363d1db71ae5b2ac3b618681a"
        },
        "downloads": 0,
        "filename": "graph_stitcher-0.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "9d93f54cd3bb72daaacf9b9aeaff36c6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13978,
        "upload_time": "2017-04-22T11:23:48",
        "url": "https://files.pythonhosted.org/packages/8c/46/87575e721354467f350c4abeb8022636bb2ea1c2c474213925dcfb61a9b4/graph_stitcher-0.0.15.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8c189b1d496b7d4191b357dc96be4eea",
          "sha256": "866ddecb09cff92d438118f7a09182ecd1266ea104ef6875e666081742cf59fa"
        },
        "downloads": 464,
        "filename": "graph_stitcher-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8c189b1d496b7d4191b357dc96be4eea",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7297,
        "upload_time": "2015-12-29T15:00:53",
        "url": "https://files.pythonhosted.org/packages/c0/c1/cd02a645dbe5ea217acabb5c05f63ea791c6900c87632f29ecbeb2795650/graph_stitcher-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3db9532c94902afd26fe31a2af6ae2b3",
          "sha256": "5437d4b90c8308deb7cb2d63997d42ddea91f71af2285b5c78bf116bee87312f"
        },
        "downloads": 473,
        "filename": "graph_stitcher-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3db9532c94902afd26fe31a2af6ae2b3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7293,
        "upload_time": "2015-12-29T16:35:09",
        "url": "https://files.pythonhosted.org/packages/e8/7b/4297480d27e75c75bb3a9e7746fcb5f27aa6a4dffcd5500a8e30c19dfbba/graph_stitcher-0.0.3.tar.gz"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cce6c93056a41284a047df2e9e6f50dc",
          "sha256": "f1f668fc4692eab62848dc5ae6775f2c26866a5ba28761b2449823921c016467"
        },
        "downloads": 501,
        "filename": "graph_stitcher-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cce6c93056a41284a047df2e9e6f50dc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7454,
        "upload_time": "2016-01-02T15:10:08",
        "url": "https://files.pythonhosted.org/packages/c1/06/40907b99612db80febecd0aac42e7a8d6616793478de8f33712981cdbd6a/graph_stitcher-0.0.4.tar.gz"
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7056f22cb0fde63ed596e4e727e0b188",
          "sha256": "6f08b53fe5097160db0c30e953e3842511218fac62a860bd10fb8d1a62d28f1a"
        },
        "downloads": 518,
        "filename": "graph_stitcher-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7056f22cb0fde63ed596e4e727e0b188",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7655,
        "upload_time": "2016-02-07T15:45:26",
        "url": "https://files.pythonhosted.org/packages/6a/87/8ec37ed6c83986efb6e833cfbcc0c5d2f334f9dbd10365ad4011f180932c/graph_stitcher-0.0.5.tar.gz"
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c5e776f11948ebf1a309f151cc4299ce",
          "sha256": "70939493af6be3f532bb0e30cdd0bcf6a94e696d286a2ccec053b7bf2e033dbd"
        },
        "downloads": 216,
        "filename": "graph_stitcher-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c5e776f11948ebf1a309f151cc4299ce",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7607,
        "upload_time": "2016-02-27T18:11:09",
        "url": "https://files.pythonhosted.org/packages/41/55/2679718b54e31b06f9e04c5fef2cef90b81c4e431ad13288cb06b3cf9cec/graph_stitcher-0.0.6.tar.gz"
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "61095c96cad755bb17c44ecbb8b95b8b",
          "sha256": "7d8c9ac782a56b7fb4233a4b1f54bd3a52aff09636e6e70277ff8078847d6d9d"
        },
        "downloads": 218,
        "filename": "graph_stitcher-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "61095c96cad755bb17c44ecbb8b95b8b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7639,
        "upload_time": "2016-03-05T21:43:10",
        "url": "https://files.pythonhosted.org/packages/8c/59/7dfbddb6cf59932beb2625c4a7ad962e6e56afdf9289b705e465e01d055a/graph_stitcher-0.0.7.tar.gz"
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2fa0f6f8fa6fd1910a4e57c26780ce26",
          "sha256": "e94293dac9b6d7601b3b6630f430e4f318718f1cb0fa8644d30fc9df59e8b81b"
        },
        "downloads": 227,
        "filename": "graph_stitcher-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "2fa0f6f8fa6fd1910a4e57c26780ce26",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7645,
        "upload_time": "2016-04-01T08:29:15",
        "url": "https://files.pythonhosted.org/packages/41/a1/3619e8610c21861611d26a4558eab939c4cf70e777de50e3522b54f79c23/graph_stitcher-0.0.8.tar.gz"
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e278f81d6c58ad1c86ed8a4058074e49",
          "sha256": "b1cf1722e64d928878b83fae3f2587d290f5e7a3c4aea2469df09bdad6530d7e"
        },
        "downloads": 322,
        "filename": "graph_stitcher-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "e278f81d6c58ad1c86ed8a4058074e49",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8869,
        "upload_time": "2016-08-29T14:14:27",
        "url": "https://files.pythonhosted.org/packages/29/6a/8fe093fc8bf313d896898c4be7873270dd5a717930f0e8f77d0549cec864/graph_stitcher-0.0.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9d93f54cd3bb72daaacf9b9aeaff36c6",
        "sha256": "369b887965d2cb44ff16e63ea6904eb2c915609363d1db71ae5b2ac3b618681a"
      },
      "downloads": 0,
      "filename": "graph_stitcher-0.0.15.tar.gz",
      "has_sig": false,
      "md5_digest": "9d93f54cd3bb72daaacf9b9aeaff36c6",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 13978,
      "upload_time": "2017-04-22T11:23:48",
      "url": "https://files.pythonhosted.org/packages/8c/46/87575e721354467f350c4abeb8022636bb2ea1c2c474213925dcfb61a9b4/graph_stitcher-0.0.15.tar.gz"
    }
  ]
}