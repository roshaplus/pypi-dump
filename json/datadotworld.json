{
  "info": {
    "author": "data.world",
    "author_email": "help@data.world",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Database :: Database Engines/Servers",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "=============\ndata.world-py\n=============\n\nA python library for working with data.world datasets.\n\nThis library makes it easy for data.world users to pull and work with data stored on data.world.\nAdditionally, the library provides convenient wrappers for data.world APIs, allowing users to create and update\ndatasets, add and modify files, etc, and possibly implement entire apps on top of data.world.\n\n\nQuick start\n===========\n\nInstall\n-------\n\nYou can install it using ``pip`` directly from PyPI::\n\n    pip install datadotworld\n\nOptionally, you can install the library including pandas support::\n\n    pip install datadotworld[pandas]\n\nIf you use ``conda`` to manage your python distribution, you can install from the community-maintained [conda-forge](https://conda-forge.github.io/) channel::\n\n    conda install -c conda-forge datadotworld-py\n\n\nConfigure\n---------\n\nThis library requires a data.world API authentication token to work.\n\nYour authentication token can be obtained on data.world under\n`Settings > Advanced <https://data.world/settings/advanced>`_\n\nTo configure the library, run the following command::\n\n    dw configure\n\n\nAlternatively, tokens can be provided via the ``DW_AUTH_TOKEN`` environment variable.\nOn MacOS or Unix machines, run (replacing ``<YOUR_TOKEN>>`` below with the token obtained earlier)::\n\n    export DW_AUTH_TOKEN=<YOUR_TOKEN>\n\nLoad a dataset\n--------------\n\nThe ``load_dataset()`` function facilitates maintaining copies of datasets on the local filesystem.\nIt will download a given dataset's `datapackage <http://specs.frictionlessdata.io/data-package/>`_\nand store it under ``~/.dw/cache``. When used subsequently, ``load_dataset()`` will use the copy stored on disk and will\nwork offline, unless it's called with ``force_update=True``.\n\nOnce loaded, a dataset (data and metadata) can be conveniently accessed via the object returned by ``load_dataset()``.\n\nStart by importing the ``datadotworld`` module:\n\n.. code-block:: python\n\n    import datadotworld as dw\n\nThen, invoke the ``load_dataset()`` function, to download a dataset and work with it locally.\nFor example:\n\n.. code-block:: python\n\n    intro_dataset = dw.load_dataset('jonloyens/an-intro-to-dataworld-dataset')\n\nDataset objects allow access to data via three different properties ``raw_data``, ``tables`` and ``dataframes``.\nEach of these properties is a mapping (dict) whose values are of type ``bytes``, ``list`` and ``pandas.DataFrame``,\nrespectively. Values are lazy loaded and cached once loaded. Their keys are the names of the files\ncontained in the dataset.\n\nFor example:\n\n.. code-block:: python\n\n    >>> intro_dataset.dataframes\n    LazyLoadedDict({\n        'changelog': LazyLoadedValue(<pandas.DataFrame>),\n        'datadotworldbballstats': LazyLoadedValue(<pandas.DataFrame>),\n        'datadotworldbballteam': LazyLoadedValue(<pandas.DataFrame>)})\n\n**IMPORTANT**: Not all files in a dataset are tabular, therefore some will be exposed via ``raw_data`` only.\n\nTables are lists of rows, each represented by a mapping (dict) of column names to their respective values.\n\nFor example:\n\n.. code-block:: python\n\n    >>> stats_table = intro_dataset.tables['datadotworldbballstats']\n    >>> stats_table[0]\n    OrderedDict([('Name', 'Jon'),\n                 ('PointsPerGame', Decimal('20.4')),\n                 ('AssistsPerGame', Decimal('1.3'))])\n\nYou can also review the metadata associated with a file or the entire dataset, using the ``describe`` function.\nFor example:\n\n.. code-block:: python\n\n    >>> intro_dataset.describe()\n    {'homepage': 'https://data.world/jonloyens/an-intro-to-dataworld-dataset',\n     'name': 'jonloyens_an-intro-to-dataworld-dataset',\n     'resources': [{'format': 'csv',\n       'name': 'changelog',\n       'path': 'data/ChangeLog.csv'},\n      {'format': 'csv',\n       'name': 'datadotworldbballstats',\n       'path': 'data/DataDotWorldBBallStats.csv'},\n      {'format': 'csv',\n       'name': 'datadotworldbballteam',\n       'path': 'data/DataDotWorldBBallTeam.csv'}]}\n    >>> intro_dataset.describe('datadotworldbballstats')\n    {'format': 'csv',\n     'name': 'datadotworldbballstats',\n     'path': 'data/DataDotWorldBBallStats.csv',\n     'schema': {'fields': [{'name': 'Name', 'title': 'Name', 'type': 'string'},\n                           {'name': 'PointsPerGame',\n                            'title': 'PointsPerGame',\n                            'type': 'number'},\n                           {'name': 'AssistsPerGame',\n                            'title': 'AssistsPerGame',\n                            'type': 'number'}]}}\n\nQuery a dataset\n---------------\n\nThe ``query()`` function allows datasets to be queried live using ``SQL`` or ``SPARQL`` query languages.\n\nTo query a dataset, invoke the ``query()`` function.\nFor example:\n\n.. code-block:: python\n\n    results = dw.query('jonloyens/an-intro-to-dataworld-dataset', 'SELECT * FROM DataDotWorldBBallStats')\n\nQuery result objects allow access to the data via ``raw_data``, ``table`` and ``dataframe`` properties, of type\n``json``, ``list`` and ``pandas.DataFrame``, respectively.\n\nFor example:\n\n.. code-block:: python\n\n    >>> results.dataframe\n          Name  PointsPerGame  AssistsPerGame\n    0      Jon           20.4             1.3\n    1      Rob           15.5             8.0\n    2   Sharon           30.1            11.2\n    3     Alex            8.2             0.5\n    4  Rebecca           12.3            17.0\n    5   Ariane           18.1             3.0\n    6    Bryon           16.0             8.5\n    7     Matt           13.0             2.1\n\n\nTables are lists of rows, each represented by a mapping (dict) of column names to their respective values.\nFor example:\n\n.. code-block:: python\n\n    >>> results.table[0]\n    OrderedDict([('Name', 'Jon'),\n                 ('PointsPerGame', Decimal('20.4')),\n                 ('AssistsPerGame', Decimal('1.3'))])\n\nTo query using ``SPARQL`` invoke ``query()`` using ``query_type='sparql'``, or else, it will assume\nthe query to be a ``SQL`` query.\n\nJust like in the dataset case, you can view the metadata associated with a query result using the ``describe()``\nfunction.\n\nFor example:\n\n.. code-block:: python\n\n    >>> results.describe()\n    {'fields': [{'name': 'Name', 'type': 'string'},\n                {'name': 'PointsPerGame', 'type': 'number'},\n                {'name': 'AssistsPerGame', 'type': 'number'}]}\n\nWrite to a dataset\n------------------\n\nThe ``open_remote_file()`` function allows you to write data to or read data from a file in a\ndata.world dataset.\n\nThe object that is returned from the ``open_remote_file()`` call is similar to a file handle that\nwould be used to write to a local file - it has a ``write()`` method, and contents sent to that\nmethod will be written to the file remotely.\n\n.. code-block:: python\n\n        >>> import datadotworld as dw\n        >>>\n        >>> with dw.open_remote_file('username/test-dataset', 'test.txt') as w:\n        ...   w.write(\"this is a test.\")\n        >>>\n\nOf course, writing a text file isn't the primary use case for data.world - you want to write your\ndata!  The return object from ``open_remote_file()`` should be usable anywhere you could normally\nuse a local file handle in write mode - so you can use it to serialize the contents of a PANDAS\n``DataFrame`` to a CSV file...\n\n.. code-block:: python\n\n        >>> import pandas as pd\n        >>> df = pd.DataFrame({'foo':[1,2,3,4],'bar':['a','b','c','d']})\n        >>> with dw.open_remote_file('username/test-dataset', 'dataframe.csv') as w:\n        ...   df.to_csv(w, index=False)\n\nOr, to write a series of ``dict`` objects as a JSON Lines file...\n\n.. code-block:: python\n\n        >>> import json\n        >>> with dw.open_remote_file('username/test-dataset', 'test.jsonl') as w:\n        ...   json.dump({'foo':42, 'bar':\"A\"}, w)\n        ...   json.dump({'foo':13, 'bar':\"B\"}, w)\n        >>>\n\nOr to write a series of ``dict`` objects as a CSV...\n\n.. code-block:: python\n\n        >>> import csv\n        >>> with dw.open_remote_file('username/test-dataset', 'test.csv') as w:\n        ...   csvw = csv.DictWriter(w, fieldnames=['foo', 'bar'])\n        ...   csvw.writeheader()\n        ...   csvw.writerow({'foo':42, 'bar':\"A\"})\n        ...   csvw.writerow({'foo':13, 'bar':\"B\"})\n        >>>\n\nAnd finally, you can write binary data by streaming ``bytes`` or ``bytearray`` objects, if you open the\nfile in binary mode...\n\n.. code-block:: python\n\n        >>> with dw.open_remote_file('username/test-dataset', 'test.txt', mode='wb') as w:\n        ...   w.write(bytes([100,97,116,97,46,119,111,114,108,100]))\n\nYou can also read data from a file in a similar fashion\n.. code-block:: python\n\n        >>> with dw.open_remote_file('username/test-dataset', 'test.txt', mode='r') as r:\n        ...   print(r.read)\n\n\nReading from the file into common parsing libraries works naturally, too - when opened in 'r' mode, the\nfile object acts as an Iterator of the lines in the file:\n.. code-block:: python\n\n        >>> with dw.open_remote_file('username/test-dataset', 'test.txt', mode='r') as r:\n        ...   csvr = csv.DictReader(r)\n        ...   for row in csvr:\n        ...      print(row['column a'], row['column b'])\n\n\nReading binary files works naturally, too - when opened in 'rb' mode, ``read()`` returns the contents of\nthe file as a byte array, and the file object acts as an iterator of bytes:\n.. code-block:: python\n\n        >>> with dw.open_remote_file('username/test-dataset', 'test', mode='rb') as r:\n        ...   bytes = r.read()\n\n\nAPI Wrappers\n------------\n\nFor a complete list of available API operations, see\n`official documentation <https://docs.data.world/documentation/api/>`_.\n\nPython wrappers are implemented by the ``ApiClient`` class. To obtain an instance, simply call ``api_client()``.\nFor example:\n\n.. code-block:: python\n\n    client = dw.api_client()\n\nThe client currently implements the following functions:\n\n* ``create_dataset``\n* ``update_dataset``\n* ``replace_dataset``\n* ``get_dataset``\n* ``add_files_via_url``\n* ``sync_files``\n* ``upload_files``\n* ``delete_files``\n\nYou can find more about those functions using ``help(client)``\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/datadotworld/data.world-py",
    "keywords": "data.world dataset",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "datadotworld",
    "platform": "",
    "project_url": "https://pypi.org/project/datadotworld/",
    "release_url": "https://pypi.org/project/datadotworld/1.4.1/",
    "requires_dist": [
      "pandas (<1.0a); extra == 'pandas'",
      "urllib3 (<2.0a,>=1.15)",
      "tabulator (<2.0a)",
      "six (>=1.5.0,<2.0a)",
      "requests (>=2.0.0,<3.0a)",
      "python-dateutil (>=2.6.0,<3.0a)",
      "jsontableschema (>=0.10.0,<1.0a)",
      "datapackage (>=0.8.8,<1.0a)",
      "configparser (>=3.5.0,<4.0a)",
      "click (<7.0a,>=6.0)",
      "certifi (>=2017.04.17)"
    ],
    "requires_python": "",
    "summary": "Python library for data.world",
    "version": "1.4.1"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c8e53523269b40ab1e75e4564909eb40",
          "sha256": "6e9d59f985c4e0b259e38d8fe3466ca403044c653af2c4499578c1a7c323b85b"
        },
        "downloads": 0,
        "filename": "datadotworld-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c8e53523269b40ab1e75e4564909eb40",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 36768,
        "upload_time": "2017-04-14T04:31:43",
        "url": "https://files.pythonhosted.org/packages/de/45/52cf506b1870c6d2dab3a08478c003fa14f96336993f9d7caf63ff2d6091/datadotworld-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "12fbcb5831855722922e28d0f41ce0f5",
          "sha256": "826b8e61ccc3a4c7c9800119d25077b8a2e409f24d207100ce70fd50cee2152f"
        },
        "downloads": 0,
        "filename": "datadotworld-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "12fbcb5831855722922e28d0f41ce0f5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 38120,
        "upload_time": "2017-04-14T14:45:57",
        "url": "https://files.pythonhosted.org/packages/97/cb/fa2d7ef087ecfcef33cb6e2e0777ffddacf2707718650d5b54d0464904c7/datadotworld-1.0.1.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f64a42fcf7a1db795ce8c98307fa47d4",
          "sha256": "9c837a9e3edcb3a4f2f23e14e36b1d7c933f5f1a7eefed8cdae132921facf7d0"
        },
        "downloads": 0,
        "filename": "datadotworld-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f64a42fcf7a1db795ce8c98307fa47d4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 39330,
        "upload_time": "2017-04-21T18:13:01",
        "url": "https://files.pythonhosted.org/packages/88/9c/024a2691632369e049d46a5b5145015cb2cf2274c3f6691972f23753d863/datadotworld-1.1.0.tar.gz"
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bfffd55f200a987a37dcca9a6adc1aee",
          "sha256": "d16887a74dba82c0074d428236bb5d32dbf042b2811151b71379ffc7dbde635b"
        },
        "downloads": 0,
        "filename": "datadotworld-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bfffd55f200a987a37dcca9a6adc1aee",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 39962,
        "upload_time": "2017-05-12T22:38:02",
        "url": "https://files.pythonhosted.org/packages/cc/a1/457b6dc68a98d856164e0bb75c9b9200a7e26d089de19553e76564b7b205/datadotworld-1.2.0.tar.gz"
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c64427e60f3828030de07adfa39c632c",
          "sha256": "22bcabb4dd484be1a3767ebb16f2b46f0d25682d076c715781f44dcaa53a1ced"
        },
        "downloads": 0,
        "filename": "datadotworld-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c64427e60f3828030de07adfa39c632c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 37289,
        "upload_time": "2017-06-02T04:42:50",
        "url": "https://files.pythonhosted.org/packages/b8/30/6e94d655bcd83c0ccc99f8e1397ee92f31936e18669d6810489b6bbd05d4/datadotworld-1.2.1.tar.gz"
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "db696cd7b129d327402925d5b5b172a6",
          "sha256": "45f8f19d3659070b33719b0d09672aad1c53ef6d11e62e345e6bc3d09933bf60"
        },
        "downloads": 0,
        "filename": "datadotworld-1.2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db696cd7b129d327402925d5b5b172a6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 68091,
        "upload_time": "2017-06-02T05:22:00",
        "url": "https://files.pythonhosted.org/packages/a7/7d/8575fbb521f5b7be22e472aee36fcb3f6aa588ac81353ad0f0da10974a63/datadotworld-1.2.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "dff056b29623271f5572989134fe495a",
          "sha256": "17087fc9228715ab67e61408cb4159662f7ce6b78805ba67f753a8efd9be6715"
        },
        "downloads": 0,
        "filename": "datadotworld-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dff056b29623271f5572989134fe495a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42085,
        "upload_time": "2017-06-02T05:22:02",
        "url": "https://files.pythonhosted.org/packages/06/0d/19e502c382a6dce8ac8c984e85d0751d24d39aa7accb67faff6e58ef3f46/datadotworld-1.2.2.tar.gz"
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9f13c932c96d66997cde472c2f559035",
          "sha256": "9f02cc51bc78461cca4f72c31bf1ae119e20e6434ab4a3f38cee843770acf928"
        },
        "downloads": 0,
        "filename": "datadotworld-1.2.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f13c932c96d66997cde472c2f559035",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 68118,
        "upload_time": "2017-06-02T14:17:07",
        "url": "https://files.pythonhosted.org/packages/fa/56/ebc8ac3094fd1668ec8ff3ae42555c9090578b2339685ace653a9a51baa1/datadotworld-1.2.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "f03a59766ec95af461800d392e5cf776",
          "sha256": "563a8aebb727799fd0a1a26237b9305b5c5304cb7863d14f6ffa7ed4d6c36d19"
        },
        "downloads": 0,
        "filename": "datadotworld-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f03a59766ec95af461800d392e5cf776",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42100,
        "upload_time": "2017-06-02T14:17:08",
        "url": "https://files.pythonhosted.org/packages/c2/cf/8cf46db7e225f996df56ebfa9955d1adc40511d381e49864c59c67ad937e/datadotworld-1.2.3.tar.gz"
      }
    ],
    "1.2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "207e1b36d105c2ba9745c49b8e6ee7bd",
          "sha256": "40a6342b71c52c33f39d68a7f506cebbc688a757c009b774f0cb02b7fc457432"
        },
        "downloads": 0,
        "filename": "datadotworld-1.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "207e1b36d105c2ba9745c49b8e6ee7bd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42088,
        "upload_time": "2017-06-02T15:34:44",
        "url": "https://files.pythonhosted.org/packages/dc/d1/a7af0b8a2bee1dc78c63dc5657bc157fc0b1bcd36e23f0a97a7c73383d2b/datadotworld-1.2.4.tar.gz"
      }
    ],
    "1.2.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d63993dac603fb10bb5f410d60784b38",
          "sha256": "484eaed3e44563274634daf67d134268668fa08fd4b7e72b1a151fe24ca5f531"
        },
        "downloads": 0,
        "filename": "datadotworld-1.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d63993dac603fb10bb5f410d60784b38",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42143,
        "upload_time": "2017-06-06T14:16:53",
        "url": "https://files.pythonhosted.org/packages/72/9b/2b3d40d6a380e1a7d925707c93ee7e416614fa402b1ee1dac3bba754ca5e/datadotworld-1.2.5.tar.gz"
      }
    ],
    "1.2.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "758ffd29ad07db3c27726286189524ea",
          "sha256": "d4d74918c09f2a7eab1863403262e4b2175f2685975fb719a155fd93ff0515cb"
        },
        "downloads": 0,
        "filename": "datadotworld-1.2.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "758ffd29ad07db3c27726286189524ea",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 68644,
        "upload_time": "2017-07-18T02:23:39",
        "url": "https://files.pythonhosted.org/packages/99/b8/d961091c957a1421dd9083031d532ad2a3dbe3393d4a15715dbc2c71167d/datadotworld-1.2.6-py2.py3-none-any.whl"
      }
    ],
    "1.2.6rc1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7669a90fb337b15e0875c3e94d0ef219",
          "sha256": "5fdfe2867316846612b99268090d0233da55d890ecf78f38a082dd7de53e6baf"
        },
        "downloads": 0,
        "filename": "datadotworld-1.2.6rc1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7669a90fb337b15e0875c3e94d0ef219",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 68698,
        "upload_time": "2017-07-18T02:09:19",
        "url": "https://files.pythonhosted.org/packages/93/b0/c13d7c0f6abea8800f68e2c35a44a1c3579fd4017ee1122da92065d027fb/datadotworld-1.2.6rc1-py2.py3-none-any.whl"
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e7bff89df914b592442796c0cb9252aa",
          "sha256": "8732cd57c1b4654327727c93bfba6675a25c931ea65daa351cec99f5f2bec2b7"
        },
        "downloads": 0,
        "filename": "datadotworld-1.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7bff89df914b592442796c0cb9252aa",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 73328,
        "upload_time": "2017-07-21T15:11:33",
        "url": "https://files.pythonhosted.org/packages/36/f7/e5af7a7aed5ff7680d530b3970a3ee50d5c9a80b644a15bfe2ac8bc81921/datadotworld-1.3.0-py2.py3-none-any.whl"
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "81facaaf161a737491c7e1aa02966d5d",
          "sha256": "305abc8d79d1030b44c6b27c8c7c5ee20c8b06f54cf40750044bf096fdf879dd"
        },
        "downloads": 0,
        "filename": "datadotworld-1.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "81facaaf161a737491c7e1aa02966d5d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 74856,
        "upload_time": "2017-08-01T22:31:21",
        "url": "https://files.pythonhosted.org/packages/a1/5f/a6a2c8e889e26da663f39bcfa86eeb4f6ed9fbf14b8a741134d153a293af/datadotworld-1.4.0-py2.py3-none-any.whl"
      }
    ],
    "1.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "28f7089070cc2ab85cd73c796665f81f",
          "sha256": "db85be180eb656c068621e713e9edfe9812966b6743355d3c0668bc5e5e514d9"
        },
        "downloads": 0,
        "filename": "datadotworld-1.4.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "28f7089070cc2ab85cd73c796665f81f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 74883,
        "upload_time": "2017-08-04T13:59:17",
        "url": "https://files.pythonhosted.org/packages/bf/be/e6a7fa3a8aa227e53f79c4545b2acb6f82c3e0bfc89c7d49a11141c3e5c0/datadotworld-1.4.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "328e8a29e10534a4eb18a7f38abafd95",
          "sha256": "ce4ed25b74ea1ece21b94d8b15e7762b4dc971c68bdc23645ea6a299952708f2"
        },
        "downloads": 0,
        "filename": "datadotworld-1.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "328e8a29e10534a4eb18a7f38abafd95",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 46008,
        "upload_time": "2017-08-04T13:59:19",
        "url": "https://files.pythonhosted.org/packages/44/db/ab7787f785710407410993ba7ce7504af258172e72001e385febf2fa9401/datadotworld-1.4.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "28f7089070cc2ab85cd73c796665f81f",
        "sha256": "db85be180eb656c068621e713e9edfe9812966b6743355d3c0668bc5e5e514d9"
      },
      "downloads": 0,
      "filename": "datadotworld-1.4.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "28f7089070cc2ab85cd73c796665f81f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 74883,
      "upload_time": "2017-08-04T13:59:17",
      "url": "https://files.pythonhosted.org/packages/bf/be/e6a7fa3a8aa227e53f79c4545b2acb6f82c3e0bfc89c7d49a11141c3e5c0/datadotworld-1.4.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "328e8a29e10534a4eb18a7f38abafd95",
        "sha256": "ce4ed25b74ea1ece21b94d8b15e7762b4dc971c68bdc23645ea6a299952708f2"
      },
      "downloads": 0,
      "filename": "datadotworld-1.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "328e8a29e10534a4eb18a7f38abafd95",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 46008,
      "upload_time": "2017-08-04T13:59:19",
      "url": "https://files.pythonhosted.org/packages/44/db/ab7787f785710407410993ba7ce7504af258172e72001e385febf2fa9401/datadotworld-1.4.1.tar.gz"
    }
  ]
}