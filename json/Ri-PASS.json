{
  "info": {
    "author": "Aaron Burgess",
    "author_email": "geoburge@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Natural Language :: English",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "========================================================================\nRi-PASS (Rapidly Interchangeable Python Address Standardization System)\n========================================================================\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nREQUIRES\n---------\n- python-Levenshtein 0.10.2\n- fuzzy 1.0\n- GDAL 1.6 or higher\n\nIntroduction\n-------------\n\nRi-PASS was born in a GIS environment focused on Public Health.  Researchers were\nconstantly geocoding patient records from bad data.  Bad data?  Addresses that suffered\nfrom poor data entry, rampant spelling errors or the occassional \"Data entry person\nfell asleep at the keyboard\" string (e.g. 123 $%#*Johnson St.)  Now millions of records\nsuffering from these issues and you've got geocoding issues.\n\nRi-PASS follows a few specific ideas:\n\n1. Don't just use your street centerline file or data file (SHP or CSV) to geocode only and\n   hope your default software package will find the address errors.  Use that street centerline\n   file to help clean it first!\n\n2. Local knowledge should be rewarded.  If your data contains place names that are obvious to you\n   then make them obvious to the computer!\n\n3. String matching, NLP, phonetic matching....these are all fuzzy components.  So one method usually\n   won't fit all situations.  So every method should be available.\n\n\nHow to Use (Quick Start)\n-------------------------\n\nRi-PASS starts with loading a street centerline file and/or a csv to give Ri-PASS local street\nknowledge and/or local place name knowledge.  Below we create a class instance to load and read\na shapefile.  We then point the method loadAddressList to the shapefile and provide the field name\nthat gives the full street name (this is best if this includes direction prefixes and suffixes, e.g.,\n\"E Smith St\").\n\n  **>>>roads = ripass.LoadSHP()**\n\n  **>>>roads = roads.loadAddressList(<path to shp>, <full street name field>)**\n\nRi-PASS reads the streets and calculate frequency of street name occurrence into a quantile\ndistribution.  The \"roads\" instance returns four lists: \n\n- roads[0] = Most commonly occurring roads by distribution\n- roads[1] = Second most common\n- roads[2] = Third most common\n- roads[3] = Fourth most commoon\n\nThe RiPASS function will read the list of lists to compare all distributions.\n\n\nNext, you can provide a csv with place names and matching addresses to Ri-PASS (optional):\n\n  **>>>places = ripass.LoadCSV()**\n\n  **>>>places = places.loadPlaceNameDict(<csv path>, <place Name field>,<address field>)**\n\nNow you are ready to run Ri-PASS (RiPASS function) on an address:\n\n  **>>>ripass.RiPASS(\"123 ,Johnson Apt 45\",roads,places)**\n\n  **\"123 Johnson St\"**\n\nThe RiPASS function has the following parameters:\n\n- address = The address you want to examine\n\n- addressList = The potential candidates created above\n\n- placeNameList (optional) = The list of place names and addresses. Default = None\n\n- method = The string/phonetic matching method you want to use:\n\n0. (default) = Levenshtein distance\n1. = Phonetic matching using NYSIIS and Levenshtein distance\n2. = Jaro-Winkler distance\n3. = Phonetic matching using NYSIIS and Jaro-Winkler distance\n4. = Difflib.SequenceMatcher used\n5. = Phonetic matching using NYSIIS and Difflib.SequenceMatcher\n\n- base = The base score you are willing to accept for a match candidate. Default = 0.7\n\nOther functions\n-----------------\n\nAll functions used in the RiPASS function are available for users to redesign how\naddresses are cleaned.  Please read the docstring for each function to understand it's use.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "UNKNOWN",
    "keywords": "GIS, Address, NLP",
    "license": "GPL v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Ri-PASS",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/Ri-PASS/",
    "release_url": "https://pypi.org/project/Ri-PASS/1.1/",
    "requires_python": null,
    "summary": "Street Address Cleaning Utility",
    "version": "1.1"
  },
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "63767b80ba918172579238dea88df839",
          "sha256": "bc38033267f0f0796bae4b88f90d335b9de33e3ae2701c23a4dcf7ac7828fc25"
        },
        "downloads": 2925,
        "filename": "Ri-PASS-1.1.win32.exe",
        "has_sig": false,
        "md5_digest": "63767b80ba918172579238dea88df839",
        "packagetype": "bdist_wininst",
        "python_version": "any",
        "size": 203191,
        "upload_time": "2013-01-25T17:19:37",
        "url": "https://files.pythonhosted.org/packages/3f/55/05128f6360564efafecb9d9f49bec8015e716505a8c23e3eb6d25072e90f/Ri-PASS-1.1.win32.exe"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "77a5389fde718df02db7942dc46b7651",
          "sha256": "3e71c5b2b7b1577e5e99c93e62f13836356af5c821ab581a080c7ac6bd339f8d"
        },
        "downloads": 2825,
        "filename": "Ri-PASS-1.1.zip",
        "has_sig": false,
        "md5_digest": "77a5389fde718df02db7942dc46b7651",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4632,
        "upload_time": "2013-01-25T17:19:34",
        "url": "https://files.pythonhosted.org/packages/30/e3/5eae33e2f62d816d1b1237993c9a4bbbbdbb4215c249e515268ce1f2ea85/Ri-PASS-1.1.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "63767b80ba918172579238dea88df839",
        "sha256": "bc38033267f0f0796bae4b88f90d335b9de33e3ae2701c23a4dcf7ac7828fc25"
      },
      "downloads": 2925,
      "filename": "Ri-PASS-1.1.win32.exe",
      "has_sig": false,
      "md5_digest": "63767b80ba918172579238dea88df839",
      "packagetype": "bdist_wininst",
      "python_version": "any",
      "size": 203191,
      "upload_time": "2013-01-25T17:19:37",
      "url": "https://files.pythonhosted.org/packages/3f/55/05128f6360564efafecb9d9f49bec8015e716505a8c23e3eb6d25072e90f/Ri-PASS-1.1.win32.exe"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "77a5389fde718df02db7942dc46b7651",
        "sha256": "3e71c5b2b7b1577e5e99c93e62f13836356af5c821ab581a080c7ac6bd339f8d"
      },
      "downloads": 2825,
      "filename": "Ri-PASS-1.1.zip",
      "has_sig": false,
      "md5_digest": "77a5389fde718df02db7942dc46b7651",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4632,
      "upload_time": "2013-01-25T17:19:34",
      "url": "https://files.pythonhosted.org/packages/30/e3/5eae33e2f62d816d1b1237993c9a4bbbbdbb4215c249e515268ce1f2ea85/Ri-PASS-1.1.zip"
    }
  ]
}