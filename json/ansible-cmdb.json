{
  "info": {
    "author": "Ferry Boender",
    "author_email": "ferry.boender@electricmonk.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Installation/Setup",
      "Topic :: System :: Systems Administration",
      "Topic :: Utilities"
    ],
    "description": "Ansible Configuration Management Database\n=========================================\n\n![Status: Stable](https://img.shields.io/badge/status-stable-green.svg)\n![Build Status](http://git.electricmonk.nl/job/ansible-cmdb/shield)\n![Activity: Active development](https://img.shields.io/badge/activity-active%20development-green.svg)\n![License: GPLv3](https://img.shields.io/badge/license-GPLv3-blue.svg)\n\nAbout\n-----\n\nAnsible-cmdb takes the output of Ansible's fact gathering and converts it into\na static HTML overview page (and other things) containing system configuration\ninformation.\n\nIt supports multiple types of output (html, csv, sql, etc) and extending\ninformation gathered by Ansible with custom data. For each host it also shows\nthe groups, host variables, custom variables and machine-local facts.\n\n![](https://raw.githubusercontent.com/fboender/ansible-cmdb/master/contrib/screenshot-overview.png)\n\n![](https://raw.githubusercontent.com/fboender/ansible-cmdb/master/contrib/screenshot-detail.png)\n\n[HTML example](https://rawgit.com/fboender/ansible-cmdb/master/example/html_fancy.html) output.\n\nSupported output formats / templates:\n\n* Fancy HTML (`--template html_fancy`), as seen in the screenshots above.\n* Fancy HTML Split (`--template html_fancy_split`), with each host's details\n  in a separate file (for large number of hosts).\n* CSV (`--template csv`), the trustworthy and flexible comma-separated format.\n* JSON (`--template json`), a dump of all facts in JSON format.\n* Markdown (`--template markdown`), useful for copy-pasting into Wiki's and\n  such.\n* Markdown Split ('--template markdown_split'), with each host's details\n  in a seperate file (for large number of hosts).\n* SQL (`--template sql`), for importing host facts into a (My)SQL database.\n* Plain Text table (`--template txt_table`), for the console gurus.\n* and of course, any custom template you're willing to make.\n\nInstallation\n------------\n\nAnsible-cmdb can be installed using `pip` (the Python package manager), with\nstand-alone packages for your distribution or through brew and plain old `make\ninstall`.\n\n### Through Pip\n\nFor **installation via Pip**:\n\nInstall `pip` [for your\n  distribution](https://packaging.python.org/install_requirements_linux/) if\n  you don't have it yet.\n\nInstall Ansible-cmdb through Pip:\n\n    sudo pip install ansible-cmdb\n\nYou can also upgrade Ansible-cmdb through Pip:\n\n    sudo pip install --upgrade ansible-cmdb\n\n### Through distribution packages\n\nGet the package for your distribution from the [Releases\npage](https://github.com/fboender/ansible-cmdb/releases) (Not required for\nMacOS X install)\n\nFor **Debian / Ubuntu** systems:\n\n    sudo dpkg -i ansible-cmdb*.deb\n\nFor **Redhat / Centos** systems:\n\n    sudo yum --disablerepo=* install ansible-cmdb*.rpm\n\nFor **Arch** systems:\n    [aur/ansible-cmdb](https://aur.archlinux.org/packages/ansible-cmdb/)\n\n### For other systems\n\nFor **MacOS X** systems:\n\n    brew install ansible-cmdb\n\nFor **Other** systems:\n\n    tar -vxzf ansible-cmdb*.tar.gz\n    cd ansible-cmdb*\n    sudo make install\n\nInstallation from **Git** repository:\n\n    git clone git@github.com:fboender/ansible-cmdb.git\n    cd ansible-cmdb\n    sudo make install\n\n\nUsage\n-----\n\n### Basic\n\nFirst, generate Ansible output for your hosts:\n\n    mkdir out\n    ansible -m setup --tree out/ all\n\nNext, call ansible-cmdb on the resulting `out/` directory to generate the CMDB\noverview page:\n\n    ansible-cmdb out/ > overview.html\n\nThe default template is `html_fancy`, which uses jQuery. \n\n### Full usage\n\n    Usage: ansible-cmdb [option] <dir> > output.html\n    \n    Options:\n      --version             show program's version number and exit\n      -h, --help            show this help message and exit\n      -t TEMPLATE, --template=TEMPLATE\n                            Template to use. Default is 'html_fancy'\n      -i INVENTORY, --inventory=INVENTORY\n                            Inventory to read extra info from\n      -f, --fact-cache      <dir> contains fact-cache files\n      -p PARAMS, --params=PARAMS\n                            Params to send to template\n      -d, --debug           Show debug output\n      -c COLUMNS, --columns=COLUMNS\n                            Show only given columns\n\n### Inventory scanning\n\nAnsible-cmdb can read your inventory file (`hosts`, by default), inventory\ndirectory or dynamic inventory and extract useful information from it such as:\n\n- All the groups a host belongs to.\n- Host variables. These are optional key/value pairs for each host which can be\n  used in playbooks. They are scanned by ansible-cmdb and get added to a hosts\n  discovered facts under the 'hostvars' section.\n\nReading the inventory is done using the `-i` switch to ansible-cmdb.  It takes\na single parameter: your hosts file, directory containing your hosts files or\npath to your dynamic inventory script. You may specify multiple inventory\nfiles by separating them with a comma (do not include spaces!).\n\nFor example:\n\n    $ ansible-cmdb -i ./hosts out/ > overview.html\n\nIf a `host_vars` directory exists at that location, it will also be read.\n\nThe ''html_fancy'' template uses four extra fields:\n\n- `groups`: A list of Ansible groups the host belongs to.\n- `dtap`: Whether a host is a development, test, acceptance or production\n   system.\n- `comment`: A comment for the host.\n- `ext_id`: An external unique identifier for the host.\n\nFor example, let's say we have the following `hosts` file:\n\n    [cust.megacorp]\n    db1.dev.megacorp.com   dtap=dev  comment=\"Old database server\"\n    db2.dev.megacorp.com   dtap=dev  comment=\"New database server\"\n    test.megacorp.com      dtap=test \n    acc.megacorp.com       dtap=acc  comment=\"24/7 support\"\n    megacorp.com           dtap=prod comment=\"Hosting by Foo\" ext_id=\"SRV_10029\"\n    \n    [os.redhat]\n    megacorp.com\n    acc.megacorp.com\n    test.megacorp.com\n    db2.dev.megacorp.com\n    \n    [os.debian]\n    db1.dev.megacorp.com\n\nThe host `acc.megacorp.com` will have groups 'cust.megacorp' and 'os.redhat',\nwill have a comment saying it has 24/7 support and will be marked as a `acc`\nserver. Megacorp.com host will have an external ID of \"SRV_10029\", which will\nbe required by for communicating with Foo company about hosting.\n\nSee http://docs.ansible.com/intro_inventory.html#host-variables for more\ninformation on host variables.\n\nAny variables set for your hosts will become available in the html_fancy\ntemplate under the \"Custom variables\" heading.\n\n### Templates\n\n#### Specifying templates\n\nansible-cmdb offers multiple templates. You can choose your template with the\n`-t` or `--template` argument:\n\n    ansible-cmdb -t tpl_custom out/ > overview.html\n\nThe 'html_fancy' template is the default.  \n\nTemplates can be referred to by name or by relative/absolute path to the\n`.tpl` file. This lets you implement your own templates. For example:\n\n    $ ansible-cmdb -t /home/fboender/my_template out/ > my_template.html\n\n#### Template parameters\n\nSome templates support parameters that influence their output. Parameters are\nspecified using the `-p` or `--parameter` option to `ansible-cmdb`. Multiple\nparameters may be specified by separating them with commas. There must be *no*\nspaces in the parameters.\n\nFor example, to specify the `html_fancy` template with local Javascript\nlibraries and closed trees:\n\n    ansible-cmdb -t html_fancy -p local_js=1,collapsed=1 out > overview.html\n\n\n#### Standard available templates\n\nAnsible-cmdb currently provides the following templates out of the box:\n\n* **`html_fancy`**: A dynamic, modern HTML page containing all hosts.\n* **`html_fancy_split`**: A dynamic, modern HTML page with each host's details in a separate file.\n* **`txt_table`**: A quick text table summary of the available hosts with some minimal information.\n* **`json`**: Dumps all hosts including groups, variable, custom info in JSON format.\n* **`csv`**: The CSV template outputs a CSV file of your hosts.\n* **`markdown`**: The Markdown template generates host information in the Markdown format.\n* **`sql`**: The SQL template generates an .sql file that can be loaded into an SQLite or MySQL database.\n\n**html_fancy**:\n\n`html_fancy` is currently the default template.\n\nA fancy HTML page that uses jQuery and DataTables to give you a searchable,\nsortable table overview of all hosts with detailed information just a click\naway.\n\nIt takes optional parameters:\n\n* `local_js=0|1`: Load resources from local disk (default=`0`). If set, will load resources from the local disk instead of over the network.\n* `collapsed=0|1`: Controls whether host information is collapsed by default or not. A value of `1` will collapse all host information by defaultcontrols whether host information is collapsed by default or not. A value of `1` will collapse all host information by default. (default='0')\n* `host_details=0|1`: Render host details or not. (default=`1`)\n* `skip_empty=0|1`: Skip hosts for which no facts were gathered (unreachable, etc). (default=`0`).\n\n**html_fancy_split**:\n\nThis template is basically the same as the **html_fancy** template, but it\ngenerates a `cmdb/` directory with an `index.html` file and a separate html\nfile for each host's details.\n\nUsage:\n\n    ansible-cmdb -t html_fancy_split -i hosts out/ \n\nIt accepts the same parameters as the `html_fancy` template.\n\n**sql**:\n\nThe `sql` template generates an .sql file that can be loaded into an SQLite or MySQL database.\n\n    $ ansible-cmdb -t sql -i hosts out > cmdb.sql\n    $ echo \"CREATE DATABASE ansiblecmdb\" | mysql \n    $ mysql ansiblecmdb < cmdb.sql\n\n### Fact caching\n\nAnsible can cache facts from hosts when running playbooks. This is configured\nin Ansible like:\n\n    [defaults]\n    fact_caching=jsonfile\n    fact_caching_connection = /path/to/facts/dir\n\nYou can use these cached facts as facts directories with ansible-cmdb by\nspecifying the `-f` (`--fact-cache`) option:\n\n    $ ansible-cmdb -f /path/to/facts/dir > overview.html\n\nPlease note that the `--fact-cache` option will apply to *all* fact directories\nyou specify. This means you can't mix fact-cache fact directories and normal\n`setup` fact directories. Also, if you wish to manually extend facts (see the\n`Extending` chapter), you must omit the `ansible_facts` key and put items in\nthe root of the JSON.\n\n### Columns\n\nSome templates, such as txt_table and html_fancy,  support columns. If a\ntemplate supports columns, you can use the `--columns` / `-c` command line\noption to specify which columns to show. \n\nThe `--columns` takes a comma-separated list of columns (no spaces!) which\nshould be shown.  The columns must be specified by their `id` field. For\ninformation on what `id` fields are supported by a template, take a look in the\ntemplate. Usually it's the column title, but in lowercase and with spaces\nreplaced by underscores.\n\nFor example:\n\n    $ ansible-cmdb -t txt_table --columns name,os,ip,mem,cpus facts/\n    Name                    OS             IP             Mem  CPUs\n    ----------------------  -------------  -------------  ---  -  \n    jib.electricmonk.nl     Linuxmint 17   192.168.0.3    16g  1  \n    app.uat.local           Debian 6.0.10  192.168.57.1   1g   1  \n    eek.electricmonk.nl     Ubuntu 14.04   192.168.0.10   3g   1  \n    db01.prod.local         Debian 6.0.10  192.168.58.1   0g   1  \n    debian.dev.local        Debian 6.0.10  192.168.56.2   1g   1  \n    db02.prod.local         Debian 6.0.10  192.168.58.2   0g   1  \n    centos.dev.local        CentOS 6.6     192.168.56.8   1g   1  \n    win.dev.local           Windows 2012   10.0.0.3       4g   0  \n    host5.example.com       Debian 6.0.10  192.168.57.1   1g   1  \n    db03.prod.local         Debian 6.0.10  192.168.58.3   0g   1  \n    zoltar.electricmonk.nl  Ubuntu 14.04   194.187.79.11  4g   2 \n\n### Extending\n\nYou can specify multiple directories that need to be scanned for facts. This\nlets you override, extend and fill in missing information on hosts. You can\nalso use this to create completely new hosts or to add custom facts to your\nhosts.\n\nExtended facts are basically the same as normal Ansible fact files. When you\nspecify multiple fact directories, Ansible-cmdb scans all of the in order and\noverlays the facts. \n\nNote that the host *must still* be present in your hosts file, or it will not\ngenerate anything.\n\nIf you're using the `--fact-cache` option, you must omit the `ansible_facts`\nkey and put items in the root of the JSON. This also means that you can only\nextend native ansible facts and not information read from the `hosts` file by\nansible-cmdb.\n\n\n#### Override / fill in facts\n\nSometimes Ansible doesn't properly gather certain facts for hosts. For\ninstance, OpenBSD facts don't include the `userspace_architecture` fact. You\ncan add it manually to a host.\n\nCreate a directory for your extended facts:\n\n    $ mkdir out_extend\n\nCreate a file in it for a host. The file must be named the same as it appears\nin your `hosts` file:\n\n    $ vi out_extend/openbsd.dev.local\n    {\n      \"ansible_facts\": {\n          \"ansible_userspace_architecture\": \"x86_64\"\n      }\n    }\n\nSpecify both directories when generating the output:\n\n    ./ansible-cmdb out/ out_extend/ > overview.html\n\nYour OpenBSD host will now include the 'Userspace Architecture' fact.\n\n\n#### Manual hosts\n\nFor example, lets say you have 100 linux machines, but only one windows machine.\nIt's not worth setting up ansible on that one windows machine, but you still\nwant it to appear in your overview...\n\nCreate a directory for you custom facts:\n\n    $ mkdir out_manual\n\nCreate a file in it for your windows host:\n\n    $ vi out_manual/win.dev.local\n    {\n      \"groups\": [\n      ],\n      \"ansible_facts\": {\n        \"ansible_all_ipv4_addresses\": [\n          \"10.10.0.2\",\n          \"191.37.104.122\"\n        ], \n        \"ansible_default_ipv4\": {\n          \"address\": \"191.37.104.122\"\n        }, \n        \"ansible_devices\": {\n        }, \n        \"ansible_distribution\": \"Windows\", \n        \"ansible_distribution_major_version\": \"2008\", \n        \"ansible_distribution_release\": \"\", \n        \"ansible_distribution_version\": \"2008\", \n        \"ansible_domain\": \"win.dev.local\", \n        \"ansible_fips\": false, \n        \"ansible_form_factor\": \"VPS\", \n        \"ansible_fqdn\": \"win.dev.local\", \n        \"ansible_hostname\": \"win\", \n        \"ansible_machine\": \"x86_64\", \n        \"ansible_nodename\": \"win.dev.local\", \n        \"ansible_userspace_architecture\": \"x86_64\", \n        \"ansible_userspace_bits\": \"64\", \n        \"ansible_virtualization_role\": \"guest\", \n        \"ansible_virtualization_type\": \"xen\", \n        \"module_setup\": true\n      }, \n      \"changed\": false\n    }\n\nNow you can create the overview including the windows host by specifying two\nfact directories:\n\n    ./ansible-cmdb out/ out_manual/ > overview.html\n\n\n#### Custom facts\n\nYou can add custom facts (not to be confused with 'custom variables') to you\nhosts. These facts will be displayed in the `html_fancy` template by default\nunder the 'Custom facts' header.\n\nLet's say you want to add information about installed software to your facts.\n\nCreate a directory for you custom facts:\n\n    $ mkdir out_custom\n\nCreate a file in it for the host where you want to add the custom facts:\n\n    $ vi custfact.test.local\n    {\n      \"custom_facts\": {\n        \"software\": {\n          \"apache\": {\n            \"version\": \"2.4\",\n            \"install_src\": \"backport_deb\"\n          },\n          \"mysql-server\": {\n            \"version\": \"5.5\",\n            \"install_src\": \"manual_compile\"\n          },\n          \"redis\": {\n            \"version\": \"3.0.7\",\n            \"install_src\": \"manual_compile\"\n          }\n        }\n      }\n    }\n\nFor this to work the facts **must** be listed under the **custom_facts** key.\n\nGenerate the overview:\n\n    ./ansible-cmdb out/ out_custom/ > overview.html\n\nThe software items will be listed under the \"*Custom facts*\" heading.\n\n\nInfrequently Asked Questions\n----------------------------\n\n### Solaris machines have no disk information\n\nAnsible currently does not include disk size information for Solaris hosts. As\nsuch, we can't include it in the output of Ansible-cmdb. See issue #24 for more\ninformation.\n\n\nContributing and Development\n----------------------------\n\nSee the [Development documentation](DEVELOPMENT.md) for information on contributing and\ndevelopment.\n\nLicensing and credits\n---------------------\n\nAnsible-cmdb is licensed under the GPLv3:\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n    For the full license, see the LICENSE file.\n\nAnsible-cmdb started as a short Python script, which I blogged about here:\n\n    http://www.electricmonk.nl/log/2015/01/21/host-inventory-overview-using-ansibles-facts/\n\nCris van Pelt then took that and expanded it into a HTML page. Eventually I\nforked it to Github and made it public, adding features. Many people\ncollaborated to make Ansible-cmdb into what it is today. For a full list, see\nthe annotations in the CHANGELOG.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/fboender/ansible-cmdb",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ansible-cmdb",
    "platform": "",
    "project_url": "https://pypi.org/project/ansible-cmdb/",
    "release_url": "https://pypi.org/project/ansible-cmdb/1.24/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Generate host overview from ansible fact gathering output",
    "version": "1.24"
  },
  "releases": {
    "1.18": [
      {
        "comment_text": "",
        "digests": {
          "md5": "61895c9a3337333d63cf8b2881495194",
          "sha256": "d8134530d7a270bacb4e45110f2c331b3b9a29ca0c11ad46f8e9bf43542d767a"
        },
        "downloads": -1,
        "filename": "ansible_cmdb-1.18-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "61895c9a3337333d63cf8b2881495194",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 186419,
        "upload_time": "2016-12-17T12:23:25",
        "url": "https://files.pythonhosted.org/packages/5c/fe/30c5ffac3ada0ae82885fbfd88895da0013a37c68a1c7a7d6b0030a0664e/ansible_cmdb-1.18-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3a00298a590091c13b7563a0dd1ce3be",
          "sha256": "1a4ee7c3f1d129ec86f35d7e7ced59bb766b88e751d5401e14691f976a6845ee"
        },
        "downloads": -1,
        "filename": "ansible-cmdb-1.18.tar.gz",
        "has_sig": false,
        "md5_digest": "3a00298a590091c13b7563a0dd1ce3be",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25328,
        "upload_time": "2016-12-17T12:23:22",
        "url": "https://files.pythonhosted.org/packages/9b/c1/be32d12ba88b747b93df96229a361b2594236d69f524bed34e7c48a7a446/ansible-cmdb-1.18.tar.gz"
      }
    ],
    "1.19": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6a97e67093c4d8d03e6070d52e3231ac",
          "sha256": "855e18955e014f7b76f7885a13c35ca339912ca218e885a7a66d36b797e2bb99"
        },
        "downloads": -1,
        "filename": "ansible_cmdb-1.19-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a97e67093c4d8d03e6070d52e3231ac",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 184240,
        "upload_time": "2017-01-08T08:46:55",
        "url": "https://files.pythonhosted.org/packages/b6/6d/fd2043975a10a621d29a3f4a394dff17dc47bdd4f8c4f17af03d5d588823/ansible_cmdb-1.19-py2.py3-none-any.whl"
      }
    ],
    "1.20": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b6bfa2245260e84b06006083b5aafb81",
          "sha256": "71d29c50f6a3ca9b6e761765121a78983c29db9caaede7346e160cd55262ad53"
        },
        "downloads": -1,
        "filename": "ansible_cmdb-1.20-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6bfa2245260e84b06006083b5aafb81",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 185810,
        "upload_time": "2017-02-12T16:50:46",
        "url": "https://files.pythonhosted.org/packages/88/e8/3bbe7474d1cfa8f66087a9d9826fedf810fcbc0ee6ac68d5acc1ead7c859/ansible_cmdb-1.20-py2.py3-none-any.whl"
      }
    ],
    "1.21": [],
    "1.23": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d4d69d0bf8b8e26900fab5053d1bdcd8",
          "sha256": "1fa811a008ff9a32a68c7c3010fb2c0ebfbf67c3f1dc2f5262521817b24538be"
        },
        "downloads": -1,
        "filename": "ansible-cmdb-1.23.tar.gz",
        "has_sig": false,
        "md5_digest": "d4d69d0bf8b8e26900fab5053d1bdcd8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 179541,
        "upload_time": "2017-10-14T09:29:33",
        "url": "https://files.pythonhosted.org/packages/ab/dc/c1d920a150c9ddbf81340ab21743ee02e5a8209685c173cc0c5ce1c2fcf4/ansible-cmdb-1.23.tar.gz"
      }
    ],
    "1.24": [
      {
        "comment_text": "",
        "digests": {
          "md5": "36d84e60387f52cd0845c11ef8aa069f",
          "sha256": "9eafe4cb5775a785c6e5e55408c86416de9c8ac1c000b8a7eb37c80291cd65c5"
        },
        "downloads": -1,
        "filename": "ansible-cmdb-1.24.tar.gz",
        "has_sig": false,
        "md5_digest": "36d84e60387f52cd0845c11ef8aa069f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 179534,
        "upload_time": "2017-10-27T08:28:40",
        "url": "https://files.pythonhosted.org/packages/6e/8c/162c29ac84ab0a1c3b6e859b107328dca6012105372ac6078e738b3517a2/ansible-cmdb-1.24.tar.gz"
      }
    ],
    "1.6": []
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "36d84e60387f52cd0845c11ef8aa069f",
        "sha256": "9eafe4cb5775a785c6e5e55408c86416de9c8ac1c000b8a7eb37c80291cd65c5"
      },
      "downloads": -1,
      "filename": "ansible-cmdb-1.24.tar.gz",
      "has_sig": false,
      "md5_digest": "36d84e60387f52cd0845c11ef8aa069f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 179534,
      "upload_time": "2017-10-27T08:28:40",
      "url": "https://files.pythonhosted.org/packages/6e/8c/162c29ac84ab0a1c3b6e859b107328dca6012105372ac6078e738b3517a2/ansible-cmdb-1.24.tar.gz"
    }
  ]
}