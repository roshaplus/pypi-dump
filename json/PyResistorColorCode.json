{
  "info": {
    "author": "Fabrice Salvaire",
    "author_email": "fabrice.salvaire@orange.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Education",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Topic :: Scientific/Engineering"
    ],
    "description": ".. -*- Mode: rst -*-\n\n.. |ohloh| image:: https://www.ohloh.net/accounts/230426/widgets/account_tiny.gif\n   :target: https://www.ohloh.net/accounts/fabricesalvaire\n   :alt: Fabrice Salvaire's Ohloh profile\n   :height: 15px\n   :width:  80px\n\n==========================\nPyResistorColorCode V0.1.0\n==========================\n\nThe user and API documentation is hosted on the project `homepage <http://fabricesalvaire.github.io/PyResistorColorCode>`_.\n\nWritten by `Fabrice Salvaire <http://fabrice-salvaire.pagesperso-orange.fr>`_.\n\n==========\n Overview\n==========\n\n.. -*- Mode: rst -*-\n\nPyResistorColorCode is a Python module that provides some tools to manage `IEC 60062\n<http://webstore.iec.ch/webstore/webstore.nsf/artnum/033377!openDocument>`_ marking codes for\nresistors.\n\n.. IEC 60062 is also for \"and capacitors\"\n\nThe associated program **resistor-decoder** provides a graphical user interface to help user to\ndecode a resistor colour-coding using an inference algorithm. This feature is an enhancement\ncompared to a program like **gresistor** which is only a colour-coding calculator.\n\nI started to develop this software a day where I had to sort a lot of unsorted resistors in a\njumble. Resistors colour-coding using no more than 3 bands (2 digits and a multiplier) are no too\ndifficult to decode when a person is experienced. But for more accurate resistors, it is more\ntricky. Another difficulty arises when it is difficult to recognise the colour of a band, due to an\ninappropriate colour contrast or tone. For strange colour-coding we can in last resort use an\nOhmmeter to measure the resistance value. But it doesn't respond to the question what is the\nspecification of this resistor: tolerance, temperature coefficient, etc. For all theses reasons, I\ndeveloped an inference algorithm coupled to an graphical user interface to help user to decode\nresistor colour-coding.\n\n.. End\n\n.. The user and API documentation is hosted `here <http://fabricesalvaire.github.io/PyResistorColorCode>`_.\n\n.. image:: https://raw.github.com/FabriceSalvaire/PyResistorColorCode/master/doc/sphinx/source/images/resistor-decoder.png\n\nInference Algorithm\n-------------------\n\n.. -*- Mode: rst -*-\n\nThe inference algorithm works as follow:\n\n* code orientation (left-right or right-left) doesn't matter,\n* unset bands are not take into account,\n* at least 3 colours must be provided: 2 digits and the multiplier,\n* colour band are interpreted by priority as:\n\n #. resistance value,\n #. resistance tolerance,\n #. temperature coefficient,\n\n* the resistance value must exists in a IEC 60063 series: E6, E12, E48, E96, E192,\n* the resistance tolerance must be defined if there is a colour band assigned to it. \n\nWhen there is more than one hypothesis for the given input, the hypotheses are sorted by ascending\nprecision (series).\n\n.. End\n\n\n==============\n Installation\n==============\n\nYou can install from `Pypy <https://pypi.python.org/pypi/PyResistorColorCode>`_::\n\n  pip install PyResistorColorCode\n\nbut pip is unable to install `PyQt <http://www.riverbankcomputing.co.uk/software/pyqt/intro>`_. If\nyou are on Linux then install the corresponding package else download the installer from `PyQt\ndownload page <http://www.riverbankcomputing.co.uk/software/pyqt/download>`_.\n\nSource Repository\n-----------------\n\nThe source code is licensed under GPL V3 and is hosted on `GitHub\n<https://github.com/FabriceSalvaire/PyResistorColorCode>`_.  Also a Python package is available on `PyPI\n<http://pypi.python.org/pypi/PyResistorColorCode>`_. And the relative project page on |ohloh| is\nlocated on the `ohloh project page <https://www.ohloh.net/p/PyResistorColorCode>`_.\n\nRequirements\n------------\n\n* Python 2.7\n* PyQt 4.8\n\nManual Installation\n-------------------\n\nAlternatively you can download the source from Github or Pypi and run the following commands in a\nterminal within the source directory::\n\n  python setup.py build\n  python setup.py install\n\nRunning\n-------\n\nSet the terminal environment using::\n\n  source setenv.sh\n\nthen run the command::\n\n  bin/resistor-decoder\n\nPackage for Linux\n-----------------\n\nRPM *.spec* files are provided for Fedora (up to F18), see *spec* directory in the sources.\n\n.. End\n\n.. End",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://fabricesalvaire.github.io/PyResistorColorCode",
    "keywords": "resistor color colour code IEC 6006",
    "license": "GPLv3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "PyResistorColorCode",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/PyResistorColorCode/",
    "release_url": "https://pypi.org/project/PyResistorColorCode/0.1.0/",
    "requires_python": null,
    "summary": "Python module providing some tools to manage IEC 60062 marking codes for resistors.",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9e42dd6d8dbe2cb2dce804af2b31b64d",
          "sha256": "05f64e5fdd2f6823829337b7a4e09209434278649017d42c4d18904bb2029416"
        },
        "downloads": 2553,
        "filename": "PyResistorColorCode-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9e42dd6d8dbe2cb2dce804af2b31b64d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 159993,
        "upload_time": "2014-04-08T15:53:02",
        "url": "https://files.pythonhosted.org/packages/51/28/3ee29e47f4a921103475707ee2fb138f3510e8095afa65047bde5ad48b71/PyResistorColorCode-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9e42dd6d8dbe2cb2dce804af2b31b64d",
        "sha256": "05f64e5fdd2f6823829337b7a4e09209434278649017d42c4d18904bb2029416"
      },
      "downloads": 2553,
      "filename": "PyResistorColorCode-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9e42dd6d8dbe2cb2dce804af2b31b64d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 159993,
      "upload_time": "2014-04-08T15:53:02",
      "url": "https://files.pythonhosted.org/packages/51/28/3ee29e47f4a921103475707ee2fb138f3510e8095afa65047bde5ad48b71/PyResistorColorCode-0.1.0.tar.gz"
    }
  ]
}