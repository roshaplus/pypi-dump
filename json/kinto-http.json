{
  "info": {
    "author": "Mozilla Services",
    "author_email": "storage@mozilla.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "Kinto python client\n###################\n\n.. image:: https://img.shields.io/travis/Kinto/kinto-http.py.svg\n        :target: https://travis-ci.org/Kinto/kinto-http.py\n\n.. image:: https://img.shields.io/pypi/v/kinto-http.svg\n        :target: https://pypi.python.org/pypi/kinto-http\n\n.. image:: https://coveralls.io/repos/Kinto/kinto-http.py/badge.svg?branch=master\n        :target: https://coveralls.io/r/Kinto/kinto-http.py\n\n\nKinto is a service that allows users to store and synchronize arbitrary data,\nattached to a user account. Its primary interface is HTTP.\n\n*kinto-http* is a Python library that eases the interactions with\na *Kinto* server instance. `A project with related goals is\nalso available for JavaScript <https://github.com/kinto/kinto-http.js>`_.\n\n\nInstallation\n============\n\nUse pip::\n\n  $ pip install kinto-http\n\n\nUsage\n=====\n\n.. note::\n\n    Operations are always performed directly on the server, and no\n    synchronisation features have been implemented yet.\n\n- The first version of this API doesn't cache any access nor provides any\n  refresh mechanism. If you want to be sure you have the latest data available,\n  issue another call.\n\nHere is an overview of what the API provides:\n\n.. code-block:: python\n\n    from kinto_http import Client\n\n    client = Client(server_url=\"http://localhost:8888/v1\",\n                    auth=('alexis', 'p4ssw0rd'))\n\n    records = client.get_records(bucket='default', collection='todos')\n    for i, record in enumerate(records):\n        record['title'] = 'Todo {}'.format(i)\n\n    for record in records:\n        client.update_record(record)\n\nCreating a client\n-----------------\n\nThe passed `auth` parameter is a `requests <http://docs.python-requests.org>`_\nauthentication policy, allowing authenticating using whatever scheme fits you\nbest.\n\nBy default, Kinto supports\n`Firefox Accounts <https://wiki.mozilla.org/Identity/Firefox_Accounts>`_ and\nBasic authentication policies.\n\n.. code-block:: python\n\n    from kinto_http import Client\n    credentials = ('alexis', 'p4ssw0rd')\n\n    client = Client(server_url='http://localhost:8888/v1',\n                    auth=credentials)\n\nIt is also possible to pass the bucket and the collection to the client\nat creation time, so that this value will be used by default.\n\n.. code-block:: python\n\n    auth = (\"token\", \"secret\")\n    client = Client(bucket=\"payments\", collection=\"receipts\", auth=auth)\n\nAfter creating a client, you can also replicate an existing one and overwrite\nsome key arguments.\n\n.. code-block:: python\n\n    client2 = client.clone(collection=\"orders\")\n\nUsing FxA from a script with the email/password\n-----------------------------------------------\n\n.. code-block:: python\n\n    from fxa.plugins.requests import FxABearerTokenAuth\n\n    auth = FxABearerTokenAuth(\n        email, passwd,\n        scopes=['kinto'],\n        client_id=\"<FXA-CLIENT-ID>\",\n        account_server_url='https://api.accounts.firefox.com/v1',\n        oauth_server_url='https://oauth.accounts.firefox.com/v1',\n    )\n    client = Client(bucket=\"payments\", collection=\"receipts\", auth=auth)\n\n\nGetting server information\n--------------------------\n\nYou can use the ``server_info`` method to get the server information:\n\n.. code-block:: python\n\n    from kinto_http import Client\n\n    client = Client(server_url='http://localhost:8888/v1')\n    info = client.server_info()\n    assert 'schema' in info['capabilities'], \"Server doesn't support schema validation.\"\n\n\nHandling buckets\n----------------\n\nAll operations are rooted in a bucket. It makes little sense for\none application to handle multiple buckets at once (but it is possible).\nIf no specific bucket name is provided, the \"default\" bucket is used.\n\n.. code-block:: python\n\n    from kinto_http import Client\n    from kinto_http.patch_type import BasicPatch, MergePatch, JSONPatch\n    credentials = ('alexis', 'p4ssw0rd')\n\n    client = Client(server_url='http://localhost:8888/v1',\n                    auth=credentials)\n\n    # To create a bucket.\n    client.create_bucket(id='payments')\n\n    # To get an existing bucket\n    bucket = client.get_bucket(id='payments')\n\n    # Or retrieve all readable buckets.\n    buckets = client.get_buckets()\n\n    # To create or replace an existing bucket.\n    client.update_bucket(id='payments', data={'description': 'My payments data.'})\n\n    # Or modify some fields in an existing bucket.\n    # The Kinto server supports different types of patches, which can be used from kinto_http.patch_type.\n    client.patch_bucket(id='payments', data=BasicPatch({'status': 'updated'}))\n\n    # It is also possible to manipulate bucket permissions (see later)\n    client.patch_bucket(id='payments', data=BasicPatch(permissions={}))\n\n    # Or delete a bucket and everything under.\n    client.delete_bucket(id='payment')\n\n    # Or even every writable buckets.\n    client.delete_buckets()\n\n\nGroups\n------\n\nA group associates a name to a list of principals. It is useful in order to handle permissions.\n\n.. code-block:: python\n\n    # To create a group.\n    client.create_group(id='receipts', bucket='payments', data={'members': ['blah', 'foo']})\n\n    # Or get an existing one.\n    group = client.get_group(id='receipts', bucket='payments')\n\n    # Or retrieve all groups in the bucket.\n    groups = client.get_groups(bucket='payments')\n\n    # To create or replace an existing bucket.\n    client.update_group(id='receipts', bucket='payments', 'data'={'members':['foo']})\n\n    # Or modify some fields in an existing group.\n    # This uses the server's support for JSON patch, but any patch_type is accepted.\n    client.patch_group(id='receipts', bucket='payments',\n        data=JSONPatch([{'op': 'add', 'location': 'description', 'value': 'my group'}]))\n\n    # To delete an existing group.\n    client.delete_group(id='receipts', bucket='payments')\n\n    # Or all groups in a bucket.\n    client.delete_groups(bucket='payments')\n\n\nCollections\n-----------\n\nA collection is where records are stored.\n\n.. code-block:: python\n\n    # To create a collection.\n    client.create_collection(id='receipts', bucket='payments')\n\n    # Or get an existing one.\n    collection = client.get_collection(id='receipts', bucket='payments')\n\n    # Or retrieve all of them inside a bucket.\n    collections = client.get_collections(bucket='payments')\n\n    # To create or replace an exiting collection.\n    client.update_collection(id='receipts', bucket='payments', data={'description':'bleeh'})\n\n    # Or modify some fields of an existing collection.\n    client.patch_collection(id='receipts', bucket='payments', data=MergePatch({'status':'updated'}))\n\n    # To delete an existing collection.\n    client.delete_collection(id='receipts', bucket='payments')\n\n    # Or every collections in a bucket.\n    client.delete_collections(bucket='payments')\n\n\nRecords\n-------\n\nRecords can be retrieved from and saved to collections.\n\nA record is a dict with the \"permissions\" and \"data\" keys.\n\n.. code-block:: python\n\n    # You can pass a python dictionary to create the record.\n    client.create_record(data={'status': 'done', title: 'Todo #1'},\n                         collection='todos', bucket='default')\n\n    # You can use id to specify the record id when creating it.\n    client.create_record(id='todo2', data={'status': 'doing', 'title': 'Todo #2'},\n                         collection='todos', bucket='default')\n\n    # Or get an existing one by its id.\n    record = client.get_record(id='todo2', collection='todos', bucket='default')\n\n    # Or retrieve all records.\n    records = client.get_records(collection='todos', bucket='default')\n\n    # Or retrieve records timestamp.\n    records_timestamp = client.get_records_timestamp(collection='todos', bucket='default')\n\n    # To replace a record using a previously fetched record\n    client.update_record(data=record, collection='todos', bucket='default')\n\n    # Or create or replace it by its id.\n    client.update_record(data={'status': 'unknown'}, id='todo2', collection='todos', bucket='default')\n\n    # Or modify some fields in an existing record.\n    client.patch_record(data=MergePatch({'assignee': 'bob'}), id='todo2', collection='todos', bucket='default')\n\n    # To delete an existing record.\n    client.delete_record(id='89881454-e4e9-4ef0-99a9-404d95900352',\n                         collection='todos')\n\n    # Or every records of a collection.\n    client.delete_records(collection='todos')\n\n\nPermissions\n-----------\n\n By default, authors will get read and write access to the manipulated objects.\n It is possible to change this behavior by passing a dict to the `permissions`\n parameter.\n\n .. code-block:: python\n\n    client.create_record(\n        data={'foo': 'bar'},\n        permissions={'read': ['group:groupid']},\n        collection='todos')\n\n.. note::\n\n    Every creation or modification operation on a distant object can be given\n    a `permissions` parameter.\n\nBuckets, collections and records have permissions which can be edited.\nFor instance to give access to \"leplatrem\" to a specific record, you would do:\n\n.. code-block:: python\n\n  record = client.get_record(1234, collection='todos', bucket='alexis')\n  record['permissions']['write'].append('leplatrem')\n  client.update_record(record)\n\n  # During creation, it is possible to pass the permissions dict.\n  client.create_record(data={'foo': 'bar'}, permissions={})\n\nGet or create\n-------------\n\nIn some cases, you might want to create a bucket, collection, group or record only if\nit doesn't exist already. To do so, you can pass the ``if_not_exists=True``\nto the ``create_*`` methods::\n\n  client.create_bucket(id='bucket', if_not_exists=True)\n\nDelete\n------\n\nIn some cases, you might want to delete a bucket, collection, group or record only if\nit exists already. To do so, you can pass the ``if_exists=True``\nto the ``delete_*`` methods::\n\n  client.delete_bucket(id='bucket', if_exists=True)\n\nOverwriting existing objects\n----------------------------\n\nMost of the methods take a ``safe`` argument, which defaults to ``True``. If set\nto ``True`` and a ``last_modified`` field is present in the passed ``data``,\nor if the ``if_match`` parameter is specified then a\ncheck will be added to the requests to ensure the record wasn't modified on\nthe server side in the meantime.\n\nBatching operations\n-------------------\n\nRather than issuing a request for each and every operation, it is possible to\nbatch the requests. The client will then issue as little requests as possible.\n\nIt is possible to do batch requests using a Python context manager (``with``):\n\n.. code-block:: python\n\n  with client.batch() as batch:\n      for idx in range(0, 100):\n          batch.update_record(data={'id': idx})\n\nReading data from batch operations is achieved by using the ``results()`` method\navailable after a batch context is closed.\n\n.. code-block:: python\n\n  with client.batch() as batch:\n      batch.get_record('r1')\n      batch.get_record('r2')\n      batch.get_record('r3')\n\n  r1, r2, r3 = batch.results()\n\nBesides the ``results()`` method, a batch object shares all the same methods as\nanother client.\n\nRetry on error\n--------------\n\nWhen the server is throttled (under heavy load or maintenance) it can\nreturn error responses.\n\nThe client can hence retry to send the same request until it succeeds.\nTo enable this, specify the number of retries on the client:\n\n.. code-block:: python\n\n  client = Client(server_url='http://localhost:8888/v1',\n                  auth=credentials,\n                  retry=10)\n\nThe Kinto protocol lets the server `define the duration in seconds between retries\n<https://kinto.readthedocs.io/en/latest/api/1.x/backoff.html>`_.\nIt is possible (but not recommended) to force this value in the clients:\n\n.. code-block:: python\n\n  client = Client(server_url='http://localhost:8888/v1',\n                  auth=credentials,\n                  retry=10,\n                  retry_after=5)\n\nPagination\n----------\n\nWhen the server responses are paginated, the client will download every pages and\nmerge them transparently.\n\nHowever, it is possible to specify a limit for the number of items to be retrieved\nin one page:\n\n.. code-block:: python\n\n    records = client.get_records(_limit=10)\n\nIn order to retrieve every available pages with a limited number of items in each\nof them, you can specify the number of pages:\n\n.. code-block:: python\n\n    records = client.get_records(_limit=10, pages=float('inf'))  # Infinity\n\n\nGenerating endpoint paths\n-------------------------\n\nYou may want to generate some endpoint paths, you can use the\nget_endpoint utility to do so:\n\n.. code-block:: python\n\n    client = Client(server_url='http://localhost:8888/v1',\n                    auth=('token', 'your-token'),\n                    bucket=\"payments\",\n                    collection=\"receipts\")\n    print(client.get_endpoint(\"record\",\n                              id=\"c6894b2c-1856-11e6-9415-3c970ede22b0\"))\n\n    # '/buckets/payments/collections/receipts/records/c6894b2c-1856-11e6-9415-3c970ede22b0'\n\n\nCommand-line scripts\n--------------------\n\nIn order to have common arguments and options for scripts, some utilities are provided\nto ease configuration and initialization of client from command-line arguments.\n\n.. code-block:: python\n\n  import argparse\n  import logging\n\n  from kinto_http import cli_utils\n\n  logger = logging.getLogger(__name__)\n\n  if __name__ == \"__main__\":\n      parser = argparse.ArgumentParser(description=\"Download records\")\n      cli_utils.set_parser_server_options(parser)\n\n      args = parser.parse_args()\n\n      cli_utils.setup_logger(logger, args)\n\n      logger.debug(\"Instantiate Kinto client.\")\n      client = cli_utils.create_client_from_args(args)\n\n      logger.info(\"Fetch records.\")\n      records = client.get_records()\n      logger.warn(\"{} records.\".format(len(records)))\n\nThe script now accepts basic options:\n\n::\n\n  $ python example.py --help\n\n  usage: example.py [-h] [-s SERVER] [-a AUTH] [-b BUCKET] [-c COLLECTION] [-v]\n                    [-q] [-D]\n\n  Download records\n\n  optional arguments:\n    -h, --help            show this help message and exit\n    -s SERVER, --server SERVER\n                          The location of the remote server (with prefix)\n    -a AUTH, --auth AUTH  BasicAuth token:my-secret\n    -b BUCKET, --bucket BUCKET\n                          Bucket name.\n    -c COLLECTION, --collection COLLECTION\n                          Collection name.\n    --retry RETRY         Number of retries when a request fails\n    --retry-after RETRY_AFTER\n                          Delay in seconds between retries when requests fail\n                          (default: provided by server)\n    -v, --verbose         Show all messages.\n    -q, --quiet           Show only critical errors.\n    -D, --debug           Show all messages, including debug messages.\n\n\n\nRun tests\n=========\n\nIn one terminal, run a Kinto server:\n\n::\n\n    $ make runkinto\n\nIn another, run the tests against it:\n\n::\n\n    $ make tests",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Kinto/kinto-http.py/",
    "keywords": "web services",
    "license": "Apache License (2.0)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kinto-http",
    "platform": "",
    "project_url": "https://pypi.org/project/kinto-http/",
    "release_url": "https://pypi.org/project/kinto-http/9.1.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Kinto client",
    "version": "9.1.1"
  },
  "releases": {
    "6.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "466928d0261c0ac05cc1daf5128efe7d",
          "sha256": "adbc0e075d64e881296d30814114c130444a79459c5972b87660192d63499c67"
        },
        "downloads": -1,
        "filename": "kinto_http-6.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "466928d0261c0ac05cc1daf5128efe7d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 32394,
        "upload_time": "2016-06-10T10:33:55",
        "url": "https://files.pythonhosted.org/packages/4f/26/3a272ef4c5cacc758ef133c0c5929a685633529bd722f969347bad9e8559/kinto_http-6.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5187cc8f6cfd0dd934d4263aee5bee0b",
          "sha256": "585fe9a21635df9136f7bbe7e35225c730d617a275965a3583b6d7ffb73de1e2"
        },
        "downloads": -1,
        "filename": "kinto-http-6.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5187cc8f6cfd0dd934d4263aee5bee0b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29126,
        "upload_time": "2016-06-10T10:33:59",
        "url": "https://files.pythonhosted.org/packages/59/62/5fed0741ac447cf7c878cd9222b68e4d53d2ef343bca07f934132ab7d0b2/kinto-http-6.0.0.tar.gz"
      }
    ],
    "6.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "eac19d8d72409badb0f27af353acf10b",
          "sha256": "a3087262b01dd6e2e9191ad5a381960ad5f2a50687c7bb14ac7afa92085fef9d"
        },
        "downloads": -1,
        "filename": "kinto_http-6.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eac19d8d72409badb0f27af353acf10b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 32691,
        "upload_time": "2016-08-04T14:50:15",
        "url": "https://files.pythonhosted.org/packages/4e/1e/42e4c5775e6613cb5b579a1494cd7a032ed7977ef1beb74a0d8e56daa891/kinto_http-6.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4b80324dc7fc4abaef35e065b21a6681",
          "sha256": "f8462ce3bc4787b8458977b48df0848797eda35423853e0948f2871582f9ff43"
        },
        "downloads": -1,
        "filename": "kinto-http-6.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4b80324dc7fc4abaef35e065b21a6681",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29346,
        "upload_time": "2016-08-04T14:50:18",
        "url": "https://files.pythonhosted.org/packages/3e/3b/23fc30fae4065b5963856d65d71adb93ad9eefb3dceabb9315e7e59ee8d7/kinto-http-6.1.0.tar.gz"
      }
    ],
    "6.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3b5f83d18015c3d4289ebc8d95273d01",
          "sha256": "e4bcd2a8c0a6553abcc1badf196290fe74d58138fd0968aed8810104d3fb6e8b"
        },
        "downloads": -1,
        "filename": "kinto_http-6.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b5f83d18015c3d4289ebc8d95273d01",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 33511,
        "upload_time": "2016-09-08T09:58:28",
        "url": "https://files.pythonhosted.org/packages/6f/69/278b324c7fa57fc2c91df54d539936f7a8809e4b79a31c7ac05362127165/kinto_http-6.2.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2bccd8e2afe937eeee13c2da0bd32936",
          "sha256": "c1f896d76e7e1947b5597a66ade8e90dd3a970ba57f8680f0bad7b6fcc1d62f4"
        },
        "downloads": -1,
        "filename": "kinto-http-6.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2bccd8e2afe937eeee13c2da0bd32936",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30393,
        "upload_time": "2016-09-08T09:58:30",
        "url": "https://files.pythonhosted.org/packages/ed/cf/ffec089f266c2097da833b0afa5a99b71e54fdf36f587ed4bbb0d389633d/kinto-http-6.2.1.tar.gz"
      }
    ],
    "7.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "06d04e1edcded0a7a129409aff8db30f",
          "sha256": "e01676ceae9fce547accd75982e86a5ed091f7308efb27a040c3e9a05b83428b"
        },
        "downloads": -1,
        "filename": "kinto_http-7.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "06d04e1edcded0a7a129409aff8db30f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 34421,
        "upload_time": "2016-09-30T12:12:08",
        "url": "https://files.pythonhosted.org/packages/ed/46/c6d13b6cf3ab7f98b2b169d7a63591a5ee85adcb3a24488e9df3f350d049/kinto_http-7.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "240367c4b9214855790f413e4bc947c3",
          "sha256": "4a702b81b751e55a39f30cb75152910418280cb8683e8ffc3878638ab5a76bdc"
        },
        "downloads": -1,
        "filename": "kinto-http-7.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "240367c4b9214855790f413e4bc947c3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28317,
        "upload_time": "2016-09-30T12:12:11",
        "url": "https://files.pythonhosted.org/packages/30/90/32e15fc2587a3b71359b4da00fbb323ccd00d96d034cbedd4918e613bc6d/kinto-http-7.0.0.tar.gz"
      }
    ],
    "7.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2357f4585f208671e144b515830369ea",
          "sha256": "119375fd818c730836baab859b9482f4e9d831afdd11a788999778cc98bf771a"
        },
        "downloads": -1,
        "filename": "kinto_http-7.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2357f4585f208671e144b515830369ea",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 36687,
        "upload_time": "2017-03-16T16:13:55",
        "url": "https://files.pythonhosted.org/packages/47/28/e0ee28cdfeeb8509abc2b1aca0a074137bdc60b9d09f9d96e408c353dfef/kinto_http-7.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d3b674e7fe08a0bfb3d400c1f86ade4b",
          "sha256": "c52266dbedb163281fb4f38fd34392a4816b549a4bdf1c2191d15d1ad934668f"
        },
        "downloads": -1,
        "filename": "kinto-http-7.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d3b674e7fe08a0bfb3d400c1f86ade4b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 34274,
        "upload_time": "2017-03-16T16:13:57",
        "url": "https://files.pythonhosted.org/packages/4b/16/7cbcebcaff62ff6b19abf81038828a4b230b4fe0845526afce46d023f244/kinto-http-7.1.0.tar.gz"
      }
    ],
    "7.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "baba0f231f1b5f6642f2b09f896da65a",
          "sha256": "561b184b77c383cb2427c61d26e0397db954e2462477d02ab726f4303e812279"
        },
        "downloads": -1,
        "filename": "kinto_http-7.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "baba0f231f1b5f6642f2b09f896da65a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 36669,
        "upload_time": "2017-03-17T21:07:51",
        "url": "https://files.pythonhosted.org/packages/5d/b5/f985142dacf7c6c22756888fa30dddbcd4ae40bbdb3da27c4a86b65e04fb/kinto_http-7.2.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0b67d5b9b1768eeca6ce1c167ed0fe2b",
          "sha256": "43d5305ad339b42be7e54dbf8c95bc37d096d181260678c052fc7838e036586c"
        },
        "downloads": -1,
        "filename": "kinto-http-7.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0b67d5b9b1768eeca6ce1c167ed0fe2b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 34312,
        "upload_time": "2017-03-17T21:07:50",
        "url": "https://files.pythonhosted.org/packages/ea/40/2e55d06c2434267043634c20dbd4e6e1cd2730c4154f6fcb2101d0c43f4c/kinto-http-7.2.0.tar.gz"
      }
    ],
    "8.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "697230c005ba7b91dd314f2bfb36df0a",
          "sha256": "5d29f1e0e7fe8f15f4d721c22ca907c4e4c6c8ca0299caaed127bf7920323ba6"
        },
        "downloads": -1,
        "filename": "kinto_http-8.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "697230c005ba7b91dd314f2bfb36df0a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 38740,
        "upload_time": "2017-05-11T18:17:41",
        "url": "https://files.pythonhosted.org/packages/0c/33/f031b4a091ae00197ec8f73f28408fe097f32bda2b257626d4a5fc732251/kinto_http-8.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5df00d877d2509e52978ebf2ee1b2b64",
          "sha256": "5c2e9f1e8b50e4bb439990d91f44a96873e1085cd724f5b9e92789b5deda5d3f"
        },
        "downloads": -1,
        "filename": "kinto-http-8.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5df00d877d2509e52978ebf2ee1b2b64",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 36806,
        "upload_time": "2017-05-11T18:17:39",
        "url": "https://files.pythonhosted.org/packages/0f/d6/e9ce79b1f4ce448d7f72990270dd98316481663242775fac4a00985678e3/kinto-http-8.0.0.tar.gz"
      }
    ],
    "8.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "108b201275a3ab49c5fe611497bb31d0",
          "sha256": "ff7b7f99b32423d35119dbd83451fea258d07fc2dcd0e4a24ff171048e4d779a"
        },
        "downloads": -1,
        "filename": "kinto_http-8.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "108b201275a3ab49c5fe611497bb31d0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 38792,
        "upload_time": "2017-05-16T10:15:07",
        "url": "https://files.pythonhosted.org/packages/da/f7/e2d0b8ffe4fc1cf9db35ea67221cff8acb1f48073f1bf222c5dd16fbc465/kinto_http-8.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "138a66b644c6d64a740001a96f8614c2",
          "sha256": "55fe15326ed4ff36a487342c6b9bd087d27c4006dcf705b8a89e0841e078897a"
        },
        "downloads": -1,
        "filename": "kinto-http-8.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "138a66b644c6d64a740001a96f8614c2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 36883,
        "upload_time": "2017-05-16T10:15:05",
        "url": "https://files.pythonhosted.org/packages/43/60/5d335f667ac7d7e31b56ae43f285ab3cb0cac23b4b973d542cbdd76ccbeb/kinto-http-8.0.1.tar.gz"
      }
    ],
    "9.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "24fcf715e787219e8178c486be884823",
          "sha256": "aa1891e2f9162ccf04471739c2a974988e2ec407c8b83bd36bde531d7e937b63"
        },
        "downloads": -1,
        "filename": "kinto_http-9.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24fcf715e787219e8178c486be884823",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 39710,
        "upload_time": "2017-05-25T08:56:16",
        "url": "https://files.pythonhosted.org/packages/b3/2c/d495e161cb4c1b5c483e53807f4a54c0e1332fe7cd8fe61864298c60f995/kinto_http-9.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8d1790ca8bb1070226af848773eb4e4e",
          "sha256": "19f53fcc5f1f4ee86725b64dbef852f273bae9d6bbb40895b22097c43bd845a5"
        },
        "downloads": -1,
        "filename": "kinto-http-9.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8d1790ca8bb1070226af848773eb4e4e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 38612,
        "upload_time": "2017-05-25T08:56:18",
        "url": "https://files.pythonhosted.org/packages/51/6e/3aba1e664eadf5aee203509c8dac0f1ae3c8bdeff9e6cccb151db7ad8ef9/kinto-http-9.0.0.tar.gz"
      }
    ],
    "9.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "06db0341d443e8d9242d0854dd48c122",
          "sha256": "c724aecebb53c6d7d5e3e5a499b926761125f869fd0ab921004b12a88714aa32"
        },
        "downloads": -1,
        "filename": "kinto_http-9.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "06db0341d443e8d9242d0854dd48c122",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 40239,
        "upload_time": "2017-05-30T14:27:33",
        "url": "https://files.pythonhosted.org/packages/28/f1/11717e08a791e6d2cb498c6a83ff07479897bd0765f7468a2002e5c5b7a6/kinto_http-9.0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "51f42899db26cbd26b0022f34b47bfa3",
          "sha256": "4a47748cfc4afd22317ff6b8580ec1a0be6367aecc780936530569503eabd4df"
        },
        "downloads": -1,
        "filename": "kinto-http-9.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "51f42899db26cbd26b0022f34b47bfa3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 38865,
        "upload_time": "2017-05-30T14:27:35",
        "url": "https://files.pythonhosted.org/packages/b6/27/07b405248a877faed05dad63464a880ddb582ff258d5a9b02332dd94223b/kinto-http-9.0.1.tar.gz"
      }
    ],
    "9.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4aa451ca6d3025e0ab6e24a8caa3b745",
          "sha256": "859e3b4d100d1eb75c2589887364f94845c8a6033ca27957a8e0aaec134a0ffd"
        },
        "downloads": -1,
        "filename": "kinto_http-9.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4aa451ca6d3025e0ab6e24a8caa3b745",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 44099,
        "upload_time": "2018-02-05T14:58:46",
        "url": "https://files.pythonhosted.org/packages/1e/52/053f19b47b6ae8c624b9f2c24a359ddfa96d11e4db6b3614fced5b7b3ddd/kinto_http-9.1.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e03302883c2a36883ccc4b8376c12a1e",
          "sha256": "6286599fe50f80b4a919378b64a3fd9ffbd84b24bf7a63ad7b04cc3c09ad3e79"
        },
        "downloads": -1,
        "filename": "kinto-http-9.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e03302883c2a36883ccc4b8376c12a1e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42590,
        "upload_time": "2018-02-05T14:58:48",
        "url": "https://files.pythonhosted.org/packages/e0/be/8fa91d6cfba6c84f6176bf5c28b8a738677405e690f79bfa1352dd5dd4c9/kinto-http-9.1.0.tar.gz"
      }
    ],
    "9.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d99efbfe1282e35d6fbd3a629398cba5",
          "sha256": "b3e33bbae9365ed75ca0f832760693a8077e80414249c38d89d652aeac895a44"
        },
        "downloads": -1,
        "filename": "kinto_http-9.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d99efbfe1282e35d6fbd3a629398cba5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 44197,
        "upload_time": "2018-02-07T14:36:55",
        "url": "https://files.pythonhosted.org/packages/c4/bc/e9ae63746396168405b3305744e17a89f7524fea1524105247c44ca08043/kinto_http-9.1.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2df18ba4bae779e6245a1e3de5e6cc9c",
          "sha256": "63c53d73f1e238c6cf1ae888d2d0190b562ef41e963f4502927dad2c7edd2660"
        },
        "downloads": -1,
        "filename": "kinto-http-9.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2df18ba4bae779e6245a1e3de5e6cc9c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 42666,
        "upload_time": "2018-02-07T14:36:44",
        "url": "https://files.pythonhosted.org/packages/4c/c5/f182b366a57c7fe3af478f37d6087c3c7b1f9fc39b9ee50c9ccf0bb365ca/kinto-http-9.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d99efbfe1282e35d6fbd3a629398cba5",
        "sha256": "b3e33bbae9365ed75ca0f832760693a8077e80414249c38d89d652aeac895a44"
      },
      "downloads": -1,
      "filename": "kinto_http-9.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d99efbfe1282e35d6fbd3a629398cba5",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 44197,
      "upload_time": "2018-02-07T14:36:55",
      "url": "https://files.pythonhosted.org/packages/c4/bc/e9ae63746396168405b3305744e17a89f7524fea1524105247c44ca08043/kinto_http-9.1.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "2df18ba4bae779e6245a1e3de5e6cc9c",
        "sha256": "63c53d73f1e238c6cf1ae888d2d0190b562ef41e963f4502927dad2c7edd2660"
      },
      "downloads": -1,
      "filename": "kinto-http-9.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2df18ba4bae779e6245a1e3de5e6cc9c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 42666,
      "upload_time": "2018-02-07T14:36:44",
      "url": "https://files.pythonhosted.org/packages/4c/c5/f182b366a57c7fe3af478f37d6087c3c7b1f9fc39b9ee50c9ccf0bb365ca/kinto-http-9.1.1.tar.gz"
    }
  ]
}