{
  "info": {
    "author": "Samir Omerovic",
    "author_email": "somerovi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\nCosmicray\n=========\n\n.. image:: cosmicray.png\n\n------------------------------------------------------------------------\n Develop a client for your http API and document its quirks and features\n------------------------------------------------------------------------\n\nCosmicray is a http client API development framework. It provides the basic building blocks for\ndefining enpoints, handling requests responses and automatically converting them to Models.\n\n\nBasics: Defining routes and route handlers and making requests\n--------------------------------------------------------------\n\n.. code:: python\n\n>>> from cosmicray import Cosmicray\n>>>\n>>> api = Cosmicray('cosmicray/myapp')\n>>> @api.route('/v1/coolstuff/{id}', ['GET', 'POST', 'PUT', 'DELETE'])\n>>> def coolstuff(response):\n...     return response.json()\n>>> coolstuff(json={'name': 'magic'}).post()\n{'id': 12345}\n>>> coolstuff(urlargs={'id': 12345}).get()\n{'id': 12345, 'name': 'magic'}\n>>> coolstuff(urlargs={'id': 12345}, json={'name': 'black magic'}).put()\n{'id': 12345, 'name': 'black magic'}\n>>> coolstuff(urlargs={'id': 12345}).delete()\n{'id': 12345, 'name': 'black magic'}\n\n::\n\nBasics: Customizing request\n---------------------------\n\n.. code:: python\n\n>>> coolstuff(urlargs={'id': 12345},\n...           headers={'Content-Type': 'application/json'},\n...           params={'debug': True}).get()\n::\n\nYou can also pass in keyword arguments for the `requests` module:\n\n.. code:: python\n\n>>> coolstuff(urlargs={'id': 12345},\n...           headers={'Content-Type': 'application/json'},\n...           params={'debug': True},\n...           json={'name': 'white magic'},\n...           verify=False).put()\n::\n\nBasics: Authenticating requests\n-----------------------------------\n\nMost often before you can access resources, you'll need to authenticate and pass authentication\nparameters to each request. Cosmicray has you covered!\n\n.. code:: python\n\n>>> def authenticator(request):\n...     if not request.is_request_for(auth):\n...         auth = auth(json={'username': 'me', 'password': 'mysecret'}).post()\n...         return request.set_headers({'X-AUTH-TOKEN': auth['token']})\n...     return request\n>>> @api.route('/auth', ['POST'])\n... def auth(response):\n...     return response.json()\n>>> @api.route('/private/resource', ['GET'])\n... def private_resource(response):\n...     return response.json()\n>>> api.configure(authenticator)\n>>> # Now the private resourse will be automatically updated to include auth headers\n>>> private_resource.get()\n\n::\n\nModels\n------\n\nUse models to bind all the routes together.\n\n.. code:: python\n\n>>> from cosmicray import Model\n>>> class CoolStuff(Model):\n...     __route__ = coolstuff\n...     __fields__ = [\n...         'id',\n...         'name'\n...     ]\n>>> obj = CoolStuff(name=\"Magic\")\n>>> obj\n<CoolStuff(id=None, name='magic')>\n>>> obj.create()\n\n::\n\nIf you don't want to use `cosmicray.Model` as your base, you can define your own OR\neven use just use `collections.namedtuple` as the model.\n\n.. code:: python\n\n>>> class MyModel(object):\n...     @classmethod\n...     def _make(cls, response):\n...         obj = cls()\n...         ... do stuff with the response\n...         return obj\n\n::\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/somerovi/cosmicray",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cosmicray",
    "platform": "",
    "project_url": "https://pypi.org/project/cosmicray/",
    "release_url": "https://pypi.org/project/cosmicray/0.0.3/",
    "requires_dist": [
      "requests (==2.18.4)"
    ],
    "requires_python": "",
    "summary": "Develop a client for your HTTP API and document its quirks and features",
    "version": "0.0.3"
  },
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c111ec88bbcb9d2350a0b5704d2e3052",
          "sha256": "76e296497c1cb6fc35708c8f2268abf31cdd1c527e04d7a781347af18cccfe72"
        },
        "downloads": -1,
        "filename": "cosmicray-0.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c111ec88bbcb9d2350a0b5704d2e3052",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9390,
        "upload_time": "2017-11-14T03:41:18",
        "url": "https://files.pythonhosted.org/packages/c2/24/7dec7057a62aaf31a4c077eb2aa1b88c22da07ab7e819c0aeedfa98eccc7/cosmicray-0.0.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3007fbc3973f9273a2eaeec232830dce",
          "sha256": "848f0163932fea32053728b74052b15a0eacd5ceed8a52bd797703a52b0210a0"
        },
        "downloads": -1,
        "filename": "cosmicray-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3007fbc3973f9273a2eaeec232830dce",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6833,
        "upload_time": "2017-11-14T03:41:20",
        "url": "https://files.pythonhosted.org/packages/93/73/7c9279b7c6660b933bf18ab5fa8c5e1220b16fc6ea950481f397747a6d8d/cosmicray-0.0.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c111ec88bbcb9d2350a0b5704d2e3052",
        "sha256": "76e296497c1cb6fc35708c8f2268abf31cdd1c527e04d7a781347af18cccfe72"
      },
      "downloads": -1,
      "filename": "cosmicray-0.0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c111ec88bbcb9d2350a0b5704d2e3052",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 9390,
      "upload_time": "2017-11-14T03:41:18",
      "url": "https://files.pythonhosted.org/packages/c2/24/7dec7057a62aaf31a4c077eb2aa1b88c22da07ab7e819c0aeedfa98eccc7/cosmicray-0.0.3-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "3007fbc3973f9273a2eaeec232830dce",
        "sha256": "848f0163932fea32053728b74052b15a0eacd5ceed8a52bd797703a52b0210a0"
      },
      "downloads": -1,
      "filename": "cosmicray-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "3007fbc3973f9273a2eaeec232830dce",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6833,
      "upload_time": "2017-11-14T03:41:20",
      "url": "https://files.pythonhosted.org/packages/93/73/7c9279b7c6660b933bf18ab5fa8c5e1220b16fc6ea950481f397747a6d8d/cosmicray-0.0.3.tar.gz"
    }
  ]
}