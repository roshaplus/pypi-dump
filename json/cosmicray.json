{
  "info": {
    "author": "Samir Omerovic",
    "author_email": "somerovi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "Cosmicray\n=========\n\n------------------------------------------------------------------------\n Develop a client for any http API and document its quirks and features\n------------------------------------------------------------------------\n\nCosmicray is a simple and high level http client API development framework. It provides the basic building blocks for\ndefining enpoints, handling a request response and automatically converting the result into to Models.\n\nMotivation:\n\n- Ease of use\n- Configureability and customization on every level\n- Namespace different backends (one client to rule them all)\n- Separate route definitions / response handling from models or \"business logic\"\n- Ability to validate requests before making them\n- Authenticate each request as needed\n- Ability to associate routes to models\n\n.. warning::\n\n   Cosmicray is under development\n\nInstall\n-------\n\n.. code::\n\n   $ pip install cosmicray\n\nQuick start\n-----------\n\nCreate App\n~~~~~~~~~~\n\n.. code:: python\n\n    >>> from cosmicray import Cosmicray\n    >>> api = Cosmicray('myapp', domain='http://mydomain.com')\n\nDefine routes and response handlers\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nUsing the app we created, we can now add routes for it and define a response handler for each one. The response handler is simply a regular function that accepts a single argument of type `requests.Response` and returns the processed result.\n\n.. code:: python\n\n    >>> @api.route('/v1/dogs/{id}', ['GET', 'POST', 'PUT', 'DELETE'])\n    >>> def dogs(response):\n    ...     return response.json()\n\n- The decorator `api.route` creates an instance of `cosmicray.Route` named `dogs`\n  and stores the given function internally as the response handler.\n\n- Instances of `cosmicray.Route` are callable and accept parameters:\n\n  - `model_cls`: Optional: Class that implements `_make(cls, response)` classmethod.\n  - `\\*\\*kwargs`: Keyword arguments.\n\n    - `urlargs`: Mapping for url formatting arguments\n    - `headers`: Mapping for headers\n    - `params`: Mapping for query parameters\n    - `data`, `json`, `files`: Request body\n    - `authenticator`: Authenticator callback\n    - *&rest*: Requests keyword arguments\n\n\n- When and instance of `cosmicray.Route` is called, it returns a `Request` object and with this you can:\n\n  - Use functions defined for each http method (ex: `get()`, `post()`, `put()`, `delete()`)\n  - Override any parameters passed in (ex: `params`, `headers`, etc.) with setters\n  - Automatically validates given parameters against the defined parameters on the `Route`\n  - Authenticates the request, if the app was configured with an authenticator\n  - After the response is handled by the response handler, the result is automatically mapped to the model class, if one was provided\n\nHow to make requests\n~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n   >>> dogs().get()\n   >>> dogs(urlargs={id: 12345}).get()\n   >>> dogs(json={'name': 'Manu'}).post()\n   >>> dogs(urlargs={'id': 12345}, json={'age': 4}).put()\n   >>> dogs(urlargs={'id': 12345}).delete()\n\nTo specify request parameters\n\n.. code:: python\n\n   >>> dogs(params={'breed': 'husky'},\n   ...      headers={'Content-Type': 'application/json'}).get()\n\nAuthenticating requests\n~~~~~~~~~~~~~~~~~~~~~~~\n\nOften you'll need to authenticate requests to access private resource and Cosmicray has a built-in mechanism to perform this step.\n\n.. code:: python\n\n    >>> def authenticator(request):\n    ...     if not request.is_request_for(login):\n    ...         auth = login(json={'username': 'me', 'password': 'mysecret'}).post()\n    ...         return request.set_headers({'X-AUTH-TOKEN': auth['token']})\n    ...     return request\n    ...\n    >>> @api.route('/oauth', ['POST'])\n    ... def login(response):\n    ...     \"\"\"Get an auth token for the given credentials\"\"\"\n    ...     return response.json()\n    ...\n    >>> @api.route('/private/resource', ['GET'])\n    ... def private_resource(response):\n    ...     \"\"\"Must be authenticated to access this\"\"\"\n    ...     return response.json()\n    ...\n    >>> api.configure(authenticator=authenticator)\n    >>> # Now the private resourse will be automatically updated to include auth headers\n    >>> private_resource.get()\n\nModels\n------\n\nBasics\n~~~~~~\n\n- Cosmicray ships with a built-in Model class\n- This base class is bound to a specific route handler and defines all the fields that would get mapped to a response or be part as the payload for `post` and `put` requests\n- It automatically uses its defined fields as url parameters and as request body\n- Provides functions to make http calls (ex: `get`, `create`, `update`, `delete`)\n- You can override default behavior, such as create/update paylods\n\n.. code:: python\n\n    >>> from cosmicray.model import Model\n    >>> class Dog(Model):\n    ...     __route__ = dogs\n    ...     __slots__ = [\n    ...         'id',\n    ...         'name',\n    ...         'breed',\n    ...         'age'\n    ...     ]\n    >>> manu = Dog(name='Manu', age=4).create()\n    >>> manu.breed = 'Husky'\n    >>> manu.update()\n    >>> manu.delete()\n    >>> manu = Dog(id=12345).get()\n    >>> alldogs = Dog().get()\n\n\nRelationships with other models/routes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n.. code:: python\n\n    >>> from cosmicray.model import relationhip, Model, ModelParam\n    >>> class Cat(cosmicray.model.Model):\n    ...     __route__ = cats\n    ...     __slots__ = [\n    ...         'id',\n    ...         'name',\n    ...         'age'\n    ...     ]\n    ...     friends = relationhip('Friend', urlargs={'id': ModelParam('id')})\n\n\nIf you don't want to use `cosmicray.Model` as your base, you can define your own OR\neven use just use `collections.namedtuple` as the model.\n\n.. code:: python\n\n    >>> class MyModel(object):\n    ...     @classmethod\n    ...     def _make(cls, response):\n    ...         obj = cls()\n    ...         ... do stuff with the response\n    ...         return obj\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/somerovi/cosmicray",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cosmicray",
    "platform": "",
    "project_url": "https://pypi.org/project/cosmicray/",
    "release_url": "https://pypi.org/project/cosmicray/0.0.8/",
    "requires_dist": [
      "six (==1.11.0)",
      "requests (==2.18.4)",
      "colorama (==0.3.9)"
    ],
    "requires_python": "",
    "summary": "Develop a client for your HTTP API and document its quirks and features",
    "version": "0.0.8"
  },
  "releases": {
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "46227dcbd5d65e5900f5ca6fafd9a250",
          "sha256": "dde3ad90abeb3e38da0bca95b236e196300aeeda31f3f8120a5e500571f294cf"
        },
        "downloads": -1,
        "filename": "cosmicray-0.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46227dcbd5d65e5900f5ca6fafd9a250",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 9563,
        "upload_time": "2017-11-16T21:12:20",
        "url": "https://files.pythonhosted.org/packages/77/84/a05c95357b671bb2de54777a6703d4ef3f3bd95ba12b87882508667d3619/cosmicray-0.0.5-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a1a2b2353eccec4078222a208ba9505d",
          "sha256": "083d237250045439c2082acacc76c65e116d5dc7481005c331b115554af43909"
        },
        "downloads": -1,
        "filename": "cosmicray-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a1a2b2353eccec4078222a208ba9505d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7009,
        "upload_time": "2017-11-16T21:12:20",
        "url": "https://files.pythonhosted.org/packages/cc/28/b84802a2a116c156328cdf41c1cff5f48facb7e188c56786cecbfe760ce6/cosmicray-0.0.5.tar.gz"
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ed65416204b45ae2065b8dd1fc24bb37",
          "sha256": "586158cc42096f9ba886e1044850e3ea14ea0f098e5044c570fcd02ed17bf6c3"
        },
        "downloads": -1,
        "filename": "cosmicray-0.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed65416204b45ae2065b8dd1fc24bb37",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 17167,
        "upload_time": "2017-12-28T18:40:02",
        "url": "https://files.pythonhosted.org/packages/85/78/8e52e438118d34f3031b3b488dd4160c612cbbd8ad69f0a3d3314907317f/cosmicray-0.0.6-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c447291a43ead1c995dcf25cb36c0f70",
          "sha256": "5a8db327a8df5a2951762437621a93d70ce448d1494e58d4e53cf9ea7b40ea59"
        },
        "downloads": -1,
        "filename": "cosmicray-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c447291a43ead1c995dcf25cb36c0f70",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14616,
        "upload_time": "2017-12-28T18:40:03",
        "url": "https://files.pythonhosted.org/packages/50/e0/9652395663104d142b36e4f16b4f1fc1f5d7cc804edd39c2cda2b6a28b4e/cosmicray-0.0.6.tar.gz"
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2663423d563bea820d3db614905fb573",
          "sha256": "5db09304a71d4c5ae57831fce48f4c22f62849b22bc8f370faccffc225b25664"
        },
        "downloads": -1,
        "filename": "cosmicray-0.0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2663423d563bea820d3db614905fb573",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 18569,
        "upload_time": "2018-01-04T18:14:03",
        "url": "https://files.pythonhosted.org/packages/47/a8/0e4143e3d28d5011faf8d6264f005d163fb590762046303e6fb665fce689/cosmicray-0.0.7-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6e71e5b3aa61ffd1fd090549fdb443af",
          "sha256": "7b496a88b839689e6d5899941e347ed309f115e1fa8daf2da82a2fa4dcb83b56"
        },
        "downloads": -1,
        "filename": "cosmicray-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "6e71e5b3aa61ffd1fd090549fdb443af",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15966,
        "upload_time": "2018-01-04T18:14:06",
        "url": "https://files.pythonhosted.org/packages/dd/6d/3451f33481a3057746027a6be4ae21e7b2a92b3015c8dfb88c5e608ba94b/cosmicray-0.0.7.tar.gz"
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e96270c24f89964b23414d035c5014ea",
          "sha256": "1d1a297c2bf415807857441697c01dfb804c98045c5474a3758524f204010570"
        },
        "downloads": -1,
        "filename": "cosmicray-0.0.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e96270c24f89964b23414d035c5014ea",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 18609,
        "upload_time": "2018-01-05T22:21:10",
        "url": "https://files.pythonhosted.org/packages/90/7b/3de8a156330979ecee47328cfddd13203ea62a9435dd4fa9d1bd5992fbfb/cosmicray-0.0.8-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1def5a52e9df7dd5ca77bccb8b66469a",
          "sha256": "5ff206fd7233a108683dcb78bcf03bcdeedd8700a9fa24bdc5a5ef98e5b4ef75"
        },
        "downloads": -1,
        "filename": "cosmicray-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "1def5a52e9df7dd5ca77bccb8b66469a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16033,
        "upload_time": "2018-01-05T22:21:11",
        "url": "https://files.pythonhosted.org/packages/77/d0/8db1c06761604feaea539f26656bbc79677886cbdfdb0f507c7a7792c64a/cosmicray-0.0.8.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e96270c24f89964b23414d035c5014ea",
        "sha256": "1d1a297c2bf415807857441697c01dfb804c98045c5474a3758524f204010570"
      },
      "downloads": -1,
      "filename": "cosmicray-0.0.8-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e96270c24f89964b23414d035c5014ea",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 18609,
      "upload_time": "2018-01-05T22:21:10",
      "url": "https://files.pythonhosted.org/packages/90/7b/3de8a156330979ecee47328cfddd13203ea62a9435dd4fa9d1bd5992fbfb/cosmicray-0.0.8-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "1def5a52e9df7dd5ca77bccb8b66469a",
        "sha256": "5ff206fd7233a108683dcb78bcf03bcdeedd8700a9fa24bdc5a5ef98e5b4ef75"
      },
      "downloads": -1,
      "filename": "cosmicray-0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "1def5a52e9df7dd5ca77bccb8b66469a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 16033,
      "upload_time": "2018-01-05T22:21:11",
      "url": "https://files.pythonhosted.org/packages/77/d0/8db1c06761604feaea539f26656bbc79677886cbdfdb0f507c7a7792c64a/cosmicray-0.0.8.tar.gz"
    }
  ]
}