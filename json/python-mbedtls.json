{
  "info": {
    "author": "Mathias Laurin",
    "author_email": "Mathias.Laurin@users.sf.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Cython",
      "Topic :: Security :: Cryptography"
    ],
    "description": "==========================\nPython wrapper to mbed TLS\n==========================\n\n`python-mbedtls`_ is a thin wrapper to ARM's mbed TLS library.\n\nAccording to the `official mbed TLS website`_\n\n   mbed TLS (formerly known as PolarSSL) makes it trivially easy for\n   developers to include cryptographic and SSL/TLS capabilities in their\n   (embedded) products, facilitating this functionality with a minimal\n   coding footprint.\n\n.. _python-mbedtls: https://synss.github.io/python-mbedtls\n.. _official mbed TLS website: https://tls.mbed.org\n\n\nLicense\n=======\n\n`python-mbedtls` is licensed under the MIT License (see LICENSE.txt).  This\nenables the use of `python-mbedtls` in both open source and closed source\nprojects.  The MIT License is compatible with both GPL and Apache 2.0 license\nunder which mbed TLS is distributed.\n\n\nInstallation\n============\n\nThe wrapper is currently developed and tested on Debian and targets Python 3.4.\nIt probably works with earlier Python releases although this was not tested.\n\n`mbedtls` is available in Debian Stretch, which may require the addition of\n`stretch` or `testing` to ``/etc/apt/sources.list``.\n\nThen install the development libraries for mbedtls::\n\n   # aptitude install libmbedtls-dev\n\nand the wrapper::\n\n   python3 -m pip install python-mbedtls\n\n\nHashing module (`md.h`)\n-----------------------\n\nMessage digest algorithms\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe `mbedtls.hash` module provides MD5, SHA-1, SHA-2, and RIPEMD-160 secure\nhashes and message digests.  The API follows the recommendations from PEP 452\nso that it can be used as a drop-in replacement to e.g. `hashlib` or\n`PyCrypto`.\n\nHere are the examples from `hashlib` executed with `python-mbedtls`::\n\n    >>> from mbedtls import hash as hashlib\n    >>> m = hashlib.md5()\n    >>> m.update(b\"Nobody inspects\")\n    >>> m.update(b\" the spammish repetition\")\n    >>> m.digest()\n    b'\\xbbd\\x9c\\x83\\xdd\\x1e\\xa5\\xc9\\xd9\\xde\\xc9\\xa1\\x8d\\xf0\\xff\\xe9'\n    >>> m.digest_size\n    16\n    >>> m.block_size\n    64\n\nMore condensed::\n\n   >>> hashlib.sha224(b\"Nobody inspects the spammish repetition\").hexdigest()\n   'a4337bc45a8fc544c03f52dc550cd6e1e87021bc896588bd79e901e2'\n\nUsing `new()`::\n\n   >>> h = hashlib.new('ripemd160')\n   >>> h.update(b\"Nobody inspects the spammish repetition\")\n   >>> h.hexdigest()\n   'cc4a5ce1b3df48aec5d22d1f16b894a0b894eccc'\n\n\nHMAC algorithm\n~~~~~~~~~~~~~~\n\nThe `mbedtls.hmac` module computes HMAC.  The API follows the recommendations\nfrom PEP 452 as well.\n\nExample::\n\n   >>> from mbedtls import hmac\n   >>> m = hmac.new(b\"This is my secret key\", digestmod=\"md5\")\n   >>> m.update(b\"Nobody inspects\")\n   >>> m.update(b\" the spammish repetition\")\n   >>> m.digest()\n   b'\\x9d-/rj\\\\\\x98\\x80\\xb1rG\\x87\\x0f\\xe9\\xe4\\xeb'\n\nWarning:\n\n   The message is cleared after calculation of the digest.  Only call\n   `mbedtls.hmac.Hmac.digest()` or `mbedtls.hmac.Hmac.hexdigest()` once\n   per message.\n\n\nSymmetric cipher module (`cipher.h`)\n------------------------------------\n\nThe `mbedtls.cipher` module provides symmetric encryption.  The API follows the\nrecommendations from PEP 272 so that it can be used as a drop-in replacement to\ne.g. `PyCrypto`.\n\nmbedtls provides the following algorithms:\n\n- Aes encryption/decryption (128, 192, and 256 bits) in ECB, CBC, CFB128,\n  CTR, GCM, or CCM mode;\n- Arc4 encryption/decryption;\n- Blowfish encryption/decryption in ECB, CBC, CFB64, or CTR mode;\n- Camellia encryption/decryption (128, 192, and 256 bits) in ECB, CBC,\n  CFB128, CTR, GCM, or CCM mode;\n- DES encryption/decryption in ECB, or CBC mode;\n\nNotes:\n   - Tagging and padding are not wrapped.\n   - The counter in CTR mode cannot be explicitly provided.\n\nExample::\n\n   >>> from mbedtls import cipher\n   >>> c = cipher.AES.new(b\"My 16-bytes key.\", cipher.MODE_CBC, b\"CBC needs an IV.\")\n   >>> enc = c.encrypt(b\"This is a super-secret message!\")\n   >>> enc\n   b'*`k6\\x98\\x97=[\\xdf\\x7f\\x88\\x96\\xf5\\t\\x19J7\\x93\\xb5\\xe0~\\t\\x9e\\x968m\\xcd\\x\n   >>> c.decrypt(enc)\n   b'This is a super-secret message!'\n\n\nPublic key module (`pk.h`)\n--------------------------\n\nThe `mbedtls.pk` module provides the RSA cryptosystem.  This includes:\n\n- Public-private key generation and key import/export in PEM and DER\n  formats;\n- Asymmetric encryption and decryption;\n- Message signature and verification.\n\nKey generation, the default size is 2048 bits::\n\n   >>> from mbedtls import pk\n   >>> rsa = pk.RSA()\n   >>> rsa.has_private()\n   False\n   >>> rsa.generate()\n   >>> rsa.key_size\n   256\n   >>> rsa.has_private() and rsa.has_public()\n   True\n\nMessage encryption and decryption::\n\n   >>> enc = rsa.encrypt(b\"secret message\")\n   >>> rsa.decrypt(enc)\n   b\"secret message\"\n\nMessage signature and verification::\n\n   >>> sig = rsa.sign(b\"Please sign here.\")\n   >>> rsa.verify(b\"Please sign here.\", sig)\n   True\n   >>> rsa.verify(b\"Sorry, wrong message.\", sig)\n   False\n   >>> prv, pub = rsa.export(format=\"DER\")\n   >>> other = pk.RSA()\n   >>> other.import_(pub)\n   >>> other.has_private()\n   False\n   >>> other.verify(b\"Please sign here.\", sig)\n   True\n",
    "docs_url": null,
    "download_url": "https://github.com/Synss/python-mbedtls/tarball/0.6",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://synss.github.io/python-mbedtls",
    "keywords": null,
    "license": "MIT License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "python-mbedtls",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/python-mbedtls/",
    "release_url": "https://pypi.org/project/python-mbedtls/0.6/",
    "requires_python": null,
    "summary": "mbed TLS (PolarSSL) wrapper",
    "version": "0.6"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c066749e6ee48aad59bf5b4b8833400f",
          "sha256": "2df8782c17c6dd653214bf81ba2e2ce8026051855fd7b64248cd91cdb76b3308"
        },
        "downloads": 846,
        "filename": "python-mbedtls-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c066749e6ee48aad59bf5b4b8833400f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5408,
        "upload_time": "2015-12-16T13:36:36",
        "url": "https://files.pythonhosted.org/packages/e5/f5/b45185763f067c2eb20e3262e23f604be4842cb980c73897066ea8804c4b/python-mbedtls-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8fc16e5794798260862a2060338c20ad",
          "sha256": "88126627d1c4627df19653461ec2816119ead87c879a2152114a2831d7b0b855"
        },
        "downloads": 423,
        "filename": "python-mbedtls-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8fc16e5794798260862a2060338c20ad",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7439,
        "upload_time": "2016-01-07T14:48:36",
        "url": "https://files.pythonhosted.org/packages/92/b7/ead0cc50beb2fa1e9d381faf210fab1bf6322517b060f818a96628cb7a85/python-mbedtls-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9cae9b1efb35d437fef55104ae292a2a",
          "sha256": "d4daa7bb273c889a5cc95fbe5b9e572ba6ed2c68b1904a4cc34c6a889b25ae56"
        },
        "downloads": 443,
        "filename": "python-mbedtls-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9cae9b1efb35d437fef55104ae292a2a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8460,
        "upload_time": "2016-01-08T11:56:21",
        "url": "https://files.pythonhosted.org/packages/d4/ff/06c037ac452be5106ecc5aba583eec7de19a8ce3e7dd5aa5a06f2c92b975/python-mbedtls-0.3.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2f707e4f2936ac5311988445814f3d09",
          "sha256": "6a810a1c6493176e1b2c0c5c92f7c1473d2bf780b368db980d940dd215262555"
        },
        "downloads": 400,
        "filename": "python-mbedtls-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2f707e4f2936ac5311988445814f3d09",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 721039,
        "upload_time": "2016-01-19T11:14:53",
        "url": "https://files.pythonhosted.org/packages/f9/d1/5e09db61a9c74790c868466fd455ae011d737b74658a05bf7146f975ee06/python-mbedtls-0.4.tar.gz"
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "56537a8319a29bcae0f112350d013049",
          "sha256": "8afe0f472bfbaea3c6a923965dce6a8200ca425d19718c3e61321f33e3f6751a"
        },
        "downloads": 436,
        "filename": "python-mbedtls-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "56537a8319a29bcae0f112350d013049",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 739848,
        "upload_time": "2016-01-19T15:33:51",
        "url": "https://files.pythonhosted.org/packages/0f/ae/7f9c726f146b960d8cd86e48c3770a908a97743dba02afbfef0c939c383c/python-mbedtls-0.5.tar.gz"
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ae8f8dcae32d54f103585bf8b62c3372",
          "sha256": "44b0103f23369166887c9211f1ccf703b115d176f8c9f11aa4afa28859696a64"
        },
        "downloads": 361,
        "filename": "python-mbedtls-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ae8f8dcae32d54f103585bf8b62c3372",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 753528,
        "upload_time": "2016-06-20T13:35:24",
        "url": "https://files.pythonhosted.org/packages/3e/0a/2b81b3ce97ee49bce940b89c53bd39c8bf303f5911f6c688689c4d4bec83/python-mbedtls-0.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ae8f8dcae32d54f103585bf8b62c3372",
        "sha256": "44b0103f23369166887c9211f1ccf703b115d176f8c9f11aa4afa28859696a64"
      },
      "downloads": 361,
      "filename": "python-mbedtls-0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "ae8f8dcae32d54f103585bf8b62c3372",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 753528,
      "upload_time": "2016-06-20T13:35:24",
      "url": "https://files.pythonhosted.org/packages/3e/0a/2b81b3ce97ee49bce940b89c53bd39c8bf303f5911f6c688689c4d4bec83/python-mbedtls-0.6.tar.gz"
    }
  ]
}