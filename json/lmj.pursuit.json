{
  "info": {
    "author": "Leif Johnson",
    "author_email": "leif@leifjohnson.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# py-pursuit\n\nThis Python package contains some variants of the matching pursuit sparse coding\nalgorithm. Matching pursuit uses a set of \"basis functions\" or \"codebook\nfilters\" to greedily encode a raw signal in terms of a weighted sum of filters.\nUsing gradient ascent on the likelihood of an observed dataset, we can also\ninfer a likely set of filters from an unlabeled dataset of signals.\n\n## Installing\n\nJust use the setup.py script :\n\n    python setup.py install\n\nOr use pip and virtualenv for even more installation goodness :\n\n    pip install lmj.pursuit\n\nAfter installation, you can use the package by importing lmj.pursuit.\n\n## Testing\n\nThe source distribution includes three tests: gaussian, sound and image. The\ngaussian test demonstrates using an overcomplete dictionary to encode points\ndrawn from a mixture of gaussians. The image test encodes image pixels. The\nsound test uses an experimental implementation that runs on a [CUDA][]-enabled\ngraphics device to encode sound waveforms.\n\n### Gaussians\n\nYou'll need cairo and GTK on your machine to run this test :\n\n    pip install pygtk pycairo\n\nThen just run the test :\n\n    python test/clusters.py\n\nA window will pop up that shows a small number of gaussian centroids arranged\naround a central representation of a codebook of 2D basis vectors. Press the\nspace bar to start training, and points will be sampled from the centroids and\nused to train the matching pursuit codebook. Eventually, vectors in the codebook\nshould point towards the centroids.\n\n### Image\n\nYou'll need to install [glumpy][] to run this test :\n\n    pip install glumpy\n\nThe image test simply requires some image data to run :\n\n    python test/images.py /path/to/my/image*.jpg /path/to/another/image*.png\n\nYou'll see a window appear on your desktop ; this window is divided into four\nquadrants. At the upper-left is an image to be encoded. On the upper-right is\nthe reconstructed image. In the lower-left are the codebook filters being used\nto perform the encoding. In the lower-right are the \"feature maps\" that show\nwhere each codebook filter has been used to reconstruct the source image.\n\n[CUDA]: http://www.nvidia.com/object/cuda_home_new.html\n\n### Sound (CUDA)\n\nThe sound test runs matching pursuit on your 64-bit graphics card. To get\nstarted, install py-cuda :\n\n    pip install pycuda\n\nCurrently, this test requires that your graphics device support 64-bit floating\npoint values. If your graphics device is limited to 32-bit floats, you can add\n`bit_depth=32` to the CudaPursuit constructor in the test.\n\nThe pursuit algorithm is trained using a sound waveform and reports the error\nafter encoding and decoding a test sound -- smaller numbers are better. Run this\ntest with :\n\n    python test/sound.py\n\nThe general takeaway is that signal reproduction tends to improve with more\ntraining (successive numbers within a group), with more codebook filters (first\ncolumn), and by using the multiple-frame (convolution) encoder instead of the\nsingle-frame (standard) encoder. Interestingly, the standard encoder tends to do\nworse with larger filters (second column), while the convolution encoder tends\nto do worse with smaller filters.\n\nIf you have matplotlib installed, you can also save plots of the codebook\nvectors during training by setting `GRAPHS = '/tmp/pursuit'` (or some other\ndirectory name) in `test/sound.py`. Graphing doubles the test runtime, but\nproduces some pretty training artifacts.\n\n[glumpy]: http://code.google.com/p/glumpy/\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2010 Leif Johnson <leif@leifjohnson.net>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the 'Software'), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/lmjohns3/py-pursuit",
    "keywords": "matching-pursuit sparse-coding compressed-sensing machine-learning",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "lmj.pursuit",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/lmj.pursuit/",
    "release_url": "https://pypi.org/project/lmj.pursuit/0.3.1/",
    "requires_python": null,
    "summary": "A library of matching pursuit implementations",
    "version": "0.3.1"
  },
  "releases": {
    "0.3": [
      {
        "comment_text": "built for Linux-3.0.0-13-server-x86_64-with-glibc2.4",
        "digests": {
          "md5": "896e355db85cfecf4eec2cf4c2acdd84",
          "sha256": "8a87149eca729a892734f147b53e360082ec1ae5f7aadfee8a980daaa0e62a5b"
        },
        "downloads": 2902,
        "filename": "lmj.pursuit-0.3.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "896e355db85cfecf4eec2cf4c2acdd84",
        "packagetype": "bdist_dumb",
        "python_version": "2.7",
        "size": 37025,
        "upload_time": "2012-02-06T23:43:57",
        "url": "https://files.pythonhosted.org/packages/ef/63/55730aaa5281ab57be390d8c0fe7d0d01622024c2d5ea47b7b544a73203d/lmj.pursuit-0.3.linux-x86_64.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cdd41066a1a0708bf2294eefc5badb7d",
          "sha256": "a597a5cfc05d30b2cf2fe40966fbd85143553900c6ccbbb7b0dc9807a5e8908b"
        },
        "downloads": 21657,
        "filename": "lmj.pursuit-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cdd41066a1a0708bf2294eefc5badb7d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16500,
        "upload_time": "2012-12-12T00:37:55",
        "url": "https://files.pythonhosted.org/packages/0c/5a/af29ff0f0c673ff4329aaa95ade8427f94fb2b33991a291af21b014ed762/lmj.pursuit-0.3.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "cdd41066a1a0708bf2294eefc5badb7d",
        "sha256": "a597a5cfc05d30b2cf2fe40966fbd85143553900c6ccbbb7b0dc9807a5e8908b"
      },
      "downloads": 21657,
      "filename": "lmj.pursuit-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cdd41066a1a0708bf2294eefc5badb7d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 16500,
      "upload_time": "2012-12-12T00:37:55",
      "url": "https://files.pythonhosted.org/packages/0c/5a/af29ff0f0c673ff4329aaa95ade8427f94fb2b33991a291af21b014ed762/lmj.pursuit-0.3.1.tar.gz"
    }
  ]
}