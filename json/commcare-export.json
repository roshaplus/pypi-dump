{
  "info": {
    "author": "Dimagi",
    "author_email": "information@dimagi.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Healthcare Industry",
      "Intended Audience :: Science/Research",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Topic :: Database",
      "Topic :: Software Development :: Interpreters",
      "Topic :: System :: Archiving",
      "Topic :: System :: Distributed Computing"
    ],
    "description": "CommCare Export\n===============\n\nhttps://github.com/dimagi/commcare-export\n\n|Build Status| |Test coverage| |PyPi version| |PyPi downloads|\n\nA command-line tool (and Python library) to generate customized exports from the CommCareHQ REST API.\n\nInstallation & Quick Start\n--------------------------\n\n0a. Install Python and ``pip``. This tool is `tested with Python 2.6, 2.7, and 3.3 <https://travis-ci.org/dimagi/commcare-export>`__.\n\n0b. Sign up for CommCareHQ at https://www.commcarehq.org/register/user if you have not already.\n\n1. Install CommCare Export via ``pip``\n\n::\n\n    $ pip install commcare-export\n\n2. Visit the CommCareHQ Exchange and add the `Simple CommCare Demo/Tutorial\" <https://www.commcarehq.org/exchange/611422532c7ab89d22cca54d57ae89aa/info/>`__ app\nto a new project space.\n\n3. Visit the Release Manager, make a build, click the star to release it.\n\n4. Visit CloudCare and fill out a bunch of forms.\n\n5. Try out the example queries in the ``examples/`` directory, providing your project name on the command line:\n\n::\n\n    $ commcare-export \\\n         --query examples/demo-registration.xlsx \\\n         --project YOUR_PROJECT \\\n         --output-format markdown\n\n    $ commcare-export \\\n         --query examples/demo-registration.json \\\n         --project YOUR_PROJECT \\\n         --output-format markdown\n\n    $ commcare-export \\\n         --query examples/demo-deliveries.xlsx \\\n         --project YOUR_PROJECT \\\n         --output-format markdown\n\n    $ commcare-export \\\n         --query examples/demo-deliveries.json \\\n         --project YOUR_PROJECT \\\n         --output-format markdown\n\nYou'll see the tables printed out. Change to ``--output-format sql --output URL_TO_YOUR_DB --since DATE`` to sync all forms submitted since that date.\n\nAll examples are present in Excel and also equivalent JSON.\n\nCommand-line Usage\n------------------\n\nThe basic usage of the command-line tool is with a saved Excel or JSON query (see how to write these, below)\n\n::\n\n    $ commcare-export --commcare-hq <URL or alias like \"local\" or \"prod\"> \\\n                      --username <username> \\\n                      --project <project> \\\n                      --version <api version, defaults to latest known> \\\n                      --query <excel file, json file, or raw json> \\\n                      --output-format <csv, xls, xlsx, json, markdown, sql> \\\n                      --output <file name or SQL database URL>\n\nSee ``commcare-export --help`` for the full list of options.\n\nThere are example query files for the CommCare Demo App (available on the CommCareHq Exchange) in the ``examples/`` directory.\n\n``--output``\n\nCommCare Export uses SQLAlachemy's `create\\_engine <http://docs.sqlalchemy.org/en/latest/core/engines.html>`__ to establish a database connection. This is based\noff of the `RFC-1738 <https://www.ietf.org/rfc/rfc1738.txt>`__ protocol. Some common examples:\n\n::\n\n    # Postgres\n    postgresql://scott:tiger@localhost/mydatabase\n\n    # MySQL\n    mysql://scott:tiger@localhost/foo\n\n    # SQLite\n    sqlite:///foo.db\n\nExcel Queries\n-------------\n\nAn excel query is any ``.xlsx`` workbook. Each sheet in the workbook represents one table you wish to create. There are two grouping of columns to configure the\ntable:\n\n-  **Data Source**: Set this to ``form`` to export form data, or ``case`` for case data.\n-  **Filter Name** / *Filter Value*: These columns are paired up to filter the input cases or forms.\n-  **Field**: The destination in your SQL database for the value.\n-  **Source Field**: The particular field from the form you wish to extract. This can be any JSON path.\n\nJSON Queries\n------------\n\nJSON queries are a described in the table below. You build a JSON object that represents the query you have in mind. A good way to get started is to work from\nthe examples, or you could make an excel query and run the tool with ``--dump-query`` to see the resulting JSON query.\n\nPython Library Usage\n--------------------\n\nAs a library, the various ``commcare_export`` modules make it easy to\n\n-  Interact with the CommCareHQ REST API\n-  Execute \"Minilinq\" queries against the API (a very simple query language, described below)\n-  Load and save JSON representations of Minilinq queries\n-  Compile Excel configurations to Minilinq queries\n\nTo directly access the CommCareHq REST API:\n\n.. code:: python\n\n    >>> import getpass\n    >>> from commcare_export.commcare_hq_client import CommCareHqClient\n    >>> api_client = CommCareHqClient('http://commcarehq.org', project='your_project').authenticated('your_username', getpass.getpass())\n    >>> forms = api_client.iterate('form', {'app_id': \"whatever\"})\n    >>> [ (form['received_on'], form['form.gender']) for form in forms ]\n\nTo issue a ``minilinq`` query against it, and then print out that query in a JSON serialization:\n\n.. code:: python\n\n    import getpass\n    import json\n    from commcare_export.minilinq import *\n    from commcare_export.commcare_hq_client import CommCareHqClient\n    from commcare_export.commcare_minilinq import CommCareHqEnv\n    from commcare_export.env import BuiltInEnv\n\n    api_client = CommCareHqClient(\n        url=\"http://www.commcarehq.org\",\n        project='your_project',\n        version='0.5'\n    )\n     \n    api_client = api_client.authenticated(username='username', password='password', mode='digest')\n\n    source = Map(\n       source=Apply(\n           Reference(\"api_data\"),\n           Literal(\"form\"),\n           Literal({\"filter\": {\"term\": {\"app_id\": \"whatever\"}}})\n       ),\n       body=List([\n           Reference(\"received_on\"),\n           Reference(\"form.gender\"),\n       ])\n    )\n\n    query = Emit(\n       'demo-table',\n       [\n           Literal('Received On'),\n           Literal('Gender')\n       ],\n       source\n    )\n\n    print json.dumps(query.to_jvalue(), indent=2)\n\n    results = query.eval(BuiltInEnv() | CommCareHqEnv(api_client) | JsonPathEnv())\n\n    if len(list(env.emitted_tables())) > 0:\n        # with writers.Excel2007TableWriter(\"excel-output.xlsx\") as writer:\n        with writers.StreamingMarkdownTableWriter(sys.stdout) as writer:\n            for table in env.emitted_tables():\n                writer.write_table(table)\n\nWhich will output JSON equivalent to this:\n\n.. code:: javascript\n\n    {\n        \"Emit\": {\n            \"headings\": [\n                {\n                    \"Lit\": \"Received On\"\n                },\n                {\n                    \"Lit\": \"Gender\"\n                }\n            ],\n            \"source\": {\n                \"Map\": {\n                    \"body\": {\n                        \"List\": [\n                            {\n                                \"Ref\": \"received_on\"\n                            },\n                            {\n                                \"Ref\": \"form.gender\"\n                            }\n                        ]\n                    },\n                    \"name\": None,\n                    \"source\": {\n                        \"Apply\": {\n                            \"args\": [\n                                {\n                                    \"Lit\": \"form\"\n                                },\n                                {\n                                    \"Lit\": {\n                                        \"filter\": {\n                                            \"term\": {\n                                                \"app_id\": \"whatever\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ],\n                            \"fn\": {\n                                \"Ref\": \"api_data\"\n                            }\n                        }\n                    }\n                }\n            },\n            \"table\": \"demo-table\"\n        }\n    }\n\nMiniLinq Reference\n------------------\n\nThe abstract syntax can be directly inspected in the ``commcare_export.minilinq`` module. Note that the choice between functions and primitives is deliberately\nchosen to expose the structure of the MiniLinq for possible optimization, and to restrict the overall language.\n\nHere is a description of the astract syntax and semantics\n\n+----------------------------------+--------------------------------------------------------+-------------------------------------+\n| Python                           | JSON                                                   | Which is evaluates to               |\n+==================================+========================================================+=====================================+\n| ``Literal(v)``                   | ``{\"Lit\": v}``                                         | Just ``v``                          |\n+----------------------------------+--------------------------------------------------------+-------------------------------------+\n| ``Reference(x)``                 | ``{\"Ref\": x}``                                         | Whatever ``x`` resolves to in the   |\n|                                  |                                                        | environment                         |\n+----------------------------------+--------------------------------------------------------+-------------------------------------+\n| ``List([a, b, c, ...])``         | ``{\"List\": [a, b, c, ...}``                            | The list of what ``a``, ``b``,      |\n|                                  |                                                        | ``c`` evaluate to                   |\n+----------------------------------+--------------------------------------------------------+-------------------------------------+\n| ``Map(source, name, body)``      | ``{\"Map\": {\"source\": ..., \"name\": ..., \"body\": ...}``  | Evals ``body`` for each elem in     |\n|                                  |                                                        | ``source``. If ``name`` is          |\n|                                  |                                                        | provided, the elem will be bound to |\n|                                  |                                                        | it, otherwise it will replace the   |\n|                                  |                                                        | whole env.                          |\n+----------------------------------+--------------------------------------------------------+-------------------------------------+\n| ``FlatMap(source, name, body)``  | ``{\"FlatMap\": {\"source\" ... etc}}``                    | Flattens after mapping, like nested |\n|                                  |                                                        | list comprehensions                 |\n+----------------------------------+--------------------------------------------------------+-------------------------------------+\n| ``Filter(source, name, body)``   | etc                                                    |                                     |\n+----------------------------------+--------------------------------------------------------+-------------------------------------+\n| ``Bind(value, name, body)``      | etc                                                    | Binds the result of ``value`` to    |\n|                                  |                                                        | ``name`` when evaluating ``body``   |\n+----------------------------------+--------------------------------------------------------+-------------------------------------+\n| ``Emit(table, headings, rows)``  | etc                                                    | Emits ``table`` with ``headings``   |\n|                                  |                                                        | and ``rows``. Note that ``table``   |\n|                                  |                                                        | is a string, ``headings`` is a list |\n|                                  |                                                        | of expressions, and ``rows`` is a   |\n|                                  |                                                        | list of lists of expressions. See   |\n|                                  |                                                        | explanation below for emitted       |\n|                                  |                                                        | output.                             |\n+----------------------------------+--------------------------------------------------------+-------------------------------------+\n| ``Apply(fn, args)``              | etc                                                    | Evaluates ``fn`` to a function, and |\n|                                  |                                                        | all of ``args``, then applies the   |\n|                                  |                                                        | function to the args.               |\n+----------------------------------+--------------------------------------------------------+-------------------------------------+\n\nBuilt in functions like ``api_data`` and basic arithmetic and comparison are provided via the environment, referred to be name using ``Ref``, and utilized via\n``Apply``.\n\nList of builtin functions:\n\n+------------------------------------+----------------------------------------------------------------------------------+------------------------------------+\n| Function                           | Description                                                                      | Example Usage                      |\n+====================================+==================================================================================+====================================+\n| ``+, -, *, //, /, >, <, >=, <=``   | Standard Math                                                                    |                                    |\n+------------------------------------+----------------------------------------------------------------------------------+------------------------------------+\n| len                                | Length                                                                           |                                    |\n+------------------------------------+----------------------------------------------------------------------------------+------------------------------------+\n| bool                               | Bool                                                                             |                                    |\n+------------------------------------+----------------------------------------------------------------------------------+------------------------------------+\n| str2bool                           | Convert string to boolean. True values are 'true', 't', '1' (case insensitive)   |                                    |\n+------------------------------------+----------------------------------------------------------------------------------+------------------------------------+\n| str2date                           | Convert string to date                                                           |                                    |\n+------------------------------------+----------------------------------------------------------------------------------+------------------------------------+\n| bool2int                           | Convert boolean to integer (0, 1)                                                |                                    |\n+------------------------------------+----------------------------------------------------------------------------------+------------------------------------+\n| str2num                            | Parse string as a number                                                         |                                    |\n+------------------------------------+----------------------------------------------------------------------------------+------------------------------------+\n| selected-at                        | Returns the Nth word in a string. N is zero-indexed.                             | selected-at(3) - return 4th word   |\n+------------------------------------+----------------------------------------------------------------------------------+------------------------------------+\n| selected                           | Returns True if the given word is in the value.                                  | selected(fever)                    |\n+------------------------------------+----------------------------------------------------------------------------------+------------------------------------+\n| count-selected                     | Count the number of words                                                        |                                    |\n+------------------------------------+----------------------------------------------------------------------------------+------------------------------------+\n| template                           | Render a string template (not robust)                                            | template({} on {}, state, date)    |\n+------------------------------------+----------------------------------------------------------------------------------+------------------------------------+\n| attachment\\_url                    | Convert an attachment name into it's download URL                                |                                    |\n+------------------------------------+----------------------------------------------------------------------------------+------------------------------------+\n\nOutput Formats\n--------------\n\nYour MiniLinq may define multiple tables with headings in addition to their body rows by using ``Emit`` expressions, or may simply return the results of a\nsingle query.\n\nIf your MiniLinq does not contain any ``Emit`` expressions, then the results of the expression will be printed to standard output as pretty-printed JSON.\n\nIf your MiniLinq *does* contain ``Emit`` expressions, then there are many formats available, selected via the ``--output-format <format>`` option, and it can be\ndirected to a file with the ``--output <file>`` command-line option.\n\n-  ``csv``: Each table will be a CSV file within a Zip archive.\n-  ``xls``: Each table will be a sheet in an old-format Excel spreadsheet.\n-  ``xlsx``: Each table will be a sheet in a new-format Excel spreadsheet.\n-  ``json``: The tables will each be a member of a JSON dictionary, printed to standard output\n-  ``markdown``: The tables will be streamed to standard output in Markdown format (very handy for debugging your queries)\n-  ``sql``: All data will be idempotently \"upserted\" into the SQL database you specify, including creating the needed tables and columns.\n\nDependencies\n------------\n\nRequired dependencies will be automatically installed via pip. But since you may not care about all export formats, the various dependencies there are optional.\nHere is how you might install them:\n\n::\n\n    # To export \"xlsx\"\n    $ pip install openpyxl\n\n    # To export \"xls\"\n    $ pip install xlwt\n\n    # To sync with a SQL database\n    $ pip install SQLAlchemy alembic\n\nContributing\n------------\n\n0. Sign up for github, if you have not already, at https://github.com.\n\n1. Fork the repository at https://github.com/dimagi/commcare-export.\n\n2. Clone your fork, install into a ``virtualenv``, and start a feature branch\n\n::\n\n    $ mkvirtualenv commcare-export\n    $ git clone git@github.com:dimagi/commcare-export.git\n    $ cd commcare-export\n    $ pip install -e .\n    $ git checkout -b my-super-duper-feature\n\n3. Make your edits.\n\n4. Make sure the tests pass. The best way to test for all versions is to sign up for https://travis-ci.org and turn on automatic continuous testing for your\nfork.\n\n::\n\n    $ py.test\n    =============== test session starts ===============\n    platform darwin -- Python 2.7.3 -- pytest-2.3.4\n    collected 17 items\n\n    tests/test_commcare_minilinq.py .\n    tests/test_excel_query.py ....\n    tests/test_minilinq.py ........\n    tests/test_repeatable_iterator.py .\n    tests/test_writers.py ...\n\n    ============ 17 passed in 2.09 seconds ============\n\n5. Push the feature branch up\n\n::\n\n    $ git push -u origin my-super-duper-feature\n\n6. Visit https://github.com/dimagi/commcare-export and submit a pull request.\n\n7. Accept our gratitude for contributing: Thanks!\n\n.. |Build Status| image:: https://travis-ci.org/dimagi/commcare-export.png\n   :target: https://travis-ci.org/dimagi/commcare-export\n.. |Test coverage| image:: https://coveralls.io/repos/dimagi/commcare-export/badge.png?branch=master\n   :target: https://coveralls.io/r/dimagi/commcare-export\n.. |PyPi version| image:: https://pypip.in/v/commcare-export/badge.png\n   :target: https://pypi.python.org/pypi/commcare-export\n.. |PyPi downloads| image:: https://pypip.in/d/commcare-export/badge.png\n   :target: https://pypi.python.org/pypi/commcare-export",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/dimagi/commcare-export",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "commcare-export",
    "platform": "",
    "project_url": "https://pypi.org/project/commcare-export/",
    "release_url": "https://pypi.org/project/commcare-export/0.15.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A command-line tool (and Python library) to extract data from CommCareHQ into a SQL database or Excel workbook",
    "version": "0.15.2"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4b06b8909a441a9b5f8d072191b199e2",
          "sha256": "559bf53bbb4527ef77dc44211f210e48cd430d9539c0faf8037c172198d31720"
        },
        "downloads": 2597,
        "filename": "commcare-export-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4b06b8909a441a9b5f8d072191b199e2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18779,
        "upload_time": "2013-03-22T18:50:23",
        "url": "https://files.pythonhosted.org/packages/01/96/92483c4a9e6b898853eff2f95fa5259d13bee8ea3227657388f52f340c94/commcare-export-0.1.tar.gz"
      }
    ],
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0217c0684a06a9c7664338a57f515370",
          "sha256": "d020032f0221478d8033337c90601dc91efac20a9af71320a40d47d2990c5afd"
        },
        "downloads": 2258,
        "filename": "commcare-export-0.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0217c0684a06a9c7664338a57f515370",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21688,
        "upload_time": "2013-04-23T17:40:46",
        "url": "https://files.pythonhosted.org/packages/19/00/289ba8bd4933f3143f041c891d90630c6ec003fa247ea966228a45e7ba3e/commcare-export-0.10.0.tar.gz"
      }
    ],
    "0.10.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3ffde8dec7c74865987b13c6d72a9122",
          "sha256": "fbd2500b09f5d12e3dc4db8683a4a34cfa853139a223a05e4fe55a0f9858cdf4"
        },
        "downloads": 2106,
        "filename": "commcare-export-0.10.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3ffde8dec7c74865987b13c6d72a9122",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21684,
        "upload_time": "2013-05-27T21:24:18",
        "url": "https://files.pythonhosted.org/packages/bb/22/24674972fb88cd795a2b8d923fe167d29480fc5d1e8e9e13c8857e8ba94c/commcare-export-0.10.1.tar.gz"
      }
    ],
    "0.10.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7536c8d0d07dfe7150df7bbf4fd49f4a",
          "sha256": "caa2c97371b15bce19d38289336210ebac481a864671cd5d3b1ea705eb22561a"
        },
        "downloads": 2078,
        "filename": "commcare-export-0.10.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7536c8d0d07dfe7150df7bbf4fd49f4a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21713,
        "upload_time": "2013-06-02T17:51:47",
        "url": "https://files.pythonhosted.org/packages/99/7d/e7ddce209095ee6e267c7e3c74a503d0b7ac95176a1a14e1689437d9451e/commcare-export-0.10.2.tar.gz"
      }
    ],
    "0.10.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d9ecca3a303eccd431fc2f58b98eaf01",
          "sha256": "5000b9fec9612403f93c96cd20ee5817b99bf33845f2aad9e5e40c3cba3b5c71"
        },
        "downloads": 2114,
        "filename": "commcare-export-0.10.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d9ecca3a303eccd431fc2f58b98eaf01",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21762,
        "upload_time": "2013-06-04T17:26:15",
        "url": "https://files.pythonhosted.org/packages/df/89/7e0dc8bae105b215c88d5e4089c3ad655e7bc8ba002f5fb1114c0943eed0/commcare-export-0.10.3.tar.gz"
      }
    ],
    "0.10.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5283edd3d3d4cdd3d83d41027fac2859",
          "sha256": "0fd8084a3da59e88c92cc9ab703242359462ec243546ff482f33bd3808b77379"
        },
        "downloads": 2116,
        "filename": "commcare-export-0.10.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5283edd3d3d4cdd3d83d41027fac2859",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21811,
        "upload_time": "2013-06-07T15:45:45",
        "url": "https://files.pythonhosted.org/packages/ce/43/50d295f25631e561f2d2724714ae83bfa8ab32e155501df344ab03db692a/commcare-export-0.10.4.tar.gz"
      }
    ],
    "0.10.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "34b8840e6032362ab973344e2d124750",
          "sha256": "e1d265b66c4356848d7765c38f83ad7bcd1b49bdbe196486863913caa107d57b"
        },
        "downloads": 2108,
        "filename": "commcare-export-0.10.5.tar.gz",
        "has_sig": false,
        "md5_digest": "34b8840e6032362ab973344e2d124750",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21974,
        "upload_time": "2013-06-13T20:14:48",
        "url": "https://files.pythonhosted.org/packages/e0/37/3d51f1d06399c7b66401403f37bd0b7538cb6e6dbac15a06876570cd8e23/commcare-export-0.10.5.tar.gz"
      }
    ],
    "0.10.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "789a9f40dbde2141d6509eff2c3df0fa",
          "sha256": "38831daf8c7334ddd42e8c5097a4abd90619f9d2e7ee3fc0951aef29ac20a0a4"
        },
        "downloads": 2102,
        "filename": "commcare-export-0.10.6.tar.gz",
        "has_sig": false,
        "md5_digest": "789a9f40dbde2141d6509eff2c3df0fa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22093,
        "upload_time": "2013-06-14T18:38:12",
        "url": "https://files.pythonhosted.org/packages/e6/f2/a297ecb101e7129052a824f0354aaed10a4392a5cb765a15f3e70c188516/commcare-export-0.10.6.tar.gz"
      }
    ],
    "0.11.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0cddddb854ff313c94899760f2112f5f",
          "sha256": "b7683583bac1fe8efed141d2ea361e0a2a44f86812f283c08f878e9f694e5037"
        },
        "downloads": 2097,
        "filename": "commcare-export-0.11.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0cddddb854ff313c94899760f2112f5f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22340,
        "upload_time": "2013-06-17T16:55:15",
        "url": "https://files.pythonhosted.org/packages/d8/44/11779feafeff9481b16ad2d0261c13a6353b8d482463a05b831f19546aae/commcare-export-0.11.0.tar.gz"
      }
    ],
    "0.11.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "79b91c3536d50616e6848877d9d8fa19",
          "sha256": "c71eb44ed3c20fcbe1030fe22339ec0688fbf3dfc66df22b1f028489e85e8d3d"
        },
        "downloads": 2162,
        "filename": "commcare-export-0.11.1.tar.gz",
        "has_sig": false,
        "md5_digest": "79b91c3536d50616e6848877d9d8fa19",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22370,
        "upload_time": "2013-06-28T14:57:36",
        "url": "https://files.pythonhosted.org/packages/32/74/15121a0cbee587bf38d6fc104cd900bed967f2cc86d79f34866b3c61c0fc/commcare-export-0.11.1.tar.gz"
      }
    ],
    "0.11.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "de97a37cac0266c61980800314dbff0e",
          "sha256": "3f11e8950c15627e12f3b718efd62cb8ab53f5f8d57f6f52252febd5ad33496f"
        },
        "downloads": 2244,
        "filename": "commcare-export-0.11.2.tar.gz",
        "has_sig": false,
        "md5_digest": "de97a37cac0266c61980800314dbff0e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22263,
        "upload_time": "2013-07-09T16:16:16",
        "url": "https://files.pythonhosted.org/packages/58/69/3cb2fff3efdd23401dae0863b81027029c3111e4f1c175bd5c6caf591118/commcare-export-0.11.2.tar.gz"
      }
    ],
    "0.11.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7875f7acf5623d5cf91594d8792214f8",
          "sha256": "d56b0aeb4960fba9f6b1da319791e87b39417a4a0c32f1cd24ec8caefda77ec9"
        },
        "downloads": 2075,
        "filename": "commcare-export-0.11.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7875f7acf5623d5cf91594d8792214f8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23282,
        "upload_time": "2013-09-24T16:00:24",
        "url": "https://files.pythonhosted.org/packages/fb/25/661c043122d3c96ff4dd8168774db0010aaa7f1b2a7ec9f39727c8f3f640/commcare-export-0.11.3.tar.gz"
      }
    ],
    "0.11.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b6e223f0a44051cecd41ceae5c2d9127",
          "sha256": "9f63e23eb996f91a343cda6f2498a7316cc363b306d5d935658425ce93037f8c"
        },
        "downloads": 2070,
        "filename": "commcare-export-0.11.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b6e223f0a44051cecd41ceae5c2d9127",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23274,
        "upload_time": "2013-09-24T21:42:04",
        "url": "https://files.pythonhosted.org/packages/31/cb/813d14b19bae24bab3e6345ab59f0e0e241c9e055c4f9e171faafabe8835/commcare-export-0.11.4.tar.gz"
      }
    ],
    "0.11.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dafab6af08de69a336f81c6fbbe5d0ab",
          "sha256": "b81bbf0921d310f0cf6e66ea43342beafa689d18e60156949c805a9bb7d8d756"
        },
        "downloads": 2308,
        "filename": "commcare-export-0.11.5.tar.gz",
        "has_sig": false,
        "md5_digest": "dafab6af08de69a336f81c6fbbe5d0ab",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23600,
        "upload_time": "2013-10-03T17:14:09",
        "url": "https://files.pythonhosted.org/packages/89/69/f6ac47522680cba96f871b09758be917126e010504b439f5e1ba8a030102/commcare-export-0.11.5.tar.gz"
      }
    ],
    "0.11.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "64446dcfc726a8e7652329e7cff49780",
          "sha256": "50c4f680ddd966cce0f57a8bfaa03949b3e656140cf19b2e71a2145ea5743913"
        },
        "downloads": 1860,
        "filename": "commcare-export-0.11.6.tar.gz",
        "has_sig": false,
        "md5_digest": "64446dcfc726a8e7652329e7cff49780",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23268,
        "upload_time": "2014-04-10T08:23:23",
        "url": "https://files.pythonhosted.org/packages/d0/01/79ece5cfac7e42da7360b6fee1a4d998bc9354c3ff1ddb04c8c88ba8f8d1/commcare-export-0.11.6.tar.gz"
      }
    ],
    "0.11.6-4-g295311e": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8345d672123224500732fe1637d31470",
          "sha256": "6c4ecef4f0f8f6c86bb00c83a0a5d8425f260a0f729156bf14a28ec62a4ae91d"
        },
        "downloads": 1592,
        "filename": "commcare-export-0.11.6-4-g295311e.tar.gz",
        "has_sig": false,
        "md5_digest": "8345d672123224500732fe1637d31470",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23381,
        "upload_time": "2014-07-08T09:23:02",
        "url": "https://files.pythonhosted.org/packages/0b/08/6d991dc612143979ba7308a6312e7f0cadc8090878f7aca450d15c26d621/commcare-export-0.11.6-4-g295311e.tar.gz"
      }
    ],
    "0.11.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bed920645f79f21b9d52062446ae1c75",
          "sha256": "37d969e4688022eae87d8ca1f21336a74070884dca1fd0c821e664aaff162159"
        },
        "downloads": 1779,
        "filename": "commcare-export-0.11.7.tar.gz",
        "has_sig": false,
        "md5_digest": "bed920645f79f21b9d52062446ae1c75",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23354,
        "upload_time": "2014-07-08T09:23:19",
        "url": "https://files.pythonhosted.org/packages/52/f0/b78d526a4f83e4197a73279eb6ec8285545a29ecfb2d63460fd019baf0ec/commcare-export-0.11.7.tar.gz"
      }
    ],
    "0.11.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "956b28bc52d95ff2cc111e8fb12a1b52",
          "sha256": "c0b21cf0f7b5e78bdd6c6168e2deba3b9962e0e3bf98459f99726f847452f8e6"
        },
        "downloads": 1315,
        "filename": "commcare-export-0.11.8.tar.gz",
        "has_sig": false,
        "md5_digest": "956b28bc52d95ff2cc111e8fb12a1b52",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24890,
        "upload_time": "2015-03-09T13:11:48",
        "url": "https://files.pythonhosted.org/packages/2c/02/b133547e3d94a7d6f3aefd93e2f2393e73749d6ff7e181c068968926579e/commcare-export-0.11.8.tar.gz"
      }
    ],
    "0.12.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1d6570e61fca4be85ac4d5a1fcbcb8f2",
          "sha256": "dc75432e1f98d6a910a8b30ceb34ff59e45ac95548eb99073e45f548bfb2f8f6"
        },
        "downloads": 963,
        "filename": "commcare-export-0.12.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1d6570e61fca4be85ac4d5a1fcbcb8f2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29472,
        "upload_time": "2015-06-30T10:00:27",
        "url": "https://files.pythonhosted.org/packages/1f/78/40aaa7c33c4fd4bdf4c037777a4511698cfc8342b1e036c42cb1b3e5f2e3/commcare-export-0.12.0.tar.gz"
      }
    ],
    "0.12.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c05271859bd54c29f1323a8794b66193",
          "sha256": "1e5169ceca2f018deef2b548a8640a8b116cf22aeb9b85c9d01c78c546cd09f8"
        },
        "downloads": 1326,
        "filename": "commcare-export-0.12.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c05271859bd54c29f1323a8794b66193",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29580,
        "upload_time": "2015-07-02T08:38:26",
        "url": "https://files.pythonhosted.org/packages/ae/be/8cd11322f4162c40ac0ea87bfea0ace9aeca6f57a9835f78bf93327682c9/commcare-export-0.12.1.tar.gz"
      }
    ],
    "0.12.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1faa4a5498fcd5c847053f0392df5231",
          "sha256": "580d20ca2386b6dd48df505dc0c89a839baf0fcb4f4d1a254ca78812812efefb"
        },
        "downloads": 2726,
        "filename": "commcare-export-0.12.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1faa4a5498fcd5c847053f0392df5231",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29665,
        "upload_time": "2015-07-13T15:15:11",
        "url": "https://files.pythonhosted.org/packages/cf/ba/700433ce772cb05865bd8ed1e84eafaa41710b0d04864e4d2872cd1e4a5a/commcare-export-0.12.2.tar.gz"
      }
    ],
    "0.12.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "919fffc79d806f35231b1fb7b12f3620",
          "sha256": "265a8ae20bcfddf6839235ea478fd2edea0d4d621e661081fcc1f6e0344efc84"
        },
        "downloads": 50,
        "filename": "commcare-export-0.12.4.tar.gz",
        "has_sig": false,
        "md5_digest": "919fffc79d806f35231b1fb7b12f3620",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20574,
        "upload_time": "2016-11-03T07:33:03",
        "url": "https://files.pythonhosted.org/packages/20/fc/79c2212686daaa72b817378d5e9503697d42622bdc9190a29327e2434b9f/commcare-export-0.12.4.tar.gz"
      }
    ],
    "0.12.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fae9be27b621953dabf57170057cec48",
          "sha256": "404b205f29e38d6e645434d31b8e913fcb3f3e3f936c5b18cbb04921562c3f0d"
        },
        "downloads": 56,
        "filename": "commcare-export-0.12.5.tar.gz",
        "has_sig": false,
        "md5_digest": "fae9be27b621953dabf57170057cec48",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30599,
        "upload_time": "2016-11-11T08:54:12",
        "url": "https://files.pythonhosted.org/packages/38/5f/e1814955593c25402138202e18266c841008709a0d165418d0fdc7ce6f55/commcare-export-0.12.5.tar.gz"
      }
    ],
    "0.12.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3b5a2c801edabcccd4891d766e286c93",
          "sha256": "6e8a063de0f933bad1bed912bfef8663d937bd01944572f57b64d9b93f45d2aa"
        },
        "downloads": 39,
        "filename": "commcare-export-0.12.6.tar.gz",
        "has_sig": false,
        "md5_digest": "3b5a2c801edabcccd4891d766e286c93",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30752,
        "upload_time": "2016-11-29T08:34:02",
        "url": "https://files.pythonhosted.org/packages/fd/ad/a495b3e0ab2813f824fa0cadca4c0afd1afe16b5b0985524b0b4f148ec45/commcare-export-0.12.6.tar.gz"
      }
    ],
    "0.12.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f3ce04fc970c0d5aaa27e1b3924ceb39",
          "sha256": "62ecf8ea85b9bbbbd59a35e3c23e92277d90037b3cf5d276dea77e2927d56397"
        },
        "downloads": 63,
        "filename": "commcare-export-0.12.7.tar.gz",
        "has_sig": false,
        "md5_digest": "f3ce04fc970c0d5aaa27e1b3924ceb39",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30837,
        "upload_time": "2016-12-06T15:58:54",
        "url": "https://files.pythonhosted.org/packages/38/83/b06c263e7cbf5058d571cc8bd893e56768105dfd2bad1921f5c23461aa44/commcare-export-0.12.7.tar.gz"
      }
    ],
    "0.12.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5cebcbdd045fa0a27c1961113a440459",
          "sha256": "cc35336023befaeb739847642ad31668c5ae45a2b740635a3094d08f331b5a82"
        },
        "downloads": 0,
        "filename": "commcare-export-0.12.8.tar.gz",
        "has_sig": false,
        "md5_digest": "5cebcbdd045fa0a27c1961113a440459",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30891,
        "upload_time": "2017-05-23T11:27:12",
        "url": "https://files.pythonhosted.org/packages/e7/c7/2dc52651b4634afeb4286cbc5a5939ea09c905d65c3e8f60bc4e8d7c5991/commcare-export-0.12.8.tar.gz"
      }
    ],
    "0.12.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e1ab440c493da4655cbca5b45293b30c",
          "sha256": "5ddf2dcefc3a8804401a84fb1ea4f098f248d48f2c2c4e475975bae90754bac5"
        },
        "downloads": 0,
        "filename": "commcare-export-0.12.9.tar.gz",
        "has_sig": false,
        "md5_digest": "e1ab440c493da4655cbca5b45293b30c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30965,
        "upload_time": "2017-06-26T11:35:05",
        "url": "https://files.pythonhosted.org/packages/db/16/1e1221c029ae70b030b096d7db0c4ed731e09dfa0bfe2e98c9c407cb2a93/commcare-export-0.12.9.tar.gz"
      }
    ],
    "0.13.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "013c52ee385bb94b0e1800a6a4e6bed8",
          "sha256": "1ee0ee62e4ebdccd31022ae5fccbcfc487b6a3c02ca6afab8c90dceacaabebdc"
        },
        "downloads": 0,
        "filename": "commcare-export-0.13.1.tar.gz",
        "has_sig": false,
        "md5_digest": "013c52ee385bb94b0e1800a6a4e6bed8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 31951,
        "upload_time": "2017-07-04T15:25:45",
        "url": "https://files.pythonhosted.org/packages/c4/01/c860764df5ae6e6c87982a5025ec0e654a6f4f87c5b945aab75bf1daf797/commcare-export-0.13.1.tar.gz"
      }
    ],
    "0.13.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2d7d95c037a2cd445aa0542d807d4959",
          "sha256": "3f1de0fc8d9da8327b11fcb3aadc6aec61f4514753f571b07beb44f60a484e1a"
        },
        "downloads": 0,
        "filename": "commcare-export-0.13.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2d7d95c037a2cd445aa0542d807d4959",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32308,
        "upload_time": "2017-07-12T13:24:30",
        "url": "https://files.pythonhosted.org/packages/67/1c/f45aaa4d2644a14ef0eb36be81bdeb831a464e03414cf2b3a6168decaca0/commcare-export-0.13.2.tar.gz"
      }
    ],
    "0.13.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1a97bf3ed0ab1b6986e242eb878bbd57",
          "sha256": "2b638192f433b0903819cc056e5c6561f565426c384351fb0bb620e9ba996816"
        },
        "downloads": 0,
        "filename": "commcare-export-0.13.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1a97bf3ed0ab1b6986e242eb878bbd57",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 32685,
        "upload_time": "2017-08-02T08:35:01",
        "url": "https://files.pythonhosted.org/packages/10/54/c81a72fdf435721691bfc0c0b423c2072e85458e6a1c6730912189b692e8/commcare-export-0.13.3.tar.gz"
      }
    ],
    "0.14.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f9cddbcde649445b106fd263ede23bf9",
          "sha256": "7dda81cdd07c783552c257605ddeb142dd75a04d49626a1320212e64219d2ab6"
        },
        "downloads": 0,
        "filename": "commcare-export-0.14.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f9cddbcde649445b106fd263ede23bf9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 96565,
        "upload_time": "2017-08-07T11:14:33",
        "url": "https://files.pythonhosted.org/packages/33/79/3948540e7d00653613425e259e1e159ce157d2931bc1a3be13f0b816926b/commcare-export-0.14.0.tar.gz"
      }
    ],
    "0.15.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e7d40016c5f289abf7d6377626491806",
          "sha256": "852ca8224ae9570fc3f2e26c0013c50f0f5830eb40a2681894e0300a0bdeff27"
        },
        "downloads": 0,
        "filename": "commcare-export-0.15.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e7d40016c5f289abf7d6377626491806",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 97005,
        "upload_time": "2017-08-16T16:03:20",
        "url": "https://files.pythonhosted.org/packages/ed/99/73a6a251558cef46a63dd0fd8f48b891cffbda79815038819fd7e612dcb8/commcare-export-0.15.0.tar.gz"
      }
    ],
    "0.15.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fc8be65ef779d055f0c9d62d0e6d9c23",
          "sha256": "78be3612e6978fbc7a52d3b79568571c7ed169b3c9344282b77ee921b765f86c"
        },
        "downloads": 0,
        "filename": "commcare-export-0.15.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fc8be65ef779d055f0c9d62d0e6d9c23",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 97121,
        "upload_time": "2017-09-05T11:02:52",
        "url": "https://files.pythonhosted.org/packages/d8/53/0b4a52179a2fe415110936e825877be97060c6fb4dfe3d0c79fa081e4237/commcare-export-0.15.1.tar.gz"
      }
    ],
    "0.15.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a7cea8e6fad930d762f0500a564c8a51",
          "sha256": "e011e2eb6d6c6f2c987e4a5d1a7f9efd3f750e49b3e739ffcfcd0edfb407d757"
        },
        "downloads": 0,
        "filename": "commcare-export-0.15.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a7cea8e6fad930d762f0500a564c8a51",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 97106,
        "upload_time": "2017-09-05T14:58:28",
        "url": "https://files.pythonhosted.org/packages/c4/7e/84e23bd238b72534447ad11d2f63f1f5d93c2c9bc1026e03d09645b9bfeb/commcare-export-0.15.2.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "448ade87841af5b4f7c958b02f93418f",
          "sha256": "5c9207d6a83465f396eacb9721f2fb1bfd8d9da63e22a88d4ccd1646ebb871e3"
        },
        "downloads": 2549,
        "filename": "commcare-export-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "448ade87841af5b4f7c958b02f93418f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19469,
        "upload_time": "2013-03-26T15:10:28",
        "url": "https://files.pythonhosted.org/packages/7a/eb/882877aede288c49d9bc33f045389f7147cc0c7efa4de710ed75b36f99ee/commcare-export-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4acbe1e0abcae12024d91e8dd6c258ff",
          "sha256": "9353fc2e7bf9624fbc74cb6c39c3977c7e006dbc6875c3f109c70a9c56121aac"
        },
        "downloads": 2530,
        "filename": "commcare-export-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4acbe1e0abcae12024d91e8dd6c258ff",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20024,
        "upload_time": "2013-03-26T20:55:09",
        "url": "https://files.pythonhosted.org/packages/e1/df/4ce9c98e262b9c9f0309f22a04d3292bf16c7fcd062b17bc78ed48f33718/commcare-export-0.3.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8a5d03ab387950dc9d2c4e02f36b6fba",
          "sha256": "eb32d42f1f97f68f1d6675d460ff87a7fe32c65ac8e30c7e8dc966d137208ed1"
        },
        "downloads": 2490,
        "filename": "commcare-export-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8a5d03ab387950dc9d2c4e02f36b6fba",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20729,
        "upload_time": "2013-03-27T19:07:50",
        "url": "https://files.pythonhosted.org/packages/9c/b0/8d17db2fcbbf2ab80889c2365a5e9448f053d4f8f2c8c90c53ea195e19a0/commcare-export-0.4.tar.gz"
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cbe75ffe40d96dc5722cdad56f64f99b",
          "sha256": "0e8731febbb2fd4b9228e1ffb856896a280b944eb9f2737963d549ad56f7c80d"
        },
        "downloads": 2485,
        "filename": "commcare-export-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "cbe75ffe40d96dc5722cdad56f64f99b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 20796,
        "upload_time": "2013-03-27T20:25:44",
        "url": "https://files.pythonhosted.org/packages/57/00/6f7820cdc7198bc5d25b4c69fd2d0c2920639b6850713fc9b7e1d0da6b2e/commcare-export-0.5.tar.gz"
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "05fb9155a324e7c776672abfa6daf277",
          "sha256": "71182937a8ae2b49cb4ff90e569d6961e794cd2a22edbf7cda1bd2de1fc5eb55"
        },
        "downloads": 2432,
        "filename": "commcare-export-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "05fb9155a324e7c776672abfa6daf277",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21023,
        "upload_time": "2013-03-28T20:14:30",
        "url": "https://files.pythonhosted.org/packages/8f/16/ef6c0f4e23de2a598bcdc0057be4bdc5bd57c0690f24c36b73de0baeb77b/commcare-export-0.6.tar.gz"
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7e43b98f9360e12c9cabc54258e5242a",
          "sha256": "37dd858fefe60145be9ddb940999353dbd68651b9d74763d2fefb794e735bb78"
        },
        "downloads": 2404,
        "filename": "commcare-export-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "7e43b98f9360e12c9cabc54258e5242a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21059,
        "upload_time": "2013-03-29T16:22:12",
        "url": "https://files.pythonhosted.org/packages/03/c2/e13fa25272546fe61492ad667ebe263c7c3087382c90fc5c568c45a81673/commcare-export-0.7.tar.gz"
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d5a12d212e0b7efe3fee970f53b9b025",
          "sha256": "6f30fb45ac33a701fb9bed4b050ff4eb1f6f24120881450927ef0f9c4718bb8c"
        },
        "downloads": 2409,
        "filename": "commcare-export-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "d5a12d212e0b7efe3fee970f53b9b025",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21585,
        "upload_time": "2013-03-29T18:06:34",
        "url": "https://files.pythonhosted.org/packages/67/1e/0c6bd8c3824cbc4f3014decd4641dfc8c1a04c20904d3ea9f5047de0aee9/commcare-export-0.8.tar.gz"
      }
    ],
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6f748195762c86a894bd88af18a282bb",
          "sha256": "a60a81c64dfd39c5abaa8ebe5d99e2de3ddcd2b58f727bac89ff59c9431a408a"
        },
        "downloads": 2684,
        "filename": "commcare-export-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "6f748195762c86a894bd88af18a282bb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21623,
        "upload_time": "2013-04-19T19:29:34",
        "url": "https://files.pythonhosted.org/packages/80/54/0b97bbfabf7a018b6d154bbf970fa9f54a9f98d370bd47d67ea4d782492b/commcare-export-0.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "a7cea8e6fad930d762f0500a564c8a51",
        "sha256": "e011e2eb6d6c6f2c987e4a5d1a7f9efd3f750e49b3e739ffcfcd0edfb407d757"
      },
      "downloads": 0,
      "filename": "commcare-export-0.15.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a7cea8e6fad930d762f0500a564c8a51",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 97106,
      "upload_time": "2017-09-05T14:58:28",
      "url": "https://files.pythonhosted.org/packages/c4/7e/84e23bd238b72534447ad11d2f63f1f5d93c2c9bc1026e03d09645b9bfeb/commcare-export-0.15.2.tar.gz"
    }
  ]
}