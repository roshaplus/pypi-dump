{
  "info": {
    "author": "Ernesto Perez Amigo",
    "author_email": "eamigo@nauta.cu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "--------------\n\nGraphene-Django-Extras\n===============================================================================\n\nThis package add some extra funcionalities to graphene-django to facilitate the graphql use without Relay and \nallow pagination and filtering integration.\n\nInstallation\n~~~~~~~~~~~~\n\nFor installing graphene-django-extras, just run this command in your shell:\n\n.. code:: bash\n\n    pip install \"graphene-django-extras\"\n\nDocumentation\n~~~~~~~~~~~~~\n    Extra functionalities:\n        Fields:\n            1.\tDjangoListField\n            2.\tDjangoFilterListField\n            3.\tDjangoFilterPaginateListField\n            4.\tDjangoListObjectField\n\n        Mutations:\n            1.\tDjangoSerializerMutation\n\n        Types:\n            1.  DjangoObjectTypeExtra\n            2.\tDjangoInputObjectType\n            3.\tDjangoPaginatedObjectListType\n\n        Pagination:\n            1.\tLimitOffsetGraphqlPagination\n            2.\tPageGraphqlPagination\n            3.\tCursosGraphqlPagination (cooming soon)\n\nExamples:\n~~~~~~~~\n\n    Here is a simple use of graphene-django-extras:\n\n    1- Types Definition:\n\n    .. code:: python\n\n        from django.contrib.auth.models import User\n        from graphene_django_extras import DjangoObjectTypeExtra, DjangoPaginatedObjectListType    \n        from graphene_django_extras.pagination import LimitOffsetGraphqlPagination\n\n        class UserType(DjangoObjectTypeExtra):\n            \"\"\"\n                The DjangoObjectTypeExtra have a ID field to filter to avoid resolve method definition on Queries \n            \"\"\"\n\n            class Meta:\n                model = User\n                description = \"Type for User Model\"\n                filter_fields = {\n                    'id': ['exact', ],\n                    'first_name': ['icontains', 'iexact'],\n                    'last_name': ['icontains', 'iexact'],\n                    'username': ['icontains', 'iexact'],\n                    'email': ['icontains', 'iexact']\n                }\n\n        class UserListType(DjangoPaginatedObjectListType):\n            class Meta:\n                description = \"User list query definition\"\n                model = User\n                pagination = LimitOffsetGraphqlPagination()\n\n\n    2- Input Types can be defined for use on mutations:\n\n    .. code:: python\n\n        from graphene_django_extras import DjangoInputObjectType\n\n        class UserInput(DjangoInputObjectType):\n            class Meta:\n                description = \" Input Type for User Model \"\n                model = User\n\n\n    3- You can define traditional mutations that use Input Types or Mutations based on DRF SerializerClass:\n\n    .. code:: python        \n\n        import graphene\n        from .serializers import UserSerializer\n        from graphene_django_extras import DjangoSerializerMutation     \n        from .types import UserType\n        from .input_types import UserInputType\n\n        class UserSerializerMutation(DjangoSerializerMutation):\n            class Meta:\n                description = \" Serializer based Mutation for Users \"\n                serializer_class = UserSerializer\n\n\n        class UserMutation(graphene.mutation):\n            \"\"\"\n                You must implement the mutate function\n            \"\"\"\n\n            user = graphene.Field(UserType, required=False)\n\n            class Arguments:\n                new_user = graphene.Argument(UserInput)\n\n            class Meta:\n                description = \"Normal mutation for Users\"\n\n            @classmethod\n            def mutate(cls, info, **kwargs):\n                ...\n\n\n    4- Defining schemes:\n\n    .. code:: python  \n\n        import graphene\n        from graphene_django_extras import DjangoObjectField, DjangoListObjectField\n        from .types import UserType, UserListType\n        from .mutations import UserMutation, UserSerializerMutation\n\n        class Queries(graphene.ObjectType):\n            # Posible User list queries definitions\n            all_users = DjangoListObjectField(UserListType, description=_('All Usersquery'))\n            all_users1 = DjangoFilterPaginateListField(UserType, pagination=LimitOffsetGraphqlPagination())\n            all_users2 = DjangoFilterListField(UserType)\n            all_users3 = DjangoListObjectField(UserListType, filterset_class=UserFilter, description=_('All Users query'))\n\n            # Single user queries definitions\n            user = DjangoObjectField(UserType, description=_('Single User query'))  \n            other_way_user = DjangoObjectField(UserListType.getOne(), description=_('Other way to query a single User query'))  \n\n        class Mutations(graphene.ObjectType):\n            user_create = UserSerializerMutation.CreateField(deprecation_reason='Deprecation message')\n            user_delete = UserSerializerMutation.DeleteField()\n            user_update = UserSerializerMutation.UpdateField()\n\n            traditional_user_mutation = UserMutation.Field()\n\n\n    5- Examples of queries:\n    .. code:: javascript\n        {\n            allUsers(username_Icontains:\"john\"){\n                results(limit:5, offset:5){\n                    id\n                    username\n                    firstName\n                    lastName\n                }\n                totalCount\n            }\n\n            allUsers1(lastName_Iexact:\"Doe\", limit:5, offset:0){\n                id\n                username\n                firstName\n                lastName    \n            }\n\n            allUsers2(firstName_Icontains: \"J\"){\n                id\n                username\n                firstName\n                lastName\n            }\n\n            user(id:2){\n                id\n                username\n                firstName\n            }\n        }\n\n\n    6- Examples of Mutations:\n\n    .. code:: javascript\n        mutation{\n            userCreate(newUser:{password:\"test*123\", email: \"test@test.com\", username:\"test\"}){\n                user{\n                    id\n                    username\n                    firstName\n                    lastName\n                }\n                ok\n                errors{\n                    field\n                    messages\n                }\n            }\n\n            userDelete(id:1){\n                ok\n                errors{\n                    field\n                    messages\n                }\n            }\n\n            userUpdate(newUser:{id:1, username:\"John\"}){\n                user{\n                    id\n                    username\n                }\n                ok\n                errors{\n                    field\n                    messages\n                }\n            }\n        }\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/eamigo86/graphene-django-extras",
    "keywords": "api graphql protocol rest graphene django",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "graphene-django-extras",
    "platform": "any",
    "project_url": "https://pypi.org/project/graphene-django-extras/",
    "release_url": "https://pypi.org/project/graphene-django-extras/0.0.1.dev20170920003/",
    "requires_dist": [
      "djangorestframework (>=3.6.3)",
      "django-filter",
      "Django (>=1.8.0)",
      "graphene-django (>=2.0.dev)"
    ],
    "requires_python": "",
    "summary": "Graphene Django extras",
    "version": "0.0.1.dev20170920003"
  },
  "releases": {
    "0.0.1.dev20170920001": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5df1c2fbce13705758629b7304313be9",
          "sha256": "57ba46ca7cf25f3988f39302e364a0b6a95b2e3ddec69236a01fb60efcc7caf9"
        },
        "downloads": 0,
        "filename": "graphene_django_extras-0.0.1.dev20170920001-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5df1c2fbce13705758629b7304313be9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 21361,
        "upload_time": "2017-09-20T16:46:34",
        "url": "https://files.pythonhosted.org/packages/05/d5/ac9916e4c210197926306a0a63fc19b5ce30edc97ea5931e734a61f376ba/graphene_django_extras-0.0.1.dev20170920001-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "68f8598b60ff1c1e71cb5dd13be603ff",
          "sha256": "ca7fd6df76adad856deab83ecceae583c166582c81f148f27286465035beff2e"
        },
        "downloads": 0,
        "filename": "graphene-django-extras-0.0.1.dev20170920001.tar.gz",
        "has_sig": false,
        "md5_digest": "68f8598b60ff1c1e71cb5dd13be603ff",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14810,
        "upload_time": "2017-09-20T16:46:38",
        "url": "https://files.pythonhosted.org/packages/ec/46/f0d22326c463ee8990f4ba82c7d8724ef218ef5815bc58a7674b4bf65f2c/graphene-django-extras-0.0.1.dev20170920001.tar.gz"
      }
    ],
    "0.0.1.dev20170920002": [
      {
        "comment_text": "",
        "digests": {
          "md5": "84ea4cfdba14228e5971e6fb6fd6da4b",
          "sha256": "5a31ea60f506ec5cd2a0bc567d6e2e89e97bc4d19ec85b98e095b54a10b727c4"
        },
        "downloads": 0,
        "filename": "graphene_django_extras-0.0.1.dev20170920002-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84ea4cfdba14228e5971e6fb6fd6da4b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 21949,
        "upload_time": "2017-09-20T19:24:16",
        "url": "https://files.pythonhosted.org/packages/80/29/106319c47a62c238b4faf71eee1e6e6294cedd8ba131c56d66cc29b11be8/graphene_django_extras-0.0.1.dev20170920002-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "487750b21cc10bfdb7b1068393950e7b",
          "sha256": "3bc9794a20b3b5eef56d217a18eeea0432601cf23e7631add5ef3dadcdcd690a"
        },
        "downloads": 0,
        "filename": "graphene-django-extras-0.0.1.dev20170920002.tar.gz",
        "has_sig": false,
        "md5_digest": "487750b21cc10bfdb7b1068393950e7b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15333,
        "upload_time": "2017-09-20T19:24:29",
        "url": "https://files.pythonhosted.org/packages/d5/39/f6f791e9591ade7a32f2a9ccb402810ac42492b98b4f3128b9434f52622b/graphene-django-extras-0.0.1.dev20170920002.tar.gz"
      }
    ],
    "0.0.1.dev20170920003": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e3604a93d7d9e6a595166ddd2248d093",
          "sha256": "264788c2bbe620faf564a9b08eb5bbdc0723bfb2acbb53cefefc04fcf1c7fc71"
        },
        "downloads": 0,
        "filename": "graphene_django_extras-0.0.1.dev20170920003-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3604a93d7d9e6a595166ddd2248d093",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 22007,
        "upload_time": "2017-09-20T19:27:15",
        "url": "https://files.pythonhosted.org/packages/c2/f0/e04d53ed5cbe8ec2de712f23ea6b673f7620075e1bd27539e133665a4ba7/graphene_django_extras-0.0.1.dev20170920003-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0d08a9d2bcf5189671c92b82af96f0a4",
          "sha256": "659c321dc8121632a76ef611b07285ec38eb1c4ae8672250e21b3ba72261d8ce"
        },
        "downloads": 0,
        "filename": "graphene-django-extras-0.0.1.dev20170920003.tar.gz",
        "has_sig": false,
        "md5_digest": "0d08a9d2bcf5189671c92b82af96f0a4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15343,
        "upload_time": "2017-09-20T19:27:30",
        "url": "https://files.pythonhosted.org/packages/9f/8f/c541f2c1e27641f1de8fd32f9b79ee1456a75d350ce9cc80745f2337387b/graphene-django-extras-0.0.1.dev20170920003.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e3604a93d7d9e6a595166ddd2248d093",
        "sha256": "264788c2bbe620faf564a9b08eb5bbdc0723bfb2acbb53cefefc04fcf1c7fc71"
      },
      "downloads": 0,
      "filename": "graphene_django_extras-0.0.1.dev20170920003-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e3604a93d7d9e6a595166ddd2248d093",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 22007,
      "upload_time": "2017-09-20T19:27:15",
      "url": "https://files.pythonhosted.org/packages/c2/f0/e04d53ed5cbe8ec2de712f23ea6b673f7620075e1bd27539e133665a4ba7/graphene_django_extras-0.0.1.dev20170920003-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "0d08a9d2bcf5189671c92b82af96f0a4",
        "sha256": "659c321dc8121632a76ef611b07285ec38eb1c4ae8672250e21b3ba72261d8ce"
      },
      "downloads": 0,
      "filename": "graphene-django-extras-0.0.1.dev20170920003.tar.gz",
      "has_sig": false,
      "md5_digest": "0d08a9d2bcf5189671c92b82af96f0a4",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15343,
      "upload_time": "2017-09-20T19:27:30",
      "url": "https://files.pythonhosted.org/packages/9f/8f/c541f2c1e27641f1de8fd32f9b79ee1456a75d350ce9cc80745f2337387b/graphene-django-extras-0.0.1.dev20170920003.tar.gz"
    }
  ]
}