{
  "info": {
    "author": "Davide Gessa, Isaac Zafuta",
    "author_email": "gessadavide@gmail.com, isaac@zafuta.com",
    "bugtrack_url": "",
    "classifiers": [],
    "description": "Copyright (c) 2015, Davide Gessa\r\nCopyright (c) 2012, Isaac Zafuta\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met: \r\n\r\n1. Redistributions of source code must retain the above copyright notice, this\r\n   list of conditions and the following disclaimer. \r\n2. Redistributions in binary form must reproduce the above copyright notice,\r\n   this list of conditions and the following disclaimer in the documentation\r\n   and/or other materials provided with the distribution. \r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nThe views and conclusions contained in the software and documentation are those\r\nof the authors and should not be interpreted as representing official policies, \r\neither expressed or implied, of the FreeBSD Project.\r\n\r\nDescription: # kad.py\r\n        \r\n        Python3 implementation of the Kademlia DHT data store.\r\n        \r\n        Useful for distributing a key-value store in a decentralized manner.\r\n        \r\n        To create a new DHT swarm, just call DHT() with the host and port that you will listen on. To join an existing DHT swarm, also provide bootstrap host and port numbers of any existing node.  The nodes will discover the rest of the swarm as appropriate during usage.\r\n        \r\n        \r\n        ## Example: A two-node DHT\r\n        \r\n        ```python\r\n        from kad import DHT\r\n        \r\n        host1, port1 = 'localhost', 3000\r\n        dht1 = DHT(host1, port1)\r\n        host2, port2 = 'localhost', 3001\r\n        dht2 = DHT(host2, port2, seeds=[(host1, port1)])\r\n        dht1[\"my_key\"] = [u\"My\", u\"json-serializable\", u\"Object\"]\r\n        \r\n        print (dht2[\"my_key\"])\t# blocking get\r\n        dht2.get (\"my_key\", lambda data: print (data)) # threaded get\r\n        ```\r\n        \r\n        \r\n        ## Example: Persistent storage\r\n        \r\n        We can use a custom storage for local data. Storage parameter must an object with __getitem__ and __setitem__.\r\n        In this example we use shelve to create a persistent storage.\r\n        \r\n        ```python\r\n        from kad import DHT\r\n        import shelve\r\n        \r\n        host, port = 'localhost', 3000\r\n        dht = DHT(host, port, storage=shelve.open ('sto.dat'))\r\n        ```\r\n        \r\n        \r\n        ## Example: Custom hash function\r\n        \r\n        By default, kad.py doesn't hash keys. We can provide a custom hash_function.\r\n        \r\n        ```python\r\n        from kad import DHT\r\n        \r\n        host, port = 'localhost', 3000\r\n        dht = DHT(host, port, hash_function=lambda d: d[0:4])\r\n        ```\r\n        \r\n        \r\n        \r\n        ## Example: Custom request handler\r\n        \r\n        You can extend the default DHTRequestHandler to intercept any kind of messages.\r\n        \r\n        ```python\r\n        from kad import *\r\n        \r\n        class CustomRequestHandler (kad.DHTRequestHandler):\r\n            def handle_store(self, message):\r\n                print (message['value'])\r\n                return super (CustomRequestHandler, self).handle_store (message)\r\n        \r\n            \r\n        d = DHT ('localhost', 3030, requesthandler=CustomRequestHandler)\r\n            \r\n        d['ciao'] = {'hola': 12}\r\n        ```\r\n        \r\n        \r\n        ## Example: Iterate over DHT keys\r\n        \r\n        You can use the DHT object as iterator for stored keys.\r\n        \r\n        ```python\r\n        from kad import DHT\r\n        \r\n        d = DHT ('localhost', 3100)\r\n        \r\n        d['ciao'] = 'mondo'\r\n        d['hello'] = 'world'\r\n        \r\n        for key in d:\r\n            print (key, d[key])\r\n        ```\r\nPlatform: UNKNOWN",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/dakk/kad.py",
    "keywords": "",
    "license": "Copyright (c) 2015, Davide Gessa",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kad.py",
    "platform": "",
    "project_url": "https://pypi.org/project/kad.py/",
    "release_url": "https://pypi.org/project/kad.py/0.5.6/",
    "requires_python": "",
    "summary": "Python3 DHT Implementation",
    "version": "0.5.6"
  },
  "releases": {
    "0.5.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "827ba9b283a4fe94ee2fb0253c549b15",
          "sha256": "cc43df7536b68ef3299f508df9e703e93e727d3210db72eec04ced05a39df40e"
        },
        "downloads": 835,
        "filename": "kad.py-0.5.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "827ba9b283a4fe94ee2fb0253c549b15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 26471,
        "upload_time": "2015-11-22T20:58:01",
        "url": "https://files.pythonhosted.org/packages/bf/df/8f10e5688bbb7301e1689cb57169510673ca76805b0b2244e927ed9790e4/kad.py-0.5.5-py3-none-any.whl"
      }
    ],
    "0.5.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4c5988d3e1d89e6f818a7151e5740aba",
          "sha256": "a26231f8e9f722b792b08f0a033fef476be0d0c4a0ed4b76c7713c685b0136d0"
        },
        "downloads": 456,
        "filename": "kad.py-0.5.6-py3.4.egg",
        "has_sig": false,
        "md5_digest": "4c5988d3e1d89e6f818a7151e5740aba",
        "packagetype": "bdist_egg",
        "python_version": "3.4",
        "size": 16851,
        "upload_time": "2015-11-27T21:45:12",
        "url": "https://files.pythonhosted.org/packages/6b/be/05b2c3bf21b2fea3a72ea6285efc61a5d2e3c4f2577e4857b0cc51037276/kad.py-0.5.6-py3.4.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a378a9feb12d4d51689e24649ab8d10b",
          "sha256": "a49d60eb98621274feed61aae05cd33b97a51230ade03c1e1836aa473f1f7bed"
        },
        "downloads": 510,
        "filename": "kad.py-0.5.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a378a9feb12d4d51689e24649ab8d10b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 26471,
        "upload_time": "2015-11-27T21:45:07",
        "url": "https://files.pythonhosted.org/packages/e3/09/fada80a946dfb41c470877a0bb5c15e4e43061dfc77d0b622212c13647f6/kad.py-0.5.6-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "de223f5d1a03e45bde7a8b719681b71f",
          "sha256": "c7f2d9facf87ab6f4b6b11bfc9200576ebb239dc0fbc0b79db4fc8a51c424861"
        },
        "downloads": 525,
        "filename": "kad.py-0.5.6.tar.gz",
        "has_sig": false,
        "md5_digest": "de223f5d1a03e45bde7a8b719681b71f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6161,
        "upload_time": "2015-11-27T21:45:17",
        "url": "https://files.pythonhosted.org/packages/dc/98/df1ac077c9ab80b7938eb0b98aacc2534506c5b5632f5c7854df8ff79b85/kad.py-0.5.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4c5988d3e1d89e6f818a7151e5740aba",
        "sha256": "a26231f8e9f722b792b08f0a033fef476be0d0c4a0ed4b76c7713c685b0136d0"
      },
      "downloads": 456,
      "filename": "kad.py-0.5.6-py3.4.egg",
      "has_sig": false,
      "md5_digest": "4c5988d3e1d89e6f818a7151e5740aba",
      "packagetype": "bdist_egg",
      "python_version": "3.4",
      "size": 16851,
      "upload_time": "2015-11-27T21:45:12",
      "url": "https://files.pythonhosted.org/packages/6b/be/05b2c3bf21b2fea3a72ea6285efc61a5d2e3c4f2577e4857b0cc51037276/kad.py-0.5.6-py3.4.egg"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "a378a9feb12d4d51689e24649ab8d10b",
        "sha256": "a49d60eb98621274feed61aae05cd33b97a51230ade03c1e1836aa473f1f7bed"
      },
      "downloads": 510,
      "filename": "kad.py-0.5.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a378a9feb12d4d51689e24649ab8d10b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 26471,
      "upload_time": "2015-11-27T21:45:07",
      "url": "https://files.pythonhosted.org/packages/e3/09/fada80a946dfb41c470877a0bb5c15e4e43061dfc77d0b622212c13647f6/kad.py-0.5.6-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "de223f5d1a03e45bde7a8b719681b71f",
        "sha256": "c7f2d9facf87ab6f4b6b11bfc9200576ebb239dc0fbc0b79db4fc8a51c424861"
      },
      "downloads": 525,
      "filename": "kad.py-0.5.6.tar.gz",
      "has_sig": false,
      "md5_digest": "de223f5d1a03e45bde7a8b719681b71f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6161,
      "upload_time": "2015-11-27T21:45:17",
      "url": "https://files.pythonhosted.org/packages/dc/98/df1ac077c9ab80b7938eb0b98aacc2534506c5b5632f5c7854df8ff79b85/kad.py-0.5.6.tar.gz"
    }
  ]
}