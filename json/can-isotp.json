{
  "info": {
    "author": "Pier-Yves Lessard",
    "author_email": "py.lessard@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator"
    ],
    "description": "# python-can-isotp\n\n## What it is ##\nA Python wrapper helping the use of [can-isotp Loadable Kernel Module](https://github.com/hartkopp/can-isotp) extending SocketCAN under Linux.\nIt provides a friendly and pythonic interface to interact with SocketCAN using the ISO-TP (ISO-15765-2) protocol.\n\n## What it's not ##\n - An implementation of the ISO-TP protocol. It simplifies the access to the already available features within Python and your operating system\n - A portable module. It is designed to work under Linux only.\n - A way to magically do ISO-TP regardless of your environment. You need to load a module into your Linux kernel before using this. Otherwise, your OS will deny the creation of the socket.\n - A revolutionary module. It just makes the syntax easier :)\n\n## Why is it differents from other projects ##\nOther Python libraries enabling the use of ISO-TP protocol makes an implementation of the standard in Python, in the user space.\nAs mentioned by the authors of SocketCAN in their documentation, this approach has many downsides, mainly when comes to respecting the protocol timings.\n\nThe best way do ISO-TP communication is within the kernel space, just like [hartkopp/can-isotp](https://github.com/hartkopp/can-isotp) module does by using a socket interface following the mentality of SocketCAN. The well known duality between complexity and flexibility makes the usage of sockets onerous and non-intuitive to the uninitiated. This is where this project becomes handy, it wraps the socket object so that a programmer can configure and use it quickly, in an intuitive way.\n\nAlso, it will tells you if you do something wrong, like setting a socket options after binding the socket to the addresse. The native implementation will silently ignore the options, which can causes some headaches!\n\n## Troubleshooting ##\n - **My socket module does not include the `CAN_ISOTP` constant**\n\nThat means that your Python version does not include support for ISOTP protocol. It should be included starting from Python 3.7, under Linux build only.\n\n - **When I create the socket, I get `OSError [errno 19] : Protocol not supported`.**\n\nThe Loadable Kernel Module is not loaded in your Linux kernel. Follow the steps given it the module repository. You needs to compile the module, install the `.ko` file and then run `modprobe can-isotp` as Super User. Then your OS will accept to create a ISO-TP sockets.\n\n## Examples ##\n\n### Without this project ###\n```python\nSOL_CAN_ISOTP = 106 # These constants exist in the module header, not in Python.\nCAN_ISOTP_RECV_FC = 2\n# Many more exists.\n\nimport socket\nimport struct\n\ns = socket.socket(socket.AF_CAN, socket.SOCK_DGRAM, socket.CAN_ISOTP)\ns2 = socket.socket(socket.AF_CAN, socket.SOCK_DGRAM, socket.CAN_ISOTP)\n# Configuring the sockets with ugly struct.pack() that requires knowledge of the LKM structure\ns.setsockopt(SOL_CAN_ISOTP, CAN_ISOTP_RECV_FC, struct.pack(\"=BBB\", 0x10, 3,0)) #bs, stmin, wftmax\n#s.setsockopt(SOL_CAN_ISOTP, CAN_ISOTP_OPTS, struct.pack(...))\n#s.setsockopt(SOL_CAN_ISOTP, CAN_ISOTP_LL_OPTS, struct.pack(...))\n\ns.bind((\"vcan0\", 0x123, 0x456)) #rxid, txid with confusing order.\ns2.bind((\"vcan0\", 0x456, 0x123)) #rxid, txid\ns2.send(b\"Hello, this is a long payload sent in small chunks of 8 bytes.\")\nprint(s.recv(4095))\n```\n\n### With this project ### \n```python\nimport isotp\n\ns = isotp.socket()\ns2 = isotp.socket()\n# Configuring the sockets.\ns.set_fc_opts(stmin=5, bs=10)\n#s.set_general_opts(...)\n#s.set_ll_opts(...)\n\ns.bind(\"vcan0\" rxid=0x123 txid=0x456)  # We love named parameters!\ns2.bind(\"vcan0\", rxid=0x456, txid=0x123)\ns2.send(b\"Hello, this is a long payload sent in small chunks of 8 bytes.\")\nprint(s.recv()) \n```\n\n## Don't like playing with a simili-socket ? ##\n\nYou don't want to reinvent the wheel by using a fake socket object, but still would like to simplify your work?\nSay no more, you can use some helpers availables in the `isotp` module.\n\n``` python\nimport isotp\nimport socket\ns = socket.socket(socket.AF_CAN, socket.SOCK_DGRAM, socket.CAN_ISOTP) # native socket.\nisotp.opts.flowcontrol.write(s, stmin=5)\nisotp.opts.general.write(optflags = isotp.opts.flags.CAN_ISOTP_TX_PADDING |  isotp.opts.flags.CAN_ISOTP_RX_PADDING)\ns.bind((\"vcan0\", 0x123, 0x456))\n```\n\nOr you can access the native socket within the wrapper\n\n``` python\nimport isotp\ns = isotp.socket()\ns.bind(\"vcan0\", rxid=0x123, txid=0x456)\nprint(s._socket.getsockname())\n```\n\n\n",
    "docs_url": null,
    "download_url": "https://github.com/pylessard/python-can-isotp/archive/v0.2.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/pylessard/python-can-isotp",
    "keywords": "isotp,can,iso-15765,15765,iso15765",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "can-isotp",
    "platform": "",
    "project_url": "https://pypi.org/project/can-isotp/",
    "release_url": "https://pypi.org/project/can-isotp/0.2/",
    "requires_dist": [],
    "requires_python": ">=3.7",
    "summary": "Wrapper for Python 3.7+ simplifying the usage of Oliver Hartkopp's Linux kernel module enabling ISO-15765 sockets",
    "version": "0.2"
  },
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c51093ef0f67de30960b752a8b6e6aeb",
          "sha256": "4514eaab2866e9610b2d8ee2dfa4030ce95795edb370eb98656e5cad6b42136c"
        },
        "downloads": -1,
        "filename": "can_isotp-0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c51093ef0f67de30960b752a8b6e6aeb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 8191,
        "upload_time": "2017-11-26T04:39:58",
        "url": "https://files.pythonhosted.org/packages/32/17/412fc60848ba15ca8337d33cd2bb8ef5cdc62a1b42eae5a0d5d17763beef/can_isotp-0.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4d262bb4050eae419c13986729f3d1f1",
          "sha256": "dc49c04b100819bfa2eb973fdd9e2864b4d53032bcf975f85089a3ead05f0eae"
        },
        "downloads": -1,
        "filename": "can-isotp-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4d262bb4050eae419c13986729f3d1f1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5418,
        "upload_time": "2017-11-26T04:39:59",
        "url": "https://files.pythonhosted.org/packages/41/6c/4f01c1c1c44b6fe1609e76d5ee11189bbbb4013f5a48009e3556d319457e/can-isotp-0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c51093ef0f67de30960b752a8b6e6aeb",
        "sha256": "4514eaab2866e9610b2d8ee2dfa4030ce95795edb370eb98656e5cad6b42136c"
      },
      "downloads": -1,
      "filename": "can_isotp-0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c51093ef0f67de30960b752a8b6e6aeb",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 8191,
      "upload_time": "2017-11-26T04:39:58",
      "url": "https://files.pythonhosted.org/packages/32/17/412fc60848ba15ca8337d33cd2bb8ef5cdc62a1b42eae5a0d5d17763beef/can_isotp-0.2-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "4d262bb4050eae419c13986729f3d1f1",
        "sha256": "dc49c04b100819bfa2eb973fdd9e2864b4d53032bcf975f85089a3ead05f0eae"
      },
      "downloads": -1,
      "filename": "can-isotp-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4d262bb4050eae419c13986729f3d1f1",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5418,
      "upload_time": "2017-11-26T04:39:59",
      "url": "https://files.pythonhosted.org/packages/41/6c/4f01c1c1c44b6fe1609e76d5ee11189bbbb4013f5a48009e3556d319457e/can-isotp-0.2.tar.gz"
    }
  ]
}