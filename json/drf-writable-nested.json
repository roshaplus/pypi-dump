{
  "info": {
    "author": "beda.software",
    "author_email": "drfwritablenested@beda.software",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "DRF Writable Nested\n===================\n\n|Build Status| |codecov| |pypi|\n\nThis is a writable nested model serializer for Django REST Framework\nwhich allows you to create/update your models with related nested data.\n\nThe following relations are supported: - OneToOne (direct/reverse) -\nForeignKey (direct/reverse) - ManyToMany (direct/reverse excluding m2m\nrelations with through model) - GenericRelation (this is always only\nreverse)\n\nRequirements\n============\n\n-  Python (2.7, 3.2, 3.3, 3.4, 3.5)\n-  Django (1.8, 1.9, 1.10)\n-  djangorestframework (3.x)\n\nInstallation\n============\n\n::\n\n    pip install drf-writable-nested\n\nUsage\n=====\n\nFor example, for the following model structure:\n\n.. code:: python\n\n    from django.db import models\n\n\n    class Site(models.Model):\n        url = models.CharField(max_length=100)\n\n\n    class User(models.Model):\n        username = models.CharField(max_length=100)\n        \n        \n    class AccessKey(models.Model):\n        key = models.CharField(max_length=100)\n        \n\n    class Profile(models.Model):\n        sites = models.ManyToManyField(Site)\n        user = models.OneToOneField(User)\n        access_key = models.ForeignKey(AccessKey, null=True)\n        \n        \n    class Avatar(models.Model):\n        image = models.CharField(max_length=100)\n        profile = models.ForeignKey(Profile, related_name='avatars')\n\nWe should create the following list of serializers:\n\n.. code:: python\n\n    from rest_framework import serializers\n    from drf_writable_nested import WritableNestedModelSerializer\n\n\n    class AvatarSerializer(serializers.ModelSerializer):\n        image = serializers.CharField()\n\n        class Meta:\n            model = Avatar\n            fields = ('pk', 'image',)\n\n\n    class SiteSerializer(serializers.ModelSerializer):\n        url = serializers.CharField()\n\n        class Meta:\n            model = Site\n            fields = ('pk', 'url',)\n\n\n    class AccessKeySerializer(serializers.ModelSerializer):\n        \n        class Meta:\n            model = AccessKey\n            fields = ('pk', 'key',)\n\n\n    class ProfileSerializer(WritableNestedModelSerializer):\n        # Direct ManyToMany relation\n        sites = SiteSerializer(many=True)\n        \n        # Reverse FK relation\n        avatars = AvatarSerializer(many=True)\n        \n        # Direct FK relation\n        access_key = AccessKeySerializer(allow_null=True)\n        \n        class Meta:\n            model = Profile\n            fields = ('pk', 'sites', 'avatars', 'access_key',)\n\n\n    class UserSerializer(WritableNestedModelSerializer):\n        # Reverse OneToOne relation\n        profile = ProfileSerializer()\n\n        class Meta:\n            model = User\n            fields = ('pk', 'profile', 'username',)\n\nAlso, you can use ``NestedCreateMixin`` or ``NestedUpdateMixin`` from\nthis package if you want to support only create or update logic.\n\nFor example, we can pass the following data with related nested fields\nto our main serializer:\n\n.. code:: python\n\n    data = {\n        'username': 'test',\n        'profile': {\n            'access_key': {\n                'key': 'key',\n            },\n            'sites': [\n                {\n                    'url': 'http://google.com',\n                },\n                {\n                    'url': 'http://yahoo.com',   \n                },\n            ],\n            'avatars': [\n                {\n                    'image': 'image-1.png',\n                },\n                {\n                    'image': 'image-2.png',\n                },  \n            ],\n        },\n    }\n\n    user_serializer = UserSerializer(data=data)\n    user_serializer.is_valid(raise_exception=True)\n    user = user_serializer.save()\n\nThis serializer will automatically create all nested relations and we\nreceive a complete instance with filled data.\n\n.. code:: python\n\n    user_serializer = UserSerializer(instance=user)\n    print(user_serializer.data)\n\n.. code:: python\n\n    {\n        'pk': 1,\n        'username': 'test',\n        'profile': {\n            'pk': 1,\n            'access_key': {\n                'pk': 1,\n                'key': 'key'\n            },\n            'sites': [\n                {\n                    'pk': 1,\n                    'url': 'http://google.com',\n                },\n                {\n                    'pk': 2,\n                    'url': 'http://yahoo.com',\n                },\n            ],\n            'avatars': [\n                {\n                    'pk': 1,\n                    'image': 'image-1.png',\n                },\n                {\n                    'pk': 2,\n                    'image': 'image-2.png',\n                },\n            ],\n        },\n    }\n\nAuthors\n=======\n\n2014-2017, beda.software\n\n.. |Build Status| image:: https://travis-ci.org/beda-software/drf-writable-nested.svg?branch=master\n   :target: https://travis-ci.org/beda-software/drf-writable-nested\n.. |codecov| image:: https://codecov.io/gh/beda-software/drf-writable-nested/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/beda-software/drf-writable-nested\n.. |pypi| image:: https://img.shields.io/pypi/v/drf-writable-nested.svg\n   :target: https://pypi.python.org/pypi/drf-writable-nested",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/beda-software/drf-writable-nested",
    "keywords": "drf restframework rest_framework django_rest_framework serializers drf_writable_nested",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "drf-writable-nested",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/drf-writable-nested/",
    "release_url": "https://pypi.org/project/drf-writable-nested/0.1.4/",
    "requires_python": null,
    "summary": "Writable nested helpers for django-rest-framework's serializers",
    "version": "0.1.4"
  },
  "releases": {
    "0.0.2": [],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "691bf1eb480527116f7a277e2c53bb47",
          "sha256": "b77fa4030db08cfb76c1069f2217a88ed9bee0470106db2a876d06313ce9149c"
        },
        "downloads": 11,
        "filename": "drf-writable-nested-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "691bf1eb480527116f7a277e2c53bb47",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7893,
        "upload_time": "2017-02-18T13:25:24",
        "url": "https://files.pythonhosted.org/packages/ea/01/ba0ad9f6c001175d50e72f29dc138f68358b34810cfb9b13fc9b170930dc/drf-writable-nested-0.0.3.tar.gz"
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6ce96091b7049a9aa31d29ad7bae8718",
          "sha256": "875cfb76343a676332abfde2e1b3c590169052665a2f3583138947ab4aeb8250"
        },
        "downloads": 20,
        "filename": "drf-writable-nested-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6ce96091b7049a9aa31d29ad7bae8718",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6425,
        "upload_time": "2017-02-20T14:15:55",
        "url": "https://files.pythonhosted.org/packages/0e/34/baa43ad4e8eff5647faa06792c3b9c2e4432dc4c3516a29ce9346c101564/drf-writable-nested-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "73a56dd362d8d068cf779d4c52e9755a",
          "sha256": "0391e337f79b7c28e13f2ef7df0a45a75c682432df8ba7b5da15a8513519699b"
        },
        "downloads": 8,
        "filename": "drf-writable-nested-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "73a56dd362d8d068cf779d4c52e9755a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6464,
        "upload_time": "2017-03-21T06:33:20",
        "url": "https://files.pythonhosted.org/packages/a2/01/b8b053686d4294c2700cb3610edc7285f492faac31ee7766f968687607e6/drf-writable-nested-0.1.1.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "461c23ea9044b3f24368eba99fd95c95",
          "sha256": "403d09ecad768381a474ac960ab169334cb9890940b7ab2815e690fe5f108872"
        },
        "downloads": 48,
        "filename": "drf-writable-nested-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "461c23ea9044b3f24368eba99fd95c95",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6507,
        "upload_time": "2017-03-21T09:51:52",
        "url": "https://files.pythonhosted.org/packages/03/68/c90f90838ae8d329ae7e87241c276d96709070ad452a986ceea031205ea6/drf-writable-nested-0.1.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f7dbf426a7c3c7cbeb6837ec63050d3b",
          "sha256": "2ca379b845fd3d8ed4052798654a9cc2a80838a93785221552ddd97ee1a8f675"
        },
        "downloads": 0,
        "filename": "drf-writable-nested-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f7dbf426a7c3c7cbeb6837ec63050d3b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6537,
        "upload_time": "2017-05-07T05:26:05",
        "url": "https://files.pythonhosted.org/packages/f2/de/7c126f689c473a945a4d41c4af72aba6122030fd4bd3c613ac1213d9fe39/drf-writable-nested-0.1.3.tar.gz"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "231554c3fac90d5ca7ada2f59f517268",
          "sha256": "ae31d4dc317c352c1242523a5b5ba751102bc0772181681d5e927851a4b157ad"
        },
        "downloads": 0,
        "filename": "drf-writable-nested-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "231554c3fac90d5ca7ada2f59f517268",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6707,
        "upload_time": "2017-05-22T04:04:44",
        "url": "https://files.pythonhosted.org/packages/60/31/d7f7a3c4f5c8d699cbfe92e9bbc14ba3c2302d6dda0014344aab4f100f73/drf-writable-nested-0.1.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "231554c3fac90d5ca7ada2f59f517268",
        "sha256": "ae31d4dc317c352c1242523a5b5ba751102bc0772181681d5e927851a4b157ad"
      },
      "downloads": 0,
      "filename": "drf-writable-nested-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "231554c3fac90d5ca7ada2f59f517268",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6707,
      "upload_time": "2017-05-22T04:04:44",
      "url": "https://files.pythonhosted.org/packages/60/31/d7f7a3c4f5c8d699cbfe92e9bbc14ba3c2302d6dda0014344aab4f100f73/drf-writable-nested-0.1.4.tar.gz"
    }
  ]
}