{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Scrapy with selenium\n[![PyPI](https://img.shields.io/pypi/v/scrapy-selenium.svg)](https://pypi.python.org/pypi/scrapy-selenium) [![Build Status](https://travis-ci.org/clemfromspace/scrapy-selemnium.svg?branch=master)](https://travis-ci.org/clemfromspace/scrapy-selenium) [![Test Coverage](https://api.codeclimate.com/v1/badges/5c737098dc38a835ff96/test_coverage)](https://codeclimate.com/github/clemfromspace/scrapy-selenium/test_coverage) [![Maintainability](https://api.codeclimate.com/v1/badges/5c737098dc38a835ff96/maintainability)](https://codeclimate.com/github/clemfromspace/scrapy-selenium/maintainability)\n\nScrapy middleware to handle javascript pages using selenium.\n\n## Installation\n```\n$ pip install scrapy-selenium\n```\n\nYou will also need one of the Selenium [compatible browsers](http://www.seleniumhq.org/about/platforms.jsp).\n\n## Configuration\n1. Add the browser to use, the path to the executable, and the arguments to pass to the executable to the scrapy settings:\n    ```python\n    from shutil import which\n\n    SELENIUM_DRIVER_NAME='firefox'\n    SELENIUM_DRIVER_EXECUTABLE_PATH=which('geckodriver')\n    SELENIUM_DRIVER_ARGUMENTS=['-headless']  # '--headless' if using chrome instead of firefox\n    ```\n\n2. Add the `SeleniumMiddleware` to the downloader middlewares:\n    ```python\n    DOWNLOADER_MIDDLEWARES = {\n        'scrapy_selenium.SeleniumMiddleware': 800\n    }\n    ```\n## Usage\nUse the `scrapy_selenium.SeleniumRequest` instead of the scrapy built-in `Request` like below:\n```python\nfrom scrapy_selenium import SeleniumRequest\n\nyield SeleniumRequest(url, self.parse_result)\n```\nThe request will be handled by selenium, and the response will have an additional `meta` key, named `driver` containing the selenium driver with the request processed.\n```python\ndef parse_result(self, response):\n    print(response.meta['driver'].title)\n```\nFor more information about the available driver methods and attributes, refer to the [selenium python documentation](http://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webdriver)\n\nThe `selector` response attribute work as usual (but contains the html processed by the selenium driver).\n```python\ndef parse_result(self, response):\n    print(response.selector.xpath('//title/@text'))\n```\n\n### Additional arguments\nThe `scrapy_selenium.SeleniumRequest` accept 3 additional arguments:\n\n#### `wait_time` / `wait_until`\n\nWhen used, selenium will perform an [Explicit wait](http://selenium-python.readthedocs.io/waits.html#explicit-waits) before returning the response to the spider.\n```python\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support import expected_conditions as EC\n\nyield SeleniumRequest(\n    url,\n    self.parse_result,\n    wait_time=10,\n    wait_until=EC.element_to_be_clickable((By.ID, 'someid'))\n)\n```\n\n#### `screenshot`\nWhen used, selenium will take a screenshot of the page and the binary data of the .png captured will be added to the response `meta`:\n```python\nyield SeleniumRequest(\n    url,\n    self.parse_result,\n    screenshot=True\n)\n\ndef parse_result(self, response):\n    with open('image.png', 'wb') as image_file:\n        image_file.write(response.meta['screenshot])\n```\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/clemfromspace/scrapy-selenium",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scrapy-selenium",
    "platform": "",
    "project_url": "https://pypi.org/project/scrapy-selenium/",
    "release_url": "https://pypi.org/project/scrapy-selenium/0.0.3/",
    "requires_dist": [
      "selenium (>=3.9.0)",
      "scrapy (>=1.0.0)"
    ],
    "requires_python": "",
    "summary": "Scrapy with selenium",
    "version": "0.0.3"
  },
  "releases": {
    "0.0.1.dev1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e6533376d911ba204feabafc7dbf46ab",
          "sha256": "bee21a285941a09ece825b345e15a382065f5142fb4a065ef577c4215610b14f"
        },
        "downloads": -1,
        "filename": "scrapy_selenium-0.0.1.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6533376d911ba204feabafc7dbf46ab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 8533,
        "upload_time": "2018-02-11T11:04:12",
        "url": "https://files.pythonhosted.org/packages/11/2d/84e8c3854326b653b71a0b8f92498fa8f0db9dbf372b7d8c06919ed96337/scrapy_selenium-0.0.1.dev1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "19ea1d1c511a99a411b8047c992bb39f",
          "sha256": "8976382abd1962bab91e00bbcc4f53a4ae2d8a7d82bf08a5b2c6a57e4b1713fd"
        },
        "downloads": -1,
        "filename": "scrapy-selenium-0.0.1.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "19ea1d1c511a99a411b8047c992bb39f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5115,
        "upload_time": "2018-02-11T11:04:13",
        "url": "https://files.pythonhosted.org/packages/7c/32/b0d57c57d947410598b15189b47e41a86990c5ee20c052f7e9ba52438c1e/scrapy-selenium-0.0.1.dev1.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bbcc2dd760dc1c3e94ae13e0fbfe287b",
          "sha256": "0ccc29d14cc3c4fc1d3070ce87cfa5ab7e807e326369de26ef0e405194d2e9c0"
        },
        "downloads": -1,
        "filename": "scrapy_selenium-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbcc2dd760dc1c3e94ae13e0fbfe287b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 8461,
        "upload_time": "2018-02-11T12:07:06",
        "url": "https://files.pythonhosted.org/packages/a7/02/420553a100d2978ff81c67a964ad6e97b4d60eedf487190a6b47640f60f1/scrapy_selenium-0.0.3-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1a07f9af81ae07181f4104cc3e188bd6",
          "sha256": "2bcee4e51fcbe09e0f4187e9217783aa9fb3ab1700d498c17d9ec4b67fcbbb60"
        },
        "downloads": -1,
        "filename": "scrapy-selenium-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1a07f9af81ae07181f4104cc3e188bd6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5100,
        "upload_time": "2018-02-11T12:07:08",
        "url": "https://files.pythonhosted.org/packages/af/05/99ededa143dc4e55cb31dc526d341ec38982eba2de93f19bef290b9b3779/scrapy-selenium-0.0.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "bbcc2dd760dc1c3e94ae13e0fbfe287b",
        "sha256": "0ccc29d14cc3c4fc1d3070ce87cfa5ab7e807e326369de26ef0e405194d2e9c0"
      },
      "downloads": -1,
      "filename": "scrapy_selenium-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bbcc2dd760dc1c3e94ae13e0fbfe287b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 8461,
      "upload_time": "2018-02-11T12:07:06",
      "url": "https://files.pythonhosted.org/packages/a7/02/420553a100d2978ff81c67a964ad6e97b4d60eedf487190a6b47640f60f1/scrapy_selenium-0.0.3-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "1a07f9af81ae07181f4104cc3e188bd6",
        "sha256": "2bcee4e51fcbe09e0f4187e9217783aa9fb3ab1700d498c17d9ec4b67fcbbb60"
      },
      "downloads": -1,
      "filename": "scrapy-selenium-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "1a07f9af81ae07181f4104cc3e188bd6",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5100,
      "upload_time": "2018-02-11T12:07:08",
      "url": "https://files.pythonhosted.org/packages/af/05/99ededa143dc4e55cb31dc526d341ec38982eba2de93f19bef290b9b3779/scrapy-selenium-0.0.3.tar.gz"
    }
  ]
}