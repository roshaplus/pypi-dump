{
  "info": {
    "author": "Mads Hartmann Jensen",
    "author_email": "mads379@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# hatch\n\nhatch is a tool that makes it easy to build products using AWS. It uses\nconventions to automate the creation of things like static website, HTTP API's\netc. quick and easy.\n\n[![Build Status](https://travis-ci.org/mads-hartmann/hatch.svg?branch=master)](https://travis-ci.org/mads-hartmann/hatch)\n\n## Installation\n\n    brew tap mads-hartmann/hatch git@github.com:mads-hartmann/hatch.git\n    brew install hatch\n\n## Services\n\n### HTTP(S) APIs\n\nThis uses API Gateway, AWS Lambda, and Route53 to build HTTP APIs.\n\n    hatch api create # scaffolding\n    hatch api start # local development\n    hatch api deploy # 0 config deployment to AWS\n\n### Static Websites\n\nThis uses S3, CloudFront, and Route53.\n\n    hatch website create # scaffolding\n    hatch website deploy\n    hatch website start\n\n### Cron jobs\n\nTODO\n\n### Event handlers\n\nTODO\n\n## Develop on hatch\n\n    git clone git@github.com:mads-hartmann/hatch.git && cd hatch\n    make setup\n    .venv/bin/hatch api deploy examples/api\n    .venv/bin/hatch website deploy examples/website\n\n## Project Overview\n\nThe general approach is that each kind of service has it's own file in\n`./hatch/services` where we have a model of the service. E.g. for the HTTP\nAPI we have `./hatch/services/api.py` which contains an `Api` class that\nrepresents our model of a HTTP API.\n\nThis modal can then be used for two things. Firstly it is used to figure out\nwhat to deploy to AWS, and secondly it's used to emulate the service for local\ndevelopment. Again, taking the HTTP API as an example, we use the `Api` class\nto create a Tornado server we can run locally that emulate the configuration of\nrunning your code on AWS Labmda/API Gateway.\n\nThe services are in `./hatch/services`. The mapping to AWS are in\n`./hatch/aws` and the local development setup things can be found in\n`./hatch/ux`.",
    "docs_url": null,
    "download_url": "https://github.com/mads-hartmann/hatch/archive/v0.0.1-beta.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/mads-hartmann/hatch",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "hatch-cli",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/hatch-cli/",
    "release_url": "https://pypi.org/project/hatch-cli/0.0.1/",
    "requires_python": null,
    "summary": "Command line interface for Hatch",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "93f2bfee8a92713927f561b61deb1f4c",
          "sha256": "7916ff224fdfbc31ea0ca1d1f790659b7cc6be2b9b19cabf1392a044888b7908"
        },
        "downloads": 0,
        "filename": "hatch-cli-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "93f2bfee8a92713927f561b61deb1f4c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9551,
        "upload_time": "2017-06-10T07:02:34",
        "url": "https://files.pythonhosted.org/packages/d2/04/0a1d5415be610d2300510a12f7055af0bea784c0450a48aff1fc6acabc9f/hatch-cli-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "93f2bfee8a92713927f561b61deb1f4c",
        "sha256": "7916ff224fdfbc31ea0ca1d1f790659b7cc6be2b9b19cabf1392a044888b7908"
      },
      "downloads": 0,
      "filename": "hatch-cli-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "93f2bfee8a92713927f561b61deb1f4c",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9551,
      "upload_time": "2017-06-10T07:02:34",
      "url": "https://files.pythonhosted.org/packages/d2/04/0a1d5415be610d2300510a12f7055af0bea784c0450a48aff1fc6acabc9f/hatch-cli-0.0.1.tar.gz"
    }
  ]
}