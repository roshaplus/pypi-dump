{
  "info": {
    "author": "Zulip Open Source Project",
    "author_email": "zulip-devel@googlegroups.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Topic :: Communications :: Chat"
    ],
    "description": "Dependencies\r\n^^^^^^^^^^^^\r\n\r\nThe `Zulip API <https://zulipchat.com/api>`__ Python bindings require\r\nthe following Python libraries:\r\n\r\n-  requests (version >= 0.12.1)\r\n-  simplejson\r\n-  six\r\n-  typing (version >= 3.5.2.2)\r\n\r\nInstalling\r\n^^^^^^^^^^\r\n\r\nThis package uses distutils, so you can just run:\r\n\r\n::\r\n\r\n    python setup.py install\r\n\r\nUsing the API\r\n^^^^^^^^^^^^^\r\n\r\nFor now, the only fully supported API operation is sending a message.\r\nThe other API queries work, but are under active development, so please\r\nmake sure we know you're using them so that we can notify you as we make\r\nany changes to them.\r\n\r\nThe easiest way to use these API bindings is to base your tools off of\r\nthe example tools under examples/ in this distribution.\r\n\r\nIf you place your API key in the config file ``~/.zuliprc`` the Python\r\nAPI bindings will automatically read it in. The format of the config\r\nfile is as follows:\r\n\r\n::\r\n\r\n    [api]\r\n    key=<api key from the web interface>\r\n    email=<your email address>\r\n    site=<your Zulip server's URI>\r\n    insecure=<true or false, true means do not verify the server certificate>\r\n    cert_bundle=<path to a file containing CA or server certificates to trust>\r\n\r\nIf omitted, these settings have the following defaults:\r\n\r\n::\r\n\r\n    insecure=false\r\n    cert_bundle=<the default CA bundle trusted by Python>\r\n\r\nAlternatively, you may explicitly use \"--user\", \"--api-key\", and\r\n``--site`` in our examples, which is especially useful when testing. If\r\nyou are running several bots which share a home directory, we recommend\r\nusing ``--config`` to specify the path to the ``zuliprc`` file for a\r\nspecific bot. Finally, you can control the defaults for all of these\r\nvariables using the environment variables ``ZULIP_CONFIG``,\r\n``ZULIP_API_KEY``, ``ZULIP_EMAIL``, ``ZULIP_SITE``, ``ZULIP_CERT``,\r\n``ZULIP_CERT_KEY``, and ``ZULIP_CERT_BUNDLE``. Command-line options take\r\nprecedence over environment variables take precedence over the config\r\nfiles.\r\n\r\nThe command line equivalents for other configuration options are:\r\n\r\n::\r\n\r\n    --insecure\r\n    --cert-bundle=<file>\r\n\r\nYou can obtain your Zulip API key, create bots, and manage bots all from\r\nyour Zulip settings page; with current Zulip there's also a button to\r\ndownload a ``zuliprc`` file for your account/server pair.\r\n\r\nA typical simple bot sending API messages will look as follows:\r\n\r\nAt the top of the file:\r\n\r\n::\r\n\r\n    # Make sure the Zulip API distribution's root directory is in sys.path, then:\r\n    import zulip\r\n    zulip_client = zulip.Client(email=\"your-bot@example.com\", client=\"MyTestClient/0.1\")\r\n\r\nWhen you want to send a message:\r\n\r\n::\r\n\r\n    message = {\r\n      \"type\": \"stream\",\r\n      \"to\": [\"support\"],\r\n      \"subject\": \"your subject\",\r\n      \"content\": \"your content\",\r\n    }\r\n    zulip_client.send_message(message)\r\n\r\nIf you are parsing arguments, you may find it useful to use Zulip's\r\noption group; see any of our API examples for details on how to do this.\r\n\r\nAdditional examples:\r\n\r\n::\r\n\r\n    client.send_message({'type': 'stream', 'content': 'Zulip rules!',\r\n                         'subject': 'feedback', 'to': ['support']})\r\n    client.send_message({'type': 'private', 'content': 'Zulip rules!',\r\n                         'to': ['user1@example.com', 'user2@example.com']})\r\n\r\nsend\\_message() returns a dict guaranteed to contain the following keys:\r\nmsg, result. For successful calls, result will be \"success\" and msg will\r\nbe the empty string. On error, result will be \"error\" and msg will\r\ndescribe what went wrong.\r\n\r\nExamples\r\n^^^^^^^^\r\n\r\nThe API bindings package comes with several nice example scripts that\r\nshow how to use the APIs; they are installed as part of the API bindings\r\nbundle.\r\n\r\nLogging\r\n^^^^^^^\r\n\r\nThe Zulip API comes with a ZulipStream class which can be used with the\r\nlogging module:\r\n\r\n::\r\n\r\n    import zulip\r\n    import logging\r\n    stream = zulip.ZulipStream(type=\"stream\", to=[\"support\"], subject=\"your subject\")\r\n    logger = logging.getLogger(\"your_logger\")\r\n    logger.addHandler(logging.StreamHandler(stream))\r\n    logger.setLevel(logging.DEBUG)\r\n    logger.info(\"This is an INFO test.\")\r\n    logger.debug(\"This is a DEBUG test.\")\r\n    logger.warn(\"This is a WARN test.\")\r\n    logger.error(\"This is a ERROR test.\")\r\n\r\nSending messages\r\n^^^^^^^^^^^^^^^^\r\n\r\nYou can use the included ``zulip-send`` script to send messages via the\r\nAPI directly from existing scripts.\r\n\r\n::\r\n\r\n    zulip-send hamlet@example.com cordelia@example.com -m \\\r\n        \"Conscience doth make cowards of us all.\"\r\n\r\nAlternatively, if you don't want to use your ~/.zuliprc file:\r\n\r\n::\r\n\r\n    zulip-send --user shakespeare-bot@example.com \\\r\n        --api-key a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5 \\\r\n        --site https://zulip.example.com \\\r\n        hamlet@example.com cordelia@example.com -m \\\r\n        \"Conscience doth make cowards of us all.\"\r\n\r\nWorking with an untrusted server certificate\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nIf your server has either a self-signed certificate, or a certificate\r\nsigned by a CA that you don't wish to globally trust then by default the\r\nAPI will fail with an SSL verification error.\r\n\r\nYou can add ``insecure=true`` to your .zuliprc file.\r\n\r\n::\r\n\r\n    [api]\r\n    site=https://zulip.example.com\r\n    insecure=true\r\n\r\nThis disables verification of the server certificate, so connections are\r\nencrypted but unauthenticated. This is not secure, but may be good\r\nenough for a development environment.\r\n\r\nYou can explicitly trust the server certificate using\r\n``cert_bundle=<filename>`` in your .zuliprc file.\r\n\r\n::\r\n\r\n    [api]\r\n    site=https://zulip.example.com\r\n    cert_bundle=/home/bots/certs/zulip.example.com.crt\r\n\r\nYou can also explicitly trust a different set of Certificate Authorities\r\nfrom the default bundle that is trusted by Python. For example to trust\r\na company internal CA.\r\n\r\n::\r\n\r\n    [api]\r\n    site=https://zulip.example.com\r\n    cert_bundle=/home/bots/certs/example.com.ca-bundle\r\n\r\nSave the server certificate (or the CA certificate) in its own file,\r\nconverting to PEM format first if necessary. Verify that the certificate\r\nyou have saved is the same as the one on the server.\r\n\r\nThe ``cert_bundle`` option trusts the server / CA certificate only for\r\ninteraction with the zulip site, and is relatively secure.\r\n\r\nNote that a certificate bundle is merely one or more certificates\r\ncombined into a single file.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://www.zulip.org/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zulip",
    "platform": "",
    "project_url": "https://pypi.org/project/zulip/",
    "release_url": "https://pypi.org/project/zulip/0.3.1/",
    "requires_python": "",
    "summary": "Bindings for the Zulip message API",
    "version": "0.3.1"
  },
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9a2a9547f504bc8493f29278ffad4444",
          "sha256": "08c89a124f848557905a1a0da7427b32274ae37f78aac9333bf33bb4f69af3bb"
        },
        "downloads": 1276,
        "filename": "zulip-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9a2a9547f504bc8493f29278ffad4444",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28340,
        "upload_time": "2014-10-08T20:48:33",
        "url": "https://files.pythonhosted.org/packages/f4/5d/4b4689e9a1e77cca0e5e64661bedb6410fc2c82196c8266c79d541bb45db/zulip-0.2.2.tar.gz"
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "28dc8225dc47416acf0670e283f007b3",
          "sha256": "8eda20f327eaf4cdf8745354f7bff72e58a2e86e679f93c3a0d2a0df7ad51798"
        },
        "downloads": 2522,
        "filename": "zulip-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "28dc8225dc47416acf0670e283f007b3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 64116,
        "upload_time": "2014-10-08T21:08:16",
        "url": "https://files.pythonhosted.org/packages/a2/a7/08c9c6a5d0751bf0ff3c20f194ced4d0bd246c1903fb5a8d9a9cf6dee878/zulip-0.2.4.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b40584136ef04dac83aa6c75264c0d5e",
          "sha256": "8f4bf9f33db6d90d9b13a7fa00af840369eb4f6cab1acfd28dbf28cd178364a8"
        },
        "downloads": 0,
        "filename": "zulip-0.3.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "b40584136ef04dac83aa6c75264c0d5e",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 142657,
        "upload_time": "2017-05-31T04:45:01",
        "url": "https://files.pythonhosted.org/packages/1c/b3/1ccb6c8eb9b6e2214a3989da724da81c352515c81a329832416d7f5c7c0e/zulip-0.3.1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "874815286e29775e7bc18489c95427ba",
          "sha256": "523369f8a249977d9a056296be7fb75b2606fdd38a930f2dddf24cffabd27ecb"
        },
        "downloads": 0,
        "filename": "zulip-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "874815286e29775e7bc18489c95427ba",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 97280,
        "upload_time": "2017-05-31T04:45:02",
        "url": "https://files.pythonhosted.org/packages/65/2c/d817c5c1857d740ed24ab21e93d275463e4f9aedb9ad2bf51fd8f4158547/zulip-0.3.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b40584136ef04dac83aa6c75264c0d5e",
        "sha256": "8f4bf9f33db6d90d9b13a7fa00af840369eb4f6cab1acfd28dbf28cd178364a8"
      },
      "downloads": 0,
      "filename": "zulip-0.3.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "b40584136ef04dac83aa6c75264c0d5e",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 142657,
      "upload_time": "2017-05-31T04:45:01",
      "url": "https://files.pythonhosted.org/packages/1c/b3/1ccb6c8eb9b6e2214a3989da724da81c352515c81a329832416d7f5c7c0e/zulip-0.3.1-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "874815286e29775e7bc18489c95427ba",
        "sha256": "523369f8a249977d9a056296be7fb75b2606fdd38a930f2dddf24cffabd27ecb"
      },
      "downloads": 0,
      "filename": "zulip-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "874815286e29775e7bc18489c95427ba",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 97280,
      "upload_time": "2017-05-31T04:45:02",
      "url": "https://files.pythonhosted.org/packages/65/2c/d817c5c1857d740ed24ab21e93d275463e4f9aedb9ad2bf51fd8f4158547/zulip-0.3.1.tar.gz"
    }
  ]
}