{
  "info": {
    "author": "Anne-Laure Ehresmann",
    "author_email": "cathaspa@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "========\nHelixPC\n========\n\nA series of scripts for gene database automation. Developed for the\nPhilippe Campeau Laboratory.\n\n\n.. image:: http://i.imgur.com/pRZoaiC.png\n  :width: 800px\n  :align: center\n  :alt: alternate text\n\n\nInstallation\n------------\n\nhelixPC is available on `PyPI\n<https://pypi.python.org/pypi/helixpc>`_, and is easily installable\nthrough `pip <https://pypi.python.org/pypi/pip>`_. \n\nFor stability, it is recommended that you install this package in a\n`virtual environment <https://pypi.python.org/pypi/virtualenv>`_, but\nyou may skip this step if you do not know how to set these up.\n\n::\n\n   $ pip install helixpc\n\n\nThat's it! You may now call the script with:\n\n::\n\n   $ helixpc\n    \nUsage\n-----\n\nGenerating a file for the graphing utility\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n::\n \n$ helixpc group <group_input> [--nonan] [--round=[int]]\n\nIf you do not yet have a valid input file for graph generation, the\ncommand ``group`` can help you generate one automatically. Simply stick\nall your batches in a single csv file, call the utility and a file\nnamed ``output.csv`` will be generated. You can then feed to the\ngraphing utility.\n\nPlease note that: \n\n- If certain genes are included multiple times, their\n  mean will be calculated, and only a single entry will appear in \n  the output.\n \n- You may pass ``[--nonan]`` or ``[-n]`` to omit any gene that\n  are missing entries in a batch.\n\n- You may round by passing an integer to ``[--round]`` or\n  ``[-r]``. The integer passed is equivalent to the number of decimal\n  places. For example, passing ``-r=2`` will round all values to the\n  nearest hundredth.\n\ninput file format: \n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n- Check the example ``group_input.csv``\n- The first row should specify the column titles.  \n- You *must* call the columns containing gene names ``gene_symbol``, \n  they are used as columns of reference by the scripts.\n\n\nUsing the graphing utility\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n::\n\n$ helixpc graph <graph_input> [--heat] [--scatter] <control> <sample> [<sample> ...]\n\nOnce you have a csv file that you want to use for generating graph,\nyou may feed it to the graphing utility.  You must give the csv file a\nseries of arguments for it to function properly:\n\n``--scatter``\n\nSpecifies that you want scatter graph(s).  Scatter graphs are\ngenerated with a control (always the same) in the x axis, and a sample\nin the y axis. Giving more than one sample will return to you multiple\ngraphs, one for each sample. You can hover over each point to see the\nname of the gene it is representing.\n\n``--heat``\n\nSpecifies that you want a heat graph.  Not implemented yet.\n\n``<control>``\n\nSpecifies the control. You may give an index or the name of a\ncolumn. You may also give a series of indexes/column-names separated\nby a comma, and the values used will be the mean of each row for the\nseries of columns given.\n\n``<sample>``\n\nSpecifies the first sample. You may give an index or the name of a\ncolumn. You may also give a series of indexes/column-names separated\nby a comma, and the values used will be the mean of each row for the\nseries of columns given.\n\n``[<sample> ...]``\n\nindicates that you can give more than one sample, simply separate each\nsample with a space.\n\ninput file format:\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n- Check the example ``graph_input.csv`` The first row should specify\n  the column titles.\n- The first col should contain ``gene_symbol`` \n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Cathaspa/HelixPC",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "helixpc",
    "platform": "",
    "project_url": "https://pypi.org/project/helixpc/",
    "release_url": "https://pypi.org/project/helixpc/1.0.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Automisation of graph generation for gene FC databases.",
    "version": "1.0.2"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c440ba2caa29ee57db34219088b477ba",
          "sha256": "eef2cfd6e3d713175a53ed0d18d0bcc3c3880ee3c062fdfd38546a33dddc854a"
        },
        "downloads": 0,
        "filename": "helixpc-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c440ba2caa29ee57db34219088b477ba",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4962,
        "upload_time": "2017-07-18T19:42:11",
        "url": "https://files.pythonhosted.org/packages/d7/55/256affbf9824a8f897f6eeabe7bdaea20481f518bab20342b9eebb02f981/helixpc-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dc532a34f5d562e4c8c612247c7a5fea",
          "sha256": "0df860692a3d53b77546c6d64a6a9cfe1af614041a2bccb4a4b03b860de79e8d"
        },
        "downloads": 0,
        "filename": "helixpc-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dc532a34f5d562e4c8c612247c7a5fea",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5071,
        "upload_time": "2017-07-18T20:35:59",
        "url": "https://files.pythonhosted.org/packages/23/1c/97c5f5ed1856e5976213192153f222ebc7af455e6065461d4e04b44c4a75/helixpc-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d63f7afdb7f664ee5f7681d147d1c53f",
          "sha256": "191f4e126660e197228b7b0ddf900c6617960dc65d7d77fdc38c9210ee1d0041"
        },
        "downloads": 0,
        "filename": "helixpc-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d63f7afdb7f664ee5f7681d147d1c53f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5234,
        "upload_time": "2017-07-19T16:07:13",
        "url": "https://files.pythonhosted.org/packages/fb/08/5c88269cf6b846e5bdbbcaa981ef87c958a37dd31d41e14614b7aef3f692/helixpc-1.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d63f7afdb7f664ee5f7681d147d1c53f",
        "sha256": "191f4e126660e197228b7b0ddf900c6617960dc65d7d77fdc38c9210ee1d0041"
      },
      "downloads": 0,
      "filename": "helixpc-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d63f7afdb7f664ee5f7681d147d1c53f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5234,
      "upload_time": "2017-07-19T16:07:13",
      "url": "https://files.pythonhosted.org/packages/fb/08/5c88269cf6b846e5bdbbcaa981ef87c958a37dd31d41e14614b7aef3f692/helixpc-1.0.2.tar.gz"
    }
  ]
}