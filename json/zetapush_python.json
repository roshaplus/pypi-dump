{
  "info": {
    "author": "Damien Le Dantec",
    "author_email": "damien.le-dantec@zetapush.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\ufeff# ZetaPush SDK #\n\nThis module is a SDK to connect to the ZetaPush platform with Python. (Only with Python3)\n\n## Installation\n\npip3 install zetapush_python\n\n## Usage\n\n### Imports\n\nFirst, we need to import 2 objets to use the ZetaPush SDK :\n\n - Client\n - Service\n\nThe `Client` is used to handle the connection with the ZetaPush backend and the `Service` is used to call services from the client. In particular, the service to call macroscripts.\n\nTo import them we write :\n\n\tfrom zetapush_python import Client\n\tfrom zetapush_python import Service\n\t\n\n### Connection to ZetaPush backend\n\nFirst, we need the create the `Client` to handle the connection :\n\n\tzpClient = Client(businessId=\"Rj7PY_1I\", apiUrl=\"http://demo-1.zpush.io/zbo/pub/business/\")\n\n\t\nThe *businessId* is the identifier of the sandbox in the ZetaPush back-end. For ZetaPush, a sandbox includes the whole application back-end. Then, we have the *apiUrl*. It is optional in production. During the development we send you the apiUrl if necessary.\n\nNow, we need to launch the connection with our credentials. For this example we use this credentials :\n\n - login : \"user\"\n - password: \"password\"\n\n\t\tzpClient.connect(login=\"user\", password=\"password\")\n\n#### Callback connection\n\nIt is useful to launch a function when the connection is established.\nFor this we implement the *onConnectionSuccess()* method :\n\n\t\n\tdef onConnectionSuccess():\n\t\tprint(\"OnConnectionSuccess\")\n\t\n\tzpClient.onConnectionSuccess = onConnectionSuccess\n\n\n\n### Call a macroscript\n\nIn this step, we call a macroscript. For this, we need to configure a service that manage the macroscript calls.\n\n\tserviceMacro = Service(\"macro_0\", zpClient)\n\nHere *macro_0* is the *deployment ID* of our macroscript service. By default we use *macro_0*.\n*zpClient* is our Client that we previously create.\n\nIn our example, we want to call a macroscript named **test** that takes 2 parameters *num1* and *num2*. The macroscript return the sum of *num1* and *num2* in a object named *result*.\n\nTo call the macroscript we use :\n\t\n\tserviceMacro.send('test', { 'num1': 3, 'num2': 5})\n\nTo listen the result we need to define a function and affect it to the result :\n\n\t\n\tdef handleTest(params):\n\t\tprint(\"result => \", params['result']\n\n\t\n\tserviceMacro.on('test', handleTest)\n\n\n\n### Stop the communication with ZetaPush\n\nTo disconnect an user to the ZetaPush platform we can use :\n\n\tzpClient.disconnect()\n\nThen, it is necessary to properly close the communication with the ZetaPush backend at the end of the program. For this we use :\n\n\tzpClient.stopZPConnection()\n\n### Send JSON in macro\n\nWe can also send JSON in a macroscript.\n\nIn our example we have a macroscript named *testJson(name, data)* that have 2 parameters :\n\n - name : String\n - data : Map (or JSON)\n\nWe can call this macroscript with this syntax :\n\n\t\n\tserviceMacro.send('testJson', { 'name': 'sensor1', 'data': { 'value': 15, 'unit': 'ppm' }} )\n\t\n\n## Complete example\n\n\nHere we have a complete example that launch a connection to the ZetaPush platform, call a macroscript named *test*, print his result and close the communication after few seconds :\n\n\n\tfrom zetapush_python import Client\n\tfrom zetapush_python import Service\n\timport time\n\t\n\t# Create the Client to handle the connection with ZetaPush \n\tzpClient = Client(businessId=\"Rj7PY_1I\", apiUrl=\"http://demo-1.zpush.io/zbo/pub/business/\")\n\t\n\t# We create the macro service\n\tserviceMacro = Service(\"macro_0\", zpClient)\n\t\n\t# Define a function that will be called when the connection is established\n\tdef onConnectionSuccessful():\n\t    print(\"ZetaPush::ConnectionSuccess\")\n\t\n\t    # We call the macroscript 'send'\n\t    serviceMacro.send('test', { 'num1': 3, 'num2': 5})\n\t\n\t# We define a function called when the macroscript \"test\" return us a result\n\tdef handleTest(params):\n\t    print(\"result => \", params['result'])\n\t\n\t\n\t# Affect a function that will be called when the connection is established\n\tzpClient.onConnectionSuccess = onConnectionSuccessful\n\t\n\t# We affect a function to handle the result of the 'test' macroscript\n\tserviceMacro.on('test', handleTest)\n\t\n\t# Launch the connection with our credentials\n\tzpClient.connect(login= \"user\", password= \"password\")\n\t\n\t# Pause the program during 2 secondes\n\ttime.sleep(2)\n\t\n\t# Properly close the communication with ZetaPush\n\tzpClient.stopZPConnection()",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/zetapush/zetapush-python",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zetapush_python",
    "platform": "",
    "project_url": "https://pypi.org/project/zetapush_python/",
    "release_url": "https://pypi.org/project/zetapush_python/0.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "SDK for ZetaPush backend",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3e05ca27d4974454dd2563eb8f0f4ebb",
          "sha256": "b1a02a232a7c4808e7337dc65e3a112a9aff1d5b6df7c7100a26e7b4cf167ee5"
        },
        "downloads": -1,
        "filename": "zetapush_python-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3e05ca27d4974454dd2563eb8f0f4ebb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3017,
        "upload_time": "2017-11-10T00:06:52",
        "url": "https://files.pythonhosted.org/packages/0e/27/39b1c4b9dfbd523d1e398c3fb860025f7130fcea0b3581f3b4c3dd1aad89/zetapush_python-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "3e05ca27d4974454dd2563eb8f0f4ebb",
        "sha256": "b1a02a232a7c4808e7337dc65e3a112a9aff1d5b6df7c7100a26e7b4cf167ee5"
      },
      "downloads": -1,
      "filename": "zetapush_python-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3e05ca27d4974454dd2563eb8f0f4ebb",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3017,
      "upload_time": "2017-11-10T00:06:52",
      "url": "https://files.pythonhosted.org/packages/0e/27/39b1c4b9dfbd523d1e398c3fb860025f7130fcea0b3581f3b4c3dd1aad89/zetapush_python-0.0.1.tar.gz"
    }
  ]
}