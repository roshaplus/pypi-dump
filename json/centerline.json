{
  "info": {
    "author": "Filip Todic",
    "author_email": "todic.filip@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Topic :: Scientific/Engineering :: GIS"
    ],
    "description": "Centerline\n==========\n\nCalculate the centerline of a polygon.\n--------------------------------------\n\nRoads, rivers and similar linear structures are often represented by\nlong and complex polygons. Since one of the most important attributes of\na linear structure is its length, extracting that attribute from a\npolygon can prove to be more or less difficult.\n\nInstallation:\n~~~~~~~~~~~~~\n\nYou can download the package from PyPI:\n\n::\n\n    $ pip install centerline\n\n**Warning:** This package has several dependencies, including Numpy,\n`Scipy <http://www.scipy.org/install.html>`__ and\n`GDAL/OGR <https://pypi.python.org/pypi/GDAL/>`__. If you are installing\nthese packages in the virtual environement, make sure you have all the\nnecessary dependencies on your system. Furthermore, after installing\nGDAL locate the GDAL headers:\n\n::\n\n    $ whereis gdal\n    gdal: /usr/include/gdal /usr/share/gdal\n\nand set the include path using the following environment variables:\n\n::\n\n    $ export CPLUS_INCLUDE_PATH=/usr/include/gdal/\n    $ export C_INCLUDE_PATH=/usr/include/gdal/\n\nAfter that, you can proceed to installing GDAL in the virtual\nenvironment. For more info, visit `Stack\nExchange <http://gis.stackexchange.com/questions/28966/python-gdal-package-missing-header-file-when-installing-via-pip>`__.\n\nUsage:\n~~~~~~\n\nIf you are planning on using this package inside of your own code, just\ntype:\n\n.. code:: python\n\n    >>> from centerline import Centerline\n\nHowever, if you just want to convert a Shapefile full of polygons into a\nShapefile full of centerlines, use the command line tool:\n\n::\n\n    $ shp2centerline INPUT_PATH.shp OUTPUT_PATH.shp [BORDER_DENSITY]\n\nThe BORDER\\_DENSITY parameter is optional. If not specified, the default\nvalue is 0.5.\n\n**Warning:** The INPUT\\_PATH.shp file needs to have a column called\n**id** with unique values or the script will fail to execute\nsuccessfully.\n\nReferences:\n~~~~~~~~~~~\n\n-  `SciPy-Voronoi <http://docs.scipy.org/doc/scipy/reference/tutorial/spatial.html#voronoi-diagrams>`__\n\n**Notes**: When defining the density factor, one has to take into\naccount the coordinate system defined in the Shapefile. The script was\ndesigned to handle metric coordinate systems, so the density factor is\nby default 0.5 (meters). For instance, if the value is set to 0.5 m, it\nbasically places additional points on the border at the distance of 0.5\nm from each other. If the user doesn't define the value (see *Usage*),\nthe script uses the default value. If the value is a negative number, it\nwill be converted into a positive number.\n\nIt appears that the Voronoi function available in the *SciPy* module\ndoes not handle large coordinates very well. Since most of the\ncoordinates are large numbers, a bounding box is needed to determine the\nminimal X and Y coordinates, i.e. the bottom left corner of the bounding\nbox. These values are then used for coordinate reduction. Once the\nVoronoi diagram is created the coordinates are returned to their\nnon-reduced form before creating LineStrings.\n\n**Example** |Screenshot|\n\n.. |Screenshot| image:: Screenshot.png",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/fitodic/centerline.git",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "centerline",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/centerline/",
    "release_url": "https://pypi.org/project/centerline/0.1/",
    "requires_python": null,
    "summary": "Calculate the centerline of a polygon",
    "version": "0.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2c855164b2410d9e270b1b40bf41db29",
          "sha256": "0a306baadbc3ebe4e89aebc5bc8729145ac7f5a117b7bfb3e8d987190d1813a4"
        },
        "downloads": 777,
        "filename": "centerline-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2c855164b2410d9e270b1b40bf41db29",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 124115,
        "upload_time": "2016-01-15T19:25:19",
        "url": "https://files.pythonhosted.org/packages/fb/18/36b05692015759324ac59d1c43b5afb2980d2f1144efb7e1bb1847039f11/centerline-0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2c855164b2410d9e270b1b40bf41db29",
        "sha256": "0a306baadbc3ebe4e89aebc5bc8729145ac7f5a117b7bfb3e8d987190d1813a4"
      },
      "downloads": 777,
      "filename": "centerline-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2c855164b2410d9e270b1b40bf41db29",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 124115,
      "upload_time": "2016-01-15T19:25:19",
      "url": "https://files.pythonhosted.org/packages/fb/18/36b05692015759324ac59d1c43b5afb2980d2f1144efb7e1bb1847039f11/centerline-0.1.tar.gz"
    }
  ]
}