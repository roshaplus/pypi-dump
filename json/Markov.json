{
  "info": {
    "author": "Dr Peter J Bleackley",
    "author_email": "peter.bleackley@playfultechnology.co.uk",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Mozilla Public License 1.1 (MPL 1.1)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "==================================\n                       Python Hidden Markov Model Library\n                       ==================================\n\n                       This library is a pure Python implementation of Hidden\n                       Markov Models (HMMs). The project structure is quite\n                       simple::\n\n                       Help on module Markov:\n\n                       NAME\n                           Markov - Library to implement hidden Markov Models\n\n                       FILE\n                           Markov.py\n\n                       CLASSES\n                            __builtin__.object\n                                BayesianModel\n                                    HMM\n                                Distribution\n                                    PoissonDistribution\n                                Probability\n    \n                       class BayesianModel(__builtin__.object)\n                        |  Represents a Bayesian probability model\n                        |  \n                        |  Methods defined here:\n                        |  \n                        |  MaximumLikelihoodOutcome(self, PriorProbs=None)\n                        |      Returns the maximum likelihood outcome given PriorProbs\n                        |  \n                        |  MaximumLikelihoodState(self, Observations=None)\n                        |      Returns the maximum likelihood of the internal state. If Observations\n                        |      is None, defaults to the maximum likelihood of the Prior\n                        |  \n                        |  Outcomes(self)\n                        |      Returns an iterator over the possible outcomes\n                        |  \n                        |  PriorProbs(self, Observations, PriorDist=None)\n                        |      Returns a Distribution representing the probabilities of the prior\n                        |      states, given a probability Distribution of Observations\n                        |  \n                        |  States(self)\n                        |      Returns an iterator over the possible states\n                        |  \n                        |  __call__(self, PriorProbs=None)\n                        |      Returns a Distribution representing the probabilities of the outcomes\n                        |      given a particular distribution of the priors, which defaults to\n                        |      self.Prior\n                        |  \n                        |  __iadd__(self, Model2)\n                        |      Updates the BayesianModel with the data in another BayesianModel\n                        |  \n                        |  __init__(self, Prior, Conditionals)\n                        |      Prior is a Distribution. Conditionals is a dictionary mapping\n                        |      each state in Prior to a Distribution\n                        |  \n                        |  ----------------------------------------------------------------------\n                        |  Data descriptors defined here:\n                        |  \n                        |  __dict__\n                        |      dictionary for instance variables (if defined)\n                        |  \n                        |  __weakref__\n                        |      list of weak references to the object (if defined)\n    \n                       class Distribution(__builtin__.object)\n                        |  Represents a probability distribution over a set of categories\n                        |  \n                        |  Methods defined here:\n                        |  \n                        |  MaximumLikelihoodState(self)\n                        |      Returns the state with the greatest likelihood\n                        |  \n                        |  Sample(self)\n                        |      Picks a random sample from the distribution\n                        |  \n                        |  States(self)\n                        |      Yields the Distribution's states\n                        |  \n                        |  Update(self, categories)\n                        |      Updates each category in the probability distiribution, according to\n                        |      a dictionary of numerator and denominator values\n                        |  \n                        |  __call__(self, item)\n                        |      Gives the probability of item\n                        |  \n                        |  __iadd__(self, Dist2)\n                        |      Updates the Distribution given another Distribution with the same states\n                        |  \n                        |  __init__(self, categories, k=0)\n                        |      The distribution may be initialised from a list of categories or a\n                        |      dictionary of category frequencies. In the latter case, Laplacian\n                        |      smoothing may be used\n                        |  \n                        |  __mul__(self, scalar)\n                        |      Returns the probability of each item, multiplied by a scalar\n                        |  \n                        |  copy(self)\n                        |      Returns a copy of the Distribution\n                        |  \n                        |  ----------------------------------------------------------------------\n                        |  Data descriptors defined here:\n                        |  \n                        |  __dict__\n                        |      dictionary for instance variables (if defined)\n                        |  \n                        |  __weakref__\n                        |      list of weak references to the object (if defined)\n    \n                       class HMM(BayesianModel)\n                        |  Represents a Hidden Markov Model\n                        |  \n                        |  Method resolution order:\n                        |      HMM\n                        |      BayesianModel\n                        |      __builtin__.object\n                        |  \n                        |  Methods defined here:\n                        |  \n                        |  Analyse(self, Sequence, MaximumLikelihood=False)\n                        |      Yields the an estimate of the internal states that generated a Sequence\n                        |      of observed values, either as the Maximum Likelihood state\n                        |      (Maximumlikelihood=True) or as a Distribution (MaximumLikelihood=False)\n                        |  \n                        |  MaximumLikelihoodState(self, Observations=None)\n                        |      Returns the maximum likelihood of the internal state. If Observations\n                        |      is None, defaults to the maximum likelihood of the the Current state, or\n                        |      the Prior if self.Current is None\n                        |  \n                        |  Outcomes(self)\n                        |  \n                        |  Predict(self)\n                        |      Returns a Distribution representing the probabilities of the next\n                        |      state given the current state\n                        |  \n                        |  PriorProbs(self, Observations)\n                        |      Returns a Distribution the prior probabilities of the HMM's states\n                        |      given a Distribution of Observations\n                        |  \n                        |  Train(self, Sequence)\n                        |      Trains the HMM from a sequence of observations\n                        |  \n                        |  Update(self, Observations)\n                        |      Updates the Prior probabilities, TransitionProbs\n                        |      and Conditionals given Observations\n                        |  \n                        |  __call__(self, PriorProbs=None)\n                        |      Returns a Distribution of outcomes given PriorProbs, which defaults\n                        |      to self.Current if it is set, or self.Prior otherwise\n                        |  \n                        |  __init__(self, states, outcomes)\n                        |      states is a list or dictionary of states, outcomes is a dictionary\n                        |      mapping each state in states to a Distribution of the output states\n                        |  \n                        |  ----------------------------------------------------------------------\n                        |  Methods inherited from BayesianModel:\n                        |  \n                        |  MaximumLikelihoodOutcome(self, PriorProbs=None)\n                        |      Returns the maximum likelihood outcome given PriorProbs\n                        |  \n                        |  States(self)\n                        |      Returns an iterator over the possible states\n                        |  \n                        |  __iadd__(self, Model2)\n                        |      Updates the BayesianModel with the data in another BayesianModel\n                        |  \n                        |  ----------------------------------------------------------------------\n                        |  Data descriptors inherited from BayesianModel:\n                        |  \n                        |  __dict__\n                        |      dictionary for instance variables (if defined)\n                        |  \n                        |  __weakref__\n                        |      list of weak references to the object (if defined)\n    \n                       class PoissonDistribution(Distribution)\n                        |  Represents a Poisson distribution\n                        |  \n                        |  Method resolution order:\n                        |      PoissonDistribution\n                        |      Distribution\n                        |      __builtin__.object\n                        |  \n                        |  Methods defined here:\n                        |  \n                        |  MaximumLikelihoodState(self)\n                        |  \n                        |  Mean(self)\n                        |      Returns the Mean of the PoissonDistribution\n                        |  \n                        |  Sample(self)\n                        |      Returns a random sample from the Poisson distribution\n                        |  \n                        |  States(self, limit=1e-07)\n                        |      Yields the PoissonDistribution's states, up to a cumulative\n                        |      probability of 1-limit\n                        |  \n                        |  Update(self, N, p=1.0)\n                        |      Updates the distribution, given a value N that has a probability of P\n                        |      of being drawn from this distribution\n                        |  \n                        |  __call__(self, N)\n                        |      Returns the probability of N\n                        |  \n                        |  __init__(self, mean)\n                        |      Initialises the distribution with a given mean\n                        |  \n                        |  copy(self)\n                        |      Returns a copy of the PoissonDistribution\n                        |  \n                        |  ----------------------------------------------------------------------\n                        |  Methods inherited from Distribution:\n                        |  \n                        |  __iadd__(self, Dist2)\n                        |      Updates the Distribution given another Distribution with the same states\n                        |  \n                        |  __mul__(self, scalar)\n                        |      Returns the probability of each item, multiplied by a scalar\n                        |  \n                        |  ----------------------------------------------------------------------\n                        |  Data descriptors inherited from Distribution:\n                        |  \n                        |  __dict__\n                        |      dictionary for instance variables (if defined)\n                        |  \n                        |  __weakref__\n                        |      list of weak references to the object (if defined)\n    \n                       class Probability(__builtin__.object)\n                        |  Represents a probability as a callable object\n                        |  \n                        |  Methods defined here:\n                        |  \n                        |  Update(self, deltaN, deltaD)\n                        |      Updates the probability during Bayesian learning\n                        |  \n                        |  __call__(self)\n                        |      Returns the value of the probability\n                        |  \n                        |  __iadd__(self, Prob2)\n                        |      Updates the probability given another Probability object\n                        |  \n                        |  __init__(self, n, d)\n                        |      Initialises the probability from a numerator and a denominator\n                        |  \n                        |  ----------------------------------------------------------------------\n                        |  Data descriptors defined here:\n                        |  \n                        |  __dict__\n                        |      dictionary for instance variables (if defined)\n                        |  \n                        |  __weakref__\n                        |      list of weak references to the object (if defined)",
    "docs_url": null,
    "download_url": "https://drive.google.com/#folders/0B68FS-e9xvMYYlhaNnluLXpFRlE",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://sourceforge.net/projects/python-hidden-markov/",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "Markov",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/Markov/",
    "release_url": "https://pypi.org/project/Markov/0.3.5/",
    "requires_python": null,
    "summary": "Python library for Hidden Markov Models",
    "version": "0.3.5"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cb7f8f2f8b8e62c9fb138be1753e6086",
          "sha256": "2e9c9a832b5fe093a036f3fbb3e125f26329c903d8d66cf657e71c23bc7cf6c6"
        },
        "downloads": 3046,
        "filename": "Markov-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cb7f8f2f8b8e62c9fb138be1753e6086",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5838,
        "upload_time": "2014-03-05T20:57:03",
        "url": "https://files.pythonhosted.org/packages/e5/57/dce0233cac4bbc7285bb9403656bf15268c238dbe1439639f140796ac5b9/Markov-0.1.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "af53ed26226f751268c45136c1e4e4cd",
          "sha256": "bda7c37c4c3ef160f782c9427d9146630b0f7c5323b06ac281a55d6ef0e53231"
        },
        "downloads": 164,
        "filename": "Markov-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "af53ed26226f751268c45136c1e4e4cd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2631,
        "upload_time": "2016-07-29T09:23:32",
        "url": "https://files.pythonhosted.org/packages/3a/5d/f3146bed7a8bbb7f2b910b5ed56af9c613defb748deb543d2ca50ee03132/Markov-0.2.tar.gz"
      }
    ],
    "0.2": [],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7d2505ef364c05629ffb8dd208da1516",
          "sha256": "7e13d97e49fc4a847ecd73b1086ac3b6609ba43605f2c9a9ff2502785d6c5c39"
        },
        "downloads": 161,
        "filename": "Markov-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7d2505ef364c05629ffb8dd208da1516",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6011,
        "upload_time": "2016-07-29T10:44:35",
        "url": "https://files.pythonhosted.org/packages/7f/af/f6826e76a966664832d3ec414369fca770ccd9649d2206675cd9be807a42/Markov-0.2.1.tar.gz"
      }
    ],
    "0.2.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a0e2467efa67c25ba6eee50d2b0c47cc",
          "sha256": "730afdeefab6c213cb6efbc7b50480fc946103841941df169c59430b5b10963d"
        },
        "downloads": 181,
        "filename": "Markov-0.2.10.tar.gz",
        "has_sig": false,
        "md5_digest": "a0e2467efa67c25ba6eee50d2b0c47cc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6064,
        "upload_time": "2016-08-01T16:12:21",
        "url": "https://files.pythonhosted.org/packages/21/11/f5b814514bbafc301920ece2ea6376947e6b486612807a7f6a59cad751b3/Markov-0.2.10.tar.gz"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d27a6a2911feb938fe66dd8b5a5f391a",
          "sha256": "53e72f6f1e23574b04eaf5a8b3becf1fadf7e1674c5ed2fbd443dabe6f0feb16"
        },
        "downloads": 156,
        "filename": "Markov-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d27a6a2911feb938fe66dd8b5a5f391a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6011,
        "upload_time": "2016-07-29T12:10:39",
        "url": "https://files.pythonhosted.org/packages/ec/6f/1e43748d4866897ea666afc19c6c595c1e1f00ab53f7c632898ed6735a06/Markov-0.2.2.tar.gz"
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9a6210863cef0df103df6736ffecb5de",
          "sha256": "d4be785ac6073e49bbcf2483b34b8223424ea20cfbf0cc9e388d01c396568838"
        },
        "downloads": 152,
        "filename": "Markov-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9a6210863cef0df103df6736ffecb5de",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6052,
        "upload_time": "2016-07-29T12:17:55",
        "url": "https://files.pythonhosted.org/packages/5d/cc/6240de28ca9b5c863952a843f33f5449532877c3ab552bdf0d9a4512d975/Markov-0.2.3.tar.gz"
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1f8d84d55d4bb211e16e1a3e52892879",
          "sha256": "fa07955b859d5ef2540df954e3b437e83ba38a8b3ed3dd5f56fad2f9fcd63038"
        },
        "downloads": 152,
        "filename": "Markov-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1f8d84d55d4bb211e16e1a3e52892879",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6058,
        "upload_time": "2016-07-29T12:52:40",
        "url": "https://files.pythonhosted.org/packages/de/66/7bb02606d93c580e92933dcbe303b398f908c406fd70043811a9976dad98/Markov-0.2.4.tar.gz"
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "26975c13b047740f58ecf62600066cef",
          "sha256": "a0a5a773b5b111149494ea6ae1489e2c33f8041140bd8cef5a74e30638724cfc"
        },
        "downloads": 156,
        "filename": "Markov-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "26975c13b047740f58ecf62600066cef",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6057,
        "upload_time": "2016-07-29T14:56:01",
        "url": "https://files.pythonhosted.org/packages/02/eb/e613a5141f80a0dd879862c0720b84a2434244705acce72d1683caa91308/Markov-0.2.5.tar.gz"
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0c0a809c45b3a8230075a21fad1ed7d2",
          "sha256": "904cf7fe94dfbdd503c51a069c2d73fa47e248490d814583a625b433c719534d"
        },
        "downloads": 150,
        "filename": "Markov-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "0c0a809c45b3a8230075a21fad1ed7d2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6058,
        "upload_time": "2016-07-29T15:26:51",
        "url": "https://files.pythonhosted.org/packages/ad/1e/be16f288db32d84558322a3d7793177dd6d988a462750006341f48996245/Markov-0.2.6.tar.gz"
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f38e6eac208648c624e093ffcfd525c2",
          "sha256": "3bdd2580bacf9fbf5faa9f3e8ca97acb98d69304d053ea0dea42e2881e0f3021"
        },
        "downloads": 154,
        "filename": "Markov-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "f38e6eac208648c624e093ffcfd525c2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6070,
        "upload_time": "2016-08-01T12:45:41",
        "url": "https://files.pythonhosted.org/packages/02/1c/9d2957fde979d36ddea94dfcfa17795e56fbf4b8a4b23a863e3dee32430c/Markov-0.2.7.tar.gz"
      }
    ],
    "0.2.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e8846c4b9aeb9b306fb5488f5c90cade",
          "sha256": "9c075a8c1ca9e54ea7b134e0bd2c56eebc87214f083a56a9d3e3e7ada411a9de"
        },
        "downloads": 158,
        "filename": "Markov-0.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "e8846c4b9aeb9b306fb5488f5c90cade",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6081,
        "upload_time": "2016-08-01T14:36:46",
        "url": "https://files.pythonhosted.org/packages/bb/5a/8a2ee9068a12e5d381b426f0b2c5465c79b5bc129ac88e0ae70dc5cbcdd3/Markov-0.2.8.tar.gz"
      }
    ],
    "0.2.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1bf3d2e331a5954c9dbdde92462d8293",
          "sha256": "91a68a0a9be909539f2e443567ba88827509bdc7595c7b1fdca2476f3b347180"
        },
        "downloads": 158,
        "filename": "Markov-0.2.9.tar.gz",
        "has_sig": false,
        "md5_digest": "1bf3d2e331a5954c9dbdde92462d8293",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6076,
        "upload_time": "2016-08-01T15:36:23",
        "url": "https://files.pythonhosted.org/packages/ef/b4/4d416dc51dcf9157957c53b9ca12cac51c41d1ca4622bdb42571cf67627c/Markov-0.2.9.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d4a25aac5a8d5fc11695136a5a5dbca1",
          "sha256": "a7f3cdf573ab2c2b082acdb745541e422d9eefb5d7f98c141427a67023d299fc"
        },
        "downloads": 103,
        "filename": "Markov-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d4a25aac5a8d5fc11695136a5a5dbca1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6421,
        "upload_time": "2016-09-16T13:40:56",
        "url": "https://files.pythonhosted.org/packages/02/7a/4a7c579773d9f7d26221fdc28ad693b8a0c8fc52b0ce08e9b467ed8d0367/Markov-0.3.0.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1e251ae04d07f466eb7c3db6877e3afb",
          "sha256": "82d6b6f346e372c22baa71d8693bc7a20ada54275b71700bf1848016b66ecfbc"
        },
        "downloads": 196,
        "filename": "Markov-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1e251ae04d07f466eb7c3db6877e3afb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6422,
        "upload_time": "2016-09-16T16:05:28",
        "url": "https://files.pythonhosted.org/packages/5c/dd/8adc84c715a979a186df9316b441f00b1bde46b5e52942c6dd0eb764698d/Markov-0.3.1.tar.gz"
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2a376cb610971cceaef8e2a360d4c526",
          "sha256": "b8a6dd1cf3114896028d24905086796e9221129a9372a55aeba437aa16191647"
        },
        "downloads": 102,
        "filename": "Markov-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2a376cb610971cceaef8e2a360d4c526",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6428,
        "upload_time": "2016-09-19T11:12:09",
        "url": "https://files.pythonhosted.org/packages/35/1e/ccb20cbcd74720d59ad335ad2601e20c4f19be4e800c423a5d5d209d6ef5/Markov-0.3.2.tar.gz"
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "838a213d27f3ce7b4c002648c6241246",
          "sha256": "f68e8574f39b7137b1190654c865fe7944af132e808f3a336288810b8107dc61"
        },
        "downloads": 125,
        "filename": "Markov-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "838a213d27f3ce7b4c002648c6241246",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6430,
        "upload_time": "2016-09-19T11:48:56",
        "url": "https://files.pythonhosted.org/packages/f3/35/649eba604e9b7817bea89bd559ee94997986f8d0b43c5c14de0480cf4003/Markov-0.3.3.tar.gz"
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "23522c79f76db82b448112608cb1dc3c",
          "sha256": "ed8e21b30aec53306d3f15799ff23ebe62654e1ad603ff581cdad8a7c415e280"
        },
        "downloads": 74,
        "filename": "Markov-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "23522c79f76db82b448112608cb1dc3c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6440,
        "upload_time": "2016-11-03T10:41:49",
        "url": "https://files.pythonhosted.org/packages/a7/bf/a358d877e4b5ae3df82011a112ed2260d10b7410fe5299e38b65bc8bee53/Markov-0.3.4.tar.gz"
      }
    ],
    "0.3.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b66420c03a5aa51edcceb55737986c34",
          "sha256": "bc8d746940c674058ce811cdd6a3750ea39d4d3b737c3c1fc97732e1939a8827"
        },
        "downloads": 75,
        "filename": "Markov-0.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b66420c03a5aa51edcceb55737986c34",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6469,
        "upload_time": "2016-11-30T15:32:07",
        "url": "https://files.pythonhosted.org/packages/4f/21/137bd21e453cf807ca29d0949d1229b102aeeb07c3f042b2beb4aa29d6d7/Markov-0.3.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b66420c03a5aa51edcceb55737986c34",
        "sha256": "bc8d746940c674058ce811cdd6a3750ea39d4d3b737c3c1fc97732e1939a8827"
      },
      "downloads": 75,
      "filename": "Markov-0.3.5.tar.gz",
      "has_sig": false,
      "md5_digest": "b66420c03a5aa51edcceb55737986c34",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 6469,
      "upload_time": "2016-11-30T15:32:07",
      "url": "https://files.pythonhosted.org/packages/4f/21/137bd21e453cf807ca29d0949d1229b102aeeb07c3f042b2beb4aa29d6d7/Markov-0.3.5.tar.gz"
    }
  ]
}