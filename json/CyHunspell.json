{
  "info": {
    "author": "Matthew Seal",
    "author_email": "mseal@opengov.us",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "|Build Status|\r\n\r\nCyHunspell\r\n==========\r\n\r\nCython wrapper on Hunspell Dictionary\r\n\r\nDescription\r\n-----------\r\n\r\nThis repository provides a wrapper on Hunspell to be used natively in\r\nPython. The module uses cython to link between the C++ and Python code,\r\nwith some additional features. There's very little Python overhead as\r\nall the heavy lifting is done on the C++ side of the module interface,\r\nwhich gives optimal performance.\r\n\r\nThe hunspell library will cache any corrections, you can use persistent\r\ncaching by adding the ``use_disk_cache`` argument to a Hunspell\r\nconstructor. Otherwise it uses in-memory caching.\r\n\r\nDependencies\r\n------------\r\n\r\ncacheman -- for (optionally asynchronous) persistent caching\r\n\r\nFeatures\r\n--------\r\n\r\nSpell checking & spell suggestions \\* See\r\nhttp://hunspell.sourceforge.net/\r\n\r\nHow to use\r\n----------\r\n\r\nBelow are some simple examples for how to use the repository.\r\n\r\nCreating a Hunspell object\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n::\r\n\r\n    from hunspell import Hunspell\r\n    h = Hunspell();\r\n\r\nYou now have a usable hunspell object that can make basic queries for\r\nyou.\r\n\r\n::\r\n\r\n    h.spell('test') # True\r\n\r\nSpelling\r\n~~~~~~~~\r\n\r\nIt's a simple task to ask if a particular word is in the dictionary.\r\n\r\n::\r\n\r\n    h.spell('correct') # True\r\n    h.spell('incorect') # False\r\n\r\nThis will only ever return True or False, and won't give suggestions\r\nabout why it might be wrong. It also depends on your choice of\r\ndictionary.\r\n\r\nSuggestions\r\n~~~~~~~~~~~\r\n\r\nIf you want to get a suggestion from Hunspell, it can provide a\r\ncorrected label given a basestring input.\r\n\r\n::\r\n\r\n    h.suggest('incorect') # (u'incorrect', u'correction', u'corrector', u'correct', u'injector')\r\n\r\nThe suggestions are in sorted order, where the lower the index the\r\ncloser to the input string.\r\n\r\nStemming\r\n~~~~~~~~\r\n\r\nThe module can also stem words, providing the stems for pluralization\r\nand other inflections.\r\n\r\n::\r\n\r\n    h.stem('testers') # (u'tester', u'test')\r\n    h.stem('saves') # (u'save',)\r\n\r\nBulk Requests\r\n~~~~~~~~~~~~~\r\n\r\nYou can also request bulk actions against Hunspell. This will trigger a\r\nthreaded (without a gil) request to perform the action requested.\r\nCurrently just 'suggest' and 'stem' are bulk requestable.\r\n\r\n::\r\n\r\n    h.bulk_suggest(['correct', 'incorect'])\r\n    # {'incorect': (u'incorrect', u'correction', u'corrector', u'correct', u'injector'), 'correct': ['correct']}\r\n    h.bulk_stem(['stems', 'currencies'])\r\n    # {'currencies': [u'currency'], 'stems': [u'stem']}\r\n\r\nBy default it spawns number of CPUs threads to perform the operation.\r\nYou can overwrite the concurrency as well.\r\n\r\n::\r\n\r\n    h.set_concurrency(4) # Four threads will now be used for bulk requests\r\n\r\nDictionaries\r\n~~~~~~~~~~~~\r\n\r\nYou can also specify the language or dictionary you wish to use.\r\n\r\n::\r\n\r\n    h = Hunspell('en_CA') # Canadian English\r\n\r\nBy default you have the following dictionaries available \\* en\\_AU \\*\r\nen\\_CA \\* en\\_GB \\* en\\_NZ \\* en\\_US \\* en\\_ZA\r\n\r\nHowever you can download your own and point Hunspell to your custom\r\ndictionaries.\r\n\r\n::\r\n\r\n    h = Hunspell('en_GB-large', hunspell_data_dir='/custom/dicts/dir')\r\n\r\nAsynchronous Caching\r\n~~~~~~~~~~~~~~~~~~~~\r\n\r\nIf you want to have Hunspell cache suggestions and stems you can pass it\r\na directory to house such caches.\r\n\r\n::\r\n\r\n    h = Hunspell(disk_cache_dir='/tmp/hunspell/cache/dir')\r\n\r\nThis will save all suggestion and stem requests periodically and in the\r\nbackground. The cache will fork after a number of new requests over\r\nparticular time ranges and save the cache contents while the rest of the\r\nprogram continues onward. You'll never have to explicitly save your\r\ncaches to disk, but you can if you so choose.\r\n\r\n::\r\n\r\n    h.save_cache()\r\n\r\nOtherwise the Hunspell object will cache such requests locally in memory\r\nand not persist that memory.\r\n\r\nPlatforms\r\n---------\r\n\r\nLinux\r\n~~~~~\r\n\r\nTested on Ubuntu and Fedora with pre-build binaries of Hunspell as well\r\nas automatically build depedencies. It's inlikely to have trouble with\r\nother distributions.\r\n\r\nWindows\r\n~~~~~~~\r\n\r\nThe base library comes with MSVC built Hunspell libraries and will link\r\nagainst those during runtime. These were tested on Windows 7, 8, 10 and\r\nsome on older systems. It's possible that a Python build with a newer\r\n(or much older) version of MSVC will fail to load these pre-built\r\nlibraries.\r\n\r\nMac OSX\r\n~~~~~~~\r\n\r\nSo far the library has been tested against 10.9 (Mavericks) and up.\r\nThere shoudn't be any reason it would fail to run on any particular\r\nversion of OSX.\r\n\r\nBuilding source libraries\r\n-------------------------\r\n\r\nSee libs/README\r\n\r\nNavigating the Repo\r\n-------------------\r\n\r\nhunspell\r\n~~~~~~~~\r\n\r\nPackage wrapper for the repo.\r\n\r\ntests\r\n~~~~~\r\n\r\nAll unit tests for the repo.\r\n\r\nLanguage Preferences\r\n--------------------\r\n\r\n-  Google Style Guide\r\n-  Object Oriented (with a few exceptions)\r\n\r\nTODO\r\n----\r\n\r\n-  Convert cacheman dependency to be optional\r\n\r\nKnown Issues\r\n------------\r\n\r\n-  Exact spelling suggestions on different OS's differs slightly with\r\n   identical inputs. This appears to be an issue with Hunspell 1.3 and\r\n   not this library.\r\n-  Older versions of pip and setuptools will build with incorrect\r\n   windows DLL bindings and complain about \"ImportError: DLL load\r\n   failed: %1 is not a valid Win32 application.\"\r\n-  Sometimes windows machines won't find the build tools appropiately.\r\n   You may need to 'SET VS100COMNTOOLS=%VSxxxCOMNTOOLS%' before\r\n   installing. Python 3 usually wants the xxx as '140' and python 2 as\r\n   '90'. There's not a lot the library can do to fix this, though pip\r\n   and setuptools upgrades oftentimes resolve the issue by being\r\n   smarter.\r\n\r\nAuthor\r\n------\r\n\r\nAuthor(s): Tim Rodriguez and Matthew Seal\r\n\r\nLicense\r\n-------\r\n\r\nMIT\r\n\r\n\u00a9 Copyright 2015, `OpenGov <http://opengov.com>`__\r\n\r\n.. |Build Status| image:: https://travis-ci.org/OpenGov/cython_hunspell.svg?branch=master\r\n   :target: https://travis-ci.org/OpenGov/cython_hunspell\r\n",
    "docs_url": null,
    "download_url": "https://github.com/OpenGov/cython_hunspell/tarball/v1.2.0",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/OpenGov/cython_hunspell",
    "keywords": "hunspell",
    "license": "MIT + MPL 1.1/GPL 2.0/LGPL 2.1",
    "maintainer": "",
    "maintainer_email": "",
    "name": "CyHunspell",
    "platform": "",
    "project_url": "https://pypi.org/project/CyHunspell/",
    "release_url": "https://pypi.org/project/CyHunspell/1.2.0/",
    "requires_python": "",
    "summary": "A wrapper on hunspell for use in Python",
    "version": "1.2.0"
  },
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "64b6eae2f93a633a385a6dc0e51f62d1",
          "sha256": "c6195b45aacca43a4f4a502371dd2961b9f38c28c5a092ab6376d0734e2f2b99"
        },
        "downloads": 1993,
        "filename": "CyHunspell-1.0.1.zip",
        "has_sig": false,
        "md5_digest": "64b6eae2f93a633a385a6dc0e51f62d1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1569914,
        "upload_time": "2014-06-12T22:35:35",
        "url": "https://files.pythonhosted.org/packages/8a/f1/c7b3826af777063bcc034ec25430e458cd4de7d66e84980f0bd58ab5636e/CyHunspell-1.0.1.zip"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e8d3bfba021493fe4f05e45850bc030d",
          "sha256": "5b44c6e4b7bb98b31f684a39dd2e5ff1c19cf259dabec9a1a00a352a19f60d08"
        },
        "downloads": 2382,
        "filename": "CyHunspell-1.1.0.zip",
        "has_sig": false,
        "md5_digest": "e8d3bfba021493fe4f05e45850bc030d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3115594,
        "upload_time": "2014-06-14T18:34:15",
        "url": "https://files.pythonhosted.org/packages/c9/de/e9afc1b79e754953f88401d1714ee1d84b4b5c304d2a8ab55d1a26d370ea/CyHunspell-1.1.0.zip"
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "58e8c042646691f492729d8fe7867737",
          "sha256": "7cc5409a50dcd0f19771c50b34a6094851c2e047b9460f543f68db0846589276"
        },
        "downloads": 907,
        "filename": "CyHunspell-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "58e8c042646691f492729d8fe7867737",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3308409,
        "upload_time": "2015-09-07T17:45:01",
        "url": "https://files.pythonhosted.org/packages/27/e8/e3cab74916a5341906d1f410d9d4af815a4addade50fe2e0cb3d4b667d20/CyHunspell-1.1.3.tar.gz"
      }
    ],
    "1.1.3.post1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "37c19475d772287e7e0cfc0912039a81",
          "sha256": "8ea4273fb5e1b35c7f1b4f3868571fe29e0d34ad7e1ab8b7aa2eb8f13b77218a"
        },
        "downloads": 1347,
        "filename": "CyHunspell-1.1.3.post1.zip",
        "has_sig": false,
        "md5_digest": "37c19475d772287e7e0cfc0912039a81",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3325974,
        "upload_time": "2015-09-07T17:31:08",
        "url": "https://files.pythonhosted.org/packages/f2/43/7991ddcf4365166b2e7a98055d7221d484d42f2ed02454cf3fe6465558e1/CyHunspell-1.1.3.post1.zip"
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a606be545ac7464d390651f7358e8b32",
          "sha256": "001d44d5e8f5669fb9f98da92c6ef0d0da23bb30627feb23dbd0ccc1f67f545d"
        },
        "downloads": 24,
        "filename": "CyHunspell-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a606be545ac7464d390651f7358e8b32",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5539117,
        "upload_time": "2017-04-02T04:49:43",
        "url": "https://files.pythonhosted.org/packages/35/d2/c93b9de2ae3de1ead42138f19db505c8242c24e07bb08ad339e88c657a1f/CyHunspell-1.1.4.tar.gz"
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d947aa4ec12f925097c0f5399202a329",
          "sha256": "a3c57f7b16259956d6d17ce82f89a242a4c8225d4c8ed31ed2c6033d5aa16e4b"
        },
        "downloads": 0,
        "filename": "CyHunspell-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d947aa4ec12f925097c0f5399202a329",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2962950,
        "upload_time": "2017-05-20T23:28:20",
        "url": "https://files.pythonhosted.org/packages/d6/90/5362efe7ccf0f785771ae657d981c5ddccc25158b04b7bbd2cccbf04a98e/CyHunspell-1.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "d947aa4ec12f925097c0f5399202a329",
        "sha256": "a3c57f7b16259956d6d17ce82f89a242a4c8225d4c8ed31ed2c6033d5aa16e4b"
      },
      "downloads": 0,
      "filename": "CyHunspell-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d947aa4ec12f925097c0f5399202a329",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 2962950,
      "upload_time": "2017-05-20T23:28:20",
      "url": "https://files.pythonhosted.org/packages/d6/90/5362efe7ccf0f785771ae657d981c5ddccc25158b04b7bbd2cccbf04a98e/CyHunspell-1.2.0.tar.gz"
    }
  ]
}