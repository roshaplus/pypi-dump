{
  "info": {
    "author": "Daniel Hrisca",
    "author_email": "daniel.hrisca@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "*asammdf* is a fast parser/editor for ASAM (Associtation for Standardisation of Automation and Measuring Systems) MDF (Measurement Data Format) files. \n\n*asammdf* supports both MDF version 3 and 4 formats. \n\n*asammdf* works on Python 2.7, and Python >= 3.4\n\nProject goals\n=============\nThe main goals for this library are:\n\n* to be faster than the other Python based mdf libraries\n* to have clean and eays to understand code base\n\nFeatures\n========\n\n* read sorted and unsorted MDF v3 and v4 files\n* files are loaded in RAM for fast operations\n\n    * for low memory computers or for large data files there is the option to load only the metadata and leave the raw channel data (the samples) unread; this of course will mean slower channel data access speed\n\n* extract channel data, master channel and extra channel information as *Signal* objects for unified operations with v3 and v4 files\n* time domain operation using the *Signal* class\n\n    * Pandas data frames are good if all the channels have the same time based\n    * usually a measuremetn will have channels from different sources at different rates\n    * the *Signal* class facilitates operations with such channels\n    \n* remove data group by index or by specifing a channel name inside the target data group\n* append new channels\n* convert to different mdf version\n* add and extract attachments\n* mdf 4.10 zipped blocks\n\nMajor features still not implemented\n====================================\n\n* functionality related to sample reduction block (but the class is defined)\n* mdf 3 channel dependency functionality\n* functionality related to trigger blocks (but the class is defined)\n* handling of unfinnished measurements (mdf 4)\n* mdf 4 channel arrays\n* xml schema for TXBLOCK and MDBLOCK\n\nUsage\n=====\n\n.. code-block: python\n\n   from asammdf import MDF\n   mdf = MDF('sample.mdf')\n   speed = mdf.get('WheelSpeed')\n\n \nCheck the *examples* folder for extended usage demo.\n\nDocumentation\n=============\nhttp://asammdf.readthedocs.io/en/2.1.0/\n\nInstallation\n============\n*asammdf* is available on \n\n* github: https://github.com/danielhrisca/asammdf/\n* PyPI: https://pypi.org/project/asammdf/\n    \n.. code-block: python\n\n   pip install asammdf\n\n    \nDependencies\n============\nasammdf uses the following libraries\n\n* numpy : the heart that makes all tick\n* numexpr : for formula based channel conversions\n* blosc : optionally used for in memmory raw channel data compression\n* matplotlib : for Signal plotting\n\nBenchmarks\n==========\n\nPython 3 x86\n------------\n\nBenchmark environment\n\n* 3.6.1 (v3.6.1:69c0db5, Mar 21 2017, 17:54:52) [MSC v.1900 32 bit (Intel)]\n* Windows-10-10.0.14393-SP0\n* Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n* 16GB installed RAM\n\nNotations used in the results\n\n* nodata = MDF object created with load_measured_data=False (raw channel data no loaded into RAM)\n* compression = MDF object created with compression=True (raw channel data loaded into RAM and compressed)\n* noconvert = MDF object created with convertAfterRead=False\n\nFiles used for benchmark:\n* 183 groups\n* 36424 channels\n\n\n================================================== ========= ========\nOpen file                                          Time [ms] RAM [MB]\n================================================== ========= ========\nasammdf 2.1.0 mdfv3                                     1031      284\nasammdf 2.1.0 compression mdfv3                         1259      192\nasammdf 2.1.0 nodata mdfv3                               584      114\nmdfreader 0.2.5 mdfv3                                   3809      455\nmdfreader 0.2.5 no convert mdfv3                        3498      321\nasammdf 2.1.0 mdfv4                                     2109      341\nasammdf 2.1.0 compression mdfv4                         2405      239\nasammdf 2.1.0 nodata mdfv4                              1686      159\nmdfreader 0.2.5 mdfv4                                  44400      578\nmdfreader 0.2.5 noconvert mdfv4                        43867      449\n================================================== ========= ========\n\n\n================================================== ========= ========\nSave file                                          Time [ms] RAM [MB]\n================================================== ========= ========\nasammdf 2.1.0 mdfv3                                      713      286\nasammdf 2.1.0 compression mdfv3                          926      194\nmdfreader 0.2.5 mdfv3                                  19862     1226\nasammdf 2.1.0 mdfv4                                     1109      347\nasammdf 2.1.0 compression mdfv4                         1267      246\nmdfreader 0.2.5 mdfv4                                  17518     1656\n================================================== ========= ========\n\n\n================================================== ========= ========\nGet all channels (36424 calls)                     Time [ms] RAM [MB]\n================================================== ========= ========\nasammdf 2.1.0 mdfv3                                     3943      295\nasammdf 2.1.0 compression mdfv3                        29682      203\nasammdf 2.1.0 nodata mdfv3                             23215      129\nmdfreader 0.2.5 mdfv3                                     38      455\nasammdf 2.1.0 mdfv4                                     3227      351\nasammdf 2.1.0 compression mdfv4                        26070      250\nasammdf 2.1.0 nodata mdfv4                             21619      171\nmdfreader 0.2.5 mdfv4                                     51      578\n================================================== ========= ========\n\n\nPython 3 x64\n------------\n\nBenchmark environment\n\n* 3.6.1 (v3.6.1:69c0db5, Mar 21 2017, 18:41:36) [MSC v.1900 64 bit (AMD64)]\n* Windows-10-10.0.14393-SP0\n* Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n* 16GB installed RAM\n\nNotations used in the results\n\n* nodata = MDF object created with load_measured_data=False (raw channel data no loaded into RAM)\n* compression = MDF object created with compression=True (raw channel data loaded into RAM and compressed)\n* noconvert = MDF object created with convertAfterRead=False\n\nFiles used for benchmark:\n* 183 groups\n* 36424 channels\n\n\n================================================== ========= ========\nOpen file                                          Time [ms] RAM [MB]\n================================================== ========= ========\nasammdf 2.1.0 mdfv3                                      801      352\nasammdf 2.1.0 compression mdfv3                          946      278\nasammdf 2.1.0 nodata mdfv3                               490      172\nmdfreader 0.2.5 mdfv3                                   2962      525\nmdfreader 0.2.5 no convert mdfv3                        2740      392\nasammdf 2.1.0 mdfv4                                     1674      440\nasammdf 2.1.0 compression mdfv4                         1916      343\nasammdf 2.1.0 nodata mdfv4                              1360      245\nmdfreader 0.2.5 mdfv4                                  31915      737\nmdfreader 0.2.5 noconvert mdfv4                        31425      607\n================================================== ========= ========\n\n\n================================================== ========= ========\nSave file                                          Time [ms] RAM [MB]\n================================================== ========= ========\nasammdf 2.1.0 mdfv3                                      575      353\nasammdf 2.1.0 compression mdfv3                          705      276\nmdfreader 0.2.5 mdfv3                                  21591     1985\nasammdf 2.1.0 mdfv4                                      913      447\nasammdf 2.1.0 compression mdfv4                         1160      352\nmdfreader 0.2.5 mdfv4                                  18666     2782\n================================================== ========= ========\n\n\n================================================== ========= ========\nGet all channels (36424 calls)                     Time [ms] RAM [MB]\n================================================== ========= ========\nasammdf 2.1.0 mdfv3                                     2835      363\nasammdf 2.1.0 compression mdfv3                        18188      287\nasammdf 2.1.0 nodata mdfv3                             11926      188\nmdfreader 0.2.5 mdfv3                                     29      525\nasammdf 2.1.0 mdfv4                                     2338      450\nasammdf 2.1.0 compression mdfv4                        15566      355\nasammdf 2.1.0 nodata mdfv4                             12598      260\nmdfreader 0.2.5 mdfv4                                     39      737\n================================================== ========= ========",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/danielhrisca/asammdf",
    "keywords": "parsers for binary measurement files",
    "license": "GPL3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asammdf",
    "platform": "",
    "project_url": "https://pypi.org/project/asammdf/",
    "release_url": "https://pypi.org/project/asammdf/2.1.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "ASAM MDF measurement data file parser",
    "version": "2.1.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "04450785a7b32dc7070c6f6ac280a6c6",
          "sha256": "a7c6e8e62f2f3b3361c5f6b9981955a6da1899e61ad398513fb8a03fec3299a7"
        },
        "downloads": 0,
        "filename": "asammdf-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "04450785a7b32dc7070c6f6ac280a6c6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17164,
        "upload_time": "2017-07-10T10:38:03",
        "url": "https://files.pythonhosted.org/packages/dd/e4/753e6586b338f81416f0292a4a1baf8d16dde55ff0a24f112713e45c43a0/asammdf-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "dabe3b1181696825968ca3948753f690",
          "sha256": "27cb68afc8d79ae3a4bbbdeb2c710282ece0d4315a97edf4fadaff93048faf8f"
        },
        "downloads": 0,
        "filename": "asammdf-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dabe3b1181696825968ca3948753f690",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17499,
        "upload_time": "2017-07-11T05:54:35",
        "url": "https://files.pythonhosted.org/packages/39/c9/d8ef446eefe8b1f31f118f81aa9da878cbfffba851d2f769d623858a16ca/asammdf-1.0.1.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7fedc18ab92db7ecddccaade486d9d79",
          "sha256": "ee80f204634e234aaaf3d16fc76ff9cf279867618c8f94bd88ed486389ebaa67"
        },
        "downloads": 0,
        "filename": "asammdf-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7fedc18ab92db7ecddccaade486d9d79",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 21104,
        "upload_time": "2017-07-16T12:34:09",
        "url": "https://files.pythonhosted.org/packages/13/c2/988986ed1ea61c7c47c13f1fc549c15d3ba1474d51e00b23cfb71e6bac72/asammdf-1.1.0.tar.gz"
      }
    ],
    "2.0.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e1a89040280234b1994e2574c8cc3ed7",
          "sha256": "e4f979ee830fe73bf84520cfd54e0f5b126934ae1ee3c3e26c8f26a51dc41acd"
        },
        "downloads": 0,
        "filename": "asammdf-2.0.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "e1a89040280234b1994e2574c8cc3ed7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 39449,
        "upload_time": "2017-07-31T13:23:00",
        "url": "https://files.pythonhosted.org/packages/50/7c/36c5ae8ab2995d6e05fda60db0cbba9ee0f21d110496bd000a098550616b/asammdf-2.0.0.post1.tar.gz"
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6896985d4b7431bda0daa064a922771a",
          "sha256": "2ba47c3a8af23b74a41f95798dd6253ce9b9e5dc96f1a7f467071bad95dc15c5"
        },
        "downloads": 0,
        "filename": "asammdf-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6896985d4b7431bda0daa064a922771a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 45412,
        "upload_time": "2017-08-03T11:38:09",
        "url": "https://files.pythonhosted.org/packages/7b/05/0d758814bc5617902e66ce049e8255dc88ced4470da96ff3a6b7bdd47c4f/asammdf-2.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "6896985d4b7431bda0daa064a922771a",
        "sha256": "2ba47c3a8af23b74a41f95798dd6253ce9b9e5dc96f1a7f467071bad95dc15c5"
      },
      "downloads": 0,
      "filename": "asammdf-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6896985d4b7431bda0daa064a922771a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 45412,
      "upload_time": "2017-08-03T11:38:09",
      "url": "https://files.pythonhosted.org/packages/7b/05/0d758814bc5617902e66ce049e8255dc88ced4470da96ff3a6b7bdd47c4f/asammdf-2.1.0.tar.gz"
    }
  ]
}