{
  "info": {
    "author": "Mark Vartanyan",
    "author_email": "kolypto@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "|Build Status|\n\nPassword Strength\n=================\n\nPassword strength and validation.\n\nPasswordPolicy\n==============\n\nPerform tests on a password.\n\nInit Policy\n-----------\n\n.. code:: python\n\n    PasswordPolicy(*tests)\n\nInit password policy with a list of tests\n\nAlternatively:\n\n.. code:: python\n\n    PasswordPolicy.from_names(**tests)\n\nInit password policy from a dictionary of test definitions.\n\nA test definition is simply:\n\n::\n\n    { test-name: argument } or { test-name: [arguments] }\n\nTest name is just a lowercased class name.\n\nExample:\n\n::\n\n    PasswordPolicy.from_names(\n        length=8,\n        strength=(0.33, 30),\n    )\n\nBundled Tests\n-------------\n\nThese objects perform individual tests on a password, and report\n``True`` of ``False``.\n\ntests.Strength(strength, weak\\_bits=30)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nTest whether the password has >= ``strength`` strength.\n\nA password is evaluated to the strength of 0.333 when it has\n``weak_bits`` entropy bits, which is considered to be a weak password.\nStrong passwords start at 0.666.\n\ntests.Special(count)\n^^^^^^^^^^^^^^^^^^^^\n\nTest whether the password has >= ``count`` special characters\n\ntests.Uppercase(count)\n^^^^^^^^^^^^^^^^^^^^^^\n\nTest whether the password has >= ``count`` uppercase characters\n\ntests.EntropyBits(bits)\n^^^^^^^^^^^^^^^^^^^^^^^\n\nTest whether the password has >= ``bits`` entropy bits\n\ntests.Length(length)\n^^^^^^^^^^^^^^^^^^^^\n\nTests whether password length >= ``length``\n\ntests.Numbers(count)\n^^^^^^^^^^^^^^^^^^^^\n\nTest whether the password has >= ``count`` numeric characters\n\ntests.NonLetters(count)\n^^^^^^^^^^^^^^^^^^^^^^^\n\nTest whether the password has >= ``count`` non-letter characters\n\ntests.NonLettersLc(count)\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nTest whether the password has >= ``count`` non-lowercase characters\n\nTesting\n-------\n\nAfter the ``PasswordPolicy`` is initialized, there are two methods to\ntest:\n\nPasswordPolicy.password\n~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    password(password)\n\nGet password stats bound to the tests declared in this policy.\n\nIf in addition to tests you need to get statistics (e.g. strength) --\nuse this object to double calculations.\n\nSee ```PasswordStats`` <#passwordstats>`__ for more details.\n\nPasswordPolicy.test\n~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    test(password)\n\nPerform tests on a password.\n\nShortcut for: ``PasswordPolicy.password(password).test()``.\n\nCustom Tests\n------------\n\nATest is a base class for password tests.\n\nTo create a custom test, just subclass it and implement the following\nmethods:\n\n-  **init**\\ () that takes configuration arguments\n-  test(ps) that tests a password, where ``ps`` is a ``PasswordStats``\n   object.\n\nPasswordStats\n-------------\n\nPasswordStats allows to calculate statistics on a password.\n\nIt considers a password as a unicode string, and all statistics are\nunicode-based.\n\nConstructor:\n\n.. code:: python\n\n    from password_strength import PasswordStats\n    PasswordStats(password)\n\nPasswordStats.alphabet\\_cardinality\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nGet alphabet cardinality: alphabet length\n\nPasswordStats.count(\\*categories) Count characters of the specified classes only\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPasswordStats.entropy\\_bits\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nGet information entropy bits: log2 of the number of possible passwords\n\nhttps://en.wikipedia.org/wiki/Password\\_strength\n\nPasswordStats.strength(weak\\_bits=30)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nGet password strength as a number normalized to range {0 .. 1}.\n\nNormalization is done in the following fashion:\n\n1. If entropy\\_bits <= weak\\_bits -- linear in range{0.0 .. 0.33} (weak)\n2. If entropy\\_bits <= weak\\_bits\\*2 -- almost linear in range{0.33 ..\n   0.66} (medium)\n3. If entropy\\_bits > weak\\_bits\\*3 -- asymptotic towards 1.0 (strong)\n\nPasswordStats.letters\n^^^^^^^^^^^^^^^^^^^^^\n\nCount all letters\n\nPasswordStats.sequences\\_length\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nDetect and return the length of used sequences:\n\n-  Alphabet letters: abcd...\n-  Keyboard letters: qwerty, etc\n-  Keyboard special characters in the top row: ~!@#$%^&\\*()\\_+\n-  Numbers: 0123456\n\nPasswordStats.letters\\_uppercase\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nCount uppercase letters\n\nPasswordStats.alphabet\n^^^^^^^^^^^^^^^^^^^^^^\n\nGet alphabet: set of used characters\n\nPasswordStats.weakness\\_factor\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nGet weakness factor as a float in range {0 .. 1}\n\nThis detects the portion of the string that contains: \\* repeated\npatterns \\* sequences\n\nE.g. a value of 1.0 means the whole string is weak, and 0.5 means half\nof the string is weak.\n\nTypical usage:\n\npassword\\_strength = (1 - weakness\\_factor) \\* strength\n\nPasswordStats.char\\_categories\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nCharacter count per top-level category\n\nThe following top-level categories are defined:\n\n-  L: letter\n-  M: Mark\n-  N: Number\n-  P: Punctuation\n-  S: Symbol\n-  Z: Separator\n-  C: Other\n\nPasswordStats.length\n^^^^^^^^^^^^^^^^^^^^\n\nGet password length\n\nPasswordStats.repeated\\_patterns\\_length\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nDetect and return the length of repeated patterns.\n\nYou will probably be comparing it with the length of the password itself\nand ban if it's longer than 10%\n\nPasswordStats.letters\\_lowercase\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nCount lowercase letters\n\nPasswordStats.combinations\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe number of possible combinations with the current alphabet\n\nPasswordStats.special\\_characters\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nCount special characters\n\nSpecial characters is everything that's not a letter or a number\n\nPasswordStats.numbers\n^^^^^^^^^^^^^^^^^^^^^\n\nCount numbers\n\nPasswordStats.count\\_except(\\*categories) Count characters of all classes except the specified ones\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPasswordStats.test(tests)\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nTest the password against a list of tests\n\nPasswordStats.entropy\\_density\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nGet information entropy density factor, ranged {0 .. 1}.\n\nThis is ratio of entropy\\_bits() to max bits a password of this length\ncould have. E.g. if all characters are unique -- then it's 1.0. If half\nof the characters are reused once -- then it's 0.5.\n\nPasswordStats.char\\_categories\\_detailed\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nCharacter count per unicode category, detailed format.\n\nSee: http://www.unicode.org/reports/tr44/#GC\\_Values\\_Table\n\n.. |Build Status| image:: https://api.travis-ci.org/kolypto/py-password-strength.png?branch=master\n   :target: https://travis-ci.org/kolypto/py-password-strength",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/kolypto/py-password-strength",
    "keywords": "password,strength,policy,security",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "password_strength",
    "platform": "any",
    "project_url": "https://pypi.org/project/password_strength/",
    "release_url": "https://pypi.org/project/password_strength/0.0.2-0/",
    "requires_python": null,
    "summary": "Password strength and validation",
    "version": "0.0.2-0"
  },
  "releases": {
    "0.0.1-0": [
      {
        "comment_text": "built for Linux-3.13.0-32-generic-x86_64-with-glibc2.4",
        "digests": {
          "md5": "803f8769757e4c27c159b006910aa4bd",
          "sha256": "24ea406b401e20e4baacc02716f532382168e3e61920f8367150bb5cab62ab61"
        },
        "downloads": 1379,
        "filename": "password_strength-0.0.1-0.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "803f8769757e4c27c159b006910aa4bd",
        "packagetype": "bdist_dumb",
        "python_version": "any",
        "size": 11706,
        "upload_time": "2014-08-05T12:23:58",
        "url": "https://files.pythonhosted.org/packages/84/ab/163faf165b51807f88f0dcc162076cb95d3e2a8c4fad7517d38892b26a24/password_strength-0.0.1-0.linux-x86_64.tar.gz"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ad99b51fb4fc4e7ec02e139dc23397be",
          "sha256": "e98b3102792a0a7582623141749263f053175ccb3baed14596424885970a3d7b"
        },
        "downloads": 1377,
        "filename": "password_strength-0.0.1-0.tar.gz",
        "has_sig": false,
        "md5_digest": "ad99b51fb4fc4e7ec02e139dc23397be",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8969,
        "upload_time": "2014-08-05T12:23:55",
        "url": "https://files.pythonhosted.org/packages/86/88/90547ef6d126a47f39472457fca214871ec6e304f97eb8a3d9fda1c6ed39/password_strength-0.0.1-0.tar.gz"
      }
    ],
    "0.0.1-1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3e3aa10be9c3a2fe315330422de8ea83",
          "sha256": "65e08f6fb0824fcb4c99cecdab37f52886ae65f4fd05107ea3180853cd22efad"
        },
        "downloads": 1301,
        "filename": "password_strength-0.0.1_1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "3e3aa10be9c3a2fe315330422de8ea83",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 12053,
        "upload_time": "2014-08-14T15:45:44",
        "url": "https://files.pythonhosted.org/packages/e2/2a/95ea6a146467d376b7cf6810b6978653c9c589443c73bd4b0904c7215fdf/password_strength-0.0.1_1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0c845b3ffd2c30c9a5c38719f45a0b68",
          "sha256": "3ea5a483dd31a10d233b6ed9571aa9c30c34f64996db783f2e9496c38310242f"
        },
        "downloads": 1708,
        "filename": "password_strength-0.0.1-1.tar.gz",
        "has_sig": false,
        "md5_digest": "0c845b3ffd2c30c9a5c38719f45a0b68",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8987,
        "upload_time": "2014-08-14T15:45:37",
        "url": "https://files.pythonhosted.org/packages/8c/59/f01949795b6119728bd6e9d61a004d73e8b4342db84e0ceaf2635b2f057f/password_strength-0.0.1-1.tar.gz"
      }
    ],
    "0.0.2-0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "480fc884064ae004cc708b3c342d1fdc",
          "sha256": "ac801b56138fbf225b335758356a0d20cb4e6bd8368f2a52430f2069f72bec55"
        },
        "downloads": 1592,
        "filename": "password_strength-0.0.2_0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "480fc884064ae004cc708b3c342d1fdc",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 12759,
        "upload_time": "2014-08-14T16:38:50",
        "url": "https://files.pythonhosted.org/packages/d5/e3/193b3626b40802d369afb42ec409dfb574d8a26798b96fdb9a48f67f13fb/password_strength-0.0.2_0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "97ae5aae09d1510704a48d5ae291d347",
          "sha256": "a78a402d85fbdaf506570f7eacb3ad60105cf4125f729747e71bfbf6795826bd"
        },
        "downloads": 1703,
        "filename": "password_strength-0.0.2-0.tar.gz",
        "has_sig": false,
        "md5_digest": "97ae5aae09d1510704a48d5ae291d347",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9645,
        "upload_time": "2014-08-14T16:38:46",
        "url": "https://files.pythonhosted.org/packages/b3/36/13d8343a4209c77bd433b139a548ce565632866da7fd39f892f8def2c9d7/password_strength-0.0.2-0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "480fc884064ae004cc708b3c342d1fdc",
        "sha256": "ac801b56138fbf225b335758356a0d20cb4e6bd8368f2a52430f2069f72bec55"
      },
      "downloads": 1592,
      "filename": "password_strength-0.0.2_0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "480fc884064ae004cc708b3c342d1fdc",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "size": 12759,
      "upload_time": "2014-08-14T16:38:50",
      "url": "https://files.pythonhosted.org/packages/d5/e3/193b3626b40802d369afb42ec409dfb574d8a26798b96fdb9a48f67f13fb/password_strength-0.0.2_0-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "97ae5aae09d1510704a48d5ae291d347",
        "sha256": "a78a402d85fbdaf506570f7eacb3ad60105cf4125f729747e71bfbf6795826bd"
      },
      "downloads": 1703,
      "filename": "password_strength-0.0.2-0.tar.gz",
      "has_sig": false,
      "md5_digest": "97ae5aae09d1510704a48d5ae291d347",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9645,
      "upload_time": "2014-08-14T16:38:46",
      "url": "https://files.pythonhosted.org/packages/b3/36/13d8343a4209c77bd433b139a548ce565632866da7fd39f892f8def2c9d7/password_strength-0.0.2-0.tar.gz"
    }
  ]
}