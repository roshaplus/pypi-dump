{
  "info": {
    "author": "Vikash Singh (vi3k6i5)",
    "author_email": "vikash.duliajan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "IN PROGRESS\n===========\n\nGuidedLDA: Guided Topic modeling with latent Dirichlet allocation\n====================================================\n\n``guidedlda`` implements latent Dirichlet allocation (LDA) using collapsed Gibbs\nsampling. ``guidedlda`` is fast and is tested on Linux, OS X, and Windows.\n\nYou can read more about lda in `the documentation <https://guidedlda.readthedocs.io>`_.\n\nInstallation\n------------\n\n``pip install guidedlda``\n\nGetting started\n---------------\n\n``guidedlda.LDA`` implements latent Dirichlet allocation (LDA). The interface follows\nconventions found in scikit-learn_.\n\nThe following demonstrates how to inspect a model of a subset of the Reuters\nnews dataset. The input below, ``X``, is a document-term matrix (sparse matrices\nare accepted).\n\n.. code-block:: python\n\n    >>> import numpy as np\n    >>> import guidedlda\n    \n    >>> X = guidedlda.datasets.load_data(guidedlda.datasets.NYT)\n    >>> vocab = guidedlda.datasets.load_vocab(guidedlda.datasets.NYT)\n    >>> word2id = dict((v, idx) for idx, v in enumerate(vocab))\n    \n    >>> X.shape\n    (8447, 3012)\n    \n    >>> X.sum()\n    1221626\n    \n    >>> model = guidedlda.GuidedLDA(n_topics=5, n_iter=100, random_state=7, refresh=20)\n    >>> model.fit(X)\n    >>> topic_word = model.topic_word_\n    >>> n_top_words = 8\n    INFO:guidedlda:n_documents: 8447\n    INFO:guidedlda:vocab_size: 3012\n    INFO:guidedlda:n_words: 1221626\n    INFO:guidedlda:n_topics: 5\n    INFO:guidedlda:n_iter: 100\n    WARNING:guidedlda:all zero column in document-term matrix found\n    INFO:guidedlda:<0> log likelihood: -11489265\n    INFO:guidedlda:<20> log likelihood: -9844667\n    INFO:guidedlda:<40> log likelihood: -9694223\n    INFO:guidedlda:<60> log likelihood: -9642506\n    INFO:guidedlda:<80> log likelihood: -9617962\n    INFO:guidedlda:<99> log likelihood: -9604031\n    \n    >>> for i, topic_dist in enumerate(topic_word):\n    >>>     topic_words = np.array(vocab)[np.argsort(topic_dist)][:-(n_top_words+1):-1]\n    >>>     print('Topic {}: {}'.format(i, ' '.join(topic_words)))\n    Topic 0: company percent market business plan pay price increase\n    Topic 1: game play team win player season second start\n    Topic 2: life child write man school woman father family\n    Topic 3: place open small house music turn large play\n    Topic 4: official state government political states issue leader case\n    \n    >>> seed_topic_list\n    >>> seed_topic_list = [['game', 'team', 'win', 'player', 'season', 'second', 'victory'],\n    >>>                    ['percent', 'company', 'market', 'price', 'sell', 'business', 'stock', 'share'],\n    >>>                   ['music', 'write', 'art', 'book', 'world', 'film'],\n    >>>                   ['political', 'government', 'leader', 'official', 'state', 'country', 'american','case', 'law', 'police', 'charge', 'officer', 'kill', 'arrest', 'lawyer']]\n    \n    >>> model = guidedlda.GuidedLDA(n_topics=5, n_iter=100, random_state=7, refresh=20)\n    \n    >>> seed_topics = {}\n    >>> for t_id, st in enumerate(seed_topic_list):\n    >>>     for word in st:\n    >>>         seed_topics[word2id[word]] = t_id\n    \n    >>> model.fit(X, seed_topics=seed_topics, seed_confidence=0.15)\n    INFO:guidedlda:n_documents: 8447\n    INFO:guidedlda:vocab_size: 3012\n    INFO:guidedlda:n_words: 1221626\n    INFO:guidedlda:n_topics: 5\n    INFO:guidedlda:n_iter: 100\n    WARNING:guidedlda:all zero column in document-term matrix found\n    INFO:guidedlda:<0> log likelihood: -11486362\n    INFO:guidedlda:<20> log likelihood: -9767277\n    INFO:guidedlda:<40> log likelihood: -9663718\n    INFO:guidedlda:<60> log likelihood: -9624150\n    INFO:guidedlda:<80> log likelihood: -9601684\n    INFO:guidedlda:<99> log likelihood: -9587803\n    \n    \n    >>> n_top_words = 10\n    >>> topic_word = model.topic_word_\n    >>> for i, topic_dist in enumerate(topic_word):\n    >>>     topic_words = np.array(vocab)[np.argsort(topic_dist)][:-(n_top_words+1):-1]\n    >>>     print('Topic {}: {}'.format(i, ' '.join(topic_words)))\n    Topic 0: game play team win season player second point start victory\n    Topic 1: company percent market price business sell executive pay plan sale\n    Topic 2: play life man music place write turn woman old book\n    Topic 3: official government state political leader states issue case member country\n    Topic 4: school child city program problem student state study family group\n\nThe document-topic distributions should be retrived as: ``doc_topic = model.transform(X)``.\n\n.. code-block:: python\n\n    >>> doc_topic = model.transform(X)\n    >>> for i in range(9):\n    >>>     print(\"top topic: {} Document: {}\".format(doc_topic[i].argmax(), \n                                                      ', '.join(np.array(vocab)[list(reversed(X[i,:].argsort()))[0:5]])))\n    top topic: 4 Document: plant, increase, food, increasingly, animal\n    top topic: 3 Document: explain, life, country, citizen, nation\n    top topic: 2 Document: thing, solve, problem, machine, carry\n    top topic: 2 Document: company, authority, opera, artistic, director\n    top topic: 3 Document: partner, lawyer, attorney, client, indict\n    top topic: 2 Document: roll, place, soon, treat, rating\n    top topic: 3 Document: city, drug, program, commission, report\n    top topic: 1 Document: company, comic, series, case, executive\n    top topic: 3 Document: son, scene, charge, episode, attack\n\nSave the model for production or for running later:\n\n.. code-block:: python\n    >>> from six.moves import cPickle as pickle\n    >>> # Uncomment next step if you want to lighten the model object\n    >>> # This step will delete some matrices inside the model.\n    >>> # you will be able to use model.transform(X) the same way as earlier.\n    >>> # you wont be able to use model.fit_transform(X_new)\n    >>> # model.purge_extra_matrices()\n    >>> with open('guidedlda_model.pickle', 'wb') as file_handle:\n    >>>     pickle.dump(model, file_handle)\n    >>> # load the model for prediction\n    >>> with open('guidedlda_model.pickle', 'rb') as file_handle:\n    >>>     model = pickle.load(file_handle)\n    >>> doc_topic = model.transform(X)\n\n\nRequirements\n------------\n\nPython 2.7 or Python 3.3+ is required. The following packages are required\n\n- numpy_\n- pbr_\n\nCaveat\n------\n\n``guidedlda`` aims for Guiding LDA. More often then not the topics we get from a LDA model are not to our setisfaction. GuidedLDA can give the topics a nudge in the direction we want it to converge. We have production trained it for half a million documents (We have a big machine). We have run predictions on millions and manually checked topics for thousands (we are sattisfied with the results).\n\nIf you are working with a very large corpus you may wish to use more sophisticated topic models such as those implemented in hca_ and MALLET_.  hca_ is written entirely in C and MALLET_ is written in Java. Unlike ``guidedlda``, hca_ can use more than one processor at a time. Both MALLET_ and hca_ implement topic models known to be more robust than standard latent Dirichlet allocation.\n\nNotes\n-----\n\nLatent Dirichlet allocation is described in `Blei et al. (2003)`_ and `Pritchard\net al. (2000)`_. Inference using collapsed Gibbs sampling is described in\n`Griffiths and Steyvers (2004)`_. And Guided LDA is described in `Jagadeesh Jagarlamudi, Hal Daume III and Raghavendra Udupa (2012)`_\n\n\nImportant links\n---------------\n\n- Documentation: http://guidedlda.readthedocs.org\n- Source code: https://github.com/vi3k6i5/guidedlda/\n- Issue tracker: https://github.com/vi3k6i5/guidedlda/issues\n\nOther implementations\n---------------------\n- scikit-learn_'s `LatentDirichletAllocation <http://scikit-learn.org/dev/modules/generated/sklearn.decomposition.LatentDirichletAllocation.html>`_ (uses online variational inference)\n- `gensim <https://pypi.python.org/pypi/gensim>`_ (uses online variational inference)\n\nCredits\n-------\nI would like to thank Creators of LDA project: https://github.com/lda-project/lda.\nI used the code from that LDA project as base to implement GuidedLDA on top of it.\nSpecial thanks to : https://twitter.com/ariddell, https://twitter.com/tdhopper :)\n\nLicense\n-------\n\nguidedlda is licensed under Version 2.0 of the Mozilla Public License.\n\n.. _Python: http://www.python.org/\n.. _scikit-learn: http://scikit-learn.org\n.. _hca: http://www.mloss.org/software/view/527/\n.. _MALLET: http://mallet.cs.umass.edu/\n.. _numpy: http://www.numpy.org/\n.. _pbr: https://pypi.python.org/pypi/pbr\n.. _Cython: http://cython.org\n.. _Blei et al. (2003): http://jmlr.org/papers/v3/blei03a.html\n.. _Pritchard et al. (2000): http://www.genetics.org/content/155/2/945.full\n.. _Griffiths and Steyvers (2004): http://www.pnas.org/content/101/suppl_1/5228.abstract\n.. _Jagadeesh Jagarlamudi Hal Daume III and Raghavendra Udupa (2012): http://www.umiacs.umd.edu/~jags/pdfs/GuidedLDA.pdf",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/vi3k6i5/GuidedLDA",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "guidedlda",
    "platform": "any",
    "project_url": "https://pypi.org/project/guidedlda/",
    "release_url": "https://pypi.org/project/guidedlda/1.5/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Run Guided LDA so topics are as per requirements.",
    "version": "1.5"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "618fd9fac16242220819346269939061",
          "sha256": "620681e7ba18656e5e2ead9b32abdd30971e2e280b6380c4d0e91a219dbd93d2"
        },
        "downloads": 0,
        "filename": "guidedlda-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "618fd9fac16242220819346269939061",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 122767,
        "upload_time": "2017-10-04T19:06:41",
        "url": "https://files.pythonhosted.org/packages/e3/a8/a15752091689cac79829e50cfd52f34989ea7befdd06bf9e7bfd736348eb/guidedlda-1.0.tar.gz"
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4f2522ddd0d76f8227a397082b2893a5",
          "sha256": "e038187784e513cb6caab88fc522d6dcecd8f8e6d26086123aacfeea13b0c3c8"
        },
        "downloads": 0,
        "filename": "guidedlda-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4f2522ddd0d76f8227a397082b2893a5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 123940,
        "upload_time": "2017-10-04T19:19:47",
        "url": "https://files.pythonhosted.org/packages/fd/c4/8fc9c679254c26e46a1cb2068fc48d64054eee8d96a6919dcf3c44a07ce9/guidedlda-1.1.tar.gz"
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9b1db17c83d09eb22c54801729fb2971",
          "sha256": "85b0953bad7d425c6507e1b90309c76fb0de709705b4134494bbee3ac0e6cc22"
        },
        "downloads": 0,
        "filename": "guidedlda-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9b1db17c83d09eb22c54801729fb2971",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 123940,
        "upload_time": "2017-10-04T19:21:20",
        "url": "https://files.pythonhosted.org/packages/26/dc/6fe1aafcba1a03d73b0f272f419d20b8e09544fca9ffd786e48fae3a06f3/guidedlda-1.2.tar.gz"
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d4449663866b6e108ce89e17c83d4ff0",
          "sha256": "2513f7ced254a98f385ddb8dba542009696ba910900f9235651c801f25776587"
        },
        "downloads": 0,
        "filename": "guidedlda-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d4449663866b6e108ce89e17c83d4ff0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 123967,
        "upload_time": "2017-10-04T19:27:33",
        "url": "https://files.pythonhosted.org/packages/ac/7d/ea5d319aef08d609d118071d3cb14dbe6b32f31580eae5a311cefcc8b8b8/guidedlda-1.3.tar.gz"
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a8b75d7c2b0b43d7dc376a7aa8740813",
          "sha256": "875cc3577aab962f5db6c00581d22791576d996bfda2648073c2f0804d2363e4"
        },
        "downloads": 0,
        "filename": "guidedlda-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a8b75d7c2b0b43d7dc376a7aa8740813",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 123975,
        "upload_time": "2017-10-04T19:28:34",
        "url": "https://files.pythonhosted.org/packages/56/62/1836f2bdf3a5f06f2afc703968f7173cea0bd3b8a8cf15ada91a50a8a348/guidedlda-1.4.tar.gz"
      }
    ],
    "1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "236feb4e08832b992a776da732478f6d",
          "sha256": "7d982bb0a955bcbd24703e0486b53a4ec57020a94ea4f3c4e0c8152b591d8848"
        },
        "downloads": 0,
        "filename": "guidedlda-1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "236feb4e08832b992a776da732478f6d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 123963,
        "upload_time": "2017-10-04T19:30:00",
        "url": "https://files.pythonhosted.org/packages/45/34/c81ff98271bb2745e9bbd4460a14106f70240736e96abc9d28402bd5c03a/guidedlda-1.5.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "236feb4e08832b992a776da732478f6d",
        "sha256": "7d982bb0a955bcbd24703e0486b53a4ec57020a94ea4f3c4e0c8152b591d8848"
      },
      "downloads": 0,
      "filename": "guidedlda-1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "236feb4e08832b992a776da732478f6d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 123963,
      "upload_time": "2017-10-04T19:30:00",
      "url": "https://files.pythonhosted.org/packages/45/34/c81ff98271bb2745e9bbd4460a14106f70240736e96abc9d28402bd5c03a/guidedlda-1.5.tar.gz"
    }
  ]
}