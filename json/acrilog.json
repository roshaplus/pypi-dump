{
  "info": {
    "author": "arnon",
    "author_email": "support@acrisel.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "========\nacrislog\n========\n\n----------------------\nMultiprocessing logger\n----------------------\n\n.. contents:: Table of Contents\n   :depth: 2\n\nOverview\n========\n\n    **acrilog** is a python library encapsulating multiprocessing logging into practical use.\n    \n    **acrilog** started as Acrisel's internal utility for programmers.\n    \n    It included:\n        1. Time and size rotating handler.\n        #. Multiprocessing logging queue server\n    \n    We decided to contribute this library to Python community as a token of appreciation to\n    what this community enables us.\n    \n    We hope that you will find this library useful and helpful as we find it.\n    \n    If you have comments or insights, please don't hesitate to contact us at support@acrisel.com\n    \n\nTimedSizedRotatingHandler\n=========================\n\t\n    Use TimedSizedRotatingHandler is combining TimedRotatingFileHandler with RotatingFileHandler.  \n    Usage as handler with logging is as defined in Python's logging how-to\n\t\nexample\n-------\n\n    .. code-block:: python\n\t\n        import logging\n\t\n        # create logger\n        logger = logging.getLogger('simple_example')\n        logger.setLevel(logging.DEBUG)\n\t\n        # create console handler and set level to debug\n        ch = logging.TimedRotatingFileHandler()\n        ch.setLevel(logging.DEBUG)\n\t\n        # create formatter\n        formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n\t\n        # add formatter to ch\n        ch.setFormatter(formatter)\n\t\n        # add ch to logger\n        logger.addHandler(ch)\n\t\n        # 'application' code\n        logger.debug('debug message')\n        logger.info('info message')\n        logger.warn('warn message')\n        logger.error('error message')\n        logger.critical('critical message')\t\n\nMpLogger and LevelBasedFormatter\n================================\n\n    Multiprocessor logger using QueueListener and QueueHandler\n    It uses TimedSizedRotatingHandler as its logging handler\n\n    It also uses acris provided LevelBasedFormatter which facilitate message formats\n    based on record level.  LevelBasedFormatter inherent from logging.Formatter and\n    can be used as such in customized logging handlers. \n\t\nexample\n-------\n\nWithin main process\n~~~~~~~~~~~~~~~~~~~\n\n    .. code-block:: python\n\t\n        import time\n        import random\n        import logging\n        from acris import MpLogger\n        import os\n        import multiprocessing as mp\n\n        def subproc(limit=1, logger_info=None):\n            logger=MpLogger.get_logger(logger_info, name=\"acrilog.subproc\", )\n    \t\tfor i in range(limit):\n                sleep_time=3/random.randint(1,10)\n                time.sleep(sleep_time)\n                logger.info(\"proc [%s]: %s/%s - sleep %4.4ssec\" % (os.getpid(), i, limit, sleep_time))\n\n        level_formats={logging.DEBUG:\"[ %(asctime)s ][ %(levelname)s ][ %(message)s ][ %(module)s.%(funcName)s(%(lineno)d) ]\",\n                        'default':   \"[ %(asctime)s ][ %(levelname)s ][ %(message)s ]\",\n                        }\n    \n        mplogger=MpLogger(logging_level=logging.DEBUG, level_formats=level_formats, datefmt='%Y-%m-%d,%H:%M:%S.%f')\n        logger=mplogger.start()\n\n        logger.debug(\"starting sub processes\")\n        procs=list()\n        for limit in [1, 1]:\n            proc=mp.Process(target=subproc, args=(limit, mplogger.logger_info(),))\n            procs.append(proc)\n            proc.start()\n    \n        for proc in procs:\n            if proc:\n                proc.join()\n    \n        logger.debug(\"sub processes completed\")\n\n        mplogger.stop()\t\n        \n    \nExample output\n--------------\n\n    .. code-block:: python\n\n        [ 2016-12-19,11:39:44.953189 ][ DEBUG ][ starting sub processes ][ mplogger.<module>(45) ]\n        [ 2016-12-19,11:39:45.258794 ][ INFO ][ proc [932]: 0/1 - sleep  0.3sec ]\n        [ 2016-12-19,11:39:45.707914 ][ INFO ][ proc [931]: 0/1 - sleep 0.75sec ]\n        [ 2016-12-19,11:39:45.710487 ][ DEBUG ][ sub processes completed ][ mplogger.<module>(56) ]\n     \n     \nChange History\n==============\n\n    0.9: added ability to pass logger_info to subprocess,\n         exposed encoding parameter,\n        \nNext Steps\n==========\n\n    1. Cluster support using TCP/IP \n    #. Logging monitor and alert",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Acrisel/acrilog",
    "keywords": "library logger multiprocessing",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "acrilog",
    "platform": "",
    "project_url": "https://pypi.org/project/acrilog/",
    "release_url": "https://pypi.org/project/acrilog/0.9.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "acrilog is a Python library of providing multiprocessing idiom to us in multiprocessing environment",
    "version": "0.9.2"
  },
  "releases": {
    "0.8.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6e49872fec777ce9c522f86f33bf30bc",
          "sha256": "c32b66838bc5cd1e14d9e6216d8984e7e202e2339662806ac13f1351172b35c5"
        },
        "downloads": 0,
        "filename": "acrilog-0.8.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6e49872fec777ce9c522f86f33bf30bc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 31834,
        "upload_time": "2017-04-28T17:57:37",
        "url": "https://files.pythonhosted.org/packages/9b/10/7a711d6eaa00011cca4ecc00353b5b6dec059b8882096a764878ef9ff7c6/acrilog-0.8.4.tar.gz"
      }
    ],
    "0.8.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "88d87476c6aa9c48319d0e8427869223",
          "sha256": "08456c9f56c5acaab20a03cf7317357b11e4266c5a894a1b7c73a2de8c82c130"
        },
        "downloads": 0,
        "filename": "acrilog-0.8.5.tar.gz",
        "has_sig": false,
        "md5_digest": "88d87476c6aa9c48319d0e8427869223",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9208,
        "upload_time": "2017-05-24T14:02:04",
        "url": "https://files.pythonhosted.org/packages/a8/36/8be4f72828565f65cc4085d732b1edf86e72f8879c31bafae8de610d46db/acrilog-0.8.5.tar.gz"
      }
    ],
    "0.8.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7ae5c770082b28fe51dcd371d1e88298",
          "sha256": "ab377bea8c1ae1287a6058e37a4f8a6fea14637d4f2a2b0af1345cac8c21b0d5"
        },
        "downloads": 0,
        "filename": "acrilog-0.8.6.tar.gz",
        "has_sig": false,
        "md5_digest": "7ae5c770082b28fe51dcd371d1e88298",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9206,
        "upload_time": "2017-05-26T19:41:13",
        "url": "https://files.pythonhosted.org/packages/8d/98/547c85bbdb1a50019b55b089894ba0bd455b5c94e4df5202b56c379736d0/acrilog-0.8.6.tar.gz"
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "08b10eaf9ac029b7f9c54cb8f4fb9a60",
          "sha256": "daa2896e215d23097c78702a7406df59d24049b89676b91e146f2c0d2ead30ed"
        },
        "downloads": 0,
        "filename": "acrilog-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "08b10eaf9ac029b7f9c54cb8f4fb9a60",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9697,
        "upload_time": "2017-05-26T23:04:29",
        "url": "https://files.pythonhosted.org/packages/f3/fd/2d370f9f2edac9dc351820acdf523dc93cd84c8996054fe9f1249de6572c/acrilog-0.9.0.tar.gz"
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "96ecb412463000978add03340a86123e",
          "sha256": "6b0c9ce82387f3199155dd3115e1bec07839bd2626eca9f23910d62353a0c494"
        },
        "downloads": 0,
        "filename": "acrilog-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "96ecb412463000978add03340a86123e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9718,
        "upload_time": "2017-05-28T14:10:30",
        "url": "https://files.pythonhosted.org/packages/c7/55/3f351519be74cfb6ceda3a4b4a758192c6259a01922233bfdc0121bd09fc/acrilog-0.9.1.tar.gz"
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e7a79c26432a68b7ebf640a4fa7b364d",
          "sha256": "8ea1cd4121e12bfa1c42e4042cdc02dc846eb5de8b80bdad42378002fcea9952"
        },
        "downloads": 0,
        "filename": "acrilog-0.9.2.tar.gz",
        "has_sig": true,
        "md5_digest": "e7a79c26432a68b7ebf640a4fa7b364d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10272,
        "upload_time": "2017-07-04T16:38:20",
        "url": "https://files.pythonhosted.org/packages/2b/71/887dfa75f11f72ec1090ef4e86e46680218bb3a75314ad80d53328ac05ac/acrilog-0.9.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e7a79c26432a68b7ebf640a4fa7b364d",
        "sha256": "8ea1cd4121e12bfa1c42e4042cdc02dc846eb5de8b80bdad42378002fcea9952"
      },
      "downloads": 0,
      "filename": "acrilog-0.9.2.tar.gz",
      "has_sig": true,
      "md5_digest": "e7a79c26432a68b7ebf640a4fa7b364d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 10272,
      "upload_time": "2017-07-04T16:38:20",
      "url": "https://files.pythonhosted.org/packages/2b/71/887dfa75f11f72ec1090ef4e86e46680218bb3a75314ad80d53328ac05ac/acrilog-0.9.2.tar.gz"
    }
  ]
}