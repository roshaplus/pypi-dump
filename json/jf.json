{
  "info": {
    "author": "Lasse Hyyrynen",
    "author_email": "leh@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "jf\n==\n\njf, aka json filter pipeline, is a jq-clone written in python. It\nsupports evaluation of python oneliners, making it especially appealing\nfor data scientists who are used to python.\n\nBasic usage\n===========\n\nFilter selected fields\n\n::\n\n    $ cat samples.jsonl | jf 'map({id: x.id, subject: x.fields.subject})'\n    {\"id\": \"87086895\", \"subject\": \"Swedish children stories\"}\n    {\"id\": \"87114792\", \"subject\": \"New Finnish storybooks\"}\n\nFilter selected items\n\n::\n\n    $ cat samples.jsonl | jf 'map({id: x.id, subject: x.fields.subject}), filter(x.id == \"87114792\")'\n    {\"id\": \"87114792\", \"subject\": \"New Finnish storybooks\"}\n\nFilter selected values\n\n::\n\n    $ cat samples.jsonl | jf 'map(x.id)'\n    \"87086895\"\n    \"87114792\"\n\nFilter items by age (and output yaml)\n\n::\n\n    $ cat samples.jsonl | jf 'map({id: x.id, datetime: x[\"content-datetime\"]}), filter(age(x.datetime) > age(\"456 days\")),\n            map(.update({age: age(x.datetime)}))' --indent=5 --yaml\n    age: 457 days, 4:07:54.932587\n    datetime: '2016-10-29 10:55:42+03:00'\n    id: '87086895'\n\nSort items by age and print their id, length and age\n\n::\n\n    $ cat samples.jsonl|jf 'map(x.update({age: age(x[\"content-datetime\"])})),\n            sorted(x.age),\n            map(.id, \"length: %d\" % len(.content), .age)' --indent=3 --yaml\n    - '14941692'\n    - 'length: 63'\n    - 184 days, 0:02:20.421829\n    - '90332110'\n    - 'length: 191'\n    - 215 days, 22:15:46.403613\n    - '88773908'\n    - 'length: 80'\n    - 350 days, 3:11:06.412088\n    - '14558799'\n    - 'length: 1228'\n    - 450 days, 6:30:54.419461\n    - '87182405'\n    - 'length: 251'\n\nImport your own modules and hide fields:\n\n::\n\n    $ cat test.json|jf --import demomodule --yaml 'map(x.update({id: x.sha})),\n            demomodule.timestamppipe(),\n            hide(\"sha\", \"committer\", \"parents\", \"html_url\", \"author\", \"commit\", \"comments_url\"),\n            islice(3,5)'\n    - Pipemod: was here at 2018-01-31 09:26:12.366465\n      id: f5f879dd7303c35fa3712586af1e7df884a5b98b\n      url: https://api.github.com/repos/alhoo/jf/commits/f5f879dd7303c35fa3712586af1e7df884a5b98b\n    - Pipemod: was here at 2018-01-31 09:26:12.368438\n      id: b393d09215efc4fc0382dd82ec3f38ae59a287e5\n      url: https://api.github.com/repos/alhoo/jf/commits/b393d09215efc4fc0382dd82ec3f38ae59a287e5\n\nRead yaml:\n\n::\n\n    $ cat test.yaml | jf --yamli 'map(x.update({id: x.sha, age: age(x.commit.author.date)})),\n            filter(x.age < age(\"1 days\"))' --indent=2 --yaml\n\nGroup duplicates (age is within the same hour):\n\n::\n\n    $ cat test.json|jf --import demomodule 'map(x.update({id: x.sha})),\n            sorted(.commit.author.date, reverse=True),\n            demomodule.DuplicateRemover(int(age(.commit.author.date).total_seconds()/3600),\n            group=1).process(lambda x: {\"duplicate\": x.id}),\n            map(list(map(lambda y: {age: age(y.commit.author.date),\n            id: y.id, date: y.commit.author.date, duplicate_of: y[\"duplicate\"], comment: y.commit.message}, x))),\n            first(2)'\n    [\n      {\n        \"comment\": \"Add support for hiding fields\",\n        \"duplicate_of\": null,\n        \"id\": \"f8ba0ba559e39611bc0b63f236a3e67085fe8b40\",\n        \"age\": \"16:19:00.102299\",\n        \"date\": \"2018-01-30 19:25:30+00:00\"\n      },\n      {\n        \"comment\": \"Enhance error handling\",\n        \"duplicate_of\": \"f8ba0ba559e39611bc0b63f236a3e67085fe8b40\",\n        \"id\": \"d3211e1141d8b2bf480cbbebd376b57bae9d8bdf\",\n        \"age\": \"16:46:58.104188\",\n        \"date\": \"2018-01-30 18:57:32+00:00\"\n      }\n    ]\n    [\n      {\n        \"comment\": \"Reduce verbosity when debugging\",\n        \"duplicate_of\": null,\n        \"id\": \"f5f879dd7303c35fa3712586af1e7df884a5b98b\",\n        \"age\": \"19:26:00.106777\",\n        \"date\": \"2018-01-30 16:18:30+00:00\"\n      },\n      {\n        \"comment\": \"Print help if no input is given\",\n        \"duplicate_of\": \"f5f879dd7303c35fa3712586af1e7df884a5b98b\",\n        \"id\": \"b393d09215efc4fc0382dd82ec3f38ae59a287e5\",\n        \"age\": \"19:35:16.108654\",\n        \"date\": \"2018-01-30 16:09:14+00:00\"\n      }\n    ]\n\nInstalling\n==========\n\n::\n\n    pip install git+https://github.com/alhoo/jf\n\nFeatures\n========\n\n-  json, jsonl and yaml files for input and output\n-  construct generator pipeline with map, hide, filter\n-  access json dict as classes with dot-notation for attributes\n-  datetime and timedelta comparison\n-  age() for timedelta between datetime and current time\n-  first(N), last(N), islice(start, stop, step)\n-  import your own modules for more complex filtering\n-  Support stateful classes for complex interactions between items\n\nKnown bugs\n==========\n\n-  Datetime-recognition is crude and will probably make mistakes\n",
    "docs_url": null,
    "download_url": "https://github.com/alhoo/jf/archive/0.3.3.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/alhoo/jf",
    "keywords": "json",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jf",
    "platform": "",
    "project_url": "https://pypi.org/project/jf/",
    "release_url": "https://pypi.org/project/jf/0.3.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Python jsonl query engine",
    "version": "0.3.3"
  },
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3d8342c5e2411dbcc5e0bf3af179f2bf",
          "sha256": "3ece8c794f2f4c53bba114f4cdc1601846c97d3d992abec7ef9a37f2b01b884f"
        },
        "downloads": -1,
        "filename": "jf-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3d8342c5e2411dbcc5e0bf3af179f2bf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9958,
        "upload_time": "2018-01-31T21:48:39",
        "url": "https://files.pythonhosted.org/packages/0c/72/016b2ab40e93e592d513e025b1ccd938627e7f7b4273115fee31cc28221a/jf-0.3.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4dad0debe8a9ad352f544e1cade3410d",
          "sha256": "7486133f149b8f391db5abbdfabb19bf06d07cd75ce34067dad7ee618ab0acf7"
        },
        "downloads": -1,
        "filename": "jf-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4dad0debe8a9ad352f544e1cade3410d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11669,
        "upload_time": "2018-01-31T22:07:21",
        "url": "https://files.pythonhosted.org/packages/60/39/e54d872b25ba4810b04d8af5d35bedbf291efa6392e79453ce8f4e1b6160/jf-0.3.1.tar.gz"
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c7a3e95b1cbee9b7ccd19ea6ef0a5edf",
          "sha256": "29db45441b5511a732f101fab94b86be0580f834c98c22f72a92caeb139b5811"
        },
        "downloads": -1,
        "filename": "jf-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c7a3e95b1cbee9b7ccd19ea6ef0a5edf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11661,
        "upload_time": "2018-01-31T22:13:47",
        "url": "https://files.pythonhosted.org/packages/66/1d/54884cd09b81568fd3ae72737a560b28476976d6bcfe9621f4fe0fa1b3b0/jf-0.3.2.tar.gz"
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "964bcd087559685207b65ca0cf5d8549",
          "sha256": "f28795ae04561fe7fb24a9340802d49d7ecfa132c977598adf1628d46a04796b"
        },
        "downloads": -1,
        "filename": "jf-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "964bcd087559685207b65ca0cf5d8549",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12112,
        "upload_time": "2018-02-01T05:20:55",
        "url": "https://files.pythonhosted.org/packages/88/29/991dca65b9e59562e877fec2759bc83ea1c4627a5f48b6c6ff1604fea060/jf-0.3.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "964bcd087559685207b65ca0cf5d8549",
        "sha256": "f28795ae04561fe7fb24a9340802d49d7ecfa132c977598adf1628d46a04796b"
      },
      "downloads": -1,
      "filename": "jf-0.3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "964bcd087559685207b65ca0cf5d8549",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 12112,
      "upload_time": "2018-02-01T05:20:55",
      "url": "https://files.pythonhosted.org/packages/88/29/991dca65b9e59562e877fec2759bc83ea1c4627a5f48b6c6ff1604fea060/jf-0.3.3.tar.gz"
    }
  ]
}