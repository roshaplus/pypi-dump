{
  "info": {
    "author": "Bharath Ramsundar, Evan Feinberg, Pande Lab Stanford",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\ufeff# DeepChem\n[![Build Status](https://travis-ci.org/deepchem/deepchem.svg?branch=master)](https://travis-ci.org/deepchem/deepchem)\n[![Coverage Status](https://coveralls.io/repos/github/deepchem/deepchem/badge.svg?branch=master)](https://coveralls.io/github/deepchem/deepchem?branch=master)\n[![Anaconda-Server Badge](https://anaconda.org/deepchem/deepchem/badges/version.svg)](https://anaconda.org/deepchem/deepchem)\n[![PyPI version](https://badge.fury.io/py/deepchem.svg)](https://badge.fury.io/py/deepchem)\n\n\nDeepChem aims to provide a high quality open-source toolchain that\ndemocratizes the use of deep-learning in drug discovery, materials science, quantum chemistry, and biology.\n\n### Table of contents:\n\n* [Requirements](#requirements)\n* [Installation](#installation)\n    * [Conda Environment](#using-a-conda-environment)\n    * [Direct from Source](#installing-dependencies-manually)\n    * [Docker](#using-a-docker-image)\n* [FAQ](#faq)\n* [Getting Started](#getting-started)\n    * [Input Formats](#input-formats)\n    * [Data Featurization](#data-featurization)\n    * [Performances](#performances)\n* [Contributing to DeepChem](#contributing-to-deepchem)\n    * [Code Style Guidelines](#code-style-guidelines)\n    * [Documentation Style Guidelines](#documentation-style-guidelines)\n    * [Gitter](#gitter)\n* [DeepChem Publications](#deepchem-publications)\n* [Corporate Supporters](#corporate-supporters)\n    * [Schr\u00f6dinger](#schr\u00f6dinger)\n    * [DeepCrystal](#deep-crystal)\n* [Examples](/examples)\n* [About Us](#about-us)\n\n## Requirements\n* [pandas](http://pandas.pydata.org/)\n* [rdkit](http://www.rdkit.org/docs/Install.html)\n* [boost](http://www.boost.org/)\n* [joblib](https://pypi.python.org/pypi/joblib)\n* [sklearn](https://github.com/scikit-learn/scikit-learn.git)\n* [numpy](https://store.continuum.io/cshop/anaconda/)\n* [six](https://pypi.python.org/pypi/six)\n* [mdtraj](http://mdtraj.org/)\n* [tensorflow](https://www.tensorflow.org/)\n\n## Installation\n\n```deepchem``` currently supports both Python 2.7 and Python 3.5, and is supported on 64 bit Linux and Mac OSX. Please make sure you follow the directions below precisely. While you may already have system versions of some of our dependencies, there is no guarantee that `deepchem` will work with alternate versions than those specified below.\n\nNote that when using Ubuntu 16.04 server or similar environments, you may need to ensure libxrender is provided via e.g.:\n```bash\nsudo apt-get install -y libxrender-dev\n```\n\n### Using a conda environment\nYou can install deepchem in a new conda environment using the conda commands in scripts/install_deepchem_conda.sh\n\n```bash\ngit clone https://github.com/deepchem/deepchem.git      # Clone deepchem source code from GitHub\ncd deepchem\nbash scripts/install_deepchem_conda.sh deepchem\nsource activate deepchem\nyes | pip install tensorflow-gpu==1.4.0      # If you want GPU support\npython setup.py install                                # Manual install\nnosetests -a '!slow' -v deepchem --nologcapture        # Run tests\n```\nThis creates a new conda environment `deepchem` and installs in it the dependencies that\nare needed. To access it, use the `source activate deepchem` command.\nCheck [this link](https://conda.io/docs/using/envs.html) for more information about\nthe benefits and usage of conda environments. **Warning**: Segmentation faults can [still happen](https://github.com/deepchem/deepchem/pull/379#issuecomment-277013514)\nvia this installation procedure.\n\n### Easy Install via Conda\n```bash\nconda install -c deepchem -c rdkit -c conda-forge -c omnia deepchem=1.3.1\n```\n\n### Using a Docker Image\nUsing a docker image requires an NVIDIA GPU.  If you do not have a GPU please follow the directions for [using a conda environment](#using-a-conda-environment)\nIn order to get GPU support you will have to use the [nvidia-docker](https://github.com/NVIDIA/nvidia-docker) plugin.\n``` bash\n# This will the download the latest stable deepchem docker image into your images\ndocker pull deepchemio/deepchem\n\n# This will create a container out of our latest image with GPU support\nnvidia-docker run -i -t deepchemio/deepchem\n\n# You are now in a docker container whose python has deepchem installed\n# For example you can run our tox21 benchmark\ncd deepchem/examples\npython benchmark.py -d tox21\n\n# Or you can start playing with it in the command line\npip install jupyter\nipython\nimport deepchem as dc\n```\n\n## FAQ\n1. Question: I'm seeing some failures in my test suite having to do with MKL\n   ```Intel MKL FATAL ERROR: Cannot load libmkl_avx.so or libmkl_def.so.```\n\n   Answer: This is a general issue with the newest version of `scikit-learn` enabling MKL by default. This doesn't play well with many linux systems. See [BVLC/caffe#3884](https://github.com/BVLC/caffe/issues/3884) for discussions. The following seems to fix the issue\n   ```bash\n   conda install nomkl numpy scipy scikit-learn numexpr\n   conda remove mkl mkl-service\n   ```\n\n## Getting Started\nTwo good tutorials to get started are [Graph Convolutional Networks](https://deepchem.io/docs/notebooks/graph_convolutional_networks_for_tox21.html) and [Multitask_Networks_on_MUV](https://deepchem.io/docs/notebooks/Multitask_Networks_on_MUV.html). Follow along with the tutorials to see how to predict properties on molecules using neural networks.\n\nAfterwards you can go through other [tutorials](https://deepchem.io/docs/notebooks/index.html), and look through our examples in the `examples` directory. To apply `deepchem` to a new problem, try starting from one of the existing examples or tutorials and modifying it step by step to work with your new use-case. If you have questions or comments you can raise them on our [gitter](https://gitter.im/deepchem/Lobby).\n\n### Input Formats\nAccepted input formats for deepchem include csv, pkl.gz, and sdf files. For\nexample, with a csv input, in order to build models, we expect the\nfollowing columns to have entries for each row in the csv file.\n\n1. A column containing SMILES strings [1].\n2. A column containing an experimental measurement.\n3. (Optional) A column containing a unique compound identifier.\n\nHere's an example of a potential input file.\n\n|Compound ID    | measured log solubility in mols per litre | smiles         |\n|---------------|-------------------------------------------|----------------|\n| benzothiazole | -1.5                                      | c2ccc1scnc1c2  |\n\n\nHere the \"smiles\" column contains the SMILES string, the \"measured log\nsolubility in mols per litre\" contains the experimental measurement and\n\"Compound ID\" contains the unique compound identifier.\n\n[2] Anderson, Eric, Gilman D. Veith, and David Weininger. \"SMILES, a line\nnotation and computerized interpreter for chemical structures.\" US\nEnvironmental Protection Agency, Environmental Research Laboratory, 1987.\n\n### Data Featurization\n\nMost machine learning algorithms require that input data form vectors.\nHowever, input data for drug-discovery datasets routinely come in the\nformat of lists of molecules and associated experimental readouts. To\ntransform lists of molecules into vectors, we need to subclasses of DeepChem\nloader class ```dc.data.DataLoader``` such as ```dc.data.CSVLoader``` or\n```dc.data.SDFLoader```. Users can subclass ```dc.data.DataLoader``` to\nload arbitrary file formats. All loaders must be\npassed a ```dc.feat.Featurizer``` object. DeepChem provides a number of\ndifferent subclasses of ```dc.feat.Featurizer``` for convenience.\n\n### Performances\nIn depth performance tables for DeepChem models are available on [MoleculeNet.ai](https://moleculenet.ai)\n\n### Gitter\nJoin us on gitter at [https://gitter.im/deepchem/Lobby](https://gitter.im/deepchem/Lobby). Probably the easiest place to ask simple questions or float requests for new features.\n\n## DeepChem Publications\n1. [Computational Modeling of \u03b2-secretase 1 (BACE-1) Inhibitors using\nLigand Based\nApproaches](http://pubs.acs.org/doi/abs/10.1021/acs.jcim.6b00290)\n2. [Low Data Drug Discovery with One-Shot Learning](http://pubs.acs.org/doi/abs/10.1021/acscentsci.6b00367)\n3. [MoleculeNet: A Benchmark for Molecular Machine Learning](https://arxiv.org/abs/1703.00564)\n4. [Atomic Convolutional Networks for Predicting Protein-Ligand Binding Affinity](https://arxiv.org/abs/1703.10603)\n\n## About Us\nDeepChem is possible due to notable contributions from many people including Peter Eastman, Evan Feinberg, Joe Gomes, Karl Leswing, Vijay Pande, Aneesh Pappu, Bharath Ramsundar and Michael Wu (alphabetical ordering).  DeepChem was originally created by [Bharath Ramsundar](http://rbharath.github.io/) with encouragement and guidance from [Vijay Pande](https://pande.stanford.edu/).\n\nDeepChem started as a [Pande group](https://pande.stanford.edu/) project at Stanford, and is now developed by many academic and industrial collaborators. DeepChem actively encourages new academic and industrial groups to contribute!\n\n## Corporate Supporters\nDeepChem is supported by a number of corporate partners who use DeepChem to solve interesting problems.\n\n### Schr\u00f6dinger\n[![Sch\u00f6dinger](https://github.com/deepchem/deepchem/blob/master/docs/source/_static/schrodinger_logo.png)](https://www.schrodinger.com/)\n\n> DeepChem has transformed how we think about building QSAR and QSPR models when very large data sets are available; and we are actively using DeepChem to investigate how to best combine the power of deep learning with next generation physics-based scoring methods.\n\n### DeepCrystal\n<img src=\"https://github.com/deepchem/deepchem/blob/master/docs/source/_static/deep_crystal_logo.png\" alt=\"DeepCrystal Logo\" height=150px/>\n\n> DeepCrystal was an early adopter of DeepChem, which we now rely on to abstract away some of the hardest pieces of deep learning in drug discovery. By open sourcing these efficient implementations of chemically / biologically aware deep-learning systems, DeepChem puts the latest research into the hands of the scientists that need it, materially pushing forward the field of in-silico drug discovery in the process.\n\n\n## Version\n1.3.1",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/pandegroup/deepchem",
    "keywords": "setup",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deepchem",
    "platform": "",
    "project_url": "https://pypi.org/project/deepchem/",
    "release_url": "https://pypi.org/project/deepchem/1.3.2.dev290/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Deep-learning models for drug discovery and quantum chemistry",
    "version": "1.3.2.dev290"
  },
  "releases": {
    "1.3.2.dev290": [
      {
        "comment_text": "",
        "digests": {
          "md5": "76dcd338b4ae5f004cd682eb33dd9f8d",
          "sha256": "7363c5ae05dbeb18020725f3be6261903b4eab8ef179aeb48fe5f672f4d71aca"
        },
        "downloads": -1,
        "filename": "deepchem-1.3.2.dev290.tar.gz",
        "has_sig": false,
        "md5_digest": "76dcd338b4ae5f004cd682eb33dd9f8d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3690364,
        "upload_time": "2018-01-29T15:30:27",
        "url": "https://files.pythonhosted.org/packages/38/68/547ef019e9d565815f47aa882cdfc0c339d29acf6ca9c569a7b24ca27d6b/deepchem-1.3.2.dev290.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "76dcd338b4ae5f004cd682eb33dd9f8d",
        "sha256": "7363c5ae05dbeb18020725f3be6261903b4eab8ef179aeb48fe5f672f4d71aca"
      },
      "downloads": -1,
      "filename": "deepchem-1.3.2.dev290.tar.gz",
      "has_sig": false,
      "md5_digest": "76dcd338b4ae5f004cd682eb33dd9f8d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3690364,
      "upload_time": "2018-01-29T15:30:27",
      "url": "https://files.pythonhosted.org/packages/38/68/547ef019e9d565815f47aa882cdfc0c339d29acf6ca9c569a7b24ca27d6b/deepchem-1.3.2.dev290.tar.gz"
    }
  ]
}