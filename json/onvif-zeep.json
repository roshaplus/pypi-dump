{
  "info": {
    "author": "sinchb",
    "author_email": "sinchb128@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "python-onvif-zeep\n============\n\nONVIF Client Implementation in Python\n\nDependencies\n------------\n`zeep <http://docs.python-zeep.org>`_ >= 2.2.0\n\nInstall python-onvif-zeep\n-------------------------\n**From Source**\n\nYou should clone this repository and run setup.py::\n\n    cd python-onvif-zeep && python setup.py install\n\nAlternatively, you can run::\n\n    pip install --upgrade onvif_zeep\n\n\nGetting Started\n---------------\n\nInitialize an ONVIFCamera instance\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    from onvif import ONVIFCamera\n    mycam = ONVIFCamera('192.168.0.2', 80, 'user', 'passwd', '/etc/onvif/wsdl/')\n\nNow, an ONVIFCamera instance is available. By default, a devicemgmt service is also available if everything is OK.\n\nSo, all operations defined in the WSDL document::\n\n/etc/onvif/wsdl/devicemgmt.wsdl\n\nare available.\n\nGet information from your camera\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n::\n\n    # Get Hostname\n    resp = mycam.devicemgmt.GetHostname()\n    print 'My camera`s hostname: ' + str(resp.Name)\n\n    # Get system date and time\n    dt = mycam.devicemgmt.GetSystemDateAndTime()\n    tz = dt.TimeZone\n    year = dt.UTCDateTime.Date.Year\n    hour = dt.UTCDateTime.Time.Hour\n\nConfigure (Control) your camera\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo configure your camera, there are two ways to pass parameters to service methods.\n\n**Dict**\n\nThis is the simpler way::\n\n    params = {'Name': 'NewHostName'}\n    device_service.SetHostname(params)\n\n**Type Instance**\n\nThis is the recommended way. Type instance will raise an\nexception if you set an invalid (or non-existent) parameter.\n\n::\n\n    params = mycam.devicemgmt.create_type('SetHostname')\n    params.Hostname = 'NewHostName'\n    mycam.devicemgmt.SetHostname(params)\n\n    time_params = mycam.devicemgmt.create_type('SetSystemDateAndTime')\n    time_params.DateTimeType = 'Manual'\n    time_params.DaylightSavings = True\n    time_params.TimeZone.TZ = 'CST-8:00:00'\n    time_params.UTCDateTime.Date.Year = 2014\n    time_params.UTCDateTime.Date.Month = 12\n    time_params.UTCDateTime.Date.Day = 3\n    time_params.UTCDateTime.Time.Hour = 9\n    time_params.UTCDateTime.Time.Minute = 36\n    time_params.UTCDateTime.Time.Second = 11\n    mycam.devicemgmt.SetSystemDateAndTime(time_params)\n\nUse other services\n~~~~~~~~~~~~~~~~~~\nONVIF protocol has defined many services.\nYou can find all the services and operations `here <http://www.onvif.org/onvif/ver20/util/operationIndex.html>`_.\nONVIFCamera has support methods to create new services::\n\n    # Create ptz service\n    ptz_service = mycam.create_ptz_service()\n    # Get ptz configuration\n    mycam.ptz.GetConfiguration()\n    # Another way\n    # ptz_service.GetConfiguration()\n\nOr create an unofficial service::\n\n    xaddr = 'http://192.168.0.3:8888/onvif/yourservice'\n    yourservice = mycam.create_onvif_service('service.wsdl', xaddr, 'yourservice')\n    yourservice.SomeOperation()\n    # Another way\n    # mycam.yourservice.SomeOperation()\n\nONVIF CLI\n---------\npython-onvif also provides a command line interactive interface: onvif-cli.\nonvif-cli is installed automatically.\n\nSingle command example\n~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    $ onvif-cli devicemgmt GetHostname --user 'admin' --password '12345' --host '192.168.0.112' --port 80\n    True: {'FromDHCP': True, 'Name': hision}\n    $ onvif-cli devicemgmt SetHostname \"{'Name': 'NewerHostname'}\" --user 'admin' --password '12345' --host '192.168.0.112' --port 80\n    True: {}\n\nInteractive mode\n~~~~~~~~~~~~~~~~\n\n::\n\n    $ onvif-cli -u 'admin' -a '12345' --host '192.168.0.112' --port 80 --wsdl /etc/onvif/wsdl/\n    ONVIF >>> cmd\n    analytics   devicemgmt  events      imaging     media       ptz\n    ONVIF >>> cmd devicemgmt GetWsdlUrl\n    True: http://www.onvif.org/\n    ONVIF >>> cmd devicemgmt SetHostname {'Name': 'NewHostname'}\n    ONVIF >>> cmd devicemgmt GetHostname\n    True: {'Name': 'NewHostName'}\n    ONVIF >>> cmd devicemgmt SomeOperation\n    False: No Operation: SomeOperation\n\nNOTE: Tab completion is supported for interactive mode.\n\nBatch mode\n~~~~~~~~~~\n\n::\n\n    $ vim batchcmds\n    $ cat batchcmds\n    cmd devicemgmt GetWsdlUrl\n    cmd devicemgmt SetHostname {'Name': 'NewHostname', 'FromDHCP': True}\n    cmd devicemgmt GetHostname\n    $ onvif-cli --host 192.168.0.112 -u admin -a 12345 -w /etc/onvif/wsdl/ < batchcmds\n    ONVIF >>> True: http://www.onvif.org/\n    ONVIF >>> True: {}\n    ONVIF >>> True: {'FromDHCP': False, 'Name': NewHostname}\n\nReferences\n----------\n\n* `ONVIF Offical Website <http://www.onvif.com>`_\n\n* `Operations Index <http://www.onvif.org/onvif/ver20/util/operationIndex.html>`_\n\n* `ONVIF Develop Documents <http://www.onvif.org/specs/DocMap-2.4.2.html>`_\n\n* `Foscam Python Lib <http://github.com/quatanium/foscam-python-lib>`_",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/quatanium/python-onvif",
    "keywords": "ONVIF,Camera,IPC",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "onvif-zeep",
    "platform": "",
    "project_url": "https://pypi.org/project/onvif-zeep/",
    "release_url": "https://pypi.org/project/onvif-zeep/0.2.7/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Python Client for ONVIF Camera",
    "version": "0.2.7"
  },
  "releases": {
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2fb9e53819abfe97068f358bf97fb207",
          "sha256": "d766936082dda0ae5d276179020499de63bc33a7d78e80f45252ff1e0b524332"
        },
        "downloads": 0,
        "filename": "onvif_zeep-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "2fb9e53819abfe97068f358bf97fb207",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 163759,
        "upload_time": "2017-09-22T10:01:54",
        "url": "https://files.pythonhosted.org/packages/44/01/1a27632cca21e2a84507e801776cd1994e4e4c278eb2c39595e4ff83ace0/onvif_zeep-0.2.7.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2fb9e53819abfe97068f358bf97fb207",
        "sha256": "d766936082dda0ae5d276179020499de63bc33a7d78e80f45252ff1e0b524332"
      },
      "downloads": 0,
      "filename": "onvif_zeep-0.2.7.tar.gz",
      "has_sig": false,
      "md5_digest": "2fb9e53819abfe97068f358bf97fb207",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 163759,
      "upload_time": "2017-09-22T10:01:54",
      "url": "https://files.pythonhosted.org/packages/44/01/1a27632cca21e2a84507e801776cd1994e4e4c278eb2c39595e4ff83ace0/onvif_zeep-0.2.7.tar.gz"
    }
  ]
}