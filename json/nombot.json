{
  "info": {
    "author": "Bobby",
    "author_email": "karma0@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "nombot\n======\n\nA flexible cryptocurrency trading bot written in Python.\n\nDependencies\n------------\n\nSome assumptions are made that you are familiar with Python and operate\nin Linux. There is currently no way to test on Windows or Apple\noperating systems, and while you may use the OTS strategies that come\nwith this repository, in order to expand on your strategy development\ntime is a likely requirement.\n\nIf you are able to use ``docker``, this will solve the first problem. If\nyou are able to pay for development services, that will solve the\nsecond.\n\nPython Dependencies\n~~~~~~~~~~~~~~~~~~~\n\n-  Python 3.6+ is assumed\n-  ``requests``\n-  ``numpy``\n-  ``pandas``\n-  ``marshmallow`` for message passing, validation, and API message\n   object definition.\n\nKey Features\n------------\n\nExchanges\n~~~~~~~~~\n\n-  Extensible for any exchange *(currently only supports coinigy)*.\n-  Exchange helper facilities; \\_connection pooling, websockets, shared\n   contexts.\n-  Mutiple exchange connectivity allowing for arbitrage.\n-  Strive toward dynamic, forward-compatible interfaces.\n\nCurrencies\n~~~~~~~~~~\n\n*(coming soon)* \\* All currencies possible (with some configuration). \\*\nStrive towards forward-compatible; *if the exchange supports it, it will\nwork*. \\* Wallet support, allowing for automated coin transfers.\n*(coming soon)*\n\nAlgorithms\n~~~~~~~~~~\n\n-  Implementation is independent of strategy, allowing for maximal\n   reuse, flexibility, and enforcing DRY principles.\n-  Can be developed to an interface using ``grpc`` and ``protobuf``, for\n   example.\n-  Integrated support for NumPy Arrays and Pandas DataFrames\n   (implemented at the strategy level).\n\nStrategies\n~~~~~~~~~~\n\n-  \"Plugable\" *strategy* architecture using ``IStrategy`` inheritance.\n-  \"Stackable\" architecture allows you to isolate grouped functionality\n   for reuse.\n-  Utilizes a middleware pipeline for processing.\n-  Shared context objects allow for maximum versatility in complex\n   scenarios.\n-  Utilization of algorithms as backend functional libraries (strategy\n   equates to \"business logic\").\n-  Automatic configuration pass-through.\n\nConfiguration\n~~~~~~~~~~~~~\n\n-  Flexible modularized configuration using JSON.\n-  C-style comment support.\n-  Configuration objects are protected immutable, using ``namedtuple``\n   containers.\n-  Configuration object parameters exist as object attributes:\n   ``conf.var1``.\n-  Configuration is namespaced, allowing for hierarchical configuration\n   passthrough.\n\nSecurity\n~~~~~~~~\n\n-  Namespaced immutable configuration will greatly reduce your chance of\n   information leakage and manipulation.\n-  File system storage & security (requires careful consideration of\n   file permissions; see install notes below).\n\nComing soon...\n~~~~~~~~~~~~~~\n\n-  GRPC strategy to allow parallel processing in microservices\n   environments.\n-  API expansion to World Coin Market's top-20 exchanges.\n-  Backtesting and supporting documentation.\n-  Database integration.\n-  More documentation around creating exchanges, algorithms, and\n   strategies.\n-  Tests, tests, tests!\n\nSetup\n-----\n\nInstallation\n~~~~~~~~~~~~\n\n.. code:: bash\n\n    git clone https://github.com/karma0/nombot.git nombot && cd $_\n    pip install requests numpy pandas\n\nUpgrading to the latest\n~~~~~~~~~~~~~~~~~~~~~~~\n\nThe ``master`` branch will contain the latest release. ``develop`` will\ncontain the latest development release and may break things.\n\n.. code:: bash\n\n    git pull\n\nConfiguration\n~~~~~~~~~~~~~\n\n1. Create your strategy class, using any available algorithms, or\n   creating your own algorithms.\n2. Copy ``config.json.example`` to ``config.json`` and execute\n   ``chmod 600 config.json``.\n3. Change the configuration required for your strategy, exchange(s), API\n   calls, etc. based on the examples.\n\nExecution\n~~~~~~~~~\n\n.. code:: bash\n\n    ./trader.py\n\nContributing\n------------\n\nOptions: 1. Follow the instructions here:\nhttps://help.github.com/articles/fork-a-repo/ 2. Submit an issue or\nfeature request\n`here <https://help.github.com/articles/fork-a-repo/>`__.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/karma0/nombot.git",
    "keywords": "cryptocurrency trading",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nombot",
    "platform": "",
    "project_url": "https://pypi.org/project/nombot/",
    "release_url": "https://pypi.org/project/nombot/1.0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A cryptocurrency trading framework",
    "version": "1.0.1"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6da0e8ca4803a305b28dc9ad572e418f",
          "sha256": "cebee78c34a4ba18754af0e54f5e1e5633421fa99f2097bf18b8bd8b5e726f26"
        },
        "downloads": -1,
        "filename": "nombot-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6da0e8ca4803a305b28dc9ad572e418f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 35094,
        "upload_time": "2018-01-31T06:33:57",
        "url": "https://files.pythonhosted.org/packages/0c/8b/01117443fffdca01f50d98eeba3d2d4398d84eae1735f35ad40df14ac28e/nombot-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9d87f27f1b2fa4ca6939f3de366090c6",
          "sha256": "56d8d4aaa06d8fda9701a3243d09da8f4c00e612f6281ec3368bac09fd17b85b"
        },
        "downloads": -1,
        "filename": "nombot-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9d87f27f1b2fa4ca6939f3de366090c6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 35667,
        "upload_time": "2018-02-07T06:21:33",
        "url": "https://files.pythonhosted.org/packages/96/fe/40e731eb22b5f120506e257a82fd418ce3b04303b034c3cc16c87734c04e/nombot-1.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9d87f27f1b2fa4ca6939f3de366090c6",
        "sha256": "56d8d4aaa06d8fda9701a3243d09da8f4c00e612f6281ec3368bac09fd17b85b"
      },
      "downloads": -1,
      "filename": "nombot-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9d87f27f1b2fa4ca6939f3de366090c6",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 35667,
      "upload_time": "2018-02-07T06:21:33",
      "url": "https://files.pythonhosted.org/packages/96/fe/40e731eb22b5f120506e257a82fd418ce3b04303b034c3cc16c87734c04e/nombot-1.0.1.tar.gz"
    }
  ]
}