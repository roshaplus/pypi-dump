{
  "info": {
    "author": "Craig Weber",
    "author_email": "crgwbr@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Environment :: Console",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: ISC License (ISCL)",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "===============================\nDjango LogPipe\n===============================\n\n|  |license| |kit| |format| |downloads|\n\nThis library serves as a universal pipe for moving data around between Django applications and services. It is build on\ntop of `Apache Kafka`_, `kafka-python`_, and `Django REST Framework`_.\n\n.. _`Apache Kafka`: https://kafka.apache.org/\n.. _`kafka-python`: https://github.com/dpkp/kafka-python\n.. _`Django REST Framework`: http://www.django-rest-framework.org/\n\n\nInstallation\n============\n\nInstall `django-logpipe` from pip.::\n\n    $ pip install django-logpipe\n\nAdd `logpipe` to your installed apps.::\n\n    INSTALLED_APPS = [\n        ...\n        'logpipe',\n        ...\n    ]\n\nAdd connection settings to your `settings.py` file.::\n\n    KAFKA = {\n        'BOOTSTRAP_SERVERS': [\n            'kafka:9092'\n        ],\n    }\n\nRun migrations. This will create the model used to store Kafka log position offsets.::\n\n    $ python manage.py migrate logpipe\n\nUsage\n=====\n\nSerializers\n-----------\n\nThe first step in either sending or receiving messages with `logpipe` is to define a serializer. Serializers for `logpipe` have a few rules:\n\n1. Must be either a subclass of `rest_framework.serializers.Serializer` or a class implementing an interface that mimics `rest_framework.serializers.Serializer`.\n2. Must have property `VERSION` defined on the class, representing the schema version number.\n3. Should have property `KEY_FIELD` defined on the class, representing the name of the field to use as the message key. The message key is used by Kafka when performing log compaction. The property can be omitted for topics which do not require a key.\n4. If the serializer will be used for incoming-messages, it should implement class method `lookup_instance(cls, **kwargs)`. This class method will be with message data as kwargs directly before instantiating the serializer. It should lookup and return the related object (if one exists) so that it can be passed to the serializer's `instance` argument during initialization. If not objects exists yet (the message is representing a new object), it should return `None`.\n\nBelow is a sample Django model and it's accompanying serializer.::\n\n\n    from django.db import models\n    from rest_framework import serializers\n    import uuid\n\n    class Person(models.Model):\n        uuid = models.UUIDField(default=uuid.uuid4, unique=True)\n        first_name = models.CharField(max_length=200)\n        last_name = models.CharField(max_length=200)\n\n    class PersonSerializer(serializers.ModelSerializer):\n        VERSION = 1\n        KEY_FIELD = 'uuid'\n\n        class Meta:\n            model = Person\n            fields = ['uuid', 'first_name', 'last_name']\n\n        @classmethod\n        def lookup_instance(cls, uuid, **kwargs):\n            try:\n                return Person.objects.get(uuid=uuid)\n            except models.Person.DoesNotExist:\n                pass\n\n\nSending Messages\n----------------\n\nOnce a serializer exists, you can send a message to Kafka by creating Producer object and calling the `send` method.::\n\n    from logpipe import Producer\n    joe = Person.objects.create(first_name='Joe', last_name='Schmoe')\n    producer = Producer('people', PersonSerializer)\n    producer.send(joe)\n\nThe above sample code would result in the following message being sent to the Kafka topic named `people`.::\n\n    json:{\"version\":1,\"message\":{\"first_name\":\"Joe\",\"last_name\":\"Schmoe\",\"uuid\":\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\"}}\n\n\nReceiving Messages\n------------------\n\nTo processing incoming messages, we can reuse the same model and serializer. We just need to instantiate a Consumer object.::\n\n    # Watch for messages, but timeout after 1000ms of no messages\n    consumer = Consumer('people', consumer_timeout_ms=1000)\n    consumer.register(PersonSerializer)\n    consumer.run()\n\n    # Watch for messages and block forever\n    consumer = Consumer('people')\n    consumer.register(PersonSerializer)\n    consumer.run()\n\nThe consumer object uses Django REST Framework's built-in `save`, `create`, and `update` methods to apply the message. If your messages are tied directly to a Django model, skip defining the `lookup_instance` class method and override the `save` method to house your custom import logic.\n\nMultiple consumers can be watched simultaneously by the same process by using a MultiConsumer.::\n\n    from logpipe import MultiConsumer\n    people_consumer = Consumer('people')\n    people_consumer.register(PersonSerializer)\n    places_consumer = Consumer('places')\n    places_consumer.register(PlaceSerializer)\n    multi = MultiConsumer(people_consumer, places_consumer)\n\n    # Watch for 'people' and 'places' topics indefinitely\n    multi.run()\n\nFinally, consumers can be registered and run automatically by the build in `run_kafka_consumer` management command.::\n\n    # myapp/apps.py\n    from django.apps import AppConfig\n    from logpipe import Consumer, register_consumer\n\n    class MyAppConfig(AppConfig):\n        name = 'myapp'\n\n    # Register consumers with logpipe\n    @register_consumer\n    def build_person_consumer():\n        consumer = Consumer('people')\n        consumer.register(PersonSerializer)\n        return consumer\n\nUse the `register_consumer` decorator to register as many consumers and topics as you need to work with. Then, run the `run_kafka_consumer` command to process messages for all consumers automatically in a round-robin fashion.::\n\n    $ python manage.py run_kafka_consumer\n\n\nDealing with Schema Changes\n---------------------------\n\nSchema changes are handled using the `VERSION` attribute required on every serializer class. When sending, a producer includes the schema version number in the message data. Then, when a consumer receives a message, it looks for a register serializer with a matching version number. If no serializer is found with a matching version number, a `logpipe.exceptions.UnknownMessageVersionError` exception is raised.\n\nTo perform a backwards-incompatible schema change, the following steps should be performed.\n\n1. Update consumer code to have knowledge of the new schema version.\n2. Update producer code to being sending the new schema version.\n3. After some amount of time (when you are sure no old-version messages still exist in Kafka), remove the code related to the old schema version.\n\nFor example, if we wanted to require an email field on the `Person` model we defined above, the first step would be to update consumers to know about the new field.::\n\n\n    class Person(models.Model):\n        uuid = models.UUIDField(default=uuid.uuid4, unique=True)\n        first_name = models.CharField(max_length=200)\n        last_name = models.CharField(max_length=200)\n        email = models.EmailField(max_length=200, null=True)\n\n    class PersonSerializerV1(serializers.ModelSerializer):\n        VERSION = 1\n        KEY_FIELD = 'uuid'\n        class Meta:\n            model = Person\n            fields = ['uuid', 'first_name', 'last_name']\n\n    class PersonSerializerV2(PersonSerializerV1):\n        VERSION = 2\n        class Meta(PersonSerializerV1.META):\n            fields = ['uuid', 'first_name', 'last_name', 'email']\n\n    consumer = Consumer('people', consumer_timeout_ms=1000)\n    consumer.register(PersonSerializerV1)\n    consumer.register(PersonSerializerV2)\n\nThe consumers will now use the appropriate serializer for the message version. Second, we need to update producer code to being using schema version 2.::\n\n    producer = Producer('people', PersonSerializerV2)\n\nFinally, after all the old version 1 messages have been dropped (by log compaction), the `PersonSerializerV1` class can be removed form the code base.\n\n\nSettings\n========\n\nThe follow settings added to `settings.py` to configure `logpipe`.\n\n+--------------------+----------------------------------------------------------------------+------------------------------------------+\n| Key                | Description                                                          | Default Value                            |\n+====================+======================================================================+==========================================+\n| BOOTSTRAP_SERVERS  | A list of Kafka servers to connect to upon startup.                  | *Required*                               |\n+--------------------+----------------------------------------------------------------------+------------------------------------------+\n| DEFAULT_FORMAT     | The default serialization format to use when sending new messages.   | json                                     |\n+--------------------+----------------------------------------------------------------------+------------------------------------------+\n| OFFSET_BACKEND     | Path to class used to store offset data.                             | logpipe.offset_backends.ModelOffsetStore |\n+--------------------+----------------------------------------------------------------------+------------------------------------------+\n| MIN_MESSAGE_LAG_MS | Minimum amount of time between when a message is sent and when it    |                                          |\n|                    | will be processed. This is useful is a single service is both        | 500                                      |\n|                    | producing and consuming the same topic.                              |                                          |\n+--------------------+----------------------------------------------------------------------+------------------------------------------+\n| RETRIES            | Number of times to retry sending a message.                          | 0                                        |\n+--------------------+----------------------------------------------------------------------+------------------------------------------+\n| TIMEOUT            | How many seconds to wait for a message sent confirmation from Kafka. | 10                                       |\n+--------------------+----------------------------------------------------------------------+------------------------------------------+\n\n\nChangelog\n=========\n\n0.1.0\n------------------\n- Initial release.\n\n\n.. |license| image:: https://img.shields.io/pypi/l/django-logpipe.svg\n    :target: https://pypi.python.org/pypi/\n.. |kit| image:: https://badge.fury.io/py/django-logpipe.svg\n    :target: https://pypi.python.org/pypi/django-logpipe\n.. |format| image:: https://img.shields.io/pypi/format/django-logpipe.svg\n    :target: https://pypi.python.org/pypi/django-logpipe\n.. |downloads| image:: https://img.shields.io/pypi/dm/django-logpipe.svg?maxAge=2592000\n    :target: https://pypi.python.org/pypi/django-logpipe",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://gitlab.com/thelabnyc/django-logpipe",
    "keywords": null,
    "license": "ISC",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-logpipe",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-logpipe/",
    "release_url": "https://pypi.org/project/django-logpipe/0.1.0/",
    "requires_python": null,
    "summary": "Move data around between Python services using Kafka and Django Rest Framework serializers.",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f1ae988f49028472a9dd27e8878a95ba",
          "sha256": "79d81bf8fc27f7a5118cb61dcd1e6d0218613e665a31d0f987f815760c448a2b"
        },
        "downloads": 10,
        "filename": "django_logpipe-0.1.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "f1ae988f49028472a9dd27e8878a95ba",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 23400,
        "upload_time": "2017-01-30T18:04:17",
        "url": "https://files.pythonhosted.org/packages/ac/88/df7aa3dcc4b0b59de3cd4f43b031cb870bb96a8cf824ef01263664e3213f/django_logpipe-0.1.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "cc371ff2b850611585e29a8cd9bbcef6",
          "sha256": "d2a9b60f2eb9b6612c2f4cb8a76b049dbd65c06bcfc635173cac701d3561c460"
        },
        "downloads": 11,
        "filename": "django-logpipe-0.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "cc371ff2b850611585e29a8cd9bbcef6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15929,
        "upload_time": "2017-01-30T18:04:15",
        "url": "https://files.pythonhosted.org/packages/25/60/f81e1da2f908fdda674a58b4255005ff313a1afe050d15128e7fea860d1e/django-logpipe-0.1.0.tar.gz"
      }
    ],
    "0.2.0b1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "71a44df5fb90a2b2fbdff990116404dd",
          "sha256": "024b86a2c40273d92d518cffe95da73aaf59160b417732e49023f8b05ddab9d6"
        },
        "downloads": 0,
        "filename": "django_logpipe-0.2.0b1-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "71a44df5fb90a2b2fbdff990116404dd",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 31374,
        "upload_time": "2017-05-02T18:19:26",
        "url": "https://files.pythonhosted.org/packages/c7/70/08af8294b35674c1cd1d51116a1a22b4bb1fa193dbe767e09c2eec5c81bf/django_logpipe-0.2.0b1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "17aff7b67e6ba54f0742dfdef8e97439",
          "sha256": "475969c0c5a3691244aadac4ae8be85fff2cf6f2157bfec1e6580bf80324f424"
        },
        "downloads": 0,
        "filename": "django-logpipe-0.2.0b1.tar.gz",
        "has_sig": true,
        "md5_digest": "17aff7b67e6ba54f0742dfdef8e97439",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17222,
        "upload_time": "2017-05-02T18:19:25",
        "url": "https://files.pythonhosted.org/packages/06/66/011decaeb2b27c5101e15b760d331a8985fa7774f4e8da6a926c2fe55d19/django-logpipe-0.2.0b1.tar.gz"
      }
    ],
    "0.2.0b2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9fe6845686b37dbe607a63339746cc5c",
          "sha256": "55c496fbd3011f13c00008a5e23c7f58d6b3587dc0c34bcb52ed7a146d4a67b7"
        },
        "downloads": 0,
        "filename": "django_logpipe-0.2.0b2-py2-none-any.whl",
        "has_sig": true,
        "md5_digest": "9fe6845686b37dbe607a63339746cc5c",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 31919,
        "upload_time": "2017-05-02T19:04:08",
        "url": "https://files.pythonhosted.org/packages/d0/e7/60b517c4e57705edf2dea717d9e393b88a948f9fdf5798f5fd46697b0adf/django_logpipe-0.2.0b2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d4c6ed1fba0fbbfc5317da1e39c67f30",
          "sha256": "8ff0cbcd0cea1ebab150c015e36a0c68925b2670df332bf1c03ee8cd2eed8108"
        },
        "downloads": 0,
        "filename": "django-logpipe-0.2.0b2.tar.gz",
        "has_sig": true,
        "md5_digest": "d4c6ed1fba0fbbfc5317da1e39c67f30",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17316,
        "upload_time": "2017-05-02T19:04:06",
        "url": "https://files.pythonhosted.org/packages/e1/f8/a1d9672c04d4238ed7c4acbe66e07ec74b6a15845901501dbf9f7e1b188e/django-logpipe-0.2.0b2.tar.gz"
      }
    ],
    "0.2.0b3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f23fc7b924184aeabff73089c296508d",
          "sha256": "163d0ec2969bbc4bd58f104675aba801b7e93f3a14c24d0fda6d269e9fa5b42f"
        },
        "downloads": 0,
        "filename": "django_logpipe-0.2.0b3-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "f23fc7b924184aeabff73089c296508d",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 31919,
        "upload_time": "2017-05-02T21:08:24",
        "url": "https://files.pythonhosted.org/packages/99/b1/22407181da6756f220c968616b9bc59b13fcefc62b03794e5f4a247403b5/django_logpipe-0.2.0b3-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "548c1b94a9e3aaf858b86fcf00b2e056",
          "sha256": "cdc5343b75badca4fb354db8a9052b574a1d61cc73d2838740b8efdaf564fda4"
        },
        "downloads": 0,
        "filename": "django-logpipe-0.2.0b3.tar.gz",
        "has_sig": true,
        "md5_digest": "548c1b94a9e3aaf858b86fcf00b2e056",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17786,
        "upload_time": "2017-05-02T21:08:21",
        "url": "https://files.pythonhosted.org/packages/17/d0/9cd85d5f5097a748ec1c57721afe8785d580f4c763a3f96e9cbe4f2a5fa1/django-logpipe-0.2.0b3.tar.gz"
      }
    ],
    "0.2.0b4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0b5a35c9bf866bbdb059b3837c8f3b71",
          "sha256": "8cdad7dc348fd2f2ccd81defc8335362ad779598ca5615b0b8a035f33e700458"
        },
        "downloads": 0,
        "filename": "django_logpipe-0.2.0b4-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "0b5a35c9bf866bbdb059b3837c8f3b71",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 32948,
        "upload_time": "2017-05-02T23:01:18",
        "url": "https://files.pythonhosted.org/packages/6d/0f/191b412ae04c7623cc309e6d5462df56d1a71a57507f0d8b113860cd8414/django_logpipe-0.2.0b4-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "231fde52323679f2d8e7c4cd4460474b",
          "sha256": "9412aff2f319381cf2dc325b0d63cf68d1735449e2c85f92033bebb9618f6075"
        },
        "downloads": 0,
        "filename": "django-logpipe-0.2.0b4.tar.gz",
        "has_sig": true,
        "md5_digest": "231fde52323679f2d8e7c4cd4460474b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18441,
        "upload_time": "2017-05-02T23:01:16",
        "url": "https://files.pythonhosted.org/packages/1f/ef/677db958af3c9f6c65a28ea53dca55d7bab1e331d6dac07a1be9eac1f6f9/django-logpipe-0.2.0b4.tar.gz"
      }
    ],
    "0.2.0b5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "94511067cfa3bdeb88bb558e44fa85d6",
          "sha256": "93293e32739aab718a54e1a075297272353a156b90a8a7964831cc8df102b93a"
        },
        "downloads": 0,
        "filename": "django_logpipe-0.2.0b5-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "94511067cfa3bdeb88bb558e44fa85d6",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 32773,
        "upload_time": "2017-05-02T23:25:32",
        "url": "https://files.pythonhosted.org/packages/c7/06/902dd3f430644660d7383571d6a59ed9f3b5282151ec62dce9e8f76375e9/django_logpipe-0.2.0b5-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3d94f44202ea2b806a53cc13411e43e5",
          "sha256": "a081d462d8a28ace14860ef067db22dccc7b0140b035684fb484cb485bd07232"
        },
        "downloads": 0,
        "filename": "django-logpipe-0.2.0b5.tar.gz",
        "has_sig": true,
        "md5_digest": "3d94f44202ea2b806a53cc13411e43e5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18324,
        "upload_time": "2017-05-02T23:25:30",
        "url": "https://files.pythonhosted.org/packages/de/2d/b92992ff3b97307b1a811f9d1a761a84d01d304fdc07da6406a0e616fa16/django-logpipe-0.2.0b5.tar.gz"
      }
    ],
    "0.2.0b6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "87082f669784f87f35e97853aecc2a66",
          "sha256": "615094bca815c752e0c7dc21f5a1ef953a4c954ace55e4cdd4b13e8b112a8552"
        },
        "downloads": 0,
        "filename": "django_logpipe-0.2.0b6-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "87082f669784f87f35e97853aecc2a66",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 33362,
        "upload_time": "2017-05-03T15:29:08",
        "url": "https://files.pythonhosted.org/packages/78/0c/74d13db70be7d21b650b70b5ab9c779a9a9fa3723b06e94f054c45f28af7/django_logpipe-0.2.0b6-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7cb7f2b3eb73b504211b06bbd806da07",
          "sha256": "9a321ab3a05c67b1bd12f53bf3b42f5d336bd9bdf1a465c226c4c6f4c57157fe"
        },
        "downloads": 0,
        "filename": "django-logpipe-0.2.0b6.tar.gz",
        "has_sig": true,
        "md5_digest": "7cb7f2b3eb73b504211b06bbd806da07",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18907,
        "upload_time": "2017-05-03T15:29:06",
        "url": "https://files.pythonhosted.org/packages/74/20/70f44626903d22b9b90476d36446a2d688492a1839fd8ba70d21e3fccaa9/django-logpipe-0.2.0b6.tar.gz"
      }
    ],
    "0.2.0b7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3dace79eb23e3841225f7f7981ae79b0",
          "sha256": "183297ac5ea5f873de99fc113ed6baca4b790d5c9dc2ba1dfc800767d6e006aa"
        },
        "downloads": 0,
        "filename": "django_logpipe-0.2.0b7-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "3dace79eb23e3841225f7f7981ae79b0",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 33495,
        "upload_time": "2017-05-03T16:03:35",
        "url": "https://files.pythonhosted.org/packages/52/fd/439408a5719167c8f85d49223d9a90901c43793ac6568640d909565aec8e/django_logpipe-0.2.0b7-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b9dc5053fa231e6672f08e34668e7a00",
          "sha256": "b585fe8d1895eb31b611a9f969eeb638912458e47500c61f32469195cc0db73b"
        },
        "downloads": 0,
        "filename": "django-logpipe-0.2.0b7.tar.gz",
        "has_sig": true,
        "md5_digest": "b9dc5053fa231e6672f08e34668e7a00",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18991,
        "upload_time": "2017-05-03T16:03:32",
        "url": "https://files.pythonhosted.org/packages/b2/a5/dffd288f1b25b4e6a4ecae03c8e34b5d49aa4c8b73e172dbb6127f343932/django-logpipe-0.2.0b7.tar.gz"
      }
    ],
    "0.2.0b8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "967ba1398021d6c6bd0a2a99b1a7ddb7",
          "sha256": "6c2353f53cf62ec766a7cd3a984c84835af5e8b36905ebd1cfdacf31af17e44a"
        },
        "downloads": 0,
        "filename": "django_logpipe-0.2.0b8-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "967ba1398021d6c6bd0a2a99b1a7ddb7",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 33655,
        "upload_time": "2017-05-03T17:06:56",
        "url": "https://files.pythonhosted.org/packages/9d/59/af9e67320a1cb2706c47ea6d5ca62e5f825903745bfbac74d279fc09d273/django_logpipe-0.2.0b8-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b11fede7af8755e1f3da38a058fccd43",
          "sha256": "3c739f1c930dd726c11d95f6a9bad7348f3734979839774df70c62238592cad1"
        },
        "downloads": 0,
        "filename": "django-logpipe-0.2.0b8.tar.gz",
        "has_sig": true,
        "md5_digest": "b11fede7af8755e1f3da38a058fccd43",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19153,
        "upload_time": "2017-05-03T17:06:26",
        "url": "https://files.pythonhosted.org/packages/1e/85/ca54afc4950b33046d43211aaca5f6163f3aa06dab407df8c507be68ecbf/django-logpipe-0.2.0b8.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f1ae988f49028472a9dd27e8878a95ba",
        "sha256": "79d81bf8fc27f7a5118cb61dcd1e6d0218613e665a31d0f987f815760c448a2b"
      },
      "downloads": 10,
      "filename": "django_logpipe-0.1.0-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "f1ae988f49028472a9dd27e8878a95ba",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 23400,
      "upload_time": "2017-01-30T18:04:17",
      "url": "https://files.pythonhosted.org/packages/ac/88/df7aa3dcc4b0b59de3cd4f43b031cb870bb96a8cf824ef01263664e3213f/django_logpipe-0.1.0-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "cc371ff2b850611585e29a8cd9bbcef6",
        "sha256": "d2a9b60f2eb9b6612c2f4cb8a76b049dbd65c06bcfc635173cac701d3561c460"
      },
      "downloads": 11,
      "filename": "django-logpipe-0.1.0.tar.gz",
      "has_sig": true,
      "md5_digest": "cc371ff2b850611585e29a8cd9bbcef6",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15929,
      "upload_time": "2017-01-30T18:04:15",
      "url": "https://files.pythonhosted.org/packages/25/60/f81e1da2f908fdda674a58b4255005ff313a1afe050d15128e7fea860d1e/django-logpipe-0.1.0.tar.gz"
    }
  ]
}