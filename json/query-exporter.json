{
  "info": {
    "author": "Alberto Donato",
    "author_email": "alberto.donato@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.5",
      "Topic :: Utilities"
    ],
    "description": "# query-exporter - Export Prometheus metrics from SQL queries\n\n[![Latest Version](https://img.shields.io/pypi/v/query-exporter.svg)](https://pypi.python.org/pypi/query-exporter)\n[![Build Status](https://travis-ci.org/albertodonato/query-exporter.svg?branch=master)](https://travis-ci.org/albertodonato/query-exporter)\n[![Coverage Status](https://codecov.io/gh/albertodonato/query-exporter/branch/master/graph/badge.svg)](https://codecov.io/gh/albertodonato/query-exporter)\n\n`query-exporter` is a [Prometheus](https://prometheus.io/) exporter which\nallows collecting metrics from database queries, at specified time intervals.\n\nIt currently supports [PostgreSQL](https://www.postgresql.org/) as a backend\ndatabase.\n\nEach query can be run on multiple databases, and update multiple metrics.\n\nThe application is called with a configuration file that looks like this:\n\n```yaml\ndatabases:\n  db1:\n    dsn: postgres:///sampledb1\n  db2:\n    dsn: postgres:///sampledb2\n\nmetrics:\n  metric1:\n    type: gauge\n    description: A sample gauge\n  metric2:\n    type: summary\n    description: A sample summary\n  metric3:\n    type: histogram\n    description: A sample histogram\n    buckets: [10, 20, 50, 100, 1000]\n\nqueries:\n  query1:\n    interval: 30\n    databases: [db1]\n    metrics: [metric1]\n    sql: SELECT random() * 100\n  query2:\n    interval: 1m\n    databases: [db1, db2]\n    metrics: [metric2, metric3]\n    sql: SELECT random() * 1000, random() * 10000\n```\n\nThe `dsn` connection string has the following format:\n\n```\npostgres://user:pass@host:port/database?option=value\n```\n\nThe `metrics` list in the query configuration must match values returned by the\nquery defined in `sql`.\n\nThe `interval` value is interpreted as seconds if no suffix is specified; valid\nsuffix are `s`, `m`, `h`, `d`. Only integer values can be specified.\n\nQueries will usually return a single row, but multiple rows are supported, and\neach row will cause an update of the related metrics.  This is relevant for any\nkind of metric except gauges, which will be effectively updated to the value\nfrom the last row.\n\nFor the configuration above, exported metrics look like this:\n\n```\n# HELP metric1 A sample gauge\n# TYPE metric1 gauge\nmetric1{database=\"db1\"} 13.8291064184159\n# HELP metric2 A sample summary\n# TYPE metric2 summary\nmetric2_count{database=\"db1\"} 1.0\nmetric2_sum{database=\"db1\"} 889.48124460876\nmetric2_count{database=\"db2\"} 1.0\nmetric2_sum{database=\"db2\"} 665.63375480473\n# HELP metric3 A sample histogram\n# TYPE metric3 histogram\nmetric3_bucket{database=\"db1\",le=\"10.0\"} 0.0\nmetric3_bucket{database=\"db1\",le=\"20.0\"} 0.0\nmetric3_bucket{database=\"db1\",le=\"50.0\"} 0.0\nmetric3_bucket{database=\"db1\",le=\"100.0\"} 0.0\nmetric3_bucket{database=\"db1\",le=\"1000.0\"} 0.0\nmetric3_bucket{database=\"db1\",le=\"+Inf\"} 1.0\nmetric3_count{database=\"db1\"} 1.0\nmetric3_sum{database=\"db1\"} 9988.39943669736\nmetric3_bucket{database=\"db2\",le=\"10.0\"} 0.0\nmetric3_bucket{database=\"db2\",le=\"20.0\"} 0.0\nmetric3_bucket{database=\"db2\",le=\"50.0\"} 0.0\nmetric3_bucket{database=\"db2\",le=\"100.0\"} 0.0\nmetric3_bucket{database=\"db2\",le=\"1000.0\"} 0.0\nmetric3_bucket{database=\"db2\",le=\"+Inf\"} 1.0\nmetric3_count{database=\"db2\"} 1.0\nmetric3_sum{database=\"db2\"} 9923.82999043912\n```\n\nMetrics are automatically tagged with the `database` label so that indipendent\nseries are generated for each database.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/albertodonato/query-exporter",
    "keywords": "sql metric prometheus exporter",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "query-exporter",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/query-exporter/",
    "release_url": "https://pypi.org/project/query-exporter/1.1.0/",
    "requires_python": "",
    "summary": "Export Prometheus metrics generated from SQL queries.",
    "version": "1.1.0"
  },
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6eb4e36238a566858fea4819ffddb0f0",
          "sha256": "d914026a8d31f0fc81370ce1e057766bbbe297153168a663d626682624544076"
        },
        "downloads": 0,
        "filename": "query-exporter-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6eb4e36238a566858fea4819ffddb0f0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22986,
        "upload_time": "2017-05-07T17:51:54",
        "url": "https://files.pythonhosted.org/packages/59/53/6ecf5d5257b0efc9d8de73022cc3f563b2e40a7ff7764520fdce9ceb0e4d/query-exporter-0.1.2.tar.gz"
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8b7925c06a84c23c66b94ac5c1d24f58",
          "sha256": "8ec01bb5d5a9d2c1fa39398b134bb9738ffaec44b33b0de4da30cc400ffea7c3"
        },
        "downloads": 0,
        "filename": "query-exporter-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8b7925c06a84c23c66b94ac5c1d24f58",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23193,
        "upload_time": "2017-05-13T09:58:06",
        "url": "https://files.pythonhosted.org/packages/9d/ef/21bf98e8df0ada2876290ff9f73bffacccc793dea3ef8972951a12d95cf0/query-exporter-1.0.0.tar.gz"
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c9372b93bdd2d52ac27440fa3a72ed65",
          "sha256": "91228f06353ccdaee7102648a59b9ec86a4cc2a8b4fdcba1e7fe33f3e2339887"
        },
        "downloads": 0,
        "filename": "query-exporter-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c9372b93bdd2d52ac27440fa3a72ed65",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22950,
        "upload_time": "2017-05-21T11:34:34",
        "url": "https://files.pythonhosted.org/packages/f0/80/cc771113504582bff11de1db4952d742f50e5c196cb840728c06d71be994/query-exporter-1.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c9372b93bdd2d52ac27440fa3a72ed65",
        "sha256": "91228f06353ccdaee7102648a59b9ec86a4cc2a8b4fdcba1e7fe33f3e2339887"
      },
      "downloads": 0,
      "filename": "query-exporter-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c9372b93bdd2d52ac27440fa3a72ed65",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 22950,
      "upload_time": "2017-05-21T11:34:34",
      "url": "https://files.pythonhosted.org/packages/f0/80/cc771113504582bff11de1db4952d742f50e5c196cb840728c06d71be994/query-exporter-1.1.0.tar.gz"
    }
  ]
}