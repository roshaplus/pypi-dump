{
  "info": {
    "author": "Eric Busboom",
    "author_email": "eric@civicknowledge.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Metatab\n=======\n\nParse and manipulate structured data and metadata in a tabular format.\n\n`Metatab <http://metatab.org>`_ is a data format that allows structured metadata -- the sort you'd normally store in JSON, YAML or XML -- to be stored and edited in tabular forms like CSV or Excel. Metatab files look exactly like you'd expect, so they\nare very easy for non-technical users to read and edit, using tools they already have. Metatab is an excellent format\nfor creating, storing and transmitting metadata. For more information about metatab, visit http://metatab.org.\n\nThis repository has a Python module and executable. For a Javascript version, see the `metatab-js <https://github.com/CivicKnowledge/metatab-js>`_ repository.\n\nWhat is Metatab For?\n--------------------\n\nMetatab is a tabular format that allows storing metadata for demographics, health and research datasets in a tabular format. The tabular format is much easier for data creators to write and for data consumers to read, and it allows a complete data packages to be stored in a single Excel file.\n\n\nInstall\n-------\n\n\n\nInstall the package from PiPy with:\n\n.. code-block:: bash\n\n    $ pip install metatab\n\nOr, install the master branch from github with:\n\n.. code-block:: bash\n\n    $ pip install https://github.com/CivicKnowledge/metatab.git\n\nThen test parsing using a remote file with:\n\n.. code-block:: bash\n\n    $ metatab -j https://raw.githubusercontent.com/CivicKnowledge/metatab/master/test-data/example1.csv\n\nRun ``metatab -h`` to get other program options.\n\nThe ``test-data`` directory has test files that also serve as examples to parse. You can either clone the repo and parse them from the files, or from the Github page for the file, click on the ``raw`` button to get raw view of the flie, then copy the URL.\n\n\nRunning tests\n+++++++++++++\n\nRun ``python setup.py tests`` to run normal development tests. You can also run ``tox``, which will\ntry to run the tests with python 3.4, 3.5 and 3.6, ignoring non-existent interpreters.\n\n\nDevelopment Testing with Docker\n+++++++++++++++++++++++++++++++\n\nTesting during development for other versions of Python is a bit of a pain, since you have\nto install the alternate version, and Tox will run all of the tests, not just the one you want.\n\nOne way to deal with this is to install Docker locally, then run the docker test container\non the source directory. This is done automatically from the Makefile in metatab/test, just run:\n\n.. code-block:: bash\n    $ cd metatab/test\n    $ make build # to create the container image\n    $ make test\n    # or just ..\n    $ make\n\nYou can also run the container shell, and run tests from the command line.\n\n.. code-block:: bash\n\n    $ cd metatab/test\n    $ make build # to create the container image\n    $ make shell # to run bash the container\n\nYou now have a docker container where the /code directory is the metatab source dir.\n\nNow, run tox to build the tox virtual environments, then enter the specific version you want to\nrun tests for and activate the virtual environment.\n\n.. code-block:: bash\n\n    # tox\n    # cd .tox/py34\n    # source bin/activate # Activate the python 3.4 virtual env\n    # cd ../../\n    # python setup.py test # Cause test deps to get installed\n    #\n    # python -munittest metatab.test.test_parser.TestParser.test_parse_everython  # Run one test\n\nNote that your development environment is mounted into the Docker container, so you can edit local\nfiles and test the changes in Docker.\n\n\n\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Metatab/metatab-py.git",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metatab",
    "platform": "",
    "project_url": "https://pypi.org/project/metatab/",
    "release_url": "https://pypi.org/project/metatab/0.6.11/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Data format for storing structured data in spreadsheet tables",
    "version": "0.6.11"
  },
  "releases": {
    "0.6.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a5fe6d2fb9c7961ed207c3acd56ae7b6",
          "sha256": "29d667eba9a10d06ddc4309e3ef46f40113ef34c9c458730e52d789a55fa8fbd"
        },
        "downloads": -1,
        "filename": "metatab-0.6.10.tar.gz",
        "has_sig": false,
        "md5_digest": "a5fe6d2fb9c7961ed207c3acd56ae7b6",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29694,
        "upload_time": "2017-09-23T01:00:29",
        "url": "https://files.pythonhosted.org/packages/65/3f/98ef6ee4a793062174a12b58a89b08ca35828b8ffc5fce8d8dbaab5c40b8/metatab-0.6.10.tar.gz"
      }
    ],
    "0.6.11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7dade16d838eee284654bf8ef7a379dd",
          "sha256": "bbaf2d978f5c706f18c2671d57bc8e46b40f5eea24be9ac68f8afd9973ed2737"
        },
        "downloads": -1,
        "filename": "metatab-0.6.11.tar.gz",
        "has_sig": false,
        "md5_digest": "7dade16d838eee284654bf8ef7a379dd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 41414,
        "upload_time": "2017-10-13T19:37:19",
        "url": "https://files.pythonhosted.org/packages/74/a5/91fc436c36bcdd23a710d85c663ee62b087f3866ef73bd5e41096f18517f/metatab-0.6.11.tar.gz"
      }
    ],
    "0.6.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "739a12de1a53aad47fa04465e5b3bbdd",
          "sha256": "6f8660f31557ea125a93555a6bb54540386f4f9ee814bdd97609cb16cc2d66a7"
        },
        "downloads": -1,
        "filename": "metatab-0.6.9.tar.gz",
        "has_sig": false,
        "md5_digest": "739a12de1a53aad47fa04465e5b3bbdd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29729,
        "upload_time": "2017-09-21T16:29:11",
        "url": "https://files.pythonhosted.org/packages/61/d0/4c0de7856443bbbc7060f76e36c11825aa4f547d9e1ff06b326e4c90c3fa/metatab-0.6.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "7dade16d838eee284654bf8ef7a379dd",
        "sha256": "bbaf2d978f5c706f18c2671d57bc8e46b40f5eea24be9ac68f8afd9973ed2737"
      },
      "downloads": -1,
      "filename": "metatab-0.6.11.tar.gz",
      "has_sig": false,
      "md5_digest": "7dade16d838eee284654bf8ef7a379dd",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 41414,
      "upload_time": "2017-10-13T19:37:19",
      "url": "https://files.pythonhosted.org/packages/74/a5/91fc436c36bcdd23a710d85c663ee62b087f3866ef73bd5e41096f18517f/metatab-0.6.11.tar.gz"
    }
  ]
}