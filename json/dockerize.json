{
  "info": {
    "author": "Lars Kellogg-Stedman",
    "author_email": "lars@oddbit.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Dockerize\n\nDockerize will pack up your dynamically linked ELF binaries and all\ntheir dependencies and turn them into a Docker image.\n\nSome example images built with this tool are available from:\n\n- https://hub.docker.com/u/dockerizeme/\n\n## Synopsis\n\n    usage: dockerize [-h] [--tag TAG] [--cmd CMD] [--entrypoint ENTRYPOINT]\n                     [--no-build] [--output-dir OUTPUT_DIR] [--add-file SRC DST]\n                     [--user USER] [--group GROUP] [--filetools] [--verbose]\n                     [--debug]\n                     ...\n\n    positional arguments:\n      paths\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --add-file SRC DST, -a SRC DST\n                            Add file <src> to image at <dst>\n      --user USER, -u USER  Add user to /etc/passwd in image\n      --group GROUP, -g GROUP\n                            Add group to /etc/group in image\n      --filetools           Add common file manipulation tools\n\n    Docker options:\n      --tag TAG, -t TAG     Tag to apply to Docker image\n      --cmd CMD, -c CMD\n      --entrypoint ENTRYPOINT, -e ENTRYPOINT\n\n    Output options:\n      --no-build, -n        Do not build Docker image\n      --output-dir OUTPUT_DIR, -o OUTPUT_DIR\n\n    Logging options:\n      --verbose\n      --debug\n\n## A simple example\n\nCreate a `sed` image:\n\n    dockerize -t sed /bin/sed\n\nUse it:\n\n    $ echo hello world | docker run -i sed s/world/jupiter\n    hello jupiter\n\n## A more complicated example\n\nCreate an image named `thttpd`:\n\n    dockerize -t thttpd \\\n      -a /var/www/thttpd /var/www \\\n      --entrypoint '/usr/sbin/thttpd -D' \\\n      --cmd '-d /var/www' \\\n      /usr/sbin/thttpd\n\nServe default content:\n\n    docker run thttpd\n\nServe your own content:\n\n    docker run -v /my/content:/var/www thttpd\n\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/larsks/dockerize",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "dockerize",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/dockerize/",
    "release_url": "https://pypi.org/project/dockerize/0.2.2/",
    "requires_python": null,
    "summary": "UNKNOWN",
    "version": "0.2.2"
  },
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1e9dd1db526b60c60a489ce7c9845c22",
          "sha256": "efd705bb6c2dd6e516c42c083530ba1d014fd10a9733fb0972fddc3adfb9567f"
        },
        "downloads": 546,
        "filename": "dockerize-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1e9dd1db526b60c60a489ce7c9845c22",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19015,
        "upload_time": "2016-02-17T15:25:59",
        "url": "https://files.pythonhosted.org/packages/a2/6d/17b5566f2fad5f904c8bd8b1ddc6599c5fd156bc5a761a176ff880f02d78/dockerize-0.2.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "1e9dd1db526b60c60a489ce7c9845c22",
        "sha256": "efd705bb6c2dd6e516c42c083530ba1d014fd10a9733fb0972fddc3adfb9567f"
      },
      "downloads": 546,
      "filename": "dockerize-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "1e9dd1db526b60c60a489ce7c9845c22",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 19015,
      "upload_time": "2016-02-17T15:25:59",
      "url": "https://files.pythonhosted.org/packages/a2/6d/17b5566f2fad5f904c8bd8b1ddc6599c5fd156bc5a761a176ff880f02d78/dockerize-0.2.2.tar.gz"
    }
  ]
}