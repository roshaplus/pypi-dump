{
  "info": {
    "author": "Tom Diethe; Meelis Kull; Niall Twomey; Kacper Sokol; Hao Song; Emma Tonkin; Peter Flach",
    "author_email": "hyperstreamhq@googlegroups.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "![HyperStream logo](https://cdn.rawgit.com/IRC-SPHERE/HyperStream/dfbac332/hyperstream.svg)\n\n\n\n# HyperStream #\n\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.242227.svg)](https://doi.org/10.5281/zenodo.242227)\n[![Join the chat at https://gitter.im/IRC-SPHERE-HyperStream/Lobby](https://badges.gitter.im/IRC-SPHERE-HyperStream/Lobby.svg)](https://gitter.im/IRC-SPHERE-HyperStream/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Build Status](https://travis-ci.org/IRC-SPHERE/HyperStream.svg?branch=master)](https://travis-ci.org/IRC-SPHERE/HyperStream)\n[![Dependency Status](https://www.versioneye.com/user/projects/58e423cb26a5bb005220301e/badge.svg?style=flat-square)](https://www.versioneye.com/user/projects/58e423cb26a5bb005220301e)\n[![Test Coverage](https://codeclimate.com/github/IRC-SPHERE/HyperStream/badges/coverage.svg)](https://codeclimate.com/github/IRC-SPHERE/HyperStream/coverage)\n[![Issue Count](https://codeclimate.com/github/IRC-SPHERE/HyperStream/badges/issue_count.svg)](https://codeclimate.com/github/IRC-SPHERE/HyperStream)\n[![Documentation Status](https://readthedocs.org/projects/hyperstream/badge/?version=latest)](http://hyperstream.readthedocs.io/en/latest/?badge=latest)\n\nHyperstream is a large-scale, flexible and robust software package for processing streaming data.\n\nHyperstream overcomes the limitations of other computational engines and provides high-level interfaces to execute complex nesting, fusion, and prediction both in online and offline forms in streaming environments. Although developed specifically for SPHERE, Hyperstream is a general purpose tool that is well-suited for the design, development, and deployment of algorithms and predictive models in a wide space of sequential predictive problems.\n\nThis software has been designed from the outset to be domain-independent, in order to provide maximum value to the wider community. Key aspects of the software include the capability to create complex interlinked workflows, and a computational engine that is designed to be \"compute-on-request\", meaning that no unnecessary resources are used. \n\n```diff\n- NOTE: This software is in a stable but early beta, and hence the API may change significantly.\n```\n\nThe system consists of the following 3 layers, from bottom up:\n\n## Tools ##\nTools are the computation elements. They take in input data in a standard format (dict of list of \nhyperstream.instance.Instance objects) and output data in a standard format (list of \nhyperstream.instance.Instance objects). Tools are version controlled. Minor version numbers should be used for updates\n that will not require recomputing streams, since the output should be identical (in expectation for stochastic \n streams). The output should be identical (again, in expectation for stochastic streams) regardless of whether the tool is run twice on time-ranges t1..t2 and t2..t3 or just once on the time-range t1..t3. Major version number changes will cause the stream to be recomputed.\n\n### Tool Versions ###\nThe tool versions form a major/minor/patch 3-tuple, e.g. v1.3.2. See https://pypi.python.org/pypi/semantic_version/ for details.\nIn our setting the major version number is treated as a binary flag: 0 for development, 1 for production. Minor version \nnumbers indicate changes that affect the output, or in the API. The patch number indicates changes that do not affect the \noutput or API in any way (e.g. speedups).\n\n## Streams ##\nStreams are objects that use a particular kernel for computation, with fixed parameters and filters defined that can \nreduce the amount of data that needs to be read from the database. The stream is physically manifested in the database \n(mongodb) for the time ranges that it has been computed on.\n\nThere are special data streams, for which a custom hyperstream.interface.Input or hyperstream.interface.Output objects \ncan be defined, in order to work with custom databases or file-based storage.\n\n## Workflows ##\nWorkflows define a graph of streams. Usually, the first stream will be a special \"raw\" stream that pulls in data from a \ncustom data source. Workflows can have multiple time ranges, which will cause the streams to be computed on all of the \nranges given.\n\n# Installation #\n## Docker images ##\nIf you do not want to install all the packages separately you can use our Docker bundle available [here](https://github.com/IRC-SPHERE/Hyperstream-Dockerfiles).\n\n## Local machine ##\n\n``` Bash\ngit clone git@github.com:IRC-SPHERE/HyperStream.git\ncd HyperStream\nvirtualenv venv\n. venv/bin/activate\npip install -r requirements.txt\npython -c 'from hyperstream import HyperStream'\n```\n\nOr install via pip\n\n```\npip install -U git+git://github.com/IRC-SPHERE/HyperStream.git#egg=hyperstream\npip install -r requirements.txt\npython -c 'from hyperstream import HyperStream'\n```\n\nAdditionally, one of the requirements to run Hyperstream is a MongoDB server. By default, Hyperstream tries to connect to the port 27017 on the localhost.\n\nTo see the installation steps of MongoDB go to the [official documentation][1]. E.g. in a Debian OS it is possible to install with the following command\n\n[1]: https://docs.mongodb.com/manual/installation/\n\n``` Bash\nsudo apt-get install mongodb\n```\n\nOnce the MongoDB server is installed, it can be started with the following command\n\n``` Bash\nservice mongod start\n```\n\n# Running tests #\n\nRun the following command\n```\nnosetests\n```\n\nNote that for the MQTT logging test to succeed, you will need to have an MQTT broker running (e.g. Mosquitto). For example:\n\n```\ndocker run -ti -p 1883:1883 -p 9001:9001 toke/mosquitto\n```\n\nor on OSX you will need pidof and mosquitto:\n\n```\nbrew install pidof\nbrew install mosquitto\nbrew services start mosquitto\n```\n\n# Running the examples #\n\nSuper simple example:\n\n```\nfrom hyperstream import HyperStream, StreamId, TimeInterval\nfrom hyperstream.utils import utcnow, UTC\nfrom datetime import timedelta\n\nhs = HyperStream(loglevel=20)\nM = hs.channel_manager.memory\nT = hs.channel_manager.tools\nclock = StreamId(name=\"clock\")\nclock_tool = T[clock].window().last().value()\nticker = M.get_or_create_stream(stream_id=StreamId(name=\"ticker\"))\nnow = utcnow()\nbefore = (now - timedelta(seconds=30)).replace(tzinfo=UTC)\nti = TimeInterval(before, now)\nclock_tool.execute(sources=[], sink=ticker, interval=ti, alignment_stream=None)\nprint(list(ticker.window().tail(5)))\n\n[StreamInstance(timestamp=datetime.datetime(2017, 6, 30, 16, 23, 39, tzinfo=<UTC>), value=datetime.datetime(2017, 6, 30, 16, 23, 39, tzinfo=<UTC>)), StreamInstance(timestamp=datetime.datetime(2017, 6, 30, 16, 23, 40, tzinfo=<UTC>), value=datetime.datetime(2017, 6, 30, 16, 23, 40, tzinfo=<UTC>)), StreamInstance(timestamp=datetime.datetime(2017, 6, 30, 16, 23, 41, tzinfo=<UTC>), value=datetime.datetime(2017, 6, 30, 16, 23, 41, tzinfo=<UTC>)), StreamInstance(timestamp=datetime.datetime(2017, 6, 30, 16, 23, 42, tzinfo=<UTC>), value=datetime.datetime(2017, 6, 30, 16, 23, 42, tzinfo=<UTC>)), StreamInstance(timestamp=datetime.datetime(2017, 6, 30, 16, 23, 43, tzinfo=<UTC>), value=datetime.datetime(2017, 6, 30, 16, 23, 43, tzinfo=<UTC>))]\n```\n\n- more examples in the [tutorials branch](https://github.com/IRC-SPHERE/HyperStream/tree/tutorials/examples) (to be merged): \n\n# HyperStream Viewer #\nThe [HyperStream Viewer](https://github.com/IRC-SPHERE/HyperStreamViewer) is a python/Flask web-app for interacting with HyperStream. In order to keep HyperStream to a minimum, this web-app is released as a separate repository that takes the core as a dependency.\n\n# License #\n\nThis code is released under the [MIT license](https://github.com/IRC-SPHERE/HyperStream/blob/master/LICENSE).\n\n# Acknowledgements #\n\nThis work has been funded by the UK Engineering and Physical Sciences Research Council (EPSRC) under Grant [EP/K031910/1](http://gow.epsrc.ac.uk/NGBOViewGrant.aspx?GrantRef=EP/K031910/1) -  \"SPHERE Interdisciplinary Research Collaboration\".",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://irc-sphere.github.io/HyperStream/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hyperstream",
    "platform": "",
    "project_url": "https://pypi.org/project/hyperstream/",
    "release_url": "https://pypi.org/project/hyperstream/0.2.6/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Hyperstream is a large-scale, flexible and robust software package for processing streaming data",
    "version": "0.2.6"
  },
  "releases": {
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "43618d1b0cf0343b12ddf0103c435e06",
          "sha256": "4891382f1dd1161d9e31780e8f6d18c6a0ba1f7300fc9404e78a5a396ffc13b5"
        },
        "downloads": 0,
        "filename": "hyperstream-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "43618d1b0cf0343b12ddf0103c435e06",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 78342,
        "upload_time": "2017-07-12T21:22:43",
        "url": "https://files.pythonhosted.org/packages/13/ce/547684912e9d008b5f935aa0263d4838253f23e7da6ade58ff9ee75c1425/hyperstream-0.2.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "43618d1b0cf0343b12ddf0103c435e06",
        "sha256": "4891382f1dd1161d9e31780e8f6d18c6a0ba1f7300fc9404e78a5a396ffc13b5"
      },
      "downloads": 0,
      "filename": "hyperstream-0.2.6.tar.gz",
      "has_sig": false,
      "md5_digest": "43618d1b0cf0343b12ddf0103c435e06",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 78342,
      "upload_time": "2017-07-12T21:22:43",
      "url": "https://files.pythonhosted.org/packages/13/ce/547684912e9d008b5f935aa0263d4838253f23e7da6ade58ff9ee75c1425/hyperstream-0.2.6.tar.gz"
    }
  ]
}