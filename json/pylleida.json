{
  "info": {
    "author": "Nick M. Jaremek",
    "author_email": "nick13jaremek@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "========\npylleida\n========\n\n\n.. image:: https://img.shields.io/pypi/v/pylleida.svg\n        :target: https://pypi.python.org/pypi/pylleida\n\n.. image:: https://img.shields.io/travis/nick13jaremek/pylleida.svg\n        :target: https://travis-ci.org/nick13jaremek/pylleida\n\n.. image:: https://readthedocs.org/projects/pylleida/badge/?version=latest\n        :target: https://pylleida.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://pyup.io/repos/github/nick13jaremek/pylleida/shield.svg\n     :target: https://pyup.io/repos/github/nick13jaremek/pylleida/\n     :alt: Updates\n\n\nA HTTP Python client to use the Lleida.net API. This API consists of several modules,\neach one related to a different set of services. More information can be found at the\nofficial `API listing website`_.\n\n.. _`API listing website`: https://api.lleida.net/devel/es/index.html#api\n\n\n* Free software: MIT license\n* Documentation: https://pylleida.readthedocs.io.\n\n\nDisclosure\n----------\n\nThis Python library has been developed by the **reclamador.es** team without any previous collaboration agreement with Lleida.net. The code in this repository will be updated according to the updates on the Lleida.net APIs, initially based on the internal requirements of the **reclamador.es** team.\n\nFeatures\n--------\n\n* MailCert API: lets the client check the status of the PDF email certificate documents emitted by the Lleida.net MailCert service. Currently implemented methods:\n\n    * **get_default_settings**: retrieves a list of the MailCert service's configuration parameters associated to the account used by the PyLleida client.\n    * **list_pdf**: fetches a listing of PDF documents (email certificates), indicating their metadat, status and other identification data.\n    * **download_pdf**: fetches the binary data of a given PDF document (email certificate) if possible, otherwise returns an error response.\n\nUsage\n-----\n\nStart by importing the `PyLleida` client and creating a new instance with your *Lleida.net* credentials::\n\n    from pylleida import PyLleida\n\n    client = PyLleida('username', 'password')\n\nIn order to obtain a list of the email certificates that contain the word *John Doe* in their subject, do as follows::\n\n    # Request data\n    res = client.mail_cert.list_pdf(subjrw='John Doe')\n\n    # Access response contents\n    res.status  # u'100'\n    results = res.pdf_list  # ResponseItem object containing all results\n\n    results.rows_found  # u'1'\n    results.pdf_row  # List of ResponseItem objects, each containing data about an email certificate\n\n    certificate = results.pdf_row[0]\n    certificate.mail_id  # u'12345': the identifier of the email\n    certificate.file_status  # u'5': the status of the signature process associated to the document. u'5' indicates 'Finished PDF'.\n    certificate.mail_date  # u'20171108124802'\n    certificate.mail_to  # u'john@doe.com'\n    certificate.mail_from  # u'info@evilcorp.com'\n    certificate.file_id  # u'98765': identifier of the PDF document associated to the email certificate object.\n    certificate.file_status_desc  # u'Finished pdf': verbose description of the file status.\n    certificate.mail_subj  # u'=?utf-8?Q?John=20aDoe?='\n    certificate.file_type  # u'S': this value indicates the file is of type 'Sent (certificate email, normal variant, sent as certificate email)\n\nThere exist more fields accesible on the *certificate* variable. For a more complete description on each field, refer\nto the official *Lleida.net* API documentation.\n\nTo download the PDF contents associated to an email certificate, first look up its *file_id* value, then do something like::\n\n    file_id = u'98765'\n    res = client.mail_cert.download_pdf(file_id)\n    if res.has_file:  # Use this flag to check whether the file was successfully downloaded\n        cert_file = open('/path/to/cert/file', 'wb')\n        cert_file.write(res.content)\n        cert_file.flush()\n        cert_file.close()\n    else:\n        res_status = res.status  # Only available in case of error\n        res_msg = res.msg  # Only available in case of error\n        raise Exception(\"Requested file has no PDF contents yet: status %s, msg: %s\" % (res_status, res_msg))\n\nWhen requesting an email certificate by cc'ing *Lleida.net* in an email message, it can take some time for the *Lleida.net* servers\nto generate the PDF file of the email certificate. It is encouraged to perform the PDF document download at a later point in time.\n\nMailCert API\n------------\n\n* **get_default_settings**\n\nFetches the default settings associated to the username/password credentials supplied to the `PyLleida` constructor.\n\n* **list_pdf**\n\nEmail certificates generated by Lleida.net can be searched for using this method. Several filtering parameters can be\nprovided in order to narrow the search:\n\n    * *mail_from*: the email address of the certificate's sender. Example: `info@evilcorp.com`\n    * *mail_to*: the email address of the certificate's destination. Example: `john@doe.com`\n    * *date_min*: list email certificates generated after this datetime. Example: `201711200800` (from 20th November 2017, 08:00)\n    * *date_max*: fetch email certificates generated **before** this datetime. Example: `201801011000` (up to 1st January 2018, 11:00)\n    * *file_id_min*: list email certificates whose file identifiers are greater than this value. Example: `123456`\n    * *file_id_max*: list email certificates whose file identifiers are lower than this value. Example: `98765`\n    * *file_type*: limit the search results to a certain kind of certificates. Valid values are: ``\n    * *subjrw*: limit the search results based on a substring that should appear on the **subject** of the generated email certificates. Example: `Information for user john.doe`.\n    * *mail_message_id*: get results belonging to a certain email certificate identifier. Example: ``\n    * *only_last_file_id*: returns a single email certificate, the latest generated one. Set to `True` if desired.\n\n**Note**: *Lleida.net* does not paginate the search results. This means that you must narrow your search criteria as much\nas possible to avoid ending with humongous objects in memory. That is, if your search yields one million results, your\ncode will have a variable with one million items, each referencing a result.\n\n* **download_pdf**\n\nGiven an **already** generated email certificate file identifier, returns the binary contents of such file in PDF format.\n\n*Lleida.net* does not return a normalized response for both success and failure. Due to this fact,\nthe `PyLleida` client returns an object with a `has_file` boolean property, indicating whether the request\nreturned the requested file contents or not. By looking at this variable you may know about the outcome of the request.\n\n\nCredits\n-------\n\nThe `reclamador team`_.\n\n.. _`reclamador team`: https://www.reclamador.es/quienes-somos/\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n\n=======\nHistory\n=======\n\n0.1.0 (2017-11-07)\n------------------\n\n* First release on PyPI.\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/reclamador/pylleida",
    "keywords": "pylleida",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pylleida",
    "platform": "",
    "project_url": "https://pypi.org/project/pylleida/",
    "release_url": "https://pypi.org/project/pylleida/0.2.6/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A HTTP Python client to use the Lleida.net API",
    "version": "0.2.6"
  },
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c78f0d6f4d0b78f2ded421ce3c4180e2",
          "sha256": "3b530aa9b1bdad5a58a595f8b9fa5d6d9cf996228c888d850adcf847fab20a6e"
        },
        "downloads": -1,
        "filename": "pylleida-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c78f0d6f4d0b78f2ded421ce3c4180e2",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 5302,
        "upload_time": "2017-11-10T09:06:29",
        "url": "https://files.pythonhosted.org/packages/ff/c7/d080253b843ee1df390a47c0d8c8a7beced2329cb8e1fc65d55e7b009eff/pylleida-0.2.0-py2.py3-none-any.whl"
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0abe1393d2548576132527005fe5d63c",
          "sha256": "f16ae44649ac3518ced14b1373e50bcda3dae55162c9e221019faece27ab1e1c"
        },
        "downloads": -1,
        "filename": "pylleida-0.2.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0abe1393d2548576132527005fe5d63c",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 8370,
        "upload_time": "2017-11-16T15:20:38",
        "url": "https://files.pythonhosted.org/packages/d8/93/b25d5553081d829d402c9926da3b0416ebe1ff296427e84c59f3d0acd62f/pylleida-0.2.3-py2.py3-none-any.whl"
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "151442d520096ebfabefff1cbf22ab49",
          "sha256": "855c4e0b9dc7660ca7481ee70f4bd4740608eaa048c4f498d04ec6c601dc9f5d"
        },
        "downloads": -1,
        "filename": "pylleida-0.2.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "151442d520096ebfabefff1cbf22ab49",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 12227,
        "upload_time": "2017-11-21T16:47:43",
        "url": "https://files.pythonhosted.org/packages/42/56/00d035b90989ca0fb457f8143bf6d8f3643a3b61ccfb32e289bc286feb2e/pylleida-0.2.5-py2.py3-none-any.whl"
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f2255c31f0d49918a0fa52af257cfb82",
          "sha256": "e0310a41c7500ecf0a2a3add4ec804ecc038069eb38a7214bccc4583e915f7f3"
        },
        "downloads": -1,
        "filename": "pylleida-0.2.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2255c31f0d49918a0fa52af257cfb82",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 12230,
        "upload_time": "2017-12-22T11:44:04",
        "url": "https://files.pythonhosted.org/packages/2c/78/1375337091c33e34bbf90e97713ac534582f34fe25bf5d2fb4f1521681a5/pylleida-0.2.6-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f2255c31f0d49918a0fa52af257cfb82",
        "sha256": "e0310a41c7500ecf0a2a3add4ec804ecc038069eb38a7214bccc4583e915f7f3"
      },
      "downloads": -1,
      "filename": "pylleida-0.2.6-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f2255c31f0d49918a0fa52af257cfb82",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "size": 12230,
      "upload_time": "2017-12-22T11:44:04",
      "url": "https://files.pythonhosted.org/packages/2c/78/1375337091c33e34bbf90e97713ac534582f34fe25bf5d2fb4f1521681a5/pylleida-0.2.6-py2.py3-none-any.whl"
    }
  ]
}