{
  "info": {
    "author": "Eckhart Arnold",
    "author_email": "arnold@badw.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Code Generators",
      "Topic :: Software Development :: Compilers",
      "Topic :: Text Processing :: Markup"
    ],
    "description": "DHParser\n========\n\nA parser-combinator-based parsing and compiling infrastructure for domain\nspecific languages (DSL) in Digital Humanities projects.\n\nAuthor: Eckhart Arnold, Bavarian Academy of Sciences\nEmail:  arnold@badw.de\n\n\nLicense\n-------\n\nDHParser is open source software under the [MIT License](https://opensource.org/licenses/MIT)\n\n**Exception**: The module ``DHParser/typing.py`` was directly taken from the\nPython 3.5 source code in order for DHParser to be backwards compatible\nwith Python 3.4. The module ``DHParser/typing.py`` is licensed under the\n[Python Software Foundation License Version 2](https://docs.python.org/3.5/license.html)\n\n\nSources\n-------\n\nFind the sources on [gitlab.lrz.de/badw-it/DHParser](https://gitlab.lrz.de/badw-it/) . \nGet them with:\n    \n    git clone https://gitlab.lrz.de/badw-it/DHParser\n\n\nPurpose\n-------\n\nDomain specific languages are widespread in computer sciences, but\nseem to be underused in the Digital Humanities. While DSLs are\nsometimes introduced to Digital-Humanities-projects as\n[practical adhoc-solution][M\u00fcller_2016], these solutions are often\nsomewhat \"quick and dirty\". In other words they are more of a hack\nthan a technology. The purpose of DHParser is to introduce\n[DSLs as a technology][Arnold_2016] to the Digital Humanities. It is\nbased on the well known technology of [EBNF][ISO_IEC_14977]-based\nparser generators, but employs the more modern form called\n\"[parsing expression grammar][Ford_2004]\" and\n[parser combinators][Ford_20XX] as a variant of the classical\nrecursive descent parser.\n\nWhy another parser generator? There are plenty of good parser\ngenerators out there, e.g. [A\u00f1ez's grako parser generator][A\u00f1ez_2017], \n[Eclipse XText][XText_Website]. However, DHParser is\nintended as a tool that is specifically geared towards digital\nhumanities applications, while most existing parser generators come\nfrom compiler construction toolkits for programming languages. Also,\nDHParser shall (in the future) serve as a teching tool, which\ninfluences some of its design decisions such as, for example, clearly\nseparating the parsing, syntax-tree-transformation and compilation\nstages. Also, DHParser is intended as a tool to experiment with.  One\npossible research area is, how non\n[context-free grammars](https://en.wikipedia.org/wiki/Context-free_grammar)\nsuch as the grammars of [TeX][tex_stackexchange_no_bnf] or\n[CommonMark][MacFarlane_et_al_2017] can be described with declarative\nlangauges in the spirit of but beyond EBNF, and what extensions of the\nparsing technology are necessary to capture such languages.\n\nPrimary use case at the Bavarian Academy of Sciences and Humanities\n(for the time being): A DSL for the\n\"[Mittellateinische W\u00f6rterbuch](http://www.mlw.badw.de/)\"!\n\nFurther (intended) use cases are:\n\n* LaTeX -> XML/HTML conversion. See this\n  [discussion on why an EBNF-parser for the complete TeX/LaTeX-grammar][tex_stackexchange_no_bnf]\n  is not possible.\n* [CommonMark][MacFarlane_et_al_2017] and other DSLs for cross media\n  publishing of scientific literature, e.g. journal articles.  (Common\n  Mark and Markdown also go beyond what is feasible with pure\n  EBNF-based-parsers.)\n* EBNF itself. DHParser is already self-hosting ;-)\n* Digital and cross-media editions \n* Digital dictionaries\n\n\nDescription\n-----------\n\n... comming soon ;-)\n\nFor a simple self-test run `dhparser.py` from the command line. This\ncompiles the EBNF-Grammer in `examples/EBNF/EBNF.ebnf` and outputs the\nPython-based parser class representing that grammar. The concrete and\nabstract syntax tree as well as a full and abbreviated log of the\nparsing process will be stored in a sub-directory named \"DEBUG\".\n\n\n\nReferences\n----------\n\nJuancarlo A\u00f1ez: grako, a PEG parser generator in Python, 2017. URL:\n[bitbucket.org/apalala/grako][A\u00f1ez_2017]\n\n[A\u00f1ez_2017]: https://bitbucket.org/apalala/grako\n\n\nEckhart Arnold: Dom\u00e4nenspezifische Notationen. Eine (noch)\nuntersch\u00e4tzte Technologie in den Digitalen Geisteswissenschaften,\nPr\u00e4sentation auf dem\n[dhmuc-Workshop: Digitale Editionen und Auszeichnungssprachen](https://dhmuc.hypotheses.org/workshop-digitale-editionen-und-auszeichnungssprachen),\nM\u00fcnchen 2016. Short-URL: [tiny.badw.de/2JVT][Arnold_2016]\n\n[Arnold_2016]: https://f.hypotheses.org/wp-content/blogs.dir/1856/files/2016/12/EA_Pr%C3%A4sentation_Auszeichnungssprachen.pdf\n\n\nBrian Ford: Parsing Expression Grammars: A Recognition-Based Syntactic\nFoundation, Cambridge\nMassachusetts, 2004. Short-URL:[http://t1p.de/jihs][Ford_2004]\n\n[Ford_2004]: https://pdos.csail.mit.edu/~baford/packrat/popl04/peg-popl04.pdf\n  \n[Ford_20XX]: http://bford.info/packrat/ \n\n\nRichard A. Frost, Rahmatullah Hafiz and Paul Callaghan: Parser\nCombinators for Ambiguous Left-Recursive Grammars, in: P. Hudak and\nD.S. Warren (Eds.): PADL 2008, LNCS 4902, pp. 167\u2013181, Springer-Verlag\nBerlin Heidelberg 2008.\n\n\nDominikus Herzberg: Objekt-orientierte Parser-Kombinatoren in Python,\nBlog-Post, September, 18th 2008 on denkspuren. gedanken, ideen,\nanregungen und links rund um informatik-themen, short-URL:\n[http://t1p.de/bm3k][Herzberg_2008a]\n\n[Herzberg_2008a]: http://denkspuren.blogspot.de/2008/09/objekt-orientierte-parser-kombinatoren.html\n\n\nDominikus Herzberg: Eine einfache Grammatik f\u00fcr LaTeX, Blog-Post,\nSeptember, 18th 2008 on denkspuren. gedanken, ideen, anregungen und\nlinks rund um informatik-themen, short-URL:\n[http://t1p.de/7jzh][Herzberg_2008b]\n\n[Herzberg_2008b]: http://denkspuren.blogspot.de/2008/09/eine-einfache-grammatik-fr-latex.html\n\n\nDominikus Herzberg: Uniform Syntax, Blog-Post, February, 27th 2007 on\ndenkspuren. gedanken, ideen, anregungen und links rund um\ninformatik-themen, short-URL: [http://t1p.de/s0zk][Herzberg_2007]\n\n[Herzberg_2007]: http://denkspuren.blogspot.de/2007/02/uniform-syntax.html\n\n\n[ISO_IEC_14977]: http://www.cl.cam.ac.uk/~mgk25/iso-14977.pdf\n\n\nJohn MacFarlane, David Greenspan, Vicent Marti, Neil Williams,\nBenjamin Dumke-von der Ehe, Jeff Atwood: CommonMark. A strongly\ndefined, highly compatible specification of\nMarkdown, 2017. [commonmark.org][MacFarlane_et_al_2017]\n\n[MacFarlane_et_al_2017]: http://commonmark.org/\n\n\nStefan M\u00fcller: DSLs in den digitalen Geisteswissenschaften,\nPr\u00e4sentation auf dem\n[dhmuc-Workshop: Digitale Editionen und Auszeichnungssprachen](https://dhmuc.hypotheses.org/workshop-digitale-editionen-und-auszeichnungssprachen),\nM\u00fcnchen 2016. Short-URL: [tiny.badw.de/2JVy][M\u00fcller_2016]\n\n[M\u00fcller_2016]: https://f.hypotheses.org/wp-content/blogs.dir/1856/files/2016/12/Mueller_Anzeichnung_10_Vortrag_M%C3%BCnchen.pdf\n\n\n[tex_stackexchange_no_bnf]: http://tex.stackexchange.com/questions/4201/is-there-a-bnf-grammar-of-the-tex-language\n \n[tex_stackexchange_latex_parsers]: http://tex.stackexchange.com/questions/4223/what-parsers-for-latex-mathematics-exist-outside-of-the-tex-engines \n\n[XText_website]: https://www.eclipse.org/Xtext/",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://gitlab.lrz.de/badw-it/DHParser",
    "keywords": "Digital Humanities,domain specific languages,parser combinators,EBNF",
    "license": "MIT License (https://opensource.org/licenses/MIT)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DHParser",
    "platform": "",
    "project_url": "https://pypi.org/project/DHParser/",
    "release_url": "https://pypi.org/project/DHParser/0.7.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "DHParser - Domain specific languages for the Digital Humanities",
    "version": "0.7.3"
  },
  "releases": {
    "0.7.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "361c179131e48089b2df49990f887fe4",
          "sha256": "f0915d69e00a306db0b55182d04a84888b39e85d0b14b42175af57dc44ae6950"
        },
        "downloads": 0,
        "filename": "DHParser-0.7.3.tar.gz",
        "has_sig": false,
        "md5_digest": "361c179131e48089b2df49990f887fe4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 80724,
        "upload_time": "2017-06-27T14:06:45",
        "url": "https://files.pythonhosted.org/packages/2d/03/ca0e416b259c43e43531cd6ea9cb3bf14f09eeaf450a12326532d501ca52/DHParser-0.7.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "361c179131e48089b2df49990f887fe4",
        "sha256": "f0915d69e00a306db0b55182d04a84888b39e85d0b14b42175af57dc44ae6950"
      },
      "downloads": 0,
      "filename": "DHParser-0.7.3.tar.gz",
      "has_sig": false,
      "md5_digest": "361c179131e48089b2df49990f887fe4",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 80724,
      "upload_time": "2017-06-27T14:06:45",
      "url": "https://files.pythonhosted.org/packages/2d/03/ca0e416b259c43e43531cd6ea9cb3bf14f09eeaf450a12326532d501ca52/DHParser-0.7.3.tar.gz"
    }
  ]
}