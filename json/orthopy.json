{
  "info": {
    "author": "Nico Schl\u00f6mer",
    "author_email": "nico.schloemer@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "orthopy\n=======\n\nPython tools for orthogonal polynomials and Gaussian quadrature for\n`lines <#line-segment>`__, `triangles <#triangle>`__, and\n`spheres <#sphere>`__.\n\n|CircleCI| |codecov| |awesome| |PyPi Version| |GitHub stars|\n\n*All functions in this module are fully vectorized and, where possible\nand practical, return results in exact arithmetic.*\n\nLine segment\n~~~~~~~~~~~~\n\n.. figure:: https://nschloe.github.io/orthopy/line-segment.png\n   :alt: \n\nGaussian quadrature schemes and orthogonal polynomials of the form\n\n::\n\n    pi_{k+1}(x) = (a[k] x - b[k]) * pi_k(x) - c[k] * pi_{k-1}(x)\n\n(defined by their *recurrence coefficients* ``a``, ``b``, ``c``) are\nclosely related. orthopy provides tools for working with them.\n\nClassical schemes\n^^^^^^^^^^^^^^^^^\n\nWith orthopy, it's easy to regenerate classical Gauss quadrature schemes\nare listed in, e.g., `Stroud &\nSecrest <https://books.google.de/books/about/Gaussian_quadrature_formulas.html?id=X7M-AAAAIAAJ>`__.\n\nSome examples:\n\n.. code:: python\n\n    points, weights = orthopy.line.schemes.legendre(96, decimal_places=30)\n    points, weights = orthopy.line.schemes.hermite(14, decimal_places=20)\n    points, weights = orthopy.line.schemes.laguerre(13, decimal_places=50)\n\nGenerating your own Gauss quadrature in three simple steps\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nYou have a measure (or, more colloquially speaking, a domain and a\nnonnegative weight function) and would like to generate the matching\nGauss quadrature? Great, here's how to do it.\n\nAs an example, let's try and generate the Gauss quadrature with 10\npoints for the weight function ``x^2`` on the interval ``[-1, +1]``.\n\nTLDR:\n\n.. code:: python\n\n    import orthopy\n    moments = orthopy.line.compute_moments(lambda x: x**2, -1, +1, 20)\n    alpha, beta = orthopy.line.chebyshev(moments)\n    points, weights = orthopy.line.schemes.custom(alpha, beta, decimal_places=30)\n\nSome explanations:\n\n1. You need to compute the first ``2*n`` *moments* of your measure\n   ``integral(w(x) p_k(x) dx)`` with a particular set of polynomials\n   ``p_k``. A common choice are the monomials ``x^k``. You can do that\n   by hand or use\n   ``python  moments = orthopy.line.compute_moments(lambda x: x**2, -1, +1, 20)``\n   ``[2/3, 0, 2/5, 0, 2/7, 0, 2/9, 0, 2/11, 0, 2/13, 0, 2/15, 0, 2/17, 0, 2/19, 0, 2/21, 0]``\n   Note that the moments have all been computed symbolically here.\n\n   If you have the moments in floating point (for example because you\n   need to compute the scheme fast), it makes sense to think about the\n   numerical implications here. That's because the map to the recurrence\n   coefficients (step 2) can be *very* ill-conditioned, meaning that\n   small round-off errors can lead to an unusable scheme. For further\n   computation, it's numerically beneficial if the moments are either 0\n   or in the same order of magnitude. The above numbers are alright, but\n   if you want to max it out, you could try Legendre polynomials for\n   ``p_k``:\n   ``python  moments = orthopy.line.compute_moments(      lambda x: x**2, -1, +1, 20,      polynomial_class=orthopy.line.legendre      )``\n   ``[2/3, 0, 8/45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]``\n   Better!\n\n2. From the moments, we generate the recurrence coefficients of our\n   custom orthogonal polynomials. There are a few choices to accomplish\n   this:\n\n   -  ``golub_welsch``: uses Cholesky at its core; can be numerically\n      unstable\n   -  ``stieltjes``: moments not even needed here, but can also be\n      numerically unstable\n   -  ``chebyshev``: can be used if you chose monomials in the first\n      step; again, potentially numerically unstable\n   -  ``chebyshev_modified``: to be used if you chose something other\n      than monomials in the first step; stable if the\n      ``polynomial_class`` was chosen wisely\n\n   Since we have computed modified moments in step one, let's use the\n   latter method:\n   ``python    _, _, a, b = orthopy.line.recurrence_coefficients.legendre(20, 'monic')    alpha, beta = orthopy.line.chebyshev_modified(moments, a, b)``\n   ``[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]    [2/3, 3/5, 4/35, 25/63, 16/99, 49/143, 12/65, 27/85, 64/323, 121/399]``\n   (Note that, since everything is done symbolically in this example, we\n   could have used Stieltjes's or Chebyshev's unmodified method; the\n   results are the same.)\n\n3. Lastly, we generate the Gauss points and weights from ``alpha`` and\n   ``beta``. Since symbolic computation can take *very* long even for\n   small sizes, we choose the ``mpmath`` mode (default) with 30 decimal\n   digits\n   ``python  points, weights = \\      orthopy.line.schemes.custom(alpha, beta, mode='mpmath', decimal_places=30)``\n   ``[-0.978228658146056992803938001123,   -0.887062599768095299075157769304,   -0.730152005574049324093416252031,   -0.519096129206811815925725669458,   -0.269543155952344972331531985401,   0.2695431559523449723315319854,   0.519096129206811815925725669458,   0.730152005574049324093416252031,   0.887062599768095299075157769304,   0.978228658146056992803938001123]``\n   ``[0.0532709947237135572432759986252,     0.0988166881454075626728761840589,     0.0993154007474139787312043384226,     0.0628365763465911675266984722740,     0.0190936733702070671592783399524,     0.0190936733702070671592783399524,     0.0628365763465911675266984722744,     0.0993154007474139787312043384225,     0.0988166881454075626728761840592,     0.0532709947237135572432759986251]``\n   Congratulations! Your Gaussian quadrature rule.\n\nOther tools\n^^^^^^^^^^^\n\n-  Transforming Gaussian points and weights back to recurrence\n   coefficients:\n   ``python    alpha, beta = orthopy.line.coefficients_from_gauss(points, weights)``\n\n-  Recurrence coefficients of Jacobi polynomials\n   ``w(x) = (1-x)^alpha * (1+x)^beta`` with any ``alpha`` or ``beta``\n   are explicitly given:\n   ``python    p0, a, b, c = orthopy.line.recurrence_coefficients.jacobi(n, a, b, 'monic')``\n   Possible choices for the standardization are ``'monic'``,\n   ``'p(1)=(n+alpha over n)'``, and ``'normal``.\n\n-  The Gautschi test: `As recommended by\n   Gautschi <https://doi.org/10.1007/BF02218441>`__, you can test your\n   moment-based scheme with\n   ``python    err = orthopy.line.check_coefficients(moments, alpha, beta)``\n-  `Clenshaw\n   algorithm <https://en.wikipedia.org/wiki/Clenshaw_algorithm>`__ for\n   computing the weighted sum of orthogonal polynomials:\n   ``python    vals = orthopy.line.clenshaw(a, alpha, beta, t)``\n\n-  Evaluate orthogonal polynomials (at many points at once):\n   ``python    vals = orthopy.line.evaluate_orthogonal_polynomial(alpha, beta, t)``\n\n-  Evaluate the entire *associated Legendre* tree up to a given level at\n   once:\n   ``python    vals = orthopy.line.alp_tree(    n, x,    normalization='full',    with_condon_shortley_phase=True    )``\n   The implementation is numerically stable.\n\nTriangle\n~~~~~~~~\n\n.. figure:: https://nschloe.github.io/orthopy/triangle.png\n   :alt: \n   :width: 25.0%\n\nJust like in one dimension, orthogonal polynomials can be defined for\nany domain and weight function. orthopy provides the means for computing\northogonal/-normal polynomials for the triangle. The implementation is\nrecurrent and numerically stable.\n\n.. code:: python\n\n    vals = orthopy.triangle.tree(4, x, 'normal', symbolic=False)\n\nAvailable standardizations are ``'normal'`` (normalized polynomials,\ni.e., the integral of the squared function equals 1) and ``'1'`` where\nthe polynomial is ``1`` in at least one corner of the triangle.\n\nIf ``symbolic=True`` is specified, all computations are performed\nsymbolically. This can be used, for example, to get the classical\nrepresentations of the polynomials:\n\n.. code:: python\n\n    import numpy\n    import orthopy\n    import sympy\n\n    b0, b1, b2 = sympy.Symbol('b0'), sympy.Symbol('b1'), sympy.Symbol('b2')\n\n    tree = orthopy.triangle.tree(\n            3, numpy.array([b0, b1, b2]), 'normal', symbolic=True\n            )\n\n    print(sympy.expand(tree[3][1]))\n\n::\n\n    42*sqrt(6)*b0*b2**2 - 24*sqrt(6)*b0*b2 + 2*sqrt(6)*b0 - 42*sqrt(6)*b1*b2**2 + 24*sqrt(6)*b1*b2 - 2*sqrt(6)*b1\n\nQuadrilateral\n~~~~~~~~~~~~~\n\n.. figure:: https://nschloe.github.io/orthopy/quad.png\n   :alt: \n   :width: 25.0%\n\n.. code:: python\n\n    vals = orthopy.triangle.tree(4, x, symbolic=False)\n\nAll polynomials are normalized on the quadrilateral.\n\nSphere\n~~~~~~\n\n.. figure:: https://nschloe.github.io/orthopy/sphere.png\n   :alt: \n   :width: 25.0%\n\nEvaluate the entire *spherical harmonics* tree up to a given level at\nonce. Again, the implementation is numerically stable.\n\n.. code:: python\n\n    vals = orthopy.sphere.sph_tree(n, x, symbolic=False)\n\nNote that spherical harmonics are complex-valued in general. The above\nplot only shows the absolute value of SPH(5, 3).\n\nRelevant publications\n~~~~~~~~~~~~~~~~~~~~~\n\n-  `A.H. Stroud and D. Secrest, Gaussian Quadrature Formulas, 1966,\n   Prentice Hall, Series in Automatic\n   Computation <https://books.google.de/books/about/Gaussian_quadrature_formulas.html?id=X7M-AAAAIAAJ>`__\n-  `Gene H. Golub and John H. Welsch, Calculation of Gauss Quadrature\n   Rules, Mathematics of Computation, Vol. 23, No. 106 (Apr., 1969), pp.\n   221-230+s1-s10 <https://dx.doi.org/10.2307/2004418>`__\n-  `W. Gautschi, On Generating Orthogonal Polynomials, SIAM J. Sci. and\n   Stat. Comput., 3(3), 289\u2013317 <https://doi.org/10.1137/0903018>`__\n-  `W. Gautschi, How and how not to check Gaussian quadrature formulae,\n   BIT Numerical Mathematics, June 1983, Volume 23, Issue 2, pp\n   209\u2013216 <https://doi.org/10.1007/BF02218441>`__\n-  `D. Boley and G.H. Golub, A survey of matrix inverse eigenvalue\n   problems, Inverse Problems, 1987, Volume 3, Number\n   4 <https://doi.org/10.1088/0266-5611/3/4/010>`__\n-  `W. Gautschi, Algorithm 726: ORTHPOL\u2013a package of routines for\n   generating orthogonal polynomials and Gauss-type quadrature rules,\n   ACM Transactions on Mathematical Software (TOMS), Volume 20, Issue 1,\n   March 1994, Pages 21-62 <http://doi.org/10.1145/174603.174605>`__\n\nInstallation\n~~~~~~~~~~~~\n\northopy is `available from the Python Package\nIndex <https://pypi.python.org/pypi/orthopy/>`__, so with\n\n::\n\n    pip install -U orthopy\n\nyou can install/upgrade.\n\nTesting\n~~~~~~~\n\nTo run the tests, simply check out this repository and run\n\n::\n\n    pytest\n\nDistribution\n~~~~~~~~~~~~\n\nTo create a new release\n\n1. bump the ``__version__`` number,\n\n2. publish to PyPi and GitHub:\n\n   ::\n\n       $ make publish\n\nLicense\n~~~~~~~\n\northopy is published under the `MIT\nlicense <https://en.wikipedia.org/wiki/MIT_License>`__.\n\n.. |CircleCI| image:: https://img.shields.io/circleci/project/github/nschloe/orthopy/master.svg\n   :target: https://circleci.com/gh/nschloe/orthopy/tree/master\n.. |codecov| image:: https://codecov.io/gh/nschloe/orthopy/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/nschloe/orthopy\n.. |awesome| image:: https://img.shields.io/badge/awesome-yes-brightgreen.svg\n   :target: https://img.shields.io/badge/awesome-yes-brightgreen.svg\n.. |PyPi Version| image:: https://img.shields.io/pypi/v/orthopy.svg\n   :target: https://pypi.python.org/pypi/orthopy\n.. |GitHub stars| image:: https://img.shields.io/github/stars/nschloe/orthopy.svg?style=social&label=Stars\n   :target: https://github.com/nschloe/orthopy\n\n\n",
    "docs_url": null,
    "download_url": "https://pypi.python.org/pypi/orthopy",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/nschloe/orthopy",
    "keywords": "",
    "license": "License :: OSI Approved :: MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "orthopy",
    "platform": "",
    "project_url": "https://pypi.org/project/orthopy/",
    "release_url": "https://pypi.org/project/orthopy/0.4.0/",
    "requires_dist": [
      "meshio; extra == 'sphere-plot'",
      "meshzoo; extra == 'sphere-plot'",
      "sympy",
      "scipy",
      "pipdate",
      "numpy",
      "matplotlib"
    ],
    "requires_python": "",
    "summary": "tools for orthogonal polynomials, Gaussian quadrature",
    "version": "0.4.0"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "777a0e91d67e05ba76e57e4cfc06ae73",
          "sha256": "1d660c148103ed27e94e2e19171632b464e7a61b5bece5b63592eb36075ce8bf"
        },
        "downloads": -1,
        "filename": "orthopy-0.0.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "777a0e91d67e05ba76e57e4cfc06ae73",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7171,
        "upload_time": "2017-08-20T15:09:08",
        "url": "https://files.pythonhosted.org/packages/f4/e2/3e1c6d64347e8c4abdcf45f6b831002980284109485a02f22439f784d918/orthopy-0.0.1-py2.py3-none-any.whl"
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5c5567b1f96457d8a78b80ba829f9329",
          "sha256": "10382637cfc4fdfe51b99da488187d2b48bd23ca20af20cee4cba9792e52a217"
        },
        "downloads": -1,
        "filename": "orthopy-0.1.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "5c5567b1f96457d8a78b80ba829f9329",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10814,
        "upload_time": "2017-08-22T16:11:39",
        "url": "https://files.pythonhosted.org/packages/11/21/b27fb58b78d85547263115b1eed256f163c9eb59b0aa1a71dc4e67d84b5d/orthopy-0.1.0-py2.py3-none-any.whl"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e3ec3e84cfd1f31c47d512b681574f78",
          "sha256": "968ed6543ab63d285ab87d928be72f18e536b6e1c7b3e520e245214d3edce19e"
        },
        "downloads": -1,
        "filename": "orthopy-0.1.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "e3ec3e84cfd1f31c47d512b681574f78",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 10829,
        "upload_time": "2017-08-29T20:48:32",
        "url": "https://files.pythonhosted.org/packages/f4/2e/8d9dac09af834e231d689e3d3a5332fdad63663610ce90caf5b021c98bb6/orthopy-0.1.1-py2.py3-none-any.whl"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e1e366215649433cad9fbb57bec4e634",
          "sha256": "9b9d6030c1599bdafb42e8b3fa4f7878cd4a8d853248011df77fb1a512de3c31"
        },
        "downloads": -1,
        "filename": "orthopy-0.1.2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "e1e366215649433cad9fbb57bec4e634",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 12548,
        "upload_time": "2017-08-31T10:58:27",
        "url": "https://files.pythonhosted.org/packages/24/a7/928b1d99a2258b17d4aa901d7b09b8d953e8bd86e4b344371c010265a8bd/orthopy-0.1.2-py2.py3-none-any.whl"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0ce3695befff2fad4a4b84f9a4996937",
          "sha256": "83c3150efeb247de99334ac2fbbec43814f646c612dd01bedb70047a22956d15"
        },
        "downloads": -1,
        "filename": "orthopy-0.1.3-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "0ce3695befff2fad4a4b84f9a4996937",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 18625,
        "upload_time": "2017-09-01T17:35:55",
        "url": "https://files.pythonhosted.org/packages/92/d1/75fdd64fc445b824f50c74465013c9f58beb487ce1baa4927f9869064032/orthopy-0.1.3-py2.py3-none-any.whl"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3e1c5276117626c446dcdd8a68e52c25",
          "sha256": "fff1a46267f9878dec0ea16f3089292bbba02c900e93050fa9a22b57c3e32724"
        },
        "downloads": -1,
        "filename": "orthopy-0.1.4-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "3e1c5276117626c446dcdd8a68e52c25",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 18608,
        "upload_time": "2017-09-10T20:29:37",
        "url": "https://files.pythonhosted.org/packages/32/57/9a1adaa5aca8edd193905b585841b83a43a058cfe0b960796521f301e57e/orthopy-0.1.4-py2.py3-none-any.whl"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4967593c8c010ef80c4e69b428da4956",
          "sha256": "d126b80f541be90c8701484f622bb9f9545bf6eedb2ad9b6c92895e894977e37"
        },
        "downloads": -1,
        "filename": "orthopy-0.1.5-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "4967593c8c010ef80c4e69b428da4956",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 17428,
        "upload_time": "2017-10-09T13:38:42",
        "url": "https://files.pythonhosted.org/packages/db/9b/f121497171d77f7a52916528bb21982bfbdb31038409ac6239dd58ef098b/orthopy-0.1.5-py2.py3-none-any.whl"
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c50c5ca6a912ecdc6cdf68f2149bd370",
          "sha256": "37bdcfc6d3e02d2e47107d155829b8987ec7e52568141ec6f3f5889480382921"
        },
        "downloads": -1,
        "filename": "orthopy-0.1.6-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "c50c5ca6a912ecdc6cdf68f2149bd370",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 17434,
        "upload_time": "2017-10-11T16:47:07",
        "url": "https://files.pythonhosted.org/packages/9e/74/891575226a97cb9bb040d74801e082f973924a579f725d3dbbd1c34f3309/orthopy-0.1.6-py2.py3-none-any.whl"
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "220aec665b86363d00bafcf9bdc58fcf",
          "sha256": "e1059785a52fda420967defea9d6e696d1010a5a6f1077818bf2270e1a10ded3"
        },
        "downloads": -1,
        "filename": "orthopy-0.1.7-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "220aec665b86363d00bafcf9bdc58fcf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 17463,
        "upload_time": "2017-10-12T22:04:14",
        "url": "https://files.pythonhosted.org/packages/0c/0e/cd101a4238c10d8822978a393afcbd7db90f22cd5e612d640281c85e2126/orthopy-0.1.7-py2.py3-none-any.whl"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9d2cc1a45b8e7a41d5547d653a18fc2f",
          "sha256": "02f8e8e1353fbf920f441a3bc4e3c9c50d835dadffc6602ef670606da2b4b231"
        },
        "downloads": -1,
        "filename": "orthopy-0.2.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "9d2cc1a45b8e7a41d5547d653a18fc2f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 17810,
        "upload_time": "2017-11-14T14:58:50",
        "url": "https://files.pythonhosted.org/packages/ce/e1/3f666ed4304adf354a39d8f1ecabc19dff74e120098ce147da0294e4cacd/orthopy-0.2.0-py2.py3-none-any.whl"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3d785fb89ad3e503b3412b8af953dc3e",
          "sha256": "1710aeb8a3066d37660b3c5045ddd1c40fe4b5a822659594ab5b2c8561f3f44c"
        },
        "downloads": -1,
        "filename": "orthopy-0.2.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "3d785fb89ad3e503b3412b8af953dc3e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 18007,
        "upload_time": "2017-11-24T17:22:39",
        "url": "https://files.pythonhosted.org/packages/08/56/b19b056cd1681116ddbc8a0969aceb7cc1d96044fd4585559d475fe17e08/orthopy-0.2.1-py2.py3-none-any.whl"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ea0c281da8eab4a73a4a71fa22bad431",
          "sha256": "dfd34e80e7dd25fd6bd97bcbd9856e4bbbc63923be9651143a710ad52a85405f"
        },
        "downloads": -1,
        "filename": "orthopy-0.3.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "ea0c281da8eab4a73a4a71fa22bad431",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 23725,
        "upload_time": "2017-11-24T22:35:58",
        "url": "https://files.pythonhosted.org/packages/3d/7e/fd48ff9ede883fde2860509aba585ebdd19ae167a835e5fc88a793e6b013/orthopy-0.3.0-py2.py3-none-any.whl"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "493acfd9e307523ba79bb56ba6fba1ba",
          "sha256": "ab587a03aed52dcb53fc8923c1385eeed612aa16b4c39683ea07a11ae3fe15c2"
        },
        "downloads": -1,
        "filename": "orthopy-0.3.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "493acfd9e307523ba79bb56ba6fba1ba",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 23857,
        "upload_time": "2017-11-26T14:20:43",
        "url": "https://files.pythonhosted.org/packages/9b/14/1b028b3d4b22fbb7f31f366ffe51fb76753ad3cf123888888f137e5359b9/orthopy-0.3.1-py2.py3-none-any.whl"
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "295def671146a23954a84082153f88e9",
          "sha256": "5f7b1e20dc168c1acbaed7f22f0a10c1794e2a192238b5cce2289f46f8440268"
        },
        "downloads": -1,
        "filename": "orthopy-0.3.2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "295def671146a23954a84082153f88e9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 23715,
        "upload_time": "2017-11-27T11:18:58",
        "url": "https://files.pythonhosted.org/packages/ad/46/efd1ebf401cf4340d5b68db2e7072ad936c035681df250516b54cea412c3/orthopy-0.3.2-py2.py3-none-any.whl"
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9bab24bb7c39eb74a1c6f53f4840dfac",
          "sha256": "eed2ea570c34ab7b9cac76197dd4e29fffb7f87ea02a41bead979bfc532245e4"
        },
        "downloads": -1,
        "filename": "orthopy-0.3.3-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "9bab24bb7c39eb74a1c6f53f4840dfac",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 24307,
        "upload_time": "2017-11-27T14:03:18",
        "url": "https://files.pythonhosted.org/packages/dd/8b/c3bd4fb387e92d56c67801d207fba1bdff6bcabb33691ebd229e5c756cde/orthopy-0.3.3-py2.py3-none-any.whl"
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5a26c1e97b7f7e6aada9a61bd60b3c43",
          "sha256": "a2d460aa109dadd204129fce5ad5778b172571297e69ea78a49b3c8bb7783576"
        },
        "downloads": -1,
        "filename": "orthopy-0.3.4-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "5a26c1e97b7f7e6aada9a61bd60b3c43",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 26094,
        "upload_time": "2017-12-11T16:32:27",
        "url": "https://files.pythonhosted.org/packages/16/4f/e820b80796d23aa4cc5833e2015ed9d27a72d50bac4af9dbbf0cbfcbfc56/orthopy-0.3.4-py2.py3-none-any.whl"
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "729c9866af18873ad7f0d11ef378bbac",
          "sha256": "aac8a2bf0482085e52598eee094ed04aa5e2afda72e854e0fa417b9ca744bc4f"
        },
        "downloads": -1,
        "filename": "orthopy-0.4.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "729c9866af18873ad7f0d11ef378bbac",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 27144,
        "upload_time": "2017-12-16T18:36:36",
        "url": "https://files.pythonhosted.org/packages/3c/a8/97a62b576a947dddee52a5819c966d9d1d3c690c81fce821d3eaa9104d60/orthopy-0.4.0-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "729c9866af18873ad7f0d11ef378bbac",
        "sha256": "aac8a2bf0482085e52598eee094ed04aa5e2afda72e854e0fa417b9ca744bc4f"
      },
      "downloads": -1,
      "filename": "orthopy-0.4.0-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "729c9866af18873ad7f0d11ef378bbac",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 27144,
      "upload_time": "2017-12-16T18:36:36",
      "url": "https://files.pythonhosted.org/packages/3c/a8/97a62b576a947dddee52a5819c966d9d1d3c690c81fce821d3eaa9104d60/orthopy-0.4.0-py2.py3-none-any.whl"
    }
  ]
}