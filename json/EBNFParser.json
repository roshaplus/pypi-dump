{
  "info": {
    "author": "thautwarm",
    "author_email": "twshere@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "|Build Status| |GPLv3.0 License| |PyPI version|\n\nEBNFParser\n==========\n\nParse Many, Any, Every\n----------------------\n\n`HomePage <https://github.com/thautwarm/EBNFParser>`__\n\nMulti-Language-Versions\n-----------------------\n\n-  `Python Project <./Python>`__  (v0.1.1)\n    - `What's new in EBNFParser 0.1.2 <./Python/release-note>`__\n-  `C# Project <./CSharp>`__ (unfinished)\n\n--------------\n\nAn Introduce to EBNFParser\n--------------------------\n\n``EBNFParser`` seems to be a parser framework for EBNF, however, it's\njust what I want to do at the beginning, and so far this framework is\nmuch more powerful than what I used to expect it to be.\n\nAs a result, I prefer to call it ``EEBNF``\\ (which means\n``Extented(Extented Backus-Naur Form)``).\n\nWhat's more, **tokenizer** is **automatically generated** from EEBNF, as\nwell as the parsers for your DSL.\n\nHere are some grammars for ``EEBNF``, and they're quite easy to be\nlearnt.\n\nI'm going to write the parsers for **Lisp** quickly to tell you how to\nuse EBNFParser.\n\nThe reason why I choose Lisp is that its EEBNF codes is very very short.\n\n.. code:: bnf\n\n    Atom  := R'[^\\(\\)\\s]+' # use Regex\n    # define a literal parser. `Atom::= R'[^\\(\\)\\s]+'` is ok, but the ast parsed from the two is a little different with each other.\n    Left  := '('\n    Right := ')'\n    SExpr ::= Atom | Left SExpr* Right\n\n| Okay, now a parser for Lisp is finished! Let's save this file as\n  ``lisp.eebnf``. \n  \n  Just \n  \n  - download CPython 3.6(If you're in China, go to `Tsinghua Tuna Mirror <https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/>`__ and choose the corresponding installer for you OS.\n  - download EBNFParser ``pip install EBNFParser``. \n  \n  - type this codes ``parserGenerator.py lisp.eebnf ./parser.py -test True -comment True``\n  \n  And now there should be two files(\\ ``testLang.py, parser.py``)\n  automatically generated near by ``lisp.eebnf``. - feel free to try any\n  lisp codes as ``<Lisp Codes>`` with following command.\n\n\n.. code:: shell\n\n    python testLang.py SExpr `<Lisp Codes>` \n    # python testLang.py SExpr \"(+ 1 +(2 3))\" -o test1\n    SExpr[Left[(]\n      \n      SExpr[Atom[+]\n            \n      ]\n      SExpr[Atom[1]\n        ...\n    ]\n    # python testLang.py SExpr \"(define a x y (+ x y))\" -o test2\n    SExpr[Left[(]\n      \n      SExpr[Atom[define]\n            \n      ]\n      SExpr[Atom[a]\n            \n      ]\n        ...\n    ]\n\nSee the results at `test1.json, test1Ast, test2.json, test2Ast`.  \nA complete EEBNF for Lisp can be found at [Grammar](./tests/Python/Lang/Lisp/grammar).  \nHere are more examples given at the following sections.\n\nEach example has the same structure like:\n\n- ``grammar``. The only file you have to write. \n- ``parser.py``.Parser and token generated by EBNFParser. \n- ``testLang.py``. To do some testing easily. \n- ``testn.json``. The n-th testing result in JSON format. \n- ``testnAst``. The n-th testing result in S-Expr format.\n\nSome Examples\n-------------\n\n-  `Lisp <./tests/Python/Lang/Lisp>`__\n\n   -  Grammar See ``./tests/Python/Lang/Lisp/grammar``.\n\n      ::\n\n          Expr  Throw NEWLINE ::= Atom | Quote | '(' NEWLINE* Expr* NEWLINE* ')' \n          Quote   ::= '`' Expr\n          Atom    := R'\\S+'\n          NEWLINE := R'\\n'\n          Stmt Throw NEWLINE  ::= (NEWLINE* Expr* NEWLINE*)*\n\n   -  testCodes See ``./testpy.sh``.\n\n      ::\n\n          export PYTHONPATH=\"Python\"\n          python Python/parserGenerator.py tests/Python/Lang/Lisp/grammar tests/Python/Lang/Lisp/parser.py -test True\n          python tests/Python/Lang/Lisp/testLang.py Stmt \"(set r 1) (define a b (+ a (+ r 1)))\"  -o tests/Python/Lang/Lisp/test1\n\n   -  Result\n\n      -  | JSON.\n         | See ``./tests/Python/Lang/Lisp/test1.json``.\n\n         .. code:: json\n\n             ...\n             {\n             \"name\": \"Stmt\",\n             \"value\": [\n                 {\n                     \"name\": \"Expr\",\n                     \"value\": [\n                         {\n                             \"name\": \"'('\",\n                             \"value\": \"(\",\n                             \"meta\": {\n                                 \"rowIdx\": 0,\n                                 \"hasParsed\": 1,\n                                 \"fileName\": \"<input>\"\n                             }\n                         },\n                         {\n                             \"name\": \"Expr\",\n                             \"value\": [\n                                 {\n                                     \"name\": \"Atom\",\n                                     \"value\": \"set\",\n                                     \"meta\": {\n                                         \"rowIdx\": 0,\n                                         \"hasParsed\": 2,\n                                         \"fileName\": \"<input>\"\n                                     }\n                                 }\n                             ],\n             ...\n\n      -  Ast See ``./tests/Python/Lang/Lisp/test1Ast``.\n\n         ::\n\n             Stmt[Expr['('[(]\n\n                 Expr[Atom[set]\n\n                 ]\n                 Expr[Atom[r]\n\n                 ]\n                 Expr[Atom[1]\n\n                 ]\n                 ')'[)]\n\n             ]\n             Expr['('[(]\n\n                 Expr[Atom[define]\n\n                 ]\n                 Expr[Atom[a]\n\n                 ]\n                 Expr[Atom[b]\n\n                 ]\n                 Expr['('[(]\n\n                     Expr[Atom[+]\n\n                     ]\n                     Expr[Atom[a]\n\n                     ]\n                     Expr['('[(]\n\n                             Expr[Atom[+]\n\n                             ]\n                             Expr[Atom[r]\n\n                             ]\n                             Expr[Atom[1]\n\n                             ]\n                             ')'[)]\n\n                     ]\n                     ')'[)]\n\n                 ]\n                 ')'[)]\n\n             ]\n             ]\n\n-  `Python(Just Expression) <./tests/Python/Lang/Python>`__\n-  `ExtraPy Language <./tests/Python/Lang/Expy>`__\n-  `EBNF(bootstrap) <./tests/Python/Lang/EBNF>`__\n-  `CmLang <./tests/Python/Lang/Cm>`__\n-  `JSON <./tests/Python/Lang/JSON>`__\n-  `XML <./tests/Python/Lang/Xml>`__\n\nUsage\n-----\n\n-  Requirement(for Python version)\n\n   -  Python 3.6.x\n\nFeel free to clone this project and make parsers for your own language\nquickly and easily. \n- Command \n\n    1. move to the root of project directory.\n    2. ``cd Python/`` \n    3. write an EBNF file to define the grammars for your own language. \n    4. see the following codes. Also, you can find out more details in each example listed above. Or you can see `testpy.sh <./testpy.sh>`__.\n\n.. code:: shell     \n\n python parserGenerator.py <EBNF filename> <outputParser.py filename> -test True     \n python <outputParser.py filename> \"<codes of your language>\" -o <JSON filename>\n\n\nHowever, if you download EBNFParser with ``pip``, you can use it more\nconveniently. \n- Command\n\n\n.. code:: shell   \n  \n  pip install EBNFParser     \n  parserGenerator.py <EBNF filename> <outputParser.py filename>     python <outputParser.py filename> \"<codes of your language>\" -o <JSON filename>\n\nParser-Generator\n----------------\n\n-  `Python <./Python/Misakawa>`__\n\nIt is implemented by using bootstrap EBNF gramamr.\n\n- `BootstrapParser <./Python/Misakawa/Bootstrap/Parser.py>`__ \n- `BootstrapAst <./Python/Misakawa/Bootstrap/Ast.py>`__ \n- `BootstrapCompile/Code Generator <./Python/Misakawa/Bootstrap/Compile.py>`__\n\nWill support C# sooner.\n\n--------------\n\nLicense\n-------\n\n`GPL <./LICENSE>`__\n\n.. |Build Status| image:: https://travis-ci.org/thautwarm/EBNFParser.svg?branch=master\n   :target: https://travis-ci.org/thautwarm/EBNFParser\n.. |GPLv3.0 License| image:: https://img.shields.io/badge/license-GPLv3.0-Green.svg\n   :target: https://github.com/thautwarm/EBNFParser/blob/master/LICENSE\n.. |PyPI version| image:: https://img.shields.io/pypi/v/EBNFParser.svg\n   :target: https://pypi.python.org/pypi/EBNFParser\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/thautwarm/EBNFParser",
    "keywords": "parser",
    "license": "GPLv3.0 License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "EBNFParser",
    "platform": "any",
    "project_url": "https://pypi.org/project/EBNFParser/",
    "release_url": "https://pypi.org/project/EBNFParser/0.1.3.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "very powerful and optional parser framework for python",
    "version": "0.1.3.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "25b230099b0d9c1107c64bb9cc7ce2e5",
          "sha256": "719c03efba2bf29455cdca9b2402ba7b56ed3cacd3d13f2c4288f8ce6655e54f"
        },
        "downloads": -1,
        "filename": "EBNFParser-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "25b230099b0d9c1107c64bb9cc7ce2e5",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5778,
        "upload_time": "2017-10-05T18:25:40",
        "url": "https://files.pythonhosted.org/packages/60/89/19aff50f52421fb79a6500c36d7c0f9026676a44c92f422565543dbf26b3/EBNFParser-0.1.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "53d066bd4a025377cdfc73f0dff39310",
          "sha256": "676ef27ae8474917e8dc58e07fd8b022baccdad9e2554ad8269afd314b4882c0"
        },
        "downloads": -1,
        "filename": "EBNFParser-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "53d066bd4a025377cdfc73f0dff39310",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5779,
        "upload_time": "2017-10-05T18:32:44",
        "url": "https://files.pythonhosted.org/packages/17/d9/e0edab13f3b567696548a1e328e4e376ef2229e15093976ed0d8bb76bb97/EBNFParser-0.1.1.tar.gz"
      }
    ],
    "0.1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f6d6536776d039f0bc98503983ced995",
          "sha256": "e4762ab89e71991145e2574ba93e6faf08fce881886714d7ee79dc7dc63e2e22"
        },
        "downloads": -1,
        "filename": "EBNFParser-0.1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f6d6536776d039f0bc98503983ced995",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12273,
        "upload_time": "2017-10-05T19:04:01",
        "url": "https://files.pythonhosted.org/packages/f5/f5/b4a73d4f21e0a2d548fe33731f0590580cedb755e1f4cad68dd08f27c454/EBNFParser-0.1.1.2.tar.gz"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a0a1d47216816639f0a7fd2467c79fa4",
          "sha256": "461fbd15100ac2ded5fedca6af48c752ba910455e73e28b586c3cdc949764a0d"
        },
        "downloads": -1,
        "filename": "EBNFParser-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a0a1d47216816639f0a7fd2467c79fa4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13335,
        "upload_time": "2017-10-08T17:35:57",
        "url": "https://files.pythonhosted.org/packages/3e/bd/ae7f26d17999e772ebdda102fa7bdb2aa2730d03d7218048bee94a0997d5/EBNFParser-0.1.2.tar.gz"
      }
    ],
    "0.1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6d45ab17b583b0cbe17976777e4fb8be",
          "sha256": "6697c94502498549a536b9eb7faaedb7e5c312f22301d29a755062f0a57ac189"
        },
        "downloads": -1,
        "filename": "EBNFParser-0.1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6d45ab17b583b0cbe17976777e4fb8be",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13285,
        "upload_time": "2017-10-09T01:15:24",
        "url": "https://files.pythonhosted.org/packages/47/22/3809139bba11c39dbc296923ba45c23dee4f90eea6625040aa73e2000817/EBNFParser-0.1.2.1.tar.gz"
      }
    ],
    "0.1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "adfa1807579cb6b433c234a72f4d8d03",
          "sha256": "bea4b04a71b275dcb1270ab817155eccd0ba866236f91d83976dcf6f820ac660"
        },
        "downloads": -1,
        "filename": "EBNFParser-0.1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "adfa1807579cb6b433c234a72f4d8d03",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15199,
        "upload_time": "2017-10-09T02:10:10",
        "url": "https://files.pythonhosted.org/packages/27/66/29e71cf762c2964cf70d9b0d56a0e920307d86ef9d38227aeb557b1993f5/EBNFParser-0.1.2.2.tar.gz"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "03719048c5f11e5e955597e9a92525ee",
          "sha256": "641e5a26a42c925a2d0d026eca615a9973aa8289933df3ee1dc444c66347bdde"
        },
        "downloads": -1,
        "filename": "EBNFParser-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "03719048c5f11e5e955597e9a92525ee",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15100,
        "upload_time": "2017-10-09T06:33:19",
        "url": "https://files.pythonhosted.org/packages/bc/44/a4ff690028d46589b0d1dbf99650315df77ef724d06823f41d0c5604c57b/EBNFParser-0.1.3.tar.gz"
      }
    ],
    "0.1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "163e1eaa1c4200113b97981713b513a3",
          "sha256": "b508c837863dbf054f4e863d64e39fcae6cd21caf4212f1668a84b32a306de85"
        },
        "downloads": -1,
        "filename": "EBNFParser-0.1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "163e1eaa1c4200113b97981713b513a3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15221,
        "upload_time": "2017-10-09T07:17:38",
        "url": "https://files.pythonhosted.org/packages/75/34/00abc4e2be9356c1ff2c4d83d6c62e78e48859162ee1c298f81e2802758b/EBNFParser-0.1.3.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "163e1eaa1c4200113b97981713b513a3",
        "sha256": "b508c837863dbf054f4e863d64e39fcae6cd21caf4212f1668a84b32a306de85"
      },
      "downloads": -1,
      "filename": "EBNFParser-0.1.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "163e1eaa1c4200113b97981713b513a3",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15221,
      "upload_time": "2017-10-09T07:17:38",
      "url": "https://files.pythonhosted.org/packages/75/34/00abc4e2be9356c1ff2c4d83d6c62e78e48859162ee1c298f81e2802758b/EBNFParser-0.1.3.1.tar.gz"
    }
  ]
}