{
  "info": {
    "author": "Richard Hull",
    "author_email": "richard.hull@destructuring-bind.org",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Education",
      "Topic :: System :: Hardware"
    ],
    "description": "Raspberry PI MAX7219 driver\n===========================\n.. image:: https://travis-ci.org/rm-hull/max7219.svg?branch=master\n    :target: https://travis-ci.org/rm-hull/max7219\n    \nInterfacing LED matrix displays with the MAX7219 driver\n`[PDF datasheet] <https://raw.github.com/rm-hull/max7219/master/docs/MAX7219-datasheet.pdf>`_\nin Python (both 2.7 and 3.x are supported) using hardware SPI on the Raspberry Pi. A LED matrix can be acquired for a few pounds from outlets like \n`Banggood <http://www.banggood.com/MAX7219-Dot-Matrix-Module-DIY-Kit-SCM-Control-Module-For-Arduino-p-72178.html?currency=GBP>`_.\nLikewise 7-segment displays are available from `Ali-Express <http://www.aliexpress.com/item/MAX7219-Red-Module-8-Digit-7-Segment-Digital-LED-Display-Tube-For-Arduino-MCU/1449630475.html>`_ or `Ebay <http://www.ebay.com/itm/-/172317726225>`_.\n\nThis library supports:\n\n* multiple cascaded devices\n* LED matrix and seven-segment variants\n\n.. image:: https://raw.githubusercontent.com/rm-hull/max7219/master/docs/images/devices.jpg\n   :alt: max7219 matrix\n\nPython Usage\n------------\n\nFor the matrix device, initialize the ``matrix`` class:\n\n.. code:: python\n\n  import max7219.led as led\n\n  device = led.matrix()\n  device.show_message(\"Hello world!\")\n\nFor the 7-segment device, initialize the ``sevensegment`` class:\n\n.. code:: python\n\n  import max7219.led as led\n\n  device = led.sevensegment()\n  device.write_number(deviceId=0, value=3.14159)\n\nThe MAX7219 chipset supports a serial 16-bit register/data buffer which is\nclocked in on pin DIN every time the clock edge falls, and clocked out on DOUT\n16.5 clock cycles later. This allows multiple devices to be chained together.\n\nWhen initializing cascaded devices, it is necessary to specify a ``cascaded=...``\nparameter, and generally methods which target specific devices will expect a\n``deviceId=...`` parameter, counting from zero.\n\nFor more information, see https://max7219.readthedocs.io/\n\n.. image:: https://raw.githubusercontent.com/rm-hull/max7219/master/docs/images/IMG_2810.JPG\n   :alt: max7219 sevensegment\n\nPre-requisites\n--------------\n\nBy default, the SPI kernel driver is **NOT** enabled on the Raspberry Pi Raspian image.\nYou can confirm whether it is enabled using the shell commands below::\n\n  $ lsmod | grep -i spi\n  spi_bcm2835             7424  0 \n\nDepending on the kernel version, this may report **spi_bcm2807** rather than **spi_bcm2835** - \neither should be adequate.\n\nAnd that the devices are successfully installed in ``/dev``::\n\n  $ ls -l /dev/spi*\n  crw------- 1 root root 153, 0 Jan  1  1970 /dev/spidev0.0\n  crw------- 1 root root 153, 1 Jan  1  1970 /dev/spidev0.1\n\nIf you have no ``/dev/spi`` files and nothing is showing using ``lsmod`` then this\nimplies the kernel SPI driver is not loaded. Enable the SPI as follows (steps\ntaken from https://learn.sparkfun.com/tutorials/raspberry-pi-spi-and-i2c-tutorial#spi-on-pi):\n\n#. Run ``sudo raspi-config``\n#. Use the down arrow to select ``9 Advanced Options``\n#. Arrow down to ``A6 SPI.``\n#. Select **yes** when it asks you to enable SPI,\n#. Also select **yes** when it asks about automatically loading the kernel module.\n#. Use the right arrow to select the **<Finish>** button.\n#. Select **yes** when it asks to reboot.\n\n.. image:: https://cloud.githubusercontent.com/assets/1915543/16681787/b615b20c-44ee-11e6-9533-b0dce2b007b1.png\n\nAfter rebooting re-check that the ``lsmod | grep -i spi`` command shows whether\nSPI driver is loaded before proceeding. If you are stil experiencing problems, refer to the official \nRaspberry Pi `SPI troubleshooting guide <https://www.raspberrypi.org/documentation/hardware/raspberrypi/spi/README.md#troubleshooting>`_ for further details, or ask a `new question <https://github.com/rm-hull/max7219/issues/new>`_ - but please remember to add as much detail as possible.\n\nGPIO pin-outs\n-------------\n\nThe breakout board has two headers to allow daisy-chaining:\n\n============ ====== ============= ========= ====================\nBoard Pin    Name   Remarks       RPi Pin   RPi Function\n------------ ------ ------------- --------- --------------------\n1            VCC    +5V Power     2         5V0\n2            GND    Ground        6         GND\n3            DIN    Data In       19        GPIO 10 (MOSI)\n4            CS     Chip Select   24        GPIO 8 (SPI CE0)\n5            CLK    Clock         23        GPIO 11 (SPI CLK)\n============ ====== ============= ========= ====================\n\n**Note**: See below for cascading/daisy-chaining, power supply and level-shifting.\n\nInstalling the library\n----------------------\n\n**Note**: The library has been tested against Python 2.7 and 3.4. For **Python3** installation, substitute ``pip`` \u21d2 ``pip3``, ``python`` \u21d2 ``python3``, ``python-dev`` \u21d2 ``python3-dev``, and ``python-pip`` \u21d2 ``python3-pip`` in the instructions below.\n\nInstall the latest version of the library directly from `PyPI <https://pypi.python.org/pypi?:action=display&name=max7219>`_::\n\n  $ sudo apt-get install python-dev python-pip\n  $ sudo pip install max7219\n\nAlternatively, clone the code from github::\n\n  $ git clone https://github.com/rm-hull/max7219.git\n  $ cd max7219\n  $ sudo pip install -e .\n\nNext, follow the specific steps below for your OS.\n\nRaspbian\n^^^^^^^^\n\n.. code:: bash\n\n  $ cd max7219\n  $ sudo apt-get install python-dev python-pip\n  $ sudo pip install spidev\n  $ sudo python setup.py install\n\nArch Linux\n^^^^^^^^^^\n\n.. code:: bash\n\n  cd max7219\n  pacman -Sy base-devel python2\n  pip install spidev\n  python2 setup.py install\n\nCascading, power supply & level shifting\n----------------------------------------\n\nThe MAX7219 chip supports cascading devices by connecting the DIN of one chip to the DOUT\nof another chip. For a long time I was puzzled as to why this didnt seem to work properly\nfor me, despite spending a lot of time investigating and always assuming it was a bug in\ncode.\n\n- Because the Raspberry PI can only supply a limited amount of power from the 5V rail,\n  it is recommended that any LED matrices are powered separately by a 5V supply, and grounded\n  with the Raspberry PI. It is possible to power one or two LED matrices directly from a\n  Raspberry PI, but any more is likely to cause intermittent faults & crashes.\n\n- Also because the GPIO ports used for SPI are 3.3V, a simple level shifter (as per the diagram\n  below) should be employed on the DIN, CS and CLK inputs to boost the levels to 5V. Again it\n  is possible to drive them directly by the 3.3V GPIO pins, it is just outside tolerance, and\n  will result in intermittent issues.\n\n.. image:: https://raw.githubusercontent.com/rm-hull/max7219/master/docs/images/level-shifter.jpg\n   :alt: max7219 levelshifter\n\nDespite the above two points, I still had no success getting cascaded matrices\nto work properly.  Revisiting the wiring, I had connected the devices in serial\nconnecting the out pins of one device to the in pins of another. This just\nproduced garbled images.\n\nConnecting the CLK lines on the input side all together worked first time. I\ncan only assume that there is some noise on the clock line, or a dry solder\njoint somewhere.\n\n.. image:: https://raw.githubusercontent.com/rm-hull/max7219/master/docs/images/matrix_cascaded.jpg\n   :alt: max7219 cascaded\n\nIf you have more than one device and they are daisy-chained together, you can initialize the\nlibrary with:\n\n.. code:: python\n\n  import max7219.led as led\n\n  device = led.matrix(cascaded = 3)\n  device.show_message(\"Hello world!\")\n\nTo address a specific device, most other methods expect a ``deviceId=N`` parameter \n(where N=0..cascaded-1).\n\nExamples\n--------\n\nRun the example code as follows::\n\n  $ sudo python examples/matrix_test.py\n\nor::\n\n  $ sudo python examples/sevensegment_test.py\n\n**Note**: By default, SPI is only accessible by root (hence using ``sudo`` above). Follow `these <http://quick2wire.com/non-root-access-to-spi-on-the-pi>`_ instructions to create an ``spi`` group, and adding your user to that group, so you don't have to run as root.\n\nReferences\n----------\n\n- http://hackaday.com/2013/01/06/hardware-spi-with-python-on-a-raspberry-pi/\n- http://gammon.com.au/forum/?id=11516\n- http://louisthiery.com/spi-python-hardware-spi-for-raspi/\n- http://www.brianhensley.net/2012/07/getting-spi-working-on-raspberry-pi.html\n- http://raspi.tv/2013/8-x-8-led-array-driven-by-max7219-on-the-raspberry-pi-via-python\n- http://quick2wire.com/non-root-access-to-spi-on-the-pi\n\nContributing\n------------\nPull requests (code changes / documentation / typos / feature requests / setup) are gladly accepted. If you are \nintending some large-scale changes, please get in touch first to make sure we're on the same page: try and include\na docstring for any new methods, and try and keep method bodies small, readable and PEP8-compliant.\n\nContributors\n^^^^^^^^^^^^\n* Thijs Triemstra (@thijstriemstra)\n* Jon Carlos (@webmonger)\n* Unattributed (@wkapga)\n* Taras (@tarasius)\n* Brice Parent (@agripo)\n\nLicense\n-------\n\nThe MIT License (MIT)\n\nCopyright (c) 2016 Richard Hull\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
    "docs_url": null,
    "download_url": "https://github.com/rm-hull/max7219/tarball/0.2.3",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/rm-hull/max7219",
    "keywords": "raspberry pi,rpi,led,max7219,matrix,seven segment,7 segment",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "max7219",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/max7219/",
    "release_url": "https://pypi.org/project/max7219/0.2.3/",
    "requires_python": null,
    "summary": "A library to drive a MAX7219 LED serializer using hardware spidev",
    "version": "0.2.3"
  },
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bc56cb1379ab2b6139127e42534a3970",
          "sha256": "850685bf392e34338a6d46a10540f3f171532d6d54bfdfdb40c6cb9fd6498451"
        },
        "downloads": 239,
        "filename": "max7219-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bc56cb1379ab2b6139127e42534a3970",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16213,
        "upload_time": "2016-09-11T21:23:10",
        "url": "https://files.pythonhosted.org/packages/5d/f5/b6bbf0a03913dcf9db330b79a5684cc02c7d6e5363227d68946ac8b2708f/max7219-0.2.1.tar.gz"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cd36dee5f4cff34ab2e9780dbc4501ae",
          "sha256": "cc6b1de062c455673dcbdadc0ecbf8afc1d8c1e480f85d70ac9b14c33ad11df7"
        },
        "downloads": 405,
        "filename": "max7219-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cd36dee5f4cff34ab2e9780dbc4501ae",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16235,
        "upload_time": "2016-09-11T21:46:20",
        "url": "https://files.pythonhosted.org/packages/97/91/50b0af82afc2994b46c424e89df3f42501533ce8abd7a8d03200ef1b8b70/max7219-0.2.2.tar.gz"
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "58e6f419715e9c8817715d7c1f55259a",
          "sha256": "52fb30fd90d593ecc4c47daca23eae96d2ca86aa40d55438375ddf4393147417"
        },
        "downloads": 160,
        "filename": "max7219-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "58e6f419715e9c8817715d7c1f55259a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2060703,
        "upload_time": "2016-11-14T00:47:43",
        "url": "https://files.pythonhosted.org/packages/9c/b3/87e966c0e11c97a5d2335f438ebb54512a289a87d8c702a74a3bd7064614/max7219-0.2.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "58e6f419715e9c8817715d7c1f55259a",
        "sha256": "52fb30fd90d593ecc4c47daca23eae96d2ca86aa40d55438375ddf4393147417"
      },
      "downloads": 160,
      "filename": "max7219-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "58e6f419715e9c8817715d7c1f55259a",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 2060703,
      "upload_time": "2016-11-14T00:47:43",
      "url": "https://files.pythonhosted.org/packages/9c/b3/87e966c0e11c97a5d2335f438ebb54512a289a87d8c702a74a3bd7064614/max7219-0.2.3.tar.gz"
    }
  ]
}