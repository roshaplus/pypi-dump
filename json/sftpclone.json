{
  "info": {
    "author": "Adriano Di Luzio",
    "author_email": "adrianodl@hotmail.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 6 - Mature",
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: File Transfer Protocol (FTP)",
      "Topic :: System :: Archiving :: Backup",
      "Topic :: System :: Archiving :: Mirroring",
      "Topic :: Utilities"
    ],
    "description": "sftpclone\n=========\n\n|PyPI version| |PyPI python version| |PyPI license|\n\nA tool for cloning/syncing a local directory tree with an SFTP server.\n\nFeatures\n--------\n\n-  Keep in sync a local directory tree with a specified folder of an\n   SFTP server.\n-  Update symbolic links as needed and keep files *consistent*.\n-  Automatic tilde expansion/handling on the SFTP server.\n-  Public key authentication.\n-  ``ssh_config`` entries compatibility.\n-  Syncing exclusion patterns.\n-  Compatible with both Python 2 and Python 3.\n\nInstall\n-------\n\nYou can install sftpclone by using pip:\n\n.. code:: bash\n\n    $ pip install sftpclone --user\n\n**Note**: Sometimes building required dependencies in user mode doesn't\nwork. In that case, you'd need to use ``sudo`` and to remove the\n``--user`` flag. Alternatively, you could make use of a virtualenv.\n\nAlternatively, you can clone this repository and then launch:\n\n.. code:: bash\n\n    $ git clone https://github.com/unbit/sftpclone\n    $ cd sftpclone\n    $ python setup.py install\n\nIn both cases, you'll find the sftpclone script in your path.\n\nUsage\n-----\n\n::\n\n    usage: sftpclone [-h] [-k private-key-path]\n                     [-l {CRITICAL,ERROR,WARNING,INFO,DEBUG,NOTSET}] [-p PORT]\n                     [-f] [-a] [-c ssh config path] [-n known_hosts path] [-d]\n                     [-e exclude-from-file-path] [-t] [-o]\n                     local-path user[:password]@hostname:remote-path\n\nWhere, for each command line argument:\n\n-  **local-path**: The path of the local folder. This path must exists\n   and can contain ``~`` (we use tilde expansion).\n-  **sftp-url**: It specifies the remote SFTP url having the form:\n   ``[user[:password]@]hostname:remote-path``. Both the password and the\n   user field can be omitted. If you omit the former then you should\n   specify a private key identity file. If you omit the latter then the\n   current user is automatically used. The hostname can refer to a\n   element of your ``ssh_config`` file. If the remote path contains\n   ``~``, then it will be expanded to the default folder in which the\n   user begins her SFTP session.\n-  **[h]elp**: show the help message and exit.\n-  **private-[k]ey-path**: the path to your private identity file. Set\n   it if you are not using password authentication. It automatically\n   defaults to ``~/.ssh/id_rsa`` and can be used more than once.\n-  **[l]ogging**: set the log level (ERROR by default).\n-  **[p]ort**: SSH remote port (defaults to 22).\n-  **[f]ix-symlinks**: if you have absolute symlinks pointing to your\n   synced directory, they will remain consistent on the remote server:\n   i.e., they will have an absolute path that reflect the path of the\n   cloned directory on the server. Useful for cluster configurations.\n-  **ssh-[a]gent**: enable ssh-agent support. Any private-[k]ey-path\n   argument will be ignored.\n-  **ssh-[c]onfig-path**: in the sftp-url's hostname you can `specify an\n   entry of your ``ssh_config`` file <#ssh_config-compatibility>`__. If\n   you are using a non-standard path, you can set it here.\n-  **k[n]own\\_hosts path**: path to your\n   ```known_hosts`` <#known_hosts-checking>`__ file. Default to\n   ``~/.ssh/known_hosts``.\n-  **[d]isable-known-hosts**: `disable remote\n   fingerprint <#known_hosts-checking>`__ check against local\n   ``known_host`` file.\n-  **[e]xclude-from-file-path**: the path to a file containing a list of\n   patterns. Each file matched by these pattern `will be\n   ignored <#exclude-list>`__ (not synced).\n-  **do-not-dele[t]e**: do not delete remote files that are missing from\n   the local directory.\n-  **all[o]w-unknown**: do not ask for confirmation before connecting to\n   unknown hosts.\n\n**Warning**: be sure to select a **proper** remote folder. The\nsynchronization process will indeed delete any file that doesn't exist\nin the local folder (unless you turn the ``-t`` option on).\n\n``ssh_config`` compatibility\n----------------------------\n\nThe hostname in the sftp-url parameter can be a valid entry in a\n``ssh_config`` file. Specifically, your entry should have relevant\nparameters such as:\n\n-  ``HostName``\n-  ``User``\n-  ``Port``\n-  ``IdentityFile``\n-  ``ProxyCommand``\n\nAny value not found will fallback to the CLI arguments. Anyway, you\n*have to set* the ``IdentityFile`` field, otherwise authentication will\ntry to fallback to ``~/.ssh/id_rsa`` and could not work. The first\nhostname matching the pattern is chosen (in the ``ssh_config`` way).\n\n``known_hosts`` checking\n------------------------\n\nBy default sftpclone will match the remote host fingerprint against the\none contained in your ``~/.ssh/known_hosts`` file. If this file doesn't\nexists on your machine, you can specify a different path by using the\n``-n`` option. Furthermore, you can disable the check with the ``-d``\nflag. Unknown hosts will require the user to authorize the connection.\nPlease note that, even after authorization, the ``known_host`` file\nwon't be modified.\n\nExclude list\n------------\n\nIt takes inspiration from the rsync/tar ``--exclude-from`` flag.\n\nYou can specify among your command line arguments a file containing a\nlist of patterns, one per each line. All those files that match any\npattern will not be synced with the SFTP server.\n\nLines beginning with ``;`` or ``#`` are ignored.\n\nEach pattern is considered relative to the syncing directory. As a\nconsequence, leading ``/`` are ignored.\n\nExample\n~~~~~~~\n\n.. code:: ini\n\n    ; This will exclude any file or directory beginning with foo\n    foo*\n    ; This will exclude any file foo in a subdir of the directory bar.\n    bar/*/foo\n\nProgrammatic usage\n------------------\n\nYou can find some examples of programmatic usage inside the\n`examples <examples>`__ directory.\n\nTesting\n-------\n\nThis project uses `nose <https://nose.readthedocs.org/en/latest/>`__ for\ntesting. In addition, on Python 2 you'll need the ``mock`` module (part\nof Python standard lib from 3.3). In both cases, you can install test\nrequirements with:\n\n.. code:: bash\n\n    $ pip install -r test_requirements.txt\n\nThen, You can launch the test suite by using, from the project root\ndirectory:\n\n.. code:: bash\n\n    $ nosetests\n    $ python setup.py test # alternatively\n\n.. |PyPI version| image:: https://img.shields.io/pypi/v/sftpclone.svg?style=flat-square\n   :target: https://pypi.python.org/pypi/sftpclone\n.. |PyPI python version| image:: https://img.shields.io/pypi/pyversions/sftpclone.svg?style=flat-square\n.. |PyPI license| image:: https://img.shields.io/pypi/l/sftpclone.svg?style=flat-square\n   :target: LICENSE\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/unbit/sftpclone",
    "keywords": "sftpclone",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sftpclone",
    "platform": "",
    "project_url": "https://pypi.org/project/sftpclone/",
    "release_url": "https://pypi.org/project/sftpclone/1.2/",
    "requires_python": "",
    "summary": "A tool for cloning/syncing a local directory tree with an SFTP server.",
    "version": "1.2"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d0823215a1944ee5aab8332a93faf3bf",
          "sha256": "8ffe464bd2e77929fd691ad7f2e364a119970b298dfa11f8371879be0e9e18f3"
        },
        "downloads": 1413,
        "filename": "sftpclone-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d0823215a1944ee5aab8332a93faf3bf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11525,
        "upload_time": "2014-11-21T15:45:53",
        "url": "https://files.pythonhosted.org/packages/90/6b/9873d513018183a91a479b7875c044f2de7eb59ef61d8862e0691df14cc6/sftpclone-1.0.tar.gz"
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4a88a0a3446c1046915105c2ae26bb0b",
          "sha256": "14419253e422fca8b98de669d4a6543f1600457ac69a684bdd37656f683061e6"
        },
        "downloads": 549,
        "filename": "sftpclone-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4a88a0a3446c1046915105c2ae26bb0b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13409,
        "upload_time": "2015-11-12T15:25:03",
        "url": "https://files.pythonhosted.org/packages/7a/c1/9f30639dddd4a999c470fc4ac2f19eed997a401f8328249d299c99ccb679/sftpclone-1.1.tar.gz"
      }
    ],
    "1.1.1": [],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "179134ad2976ff082791e656d2640205",
          "sha256": "d9289a4285bf9dded51175320856fd81cf8c3eb7803d0bd985360f2e8029ef2a"
        },
        "downloads": 859,
        "filename": "sftpclone-1.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "179134ad2976ff082791e656d2640205",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 14945,
        "upload_time": "2015-12-16T14:34:54",
        "url": "https://files.pythonhosted.org/packages/92/5c/923206aac610fc5bf277c4299f52d65c1145243b7843b83312c268d1a326/sftpclone-1.1.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "94769e6bb57201c27325a6c981731925",
          "sha256": "8fd48d1b9b6ac8dc294b2797e812549993904175f49c840d1dbae30ea59641c9"
        },
        "downloads": 441,
        "filename": "sftpclone-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "94769e6bb57201c27325a6c981731925",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15761,
        "upload_time": "2015-12-16T14:34:48",
        "url": "https://files.pythonhosted.org/packages/63/b0/8765f29745a98e571fbf62325129cc1fb24b7fedb1d69b815eb8ce12e618/sftpclone-1.1.2.tar.gz"
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4ee2d1ede7c0583b3d482c1ead9b13e3",
          "sha256": "7d254280801c5a3444c2cd467e0db7de6ebf7f23c6afaa81f0b99021c718b98c"
        },
        "downloads": 11,
        "filename": "sftpclone-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4ee2d1ede7c0583b3d482c1ead9b13e3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16320,
        "upload_time": "2017-02-23T09:18:51",
        "url": "https://files.pythonhosted.org/packages/04/ed/8057431579538a266784bb4928123f661f696eabbe115945ab5a7173ce59/sftpclone-1.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "4ee2d1ede7c0583b3d482c1ead9b13e3",
        "sha256": "7d254280801c5a3444c2cd467e0db7de6ebf7f23c6afaa81f0b99021c718b98c"
      },
      "downloads": 11,
      "filename": "sftpclone-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4ee2d1ede7c0583b3d482c1ead9b13e3",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 16320,
      "upload_time": "2017-02-23T09:18:51",
      "url": "https://files.pythonhosted.org/packages/04/ed/8057431579538a266784bb4928123f661f696eabbe115945ab5a7173ce59/sftpclone-1.2.tar.gz"
    }
  ]
}