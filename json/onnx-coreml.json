{
  "info": {
    "author": "Oleg Poyaganov",
    "author_email": "oleg@prisma-ai.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "Convert ONNX models into Apple CoreML format.\n=============================================\n\nThis tool converts `ONNX <https://onnx.ai/>`__ models to Apple CoreML\nformat.\n\nInstallation\n------------\n\n.. code:: bash\n\n    pip install -U onnx-coreml\n\nDependencies\n------------\n\n-  click\n-  numpy\n-  coremltools (0.6.3+)\n-  onnx (0.2.1+)\n\nHow to use\n----------\n\nUsing this library you can implement converter for your models. To\nimplement converters you should use single function \"convert\" from\nonnx\\_coreml:\n\n.. code:: python\n\n    from onnx_coreml import convert\n\nThis function is simple enough to be self-describing:\n\n.. code:: python\n\n    def convert(model,\n                mode=None,\n                image_input_names=[],\n                preprocessing_args={},\n                image_output_names=[],\n                deprocessing_args={},\n                class_labels=None,\n                predicted_feature_name='classLabel')\n\nParameters\n~~~~~~~~~~\n\n| **model**: ONNX model \\| str\n| An ONNX model with parameters loaded in onnx package or path to file\n| with models.\n\n| **mode**: str ('classifier', 'regressor' or None)\n| Mode of the converted coreml model:\n| 'classifier', a NeuralNetworkClassifier spec will be constructed.\n| 'regressor', a NeuralNetworkRegressor spec will be constructed.\n\n| **preprocessing\\_args**: dict\n| 'is\\_bgr', 'red\\_bias', 'green\\_bias', 'blue\\_bias', 'gray\\_bias',\n| 'image\\_scale' keys with the same meaning as\n\nhttps://apple.github.io/coremltools/generated/coremltools.models.neural\\_network.html#coremltools.models.neural\\_network.NeuralNetworkBuilder.set\\_pre\\_processing\\_parameters\n\n| **deprocessing\\_args**: dict\n| Same as 'preprocessing\\_args' but for deprocessing.\n| **class\\_labels**: A string or list of strings.\n| As a string it represents the name of the file which contains\n| the classification labels (one per line).\n| As a list of strings it represents a list of categories that map\n| the index of the output of a neural network to labels in a classifier.\n| **predicted\\_feature\\_name**: str\n| Name of the output feature for the class labels exposed in the Core ML\n| model (applies to classifiers only). Defaults to 'classLabel'\n\nReturns\n~~~~~~~\n\n**model**: A coreml model.\n\nCLI\n~~~\n\nAlso you can use command-line script for simplicity:\n\n::\n\n    convert-onnx-to-coreml [OPTIONS] ONNX_MODEL\n\nCurrently supported\n-------------------\n\nModels\n~~~~~~\n\nModels from https://github.com/onnx/models are supported and tested.\n\nOperators\n~~~~~~~~~\n\nList of ONNX operators that can be converted into their CoreML\nequivalent:\n\n-  Conv\n-  Relu\n-  Reshape\n-  Transpose\n-  MaxPool\n-  AveragePool\n-  FC\n-  BatchNormalization\n-  Add\n-  Sum\n-  Mul\n-  LeakyRelu\n-  Concat\n-  GlobalAveragePool\n-  GlobalMaxPool\n-  Softmax\n-  Gemm\n-  LRN\n\nSome of operators are partially compatible because CoreML doesn't\nsupport broadcasting, gemm for arbitrary tensors, etc.\n\nLicense\n-------\n\nCopyright (c) 2017 Prisma Labs, Inc. All rights reserved.\n\nUse of this source code is governed by the `MIT\nLicense <https://opensource.org/licenses/MIT>`__ that can be found in\nthe LICENSE.txt file.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/prisma-ai/onnx-coreml/",
    "keywords": "onnx coreml machinelearning ml coremltools converter neural",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "onnx-coreml",
    "platform": "",
    "project_url": "https://pypi.org/project/onnx-coreml/",
    "release_url": "https://pypi.org/project/onnx-coreml/0.0.2/",
    "requires_dist": [
      "onnx (>=0.2.1)",
      "coremltools (>=0.6.3)",
      "numpy",
      "click"
    ],
    "requires_python": "",
    "summary": "Convert ONNX (Open Neural Network Exchange)models into Apple CoreML format.",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "37eeab457a06b133a38504f4d3041b70",
          "sha256": "33473ac96169dfa66af15542b851697589899c173b6e9e8741fc47734e9eca62"
        },
        "downloads": -1,
        "filename": "onnx_coreml-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37eeab457a06b133a38504f4d3041b70",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 14333,
        "upload_time": "2017-10-30T09:53:01",
        "url": "https://files.pythonhosted.org/packages/2a/93/c50f07182b0c967a63cf83f75e835ac61e9314db15b73685accb3a210dd4/onnx_coreml-0.0.2-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "37eeab457a06b133a38504f4d3041b70",
        "sha256": "33473ac96169dfa66af15542b851697589899c173b6e9e8741fc47734e9eca62"
      },
      "downloads": -1,
      "filename": "onnx_coreml-0.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "37eeab457a06b133a38504f4d3041b70",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 14333,
      "upload_time": "2017-10-30T09:53:01",
      "url": "https://files.pythonhosted.org/packages/2a/93/c50f07182b0c967a63cf83f75e835ac61e9314db15b73685accb3a210dd4/onnx_coreml-0.0.2-py2.py3-none-any.whl"
    }
  ]
}