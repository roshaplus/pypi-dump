{
  "info": {
    "author": "Alex Furtunato",
    "author_email": "alexfurtunato@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "parsecpy\n========\n\nPython library to interface with PARSEC 2.1 and 3.0 Benchmark,\ncontrolling execution triggers and processing the output measures times\ndata to calculate speedups. Further, the library can generate a\nmathematical model of speedup of a parallel application, based on\n\"Particles Swarm Optimization\" or \"Coupled Simulating Annealing\"\nalgorithm to discover the parameters that minimize a \"objective\nfunction\".\n\nFeatures\n--------\n\n-  Run parsec application with repetitions e multiple input sizes and\n   output data to file\n-  Process a group of Parsec 2.1 logs files generates from a shell\n   direct execution of parsec\n-  Manipulate of data resulting from logs process or execution obtained\n   by module run script itself\n-  Calculate the speedups and efficency of applications, if it'\n   possible, using the measured times of execution\n-  provide a \"PSO\" algorithm to model the speedup of a parallel\n   application\n-  Provide a \"CSA\" algorithm to model the speedup of a parallel\n   application\n\nPrerequisites\n-------------\n\n-  Parsec 2.1 or newer\n-  Python3 or newer\n-  Numpy\n-  Pandas\n-  Matplotlib with Mplot3D Toolkit (Optional, to plot 3D surface)\n\nSite\n----\n\n-  https://github.com/alexfurtunatoifrn/parsecpy\n\nInstallation\n------------\n\n::\n\n    $ pip3 install parsecpy\n\nUsage\n-----\n\nClass ParsecData\n~~~~~~~~~~~~~~~~\n\n::\n\n    >>> from parsecpy import ParsecData\n    >>> d = ParsecData('path_to_datafile')\n    >>> print(d)        # Print summary informations\n    >>> d.times()       # Show a Dataframe with mesures times\n    >>> d.speedups()    # Show a Dataframe with speedups\n    >>> d.plot3D(d.speedups(), title='Speedup', zlabel='speedup')   # plot a 3D Plot : speedups x number of cores x input sizes\n    >>> d.plot3D(d.efficiency(), title='Efficiency', zlabel='efficiency')   # plot a 3D Plot : speedups x number of cores x input sizes\n\nClass ParsecLogsData\n~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    >>> from parsecpy import ParsecLogsData\n    >>> l = ParsecLogsData('path_to_folder_with_logfiles')\n    >>> print(l)        # Print summary informations\n    >>> l.times()       # Show a Dataframe with mesures times\n    >>> l.speedups()    # Show a Dataframe with speedups\n    >>> l.plot3D()      # plot a 3D Plot : speedups x number of cores x input sizes\n\nClass Swarm\n~~~~~~~~~~~\n\n::\n\n    >>> from parsecpy import Swarm\n    >>> parsec_date = ParsecData(\"my_output_parsec_file.dat\")\n    >>> out_measure = parsec_exec.speedups()\n    >>> inputsizes = [(col, int(col.split('_')[1])) for col in y_measure]\n    >>> cores = y_measure.index\n    >>> overhead = False\n    >>> argsswarm = (out_measure, overhead, cores, inputsizes)\n    >>> pso = Swarm([0,0,0,0], [2.0,1.0,1.0,2.0], args=argsswarm, threads=10, \n                    size=100, maxiter=1000, modelpath=/root/mymodelfunc.py)\n    >>> model = pso.run()\n    >>> print(model.params)\n\nClass CoupledAnnealer\n~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    >>> from parsecpy import CoupledAnnealer\n    >>> parsec_date = ParsecData(\"my_output_parsec_file.dat\")\n    >>> out_measure = parsec_exec.speedups()\n    >>> inputsizes = [(col, int(col.split('_')[1])) for col in y_measure]\n    >>> cores = y_measure.index\n    >>> overhead = False\n    >>> argscsa = (out_measure, overhead, cores, inputsizes)\n    >>> initial_state = [\n            tuple((random.normalvariate(0, 5) for _ in xrange(args.dimension)))\n            for x in xrange(args.annealers)]\n    >>> csa = CoupledAnnealer(n_annealers=10, initial_state=initial_state, tgen_initial=0.01, tacc_initial=0.1,\n                    threads=10, steps=1000, update_interval=100, dimension=5, \n                    args=argscsa, modelpath=/root/mymodelfunc.py)\n    >>> model = csa.run()\n    >>> print(model.params)\n\nRequirements for model python module\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe python module file provided by user should has the following\nrequirements:\n\n-  Should has, at least, two function as following:\n\n   ::\n\n       def constraint_function(p, *args):\n           # your code\n           # arguments: \n           # p - particle object\n           # args - list of position arguments passed to function:\n           #   args[0] - Pandas Dataframe object of measured speedups (PasecData speedups)     \n           #   args[1] - boolean value (if overhead should be considerable)\n           #   args[2] - list of number of cores used on args[0] measured speedups\n           #   args[3] - list of number of problems sizes used on args[0] measured speedups\n           # analize the feasable of particles position (searched parameters)\n           # return True or False, depend of requirements\n           return boolean_value\n\n       def objective_function(p, *args):\n           # your code\n           # calculate the function with should be minimized\n           # return the calculated value\n           return float_value \n\nRun Parsec\n~~~~~~~~~~\n\nScript to run parsec app with repetitions and multiples inputs sizes\n\n::\n\n    parsecpy_runprocess [-h] -p PACKAGE\n                           [-c {gcc,gcc-serial,gcc-hooks,gcc-openmp,gcc-pthreads,gcc-tbb}]\n                           [-i INPUT] [-r REPITITIONS]\n                           c\n\n    positional arguments:\n      c                     List of cores numbers to be used. Ex: 1,2,4\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -p PACKAGE, --package PACKAGE\n                            Package Name to run\n      -c {gcc,gcc-serial,gcc-hooks,gcc-openmp,gcc-pthreads,gcc-tbb}, --compiler {gcc,gcc-serial,gcc-hooks,gcc-openmp,gcc-pthreads,gcc-tbb}\n                            Compiler name to be used on run. (Default: gcc-hooks).\n      -i INPUT, --input INPUT\n                            Input name to be used on run. (Default: native).\n                            Syntax: inputsetname[<initialnumber>:<finalnumber>].\n                            Ex: native or native_1:10\n      -r REPITITIONS, --repititions REPITITIONS\n                            Number of repititions for a specific run. (Default: 1)\n                            \n    Example:\n        parsecpy_runprocess -p frqmine -c gcc-hooks -r 5 -i native 1,2,4,8\n\nRun PSO Modelling script\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nScript to run swarm modelling to predict aparsec application output\n\n::\n\n    parsecpy_runmodel_pso [-h] -f PARSECPYFILENAME -l LOWERVALUES -u\n                                 UPPERVALUES [-o OVERHEAD] [-x MAXITERATIONS]\n                                 [-p PARTICLES] [-t THREADS] [-r REPETITIONS] -m\n                                 MODELFILEABSPATH\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -f PARSECPYFILENAME, --parsecpyfilename PARSECPYFILENAME\n                            Input filename from Parsec specificated package.\n      -l LOWERVALUES, --lowervalues LOWERVALUES\n                            List of minimum particles values used. Ex: -1,0,-2,0\n      -u UPPERVALUES, --uppervalues UPPERVALUES\n                            List of maximum particles values used. Ex: 5,2,1,10\n      -o OVERHEAD, --overhead OVERHEAD\n                            If it consider the overhead\n      -x MAXITERATIONS, --maxiterations MAXITERATIONS\n                            Number max of iterations\n      -p PARTICLES, --particles PARTICLES\n                            Number of particles\n      -t THREADS, --threads THREADS\n                            Number of Threads\n      -r REPETITIONS, --repetitions REPETITIONS\n                            Number of repetitions to algorithm execution\n      -m MODELFILEABSPATH, --modelfileabspath MODELFILEABSPATH\n                            Absolute path from Python file with theobjective\n                            function.\n    Example\n        parsecpy_runmodel_pso -l -10,-10,-10,-10,-10 -u 10,10,10,10,10 \n            -f /var/myparsecsim.dat -m /var/mymodelfunc.py -x 1000 -p 10\n\nRun CSA Modelling script\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nScript to run csa modelling to predict aparsec application output\n\n::\n\n    parsecpy_runmodel_csa [-h] -f PARSECPYFILENAME [-o OVERHEAD]\n                                 [-d DIMENSION] [-s STEPS] [-u UPDATE_INTERVAL]\n                                 [-a ANNEALERS] [-t THREADS] [-r REPETITIONS] -m\n                                 MODELFILEABSPATH [-v VERBOSE]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -f PARSECPYFILENAME, --parsecpyfilename PARSECPYFILENAME\n                            Input filename from Parsec specificated package.\n      -o OVERHEAD, --overhead OVERHEAD\n                            If it consider the overhead\n      -d DIMENSION, --dimension DIMENSION\n                            Number of parameters\n      -s STEPS, --steps STEPS\n                            Number max of iterations\n      -u UPDATE_INTERVAL, --update_interval UPDATE_INTERVAL\n                            Number steps to run cooling temperatures\n      -a ANNEALERS, --annealers ANNEALERS\n                            Number of annealers\n      -t THREADS, --threads THREADS\n                            Number of Threads\n      -r REPETITIONS, --repetitions REPETITIONS\n                            Number of repetitions to algorithm execution\n      -m MODELFILEABSPATH, --modelfileabspath MODELFILEABSPATH\n                            Absolute path from Python file with theobjective\n                            function.\n      -v VERBOSE, --verbose VERBOSE\n                            If it shows output verbosily: Values: 0, 1, 2\n\n    Example\n        parsecpy_runmodel_csa -f /var/myparsecsim.dat -m /var/mymodelfunc.py -d 5 -s 1000 -a 10\n\nLogs process\n~~~~~~~~~~~~\n\nScript to parse a folder with parsec log files and save measures an\noutput file\n\n::\n\n    parsecpy_processlogs [-h] foldername outputfilename\n\n    positional arguments:\n      foldername      Foldername with parsec log files.\n      outputfilename  Filename to save the measures dictionary.\n\n    optional arguments:\n      -h, --help      show this help message and exit\n\n    Example:\n        parsecpy_processlogs logs_folder my-logs-folder-data.dat\n\nCreate split parts\n~~~~~~~~~~~~~~~~~~\n\nScript to split a parsec input file on specific parts\n\n::\n\n    parsecpy_createinputs [-h] -p {freqmine,fluidanimate} -n NUMBEROFPARTS\n                               [-t {equal,diff}] -x EXTRAARG\n                               inputfilename\n\n    positional arguments:\n      inputfilename         Input filename from Parsec specificated package.\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -p {freqmine,fluidanimate}, --package {freqmine,fluidanimate}\n                            Package name to be used on split.\n      -n NUMBEROFPARTS, --numberofparts NUMBEROFPARTS\n                            Number of split parts\n      -t {equal,diff}, --typeofsplit {equal,diff}\n                            Split on equal or diferent size partes parts\n      -x EXTRAARG, --extraarg EXTRAARG\n                            Specific argument: Freqmine=minimum support (11000),\n                            Fluidanimate=Max number of frames\n\n    Example:\n        parsec_createinputs -p fluidanimate -n 10 -t diff -x 500 fluidanimate_native.tar",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/alexfurtunatoifrn/parsecpy",
    "keywords": "parsec benchmark tool",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "parsecpy",
    "platform": "",
    "project_url": "https://pypi.org/project/parsecpy/",
    "release_url": "https://pypi.org/project/parsecpy/0.9.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Parsec Benchmark interface tool",
    "version": "0.9.0"
  },
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ae808d003ac997e670b327d79ae18138",
          "sha256": "447ce5f157061b0fd1cca7425a3dbf10023d63a8e840349e5391e5861079152d"
        },
        "downloads": -1,
        "filename": "parsecpy-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ae808d003ac997e670b327d79ae18138",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10507,
        "upload_time": "2017-08-22T04:13:26",
        "url": "https://files.pythonhosted.org/packages/df/d9/3a97cb58fa9deaa4f899814327a04d420bec6b04e179bc7ace4b558b3f6a/parsecpy-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e18f54480576d7603ebaa30d550f243e",
          "sha256": "9f7a6c798e31ee9cc688ff4746657fda6c702575bda2b68da24b5fa723d9880e"
        },
        "downloads": -1,
        "filename": "parsecpy-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e18f54480576d7603ebaa30d550f243e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10509,
        "upload_time": "2017-08-22T17:01:59",
        "url": "https://files.pythonhosted.org/packages/2a/a9/bc232671be5dcf7f40c8444881e91129722c7e5d90d20a8a226087e0f295/parsecpy-0.3.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e4c1a15db7e733668d95eecdef5d1474",
          "sha256": "8215a6679beb778e7f7a45778eadedf55fa02382efc6a27c4219d8a81d7c940b"
        },
        "downloads": -1,
        "filename": "parsecpy-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e4c1a15db7e733668d95eecdef5d1474",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11088,
        "upload_time": "2017-08-23T01:29:09",
        "url": "https://files.pythonhosted.org/packages/a7/73/d86dcd235a307c37cfcb0ae4b963be76db2b4172d83f00d9589ee68af021/parsecpy-0.4.tar.gz"
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0e9fd69844a09d3ed4071179fb6be5d0",
          "sha256": "b3d330bbc14df15bae3b362e2f29c03f53b593bf7007a26d9471d5db7d0da7e3"
        },
        "downloads": -1,
        "filename": "parsecpy-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0e9fd69844a09d3ed4071179fb6be5d0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11104,
        "upload_time": "2017-08-23T16:32:42",
        "url": "https://files.pythonhosted.org/packages/b8/29/282879de3155b29f07a02928946aeecffc5d5c71d9a89b260614d39dae40/parsecpy-0.5.tar.gz"
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8b1d790fcca0176c7ef746426cab0e2c",
          "sha256": "8a00abe3eab4ded364572ca467b231fff7f152a00a359be42a1051459373dfde"
        },
        "downloads": -1,
        "filename": "parsecpy-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "8b1d790fcca0176c7ef746426cab0e2c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16986,
        "upload_time": "2017-09-06T00:07:38",
        "url": "https://files.pythonhosted.org/packages/8a/13/59150635a7b56b828a544f2805fab5ca8b2f7625b180a969a60fa5428106/parsecpy-0.6.tar.gz"
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "302d8706ebf413b7f446fb22dab0e588",
          "sha256": "98f0a08efdb5e2f016cb4c67bb12c6d91af0c0d5ec8e8eb3e0855cc2089b955a"
        },
        "downloads": -1,
        "filename": "parsecpy-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "302d8706ebf413b7f446fb22dab0e588",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 16993,
        "upload_time": "2017-09-06T02:00:05",
        "url": "https://files.pythonhosted.org/packages/3c/e8/bee50cbe6aba29625e0d0a1ca08ad271e3661b7398788b01a1f5b5a93de2/parsecpy-0.7.tar.gz"
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "15c4235cd5da3eca5072ff873ca1a432",
          "sha256": "ca9ebb3fd152d9a964460f208e586366df06e7281da585101a82212913616bb7"
        },
        "downloads": -1,
        "filename": "parsecpy-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "15c4235cd5da3eca5072ff873ca1a432",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17165,
        "upload_time": "2017-09-19T01:50:19",
        "url": "https://files.pythonhosted.org/packages/30/98/86ab379cd48796ec08d5799060531d92fdbcd4d51cf3d134b9a76a04b621/parsecpy-0.8.1.tar.gz"
      }
    ],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7306e0d042e601e731f30750d1122604",
          "sha256": "a153a23667d1409e309dbdd380e4fd315baec8c5526e01f4fdfed454a17cfbd6"
        },
        "downloads": -1,
        "filename": "parsecpy-0.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7306e0d042e601e731f30750d1122604",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17181,
        "upload_time": "2017-09-19T12:19:43",
        "url": "https://files.pythonhosted.org/packages/2e/de/be4dcf7e96d3161bdf1e5ac7f5cc1e26af9c5472c0932bf4f172e02ec3e4/parsecpy-0.8.2.tar.gz"
      }
    ],
    "0.8.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ebcaa68440fb200adf3aa7f21d5ff969",
          "sha256": "9315bf589a8060a30c1b83aaf6a316070aa81b3c8f7c4145be9eb458b944bbb8"
        },
        "downloads": -1,
        "filename": "parsecpy-0.8.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ebcaa68440fb200adf3aa7f21d5ff969",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 17985,
        "upload_time": "2017-11-03T01:13:06",
        "url": "https://files.pythonhosted.org/packages/ca/e4/29f60c78c456d96adfd55de44a8cf2c1fb611225d0277ce8c2449d696afd/parsecpy-0.8.3.tar.gz"
      }
    ],
    "0.8.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e3139567427f8d61526b9a5b546a1b2a",
          "sha256": "3f8bdbbc2906eb0053f568ba30ff73c13b73b34dde3ecaabbde62dde798d041d"
        },
        "downloads": -1,
        "filename": "parsecpy-0.8.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e3139567427f8d61526b9a5b546a1b2a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18132,
        "upload_time": "2017-11-03T03:01:24",
        "url": "https://files.pythonhosted.org/packages/66/84/67808a0ffbdf80bd5d1b0902dc7459b23d9470cbc5421c0903cde8f2534a/parsecpy-0.8.4.tar.gz"
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cee10b20d0d2d8414f9699383056895f",
          "sha256": "624839d7350399337444bfa6de563c4625e0f370114e92fdf2f0ce9ebff4e23e"
        },
        "downloads": -1,
        "filename": "parsecpy-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cee10b20d0d2d8414f9699383056895f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 23919,
        "upload_time": "2018-01-22T14:43:25",
        "url": "https://files.pythonhosted.org/packages/40/f3/120c6f1519622b62f02a4344cd2cf61716f3cbe2fb914a58dab7f6a5f93b/parsecpy-0.9.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "cee10b20d0d2d8414f9699383056895f",
        "sha256": "624839d7350399337444bfa6de563c4625e0f370114e92fdf2f0ce9ebff4e23e"
      },
      "downloads": -1,
      "filename": "parsecpy-0.9.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cee10b20d0d2d8414f9699383056895f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 23919,
      "upload_time": "2018-01-22T14:43:25",
      "url": "https://files.pythonhosted.org/packages/40/f3/120c6f1519622b62f02a4344cd2cf61716f3cbe2fb914a58dab7f6a5f93b/parsecpy-0.9.0.tar.gz"
    }
  ]
}