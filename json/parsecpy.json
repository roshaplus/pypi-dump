{
  "info": {
    "author": "Alex Furtunato",
    "author_email": "alexfurtunato@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "parsecpy\n========\n\npython module to interface with PARSEC Benchmark\n\nFeatures\n--------\n\n-  Run parsec application with repetitions e multiple input sizes and\n   output data to file\n-  Process a group of Parsec logs files generates from a shell direct\n   execution of parsec\n-  Manipulate of data resulting for logs process or execution obtained\n   by module run script itself\n-  Calculate the speedups os applications, if it' possible, using the\n   measures times of execution\n\nInstall\n-------\n\n-  Using pip\n\n   ``$ pip3 install parsecpy``\n\n-  Using the source\n\n   ``$ git clone git@github.com:alexfurtunatoifrn/parsecpy.git``\n\n   ``$ cd parsecpy``\n\n   ``$ pip3 install -U .``\n\nUsage\n-----\n\nClass ParsecData\n~~~~~~~~~~~~~~~~\n\n::\n\n    >>> from parsecpy import ParsecData\n    >>> d = ParsecData('path_to_datafile')\n    >>> print(d)        # Print summary informations\n    >>> d.times()       # Show a Dataframe with mesures times\n    >>> d.speedups()    # Show a Dataframe with speedups\n    >>> d.plot3D()      # plot a 3D Plot : speedups x number of cores x input sizes\n\nClass ParsecData\n~~~~~~~~~~~~~~~~\n\n::\n\n    >>> from parsecpy import ParsecLogsData\n    >>> l = ParsecLogsData('path_to_folder_with_logfiles')\n    >>> print(l)        # Print summary informations\n    >>> l.times()       # Show a Dataframe with mesures times\n    >>> l.speedups()    # Show a Dataframe with speedups\n    >>> l.plot3D()      # plot a 3D Plot : speedups x number of cores x input sizes\n\nRun Parsec\n~~~~~~~~~~\n\n::\n\n    parsecpy_runprocess [-h] -p PACKAGE\n                           [-c {gcc,gcc-serial,gcc-hooks,gcc-openmp,gcc-pthreads,gcc-tbb}]\n                           [-i INPUT] [-r REPITITIONS]\n                           c\n\n    Script to run parsec app with repetitions and multiples inputs sizes\n\n    positional arguments:\n      c                     List of cores numbers to be used. Ex: 1,2,4\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -p PACKAGE, --package PACKAGE\n                            Package Name to run\n      -c {gcc,gcc-serial,gcc-hooks,gcc-openmp,gcc-pthreads,gcc-tbb}, --compiler {gcc,gcc-serial,gcc-hooks,gcc-openmp,gcc-pthreads,gcc-tbb}\n                            Compiler name to be used on run. (Default: gcc-hooks).\n      -i INPUT, --input INPUT\n                            Input name to be used on run. (Default: native).\n                            Syntax: inputsetname[<initialnumber>:<finalnumber>].\n                            Ex: native or native_1:10\n      -r REPITITIONS, --repititions REPITITIONS\n                            Number of repititions for a specific run. (Default: 1)\n                            \n    Example:\n        parsecpy_runprocess -p frqmine -c gcc-hooks -r 5 -i native 1,2,4,8\n\nLogs process\n~~~~~~~~~~~~\n\n::\n\n    parsecpy_processlogs [-h] foldername outputfilename\n\n    Script to parse a folder with parsec log files and save measures an output\n    file\n\n    positional arguments:\n      foldername      Foldername with parsec log files.\n      outputfilename  Filename to save the measures dictionary.\n\n    optional arguments:\n      -h, --help      show this help message and exit\n\n    Example:\n        parsecpy_processlogs logs_folder my-logs-folder-data.dat\n\nCreate split parts\n~~~~~~~~~~~~~~~~~~\n\n::\n\n    parsecpy_createinputs [-h] -p {freqmine,fluidanimate} -n NUMBEROFPARTS\n                               [-t {equal,diff}] -x EXTRAARG\n                               inputfilename\n\n    Script to split a parsec input file on specific parts\n\n    positional arguments:\n      inputfilename         Input filename from Parsec specificated package.\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -p {freqmine,fluidanimate}, --package {freqmine,fluidanimate}\n                            Package name to be used on split.\n      -n NUMBEROFPARTS, --numberofparts NUMBEROFPARTS\n                            Number of split parts\n      -t {equal,diff}, --typeofsplit {equal,diff}\n                            Split on equal or diferent size partes parts\n      -x EXTRAARG, --extraarg EXTRAARG\n                            Specific argument: Freqmine=minimum support (11000),\n                            Fluidanimate=Max number of frames\n\n    Example:\n        parsec_createinputs -p fluidanimate -n 10 -t diff -x 500 fluidanimate_native.tar",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/alexfurtunatoifrn/parsecpy",
    "keywords": "parsec benchmark tool",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "parsecpy",
    "platform": "",
    "project_url": "https://pypi.org/project/parsecpy/",
    "release_url": "https://pypi.org/project/parsecpy/0.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Parsec Benchmark tool",
    "version": "0.3"
  },
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ae808d003ac997e670b327d79ae18138",
          "sha256": "447ce5f157061b0fd1cca7425a3dbf10023d63a8e840349e5391e5861079152d"
        },
        "downloads": 0,
        "filename": "parsecpy-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ae808d003ac997e670b327d79ae18138",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10507,
        "upload_time": "2017-08-22T04:13:26",
        "url": "https://files.pythonhosted.org/packages/df/d9/3a97cb58fa9deaa4f899814327a04d420bec6b04e179bc7ace4b558b3f6a/parsecpy-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e18f54480576d7603ebaa30d550f243e",
          "sha256": "9f7a6c798e31ee9cc688ff4746657fda6c702575bda2b68da24b5fa723d9880e"
        },
        "downloads": 0,
        "filename": "parsecpy-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e18f54480576d7603ebaa30d550f243e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10509,
        "upload_time": "2017-08-22T17:01:59",
        "url": "https://files.pythonhosted.org/packages/2a/a9/bc232671be5dcf7f40c8444881e91129722c7e5d90d20a8a226087e0f295/parsecpy-0.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e18f54480576d7603ebaa30d550f243e",
        "sha256": "9f7a6c798e31ee9cc688ff4746657fda6c702575bda2b68da24b5fa723d9880e"
      },
      "downloads": 0,
      "filename": "parsecpy-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e18f54480576d7603ebaa30d550f243e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 10509,
      "upload_time": "2017-08-22T17:01:59",
      "url": "https://files.pythonhosted.org/packages/2a/a9/bc232671be5dcf7f40c8444881e91129722c7e5d90d20a8a226087e0f295/parsecpy-0.3.tar.gz"
    }
  ]
}