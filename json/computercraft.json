{
  "info": {
    "author": "Vitalik Verhovodov",
    "author_email": "knifeslaughter@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Education",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Games/Entertainment"
    ],
    "description": "Pythonized ComputerCraft API\n============================\n\nFirst, you need to start a server:\n\n.. code:: bash\n\n    cd your_folder_with_programs\n    python -m computercraft.server\n\n| Current directory is the place for your amazing programs.\n| Server tracks files inside this directory and reloads if necessary.\n| You don't (always) have to restart server if you change your programs.\n\nCreate simple program named ``hello.py``:\n\n.. code:: python\n\n    async def program(api):\n        await api.print('Hello world!')\n\nThere must be a separate file for each program with ``program``\ncoroutine defined.\n\nIn minecraft, open up any computer and type:\n\n.. code:: bash\n\n    wget http://127.0.0.1:8080/ py\n    py hello\n\n| ``py`` is short Lua program that interacts with the server.\n| Argument is the name of program without ``.py``.\n| In everything else it works exactly like native program on Lua.\n| ``api`` object contains almost everything *as is* in ComputerCraft\n  documentation:\n\n.. code:: python\n\n    async def program(api):\n        await api.disk.eject('right')\n        await api.print(await api.os.getComputerLabel())\n        # ...\n\nUsing python coroutines allows launching commands in parallel,\neffectively replacing ``parallel`` API:\n\n.. code:: python\n\n    async def program(api):\n        # Since os.sleep is mostly waiting for events, it doesn't block execution of parallel threads\n        # and this snippet takes approximately 2 seconds to complete.\n        await asyncio.gather(api.os.sleep(2), api.os.sleep(2))",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/neumond/python-computer-craft",
    "keywords": "computercraft minecraft",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "computercraft",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/computercraft/",
    "release_url": "https://pypi.org/project/computercraft/0.1.1/",
    "requires_python": "",
    "summary": "Pythonization of ComputerCraft Minecraft mod. Write Python instead Lua!",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2efcc34e8ddabbbdda699cd69b1007b0",
          "sha256": "c087f181edb8a7c5baeb0e1aef64c128459d8cde7e403d9c3161b04aeeb535b6"
        },
        "downloads": 50,
        "filename": "computercraft-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2efcc34e8ddabbbdda699cd69b1007b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 22392,
        "upload_time": "2016-12-04T01:28:55",
        "url": "https://files.pythonhosted.org/packages/7e/1b/a2543f95e63cf38a725607ee3f520a728c80126523d5381f2b91dad8cfef/computercraft-0.1.1-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "2efcc34e8ddabbbdda699cd69b1007b0",
        "sha256": "c087f181edb8a7c5baeb0e1aef64c128459d8cde7e403d9c3161b04aeeb535b6"
      },
      "downloads": 50,
      "filename": "computercraft-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2efcc34e8ddabbbdda699cd69b1007b0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 22392,
      "upload_time": "2016-12-04T01:28:55",
      "url": "https://files.pythonhosted.org/packages/7e/1b/a2543f95e63cf38a725607ee3f520a728c80126523d5381f2b91dad8cfef/computercraft-0.1.1-py3-none-any.whl"
    }
  ]
}