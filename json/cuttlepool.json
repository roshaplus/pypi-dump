{
  "info": {
    "author": "Spencer Mitchell",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "###########\nCuttle Pool\n###########\n\nCuttle Pool is a SQL connection pooling implementation. It's key features are:\n\nPool overflow\n   Creates additional connections if the pool capacity has been reached and\n   will remove the overflow when demand for connections decreases.\n\nConnection harvesting\n   Any connections that haven't been returned to the pool and are no longer\n   referenced by anything outside the pool are returned to the pool. This helps\n   prevent pool depletion when connections aren't explicitly returned to the\n   pool and the connection wrapper is garbage collected.\n\nConnection queuing\n   If all else fails and no connection can be immediately found or made, the\n   pool will wait a specified amount of time for a connection to be returned\n   to the pool before raising an exception.\n\nThe intent of Cuttle Pool is to provide a pool implementation for\n`Cuttle <https://github.com/smitchell556/cuttle>`_, but it can be used as a\nstandalone connection pool.\n\nHow-to Guide\n============\n\nUsing Cuttle Pool requires subclassing a ``CuttlePool`` object with a user\ndefined method ``ping()``. ::\n\n  >>> import sqlite3\n  >>> from cuttlepool import CuttlePool\n  >>> class SQLitePool(CuttlePool):\n  ...     def normalize_connection(self, connection):\n  ...         connection.row_factory = None\n  ...     def ping(self, connection):\n  ...         try:\n  ...             rv = connection.execute('SELECT 1').fetchall()\n  ...             return (1,) in rv\n  ...         except sqlite3.Error:\n  ...             return False\n  >>> pool = SQLitePool(sqlite3.connect, database='ricks_lab')\n\nLet's break this down line by line.\n\nFirst, the ``sqlite3`` module is imported. ``sqlite3`` will be the underlying\ndriver.\n\n``CuttlePool`` is imported and subclassed. The ``normalize_connection()``\nmethod takes a ``Connection`` object as a parameter and changes it's\nproperties. This is important because a ``Connection`` object can be modified\nwhile it's outside of the pool and any modifications made during that time \n\nNext the ``ping()`` method is implemented, which also takes a ``Connection``\nobject as a parameter. ``ping()`` ensures the connection is open; if the\nconnection is open, return ``True`` else return ``False``. In the above\nexample, a simple statement is executed and if the expected result is returned,\nit means the connection is open and ``True`` is returned. The implementation of\nthis method is really dependent on which driver is being used. If ``pymysql``\nwas used, the implementation might look like this::\n\n  def ping(self, connection):\n      if not connection.open:\n          try:\n              connection.ping()\n          except pymysql.err.Error:\n              pass\n      return connection.open\n\nNot every driver has the same API, so it's up to the user to implement a\n``ping()`` method that works for the chosen driver.\n\nFinally an instance of ``SQLitePool`` is made. The ``sqlite3.connect`` method is\npassed to the instance along with the database name. The first argument must be\nthe ``connect`` method of the sql driver.\n\nThe ``CuttlePool`` object and as a result the ``SQLitePool`` object accepts any\nparameters that the underlying SQL driver accepts. There are three other\nparameters the pool object accepts that are unrelated to the SQL driver.\n``capacity`` sets the max number of connections the pool will hold at any given\ntime. ``overflow`` sets the max number of additional connections the pool will\ncreate when depleted. All overflow connections will be closed when returned to\nthe pool if the pool is at capacity. ``timeout`` sets the amount of time in\nseconds the pool will wait for a connection to become free if the pool is\ndepleted when a request for a connection is made.\n\nA connection from the pool can be used the same way a connection object of the\nunderlying driver is used. ::\n\n  >>> con = pool.get_connection()\n  >>> cur = con.cursor()\n  >>> cur.execute('INSERT INTO garage (invention_name, state) '\n                  'VALUES (%s, %s)', ('Space Cruiser', 'damaged'))\n  >>> cur.close()\n  >>> con.close()\n\nCalling ``close()`` on the connection returns it returns it to the pool instead\nof closing it.\n\n.. note::\n   Once ``close()`` is called on the connection object, it renders the\n   object useless. The connection object received from the pool is a wrapper\n   around the actual connection object and calling ``close()`` on it returns\n   the connection to the pool and removes it from the wrapper effectively\n   leaving it an empty shell to be garbage collected.\n\nFAQ\n===\n\nHow do I install it?\n--------------------\n\n``pip install cuttlepool``\n\nWhat SQL implementations does Cuttle Pool support?\n--------------------------------------------------\n\nIt supports whatever SQL driver that is passed to it.\n\nContributing\n------------\n\nIt's highly recommended to develop in a virtualenv.\n\nClone the repository::\n\n  git clone https://github.com/smitchell556/cuttlepool.git\n\nInstall the package in editable mode::\n\n  cd cuttlepool\n  pip install -e .\n\nNow you're set. See the next section for running tests.\n\nPlease work off the ``develop`` branch. Better yet, create a new branch from\n``develop`` and merge it back into ``develop`` when functional and passing\ntests.\n\nRunning the tests\n-----------------\n\nTo run the tests, tox will need to be installed with ``pip install tox`` and\nan environment variable, ``TEST_CUTTLE_POOL`` must be set to a SQL type like\n``sqlite3`` or ``mysql``.\n\nTests can be run using tox with the command ``tox``. If the tests require\nuser credentials, create a file ``<sql>_credentials.py`` with the appropriate\nvariables in the test directory, where ``<sql>`` is the specific\nimplementation desired for testing. For example, to run ``tox``,\n``USER`` and ``PASSWD`` variables must be placed in a file called\n``mysql_credentials.py`` under the ``tests/`` directory.\n\nWhere can I get help?\n---------------------\n\nIf you haven't read the How-to guide above, please do that first. Otherwise,\ncheck the `issue tracker <https://github.com/smitchell556/cuttlepool/issues>`_.\nYour issue may be addressed there and if it isn't please file an issue :)\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/smitchell556/cuttlepool",
    "keywords": "sql connection pool",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cuttlepool",
    "platform": "",
    "project_url": "https://pypi.org/project/cuttlepool/",
    "release_url": "https://pypi.org/project/cuttlepool/0.4.1/",
    "requires_python": "",
    "summary": "A SQL pool implementation",
    "version": "0.4.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "31bb8b9c2a2ae580fafb059fca8f712e",
          "sha256": "7e2ea3217c4618896ae2b1137b3e7712473c0ae710a429ec72e419295c502ea9"
        },
        "downloads": 206,
        "filename": "cuttlepool-0.1.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "31bb8b9c2a2ae580fafb059fca8f712e",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 7603,
        "upload_time": "2017-04-06T22:54:15",
        "url": "https://files.pythonhosted.org/packages/1b/bf/9f740c4561e3784009ad30aa867c13e924c78c962d3431b49638ec1677ce/cuttlepool-0.1.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "49830e804c24d77cc2ffae7694b5e48d",
          "sha256": "f2f7c154747f3e7b4a3a0fb3ded45e8d489e6e1f2a3a0bfc02e4a87d606fbf1c"
        },
        "downloads": 211,
        "filename": "cuttlepool-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "49830e804c24d77cc2ffae7694b5e48d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7260,
        "upload_time": "2017-04-06T22:54:17",
        "url": "https://files.pythonhosted.org/packages/96/f1/f6caf58d4fb7137393a4683c5572a009392001918525b68237c2a0f54e53/cuttlepool-0.1.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e7e5870d4797fc3196c8001fd864603f",
          "sha256": "110a6fa178fd2370abc6033b8483f8c32f65a66c5dc1bf100c3e9cfed76a1b52"
        },
        "downloads": 0,
        "filename": "cuttlepool-0.2.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7e5870d4797fc3196c8001fd864603f",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 7950,
        "upload_time": "2017-04-18T21:05:34",
        "url": "https://files.pythonhosted.org/packages/fe/9f/d5c9519c1a93dbb3f6eaa643d11a0431e6d5ea328dd7ae933558d59690d5/cuttlepool-0.2.1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "79713a698547a12c42fab1050a3e2185",
          "sha256": "2e6cdc4bea9d3b12f3ae9f18723b96d1ea041d5427556740df999fdf2f5f98c0"
        },
        "downloads": 0,
        "filename": "cuttlepool-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "79713a698547a12c42fab1050a3e2185",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7585,
        "upload_time": "2017-04-18T21:05:35",
        "url": "https://files.pythonhosted.org/packages/11/f0/78e549e55e5d336374239bf2e2fb5dadc1828ab46433f2957822af3777c9/cuttlepool-0.2.1.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "725fe32c51b9192ddfd6d232bccdbaaa",
          "sha256": "d3d154565c4a699bc25c7723182db4a77cd52e9e3b781999c45bdc4c951c9f54"
        },
        "downloads": 0,
        "filename": "cuttlepool-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "725fe32c51b9192ddfd6d232bccdbaaa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 9233,
        "upload_time": "2017-05-11T19:02:24",
        "url": "https://files.pythonhosted.org/packages/6b/c1/154f99a9d1628a7c2ca7febfa46297c8dc30f779304f87dc3ae9060c261f/cuttlepool-0.3.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6b1eb8047c43b24aa8978081f6935883",
          "sha256": "6eb7a8a4b1d25deaa517930b0212caf925d921213def75a3ec0544e8e88b5a1c"
        },
        "downloads": 0,
        "filename": "cuttlepool-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6b1eb8047c43b24aa8978081f6935883",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9338,
        "upload_time": "2017-05-11T19:02:26",
        "url": "https://files.pythonhosted.org/packages/fb/8b/4793e8fa3a6959f4df4d33d8cf43928d0e8d371ec4fcf1ddb1401e4c1255/cuttlepool-0.3.0.tar.gz"
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "96be2a13d61be1519893f421782b9ee7",
          "sha256": "9348faa5fd0a32bbd5f0947322b5cad4c403a9a246aa98c7471b9a17442e06ca"
        },
        "downloads": 0,
        "filename": "cuttlepool-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "96be2a13d61be1519893f421782b9ee7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 9286,
        "upload_time": "2017-05-11T23:28:41",
        "url": "https://files.pythonhosted.org/packages/d1/29/f6c5e264f8f4ef67bdce24a90414ee9450bb8c131db61b341b55fa07c895/cuttlepool-0.4.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ada6a52511101b1533d2c5a6c577a88b",
          "sha256": "6d94f95b21da06909da48da64104dae2835d66514bb8ef64b5f8ceb8f6912af5"
        },
        "downloads": 0,
        "filename": "cuttlepool-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ada6a52511101b1533d2c5a6c577a88b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9490,
        "upload_time": "2017-05-11T23:28:42",
        "url": "https://files.pythonhosted.org/packages/df/c4/4aabc11bd5aaea6909498cccb655ccedb86850d905bdfccb32be4b6b1faa/cuttlepool-0.4.0.tar.gz"
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c89d8fc2b3afb679abc086a568e43712",
          "sha256": "62496aac0342a1715d4a6dd76a5ec94f20d380ee07f26cacbaae0552e3e45278"
        },
        "downloads": 0,
        "filename": "cuttlepool-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c89d8fc2b3afb679abc086a568e43712",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 9470,
        "upload_time": "2017-05-15T22:26:55",
        "url": "https://files.pythonhosted.org/packages/a3/c2/41db7fd3413fad9c77cad46a26bc5ce884c5d6a6092c8f6364f45cd402d3/cuttlepool-0.4.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "9b0093d15078dcbcc1f481e4603b6747",
          "sha256": "6f10762e3d50632e35b2d90fe00270889e4b315d698d3a9292afa315dba8fc1f"
        },
        "downloads": 0,
        "filename": "cuttlepool-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9b0093d15078dcbcc1f481e4603b6747",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9651,
        "upload_time": "2017-05-15T22:26:57",
        "url": "https://files.pythonhosted.org/packages/b9/63/71d338ad5343549ae7870cec320e83284ff47db688e9c2f6d1decad20be1/cuttlepool-0.4.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c89d8fc2b3afb679abc086a568e43712",
        "sha256": "62496aac0342a1715d4a6dd76a5ec94f20d380ee07f26cacbaae0552e3e45278"
      },
      "downloads": 0,
      "filename": "cuttlepool-0.4.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c89d8fc2b3afb679abc086a568e43712",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 9470,
      "upload_time": "2017-05-15T22:26:55",
      "url": "https://files.pythonhosted.org/packages/a3/c2/41db7fd3413fad9c77cad46a26bc5ce884c5d6a6092c8f6364f45cd402d3/cuttlepool-0.4.1-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "9b0093d15078dcbcc1f481e4603b6747",
        "sha256": "6f10762e3d50632e35b2d90fe00270889e4b315d698d3a9292afa315dba8fc1f"
      },
      "downloads": 0,
      "filename": "cuttlepool-0.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9b0093d15078dcbcc1f481e4603b6747",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9651,
      "upload_time": "2017-05-15T22:26:57",
      "url": "https://files.pythonhosted.org/packages/b9/63/71d338ad5343549ae7870cec320e83284ff47db688e9c2f6d1decad20be1/cuttlepool-0.4.1.tar.gz"
    }
  ]
}