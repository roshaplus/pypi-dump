{
  "info": {
    "author": "Adam Short",
    "author_email": "adam010101@icloud.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# SpookyAction\nSpookyAction is a **Python** framework for desktop automation - it takes a configuration-based approach to utilising the PyAutoGUI. At the core of the framework is the `Item` class. It uses the concept of silent chaining to make writing automated flows quick and simple. \n\nSpookyAction is currently in early alpha, with a huge number of features to be written, things to be refactored and issues to be squashed. The ultimate goal is to create a simplistic, high level way to automate flows across both desktop interactions, API calls and Headless browser usage.\n\nFor the moment it is strongly advised that you **do not use this in real world projects.**.\n\n\n### Basic Usage \n1. Create a directory with the following structure:\n   ```\n   __main__.py\n   helpers.py\n   methods.py\n   imgs/\n   ```\n2. In `imgs/` put all your image files to be turned into Item's.\n3. In `helpers.py` you want to define functions to be used by your code, but not directly by the user. \n4. In `methods.py` you want to define and then register functions to be used by your user. You must also registrer START, COMPLETED, and FAILED functions. Trival Example of registering a command:\n    ```\n    from spookyaction import *\n    from helpers import *\n    @new_method(\"bake-pie\")\n    def make_a_pie(acceptETC=False):\n      menu_select(6, 9, errormsg='we ran out of pie') # a helper function defined in helpers.py\n      Items[\"BakePieButton\"].click()\n      Items[\"TextMSGField\"].click().write(\"We made your pie.\").typewrite(\"tab\",\"shift\",\"enter\")\n      return [\"Pie was created successfully\"]\n    ```\n5. In `__main__.py` write your custom logic for invoking `spookyaction.run()`.\n\n\n### Basic Item API \nBare in mind I can make no guarantees as to if any of those works correctly while spookyaction is below v0.1.0\n```python \nclickbox = Item(\"path/to/clickbox.png\")\n\n# a lag tolerant way to locate and then click on the Item's center with optional offsets.\nclickbox.click(offx=0, offy=0)\n\n# execute a given function when the Item is found on screen. \n# Lags out after roughly a minute, give or take a bit.\nclickbox.run_when_present(given_function, arg1, arg2, kwarg1=None, kwarg2=\"Hi\")\n\n# a static method to execute click on all given Item names sequentially. \n# Works from the spookyaction-specific Items dictionary. \nItem.click_all(\"clickbox\", \"userprofile\", \"deletebutton\")\n\n# a property that returns whether an Item is on screen or not. \nclickbox.found # => True or False, dynamically computed. \n\n# silent-chaining function. best described by the source code. \ndef if_found(self, plus=True, errormsg=''):\n    if self.found and plus:\n        logging.info(\"%s was found and plus was true\", self.picturename)\n        return self\n    else:\n        logging.info(\"%s was not found or plus wasn't true.\")\n    if not errormsg:\n        logging.info(\"no error message. Returning empty.\")\n        return Empty()\n    else:\n        logging.info(\"There is an error message. Raising exception.\")\n    raise Error(errormsg)\n    \n# silent-chaining function that works in the exact reverse of if_found\nclickbox.if_not_found().fail(\"Oh F****\")\n\n# automatically raises the custom Error exception used for failure handling in spookyaction. \nclickbox(\"Error Message\")\n\n# type individual keys in\nclickbox.typewrite(\"tab\", \"enter\", \"shift\")\n\n# write a sentence as a whole \nclickbox.write(\"how are you today?\")\n\n# take a screenshot and save it. \nclickbox.screenshot(offset=(5,10), width=50, height=100)\n\n# read using the Google Cloud OCR. Not working currently.\nclickbox.read(offset=(50,100), width=100, height=50) # => returns a string of the characters read off the screenshot.\n\n```\n## Roadmap\n| Feature Name        | Feature Description                                                | Status        |\n| ------------------- | ------------------------------------------------------------------ | :-----------: |\n| Push out v0.1.0 \u00a0   | Make sure all Item methods work as well as the MVP framework. \u00a0 \u00a0  | IN PROGRESS   |\n| Get OCR Working     | Implement capturing of your Google Cloud Key -> .read() will work  | NEXT UP       |\n| Run from CSV \u00a0 \u00a0 \u00a0  | Add a method for running the automator based off a CSV + Model     | IN THE FUTURE |",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/adam-short/spookyaction",
    "keywords": "",
    "license": "LICENSE.txt",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spookyaction",
    "platform": "",
    "project_url": "https://pypi.org/project/spookyaction/",
    "release_url": "https://pypi.org/project/spookyaction/0.1.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A framework for pyautogui automation.",
    "version": "0.1.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c64c138e7619c66508551319cfff73f8",
          "sha256": "28d375e798fccd7ce5af4cdc6a9b0a6e5b0e26d6a3a19963b03bc2895130c4c8"
        },
        "downloads": 0,
        "filename": "spookyaction-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c64c138e7619c66508551319cfff73f8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3871,
        "upload_time": "2017-10-03T03:02:38",
        "url": "https://files.pythonhosted.org/packages/c6/cc/5fe3a216052942f380d1318842e69e8032f3f45ed0fde0c330058d211cda/spookyaction-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8bb5997607c140e944a5dc58407aa591",
          "sha256": "f09a8ca835d72c5974421a2b955df85ea6395bf8f8bd36f92233bbcda54345e5"
        },
        "downloads": 0,
        "filename": "spookyaction-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8bb5997607c140e944a5dc58407aa591",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3889,
        "upload_time": "2017-10-03T03:39:41",
        "url": "https://files.pythonhosted.org/packages/be/cb/8a749ff0df76b2c3caadefa2c5644896f26c23d8029f9fe3cd14af7bc330/spookyaction-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ed6b6db0bc8ac7d8896ae1dbd1088fbf",
          "sha256": "0af108d64e6eaafd87ced115ceff088f0efec7a86943f8de72781fd0f6c05e8a"
        },
        "downloads": 0,
        "filename": "spookyaction-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ed6b6db0bc8ac7d8896ae1dbd1088fbf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3888,
        "upload_time": "2017-10-03T03:43:52",
        "url": "https://files.pythonhosted.org/packages/4e/d9/f8b747823bd504981f2a5ba57ab5f8d65c4c727a1fae745f6d03271b9e98/spookyaction-0.0.3.tar.gz"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b362865dcd91f82fdfc060d7834ce4dc",
          "sha256": "57b5fd1bffc358351f5cf00c38a2d5c546eaf5f77a5d56aedf2feb1b50550b92"
        },
        "downloads": 0,
        "filename": "spookyaction-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b362865dcd91f82fdfc060d7834ce4dc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3899,
        "upload_time": "2017-10-03T03:48:51",
        "url": "https://files.pythonhosted.org/packages/cc/e6/c22641f4af3dfc50daef5f6b056cd290e156e628629e0871c770cc1ebb99/spookyaction-0.0.4.tar.gz"
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f1934d11ee01da1a8f66a425cf0da051",
          "sha256": "76865d5f262191857fe4f6d4fcb13fadcfcae148d2e36c8f98bc9c6b9315521a"
        },
        "downloads": 0,
        "filename": "spookyaction-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f1934d11ee01da1a8f66a425cf0da051",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5594,
        "upload_time": "2017-10-03T05:53:05",
        "url": "https://files.pythonhosted.org/packages/bf/2c/58fda34de5e67f3ea467c36ddd76a080593013868139fe79475072e64217/spookyaction-0.0.5.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "044f070acb316c88764bddbc1765d943",
          "sha256": "94dc572c9e11f75fbc28513f3e4455f7927b1d547545bad51a64c86de67fd948"
        },
        "downloads": 0,
        "filename": "spookyaction-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "044f070acb316c88764bddbc1765d943",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5605,
        "upload_time": "2017-10-03T05:55:49",
        "url": "https://files.pythonhosted.org/packages/cc/cf/69619fa591ff6abeaedfbb0e752e6f8dcedb1aa8bd06d6097cb1bdab0f26/spookyaction-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "044f070acb316c88764bddbc1765d943",
        "sha256": "94dc572c9e11f75fbc28513f3e4455f7927b1d547545bad51a64c86de67fd948"
      },
      "downloads": 0,
      "filename": "spookyaction-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "044f070acb316c88764bddbc1765d943",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5605,
      "upload_time": "2017-10-03T05:55:49",
      "url": "https://files.pythonhosted.org/packages/cc/cf/69619fa591ff6abeaedfbb0e752e6f8dcedb1aa8bd06d6097cb1bdab0f26/spookyaction-0.1.1.tar.gz"
    }
  ]
}