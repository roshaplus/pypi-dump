{
  "info": {
    "author": "Connor Wolf\t",
    "author_email": "github@imaginaryindustries.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "### Chrome Remote Debug Protocol interface layer and toolkit.\n\nInterface for communicating/controlling a remote chrome instance via the Chrome \nRemote Debugger protocol.\n\n#### Quickstart:\n\n```python\nimport ChromeController\n\nwith ChromeController.ChromeContext(binary=\"google-chrome\") as cr:\n    \n    # Do a blocking navigate to a URL, and get the page content as served by the remote\n    # server, with no modification by local javascript (if applicable)\n    raw_source = cr.blocking_navigate_and_get_source(\"http://www.google.com\")\n    \n    # Since the page is now rendered by the blocking navigate, we can\n    # get the page source after any javascript has modified it.\n    rendered_source = cr.get_rendered_page_source()\n    \n    # We can get the current browser URL, after any redirects.\n    current_url = cr.get_current_url()\n    \n    # We can get the page title as the browser sees it.\n    page_title, page_url = cr.get_page_url_title()\n    \n    # Or take a screenshot\n    # The screenshot is the size of the remote browser's configured viewport,\n    # which by default is set to 1024 * 1366. This size can be changed via the\n    # Emulation_setVisibleSize(width, height) function if needed.\n    png_bytestring = cr.take_screeshot()\n    \n    \n    # We can spoof user-agent headers:\n    new_headers = {\n                'User-Agent'      : 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.79 Safari/537.36,gzip(gfe)', \n                'Accept-Language' : 'en-us, en;q=1.0,fr-ca, fr;q=0.5,pt-br, pt;q=0.5,es;q=0.5', \n                'Accept'          : 'image/png,  text/plain;q=0.8, text/html;q=0.9, application/xhtml+xml, application/xml, */*;q=0.1', \n                'Accept-Encoding' : 'gzip,deflate',\n            }\n    cr.update_headers(new_headers)\n    \n    \n    # We can extract the cookies from the remote browser.\n    # This call returns a list of python http.cookiejar.Cookie cookie\n    # objects (the Chrome cookies are converted to python cookies).\n    cookie_list = cr.get_cookies()\n    \n    # We can also set cookies in the remote browser.\n    # Again, this interacts with http.cookiejar.Cookie() objects\n    # directly.\n    cook = http.cookiejar.Cookie(<params>)\n    cr.set_cookie(cook)\n\n    # We can create more tabs in the current browser context.\n    # Note that these additional tabs are scoped to the same lifetime as the original \n    # chromium object (`cr`), so they will become invalid after leaving the \n    # ChromeContext() context manager.\n    tab_2 = cr.new_tab()\n    tab_3 = cr.new_tab()\n\n    # At this time, multiple tabs are not thread safe, so they *probably* shouldn't \n    # be accessed concurrently. This *is* something that I'd like to change.\n\n```\n\nThis library makes extensive use of the python `logging` framework, and logs to \nthe `Main.ChromeController.*` log path.\n\nAutomatic wrapper class creation for the remote interface by parsing\nthe chrome `protocol.json` file, and dynamic code generation through dynamic \nAST building. While this is not the most maintainable design, I chose it mostly\nbecause I wanted an excuse to learn/experiment with python AST manipulation.\n\nA higher level automation layer is implemented on top of the autogenerated \nwrapper. Both the higher-level interface, and it's associated documentation are \nvery much a work in process at the moment.\n\nInterface documentation is here:  \nhttps://fake-name.github.io/ChromeController/ChromeController.ChromeRemoteDebugInterface.html\n\nAll remote methods are wrapped in named functions, with (partial) validation \nof passed parameter types and return types.\nRight now, simple parameter type validation is done (e.g. text arguments must be\nof type string, numeric arguments must be either an int or a float, etc..). \nHowever, the compound type arguments (bascally, anything that takes an array \nor object) are not validated, due to the complexity of properly constructing \ntype validators for their semantics given the architecture (read: writing the\nvalidator in raw AST broke my brain).\n\nTested mostly on python 3.5, lightly on 3.4 and 3.6, all on linux. If you are \nusing python 2, please stahp. Will probably work with normal chromium/windows, \nbut that's not tested. My test-target is the google-provided `chrome` binary.\n\nNote that this tool generates and manipulates the AST directly, so it is \nEXTREMELY sensitive to implementation details. It is *probably* broken on \npython > 3.6 or < 3.4.\n\nTransport layer (originally) from https://github.com/minektur/chrome_remote_shell\n\nLicense:\nBSD\n\n\n\n\n------\n\nCurrent Usage so far has been basically to find bugs or strangeness in the \nchromium remote debug interface:\n\n - Strange Behaviour is `network.getCookies` (fixed)  \n     https://bugs.chromium.org/p/chromium/issues/detail?id=668932\n - `network.clearBrowserCookies` appears to have no effect  \n     https://bugs.chromium.org/p/chromium/issues/detail?id=672744\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/fake-name/ChromeController",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ChromeController",
    "platform": "",
    "project_url": "https://pypi.org/project/ChromeController/",
    "release_url": "https://pypi.org/project/ChromeController/0.1.6/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Chrome Remote Debugger interface.",
    "version": "0.1.6"
  },
  "releases": {
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "355bf75d60f13439f3888a828a7b2cf4",
          "sha256": "c7c5ef35c78b755ed22d20e33513499d680d859d9e6ca340055f7603d8cb197f"
        },
        "downloads": -1,
        "filename": "ChromeController-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "355bf75d60f13439f3888a828a7b2cf4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 121272,
        "upload_time": "2018-01-29T06:55:21",
        "url": "https://files.pythonhosted.org/packages/c6/39/b4e54c76f0902460512b07f6c3b90d63363c037a671c572bd035c36e4451/ChromeController-0.1.4.tar.gz"
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fbeeb973065752067103b9d6c6260e02",
          "sha256": "3e22c94db01881cecbfb43717966f8132d7d86bda74d1670c0706e4318fef390"
        },
        "downloads": -1,
        "filename": "ChromeController-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "fbeeb973065752067103b9d6c6260e02",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 123143,
        "upload_time": "2018-01-29T07:12:52",
        "url": "https://files.pythonhosted.org/packages/8e/e1/1f23b7246a0bcfb5b9162d599408d6cd49cb3a950eb049a37dcf675565c8/ChromeController-0.1.5.tar.gz"
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1c940752a675966184285e8fea1eb744",
          "sha256": "5a6c4e073b2aa36f32c7e9c3c334d89ecd72a7e7172c7321fe64e592f984f017"
        },
        "downloads": -1,
        "filename": "ChromeController-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "1c940752a675966184285e8fea1eb744",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 123240,
        "upload_time": "2018-02-01T05:34:53",
        "url": "https://files.pythonhosted.org/packages/d0/78/37a3ea9851bb221ed9493052e3218f9f2864e8392f520bfdf8e6ab183789/ChromeController-0.1.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "1c940752a675966184285e8fea1eb744",
        "sha256": "5a6c4e073b2aa36f32c7e9c3c334d89ecd72a7e7172c7321fe64e592f984f017"
      },
      "downloads": -1,
      "filename": "ChromeController-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "1c940752a675966184285e8fea1eb744",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 123240,
      "upload_time": "2018-02-01T05:34:53",
      "url": "https://files.pythonhosted.org/packages/d0/78/37a3ea9851bb221ed9493052e3218f9f2864e8392f520bfdf8e6ab183789/ChromeController-0.1.6.tar.gz"
    }
  ]
}