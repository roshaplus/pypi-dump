{
  "info": {
    "author": "jeffrey k eliasen",
    "author_email": "jeff+gae-app-settings@jke.net",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP :: Site Management"
    ],
    "description": "Google AppEngine App Settings\n=============================\n\nThis package provies a straightforward way to store and access\nenvironment-specific and secret/private variables in the Google App\nEngine Datastore.\n\nQuick start\n-----------\n\nInstall ``gae_app_settings``:\n\n.. code:: bash\n\n    $ pip install gae_app_settings\n\nIn your settings module or some other module that loads at startup:\n\n.. code:: python\n\n    from gae_app_settings import AppSetting\n    value = AppSetting.get('MY_SETTING_KEY', DEFAULT_VALUE)\n\nFull documentation\n------------------\n\nAppSetting is a class that is used to persist/store sensitive values in\nyour environment. It is designed to work just like a dictionary, but it\nis limited to just string values.\n\nSettings cannot be set programmatically, they are only retrievable:\n\n.. code:: python\n\n    value = AppSetting.get('MY_SETTING_KEY', DEFAULT_VALUE)\n\n**NOTE:** regardless of the type of ``DEFAULT_VALUE``, ``value`` will\nalways be a string. This is to ensure that the return value is of the\nsame type whether the setting is set or unset, as a set value will be a\nstring.\n\nYou can also retrieve values without passing a default:\n\n.. code:: python\n\n    value = AppSetting.get('MY_SETTING_KEY')\n\n**Note:** If no default value is provided and the key has not been given\na value in the datastore, the ``get()`` call will raise a ``KeyError``\nand a placeholder entry will be created in the datastore. Once the\nplaceholder has been replaced with a value future calls to ``get()``\nwill succeed.\n\nBest practices\n--------------\n\nThe following best practices are recommended:\n\n1. Settings should be loaded at program start and stored locally in a\n   ``settings.py`` or similar module\n2. Default values should be provided for every setting:\n\n   1. these should be the values that make sense when running/testing\n      locally\n   2. placeholders will be inserted into the Datastore, and these only\n      need to be overwritten if there are environment-specific settings\n      that need to be set (in production, all values should be set)\n\n3. Do not change the type of the ``value`` property in the datastore;\n   coersion should happen on the result of the call to ``get()``\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/seawolf42/gae-app-settings",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gae-app-settings",
    "platform": "",
    "project_url": "https://pypi.org/project/gae-app-settings/",
    "release_url": "https://pypi.org/project/gae-app-settings/1.0.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Provides a key/value store in Google App Engine for sensitive data.",
    "version": "1.0.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d6fdfdcb626a44caa926ee2104db4eaa",
          "sha256": "10159638fd46e11380a8add1d73a5afbb2b189a7f208546d0452cf6d9476cdbb"
        },
        "downloads": -1,
        "filename": "gae-app-settings-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d6fdfdcb626a44caa926ee2104db4eaa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4246,
        "upload_time": "2018-02-04T20:02:19",
        "url": "https://files.pythonhosted.org/packages/e9/7b/b563b7397bb9a601236b64dcfd43595468ab3055873fa6c8635ca9862d39/gae-app-settings-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0e410f7d93a678fbbd8b0024a32d71f4",
          "sha256": "6666e31d925e2ec192e6f83787bf639a426698d5096387a6f55374b4a6267a98"
        },
        "downloads": -1,
        "filename": "gae-app-settings-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0e410f7d93a678fbbd8b0024a32d71f4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4348,
        "upload_time": "2018-02-04T20:05:57",
        "url": "https://files.pythonhosted.org/packages/2d/3a/971acf6ad8ccca97a5c47ff5844679ca88963890eaaf521974a59f75e155/gae-app-settings-0.1.1.tar.gz"
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b887d598a3e6e8909b3e33bd0cfe8c74",
          "sha256": "17f6b8b09b279166904dad1c04c3b9b06d3d2c39c642d5e8a6e2e2bc8c940bc5"
        },
        "downloads": -1,
        "filename": "gae-app-settings-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b887d598a3e6e8909b3e33bd0cfe8c74",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4371,
        "upload_time": "2018-02-04T22:15:29",
        "url": "https://files.pythonhosted.org/packages/53/b5/7a2177ccc76205ce1d25e191c2b60862f3f604cea0aae7662788c445fd5d/gae-app-settings-1.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b887d598a3e6e8909b3e33bd0cfe8c74",
        "sha256": "17f6b8b09b279166904dad1c04c3b9b06d3d2c39c642d5e8a6e2e2bc8c940bc5"
      },
      "downloads": -1,
      "filename": "gae-app-settings-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b887d598a3e6e8909b3e33bd0cfe8c74",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4371,
      "upload_time": "2018-02-04T22:15:29",
      "url": "https://files.pythonhosted.org/packages/53/b5/7a2177ccc76205ce1d25e191c2b60862f3f604cea0aae7662788c445fd5d/gae-app-settings-1.0.0.tar.gz"
    }
  ]
}