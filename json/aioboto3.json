{
  "info": {
    "author": "Terry Cain",
    "author_email": "terry@terrys-home.co.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "========================\nAsync AWS SDK for Python\n========================\n\n\n.. image:: https://img.shields.io/pypi/v/aioboto3.svg\n        :target: https://pypi.python.org/pypi/aioboto3\n\n.. image:: https://img.shields.io/travis/terrycain/aioboto3.svg\n        :target: https://travis-ci.org/terrycain/aioboto3\n\n.. image:: https://readthedocs.org/projects/aioboto3/badge/?version=latest\n        :target: https://aioboto3.readthedocs.io\n        :alt: Documentation Status\n\n.. image:: https://pyup.io/repos/github/terrycain/aioboto3/shield.svg\n     :target: https://pyup.io/repos/github/terrycain/aioboto3/\n     :alt: Updates\n\n\nThis package is mostly just a wrapper combining the great work of boto3_ and aiobotocore_.\n\naiobotocore allows you to use near enough all of the boto3 client commands in an async manner just by prefixing the command with `await`. With aioboto3 you can now\nuse the higher level apis provided by boto3 in an asynchronous manner. Mainly I developed this as I wanted to use the boto3 dynamodb Table object in some async\nmicroservices.\n\n\nExample\n-------\n\nSimple example of using aioboto3 to put items into a dynamodb table\n\n.. code-block:: python3\n\n    import asyncio\n    import aioboto3\n    from boto3.dynamodb.conditions import Key\n\n\n    async def main():\n        async with aioboto3.resource('dynamodb', region_name='eu-central-1') as dynamo_resource:\n            table = dynamo_resource.Table('test_table')\n\n            await table.put_item(\n                Item={'pk': 'test1', 'col1': 'some_data'}\n            )\n\n            result = await table.query(\n                KeyConditionExpression=Key('pk').eq('test1')\n            )\n\n            print(result['Items'])\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n\n    # Outputs:\n    #  [{'col1': 'some_data', 'pk': 'test1'}]\n\n\nDocumentation\n-------------\n\nDocs are here - https://aioboto3.readthedocs.io/en/latest/\nExamples here - https://aioboto3.readthedocs.io/en/latest/usage.html\n\n\nFeatures\n========\n\n* Closely mimics the usage of boto3.\n\nTodo\n====\n\n* More Examples\n* Set up docs\n* Look into monkey-patching the aws xray sdk to be more async if it needs to be.\n\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\nIt also makes use of the aiobotocore_ and boto3_ libraries. All the credit goes to them, this is mainly a wrapper with some examples.\n\n.. _aiobotocore: https://github.com/aio-libs/aiobotocore\n.. _boto3: https://github.com/boto/boto3\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\nLicense\n-------\n\n* Free software: GNU General Public License v3\n* Documentation: https://aioboto3.readthedocs.io.\n\n\n=======\nHistory\n=======\n\n0.1.0 (2017-09-25)\n------------------\n\n* First release on PyPI.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/terrycain/aioboto3",
    "keywords": "aioboto3",
    "license": "GNU General Public License v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aioboto3",
    "platform": "",
    "project_url": "https://pypi.org/project/aioboto3/",
    "release_url": "https://pypi.org/project/aioboto3/1.0.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Async boto3 wrapper",
    "version": "1.0.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "22bb92022ca20838edf6c915a153cc2d",
          "sha256": "7176cac65d30496918205954a4f7be56d843a7b9cf380f3102e0e85717963ce6"
        },
        "downloads": 0,
        "filename": "aioboto3-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "22bb92022ca20838edf6c915a153cc2d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19238,
        "upload_time": "2017-09-27T15:14:10",
        "url": "https://files.pythonhosted.org/packages/7b/02/449aec3c3d5df3bd68b67899baf4ff50bc26511a4938a38d9d652239f8d2/aioboto3-1.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "22bb92022ca20838edf6c915a153cc2d",
        "sha256": "7176cac65d30496918205954a4f7be56d843a7b9cf380f3102e0e85717963ce6"
      },
      "downloads": 0,
      "filename": "aioboto3-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "22bb92022ca20838edf6c915a153cc2d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 19238,
      "upload_time": "2017-09-27T15:14:10",
      "url": "https://files.pythonhosted.org/packages/7b/02/449aec3c3d5df3bd68b67899baf4ff50bc26511a4938a38d9d652239f8d2/aioboto3-1.0.0.tar.gz"
    }
  ]
}