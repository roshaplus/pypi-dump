{
  "info": {
    "author": "Serge \u00c9mond",
    "author_email": "greyl@greyworld.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Environment :: MacOS X",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS :: MacOS X",
      "Topic :: Utilities"
    ],
    "description": "# logtodayone\n\n`logtodayone` is a Python script that inserts an entry into the [Day One](http://dayoneapp.com/) Mac Application.\n\nIt can also download an Instapaper mobilized version of a web page and convert it to dayone prior to insert it into dayone.\n\nIf no text is specified, it uses the current clipboard.\n\n\n## Usage\n\n`logtodayone` takes a single argument: a string of text.\n\nThat string has the following format:\n\n    ! [date string] text|url\n\n\n### Starred\n\nIf the the argument begins with a \u201c!\u201d, then it is starred. Else\u2026 it is not.\n\n### Date string\n\nThe date string is parsed using [parsedatetime](https://github.com/bear/parsedatetime) because the parsing seems more natural to me than Day One's parsing.\n\nIf the date string starts with \"y\", it is converted to \"yesterday\".\n\nYou can specify things like:\n\n -  yesterday 9am\n -  -3d\n\nIf a date string is present, but no time is given, then it uses the current hour, with the minutes and seconds zeroed.\n\n### URL\n\nIf the text starts with \u201chttp://\u201d or \u201chttps://\u201d, then it is an URL.\n\nThe URL is downloaded through Instapaper\u2019s mobilizer, then converted to Markdown using [html2text](https://github.com/aaronsw/html2text).\n\nThe title/intro of the document it the remote page\u2019s title. If you add text after the URL, then it\u2019ll be used instead.\n\nTo insert the URL as-is, without anything, prefix it with \u201c:\u201d (e.g. \u201c:http://google.com/\u201d).\n\n\n## Examples\n\n`[yesterday] text`  \nIf it's currently 9:34, create en entry yesterday at 9am containint \u201ctext\u201d\n\n`![-2d 8pm] http://google.ca/`  \nCreate a *starred* entry two days ago, at 8pm. Google\u2019s homepage will be downloaded and converted to markdown.\n\n\n## Installation\n\nFirst, make sure to install [Day One\u2019s CLI utility](http://dayoneapp.com/tools/).\n\nIf you have `pip` installed:\n\n    pip install logtodayone\n\nElse,\n\n    easy_install logtodayone\n\n\n## Installation into Alfred\n\nTo be able to type \"lg text\" to log an entry containing \"text\" using Alfred:\n\n1. go to Alfred\u2019s preferences in the *Extensions* section\n2. add a new \u201cShell script\u201d, give it a name\n3. in the \u201ckeyword\u201d field, enter \u201clg\u201d. Keep \u201csilent\u201d checked.\n4. Click \u201cAdvanced\u201d, then check \u201cOutput to Notification Center\u201d if you want to be notified once the entry is added\n5. In the \u201cCommand\u201d text area, enter:\n\n    logtodayone {query}\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://bitbucket.org/greyw/logtodayone",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "logtodayone",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/logtodayone/",
    "release_url": "https://pypi.org/project/logtodayone/1.0.1/",
    "requires_python": null,
    "summary": "Script to insert text and markdown-converted web pages into Day One",
    "version": "1.0.1"
  },
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "040424fc3e34c34a4ab895dbab05e001",
          "sha256": "f7e77e45d6fdf093d59bdbc8bcefaf528b57622c0c740555df96f2906bcf9055"
        },
        "downloads": 2431,
        "filename": "logtodayone-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "040424fc3e34c34a4ab895dbab05e001",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5638,
        "upload_time": "2013-02-17T17:11:36",
        "url": "https://files.pythonhosted.org/packages/c8/34/f586535ebd1ce82c29297e5215de6d02160a76c6b7cebeadd17f7cb56987/logtodayone-1.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e27e038c701cb83ea7535669d81d7512",
          "sha256": "743d3bc67abc12c9beb14a9011224f79c26d5113cb297720a9cdb395a791ff3f"
        },
        "downloads": 2445,
        "filename": "logtodayone-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e27e038c701cb83ea7535669d81d7512",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5353,
        "upload_time": "2013-03-02T17:27:53",
        "url": "https://files.pythonhosted.org/packages/77/48/6a8b2b306f52330a2c9b7f78a67eb10dd4a40c93acd4112b03d406102749/logtodayone-1.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e27e038c701cb83ea7535669d81d7512",
        "sha256": "743d3bc67abc12c9beb14a9011224f79c26d5113cb297720a9cdb395a791ff3f"
      },
      "downloads": 2445,
      "filename": "logtodayone-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e27e038c701cb83ea7535669d81d7512",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5353,
      "upload_time": "2013-03-02T17:27:53",
      "url": "https://files.pythonhosted.org/packages/77/48/6a8b2b306f52330a2c9b7f78a67eb10dd4a40c93acd4112b03d406102749/logtodayone-1.0.1.tar.gz"
    }
  ]
}