{
  "info": {
    "author": "Grzegorz T\u0119\u017cycki",
    "author_email": "grzegorz.tezycki@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Utilities"
    ],
    "description": "django-popup-view-field\n------------------------\n\n.. image:: https://badge.fury.io/py/django-popup-view-field.svg\n    :target: https://badge.fury.io/py/django-popup-view-field\n    :alt: Latest PyPI version\n\n\n.. image:: https://travis-ci.org/djk2/django-popup-view-field.svg?branch=master\n    :target: https://travis-ci.org/djk2/django-popup-view-field\n    :alt: Travis CI\n\n\n.. image:: https://requires.io/github/djk2/django-popup-view-field/requirements.svg?branch=master\n    :target: https://requires.io/github/djk2/django-popup-view-field/requirements/?branch=master\n    :alt: Requirements Status\n\n\nField and widget can render bootstrap dialog with content from django view.\nYou can create normal django View and load this view in dialog for form field.\n\n- Support:\n\n    * Python: 2.7, 3.4\n    * Django: 1.8, 1.9, 1.10\n    * django-crispy-forms\n    * django-bootstrap3\n\n- Require:\n\n    * Django\n    * bootstrap3\n    * JQuery\n\n- Recommended:\n\n    * django-bootstrap3 or\n    * django-crispy-forms\n\n- Locale:\n\n    * EN - (english)\n    * PL - (polish)\n\n- Tested on browsers:\n\n    * OK - Firefox 50.1.0 - Ubuntu 14.04\n    * OK - Firefox 31.1 - CentOS 6.4\n    * OK - Chromium 53.0 - Ubuntu 14.04\n    * OK - Microsoft Edge 38 - Windows 10\n    * OK - Internet Explorer 11.0 - Windows 10\n    * OK - Internet Explorer 10.0 - Windows 7\n    * OK - Internet Explorer 9.0 - Windows 7\n    * ER - Internet Explorer <= 8 (no support \"html()\" for data-popup-view-value)\n\n\nScreenshots\n------------\n\n- Example: Form with several popup-view-fieds\n\n.. image:: https://raw.githubusercontent.com/djk2/django-popup-view-field/master/doc/static/scr1.png\n    :alt: Form with django-popup-view-fieds\n\n- Example: Dialog for select sex\n\n.. image:: https://raw.githubusercontent.com/djk2/django-popup-view-field/master/doc/static/scr2.png\n    :alt: Dialog for select sex\n\n- Example: Dialog for select color\n\n.. image:: https://raw.githubusercontent.com/djk2/django-popup-view-field/master/doc/static/scr3.png\n    :alt: Dialog for select color\n\n- Example: Dialog with form\n\n.. image:: https://raw.githubusercontent.com/djk2/django-popup-view-field/master/doc/static/scr4.png\n    :alt: Dialog with form\n\n\nRun demo\n---------\n1. Clone or download repository::\n\n    git clone https://github.com/djk2/django-popup-view-field.git\n\n2. Create virtualenv or not (red more: http://docs.python-guide.org/en/latest/dev/virtualenvs/)\n\n3. Install requirements for demo::\n\n    cd django-popup-view-field/demo\n\n    pip install -r requirements.txt\n\n4. Run developing web server::\n\n    python manage.py runserver\n\n5. Run your browser and call url: 127.0.0.1:8000 ::\n\n    firefox 127.0.0.1:8000\n\n\nInstall\n--------\nInstall package - There are several solutions, choose your own\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n1. Install using pypi repository::\n\n    pip install django-popup-view-field\n\n2. Install using pip + github repository url::\n\n        pip install git+https://github.com/djk2/django-popup-view-field.git\n\n3. Install using pip + zip archive::\n\n    wget https://github.com/djk2/django-popup-view-field/archive/master.zip\n    pip install master.zip\n\n4. Clone or download application to your django project directory::\n\n    wget https://github.com/djk2/django-popup-view-field/archive/master.zip -O /tmp/master.zip\n    unzip /tmp/master.zip -d /tmp/\n    cd my_project_dir\n    cp -r /tmp/django-popup-view-field-master/django_popup_view_field/ ./\n\nAdd ``django_popup_view_field`` to your INSTALLED_APPS setting\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n*settings.py* ::\n\n    INSTALLED_APPS = [\n        ...\n        'bootstrap3',    # If you use django-bootstrap3\n        'crispy_forms',  # If you user django-crispy-forms\n\n        'django_popup_view_field',\n        ...\n    ]\n\n**Warning**:\n Is recommended use django-bootstrap3 or django-crispy-forms\n to render forms and  fields, but this is not necessary.\n You can still write django templates using pure CSS from bootstrap3.\n More information about bootstrap forms in here: http://getbootstrap.com/css/#forms\n\n\nAdd the django_popup_view_field urls to your root url patterns\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n*urls.py* ::\n\n    urlpatterns = [\n        ...\n        url(\n            r'^django_popup_view_field/',\n            include('django_popup_view_field.urls', namespace=\"django_popup_view_field\")\n        ),\n    ]\n\n**Note**:\n The URL path can be whatever you want,\n but you must include 'django_popup_view_field.urls' with the 'django_popup_view_field' namespace.\n You may leave out the namespace in Django >= 1.9\n\n\nIn your base template, add ``django_popup_view_field_javascript`` tag\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n``django_popup_view_field_javascript`` template tag load all required javascripts and\ntemplate-scripst for application.\nTag should be append before body close </body> tag and after jQuery and Bootstrap scripts.\n\n*base.html* ::\n\n    <!DOCTYPE html>\n    {% load django_popup_view_field_tags %}\n\n    <html>\n        <head>\n            ...\n            <!-- Bootstrap CSS should be here -->\n            ...\n        </head>\n\n        <body>\n            ...\n            ...\n            <!-- jQuery script should be here -->\n            <!-- Bootstrap javascripts should be here -->\n            ...\n            ...\n            {% django_popup_view_field_javascript %}\n        </body>\n    </html>\n\n\nSimple Example\n------------------------\n\n.. image:: https://raw.githubusercontent.com/djk2/django-popup-view-field/master/doc/static/simple_example.png\n    :alt: Simple Example - screenshot\n\n\nCreate PopupView\n^^^^^^^^^^^^^^^^^\n\nHtml content rendered by this view will be loaded into bootstrap dialog.\nCreate your popup view same as normal django view.\n\n| **Your popup view must be subclass of django.views.generic.View**\n\n*templates/myapp/popups/colors.html* ::\n\n    <ul>\n        <li data-popup-view-value=\"red\" style=\"background:red;\"> red hat </li>\n        <li data-popup-view-value=\"blue\" style=\"background:blue;\"> blue sky </li>\n        <li data-popup-view-value=\"green\" style=\"background:green;\"> green planet </li>\n        <li data-popup-view-value=\"pink\" style=\"background:pink;\"> pink car </li>\n    </ul>\n\nIf user click on the element with the attribute ``data-popup-view-value``,\nthe value of this attribute will be set in form field and dialog will close.\n\n|\n\nIf you want set content of element as value in form field, use ``html()`` for attribute::\n\n    <li data-popup-view-value=\"html()\"> This text will be use :) </li>\n\n*popups.py* ::\n\n    from django.views.generic import TemplateView\n    from django_popup_view_field.registry import registry_popup_view\n\n    class ColorsPopupView(TemplateView):\n        template_name = 'myapp/popups/colors.html'\n\n    # REGISTER IS IMPORTANT\n    registry_popup_view.register(ColorsPopupView)\n\nRemember that you must register your popup view.\nAfter register you can run your popup view by call url::\n\n    ..../django_popup_view_field/ColorsPopupView\n\nIn template you can get url to popup view using url tag::\n\n    {% url \"django_popup_view_field:get_popup_view\" 'ColorsPopupView' %}\n\nAfter register you can unregister your popup view::\n\n    registry_popup_view.unregister(ColorsPopupView)\n\n    # or unregister by view name\n\n    registry_popup_view.unregister_by_name('ColorsPopupView')\n\nYou can also get popup view class by name::\n\n    view_class = registry_popup_view.get('ColorsPopupView')\n    view_class.as_view()\n\n\nCreate Form with PopupViewField\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n*forms.py* ::\n\n    from django import forms\n    from django_popup_view_field.fields import PopupViewField\n    from myapp.popups import ColorsPopupView\n\n    class ColorForm(forms.Form):\n\n        color = PopupViewField(\n            view_class=ColorsPopupView,\n            popup_dialog_title='What is your favorite color',\n            required=True,\n            help_text='be honest'\n        )\n\n**class PopupViewField(view_class, popup_dialog_title, *args, **kwargs)**\n\n* ``view_class`` - **required** - popup view class, view to render dialog content, must be subclass of django.views.generic.View\n* ``popup_dialog_title`` - **not required** - Title for dialog, default ``Popup Dialog: Select value``\n* ``args`` and ``kwargs`` are default for CharField\n\n\nCreate typical FormView\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n*views.py* ::\n\n    from django.views.generic import FormView\n    from myapp.forms import ColorForm\n    from django.http import HttpResponse\n\n    class ColorFormView(FormView):\n        template_name = \"myapp/color_form.html\"\n        form_class = ColorForm\n\n        def form_valid(self, form):\n            color = form.cleaned_data.get(\"color\")\n            return HttpResponse(\"Your color: {0}\".format(color))\n\n**Template using django-crispy-forms**\n\n*templates/myapp/color_form.html* ::\n\n    {% extends \"base.html\" %}\n    {% load crispy_forms_tags %}\n    {% crispy form %}\n\n\n**Template using django-bootstrap3**\n\n*templates/myapp/color_form.html* ::\n\n    {% extends \"base.html\" %}\n    {% load bootstrap3 %}\n\n    <form action=\".\" method=\"post\" class=\"form\">\n        {% csrf_token %}\n        {% bootstrap_form form %}\n        {% buttons %}\n            <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n        {% endbuttons %}\n    </form>\n\n**Template with pure bootstrap3 css (without django-bootstrap3 and crispy)**\n\n*templates/myapp/color_form.html* ::\n\n    {% extends \"base.html\" %}\n    <form action=\".\" method=\"post\" class=\"form\">\n        <div class=\"form-group\">\n            <label class=\"control-label\"> {{ form.color.label }} </label>\n            {{ form.color }}\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </form>\n\n\nAdvanced Example\n------------------------\n\nAdvanced Example use django-bootstrap3. Dialog is interactive, all links and forms will be send via Ajax and response will be loaded in dialog.\n\n.. image:: https://raw.githubusercontent.com/djk2/django-popup-view-field/master/doc/static/advanced_example.png\n    :alt: Advanced Example - screenshot\n\n\nPopupView\n^^^^^^^^^^\n\n*templates/myapp/popups/alphabet.html* ::\n\n    <h4> Select the first letter of your name </h4>\n\n    {% for char in alphabet %}\n        <div class=\"btn btn-xs btn-info\" data-popup-view-value=\"html()\">\n            {{ char }}\n        </div>\n        {% if forloop.counter|divisibleby:\"13\" and forloop.counter > 0 %}\n            <br/><br/>\n        {% endif %}\n    {% endfor %}\n\n    {# Button to change order #}\n    <a class=\"btn btn-xs btn-primary\" style=\"margin-top:20px;\"\n              href=\"{% url \"django_popup_view_field:get_popup_view\" 'AlphabetPopupView' %}?direction={{direction}}\">\n        Reverse order\n    </a>\n\n*popups.py* ::\n\n    from django.views.generic import TemplateView\n    from django_popup_view_field.registry import registry_popup_view\n    from string import ascii_uppercase\n\n    class AlphabetPopupView(TemplateView):\n        template_name = 'myapp/popups/alphabet.html'\n        direction = 1\n\n        def get_context_data(self, **kwargs):\n            self.direction = int(self.request.GET.get(\"direction\") or self.direction)\n            alphabet = ascii_uppercase[::self.direction]\n            ctx = super(AlphabetPopupView, self).get_context_data(**kwargs)\n            ctx['alphabet'] = alphabet\n            ctx['direction'] = self.direction * -1\n            return ctx\n\n    # REGISTER IS IMPORTANT\n    registry_popup_view.register(AlphabetPopupView)\n\n\nForm with PopupViewField\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n*forms.py* ::\n\n    from django import forms\n    from django_popup_view_field.fields import PopupViewField\n    from myapp.popups import AlphabetPopupView\n\n    class AlphabetForm(forms.Form):\n\n        char = PopupViewField(view_class=AlphabetPopupView, required=True)\n\nView\n^^^^^\n\n*templates/myapp/alphabet.html* ::\n\n    {% extends \"base.html\" %}\n    {% load bootstrap3 %}\n\n    <form action=\".\" method=\"post\" class=\"form\">\n        {% csrf_token %}\n        {% bootstrap_form form %}\n        {% buttons %}\n            <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n        {% endbuttons %}\n    </form>\n\n*views.py* ::\n\n    from django.views.generic import FormView\n    from myapp.forms import AlphabetForm\n    from django.http import HttpResponse\n\n    class AlphabetFormView(FormView):\n        template_name = \"myapp/alphabet.html\"\n        form_class = AlphabetForm\n\n        def form_valid(self, form):\n            char = form.cleande_data.get(\"char\")\n            return HttpResponse(\"First letter of your name : {0}\".format(char))\n\n\nOthers\n---------\n* Remember, if you use a django-crispy-forms then you should set CRISPY_TEMPLATE_PACK = \"bootstrap3\" in settings.py\n\n* If you want change locale (Polish, English is supported) then you must add ``LocaleMiddleware`` to your settings.MIDDLEWARE::\n\n    MIDDLEWARE = [\n        'django.contrib.sessions.middleware.SessionMiddleware',\n        ...\n        'django.middleware.locale.LocaleMiddleware',\n    ]\n\n* More about bootstrap in here : http://getbootstrap.com/\n\n* More about django-crispy-forms in here : http://django-crispy-forms.readthedocs.io/en/latest/\n\n* More about django-bootstrap3 in here : http://django-bootstrap3.readthedocs.io/en/latest/\n\n* Documentation prepared with the help of **Online reStructuredText editor** : http://rst.ninjs.org/",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/djk2/django-popup-view-field",
    "keywords": "popup crispy bootstrap views",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-popup-view-field",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-popup-view-field/",
    "release_url": "https://pypi.org/project/django-popup-view-field/0.3.0/",
    "requires_python": "",
    "summary": "Field and widget can render bootstrap dialog window with content from django view",
    "version": "0.3.0"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "67872402999a29e9b9d75e9b71c02699",
          "sha256": "5d6c71bee9e86af5ec4cf060fdfcefd82d1a43d8d94d935393aedc3af56634f0"
        },
        "downloads": 280,
        "filename": "django_popup_view_field-0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "67872402999a29e9b9d75e9b71c02699",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 27288,
        "upload_time": "2016-12-27T14:04:31",
        "url": "https://files.pythonhosted.org/packages/4a/32/2e3b33356f297967e3b566e01b33144d3ebf425dfc19c73822cf773d03a2/django_popup_view_field-0.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3375d4515ea328fd1eb7495a4c13ff1a",
          "sha256": "24e01f3af5f8caea1da2988aef81415153e72cf885f99f5b4fe53ecea080484c"
        },
        "downloads": 291,
        "filename": "django-popup-view-field-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3375d4515ea328fd1eb7495a4c13ff1a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12501,
        "upload_time": "2016-12-27T14:04:33",
        "url": "https://files.pythonhosted.org/packages/cb/fc/fc2104a1b97f03f4c8042c35a7bd9b1805adb02dc045298de99def62fa7f/django-popup-view-field-0.1.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "02476675742ad82540a59cd8e9e3bc5e",
          "sha256": "e20b7a0647a361a9d142dd5d088f19aed61708d21edd6f883bd46870e8706d91"
        },
        "downloads": 12,
        "filename": "django_popup_view_field-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "02476675742ad82540a59cd8e9e3bc5e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 27283,
        "upload_time": "2017-02-20T21:19:32",
        "url": "https://files.pythonhosted.org/packages/d1/07/7f0a01d34523125493be144b274d18098ae87b8c1746d756357499c13a6d/django_popup_view_field-0.2.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d9cef0e32af197269dd3f687b9116738",
          "sha256": "165bcb4e50e3ee30f5c961ee4b0f28f400d59d7bf69b553d1142df9e970dc554"
        },
        "downloads": 13,
        "filename": "django-popup-view-field-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d9cef0e32af197269dd3f687b9116738",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14823,
        "upload_time": "2017-02-20T21:19:34",
        "url": "https://files.pythonhosted.org/packages/9b/87/e07812010cbb72e8205b5c476e1503f0da9f41c76503f56f8ba59ce3cf88/django-popup-view-field-0.2.0.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c0fa2cbede1a77d86d76bafc80df7649",
          "sha256": "2fb05b12fe3551e6b04474957cc9a773cbc112d8e2474a070642478cbd47d870"
        },
        "downloads": 18,
        "filename": "django_popup_view_field-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c0fa2cbede1a77d86d76bafc80df7649",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 27974,
        "upload_time": "2017-03-07T22:36:49",
        "url": "https://files.pythonhosted.org/packages/43/8e/19701d60914cfa3e4b29cf916a54c1bf7d9fbab12068a2f8c2568d45b2d0/django_popup_view_field-0.3.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4b26017b8a5d492ec54a12582756b59b",
          "sha256": "505956143cd8afd62aa9d862eff3b435205f502cb4eea189155d1f45084c8d35"
        },
        "downloads": 14,
        "filename": "django-popup-view-field-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4b26017b8a5d492ec54a12582756b59b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14917,
        "upload_time": "2017-03-07T22:36:51",
        "url": "https://files.pythonhosted.org/packages/46/75/fb98c8380cc15c0e380047e5958cc78dad4f1dea99be12cf0b2952f00b0b/django-popup-view-field-0.3.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "c0fa2cbede1a77d86d76bafc80df7649",
        "sha256": "2fb05b12fe3551e6b04474957cc9a773cbc112d8e2474a070642478cbd47d870"
      },
      "downloads": 18,
      "filename": "django_popup_view_field-0.3.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c0fa2cbede1a77d86d76bafc80df7649",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 27974,
      "upload_time": "2017-03-07T22:36:49",
      "url": "https://files.pythonhosted.org/packages/43/8e/19701d60914cfa3e4b29cf916a54c1bf7d9fbab12068a2f8c2568d45b2d0/django_popup_view_field-0.3.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "4b26017b8a5d492ec54a12582756b59b",
        "sha256": "505956143cd8afd62aa9d862eff3b435205f502cb4eea189155d1f45084c8d35"
      },
      "downloads": 14,
      "filename": "django-popup-view-field-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4b26017b8a5d492ec54a12582756b59b",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 14917,
      "upload_time": "2017-03-07T22:36:51",
      "url": "https://files.pythonhosted.org/packages/46/75/fb98c8380cc15c0e380047e5958cc78dad4f1dea99be12cf0b2952f00b0b/django-popup-view-field-0.3.0.tar.gz"
    }
  ]
}