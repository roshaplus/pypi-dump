{
  "info": {
    "author": "Joaquin Alori",
    "author_email": "joaquin.alori@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2"
    ],
    "description": "Requestium\n==========\n\nThe objective of this project is to help in the development of bots that\nautomatize actions in websites, and who need to dynamically switch\nbetween plain http requests and a js-enabled browser in a single\nsession. We do this by adding a `Selenium\nwebdriver <https://github.com/SeleniumHQ/selenium>`__ and\n`parsel <https://github.com/scrapy/parsel>`__'s parser to a\n`request <https://github.com/requests/requests>`__'s Session object.\nThis new session object is a drop in replacement of the standard\nrequests session object.\n\nUsage\n-----\n\n.. code:: python\n\n    from requestium import Session, Keys\n    # from requests import Session  # We replace this statement\n\n    s = Session()\n\n    # We don't need to parse the response, it is done automatically\n    title = s.get('http://samplesite.com').xpath('//title/text()').extract_first(default='Sample Title')\n\n    # Regex require much less boilerplate\n    response = s.get('http://samplesite.com/sample_path')\n    list_of_two_digit_numbers = response.re(r'\\d\\d')  # Extracts all matches as a list\n    print \"Site ID: {}\".format(response.re_first(r'ID_\\d\\w\\d'), default='1A1')  # Extracts the first match\n\n    # We can use all the normal Session methods\n    s.post('http://www.samplesite.com/sample', data={'field1': 'data1'})\n\n    # And we can switch to using the Selenium webdriver to run any js code\n    s.update_driver_cookies()  # We can mantain the session if needed\n    s.driver.get('http://www.samplesite.com/sample/process')\n    s.driver.find_element_by_xpath(\"//input[@class='user_name']\").send_keys('James Bond', Keys.ENTER)\n    s.driver.find_element_by_xpath(\"//div[@uniqueattribute='important_button']\").click()\n\n    # And then switch back to using requests\n    s.update_session_cookies()\n    s.post('http://www.samplesite.com/sample2', data={'field2': 'data2'})\n\nConsiderations\n--------------\n\nMost things are lazily evaluated, meaning: - The webdriver process is\nonly started if we call the driver object. So if we dont need to use the\nwebdriver, we could use the library with no overhead. - Parsing of the\nresponses is only done if we call the ``xpath``, ``css``, or ``re``\nmethods of the response. So again there is no overhead if we dont need\nto use this features.\n\nWe can use our custom Session class just for development, maybe to\ndynamically watch the last step of the session in a chrome browser\nrunning without the ``--headless`` flag, and remove this last step after\ndevelopment is done. After this we could just remove import the Session\nclass as ``from requests import Session`` and just deploy to production\nwithout using requestium.\n\nThis project intends to be a drop in replacement of requests session\nobject, with added functionality. If your use case is a drop in\nreplacement for a Selenium webdriver, but that also has some of\nrequests' functionality,\n`Selenium-Requests <https://github.com/cryzed/Selenium-Requests>`__ does\njust that.\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/tryolabs/requestium",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "requestium",
    "platform": "",
    "project_url": "https://pypi.org/project/requestium/",
    "release_url": "https://pypi.org/project/requestium/0.1/",
    "requires_dist": [
      "tldextract (>=2.1.0)",
      "selenium (>=3.4.3)",
      "requests (>=2.18.1)",
      "parsel (>=1.2.0)"
    ],
    "requires_python": "",
    "summary": "Adds a Selenium webdriver and parsel's parser to a request's Session object, and makes switching between them seamless. Handles cookie, proxy and header transfer.",
    "version": "0.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "71d15b1e232f19d45f0313b6590b1bb2",
          "sha256": "ac63a63fcda963aa1949a4df28aef9e4288cab00041f48240994f994455524a5"
        },
        "downloads": 0,
        "filename": "requestium-0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "71d15b1e232f19d45f0313b6590b1bb2",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 10227,
        "upload_time": "2017-07-28T20:35:42",
        "url": "https://files.pythonhosted.org/packages/48/d2/07132f59108038777b72a2e1dcbf82d5cd98a9c7376845fa1f22916cc72f/requestium-0.1-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0dccb484bc127f269e217eda41217bfa",
          "sha256": "2650ccec5ecb148aac44976c34c36d18e15dc9a7c2705e824f29303b50cc9219"
        },
        "downloads": 0,
        "filename": "requestium-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0dccb484bc127f269e217eda41217bfa",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7535,
        "upload_time": "2017-07-28T20:35:45",
        "url": "https://files.pythonhosted.org/packages/41/e0/358ff5edd0881a9310a8b4c5a9b70dbb0e63aca0fd75632b534f4a3071be/requestium-0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "71d15b1e232f19d45f0313b6590b1bb2",
        "sha256": "ac63a63fcda963aa1949a4df28aef9e4288cab00041f48240994f994455524a5"
      },
      "downloads": 0,
      "filename": "requestium-0.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "71d15b1e232f19d45f0313b6590b1bb2",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 10227,
      "upload_time": "2017-07-28T20:35:42",
      "url": "https://files.pythonhosted.org/packages/48/d2/07132f59108038777b72a2e1dcbf82d5cd98a9c7376845fa1f22916cc72f/requestium-0.1-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "0dccb484bc127f269e217eda41217bfa",
        "sha256": "2650ccec5ecb148aac44976c34c36d18e15dc9a7c2705e824f29303b50cc9219"
      },
      "downloads": 0,
      "filename": "requestium-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0dccb484bc127f269e217eda41217bfa",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7535,
      "upload_time": "2017-07-28T20:35:45",
      "url": "https://files.pythonhosted.org/packages/41/e0/358ff5edd0881a9310a8b4c5a9b70dbb0e63aca0fd75632b534f4a3071be/requestium-0.1.tar.gz"
    }
  ]
}