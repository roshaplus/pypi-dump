{
  "info": {
    "author": "Alex Kaszynski",
    "author_email": "akascap@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "pymeshfix\n=========\n\nPython/Cython wrapper of Marco Attene's wonderful, award-winning\n`MeshFix <https://github.com/MarcoAttene/MeshFix-V2.0>`__ software. This\nmodule brings the speed of C++ with the portability and ease of\ninstallation of Python.\n\nThis software takes as input a polygon mesh and produces a copy of the\ninput where all the occurrences of a specific set of \"defects\" are\ncorrected. MeshFix has been designed to correct typical flaws present in\nRAW DIGITIZED mesh models, thus it might fail or produce coarse results\nif run on other sorts of input meshes (e.g. tessellated CAD models).\n\nThe input is assumed to represent a single CLOSED SOLID OBJECT, thus the\noutput will be a SINGLE WATERTIGHT TRIANGLE MESH bounding a polyhedron.\nAll the singularities, self-intersections and degenerate elements are\nremoved from the input, while regions of the surface without defects are\nleft unmodified.\n\nInstallation\n------------\n\nFrom `PyPI <https://pypi.python.org/pypi/pymeshfix>`__\n\n.. code:: bash\n\n    pip install pymeshfix\n\nFrom source at `GitHub <https://github.com/akaszynski/pymeshfix>`__\n\n.. code:: bash\n\n    git clone --recursive https://github.com/akaszynski/pymeshfix\n    cd pymeshfix\n    pip install .\n\nDependencies\n------------\n\nRequired: ``numpy``, ``cython``. Optional: ``vtk``\n\nMinimum requirements are numpy and cython. To enable plotting and\nseveral other features, vtk 5.0 or greater must be installed with Python\nbindings. VTK can be installed through a variety of methods. Please see\nhttp://www.vtk.org/\n\nTests\n-----\n\nTest installation with the following from Python\n\n.. code:: python\n\n    from pymeshfix import Tests\n\n    # Test of pymeshfix without VTK module\n    Tests.Fix.Native()\n\n    # Performs same mesh repair while leveraging VTK's plotting/mesh loading\n    Tests.Fix.WithVTK()\n\nEasy Example\n------------\n\nThis example uses the cython wrapper directly. No bells or whistles\nhere.\n\n.. code:: python\n\n    from pymeshfix import _meshfix\n\n    # Read mesh from infile and output cleaned mesh to outfile\n    _meshfix.CleanFromFile(infile, outfile)\n\nThis example assumes the user has vertex and faces arrays in Python.\nAgain, no bells or whistles.\n\n.. code:: python\n\n    from pymeshfix import _meshfix\n\n    # Generate vertex and face arrays of cleaned mesh\n    vclean, fclean = CleanFromVF(v, f) # v and f are numpy arrays or python lists\n\nFuller Examples with and without VTK\n------------------------------------\n\nOne of the main reasons to bring MeshFix to Python is to allow the\nlibrary to communicate to other python programs without having to use\nthe hard drive. Therefore, this example assumes that you have a mesh\nwithin memory and wish to repair it using MeshFix.\n\n.. code:: python\n\n    #Load module\n    from pymeshfix import meshfix\n\n    # Create object\n    mfobj = meshfix.MeshFixClass()\n    mfobj.LoadVF(v, f) # from arrays or lists\n    #mfobj.LoadFile(filename) # or from file\n    #mfobj.LoadMesh(vtkpoly) # or from a vtk.vtkPolyData object\n\n    # Plot input (if vtk is available)\n    mfobj.DisplayInputSurface()\n\n    # Repair input mesh\n    mfobj.Repair()\n\n    # Generate vtk output mesh\\\n    mfobj.GenFixedMesh() # creates mfobj.grid\n\n    # Or, access the resulting arrays directly from the object\n    mfobj.vclean # numpy np.float array\n    mfobj.fclean # numpy np.int32 array\n\n    # View the repaired mesh\n    mfobj.DisplayFixedSurface()\n\n    # Save the mesh\n    mfobj.SaveFixedMesh('out.ply')\n\nAlternatively, the user could use the cython wrapper of MeshFix directly\nif vtk is unavailable or they wish to have more control over the\ncleaning algorthim.\n\n.. code:: python\n\n    from pymeshfix import _meshfix\n\n    # Create TMesh object\n    tin = _meshfix.PyTMesh()\n\n    tin.LoadFile(infile)\n    # tin.LoadArray(v, f) # can also read arrays from memory\n\n    # Attempt to join nearby components\n    # tin.JoinClosestComponents()\n\n    # Fill holes\n    tin.FillSmallBoundaries()\n    print('There are {:d} boundaries'.format(tin.Boundaries())\n\n    # Clean (removes self intersections)\n    tin.MeshClean(max_iters=10, inner_loops=3)\n\n    # Check mesh for holes again\n    print('There are {:d} boundaries'.format(tin.Boundaries())\n\n    # Clean again if necessary...\n\n    # Output mesh\n    tin.SaveFile(outfile)\n    # vclean, fclean = tin.ReturnArrays() # returns numpy arrays\n\nAlgorithim and Citation Policy\n------------------------------\n\nTo better understand how the algorithm works, please refer to the\nfollowing paper:\n\nM. Attene. A lightweight approach to repairing digitized polygon meshes.\nThe Visual Computer, 2010. (c) Springer. DOI: 10.1007/s00371-010-0416-3\n\nThis software is based on ideas published therein. If you use MeshFix\nfor research purposes you should cite the above paper in your published\nresults. MeshFix cannot be used for commercial purposes without a proper\nlicensing contract.\n\nCopyright\n---------\n\nMeshFix is\n\nCopyright(C) 2010: IMATI-GE / CNR\n\nAll rights reserved.\n\nThis program is dual-licensed as follows:\n\n(1) You may use MeshFix as free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License as\n    published by the Free Software Foundation; either version 3 of the\n    License, or (at your option) any later version.\n\nIn this case the program is distributed in the hope that it will be\nuseful, but WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\nPublic License (http://www.gnu.org/licenses/gpl.txt) for more details.\n\n(2) You may use MeshFix as part of a commercial software. In this case a\n    proper agreement must be reached with the Authors and with\n    IMATI-GE/CNR based on a proper licensing contract.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/akaszynski/pymeshfix",
    "keywords": "meshfix",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pymeshfix",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pymeshfix/",
    "release_url": "https://pypi.org/project/pymeshfix/0.10.1/",
    "requires_python": null,
    "summary": "Repairs triangular meshes",
    "version": "0.10.1"
  },
  "releases": {
    "0.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "08a3fa8373dfe68114532dd86be6ea66",
          "sha256": "ce5f7fb863f4a2b16262e0c13433b7fffdce8be13ab194ac9f4acfe16bdd99ed"
        },
        "downloads": 242,
        "filename": "pymeshfix-0.10-cp27-cp27m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "08a3fa8373dfe68114532dd86be6ea66",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 1356002,
        "upload_time": "2016-09-21T06:23:48",
        "url": "https://files.pythonhosted.org/packages/68/87/c3ca6955c15532795e028d9bfb1aa4df29b6ecf1de63ae474862b43f10ea/pymeshfix-0.10-cp27-cp27m-win_amd64.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3a319d3320e18da3ad13a20df4361764",
          "sha256": "3bf185a19790598815503328ed689cd5bf91df5e7c6761121d09ff5908991911"
        },
        "downloads": 136,
        "filename": "pymeshfix-0.10-cp35-cp35m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "3a319d3320e18da3ad13a20df4361764",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "size": 1310827,
        "upload_time": "2016-09-21T06:48:58",
        "url": "https://files.pythonhosted.org/packages/fe/b4/1bc643b1768ea8da4fbf63098039c2055c130704e457ac7e4bb3a7965166/pymeshfix-0.10-cp35-cp35m-win_amd64.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1ca477c4cf3ac4944824f0b71a0c4bf0",
          "sha256": "42d31d492f23f4d48202dcf161db3b72f04041380b5de325b9d4bb9c98338606"
        },
        "downloads": 146,
        "filename": "pymeshfix-0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "1ca477c4cf3ac4944824f0b71a0c4bf0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1398886,
        "upload_time": "2016-09-21T06:23:29",
        "url": "https://files.pythonhosted.org/packages/94/dd/41c4d116f0df6b45978524789161614d4c3a4dc083fc5834183f82697ab1/pymeshfix-0.10.tar.gz"
      }
    ],
    "0.10.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "85d472ff0be9889d354baca52f776e19",
          "sha256": "daa70eb10350240a65f62b45f49c37587ce12bbc29b45c64f19a21d460295e02"
        },
        "downloads": 0,
        "filename": "pymeshfix-0.10.1.tar.gz",
        "has_sig": false,
        "md5_digest": "85d472ff0be9889d354baca52f776e19",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 1397740,
        "upload_time": "2017-05-25T14:10:19",
        "url": "https://files.pythonhosted.org/packages/4f/58/92d1acc26e823b9e42ccab28c9e963eb17dd59e5e859cf1a51d9e801547a/pymeshfix-0.10.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "85d472ff0be9889d354baca52f776e19",
        "sha256": "daa70eb10350240a65f62b45f49c37587ce12bbc29b45c64f19a21d460295e02"
      },
      "downloads": 0,
      "filename": "pymeshfix-0.10.1.tar.gz",
      "has_sig": false,
      "md5_digest": "85d472ff0be9889d354baca52f776e19",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 1397740,
      "upload_time": "2017-05-25T14:10:19",
      "url": "https://files.pythonhosted.org/packages/4f/58/92d1acc26e823b9e42ccab28c9e963eb17dd59e5e859cf1a51d9e801547a/pymeshfix-0.10.1.tar.gz"
    }
  ]
}