{
  "info": {
    "author": "Ritesh Kadmawala",
    "author_email": "ritesh@loanzen.in",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "falcon-auth\n===========\n\n|version| |docs| |build| |coverage| |license|\n\nA falcon middleware + authentication backends that adds authentication layer\nto you app/api service.\n\nInstallation\n------------\n\nInstall the extension with pip, or easy\\_install.\n\n.. code:: bash\n\n    $ pip install -U falcon-auth\n\nUsage\n-----\n\nThis package exposes a falcon middleware which takes an authentication backend\nas an input and use it to authenticate requests. You can specify some routes and\nmethods which are exempted from authentication. Once the middleware authenticates\nthe request using the specified authentication backend, it add the authenticated\nuser to the ``request context``\n\n.. code:: python\n\n    import falcon\n    from falcon_auth import FalconAuthMiddleware, BasicAuthBackend\n\n    user_loader = lambda username, password: { 'username': username }\n    auth_backend = BasicAuthBackend(user_loader)\n    auth_middleware = FalconAuthMiddleware(auth_backend,\n                        exempt_routes=['/exempt'], exempt_methods=['HEAD'])\n    api = falcon.API(middleware=[auth_middleware])\n\n    class ApiResource:\n\n        def on_post(self, req, resp):\n            user = req.context['user']\n            resp.body = \"User Found: {}\".format(user['username'])\n\n\nOverride Authentication for a specific resource\n-----------------------------------------------\n\nIts possible to customize the exempt routes, exempt methods and\nauthentication backend on a per resource basis as well\n\n\n.. code:: python\n\n    import falcon\n    from falcon_auth import FalconAuthMiddleware, BasicAuthBackend, TokenAuthBackend\n\n    # a loader function to fetch user from username, password\n    user_loader = lambda username, password: { 'username': username }\n\n    # basic auth backend\n    basic_auth = BasicAuthBackend(user_loader)\n\n    # Auth Middleware that uses basic_auth for authentication\n    auth_middleware = FalconAuthMiddleware(basic_auth)\n    api = falcon.API(middleware=[auth_middleware])\n\n\n    class ApiResource:\n\n        auth = {\n            'backend': TokenAuthBackend(user_loader=lambda token: { 'id': 5 }),\n            'exempt_methods': ['GET']\n        }\n\n        # token auth backend\n\n        def on_post(self, req, resp):\n            resp.body = \"This resource uses token authentication\"\n\n        def on_get(self, req, resp):\n            resp.body = \"This resource doesn't need authentication\"\n\n\n    api.add_route(\"/api\", ApiResource())\n\n\nDisable Authentication for a specific resource\n----------------------------------------------\n\n.. code:: python\n\n    class ApiResource:\n        auth = {\n            'auth_disabled': True\n        }\n\n\nAccessing Authenticated User\n----------------------------\nOnce the middleware authenticates\nthe request using the specified authentication backend, it add the authenticated\nuser to the `request context`\n\n.. code:: python\n\n    class ApiResource:\n\n        def on_post(self, req, resp):\n            user = req.context['user']\n            resp.body = \"User Found: {}\".format(user['username'])\n\nAuthentication Backends\n-----------------------\n\n+ **Basic Authentication**\n\nImplements `HTTP Basic Authentication <http://tools.ietf.org/html/rfc2617>`__\nwherein the HTTP ``Authorization`` header contains the user\ncredentials(username and password) encoded using ``base64`` and a prefix (typically Basic)\n\n+ **Token Authentication**\n\nImplements a Simple Token Based Authentication Scheme where HTTP ``Authorization``\nheader contains a prefix (typically Token) followed by an `API Token`\n\n+ **JWT Authentication**\n\nToken based authentication using the `JSON Web Token standard <https://jwt.io/introduction/>`__\n\n+ **Dummy Authentication**\n\nBackend which does not perform any authentication checks\n\n+ **Multi Backend Authentication**\n\nA Backend which comprises of multiple backends and requires any of them to authenticate\nthe request successfully\n\nTests\n-----\n\nThis library comes with a good set of tests which are included in ``tests/``. To run\ninstall ``pytest`` and simply invoke ``py.test`` or ``python setup.py test``\nto exercise the tests. You can check the test coverage by running\n``py.test --cov falcon_auth``\n\nAPI\n----\n.. autoclass:: falcon_auth.FalconAuthMiddleware\n    :members:\n\n.. autoclass:: falcon_auth.BasicAuthBackend\n    :members:\n\n.. autoclass:: falcon_auth.TokenAuthBackend\n    :members:\n\n.. autoclass:: falcon_auth.JWTAuthBackend\n    :members:\n\n.. autoclass:: falcon_auth.NoneAuthBackend\n    :members:\n\n.. autoclass:: falcon_auth.MultiAuthBackend\n    :members:\n\n\n.. |docs| image:: https://readthedocs.org/projects/docs/badge/?version=latest\n    :alt: Documentation Status\n    :scale: 100%\n    :target: https://falcon-auth.readthedocs.io/en/latest/?badge=latest\n\n.. |version| image:: https://img.shields.io/pypi/v/falcon-auth.svg\n    :target: https://pypi.python.org/pypi/falcon-auth\n\n.. |license| image:: http://img.shields.io/:license-mit-blue.svg\n    :target: https://pypi.python.org/pypi/falcon-auth/\n\n.. |build| image:: https://travis-ci.org/loanzen/falcon-auth.svg?branch=master\n    :target: https://travis-ci.org/loanzen/falcon-auth\n\n.. |coverage| image:: https://coveralls.io/repos/github/loanzen/falcon-auth/badge.svg?branch=master\n    :target: https://coveralls.io/github/loanzen/falcon-auth?branch=master\n",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/loanzen/falcon-auth",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "falcon-auth",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/falcon-auth/",
    "release_url": "https://pypi.org/project/falcon-auth/1.0.3/",
    "requires_python": null,
    "summary": "falcon-auth",
    "version": "1.0.3"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ba37d73526cc0834ee188b9cc1c725d0",
          "sha256": "7c254750cb9b7daf9783b9830d5841388cd5ba3dc9087d67b7d763ae62859946"
        },
        "downloads": 18,
        "filename": "falcon-auth-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ba37d73526cc0834ee188b9cc1c725d0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6466,
        "upload_time": "2017-04-02T12:56:40",
        "url": "https://files.pythonhosted.org/packages/f2/ba/e1230ddc4a36796477a25ca2f1652ecb8ac9e3b1557eab8db52e6cca0c03/falcon-auth-1.0.0.tar.gz"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "14a358579abc3794d0e57ed92eba920c",
          "sha256": "2f13fb22bf41776289b76c8661b6192c2e20ca411d44d9dd66040a3c4b75e4fe"
        },
        "downloads": 20,
        "filename": "falcon-auth-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "14a358579abc3794d0e57ed92eba920c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6778,
        "upload_time": "2017-04-02T13:11:56",
        "url": "https://files.pythonhosted.org/packages/b9/f9/ae46d2e83cf76d36f75848674c44f9c92513a1705db8d7c6aa131cee9343/falcon-auth-1.0.1.tar.gz"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4b9da9498cff314dd3592b573b5dd6c8",
          "sha256": "1c25d2997421e8af1aef3d35f600b27d694fc013910278099e7cf180ef470b2a"
        },
        "downloads": 0,
        "filename": "falcon-auth-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4b9da9498cff314dd3592b573b5dd6c8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7202,
        "upload_time": "2017-04-09T10:30:18",
        "url": "https://files.pythonhosted.org/packages/3b/7a/c742fb45bb9f147933b16f838d1df1c8a4fcd997beca7f54f913af88ba51/falcon-auth-1.0.2.tar.gz"
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "fc80d7c92ebe7b0ee2659635445dd0cf",
          "sha256": "7a0a85caaef13bc704b2e6162dd6e469f84e1f1716502c109009197060f077ec"
        },
        "downloads": 0,
        "filename": "falcon_auth-1.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fc80d7c92ebe7b0ee2659635445dd0cf",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 7660,
        "upload_time": "2017-05-21T04:39:23",
        "url": "https://files.pythonhosted.org/packages/eb/fd/73b08608251e4efc68ea5a9821e840ac3fd94cd783a147df1c30f1076858/falcon_auth-1.0.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "48c7c5e4a8d94c9647cb2c5420fa5ec0",
          "sha256": "99e99a43297574b0bc9b896bb340ed581fa54db48fc9d08909cf946acf0656bd"
        },
        "downloads": 0,
        "filename": "falcon-auth-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "48c7c5e4a8d94c9647cb2c5420fa5ec0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7389,
        "upload_time": "2017-05-21T04:39:18",
        "url": "https://files.pythonhosted.org/packages/e5/e0/4cc2baf0396eb0fe5f12da992d17bcc4f88e19e5fd32991f3c1a344a53ee/falcon-auth-1.0.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "fc80d7c92ebe7b0ee2659635445dd0cf",
        "sha256": "7a0a85caaef13bc704b2e6162dd6e469f84e1f1716502c109009197060f077ec"
      },
      "downloads": 0,
      "filename": "falcon_auth-1.0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fc80d7c92ebe7b0ee2659635445dd0cf",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "size": 7660,
      "upload_time": "2017-05-21T04:39:23",
      "url": "https://files.pythonhosted.org/packages/eb/fd/73b08608251e4efc68ea5a9821e840ac3fd94cd783a147df1c30f1076858/falcon_auth-1.0.3-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "48c7c5e4a8d94c9647cb2c5420fa5ec0",
        "sha256": "99e99a43297574b0bc9b896bb340ed581fa54db48fc9d08909cf946acf0656bd"
      },
      "downloads": 0,
      "filename": "falcon-auth-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "48c7c5e4a8d94c9647cb2c5420fa5ec0",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7389,
      "upload_time": "2017-05-21T04:39:18",
      "url": "https://files.pythonhosted.org/packages/e5/e0/4cc2baf0396eb0fe5f12da992d17bcc4f88e19e5fd32991f3c1a344a53ee/falcon-auth-1.0.3.tar.gz"
    }
  ]
}