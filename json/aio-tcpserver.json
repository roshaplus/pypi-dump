{
  "info": {
    "author": "hsz",
    "author_email": "hsz1273327@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Documentation :: Sphinx"
    ],
    "description": "\r\naio-tcpserver\r\n===============================\r\n\r\n* version: 0.0.2\r\n\r\n* status: dev\r\n\r\n* author: hsz\r\n\r\n* email: hsz1273327@gmail.com\r\n\r\nDesc\r\n--------------------------------\r\n\r\nA tcp sever for running `asyncio.Protocol`. The inspiration comes from sanic,\r\n\r\nonly support python 3.6+\r\n\r\n\r\nkeywords:tcp-server,asyncio\r\n\r\n\r\nFeature\r\n----------------------\r\n* with multiple worker\r\n* for asyncio.Protocol\r\n* can be closed by ctrl+C in windows\r\n* with hooks\r\n\r\nExample\r\n-------------------------------\r\n\r\nserver.py\r\n\r\n.. code:: python\r\n\r\n    import asyncio\r\n    import time\r\n    from aio_tcpserver import tcp_server, listener\r\n\r\n    @listener(\"before_server_start\")\r\n    async def beat(loop):\r\n        print(time.time())\r\n        print(\"ping\")\r\n\r\n    class EchoServerClientProtocol(asyncio.Protocol):\r\n        def connection_made(self, transport):\r\n            peername = transport.get_extra_info('peername')\r\n            print('Connection from {}'.format(peername))\r\n            self.transport = transport\r\n\r\n        def data_received(self, data):\r\n            message = data.decode()\r\n            print('Data received: {!r}'.format(message))\r\n\r\n            print('Send: {!r}'.format(message))\r\n            self.transport.write(data)\r\n\r\n            print('Close the client socket')\r\n            self.transport.close()\r\n\r\n    def main():\r\n        tcp_server(EchoServerClientProtocol, worker=3)\r\n\r\n\r\n    if __name__ == '__main__':\r\n        main()\r\n\r\n\r\nclient.py\r\n\r\n\r\n.. code:: python\r\n\r\n    import asyncio\r\n\r\n    class EchoClientProtocol(asyncio.Protocol):\r\n        def __init__(self, message, loop):\r\n            self.message = message\r\n            self.loop = loop\r\n\r\n        def connection_made(self, transport):\r\n            transport.write(self.message.encode())\r\n            print('Data sent: {!r}'.format(self.message))\r\n\r\n        def data_received(self, data):\r\n            print('Data received: {!r}'.format(data.decode()))\r\n\r\n        def connection_lost(self, exc):\r\n            print('The server closed the connection')\r\n            print('Stop the event loop')\r\n            self.loop.stop()\r\n\r\n    loop = asyncio.get_event_loop()\r\n    message = 'Hello World!'\r\n    coro = loop.create_connection(lambda: EchoClientProtocol(message, loop),\r\n                                '127.0.0.1', 5000)\r\n    loop.run_until_complete(coro)\r\n    loop.run_forever()\r\n    loop.close()\r\n\r\n\r\n\r\n\r\n\r\nInstall\r\n--------------------------------\r\n\r\n- ``python -m pip install aio-tcpserver``\r\n\r\n\r\nDocumentation\r\n--------------------------------\r\n\r\n`Documentation on Readthedocs <https://github.com/Basic-Components/aio-tcpserver>`_.\r\n\r\n\r\n\r\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/Basic-Components/aio-tcpserver",
    "keywords": "tcp-server",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aio-tcpserver",
    "platform": "",
    "project_url": "https://pypi.org/project/aio-tcpserver/",
    "release_url": "https://pypi.org/project/aio-tcpserver/0.0.2/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "simple tools",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9ef299ee61c988766b086fbd95d22b6c",
          "sha256": "768c9727ceaebd7ad825fcd09c0c5f7d0da986cb3036d561472b4c034fa1b396"
        },
        "downloads": -1,
        "filename": "aio_tcpserver-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ef299ee61c988766b086fbd95d22b6c",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "size": 13377,
        "upload_time": "2018-01-27T15:43:31",
        "url": "https://files.pythonhosted.org/packages/ed/17/b08a16202ef1c1df1dff94c7547544e8c3e8997919f47a1468dd87fd504e/aio_tcpserver-0.0.2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "04486daf8e1c93747a5700402b34c598",
          "sha256": "a7210ca5e4b8087ff381c449a6b4f45cbf153c53683d6560fff146f1bd18c89d"
        },
        "downloads": -1,
        "filename": "aio-tcpserver-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "04486daf8e1c93747a5700402b34c598",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9819,
        "upload_time": "2018-01-27T15:43:19",
        "url": "https://files.pythonhosted.org/packages/e9/e8/d5aa2f5e5b0008daff0f64bbfd20e0e0320570299959973d823b4ff08ca9/aio-tcpserver-0.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "9ef299ee61c988766b086fbd95d22b6c",
        "sha256": "768c9727ceaebd7ad825fcd09c0c5f7d0da986cb3036d561472b4c034fa1b396"
      },
      "downloads": -1,
      "filename": "aio_tcpserver-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9ef299ee61c988766b086fbd95d22b6c",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "size": 13377,
      "upload_time": "2018-01-27T15:43:31",
      "url": "https://files.pythonhosted.org/packages/ed/17/b08a16202ef1c1df1dff94c7547544e8c3e8997919f47a1468dd87fd504e/aio_tcpserver-0.0.2-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "04486daf8e1c93747a5700402b34c598",
        "sha256": "a7210ca5e4b8087ff381c449a6b4f45cbf153c53683d6560fff146f1bd18c89d"
      },
      "downloads": -1,
      "filename": "aio-tcpserver-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "04486daf8e1c93747a5700402b34c598",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9819,
      "upload_time": "2018-01-27T15:43:19",
      "url": "https://files.pythonhosted.org/packages/e9/e8/d5aa2f5e5b0008daff0f64bbfd20e0e0320570299959973d823b4ff08ca9/aio-tcpserver-0.0.2.tar.gz"
    }
  ]
}