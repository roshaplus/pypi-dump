{
  "info": {
    "author": "Christophe Benz",
    "author_email": "christophe.benz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Naan \u2013 Python without None nor try/except\n\nNone values are bad! Exceptions are bad! I think there is a better way to handle errors: encapsulate them in data.\n\nInspired from the Elm language, this library borrows the names of its data types and functions.\n\nIn short, this library allows:\n\n- programming without `None` values,\n- programming without `try`/`except` statements,\n- expressing data transformation pipes like in the Unix shell,\n- validating data without schemas.\n\n## Getting started\n\nTo be written...\n\n### Install\n\n```sh\nmkvirtualenv naan --python=python3\nworkon naan\ngit clone https://framagit.org/cbenz/naan.git\ncd naan\npip install --editable .\npip install pytest\npytest --doctest-modules\n```\n\n### Design rules\n\n- The data structure always comes as the last parameter of functions. This allows currying.\n\n## FAQ\n\n### Can I use it?\n\nHmm, this is pre-alpha software, and I'm still not sure it's a good concept.\n\n### Why don't you like `None`?\n\nBecause I can easily forget to test if a value `is None` (or `is not None`) everytime I get one from somewhere, leading to stupid bugs I could have avoided.\n\n### Why don't you like exceptions?\n\nBecause I spend each time a couple of minutes figuring out which exceptions a function can raise. So I don't catch them all, sometimes I don't catch any of them. Python does not require me to catch all the potential exceptions right around the function call, and that's a feature: catch exceptions several frames upper in the stack... or never. Whoa, again a new kind of bugs I could avoid!\n\nExceptions multiply the exit points of any function using them.\n\nAlso please read https://www.joelonsoftware.com/2003/10/13/13/\n\n## Inspiration\n\n- Elm: https://guide.elm-lang.org/error_handling/maybe.html, https://guide.elm-lang.org/error_handling/result.html\n- In JavaScript: http://ramdajs.com/\n- In Python: http://toolz.readthedocs.io/en/latest/, https://github.com/dbrattli/OSlash, https://bitbucket.org/jason_delaat/pymonad/\n\nIf you're looking for a \"monadic\" Python library, this one matches. But I dislike presenting a library by using the following words: {monad, monadic, functor, applicative}. They describe a way to model data, like object-oriented programming does, but it's possible to learn by small examples without saying the words. So this library does not aim to model the complete Haskell typeclasses in Python for instance. It can still be useful, I hope.\n\n## Test\n\nRun tests:\n\n```sh\npip install pytest\npytest --doctest-modules\n```\n\nCheck types:\n\n```sh\npip install mypy\nmypy --ignore-missing-imports .\n```\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "",
    "keywords": "toolbox exceptions none maybe result functional programming elm",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Naan",
    "platform": "",
    "project_url": "https://pypi.org/project/Naan/",
    "release_url": "https://pypi.org/project/Naan/0.1.1/",
    "requires_dist": [
      "toolz (>=0.8.2)"
    ],
    "requires_python": ">=3",
    "summary": "Naan \u2013 Python without None nor try/except",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9a9a0bee87e68b437132dcb9c0d76416",
          "sha256": "c40ffd1f9e77a02b036e9f2c22c63693d690cecc160fe7a4eac9ee7a70a0254b"
        },
        "downloads": -1,
        "filename": "Naan-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a9a0bee87e68b437132dcb9c0d76416",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 14758,
        "upload_time": "2018-01-02T17:45:10",
        "url": "https://files.pythonhosted.org/packages/54/16/1dfe1fbfd418472233542ab716b51085324e0cb5df7bfb40ed636341a25a/Naan-0.1.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "d1172fabcca32208b85c983395553801",
          "sha256": "9fe88a176d28a7bea87e7d12eb8bc0361921da3847fe9294e58dcd3c0279696b"
        },
        "downloads": -1,
        "filename": "Naan-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d1172fabcca32208b85c983395553801",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9349,
        "upload_time": "2018-01-02T17:45:11",
        "url": "https://files.pythonhosted.org/packages/97/02/264d2b3b4dcbb3b37f6508a2c762e499c20397a2a89a81b04edb6d1abe8f/Naan-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "129044328eef8e354ca0545c51d466f1",
          "sha256": "90f9fe92d81d188915e831ac3c381730e16e87a46a9a520bb9e079b4c782fc7b"
        },
        "downloads": -1,
        "filename": "Naan-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "129044328eef8e354ca0545c51d466f1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 14627,
        "upload_time": "2018-01-03T10:41:56",
        "url": "https://files.pythonhosted.org/packages/37/fb/e94261a5d93bffaf2064a383f5af8f634a48da56eb7288f8cc1b5565a5fe/Naan-0.1.1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "feee26a85ad00435eb651481ee912565",
          "sha256": "f2591cd3ac59348d3849966b755a487b9da36aa44b69c566459e6fe3e7355f5a"
        },
        "downloads": -1,
        "filename": "Naan-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "feee26a85ad00435eb651481ee912565",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9236,
        "upload_time": "2018-01-03T10:41:58",
        "url": "https://files.pythonhosted.org/packages/3c/1c/0220176020e0234da0288203ad7e7a20b435c15219a27789be10e671ffc5/Naan-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "129044328eef8e354ca0545c51d466f1",
        "sha256": "90f9fe92d81d188915e831ac3c381730e16e87a46a9a520bb9e079b4c782fc7b"
      },
      "downloads": -1,
      "filename": "Naan-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "129044328eef8e354ca0545c51d466f1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 14627,
      "upload_time": "2018-01-03T10:41:56",
      "url": "https://files.pythonhosted.org/packages/37/fb/e94261a5d93bffaf2064a383f5af8f634a48da56eb7288f8cc1b5565a5fe/Naan-0.1.1-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "feee26a85ad00435eb651481ee912565",
        "sha256": "f2591cd3ac59348d3849966b755a487b9da36aa44b69c566459e6fe3e7355f5a"
      },
      "downloads": -1,
      "filename": "Naan-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "feee26a85ad00435eb651481ee912565",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9236,
      "upload_time": "2018-01-03T10:41:58",
      "url": "https://files.pythonhosted.org/packages/3c/1c/0220176020e0234da0288203ad7e7a20b435c15219a27789be10e671ffc5/Naan-0.1.1.tar.gz"
    }
  ]
}