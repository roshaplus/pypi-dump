{
  "info": {
    "author": "C.W.",
    "author_email": "wangc_2011 (at) hotmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Office/Business",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "================================================================================\npyexcel-xlsxw - Let you focus on data, instead of xlsx format\n================================================================================\n\n.. image:: https://api.travis-ci.org/pyexcel/pyexcel-xlsxw.png\n    :target: http://travis-ci.org/pyexcel/pyexcel-xlsxw\n\n.. image:: https://codecov.io/github/pyexcel/pyexcel-xlsxw/coverage.png\n    :target: https://codecov.io/github/pyexcel/pyexcel-xlsxw\n\n**pyexcel-xlsxw** is a tiny wrapper library to write data in xlsx and xlsm fromat using xlsxwriter. You are likely to use it with `pyexcel <https://github.com/pyexcel/pyexcel>`__.\n\nKnown constraints\n==================\n\nFonts, colors and charts are not supported.\n\nInstallation\n================================================================================\n\nYou can install it via pip:\n\n.. code-block:: bash\n\n    $ pip install pyexcel-xlsxw\n\n\nor clone it and install it:\n\n.. code-block:: bash\n\n    $ git clone http://github.com/pyexcel/pyexcel-xlsxw.git\n    $ cd pyexcel-xlsxw\n    $ python setup.py install\n\nUsage\n================================================================================\n\nAs a standalone library\n--------------------------------------------------------------------------------\n\nWrite to an xlsx file\n********************************************************************************\n\n\n\nHere's the sample code to write a dictionary to an xlsx file:\n\n.. code-block:: python\n\n    >>> from pyexcel_xlsxw import save_data\n    >>> data = OrderedDict() # from collections import OrderedDict\n    >>> data.update({\"Sheet 1\": [[1, 2, 3], [4, 5, 6]]})\n    >>> data.update({\"Sheet 2\": [[\"row 1\", \"row 2\", \"row 3\"]]})\n    >>> save_data(\"your_file.xlsx\", data)\n\n\n\nHere's the sample code to help you read the data back. You will need to install pyexcel-xls or pyexcel-xlsx.\n\n.. code-block:: python\n\n    >>> from pyexcel_io import get_data\n    >>> data = get_data(\"your_file.xlsx\")\n    >>> import json\n    >>> print(json.dumps(data))\n    {\"Sheet 1\": [[1, 2, 3], [4, 5, 6]], \"Sheet 2\": [[\"row 1\", \"row 2\", \"row 3\"]]}\n\n\nWrite an xlsx to memory\n********************************************************************************\n\nHere's the sample code to write a dictionary to an xlsx file:\n\n.. code-block:: python\n\n    >>> from pyexcel_xlsxw import save_data\n    >>> data = OrderedDict()\n    >>> data.update({\"Sheet 1\": [[1, 2, 3], [4, 5, 6]]})\n    >>> data.update({\"Sheet 2\": [[7, 8, 9], [10, 11, 12]]})\n    >>> io = StringIO()\n    >>> save_data(io, data)\n    >>> # do something with the io\n    >>> # In reality, you might give it to your http response\n    >>> # object for downloading\n\n\n\n\n\nHere's the sample code to help you read the data back. You will need to install pyexcel-xls or pyexcel-xlsx.\n\n.. code-block:: python\n\n    >>> # This is just an illustration\n    >>> # In reality, you might deal with xlsx file upload\n    >>> # where you will read from requests.FILES['YOUR_XLSX_FILE']\n    >>> data = get_data(io, 'xlsx')\n    >>> print(json.dumps(data))\n    {\"Sheet 1\": [[1, 2, 3], [4, 5, 6]], \"Sheet 2\": [[7, 8, 9], [10, 11, 12]]}\n\n\n\nAs a pyexcel plugin\n--------------------------------------------------------------------------------\n\nNo longer, explicit import is needed since pyexcel version 0.2.2. Instead,\nthis library is auto-loaded. So if you want to read data in xlsx format,\ninstalling it is enough.\n\n\nLet's assume we have data as the following.\n\n.. code-block:: python\n\n    >>> import pyexcel as pe\n    >>> sheet = pe.get_book(file_name=\"your_file.xlsx\")\n    >>> sheet\n    Sheet 1:\n    +---+---+---+\n    | 1 | 2 | 3 |\n    +---+---+---+\n    | 4 | 5 | 6 |\n    +---+---+---+\n    Sheet 2:\n    +-------+-------+-------+\n    | row 1 | row 2 | row 3 |\n    +-------+-------+-------+\n\n\nWriting to an xlsx file\n********************************************************************************\n\nHere is the sample code:\n\n.. code-block:: python\n\n    >>> sheet.save_as(\"another_file.xlsx\")\n\n\nWriting to a StringIO instance\n********************************************************************************\n\nYou need to pass a StringIO instance to Writer:\n\n.. code-block:: python\n\n    >>> data = [\n    ...     [1, 2, 3],\n    ...     [4, 5, 6]\n    ... ]\n    >>> io = StringIO()\n    >>> sheet = pe.Sheet(data)\n    >>> io = sheet.save_to_memory(\"xlsx\", io)\n    >>> # then do something with io\n    >>> # In reality, you might give it to your http response\n    >>> # object for downloading\n\n\nLicense\n================================================================================\n\nNew BSD License\n\nDeveloper guide\n==================\n\nDevelopment steps for code changes\n\n#. git clone https://github.com/pyexcel/pyexcel-xlsxw.git\n#. cd pyexcel-xlsxw\n\nUpgrade your setup tools and pip. They are needed for development and testing only:\n\n#. pip install --upgrade setuptools \"pip==7.1\"\n\nThen install relevant development requirements:\n\n#. pip install -r rnd_requirements.txt # if such a file exists\n#. pip install -r requirements.txt\n#. pip install -r tests/requirements.txt\n\n\nIn order to update test environment, and documentation, additional steps are\nrequired:\n\n#. pip install moban\n#. git clone https://github.com/pyexcel/pyexcel-commons.git commons\n#. make your changes in `.moban.d` directory, then issue command `moban`\n\nWhat is rnd_requirements.txt\n-------------------------------\n\nUsually, it is created when a dependent library is not released. Once the dependecy is installed(will be released), the future version of the dependency in the requirements.txt will be valid.\n\nWhat is pyexcel-commons\n---------------------------------\n\nMany information that are shared across pyexcel projects, such as: this developer guide, license info, etc. are stored in `pyexcel-commons` project.\n\nWhat is .moban.d\n---------------------------------\n\n`.moban.d` stores the specific meta data for the library.\n\nHow to test your contribution\n------------------------------\n\nAlthough `nose` and `doctest` are both used in code testing, it is adviable that unit tests are put in tests. `doctest` is incorporated only to make sure the code examples in documentation remain valid across different development releases.\n\nOn Linux/Unix systems, please launch your tests like this::\n\n    $ make\n\nOn Windows systems, please issue this command::\n\n    > test.bat\n\n\n\nChange log\n================================================================================\n\n0.3.2 - 03.03.2017\n--------------------------------------------------------------------------------\n\n#. Remove the false claim that this library writes xlsm\n\n0.3.1 - 24.02.2017\n--------------------------------------------------------------------------------\n\n#. `#1 <https://github.com/pyexcel/pyexcel-xlsxw/issues/1>`_,\n   Feature request: support Workbook options in XLSXWriter.open()\n\n0.3.0 - 22.12.2016\n--------------------------------------------------------------------------------\n\n#. Support pyexcel-io v0.3.0\n\n0.0.1 - 26.08.2016\n--------------------------------------------------------------------------------\n\n#. initial release to see if xlsxwriter would write xlsx significantly faster\n   than openpyxl",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "UNKNOWN",
    "keywords": "excel,python,pyexcel,xlsx",
    "license": "New BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pyexcel-xlsxw",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pyexcel-xlsxw/",
    "release_url": "https://pypi.org/project/pyexcel-xlsxw/0.3.2/",
    "requires_python": null,
    "summary": "A wrapper library to write data in xlsx and xlsm format",
    "version": "0.3.2"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a7a80294d2fdac37f29f91fbe9ff84fd",
          "sha256": "bda0f7850a62b6b3802b2e58960f1d3946db4f164c6fdbf1996a014b4325b7b2"
        },
        "downloads": 595,
        "filename": "pyexcel-xlsxw-0.0.1.zip",
        "has_sig": false,
        "md5_digest": "a7a80294d2fdac37f29f91fbe9ff84fd",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12195,
        "upload_time": "2016-08-26T22:29:08",
        "url": "https://files.pythonhosted.org/packages/0d/69/740882c8fa31efadee68e16fb0e530118ec2baf492b06fae48af74541911/pyexcel-xlsxw-0.0.1.zip"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2e6865a6b3080ed0f5a48a8c75c7d244",
          "sha256": "ebe09b13c8cdf141daa2e86496d8f6eb568fec49a7e5556233399e48cb70e6c7"
        },
        "downloads": 223,
        "filename": "pyexcel-xlsxw-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2e6865a6b3080ed0f5a48a8c75c7d244",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5735,
        "upload_time": "2016-12-22T10:35:45",
        "url": "https://files.pythonhosted.org/packages/0d/5e/03f1c3bc935f6fca11adb515db31d80915654438a74aa462fe586cbdaf66/pyexcel-xlsxw-0.3.0.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "73c38feab35d4490c558a4dc907d8bba",
          "sha256": "5b059063266f5212e76e498a2cbeedce54d904d6889bb9d24eda813292a9e8c3"
        },
        "downloads": 14,
        "filename": "pyexcel-xlsxw-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "73c38feab35d4490c558a4dc907d8bba",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5896,
        "upload_time": "2017-02-24T09:51:54",
        "url": "https://files.pythonhosted.org/packages/8f/31/81ef16ca3143a12f2fe0ff92c01ee9f95ff91fbf46afd73fdbfbfa9683fe/pyexcel-xlsxw-0.3.1.tar.gz"
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "cbb71f705eec60cef96066aa54dd5dbb",
          "sha256": "4d7314bd4a32b6a97269a94f726f70692c0de376b2cc66c429d1c5f491b30b03"
        },
        "downloads": 35,
        "filename": "pyexcel-xlsxw-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cbb71f705eec60cef96066aa54dd5dbb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5900,
        "upload_time": "2017-03-03T08:31:01",
        "url": "https://files.pythonhosted.org/packages/5b/dd/f5498898719e5e1f8c7bba557c39af8d10312c664ca027f86e919942321e/pyexcel-xlsxw-0.3.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "cbb71f705eec60cef96066aa54dd5dbb",
        "sha256": "4d7314bd4a32b6a97269a94f726f70692c0de376b2cc66c429d1c5f491b30b03"
      },
      "downloads": 35,
      "filename": "pyexcel-xlsxw-0.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "cbb71f705eec60cef96066aa54dd5dbb",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5900,
      "upload_time": "2017-03-03T08:31:01",
      "url": "https://files.pythonhosted.org/packages/5b/dd/f5498898719e5e1f8c7bba557c39af8d10312c664ca027f86e919942321e/pyexcel-xlsxw-0.3.2.tar.gz"
    }
  ]
}