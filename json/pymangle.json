{
  "info": {
    "author": "UNKNOWN",
    "author_email": "UNKNOWN",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "pymangle\n========\n\nSimple python code to read and work with Mangle masks.\n\nThe underlying code is in C for speed, and is based on some C++ code\nwritten by Martin White. Martin has posted his C++ code at\nhttps://github.com/martinjameswhite/litemangle\n\nCurrently supports ascii mangle polygon files, with and without\npixelization. The code works in python2 and python3\n\nAuthors: Erin Sheldon. Long double support added by Eli Rykoff.\n\nexamples\n--------\n\n.. code:: python\n\n    import pymangle\n\n    # read a mangle polygon file\n    m=pymangle.Mangle(\"mask.ply\")\n\n    # test an ra,dec point against the mask\n    good = m.contains(200.0, 0.0)\n\n    # test arrays of ra,dec points against the mask\n    ra=numpy.array([200.0, 152.7])\n    dec=numpy.array([0.0, -15.0])\n    good = m.contains(ra, dec)\n\n    # get the polygon ids\n    ids = m.polyid(ra,dec)\n\n    # get the weights\n    weights = m.weight(ra,dec)\n\n    # get poth polyids and weights\n    ids, weights = m.polyid_and_weight(ra, dec)\n\n    # generate random points    \n    ra_rand, dec_rand = m.genrand(1000)\n\n    # generate randoms from the mask and with the additional constraint that they\n    # are within the specified rectangle.  This speeds things up if your mask is\n    # relatively small compared to the full sphere; choose the box just big enough\n    # to contain the mask.\n\n    ra_min=200.0\n    ra_max=210.0\n    dec_min=0.0\n    dec_max=10.0\n    ra_rand, dec_rand = m.genrand_range(1000,ra_min,ra_max,dec_min,dec_max)\n\n    # get the polygon weights\n    weights = m.weights\n\n    # read in a new set of weights\n    m.read_weightfile(weightfile)\n\n    # set the weights\n\n    m.weights = weight_array\n\nbuild and install python library\n--------------------------------\n\n::\n\n    python setup.py install --prefix=/some/path",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "UNKNOWN",
    "keywords": null,
    "license": "GPL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pymangle",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pymangle/",
    "release_url": "https://pypi.org/project/pymangle/0.9.0/",
    "requires_python": null,
    "summary": "Simple python code to read and work with Mangle masks.",
    "version": "0.9.0"
  },
  "releases": {
    "0.9.0": [
      {
        "comment_text": "works on python 2 and python 3",
        "digests": {
          "md5": "6b6f9a12b70f6bcac29cf49cbf14b997",
          "sha256": "6f64afc68ac0d5b5c9a7ce682cae11d8e231d05424c09fb5643ea1207daaef6d"
        },
        "downloads": 369,
        "filename": "pymangle-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6b6f9a12b70f6bcac29cf49cbf14b997",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26545,
        "upload_time": "2016-08-19T14:20:44",
        "url": "https://files.pythonhosted.org/packages/b4/7d/89184c34570e2ca29f593922b087c0e40dbda63c73ced4757c4b36cc7d3e/pymangle-0.9.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "works on python 2 and python 3",
      "digests": {
        "md5": "6b6f9a12b70f6bcac29cf49cbf14b997",
        "sha256": "6f64afc68ac0d5b5c9a7ce682cae11d8e231d05424c09fb5643ea1207daaef6d"
      },
      "downloads": 369,
      "filename": "pymangle-0.9.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6b6f9a12b70f6bcac29cf49cbf14b997",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 26545,
      "upload_time": "2016-08-19T14:20:44",
      "url": "https://files.pythonhosted.org/packages/b4/7d/89184c34570e2ca29f593922b087c0e40dbda63c73ced4757c4b36cc7d3e/pymangle-0.9.0.tar.gz"
    }
  ]
}