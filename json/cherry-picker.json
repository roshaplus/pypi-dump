{
  "info": {
    "author": "Mariatta Wijaya",
    "author_email": "mariatta.wijaya@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "Usage (from a cloned CPython directory) ::\n\n   cherry_picker [--pr-remote REMOTE] [--dry-run] [--status] [--abort/--continue] [--push/--no-push] <commit_sha1> <branches>\n\n|pyversion status|\n|pypi status|\n|travis status|\n|license status|\n\n.. contents::\n\nAbout\n=====\n\nUse this to backport CPython changes from ``master`` into one or more of the\nmaintenance branches (``3.6``, ``3.5``, ``2.7``).\n\nIt will prefix the commit message with the branch, e.g. ``[3.6]``, and then\nopens up the pull request page.\n\nTests are to be written using pytest.\n\n\nSetup Info\n==========\n\nRequires Python 3.6.\n\n::\n\n    $ python3 -m venv venv\n    $ source venv/bin/activate\n    (venv) $ python -m pip install cherry_picker\n\nThe cherry picking script assumes that if an ``upstream`` remote is defined, then\nit should be used as the source of upstream changes and as the base for\ncherry-pick branches. Otherwise, ``origin`` is used for that purpose.\n\nVerify that an ``upstream`` remote is set to the CPython repository::\n\n    $ git remote -v\n    ...\n    upstream\thttps://github.com/python/cpython (fetch)\n    upstream\thttps://github.com/python/cpython (push)\n\nIf needed, create the ``upstream`` remote::\n\n    $ git remote add upstream https://github.com/python/cpython.git\n\n\nBy default, the PR branches used to submit pull requests back to the main\nrepository are pushed to ``origin``. If this is incorrect, then the correct\nremote will need be specified using the ``--pr-remote`` option (e.g.\n``--pr-remote pr`` to use a remote named ``pr``).\n\n\nCherry-picking \ud83d\udc0d\ud83c\udf52\u26cf\ufe0f\n=====================\n\n(Setup first! See prev section)\n\nFrom the cloned CPython directory:\n\n::\n\n    (venv) $ cherry_picker [--pr-remote REMOTE] [--dry-run] [--abort/--continue] [--status] [--push/--no-push] <commit_sha1> <branches>\n\n\nCommit sha1\n-----------\n\nThe commit sha1 for cherry-picking is the squashed commit that was merged to\nthe ``master`` branch.  On the merged pull request, scroll to the bottom of the\npage.  Find the event that says something like::\n\n   <coredeveloper> merged commit <commit_sha1> into python:master <sometime> ago.\n\nBy following the link to ``<commit_sha1>``, you will get the full commit hash.\nUse the full commit hash for ``cherry_picker.py``.\n\n\nOptions\n-------\n\n::\n\n    -- dry-run           Dry Run Mode.  Prints out the commands, but not executed.\n    -- pr-remote REMOTE  Specify the git remote to push into.  Default is 'origin'.\n    -- status            Do `git status` in cpython directory.\n\n\nAdditional options::\n\n    -- abort        Abort current cherry-pick and clean up branch\n    -- continue     Continue cherry-pick, push, and clean up branch\n    -- no-push      Changes won't be pushed to remote\n\nDemo\n----\n\n- Installation: https://asciinema.org/a/125254\n\n- Backport: https://asciinema.org/a/125256\n\n\nExample\n-------\n\nFor example, to cherry-pick ``6de2b7817f-some-commit-sha1-d064`` into\n``3.5`` and ``3.6``, run the following command from the cloned CPython\ndirectory:\n\n::\n\n    (venv) $ cherry_picker 6de2b7817f-some-commit-sha1-d064 3.5 3.6\n\n\nWhat this will do:\n\n::\n\n    (venv) $ git fetch upstream\n\n    (venv) $ git checkout -b backport-6de2b78-3.5 upstream/3.5\n    (venv) $ git cherry-pick -x 6de2b7817f-some-commit-sha1-d064\n    (venv) $ git push origin backport-6de2b78-3.5\n    (venv) $ git checkout master\n    (venv) $ git branch -D backport-6de2b78-3.5\n\n    (venv) $ git checkout -b backport-6de2b78-3.6 upstream/3.6\n    (venv) $ git cherry-pick -x 6de2b7817f-some-commit-sha1-d064\n    (venv) $ git push origin backport-6de2b78-3.6\n    (venv) $ git checkout master\n    (venv) $ git branch -D backport-6de2b78-3.6\n\nIn case of merge conflicts or errors, the following message will be displayed::\n\n    Failed to cherry-pick 554626ada769abf82a5dabe6966afa4265acb6a6 into 2.7 :frowning_face:\n    ... Stopping here.\n\n    To continue and resolve the conflict:\n        $ cherry_picker --status  # to find out which files need attention\n        # Fix the conflict\n        $ cherry_picker --status  # should now say 'all conflict fixed'\n        $ cherry_picker --continue\n\n    To abort the cherry-pick and cleanup:\n        $ cherry_picker --abort\n\n\nPassing the ``--dry-run`` option will cause the script to print out all the\nsteps it would execute without actually executing any of them. For example::\n\n    $ cherry_picker --dry-run --pr-remote pr 1e32a1be4a1705e34011770026cb64ada2d340b5 3.6 3.5\n    Dry run requested, listing expected command sequence\n    fetching upstream ...\n    dry_run: git fetch origin\n    Now backporting '1e32a1be4a1705e34011770026cb64ada2d340b5' into '3.6'\n    dry_run: git checkout -b backport-1e32a1b-3.6 origin/3.6\n    dry_run: git cherry-pick -x 1e32a1be4a1705e34011770026cb64ada2d340b5\n    dry_run: git push pr backport-1e32a1b-3.6\n    dry_run: Create new PR: https://github.com/python/cpython/compare/3.6...ncoghlan:backport-1e32a1b-3.6?expand=1\n    dry_run: git checkout master\n    dry_run: git branch -D backport-1e32a1b-3.6\n    Now backporting '1e32a1be4a1705e34011770026cb64ada2d340b5' into '3.5'\n    dry_run: git checkout -b backport-1e32a1b-3.5 origin/3.5\n    dry_run: git cherry-pick -x 1e32a1be4a1705e34011770026cb64ada2d340b5\n    dry_run: git push pr backport-1e32a1b-3.5\n    dry_run: Create new PR: https://github.com/python/cpython/compare/3.5...ncoghlan:backport-1e32a1b-3.5?expand=1\n    dry_run: git checkout master\n    dry_run: git branch -D backport-1e32a1b-3.5\n\n`--pr-remote` option\n--------------------\n\nThis will generate pull requests through a remote other than ``origin``\n(e.g. ``pr``)\n\n\n`--status` option\n-----------------\n\nThis will do ``git status`` for the CPython directory.\n\n`--abort` option\n----------------\n\nCancels the current cherry-pick and cleans up the cherry-pick branch.\n\n`--continue` option\n-------------------\n\nContinues the current cherry-pick, commits, pushes the current branch to\n``origin``, opens the PR page, and cleans up the branch.\n\n`--no-push` option\n------------------\n\nChanges won't be pushed to remote.  This allows you to test and make additional\nchanges.  Once you're satisfied with local changes, use ``--continue`` to complete\nthe backport, or ``--abort`` to cancel and clean up the branch.  You can also\ncherry-pick additional commits, by::\n\n   $ git cherry-pick -x <commit_sha1>\n\n\nCreating Pull Requests\n======================\n\nWhen a cherry-pick was applied successfully, this script will open up a browser\ntab that points to the pull request creation page.\n\nThe url of the pull request page looks similar to the following::\n\n   https://github.com/python/cpython/compare/3.5...<username>:backport-6de2b78-3.5?expand=1\n\n\nPress the ``Create Pull Request`` button.\n\nBedevere will then remove the ``needs backport to ...`` label from the original\npull request against ``master``.\n\n\nRunning Tests\n=============\n\nInstall pytest: ``pip install -U pytest``\n\n::\n\n    $ pytest test.py\n\n.. |pyversion status| image:: https://img.shields.io/pypi/pyversions/cherry-picker.svg\n   :target: https://pypi.org/project/cherry-picker/\n\n.. |pypi status| image:: https://img.shields.io/pypi/v/cherry-picker.svg\n   :target: https://pypi.org/project/cherry-picker/\n\n.. |travis status| image:: https://travis-ci.org/python/core-workflow.svg?branch=master\n   :target: https://travis-ci.org/python/core-workflow\n\n.. |license status| image:: https://img.shields.io/pypi/l/cherry-picker.svg\n   :target: https://github.com/python/core-workflow/blob/master/LICENSE\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/python/core-workflow/tree/master/cherry_picker",
    "keywords": "",
    "license": "",
    "maintainer": "Python Core Developers",
    "maintainer_email": "core-workflow@python.org",
    "name": "cherry-picker",
    "platform": "",
    "project_url": "https://pypi.org/project/cherry-picker/",
    "release_url": "https://pypi.org/project/cherry-picker/0.1.0/",
    "requires_dist": [
      "click~=6.7"
    ],
    "requires_python": ">=3.6",
    "summary": "Backport CPython changes from master to maintenance branches.",
    "version": "0.1.0"
  },
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "952aa601d10018a6e2efa101b9ededb9",
          "sha256": "c8a80d300f7acc5f9723b7de2492594953305afde91f4cded93ffd78527398e1"
        },
        "downloads": 0,
        "filename": "cherry_picker-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "952aa601d10018a6e2efa101b9ededb9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7326,
        "upload_time": "2017-06-17T18:23:24",
        "url": "https://files.pythonhosted.org/packages/a9/b8/f9b7793d832fbd0caa1ca5d014fe4b9cf5f1fff26d2bcfaae1357816a9af/cherry_picker-0.0.2.tar.gz"
      }
    ],
    "0.0.2.post1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d5cf810155149854613be221b1889e90",
          "sha256": "b80c944466fee98d75567f88623f3c0f9d3b9e4772c6db3d89a9614a5d76317d"
        },
        "downloads": 0,
        "filename": "cherry_picker-0.0.2.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d5cf810155149854613be221b1889e90",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 12092,
        "upload_time": "2017-06-17T22:20:24",
        "url": "https://files.pythonhosted.org/packages/ef/3e/2a2681834605cdac65153ff0b6f25c449e70ade7175d94a4325290b46b8f/cherry_picker-0.0.2.post1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "45801eac5390d87d6e19572bd4efe0df",
          "sha256": "8c9eb6b5a2796bd1641e3210da48642a9f5b68a4d21ab8758188494e8e264fb5"
        },
        "downloads": 0,
        "filename": "cherry_picker-0.0.2.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "45801eac5390d87d6e19572bd4efe0df",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8087,
        "upload_time": "2017-06-17T22:20:26",
        "url": "https://files.pythonhosted.org/packages/0f/91/cf2b1ccfb88c3854554622845ee5117632751782cbf00f7e256f88a15762/cherry_picker-0.0.2.post1.tar.gz"
      }
    ],
    "0.0.2.post2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a24f4f7ae5a0774a9e54aa13de071903",
          "sha256": "04b16cfa069a2645d5ddc7d2f44b2a260c8e8d85c5f2b153ae5b7af7484eb220"
        },
        "downloads": 0,
        "filename": "cherry_picker-0.0.2.post2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a24f4f7ae5a0774a9e54aa13de071903",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 12453,
        "upload_time": "2017-06-23T01:58:39",
        "url": "https://files.pythonhosted.org/packages/5c/54/eeee8c0669af618e9506a94edea1ee0a698999f5ae1f23f9c79cc0e3ca06/cherry_picker-0.0.2.post2-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "239b2eca15ae1456e5499a8b040a0e33",
          "sha256": "ca3eff01dd2c5784198d7e467d00689f9446ef0b2add1a2e87bcf4578355d3de"
        },
        "downloads": 0,
        "filename": "cherry_picker-0.0.2.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "239b2eca15ae1456e5499a8b040a0e33",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8181,
        "upload_time": "2017-06-23T01:58:41",
        "url": "https://files.pythonhosted.org/packages/ff/99/244c91c903ecf70a0c9dc40a0ab210d03a758372ed215a35c9557a0e6e3e/cherry_picker-0.0.2.post2.tar.gz"
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5a899d4910aa2cc5ad391491b87ff6e2",
          "sha256": "7cba216bd53b2cfe8b1dfb83ae2bb88aca094e9cdafe2eb8f4c8f98c805c6da9"
        },
        "downloads": 0,
        "filename": "cherry_picker-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a899d4910aa2cc5ad391491b87ff6e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 20743,
        "upload_time": "2017-06-28T23:43:01",
        "url": "https://files.pythonhosted.org/packages/90/de/7d199b6218c2c76ccfa84b872e24db886c46325c28ffa60f5512dd18024d/cherry_picker-0.1.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "7a4c9a435256a1d8b9699d4edbe9f1d2",
          "sha256": "a082002d7d43a1d3282241f88f213ae6e4338c945fd471978f8be708cfda3a7e"
        },
        "downloads": 0,
        "filename": "cherry_picker-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7a4c9a435256a1d8b9699d4edbe9f1d2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7259,
        "upload_time": "2017-06-28T23:43:03",
        "url": "https://files.pythonhosted.org/packages/ec/52/a21c91eddf76d00a969c403cb7481dddb2c108d4256ea8305a3e0a47523a/cherry_picker-0.1.0.tar.gz"
      }
    ],
    "0.1.0.dev1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "618539d04fa82f4e8445f75d9c7d799d",
          "sha256": "65c882cd831e12c405dafce402c071932d253109a4edc89d2d6e4febdd63c8e1"
        },
        "downloads": 0,
        "filename": "cherry_picker-0.1.0.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "618539d04fa82f4e8445f75d9c7d799d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 20793,
        "upload_time": "2017-06-28T22:44:27",
        "url": "https://files.pythonhosted.org/packages/45/61/4f11dfaffc9f94e73433e012bdf7ff1ba110d2b8bfe609e42cbf1891bb36/cherry_picker-0.1.0.dev1-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0cab34465f856c70ab616025e11f5a73",
          "sha256": "0ab3707180c9e3b764e331bd49c7eab318e67e039c8d0912326a17e3ebe3cff5"
        },
        "downloads": 0,
        "filename": "cherry_picker-0.1.0.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "0cab34465f856c70ab616025e11f5a73",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7267,
        "upload_time": "2017-06-28T22:44:31",
        "url": "https://files.pythonhosted.org/packages/20/84/e3662f9c2f786a102572c61dda31e81fbc4b264debddc5fea6a27a358c27/cherry_picker-0.1.0.dev1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5a899d4910aa2cc5ad391491b87ff6e2",
        "sha256": "7cba216bd53b2cfe8b1dfb83ae2bb88aca094e9cdafe2eb8f4c8f98c805c6da9"
      },
      "downloads": 0,
      "filename": "cherry_picker-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5a899d4910aa2cc5ad391491b87ff6e2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 20743,
      "upload_time": "2017-06-28T23:43:01",
      "url": "https://files.pythonhosted.org/packages/90/de/7d199b6218c2c76ccfa84b872e24db886c46325c28ffa60f5512dd18024d/cherry_picker-0.1.0-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "7a4c9a435256a1d8b9699d4edbe9f1d2",
        "sha256": "a082002d7d43a1d3282241f88f213ae6e4338c945fd471978f8be708cfda3a7e"
      },
      "downloads": 0,
      "filename": "cherry_picker-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7a4c9a435256a1d8b9699d4edbe9f1d2",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 7259,
      "upload_time": "2017-06-28T23:43:03",
      "url": "https://files.pythonhosted.org/packages/ec/52/a21c91eddf76d00a969c403cb7481dddb2c108d4256ea8305a3e0a47523a/cherry_picker-0.1.0.tar.gz"
    }
  ]
}