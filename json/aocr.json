{
  "info": {
    "author": "Ed Medvedev",
    "author_email": "edward.medvedev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Attention-based OCR\n\nVisual attention-based OCR model for image recognition with additional tools for creating TFRecords datasets and exporting the trained model with weights as a [SavedModel](https://www.tensorflow.org/api_docs/python/tf/saved_model) or a frozen graph.\n\n## Acknowledgements\n\nThis project is based on a model by [Qi Guo](http://qiguo.ml) and [Yuntian Deng](https://github.com/da03). You can find the original model in the [da03/Attention-OCR](https://github.com/da03/Attention-OCR) repository.\n\n## The model\n\nAuthors: [Qi Guo](http://qiguo.ml) and [Yuntian Deng](https://github.com/da03).\n\nThe model first runs a sliding CNN on the image (images are resized to height 32 while preserving aspect ratio). Then an LSTM is stacked on top of the CNN. Finally, an attention model is used as a decoder for producing the final outputs.\n\n![OCR example](http://cs.cmu.edu/~yuntiand/OCR-2.jpg)\n\n## Installation\n\n```\npip install aocr\n```\n\nNote: Tensorflow 1.2 and Numpy will be installed as dependencies. Additional dependencies are `PIL`/`Pillow`, `distance`, and `six`.\n\n## Usage\n\n### Create a dataset\n\nTo build a TFRecords dataset, you need a collection of images and an annotation file with their respective labels.\n\n```\naocr dataset datasets/annotations-training.txt datasets/training.tfrecords\naocr dataset datasets/annotations-testing.txt datasets/testing.tfrecords\n```\n\nAnnotations are simple text files containing the image paths (either absolute or relative to your working dir) and their corresponding labels:\n\n```\ndatasets/images/hello.jpg hello\ndatasets/images/world.jpg world\n```\n\n### Train\n\n```\naocr train datasets/training.tfrecords\n```\n\nA new model will be created, and the training will start. Note that it takes quite a long time to reach convergence, since we are training the CNN and attention model simultaneously.\n\nThe `--steps-per-checkpoint` parameter determines how often the model checkpoints will be saved (the default output dir is `checkpoints/`).\n\n**Important:** there is a lot of available training options. See the CLI help or the `parameters` section of this README.\n\n### Test and visualize\n\n```\naocr test datasets/testing.tfrecords\n```\n\nAdditionally, you can visualize the attention results during testing (saved to `results/` by default):\n\n```\naocr test --visualize datasets/testing.tfrecords\n```\n\nExample output images in `results/correct`:\n\nImage 0 (j/j):\n\n![example image 0](http://cs.cmu.edu/~yuntiand/2evaluation_data_icdar13_images_word_370.png/image_0.jpg)\n\nImage 1 (u/u):\n\n![example image 1](http://cs.cmu.edu/~yuntiand/2evaluation_data_icdar13_images_word_370.png/image_1.jpg)\n\nImage 2 (n/n):\n\n![example image 2](http://cs.cmu.edu/~yuntiand/2evaluation_data_icdar13_images_word_370.png/image_2.jpg)\n\nImage 3 (g/g):\n\n![example image 3](http://cs.cmu.edu/~yuntiand/2evaluation_data_icdar13_images_word_370.png/image_3.jpg)\n\nImage 4 (l/l):\n\n![example image 4](http://cs.cmu.edu/~yuntiand/2evaluation_data_icdar13_images_word_370.png/image_4.jpg)\n\nImage 5 (e/e):\n\n![example image 5](http://cs.cmu.edu/~yuntiand/2evaluation_data_icdar13_images_word_370.png/image_5.jpg)\n\n### Export\n\n```\naocr export exported-model\n```\n\nLoad weights from the latest checkpoints and export the model into the `./exported-model` directory.\n\n## Google Cloud ML Engine\n\nTo train the model in the [Google Cloud Machine Learning Engine](https://cloud.google.com/ml-engine/), upload the training dataset into a Google Cloud Storage bucket and start a training job with the `gcloud` tool.\n\n1. Set the environment variables:\n\n```\n# Prefix for the job name.\nexport JOB_PREFIX=\"aocr\"\n\n# Region to launch the training job in.\n# Should be the same as the storage bucket region.\nexport REGION=\"us-central1\"\n\n# Your storage bucket.\nexport GS_BUCKET=\"gs://aocr-bucket\"\n\n# Path to store your training dataset in the bucket.\nexport DATASET_UPLOAD_PATH=\"training.tfrecords\"\n```\n\n2. Upload the training dataset:\n\n```\ngsutil cp datasets/training.tfrecords $GS_BUCKET/$DATASET_UPLOAD_PATH\n```\n\n3. Launch the ML Engine job:\n\n```\nexport NOW=$(date +\"%Y%m%d_%H%M%S\")\nexport JOB_NAME=\"$JOB_PREFIX$NOW\"\nexport JOB_DIR=\"$GS_BUCKET/$JOB_NAME\"\n\ngcloud ml-engine jobs submit training $JOB_NAME \\\n    --job-dir=$JOB_DIR \\\n    --module-name=aocr \\\n    --package-path=aocr \\\n    --region=$REGION \\\n    --scale-tier=BASIC_GPU \\\n    --runtime-version=1.2 \\\n    -- \\\n    --model-dir=$JOB_DIR \\\n    train $GS_BUCKET/$DATASET_UPLOAD_PATH \\\n    --steps-per-checkpoint=500 \\\n    --batch-size=512 \\\n    --num-epoch=20\n```\n\n## Parameters\n\n### Global\n\n* `log-path`: Path for the log file.\n\n### Testing\n\n* `visualize`: Output the attention maps on the original image.\n\n### Exporting\n\n* `format`: Format for the export (either `savedmodel` or `frozengraph`).\n\n### Training\n\n* `steps-per-checkpoint`: Checkpointing (print perplexity, save model) per how many steps\n* `num-epoch`: The number of whole data passes.\n* `batch-size`: Batch size.\n* `initial-learning-rate`: Initial learning rate, note the we use AdaDelta, so the initial value does not matter much.\n* `target-embedding-size`: Embedding dimension for each target.\n* `attn-use-lstm`: Whether or not use LSTM attention decoder cell.\n* `attn-num-hidden`: Number of hidden units in attention decoder cell.\n* `attn-num-layers`: Number of layers in attention decoder cell. (Encoder number of hidden units will be `attn-num-hidden`*`attn-num-layers`).\n* `target-vocab-size`: Target vocabulary size. Default is = 26+10+3 # 0: PADDING, 1: GO, 2: EOS, >2: 0-9, a-z\n* `no-resume`: Create new weights even if there are checkpoints present.\n* `max-gradient-norm`: Clip gradients to this norm.\n* `no-gradient-clipping`: Do not perform gradient clipping.\n* `gpu-id`: GPU to use.\n* `use-gru`: Use GRU cells.\n* `max-width`: Maximum width for the input images. WARNING: images with the width higher than maximum will be discarded.\n* `max-height`: Maximum height for the input images.\n* `max-prediction`: Maximum length of the predicted word/phrase.\n\n## References\n\n[Convert a formula to its LaTex source](https://github.com/harvardnlp/im2markup)\n\n[What You Get Is What You See: A Visual Markup Decompiler](https://arxiv.org/pdf/1609.04938.pdf)\n\n[Torch attention OCR](https://github.com/da03/torch-Attention-OCR)\n",
    "docs_url": null,
    "download_url": "https://github.com/emedvedev/attention-ocr/archive/0.2.0.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/emedvedev/attention-ocr",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aocr",
    "platform": "",
    "project_url": "https://pypi.org/project/aocr/",
    "release_url": "https://pypi.org/project/aocr/0.2.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Optical character recognition model for Tensorflow based on Visual Attention.",
    "version": "0.2.0"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7d832dbb0caa5aae9e4f8ba15bf2361d",
          "sha256": "0fefb96c65bc3f6ca2524005c122740c52e919036354f3608e0be4571bfbd0c6"
        },
        "downloads": 0,
        "filename": "aocr-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7d832dbb0caa5aae9e4f8ba15bf2361d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28909,
        "upload_time": "2017-07-21T19:21:16",
        "url": "https://files.pythonhosted.org/packages/c1/ea/3c58d216ab6e7cfcd9c3882ac577d8f6040506271d1222dcee4c45929e26/aocr-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5c56df2353d9877d71f077c504ee92b2",
          "sha256": "6fa5cfd3fa170aba44b34fc02d8058e92d84f440caa34981fe049e068d8099af"
        },
        "downloads": 0,
        "filename": "aocr-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5c56df2353d9877d71f077c504ee92b2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28669,
        "upload_time": "2017-07-21T19:36:31",
        "url": "https://files.pythonhosted.org/packages/df/fd/cc669956579e6d4d7cb9e5fe046f04c0d93455dd276d091aac762059adf1/aocr-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7217af105da0c5f687e4aa0bcdfb7962",
          "sha256": "5eff55bf8ef390a59b4dec461a199bf396059b4613ed9ae46514e315afefe00e"
        },
        "downloads": 0,
        "filename": "aocr-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7217af105da0c5f687e4aa0bcdfb7962",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29539,
        "upload_time": "2017-07-24T04:42:13",
        "url": "https://files.pythonhosted.org/packages/67/2e/cf86ad88b59926c84040502bda6582d7c7085a53e39171f092ac3ad2b4b4/aocr-0.0.3.tar.gz"
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2c9a1eb6204a750f6e11c2c171343f18",
          "sha256": "1c966ddeb5c3f9567fed4d79edfc32ad45726a6f208e905e9340d27f470dfb70"
        },
        "downloads": 0,
        "filename": "aocr-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2c9a1eb6204a750f6e11c2c171343f18",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29362,
        "upload_time": "2017-08-04T23:50:48",
        "url": "https://files.pythonhosted.org/packages/ea/e5/3640f291f9d838a377894226f3d5e93bfd5ae64ad1b1e6f6b513907769e8/aocr-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0eb71a8efc80116d248264424653f723",
          "sha256": "84569ed6b2fa1fc0b8e6582f11a7d2dc639c25d9aace878e6a35412d6ee8e9dd"
        },
        "downloads": 0,
        "filename": "aocr-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0eb71a8efc80116d248264424653f723",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29492,
        "upload_time": "2017-08-04T23:59:31",
        "url": "https://files.pythonhosted.org/packages/06/9e/987391c73b650ba3151be17cd4823b4f98813cf6c5c5a7e129bda2cdc5a2/aocr-0.1.1.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "30672b8b461e80c0bda27cb0db6e3ac1",
          "sha256": "8de0197167ab776f8f3d8781533673accf2bfe52944c997fb5b14375ac9968dd"
        },
        "downloads": 0,
        "filename": "aocr-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "30672b8b461e80c0bda27cb0db6e3ac1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29136,
        "upload_time": "2017-08-11T09:08:30",
        "url": "https://files.pythonhosted.org/packages/e0/92/236e93de0907752b71500dc56f8c32cba1c95853865f837506fef521d854/aocr-0.2.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "30672b8b461e80c0bda27cb0db6e3ac1",
        "sha256": "8de0197167ab776f8f3d8781533673accf2bfe52944c997fb5b14375ac9968dd"
      },
      "downloads": 0,
      "filename": "aocr-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "30672b8b461e80c0bda27cb0db6e3ac1",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 29136,
      "upload_time": "2017-08-11T09:08:30",
      "url": "https://files.pythonhosted.org/packages/e0/92/236e93de0907752b71500dc56f8c32cba1c95853865f837506fef521d854/aocr-0.2.0.tar.gz"
    }
  ]
}