{
  "info": {
    "author": "Ed Medvedev",
    "author_email": "edward.medvedev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Attention-based OCR\n===================\n\nVisual attention-based OCR model for image recognition with additional\ntools for creating TFRecords datasets and exporting the trained model\nwith weights as a\n`SavedModel <https://www.tensorflow.org/api_docs/python/tf/saved_model>`__\nor a frozen graph.\n\nAcknowledgements\n----------------\n\nThis project is based on a model by `Qi Guo <http://qiguo.ml>`__ and\n`Yuntian Deng <https://github.com/da03>`__. You can find the original\nmodel in the\n`da03/Attention-OCR <https://github.com/da03/Attention-OCR>`__\nrepository.\n\nThe model\n---------\n\nAuthors: `Qi Guo <http://qiguo.ml>`__ and `Yuntian\nDeng <https://github.com/da03>`__.\n\nThe model first runs a sliding CNN on the image (images are resized to\nheight 32 while preserving aspect ratio). Then an LSTM is stacked on top\nof the CNN. Finally, an attention model is used as a decoder for\nproducing the final outputs.\n\n.. figure:: http://cs.cmu.edu/~yuntiand/OCR-2.jpg\n   :alt: OCR example\n\n   OCR example\n\nInstallation\n------------\n\n::\n\n    pip install aocr\n\nNote: Tensorflow 1.2 and Numpy will be installed as dependencies.\nAdditional dependencies are ``PIL``/``Pillow``, ``distance``, and\n``six``.\n\nUsage\n-----\n\nCreate a dataset\n~~~~~~~~~~~~~~~~\n\nTo build a TFRecords dataset, you need a collection of images and an\nannotation file with their respective labels.\n\n::\n\n    aocr dataset datasets/annotations-training.txt datasets/training.tfrecords\n    aocr dataset datasets/annotations-testing.txt datasets/testing.tfrecords\n\nAnnotations are simple text files containing the image paths (either\nabsolute or relative to your working dir) and their corresponding\nlabels:\n\n::\n\n    datasets/images/hello.jpg hello\n    datasets/images/world.jpg world\n\nTrain\n~~~~~\n\n::\n\n    aocr train datasets/training.tfrecords\n\nA new model will be created, and the training will start. Note that it\ntakes quite a long time to reach convergence, since we are training the\nCNN and attention model simultaneously.\n\nThe ``--steps-per-checkpoint`` parameter determines how often the model\ncheckpoints will be saved (the default output dir is ``checkpoints/``).\n\n**Important:** there is a lot of available training options. See the CLI\nhelp or the ``parameters`` section of this README.\n\nTest and visualize\n~~~~~~~~~~~~~~~~~~\n\n::\n\n    aocr test datasets/testing.tfrecords\n\nAdditionally, you can visualize the attention results during testing\n(saved to ``results/`` by default):\n\n::\n\n    aocr test --visualize datasets/testing.tfrecords\n\nExample output images in ``results/correct``:\n\nImage 0 (j/j):\n\n.. figure:: http://cs.cmu.edu/~yuntiand/2evaluation_data_icdar13_images_word_370.png/image_0.jpg\n   :alt: example image 0\n\n   example image 0\n\nImage 1 (u/u):\n\n.. figure:: http://cs.cmu.edu/~yuntiand/2evaluation_data_icdar13_images_word_370.png/image_1.jpg\n   :alt: example image 1\n\n   example image 1\n\nImage 2 (n/n):\n\n.. figure:: http://cs.cmu.edu/~yuntiand/2evaluation_data_icdar13_images_word_370.png/image_2.jpg\n   :alt: example image 2\n\n   example image 2\n\nImage 3 (g/g):\n\n.. figure:: http://cs.cmu.edu/~yuntiand/2evaluation_data_icdar13_images_word_370.png/image_3.jpg\n   :alt: example image 3\n\n   example image 3\n\nImage 4 (l/l):\n\n.. figure:: http://cs.cmu.edu/~yuntiand/2evaluation_data_icdar13_images_word_370.png/image_4.jpg\n   :alt: example image 4\n\n   example image 4\n\nImage 5 (e/e):\n\n.. figure:: http://cs.cmu.edu/~yuntiand/2evaluation_data_icdar13_images_word_370.png/image_5.jpg\n   :alt: example image 5\n\n   example image 5\n\nExport\n~~~~~~\n\n::\n\n    aocr export exported-model\n\nLoad weights from the latest checkpoints and export the model into the\n``./exported-model`` directory.\n\nGoogle Cloud ML Engine\n----------------------\n\nTo train the model in the `Google Cloud Machine Learning\nEngine <https://cloud.google.com/ml-engine/>`__, upload the training\ndataset into a Google Cloud Storage bucket and start a training job with\nthe ``gcloud`` tool.\n\n1. Set the environment variables:\n\n::\n\n    # Prefix for the job name.\n    export JOB_PREFIX=\"aocr\"\n\n    # Region to launch the training job in.\n    # Should be the same as the storage bucket region.\n    export REGION=\"us-central1\"\n\n    # Your storage bucket.\n    export GS_BUCKET=\"gs://aocr-bucket\"\n\n    # Path to store your training dataset in the bucket.\n    export DATASET_UPLOAD_PATH=\"training.tfrecords\"\n\n2. Upload the training dataset:\n\n::\n\n    gsutil cp datasets/training.tfrecords $GS_BUCKET/$DATASET_UPLOAD_PATH\n\n3. Launch the ML Engine job:\n\n::\n\n    export NOW=$(date +\"%Y%m%d_%H%M%S\")\n    export JOB_NAME=\"$JOB_PREFIX$NOW\"\n    export JOB_DIR=\"$GS_BUCKET/$JOB_NAME\"\n\n    gcloud ml-engine jobs submit training $JOB_NAME \\\n        --job-dir=$JOB_DIR \\\n        --module-name=aocr \\\n        --package-path=aocr \\\n        --region=$REGION \\\n        --scale-tier=BASIC_GPU \\\n        --runtime-version=1.2 \\\n        -- \\\n        --model-dir=$JOB_DIR \\\n        train $GS_BUCKET/$DATASET_UPLOAD_PATH \\\n        --steps-per-checkpoint=500 \\\n        --batch-size=512 \\\n        --num-epoch=20\n\nParameters\n----------\n\nGlobal\n~~~~~~\n\n-  ``log-path``: Path for the log file.\n\nTesting\n~~~~~~~\n\n-  ``visualize``: Output the attention maps on the original image.\n\nExporting\n~~~~~~~~~\n\n-  ``format``: Format for the export (either ``savedmodel`` or\n   ``frozengraph``).\n\nTraining\n~~~~~~~~\n\n-  ``steps-per-checkpoint``: Checkpointing (print perplexity, save\n   model) per how many steps\n-  ``num-epoch``: The number of whole data passes.\n-  ``batch-size``: Batch size.\n-  ``initial-learning-rate``: Initial learning rate, note the we use\n   AdaDelta, so the initial value does not matter much.\n-  ``target-embedding-size``: Embedding dimension for each target.\n-  ``attn-use-lstm``: Whether or not use LSTM attention decoder cell.\n-  ``attn-num-hidden``: Number of hidden units in attention decoder\n   cell.\n-  ``attn-num-layers``: Number of layers in attention decoder cell.\n   (Encoder number of hidden units will be\n   ``attn-num-hidden``\\ \\*\\ ``attn-num-layers``).\n-  ``target-vocab-size``: Target vocabulary size. Default is = 26+10+3 #\n   0: PADDING, 1: GO, 2: EOS, >2: 0-9, a-z\n-  ``no-resume``: Create new weights even if there are checkpoints\n   present.\n-  ``max-gradient-norm``: Clip gradients to this norm.\n-  ``no-gradient-clipping``: Do not perform gradient clipping.\n-  ``gpu-id``: GPU to use.\n-  ``use-gru``: Use GRU cells.\n\nReferences\n----------\n\n`Convert a formula to its LaTex\nsource <https://github.com/harvardnlp/im2markup>`__\n\n`What You Get Is What You See: A Visual Markup\nDecompiler <https://arxiv.org/pdf/1609.04938.pdf>`__\n\n`Torch attention OCR <https://github.com/da03/torch-Attention-OCR>`__\n",
    "docs_url": null,
    "download_url": "https://github.com/emedvedev/attention-ocr/archive/0.0.3.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/emedvedev/attention-ocr",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aocr",
    "platform": "",
    "project_url": "https://pypi.org/project/aocr/",
    "release_url": "https://pypi.org/project/aocr/0.0.3/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Optical character recognition model for Tensorflow based on Visual Attention.",
    "version": "0.0.3"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7d832dbb0caa5aae9e4f8ba15bf2361d",
          "sha256": "0fefb96c65bc3f6ca2524005c122740c52e919036354f3608e0be4571bfbd0c6"
        },
        "downloads": 0,
        "filename": "aocr-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7d832dbb0caa5aae9e4f8ba15bf2361d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28909,
        "upload_time": "2017-07-21T19:21:16",
        "url": "https://files.pythonhosted.org/packages/c1/ea/3c58d216ab6e7cfcd9c3882ac577d8f6040506271d1222dcee4c45929e26/aocr-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5c56df2353d9877d71f077c504ee92b2",
          "sha256": "6fa5cfd3fa170aba44b34fc02d8058e92d84f440caa34981fe049e068d8099af"
        },
        "downloads": 0,
        "filename": "aocr-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5c56df2353d9877d71f077c504ee92b2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28669,
        "upload_time": "2017-07-21T19:36:31",
        "url": "https://files.pythonhosted.org/packages/df/fd/cc669956579e6d4d7cb9e5fe046f04c0d93455dd276d091aac762059adf1/aocr-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7217af105da0c5f687e4aa0bcdfb7962",
          "sha256": "5eff55bf8ef390a59b4dec461a199bf396059b4613ed9ae46514e315afefe00e"
        },
        "downloads": 0,
        "filename": "aocr-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7217af105da0c5f687e4aa0bcdfb7962",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29539,
        "upload_time": "2017-07-24T04:42:13",
        "url": "https://files.pythonhosted.org/packages/67/2e/cf86ad88b59926c84040502bda6582d7c7085a53e39171f092ac3ad2b4b4/aocr-0.0.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "7217af105da0c5f687e4aa0bcdfb7962",
        "sha256": "5eff55bf8ef390a59b4dec461a199bf396059b4613ed9ae46514e315afefe00e"
      },
      "downloads": 0,
      "filename": "aocr-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "7217af105da0c5f687e4aa0bcdfb7962",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 29539,
      "upload_time": "2017-07-24T04:42:13",
      "url": "https://files.pythonhosted.org/packages/67/2e/cf86ad88b59926c84040502bda6582d7c7085a53e39171f092ac3ad2b4b4/aocr-0.0.3.tar.gz"
    }
  ]
}