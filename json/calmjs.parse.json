{
  "info": {
    "author": "Tommy Yu",
    "author_email": "tommy.yu@auckland.ac.nz",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: JavaScript",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "calmjs.parse\r\n============\r\n\r\nA collection of parsers and helper libraries for understanding\r\nECMAScript; a partial fork of |slimit|_.\r\n\r\n.. image:: https://travis-ci.org/calmjs/calmjs.parse.svg?branch=master\r\n    :target: https://travis-ci.org/calmjs/calmjs.parse\r\n.. image:: https://ci.appveyor.com/api/projects/status/5dj8dnu9gmj02msu/branch/master?svg=true\r\n    :target: https://ci.appveyor.com/project/metatoaster/calmjs-parse/branch/master\r\n.. image:: https://coveralls.io/repos/github/calmjs/calmjs.parse/badge.svg?branch=master\r\n    :target: https://coveralls.io/github/calmjs/calmjs.parse?branch=master\r\n\r\n.. |calmjs.parse| replace:: ``calmjs.parse``\r\n.. |ply| replace:: ``ply``\r\n.. |slimit| replace:: ``slimit``\r\n.. _ply: https://pypi.python.org/pypi/ply\r\n.. _slimit: https://pypi.python.org/pypi/slimit\r\n\r\n\r\nIntroduction\r\n------------\r\n\r\nFor any kind of build system that operates with JavaScript code in\r\nconjunction with a module system, the ability to understand what modules\r\na given set of sources require or provide is paramount.  As the Calmjs\r\nproject provides a framework that produces and consume these module\r\ndefinitions, the the ability to have a comprehensive understanding of\r\ngiven JavaScript sources is a given.  This goal was originally achieved\r\nusing |slimit|_, a JavaScript minifier library that also provided a\r\ncomprehensive parser class that was built using Python Lex-Yacc (i.e.\r\n|ply|_).\r\n\r\nHowever, as of mid-2017, it was noted that |slimit| remained in a\r\nminimum state of maintenance for more than four years (its most recent\r\nrelease, 0.8.1, was made 2013-03-26), along with a number of serious\r\noutstanding issues have left unattended and unresolved for the duration\r\nof that timespan.  As the development of the Calmjs framework require\r\nthose issues to be rectified as soon as possible, a decision to fork the\r\nparser portion of |slimit| was made. This was done in order to cater to\r\nthe interests current to Calmjs project at that moment in time.\r\n\r\nThe fork was initial cut from another fork of |slimit| (specifically\r\n`lelit/slimit <https://github.com/lelit/slimit>`_), as it introduced and\r\naggregated a number of bug fixes from various sources.  To ensure a\r\nbetter quality control and assurance, a number of problematic changes\r\nintroduced by that fork were removed.   Also, new tests were created to\r\nbring coverage to full, and issues reported on the |slimit| tracker were\r\nnoted and formalized into test cases where applicable.  Finally, grammar\r\nrules were updated to ensure better conformance with the ECMA-262 (ES5)\r\nspecification.\r\n\r\nThe goal of |calmjs.parse| is to provide a similar parser API as the\r\nparser that |slimit| had provided.  The mangling and minification\r\nfunctionalities as provided by the original has been omitted as they are\r\nnot relevant to code parsing.  A separate package containing those\r\nmangling and minifying features as provided by |slimit| may be released\r\nin the future.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nThe following command may be executed to source the |calmjs.parse| wheel\r\nfrom PyPI for installation into the current Python environment.\r\n\r\n.. code:: sh\r\n\r\n    $ pip install calmjs.parse\r\n\r\nAs this package uses |ply|, which produces auto-generated modules that\r\nare shipped with the Python wheel for this package, this results in some\r\ncaveats.  The modules at hand contain generated tables for |ply|; the\r\nwheel for this package will be compatible up to ``ply-3.10``, or the\r\nlatest release available at the time of release of |calmjs.parse|.  If a\r\nmore recent version of |ply| becomes available and is installed, the\r\ngenerated tables in this package may become incompatible, thus a manual\r\noptimization step outlined later in this document may be required.\r\nAlternatively, |ply| may be downgraded to version 3.10.\r\n\r\nAlternative installation methods (for developers, advanced users)\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nDevelopment is still ongoing with |calmjs.parse|, for the latest\r\nfeatures and bug fixes, the development version may be installed through\r\ngit like so:\r\n\r\n.. code:: sh\r\n\r\n    $ pip install git+https://github.com/calmjs/calmjs.parse.git#egg=calmjs.parse\r\n\r\nAlternatively, the git repository can be cloned directly and execute\r\n``python setup.py develop`` while inside the root of the source\r\ndirectory.\r\n\r\nA manual optimization step may need to be performed for platforms and\r\nsystems that do not have utf8 as their default encoding.\r\n\r\nManual optimization\r\n~~~~~~~~~~~~~~~~~~~\r\n\r\nAs lex and yacc require the generation of symbol tables, a way to\r\noptimize the performance is to cache the results.  For |ply|, this is\r\ndone using an autogenerated module.  However, the generated file is\r\nmarked with a version number, as the results may be specific to the\r\ninstalled version of |ply|.  In |calmjs.parse| this is handled by giving\r\nthem a name specific to the version of |ply| and the major Python\r\nversion, as both together does result in subtle differences in the\r\noutputs and expectations of the auto-generated modules.\r\n\r\nTypically, the process for this optimization is automatic and a correct\r\nsymbol table will be generated, however there are cases where this will\r\nfail, so for this reason |calmjs.parse| provide a helper module and\r\nexecutable that can be optionally invoked to ensure that the correct\r\nencoding be used to generate that file.  Other reasons where this may be\r\nnecessary is to allow system administrators to do so for their end\r\nusers, as they may not have write privileges at that level.\r\n\r\nTo execute the optimizer from the shell, the provided helper script may\r\nbe used like so:\r\n\r\n.. code:: sh\r\n\r\n    $ python -m calmjs.parse.parsers.optimize\r\n\r\nIf warnings appear that warn that tokens are defined but not used, they\r\nmay be safely ignored.\r\n\r\nThis step is generally optionally for users who installed this package\r\nfrom PyPI via a Python wheel, provided the caveats as outlined in the\r\ninstallation section are addressed.\r\n\r\nTesting the installation\r\n~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nTo ensure that the |calmjs.parse| installation is functioning correctly,\r\nthe built-in testsuite can be executed by the following:\r\n\r\n.. code:: sh\r\n\r\n    $ python -m unittest calmjs.parse.tests.make_suite\r\n\r\nIf there are failures, please file an issue on the issue tracker with\r\nthe full traceback, and/or the method of installation.  Please also\r\nremember to include platform specific information, such as Python\r\nversion, operating system environments, the version of |ply| that was\r\ninstalled, plus other information related to the issue at hand.\r\n\r\n\r\nUsage\r\n-----\r\n\r\nAs this is a parser library, no executable shell commands are provided.\r\nThere is however a helper function provided at the top level for\r\nimmediate access to the parsing feature.  It may be used like so:\r\n\r\n.. code:: python\r\n\r\n    >>> from calmjs.parse import es5\r\n    >>> program = es5('''\r\n    ... // simple program\r\n    ... var main = function(greet) {\r\n    ...     var hello = \"hello \" + greet;\r\n    ...     return hello;\r\n    ... };\r\n    ... console.log(main('world'));\r\n    ... ''')\r\n    >>> program  # for a simple repr-like nested view of the ast\r\n    <ES5Program ?children=[\r\n      <VarStatement ?children=[\r\n        <VarDecl identifier=<Identifier ...>, initializer=<FuncExpr ...>>\r\n      ]>,\r\n      <ExprStatement expr=<FunctionCall args=[\r\n        <FunctionCall ...>\r\n      ], identifier=<DotAccessor ...>>>\r\n    ]>\r\n    >>> print(program)  # automatic reconstruction of ast into source\r\n    var main = function(greet) {\r\n      var hello = \"hello \" + greet;\r\n      return hello;\r\n    };\r\n    console.log(main('world'));\r\n\r\nThe parser classes are organized under the ``calmjs.parse.parsers``\r\nmodule, with each language being under their own module.  A\r\ncorresponding lexer class with the same name is also provided under the\r\n``calmjs.parse.lexers`` module.  For the moment, only ES5 support is\r\nimplemented.\r\n\r\nAST (Abstract Syntax Tree) visitor classes are defined under the\r\nappropriate named modules under ``calmjs.parse.visitors``; please refer\r\nto their docstrings for documentation on their usage.  A quick example\r\nto show how the es5 visitor may be used to regenerate the source tree\r\nback into text for the above example (in fact, the ``__str__`` call\r\nshown in the first example generates the output like so).\r\n\r\n.. code:: python\r\n\r\n    >>> from calmjs.parse.visitors.es5 import PrettyPrinter\r\n    >>> visitor = PrettyPrinter(indent=4)\r\n    >>> print(visitor.visit(program))\r\n    var main = function(greet) {\r\n        var hello = \"hello \" + greet;\r\n        return hello;\r\n    };\r\n    console.log(main('world'));\r\n\r\nNote the change in indentation and the lack of comments, as this visitor\r\nimplementation has their own indentation scheme and the parser currently\r\nskips over comments.\r\n\r\n\r\nTroubleshooting\r\n---------------\r\n\r\nInstantiation the parser fails with ``UnicodeEncodeError``\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nFor platforms or systems that do not have utf8 configured as the default\r\nencoding, the automatic table generation may fail when constructing a\r\nparser instance.  An example:\r\n\r\n.. code:: python\r\n\r\n    >>> from calmjs.parse.parsers import es5\r\n    >>> parser = es5.Parser()\r\n    Traceback (most recent call last):\r\n      ...\r\n      File \"c:\\python35\\lib\\site-packages\\ply-3.10-py3.5.egg\\ply\\lex.py\", line 1043, in lex\r\n        lexobj.writetab(lextab, outputdir)\r\n      File \"c:\\python35\\lib\\site-packages\\ply-3.10-py3.5.egg\\ply\\lex.py\", line 195, in writetab\r\n        tf.write('_lexstatere   = %s\\n' % repr(tabre))\r\n      File \"c:\\python35\\lib\\encodings\\cp1252.py\", line 19, in encode\r\n        return codecs.charmap_encode(input,self.errors,encoding_table)[0]\r\n    UnicodeEncodeError: 'charmap' codec can't encode character '\\u02c1' in position 2488: character maps to <undefined>\r\n\r\nA workaround helper script is provided, it may be executed like so:\r\n\r\n.. code:: sh\r\n\r\n    $ python -m calmjs.parse.parsers.optimize\r\n\r\nFor more details, refer to the ``Manual optimization`` section of this\r\ndocument.\r\n\r\n\r\nContribute\r\n----------\r\n\r\n- Issue Tracker: https://github.com/calmjs/calmjs.parse/issues\r\n- Source Code: https://github.com/calmjs/calmjs.parse\r\n\r\n\r\nLegal\r\n-----\r\n\r\nThe |calmjs.parse| package is copyright (c) 2017 Auckland Bioengineering\r\nInstitute, University of Auckland.  The |calmjs.parse| package is\r\nlicensed under the MIT license (specifically, the Expat License), which\r\nis also the same license that the package |slimit| was released under.\r\n\r\nThe lexer, parser, visitor and the other types definitions portions were\r\noriginally imported from the |slimit| package; |slimit| is copyright (c)\r\nRuslan Spivak.\r\n\r\nThe Calmjs project is copyright (c) 2017 Auckland Bioengineering\r\nInstitute, University of Auckland.\r\n\r\nChangelog\r\n=========\r\n\r\n0.9.0 - 2017-06-09\r\n------------------\r\n\r\n- Initial release of the fork of ``slimit.parser`` and its parent\r\n  modules as ``calmjs.parse``.\r\n- This release brings in a number of bug fixes that were available via\r\n  other forks of ``slimit``, with modifications or even a complete\r\n  revamp.\r\n- Issues addressed includes:\r\n\r\n  - `rspivak/slimit#52 <https://github.com/rspivak/slimit/issues/52>`_,\r\n    `rspivak/slimit#59 <https://github.com/rspivak/slimit/issues/59>`_,\r\n    `rspivak/slimit#81 <https://github.com/rspivak/slimit/issues/81>`_,\r\n    `rspivak/slimit#90 <https://github.com/rspivak/slimit/issues/90>`_\r\n    (relating to conformance of ecma-262 7.6 identifier names)\r\n  - `rspivak/slimit#54 <https://github.com/rspivak/slimit/issues/54>`_\r\n    (fixed by tracking scope and executable current token in lexer)\r\n  - `rspivak/slimit#57 <https://github.com/rspivak/slimit/issues/57>`_,\r\n    `rspivak/slimit#70 <https://github.com/rspivak/slimit/issues/70>`_\r\n    (octal encoding (e.g \\0), from `redapple/slimit@a93204577f\r\n    <https://github.com/redapple/slimit/commit/a93204577f>`_)\r\n  - `rspivak/slimit#62 <https://github.com/rspivak/slimit/issues/62>`_\r\n    (formalized into a unittest that passed)\r\n  - `rspivak/slimit#73 <https://github.com/rspivak/slimit/issues/73>`_\r\n    (specifically the desire for a better repr; the minifier bits are\r\n    not relevant to this package)\r\n  - `rspivak/slimit#79 <https://github.com/rspivak/slimit/pull/79>`_\r\n    (tab module handling was completely reimplemented)\r\n  - `rspivak/slimit#82 <https://github.com/rspivak/slimit/issues/82>`_\r\n    (formalized into a unittest that passed)\r\n\r\n- Include various changes gathered by `rspivak/slimit#65\r\n  <https://github.com/rspivak/slimit/pull/65>`_, which may be the source\r\n  of some of the fixes listed above.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/calmjs/calmjs.parse",
    "keywords": "",
    "license": "mit",
    "maintainer": "",
    "maintainer_email": "",
    "name": "calmjs.parse",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/calmjs.parse/",
    "release_url": "https://pypi.org/project/calmjs.parse/0.9.0/",
    "requires_python": "",
    "summary": "Various parsers for ECMA standards.",
    "version": "0.9.0"
  },
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e7c57203d320a746c6594c51407cbe67",
          "sha256": "df48fa7dfdace3e918010587cfd3e1bf51f222054d818dda770a4c639cd37ac0"
        },
        "downloads": 0,
        "filename": "calmjs.parse-0.9.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7c57203d320a746c6594c51407cbe67",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 170276,
        "upload_time": "2017-06-09T10:20:06",
        "url": "https://files.pythonhosted.org/packages/38/ff/d87a5796de860991157898f30289c1da481b1d0d307bfce10ced28f15ddc/calmjs.parse-0.9.0-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "afc2b0a080368007fab05e11336770ca",
          "sha256": "fdc109c970afeda7bdf04f291019b52a6c0a8587913255143a529e554fb469e4"
        },
        "downloads": 0,
        "filename": "calmjs.parse-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afc2b0a080368007fab05e11336770ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 164012,
        "upload_time": "2017-06-09T10:20:10",
        "url": "https://files.pythonhosted.org/packages/f9/73/4c4a1141070945d383128d1fe07a551fac74950e4277119c63a4ca44bf93/calmjs.parse-0.9.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1af890e080eb6f5685fc4543fb927573",
          "sha256": "6d0b2269c85d092f50fab74f6a4aae595d62307a2b7f8538b8f54194ae50547e"
        },
        "downloads": 0,
        "filename": "calmjs.parse-0.9.0.zip",
        "has_sig": false,
        "md5_digest": "1af890e080eb6f5685fc4543fb927573",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 70891,
        "upload_time": "2017-06-09T10:20:13",
        "url": "https://files.pythonhosted.org/packages/20/b6/b9fd4f727a3898796c1fa76fd707c1a5bddc31aad167968a85f8234b59af/calmjs.parse-0.9.0.zip"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "e7c57203d320a746c6594c51407cbe67",
        "sha256": "df48fa7dfdace3e918010587cfd3e1bf51f222054d818dda770a4c639cd37ac0"
      },
      "downloads": 0,
      "filename": "calmjs.parse-0.9.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "e7c57203d320a746c6594c51407cbe67",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "size": 170276,
      "upload_time": "2017-06-09T10:20:06",
      "url": "https://files.pythonhosted.org/packages/38/ff/d87a5796de860991157898f30289c1da481b1d0d307bfce10ced28f15ddc/calmjs.parse-0.9.0-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "afc2b0a080368007fab05e11336770ca",
        "sha256": "fdc109c970afeda7bdf04f291019b52a6c0a8587913255143a529e554fb469e4"
      },
      "downloads": 0,
      "filename": "calmjs.parse-0.9.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "afc2b0a080368007fab05e11336770ca",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 164012,
      "upload_time": "2017-06-09T10:20:10",
      "url": "https://files.pythonhosted.org/packages/f9/73/4c4a1141070945d383128d1fe07a551fac74950e4277119c63a4ca44bf93/calmjs.parse-0.9.0-py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "1af890e080eb6f5685fc4543fb927573",
        "sha256": "6d0b2269c85d092f50fab74f6a4aae595d62307a2b7f8538b8f54194ae50547e"
      },
      "downloads": 0,
      "filename": "calmjs.parse-0.9.0.zip",
      "has_sig": false,
      "md5_digest": "1af890e080eb6f5685fc4543fb927573",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 70891,
      "upload_time": "2017-06-09T10:20:13",
      "url": "https://files.pythonhosted.org/packages/20/b6/b9fd4f727a3898796c1fa76fd707c1a5bddc31aad167968a85f8234b59af/calmjs.parse-0.9.0.zip"
    }
  ]
}