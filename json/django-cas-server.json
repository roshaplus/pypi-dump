{
  "info": {
    "author": "Valentin Samir",
    "author_email": "valentin.samir@crans.org",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.7",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Systems Administration :: Authentication/Directory"
    ],
    "description": "CAS Server\n##########\n\n|travis| |coverage| |licence| |github_version| |pypi_version| |codacy| |doc|\n\nCAS Server is a Django application implementing the `CAS Protocol 3.0 Specification\n<https://apereo.github.io/cas/4.2.x/protocol/CAS-Protocol-Specification.html>`_.\n\nBy default, the authentication process use django internal users but you can easily\nuse any sources (see the `Authentication backend`_ section and auth classes in the auth.py file)\n\n.. contents:: Table of Contents\n\nFeatures\n========\n\n* Support CAS version 1.0, 2.0, 3.0\n* Support Single Sign Out\n* Configuration of services via the django Admin application\n* Fine control on which user's attributes are passed to which service\n* Possibility to rename/rewrite attributes per service\n* Possibility to require some attribute values per service\n* Federated mode between multiple CAS\n* Supports Django 1.7, 1.8 and 1.9\n* Supports Python 2.7, 3.x\n\nDependencies\n============\n\n``django-cas-server`` depends on the following python packages:\n\n* Django >= 1.7.1 < 1.11\n* requests >= 2.4\n* requests_futures >= 0.9.5\n* lxml >= 3.4\n* six >= 1.8\n\nMinimal version of packages dependancy are just indicative and meens that ``django-cas-server`` has\nbeen tested with it. Previous versions of dependencies may or may not work.\n\nAdditionally, denpending of the `Authentication backend`_ you plan to use, you may need the following\npython packages:\n\n* ldap3\n* psycopg2\n* mysql-python\n\n\nHere there is a table with the name of python packages and the corresponding packages providing\nthem on debian like systems and centos like systems.\nYou should try as much as possible to use system packages as there are automatically updated then\nyou update your system. You can then install Not Available (N/A)\npackages on your system using pip inside a virtualenv as described in the `Installation`_ section.\nFor use with python3, just replace python(2) in the table by python3.\n\n+------------------+-------------------------+---------------------+\n| python package   | debian like systems     | centos like systems |\n+==================+=========================+=====================+\n| Django           | python-django           | python-django       |\n+------------------+-------------------------+---------------------+\n| requests         | python-requests         | python-requests     |\n+------------------+-------------------------+---------------------+\n| requests_futures | python-requests-futures | N/A                 |\n+------------------+-------------------------+---------------------+\n| lxml             | python-lxml             | python-lxml         |\n+------------------+-------------------------+---------------------+\n| six              | python-six              | python-six          |\n+------------------+-------------------------+---------------------+\n| ldap3            | python-ldap3            | python-ldap3        |\n+------------------+-------------------------+---------------------+\n| psycopg2         | python-psycopg2         | python-psycopg2     |\n+------------------+-------------------------+---------------------+\n| mysql-python     | python-mysqldb          | python2-mysql       |\n+------------------+-------------------------+---------------------+\n\nInstallation\n============\n\nThe recommended installation mode is to use a virtualenv with ``--system-site-packages``\n\n1. Make sure that python virtualenv is installed\n\n2. Install python packages available via the system package manager:\n\n   On debian like systems::\n\n    $ sudo apt-get install python-django python-requests python-six python-lxml python-requests-futures\n\n   On debian jessie, you can use the version of python-django available in the\n   `backports <https://backports.debian.org/Instructions/>`_.\n\n   On centos like systems::\n\n    $ sudo yum install python-django python-requests python-six python-lxml\n\n3. Create a virtualenv::\n\n    $ virtualenv --system-site-packages cas_venv\n    Running virtualenv with interpreter /var/www/html/cas-server/bin/python2\n    Using real prefix '/usr'\n    New python executable in cas/bin/python2\n    Also creating executable in cas/bin/python\n    Installing setuptools, pip...done.\n\n4. And `activate it <https://virtualenv.pypa.io/en/stable/userguide/#activate-script>`__::\n\n    $ cd cas_venv/; . bin/activate\n\n5. Create a django project::\n\n   $ django-admin startproject cas_project\n   $ cd cas_project\n\n6. Install `django-cas-server`. To use the last published release, run::\n\n    $ pip install django-cas-server\n\n   Alternatively if you want to use the version of the git repository, you can clone it::\n\n    $ git clone https://github.com/nitmir/django-cas-server\n    $ cd django-cas-server\n    $ pip install -r requirements.txt\n\n   Then, either run ``make install`` to create a python package using the sources of the repository\n   and install it with pip, or place the ``cas_server`` directory into your\n   `PYTHONPATH <https://docs.python.org/2/using/cmdline.html#envvar-PYTHONPATH>`_\n   (for instance by symlinking ``cas_server`` to the root of your django project).\n\n7. Open ``cas_project/settings.py`` in you favourite editor and follow the quick start section.\n\n\nQuick start\n===========\n\n1. Add \"cas_server\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = (\n        'django.contrib.admin',\n        ...\n        'cas_server',\n    )\n\n   For internationalization support, add \"django.middleware.locale.LocaleMiddleware\"\n   to your MIDDLEWARE_CLASSES setting like this::\n\n    MIDDLEWARE_CLASSES = (\n        ...\n        'django.middleware.locale.LocaleMiddleware',\n        ...\n    )\n\n2. Include the cas_server URLconf in your project urls.py like this::\n\n    from django.conf.urls import url, include\n\n    urlpatterns = [\n        url(r'^admin/', admin.site.urls),\n        ...\n        url(r'^cas/', include('cas_server.urls', namespace=\"cas_server\")),\n    ]\n\n3. Run ``python manage.py migrate`` to create the cas_server models.\n\n\n4. You should add some management commands to a crontab: ``clearsessions``,\n   ``cas_clean_tickets`` and ``cas_clean_sessions``.\n\n   * ``clearsessions``:  please see `Clearing the session store <https://docs.djangoproject.com/en/stable/topics/http/sessions/#clearing-the-session-store>`_.\n   * ``cas_clean_tickets``: old tickets and timed-out tickets do not get purge from\n     the database automatically. They are just marked as invalid. ``cas_clean_tickets``\n     is a clean-up management command for this purpose. It send SingleLogOut request\n     to services with timed out tickets and delete them.\n   * ``cas_clean_sessions``: Logout and purge users (sending SLO requests) that are\n     inactive since more than ``SESSION_COOKIE_AGE``. The default value for is ``1209600``\n     seconds (2 weeks). You probably should reduce it to something like ``86400`` seconds (1 day).\n\n   You could for example do as bellow::\n\n     0   0  * * * cas-user /path/to/project/manage.py clearsessions\n     */5 *  * * * cas-user /path/to/project/manage.py cas_clean_tickets\n     5   0  * * * cas-user /path/to/project/manage.py cas_clean_sessions\n\n5. Run ``python manage.py createsuperuser`` to create an administrator user.\n\n6. Start the development server and visit http://127.0.0.1:8000/admin/\n   to add a first service allowed to authenticate user against the CAS\n   (you'll need the Admin app enabled). See the `Service Patterns`_ section bellow.\n\n7. Visit http://127.0.0.1:8000/cas/ to login with your django users.\n\n\n\n\nSettings\n========\n\nAll settings are optional. Add them to ``settings.py`` to customize ``django-cas-server``:\n\n\nTemplate settings\n-----------------\n\n* ``CAS_LOGO_URL``: URL to the logo showed in the up left corner on the default\n  templates. Set it to ``False`` to disable it.\n* ``CAS_FAVICON_URL``: URL to the favicon (shortcut icon) used by the default templates.\n  Default is a key icon. Set it to ``False`` to disable it.\n* ``CAS_SHOW_POWERED``: Set it to ``False`` to hide the powered by footer. The default is ``True``.\n* ``CAS_COMPONENT_URLS``: URLs to css and javascript external components. It is a dictionnary\n  having the five following keys: ``\"bootstrap3_css\"``, ``\"bootstrap3_js\"``,\n  ``\"html5shiv\"``, ``\"respond\"``, ``\"jquery\"``. The default is::\n\n        {\n            \"bootstrap3_css\": \"//maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\",\n            \"bootstrap3_js\": \"//maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\",\n            \"html5shiv\": \"//oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\",\n            \"respond\": \"//oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\",\n            \"jquery\": \"//code.jquery.com/jquery.min.js\",\n        }\n\n  if you omit some keys of the dictionnary, the default value for these keys is used.\n* ``CAS_SHOW_SERVICE_MESSAGES``: Messages displayed about the state of the service on the login page.\n  The default is ``True``.\n* ``CAS_INFO_MESSAGES``: Messages displayed in info-boxes on the html pages of the default templates.\n  It is a dictionnary mapping message name to a message dict. A message dict has 3 keys:\n\n  * ``message``: A unicode message to display, potentially wrapped around ugettex_lazy\n  * ``discardable``: A boolean, specify if the users can close the message info-box\n  * ``type``: One of info, success, info, warning, danger. The type of the info-box.\n\n  ``CAS_INFO_MESSAGES`` contains by default one message, ``cas_explained``, which explain\n  roughly the purpose of a CAS. The default is::\n\n    {\n        \"cas_explained\": {\n            \"message\":_(\n                u\"The Central Authentication Service grants you access to most of our websites by \"\n                u\"authenticating only once, so you don't need to type your credentials again unless \"\n                u\"your session expires or you logout.\"\n            ),\n            \"discardable\": True,\n            \"type\": \"info\",  # one of info, success, info, warning, danger\n        },\n    }\n\n* ``CAS_INFO_MESSAGES_ORDER``: A list of message names. Order in which info-box messages are\n  displayed. Use an empty list to disable messages display. The default is ``[]``.\n* ``CAS_LOGIN_TEMPLATE``: Path to the template showed on ``/login`` then the user\n  is not autenticated.  The default is ``\"cas_server/login.html\"``.\n* ``CAS_WARN_TEMPLATE``: Path to the template showed on ``/login?service=...`` then\n  the user is authenticated and has asked to be warned before being connected\n  to a service. The default is ``\"cas_server/warn.html\"``.\n* ``CAS_LOGGED_TEMPLATE``: Path to the template showed on ``/login`` then to user is\n  authenticated. The default is ``\"cas_server/logged.html\"``.\n* ``CAS_LOGOUT_TEMPLATE``: Path to the template showed on ``/logout`` then to user\n  is being disconnected. The default is ``\"cas_server/logout.html\"``\n* ``CAS_REDIRECT_TO_LOGIN_AFTER_LOGOUT``: Should we redirect users to ``/login`` after they\n  logged out instead of displaying ``CAS_LOGOUT_TEMPLATE``. The default is ``False``.\n\n\nAuthentication settings\n-----------------------\n\n* ``CAS_AUTH_CLASS``: A dotted path to a class or a class implementing\n  ``cas_server.auth.AuthUser``. The default is ``\"cas_server.auth.DjangoAuthUser\"``\n  Available classes bundled with ``django-cas-server`` are listed below in the\n  `Authentication backend`_ section.\n\n* ``SESSION_COOKIE_AGE``: This is a django settings. Here, it control the delay in seconds after\n  which inactive users are logged out. The default is ``1209600`` (2 weeks). You probably should\n  reduce it to something like ``86400`` seconds (1 day).\n\n* ``CAS_TGT_VALIDITY``: Max time after with the user MUST reauthenticate. Let it to `None` for no\n  max time.This can be used to force refreshing cached informations only available upon user\n  authentication like the user attributes in federation mode or with the ldap auth in bind mode.\n  The default is ``None``.\n\n* ``CAS_PROXY_CA_CERTIFICATE_PATH``: Path to certificate authorities file. Usually on linux\n  the local CAs are in ``/etc/ssl/certs/ca-certificates.crt``. The default is ``True`` which\n  tell requests to use its internal certificat authorities. Settings it to ``False`` should\n  disable all x509 certificates validation and MUST not be done in production.\n  x509 certificate validation is perform upon PGT issuance.\n\n* ``CAS_SLO_MAX_PARALLEL_REQUESTS``: Maximum number of parallel single log out requests send.\n  If more requests need to be send, there are queued. The default is ``10``.\n* ``CAS_SLO_TIMEOUT``: Timeout for a single SLO request in seconds. The default is ``5``.\n\n\nFederation settings\n-------------------\n\n* ``CAS_FEDERATE``: A boolean for activating the federated mode (see the `Federation mode`_\n  section below). The default is ``False``.\n* ``CAS_FEDERATE_REMEMBER_TIMEOUT``: Time after witch the cookie use for \"remember my identity\n  provider\" expire. The default is ``604800``, one week. The cookie is called\n  ``_remember_provider``.\n\n\nNew version warnings settings\n-----------------------------\n\n* ``CAS_NEW_VERSION_HTML_WARNING``: A boolean for diplaying a warning on html pages then a new\n  version of the application is avaible. Once closed by a user, it is not displayed to this user\n  until the next new version. The default is ``True``.\n* ``CAS_NEW_VERSION_EMAIL_WARNING``: A boolean for sending a email to ``settings.ADMINS`` when a new\n  version is available. The default is ``True``.\n\n\nTickets validity settings\n-------------------------\n\n* ``CAS_TICKET_VALIDITY``: Number of seconds the service tickets and proxy tickets are valid.\n  This is the maximal time between ticket issuance by the CAS and ticket validation by an\n  application. The default is ``60``.\n* ``CAS_PGT_VALIDITY``: Number of seconds the proxy granting tickets are valid.\n  The default is ``3600`` (1 hour).\n* ``CAS_TICKET_TIMEOUT``: Number of seconds a ticket is kept in the database before sending\n  Single Log Out request and being cleared. The default is ``86400`` (24 hours).\n\nTickets miscellaneous settings\n------------------------------\n\n* ``CAS_TICKET_LEN``: Default ticket length. All CAS implementation MUST support ST and PT\n  up to 32 chars, PGT and PGTIOU up to 64 chars and it is RECOMMENDED that all tickets up\n  to 256 chars are supports. Here the default is ``64``.\n* ``CAS_LT_LEN``: Length of the login tickets. Login tickets are only processed by ``django-cas-server``\n  thus there is no length restriction on it. The default is ``CAS_TICKET_LEN``.\n* ``CAS_ST_LEN``: Length of the service tickets. The default is ``CAS_TICKET_LEN``.\n  You may need to lower is to ``32`` if you use some old clients.\n* ``CAS_PT_LEN``: Length of the proxy tickets. The default is ``CAS_TICKET_LEN``.\n  This length should be the same as ``CAS_ST_LEN``. You may need to lower is to ``32``\n  if you use some old clients.\n* ``CAS_PGT_LEN``: Length of the proxy granting tickets. The default is ``CAS_TICKET_LEN``.\n* ``CAS_PGTIOU_LEN``: Length of the proxy granting tickets IOU. The default is ``CAS_TICKET_LEN``.\n\n* ``CAS_LOGIN_TICKET_PREFIX``: Prefix of login tickets. The default is ``\"LT\"``.\n* ``CAS_SERVICE_TICKET_PREFIX``: Prefix of service tickets. The default is ``\"ST\"``.\n  The CAS specification mandate that service tickets MUST begin with the characters ST\n  so you should not change this.\n* ``CAS_PROXY_TICKET_PREFIX``: Prefix of proxy ticket. The default is ``\"PT\"``.\n* ``CAS_PROXY_GRANTING_TICKET_PREFIX``: Prefix of proxy granting ticket. The default is ``\"PGT\"``.\n* ``CAS_PROXY_GRANTING_TICKET_IOU_PREFIX``: Prefix of proxy granting ticket IOU. The default is ``\"PGTIOU\"``.\n\n\nMysql backend settings\n----------------------\nDeprecated, see the `Sql backend settings`_.\nOnly usefull if you are using the mysql authentication backend:\n\n* ``CAS_SQL_HOST``: Host for the SQL server. The default is ``\"localhost\"``.\n* ``CAS_SQL_USERNAME``: Username for connecting to the SQL server.\n* ``CAS_SQL_PASSWORD``: Password for connecting to the SQL server.\n* ``CAS_SQL_DBNAME``: Database name.\n* ``CAS_SQL_DBCHARSET``: Database charset. The default is ``\"utf8\"``\n* ``CAS_SQL_USER_QUERY``: The query performed upon user authentication.\n  The username must be in field ``username``, the password in ``password``,\n  additional fields are used as the user attributes.\n  The default is ``\"SELECT user AS username, pass AS password, users.* FROM users WHERE user = %s\"``\n* ``CAS_SQL_PASSWORD_CHECK``: The method used to check the user password. Must be one of the following:\n\n  * ``\"crypt\"`` (see <https://en.wikipedia.org/wiki/Crypt_(C)>), the password in the database\n    should begin this $\n  * ``\"ldap\"`` (see https://tools.ietf.org/id/draft-stroeder-hashed-userpassword-values-01.html)\n    the password in the database must begin with one of {MD5}, {SMD5}, {SHA}, {SSHA}, {SHA256},\n    {SSHA256}, {SHA384}, {SSHA384}, {SHA512}, {SSHA512}, {CRYPT}.\n  * ``\"hex_HASH_NAME\"`` with ``HASH_NAME`` in md5, sha1, sha224, sha256, sha384, sha512.\n    The hashed password in the database is compare to the hexadecimal digest of the clear\n    password hashed with the corresponding algorithm.\n  * ``\"plain\"``, the password in the database must be in clear.\n\n  The default is ``\"crypt\"``.\n\n\nSql backend settings\n--------------------\nOnly usefull if you are using the sql authentication backend. You must add a ``\"cas_server\"``\ndatabase to `settings.DATABASES <https://docs.djangoproject.com/en/stable/ref/settings/#std:setting-DATABASES>`__\nas defined in the django documentation. It is then the database\nuse by the sql backend.\n\n* ``CAS_SQL_USER_QUERY``: The query performed upon user authentication.\n  The username must be in field ``username``, the password in ``password``,\n  additional fields are used as the user attributes.\n  The default is ``\"SELECT user AS username, pass AS password, users.* FROM users WHERE user = %s\"``\n* ``CAS_SQL_PASSWORD_CHECK``: The method used to check the user password. Must be one of the following:\n\n  * ``\"crypt\"`` (see <https://en.wikipedia.org/wiki/Crypt_(C)>), the password in the database\n    should begin this $\n  * ``\"ldap\"`` (see https://tools.ietf.org/id/draft-stroeder-hashed-userpassword-values-01.html)\n    the password in the database must begin with one of {MD5}, {SMD5}, {SHA}, {SSHA}, {SHA256},\n    {SSHA256}, {SHA384}, {SSHA384}, {SHA512}, {SSHA512}, {CRYPT}.\n  * ``\"hex_HASH_NAME\"`` with ``HASH_NAME`` in md5, sha1, sha224, sha256, sha384, sha512.\n    The hashed password in the database is compare to the hexadecimal digest of the clear\n    password hashed with the corresponding algorithm.\n  * ``\"plain\"``, the password in the database must be in clear.\n\n  The default is ``\"crypt\"``.\n* ``CAS_SQL_PASSWORD_CHARSET``: Charset the SQL users passwords was hash with. This is needed to\n  encode the user sended password before hashing it for comparison. The default is ``\"utf-8\"``.\n\n\nLdap backend settings\n---------------------\nOnly usefull if you are using the ldap authentication backend:\n\n* ``CAS_LDAP_SERVER``: Address of the LDAP server. The default is ``\"localhost\"``.\n* ``CAS_LDAP_USER``: User bind address, for example ``\"cn=admin,dc=crans,dc=org\"`` for\n  connecting to the LDAP server.\n* ``CAS_LDAP_PASSWORD``: Password for connecting to the LDAP server.\n* ``CAS_LDAP_BASE_DN``: LDAP search base DN, for example ``\"ou=data,dc=crans,dc=org\"``.\n* ``CAS_LDAP_USER_QUERY``: Search filter for searching user by username. User inputed usernames are\n  escaped using ``ldap3.utils.conv.escape_bytes``. The default is ``\"(uid=%s)\"``\n* ``CAS_LDAP_USERNAME_ATTR``: Attribute used for users usernames. The default is ``\"uid\"``\n* ``CAS_LDAP_PASSWORD_ATTR``: Attribute used for users passwords. The default is ``\"userPassword\"``\n* ``CAS_LDAP_PASSWORD_CHECK``: The method used to check the user password. Must be one of the following:\n\n  * ``\"crypt\"`` (see <https://en.wikipedia.org/wiki/Crypt_(C)>), the password in the database\n    should begin this $\n  * ``\"ldap\"`` (see https://tools.ietf.org/id/draft-stroeder-hashed-userpassword-values-01.html)\n    the password in the database must begin with one of {MD5}, {SMD5}, {SHA}, {SSHA}, {SHA256},\n    {SSHA256}, {SHA384}, {SSHA384}, {SHA512}, {SSHA512}, {CRYPT}.\n  * ``\"hex_HASH_NAME\"`` with ``HASH_NAME`` in md5, sha1, sha224, sha256, sha384, sha512.\n    The hashed password in the database is compare to the hexadecimal digest of the clear\n    password hashed with the corresponding algorithm.\n  * ``\"plain\"``, the password in the database must be in clear.\n  * ``\"bind``, the user credentials are used to bind to the ldap database and retreive the user\n    attribute. In this mode, the settings ``CAS_LDAP_PASSWORD_ATTR`` and ``CAS_LDAP_PASSWORD_CHARSET``\n    are ignored, and it is the ldap server that perform password check. The counterpart is that\n    the user attributes are only available upon user password check and so are cached for later\n    use. All the other modes directly fetch the user attributes from the database whenever there\n    are needed. This mean that is you use this mode, they can be some difference between the\n    attributes in database and the cached ones if changes happend in the database after the user\n    authentiate. See the parameter ``CAS_TGT_VALIDITY`` to force user to reauthenticate periodically.\n\n  The default is ``\"ldap\"``.\n* ``CAS_LDAP_PASSWORD_CHARSET``: Charset the LDAP users passwords was hash with. This is needed to\n  encode the user sended password before hashing it for comparison. The default is ``\"utf-8\"``.\n\n\nTest backend settings\n---------------------\nOnly usefull if you are using the test authentication backend:\n\n* ``CAS_TEST_USER``: Username of the test user. The default is ``\"test\"``.\n* ``CAS_TEST_PASSWORD``: Password of the test user. The default is ``\"test\"``.\n* ``CAS_TEST_ATTRIBUTES``: Attributes of the test user. The default is\n  ``{'nom': 'Nymous', 'prenom': 'Ano', 'email': 'anonymous@example.net',\n  'alias': ['demo1', 'demo2']}``.\n\n\nAuthentication backend\n======================\n\n``django-cas-server`` comes with some authentication backends:\n\n* dummy backend ``cas_server.auth.DummyAuthUser``: all authentication attempt fails.\n* test backend ``cas_server.auth.TestAuthUser``: username, password and returned attributes\n  for the user are defined by the ``CAS_TEST_*`` settings.\n* django backend ``cas_server.auth.DjangoAuthUser``: Users are authenticated against django users system.\n  This is the default backend. The returned attributes are the fields available on the user model.\n* mysql backend ``cas_server.auth.MysqlAuthUser``: Deprecated, use the sql backend instead.\n  see the `Mysql backend settings`_ section. The returned attributes are those return by sql query\n  ``CAS_SQL_USER_QUERY``.\n* sql backend ``cas_server.auth.SqlAuthUser``: see the `Sql backend settings`_ section.\n  The returned attributes are those return by sql query ``CAS_SQL_USER_QUERY``.\n* ldap backend ``cas_server.auth.LdapAuthUser``: see the `Ldap backend settings`_ section.\n  The returned attributes are those of the ldap node returned by the query filter ``CAS_LDAP_USER_QUERY``.\n* federated backend ``cas_server.auth.CASFederateAuth``: It is automatically used then ``CAS_FEDERATE`` is ``True``.\n  You should not set it manually without setting ``CAS_FEDERATE`` to ``True``.\n\n\nLogs\n====\n\n``django-cas-server`` logs most of its actions. To enable login, you must set the ``LOGGING``\n(https://docs.djangoproject.com/en/stable/topics/logging) variable in ``settings.py``.\n\nUsers successful actions (login, logout) are logged with the level ``INFO``, failures are logged\nwith the level ``WARNING`` and user attributes transmitted to a service are logged with the level ``DEBUG``.\n\nFor example to log to syslog you can use :\n\n.. code-block:: python\n\n    LOGGING = {\n        'version': 1,\n        'disable_existing_loggers': False,\n        'formatters': {\n            'cas_syslog': {\n                'format': 'cas: %(levelname)s %(message)s'\n            },\n        },\n        'handlers': {\n            'cas_syslog': {\n                'level': 'INFO',\n                'class': 'logging.handlers.SysLogHandler',\n                'address': '/dev/log',\n                'formatter': 'cas_syslog',\n            },\n        },\n        'loggers': {\n            'cas_server': {\n                'handlers': ['cas_syslog'],\n                'level': 'INFO',\n                'propagate': True,\n            },\n        },\n    }\n\n\nOr to log to a file:\n\n.. code-block:: python\n\n    LOGGING = {\n        'version': 1,\n        'disable_existing_loggers': False,\n        'formatters': {\n            'cas_file': {\n                'format': '%(asctime)s %(levelname)s %(message)s'\n            },\n        },\n        'handlers': {\n            'cas_file': {\n                'level': 'INFO',\n                'class': 'logging.FileHandler',\n                'filename': '/tmp/cas_server.log',\n                'formatter': 'cas_file',\n            },\n        },\n        'loggers': {\n            'cas_server': {\n                'handlers': ['cas_file'],\n                'level': 'INFO',\n                'propagate': True,\n            },\n        },\n    }\n\nService Patterns\n================\n\nIn a CAS context, ``Service`` refers to the application the client is trying to access.\nBy extension we use ``service`` for the URL of such an application.\n\nBy default, ``django-cas-server`` do not allow any service to use the CAS to authenticate users.\nIn order to allow services, you need to connect to the django admin interface using a django\nsuperuser, and add a first service pattern.\n\nA service pattern comes with 9 fields:\n\n* ``Position``: an integer used to change the order in which services are matched against\n  service patterns.\n* ``Name``: the name of the service pattern. It will be displayed to the users asking for a ticket\n  for a service matching this service pattern on the login page.\n* ``Pattern``: a regular expression used to match services.\n* ``User field``: the user attribute to use as username for services matching this service pattern.\n  Leave it empty to use the login name.\n* ``Restrict username``: if checked, only login name defined below are allowed to get tickets\n  for services matching this service pattern.\n* ``Proxy``: if checked, allow the creation of Proxy Ticket for services matching this\n  service pattern. Otherwise, only Service Ticket will be created.\n* ``Proxy callback``: if checked, services matching this service pattern are allowed to retrieve Proxy\n  Granting Ticket. A service with a Proxy Granting Ticket can get Proxy Ticket for other services.\n  Hence you must only check this for trusted services that need it. (For instance, a webmail needs\n  Proxy Ticket to authenticate himself as the user to the imap server).\n* ``Single log out``: Check it to send Single Log Out requests to authenticated services matching\n  this service pattern. SLO requests are send to all services the user is authenticated to then\n  the user disconnect.\n* ``Single log out callback``: The http(s) URL to POST the SLO requests. If empty, the service URL\n  is used. This field is useful to allow non http services (imap, smtp, ftp) to handle SLO requests.\n\nA service pattern has 4 associated models:\n\n* ``Usernames``: a list of username associated with the ``Restrict username`` field\n* ``Replace attribut names``: a list of user attributes to send to the service. Choose the name\n  used for sending the attribute by setting ``Remplacement`` or leave it empty to leave it unchanged.\n* ``Replace attribut values``: a list of sent user attributes for which value needs to be tweak.\n  Replace the attribute value by the string obtained by replacing the leftmost non-overlapping\n  occurrences of ``pattern`` in string by ``replace``. In ``replace`` backslash escapes are processed.\n  Matched groups are captures by \\1, \\2, etc.\n* ``Filter attribut values``: a list of user attributes for which value needs to match a regular\n  expression. For instance, service A may need an email address, and you only want user with\n  an email address to connect to it. To do so, put ``email`` in ``Attribute`` and ``.*`` in ``pattern``.\n\nThen a user ask a ticket for a service, the service URL is compare against each service patterns\nsorted by ``position``. The first service pattern that matches the service URL is chosen.\nHence, you should give low ``position`` to very specific patterns like\n``^https://www\\.example\\.com(/.*)?$`` and higher ``position`` to generic patterns like ``^https://.*``.\nSo the service URL ``https://www.examle.com`` will use the service pattern for\n``^https://www\\.example\\.com(/.*)?$`` and not the one for ``^https://.*``.\n\n\nFederation mode\n===============\n\n``django-cas-server`` comes with a federation mode. Then ``CAS_FEDERATE`` is ``True``,\nuser are invited to choose an identity provider on the login page, then, they are redirected\nto the provider CAS to authenticate. This provider transmit to ``django-cas-server`` the user\nusername and attributes. The user is now logged in on ``django-cas-server`` and can use\nservices using ``django-cas-server`` as CAS.\n\nIn federation mode, the user attributes are cached upon user authentication. See the settings\n``CAS_TGT_VALIDITY`` to force users to reauthenticate periodically and allow ``django-cas-server``\nto refresh cached attributes.\n\nThe list of allowed identity providers is defined using the django admin application.\nWith the development server started, visit http://127.0.0.1:8000/admin/ to add identity providers.\n\nAn identity provider comes with 5 fields:\n\n* ``Position``: an integer used to tweak the order in which identity providers are displayed on\n  the login page. Identity providers are sorted using position first, then, on equal position,\n  using ``verbose name`` and then, on equal ``verbose name``, using ``suffix``.\n* ``Suffix``: the suffix that will be append to the username returned by the identity provider.\n  It must be unique.\n* ``Server url``: the URL to the identity provider CAS. For instance, if you are using\n  ``https://cas.example.org/login`` to authenticate on the CAS, the ``server url`` is\n  ``https://cas.example.org``\n* ``CAS protocol version``: the version of the CAS protocol to use to contact the identity provider.\n  The default is version 3.\n* ``Verbose name``: the name used on the login page to display the identity provider.\n* ``Display``: a boolean controlling the display of the identity provider on the login page.\n  Beware that this do not disable the identity provider, it just hide it on the login page.\n  User will always be able to log in using this provider by fetching ``/federate/provider_suffix``.\n\n\nIn federation mode, ``django-cas-server`` build user's username as follow:\n``provider_returned_username@provider_suffix``.\nChoose the provider returned username for ``django-cas-server`` and the provider suffix\nin order to make sense, as this built username is likely to be displayed to end users in\napplications.\n\n\nThen using federate mode, you should add one command to a daily crontab: ``cas_clean_federate``.\nThis command clean the local cache of federated user from old unused users.\n\n\nYou could for example do as bellow::\n\n  10   0  * * * cas-user /path/to/project/manage.py cas_clean_federate\n\n\n\n.. |travis| image:: https://badges.genua.fr/travis/nitmir/django-cas-server/master.svg\n    :target: https://travis-ci.org/nitmir/django-cas-server\n\n.. |pypi_version| image:: https://badges.genua.fr/pypi/v/django-cas-server.svg\n    :target: https://pypi.python.org/pypi/django-cas-server\n\n.. |github_version| image:: https://badges.genua.fr/github/tag/nitmir/django-cas-server.svg?label=github\n    :target: https://github.com/nitmir/django-cas-server/releases/latest\n\n.. |licence| image:: https://badges.genua.fr/pypi/l/django-cas-server.svg\n    :target: https://www.gnu.org/licenses/gpl-3.0.html\n\n.. |codacy| image:: https://badges.genua.fr/codacy/grade/255c21623d6946ef8802fa7995b61366/master.svg\n    :target: https://www.codacy.com/app/valentin-samir/django-cas-server\n\n.. |coverage| image:: https://intranet.genua.fr/coverage/badge/django-cas-server/master.svg\n    :target: https://badges.genua.fr/coverage/django-cas-server/master\n\n.. |doc| image:: https://badges.genua.fr/local/readthedocs/?version=latest\n    :target: http://django-cas-server.readthedocs.io\n",
    "docs_url": "https://pythonhosted.org/django-cas-server/",
    "download_url": "https://github.com/nitmir/django-cas-server/releases/latest",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/nitmir/django-cas-server",
    "keywords": "django",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-cas-server",
    "platform": "",
    "project_url": "https://pypi.org/project/django-cas-server/",
    "release_url": "https://pypi.org/project/django-cas-server/0.9.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A Django Central Authentication Service server implementing the CAS Protocol 3.0 Specification",
    "version": "0.9.0"
  },
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "719042a1402953528f4b1001d99dcb59",
          "sha256": "009a090fda064d562e83f07fa8669c44d4ab03bd61dbb0f179f9834db66ae4c3"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "719042a1402953528f4b1001d99dcb59",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 44278,
        "upload_time": "2015-12-12T12:30:14",
        "url": "https://files.pythonhosted.org/packages/eb/08/43bd4c33679c8f7358a31c7e4419e9f486e5ad57fbda86efaa88a9e1782b/django-cas-server-0.2.1.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e40c39d7b7f029088756042646b7f783",
          "sha256": "5eaae25866e95a2319d858f8ac05062f3b3623480cbd65186898dc97d95c9605"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e40c39d7b7f029088756042646b7f783",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 44278,
        "upload_time": "2015-12-12T12:54:25",
        "url": "https://files.pythonhosted.org/packages/a8/cc/dd23e9566c56ce41ae60da30392b650c1765c413c9da59bd21dcfff43bb5/django-cas-server-0.3.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "68a323ee7063a72169b75970a1325ec7",
          "sha256": "1207b61f5f255693d53b6a9a2f0fafd78e522ef596ad0fef574c3679dfbfa700"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "68a323ee7063a72169b75970a1325ec7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 44273,
        "upload_time": "2015-12-12T13:01:51",
        "url": "https://files.pythonhosted.org/packages/46/da/ec060745d80449bb675f1c635e9ff71016002fafd98799c4a1605abf1bda/django-cas-server-0.3.1.tar.gz"
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1bc76ad0fd4b575927af6bcdc63f2af4",
          "sha256": "6ff8ea04e36e70687e7c74d734f76bb68d4435a1e0168571a131432997e0866d"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1bc76ad0fd4b575927af6bcdc63f2af4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30335,
        "upload_time": "2015-12-12T13:23:58",
        "url": "https://files.pythonhosted.org/packages/fe/4e/3d27b72b66749157cd8fcd1e8354820a940a65dbe2936e504e8bbb3436f8/django-cas-server-0.3.3.tar.gz"
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e0c6f0823941f43470e0d71359661b04",
          "sha256": "281ec8fba37bb5aa4db9def9f7f46382395c422c1de3707d91ef159fecf15c11"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e0c6f0823941f43470e0d71359661b04",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 47121,
        "upload_time": "2015-12-12T13:29:04",
        "url": "https://files.pythonhosted.org/packages/67/dc/00713089eb731bbc97379ccc7cc84627a7474b1623898c03fcb35766898c/django-cas-server-0.3.4.tar.gz"
      }
    ],
    "0.3.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4b6dd8d9cd41969f8d596a6cc9a6da0d",
          "sha256": "a439b43447f1607f152297e879f69fbe971c9dc15f9acb2f8f64576ebfb066f7"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4b6dd8d9cd41969f8d596a6cc9a6da0d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 49375,
        "upload_time": "2015-12-12T17:09:17",
        "url": "https://files.pythonhosted.org/packages/51/2b/90b883e8960406c033cc54ac0f1cfae82134fe1a7f69a4dd6b0838596a4e/django-cas-server-0.3.5.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c07f0cd0923ee6feb6d90197266b0c0d",
          "sha256": "f91c51fa74baa569be77557758e1cf5d6f453145cbfcf86558006a63f65b56a0"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c07f0cd0923ee6feb6d90197266b0c0d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 52493,
        "upload_time": "2015-12-15T11:42:37",
        "url": "https://files.pythonhosted.org/packages/95/e0/eef171af0cdf18aa4aca9004deff020bca5799500bb70be0ac0cc8ee4d17/django-cas-server-0.4.tar.gz"
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2ae966004f07e388f594a3e433c691b7",
          "sha256": "0c6ebed3e096915e67110596c26bf3a1e5160e4119603f086965c85ab013b469"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2ae966004f07e388f594a3e433c691b7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 52958,
        "upload_time": "2015-12-23T13:46:22",
        "url": "https://files.pythonhosted.org/packages/df/93/57cc512c9d690d071f5d31566ccae7a022346d81d23c6da8ec5bbde94b74/django-cas-server-0.4.1.tar.gz"
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7d24b59bfd2b8d525abd6de10426032d",
          "sha256": "39f8523ff672f31003db7ff211264089895acee02e5fb6a886c527f3d4e2a378"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7d24b59bfd2b8d525abd6de10426032d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 53781,
        "upload_time": "2016-03-18T12:07:30",
        "url": "https://files.pythonhosted.org/packages/ed/e9/dbefd2d53e250dbb6e0298a908b5f155ce098d47eee97fd87d073da51081/django-cas-server-0.4.2.tar.gz"
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f7a666e2dbde05787a68f60c6a35c63d",
          "sha256": "614a0bbb861be52a12cacc16ff4e6a169c246a9f7adcf212d06027584ff04ac5"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f7a666e2dbde05787a68f60c6a35c63d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 53809,
        "upload_time": "2016-03-18T12:28:33",
        "url": "https://files.pythonhosted.org/packages/92/c6/759afea70b3d59d90b918f1b9fabd32f6f772b08222e93b73934244f5873/django-cas-server-0.4.3.tar.gz"
      }
    ],
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bf26886ea4d473498236d82b7b14d61d",
          "sha256": "9583f894599daca4733c8991f08e6a9f62565a192d1255b9ee607cf35c13e443"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "bf26886ea4d473498236d82b7b14d61d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 53893,
        "upload_time": "2016-04-30T08:31:51",
        "url": "https://files.pythonhosted.org/packages/a5/2c/49302803e75905a4cbb48fa81cb4daab602fe70eb9bcb6b162f409a1fa01/django-cas-server-0.4.4.tar.gz"
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d748ab5bb81211e0f1a8231b7ea1bc6a",
          "sha256": "abf259e679d1035e3f251519f65db665e0168e74e972438e96d8216e0ff15ecb"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d748ab5bb81211e0f1a8231b7ea1bc6a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 96125,
        "upload_time": "2016-07-01T00:08:57",
        "url": "https://files.pythonhosted.org/packages/4b/6f/e7e4233b918188c00372bbb9f72ecef8417d062db1dc836e9a9febf20b0c/django-cas-server-0.5.0.tar.gz"
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4b002a61583db208cfe3fa860680a365",
          "sha256": "486110944e65918d43ad0da39b3ee814c2cb9432b7e7a2206ee1009d57ae7876"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4b002a61583db208cfe3fa860680a365",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 120381,
        "upload_time": "2016-07-06T12:55:23",
        "url": "https://files.pythonhosted.org/packages/52/65/3beccd9fdbceffb7d1921ada575a800716ec45bae159a4aa2971a5ec78d7/django-cas-server-0.6.0.tar.gz"
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a94d2d842542fcf47a0c585593d77b73",
          "sha256": "dd6301a95c38c58a786289ceff512ce9ee2d5d249c4295d40af80fd3389676a2"
        },
        "downloads": -1,
        "filename": "django_cas_server-0.6.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "a94d2d842542fcf47a0c585593d77b73",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 142686,
        "upload_time": "2016-07-27T14:03:35",
        "url": "https://files.pythonhosted.org/packages/67/6a/c3e27f86c42e0b54d5af9c5498a278c17247240c28cbf978d5eb82dc52ad/django_cas_server-0.6.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a56fe01d635c394d31d99a414a0a1ca2",
          "sha256": "bfb0452120bfdad7fd6ef71b069dbdb9842e134b68c68a9a7d87b18232a9210a"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.6.1.tar.gz",
        "has_sig": true,
        "md5_digest": "a56fe01d635c394d31d99a414a0a1ca2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 145893,
        "upload_time": "2016-07-27T14:03:29",
        "url": "https://files.pythonhosted.org/packages/e2/3b/33b81a4c08d69fdfbf64b5e13941aba45dd060ad976ebea4b9f419d9bb78/django-cas-server-0.6.1.tar.gz"
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "24fd8a7247b5d0563dfe5f0081fdb97a",
          "sha256": "99514aa4d6cdcf4f46a19b0412061d2e43cd898218c6b805f510eabf13b83081"
        },
        "downloads": -1,
        "filename": "django_cas_server-0.6.2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "24fd8a7247b5d0563dfe5f0081fdb97a",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 148915,
        "upload_time": "2016-08-02T12:36:32",
        "url": "https://files.pythonhosted.org/packages/01/ef/a8a5094f508eeb280c11bcad49d9ee3aa5dce542171f83ce245b4a022607/django_cas_server-0.6.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "371f50b5daf2dc8dba26527901876214",
          "sha256": "079060d51c1c574f4815f007077b0f69a0ad87d49a2e1c2634e1f59303e15ae7"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.6.2.tar.gz",
        "has_sig": true,
        "md5_digest": "371f50b5daf2dc8dba26527901876214",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 156389,
        "upload_time": "2016-08-02T12:36:22",
        "url": "https://files.pythonhosted.org/packages/8c/46/db5c5a08d6709f0878614105bb9fd59138492df07e800bf566fd5eb1b682/django-cas-server-0.6.2.tar.gz"
      }
    ],
    "0.6.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7ede5c0fd7a2c616ad1e6b4e5e79655f",
          "sha256": "f7fe8672f3dcfedde0ea1aa437c06d09b7074dd976f2aab959d8714b969efafd"
        },
        "downloads": -1,
        "filename": "django_cas_server-0.6.3-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "7ede5c0fd7a2c616ad1e6b4e5e79655f",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 155362,
        "upload_time": "2016-08-14T05:57:44",
        "url": "https://files.pythonhosted.org/packages/10/17/7976c45d03ccbf5f09772d8f3294c18e416b76326b2f12129093fbba15d6/django_cas_server-0.6.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6e63d64f6effece81f9af14d0fbdd9c1",
          "sha256": "ba393792c61908e7974a7b704e057151ab831754101fa3983b620dc0b08f493c"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.6.3.tar.gz",
        "has_sig": true,
        "md5_digest": "6e63d64f6effece81f9af14d0fbdd9c1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 158359,
        "upload_time": "2016-08-14T05:57:38",
        "url": "https://files.pythonhosted.org/packages/28/73/9f313e078087fc271477dad49fe4384e56c487cad4e50a0dc6305fe00a6f/django-cas-server-0.6.3.tar.gz"
      }
    ],
    "0.6.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "114c9fb2fb05507a90ab0ec59eef2330",
          "sha256": "a0ca4346a266945d74e4d0aaa500546aeb94b8d81c7450356cbb724404132eb3"
        },
        "downloads": -1,
        "filename": "django_cas_server-0.6.4-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "114c9fb2fb05507a90ab0ec59eef2330",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 156097,
        "upload_time": "2016-08-14T06:40:17",
        "url": "https://files.pythonhosted.org/packages/30/83/386807c37d6932cc4f6bf0d9f05b87fd35bd2bb3dc344714532af96f2177/django_cas_server-0.6.4-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c7b369aff3bed5464d8da290e737f774",
          "sha256": "724285ce4196d345c7d338e69ef72a7b9dca0f2672b48a2b8d388547d7435d33"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.6.4.tar.gz",
        "has_sig": true,
        "md5_digest": "c7b369aff3bed5464d8da290e737f774",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 158496,
        "upload_time": "2016-08-14T06:40:08",
        "url": "https://files.pythonhosted.org/packages/f9/33/47c099ea835999ae9876e360c3ff5476ed4c3b3491842afe2d3b78cdb20c/django-cas-server-0.6.4.tar.gz"
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0d7070af72e48311779d9e6ccba310d9",
          "sha256": "3cafcbfa098e15557674992dd4d1d20aaf10036ffb7fbdb309a3cf1bc5eb3d04"
        },
        "downloads": -1,
        "filename": "django_cas_server-0.7.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "0d7070af72e48311779d9e6ccba310d9",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 159158,
        "upload_time": "2016-08-24T21:11:14",
        "url": "https://files.pythonhosted.org/packages/ac/9e/916cccf44743cf2cfaa14cfe74fac3a2b7590d760116a9660f5de3c338b8/django_cas_server-0.7.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "0a11a96a2a1418cffab538b73f6e26e2",
          "sha256": "00a24e29935acecb02196fd632d6e1a325f3ea44ab2f826b17ac21b9141ed366"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.7.0.tar.gz",
        "has_sig": true,
        "md5_digest": "0a11a96a2a1418cffab538b73f6e26e2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 170814,
        "upload_time": "2016-08-24T21:11:07",
        "url": "https://files.pythonhosted.org/packages/e4/d1/79558114406b7aa96957932e9bba822a9855fd3f82497569d5463873a29f/django-cas-server-0.7.0.tar.gz"
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b3dd2b1b90c85e30bf32960bbdf2fc26",
          "sha256": "bcde5334ab65bba150bb323d0a3edbfd68881ed1e394b78ce90b5c9259c69c0d"
        },
        "downloads": -1,
        "filename": "django_cas_server-0.7.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "b3dd2b1b90c85e30bf32960bbdf2fc26",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 159964,
        "upload_time": "2016-08-24T21:19:26",
        "url": "https://files.pythonhosted.org/packages/35/1e/69f393229bab3ce49a731a9f37dfc37d55387c7c20cee213f741a42945c8/django_cas_server-0.7.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "c773d3c915e0b18edaecc4a6e0e0f939",
          "sha256": "1709072bb7f5a47233bf8dbdda79a67a7c714bb19808edee4d7a354325c8acf4"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.7.1.tar.gz",
        "has_sig": true,
        "md5_digest": "c773d3c915e0b18edaecc4a6e0e0f939",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 170949,
        "upload_time": "2016-08-24T21:19:19",
        "url": "https://files.pythonhosted.org/packages/bf/60/8f96909708eaa552e8279b3cc5dcdc016a83f788a6c323d3016e953edac4/django-cas-server-0.7.1.tar.gz"
      }
    ],
    "0.7.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7cfd9d9a6d8230c6a168905c7f7ee23d",
          "sha256": "afa544e037d4aa1455ca4db3b49a9affe0905ccfc948028913c4eeb79af5e3c6"
        },
        "downloads": -1,
        "filename": "django_cas_server-0.7.2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "7cfd9d9a6d8230c6a168905c7f7ee23d",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 155383,
        "upload_time": "2016-08-31T14:58:24",
        "url": "https://files.pythonhosted.org/packages/6d/d7/55c5a6a9c88f2bfe320882d64631c11767d726fbc8550ec13d6772a65000/django_cas_server-0.7.2-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "ab47c6ae78440ac03aaf8624a5db4aac",
          "sha256": "947e146da53a0835ca251f325711867a0e931120b2edf2f4774a5f1cfc162d0b"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.7.2.tar.gz",
        "has_sig": true,
        "md5_digest": "ab47c6ae78440ac03aaf8624a5db4aac",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 166150,
        "upload_time": "2016-08-31T14:58:17",
        "url": "https://files.pythonhosted.org/packages/3a/ab/4557d2e05662318d8f478232f24a0fb70fc00d5e623a83c296f9018c140f/django-cas-server-0.7.2.tar.gz"
      }
    ],
    "0.7.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8cef5c1c1d75ef981145da2ac46bf664",
          "sha256": "263130ee9222fca26364911306f4271d322967b44f6fabbdfef22daf14427d2b"
        },
        "downloads": -1,
        "filename": "django_cas_server-0.7.3-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "8cef5c1c1d75ef981145da2ac46bf664",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 155447,
        "upload_time": "2016-09-07T17:33:20",
        "url": "https://files.pythonhosted.org/packages/10/98/07dc1117117e6e199b520eb02554b00a4dc431e210ad00d5567369f0bfd0/django_cas_server-0.7.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "1272ada498ed4a968649fbdedff4d71b",
          "sha256": "68579a00d106fdc8b2b3cc7e08354ce1c450b64295216fb2f47027abfd0ec18b"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.7.3.tar.gz",
        "has_sig": true,
        "md5_digest": "1272ada498ed4a968649fbdedff4d71b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 166397,
        "upload_time": "2016-09-07T17:33:12",
        "url": "https://files.pythonhosted.org/packages/e3/17/27e368a0e96a489aba7344c5400a993472d0c80db201066433d1e2ffe420/django-cas-server-0.7.3.tar.gz"
      }
    ],
    "0.7.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1bdfeb79f54fc9d00fea1b7d6f6666d8",
          "sha256": "b309b468b771d5603ba6a746086532ef2372840b4ad124505d49d7ba3adf1af9"
        },
        "downloads": -1,
        "filename": "django_cas_server-0.7.4-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "1bdfeb79f54fc9d00fea1b7d6f6666d8",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 156387,
        "upload_time": "2016-09-07T18:35:36",
        "url": "https://files.pythonhosted.org/packages/50/6f/3135036da5516d24fff9ec561ec5dde844a38f6ff0e556c83b29624497c1/django_cas_server-0.7.4-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a915b98bcc950be4c9032c98754d8d5b",
          "sha256": "2ac0d261366d78ffa2c5889c9b8e54888e60f466cc97aff1390b8ef97adabc1e"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.7.4.tar.gz",
        "has_sig": true,
        "md5_digest": "a915b98bcc950be4c9032c98754d8d5b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 166756,
        "upload_time": "2016-09-07T18:35:29",
        "url": "https://files.pythonhosted.org/packages/9b/c9/bccca2aff5121e5f879e21e1991cf5807aeabb946d8d76d15a37e2cc8245/django-cas-server-0.7.4.tar.gz"
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a4ed63123d902005b3b7152197d92fc3",
          "sha256": "584a292fdf4e84e674e93351bf846a32af1c5c83b5e381cbc852fe926ddfb27c"
        },
        "downloads": -1,
        "filename": "django_cas_server-0.8.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "a4ed63123d902005b3b7152197d92fc3",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 160415,
        "upload_time": "2017-03-08T13:30:36",
        "url": "https://files.pythonhosted.org/packages/a1/ec/bd38754281107d0f011a996ca32eafdc795bff800ba7c49a79e831c8ea35/django_cas_server-0.8.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "787ad4a630b4d296267f940bf2c27c97",
          "sha256": "9cb73195fe8cfddab03d504a2a2df14a32d952d1867b7e76b19ba22e4a99e617"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.8.0.tar.gz",
        "has_sig": true,
        "md5_digest": "787ad4a630b4d296267f940bf2c27c97",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 170451,
        "upload_time": "2017-03-08T13:30:19",
        "url": "https://files.pythonhosted.org/packages/be/af/6eff85c9c1afd408450cd80d5a89150a2f4d6dd1e59812d997f6237a3f5a/django-cas-server-0.8.0.tar.gz"
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1074eb743ad8310956d0b7341306fc3f",
          "sha256": "e1179036a399c8bc324cc5e5e709ca839a6da93c8783298fbee8f8a16571aef5"
        },
        "downloads": -1,
        "filename": "django_cas_server-0.9.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "1074eb743ad8310956d0b7341306fc3f",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 176108,
        "upload_time": "2017-11-17T14:51:18",
        "url": "https://files.pythonhosted.org/packages/04/04/7031c463ffd475cfc8fea3c094e3bc53445d359191a7b440d83df4d83904/django_cas_server-0.9.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2f236fffb4199f92817699386778ca70",
          "sha256": "aaebe2ad0d55bb7c51aa5c0c7b5acf207201dfea63fca58dcc0d785c9f15a6ee"
        },
        "downloads": -1,
        "filename": "django-cas-server-0.9.0.tar.gz",
        "has_sig": true,
        "md5_digest": "2f236fffb4199f92817699386778ca70",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 177236,
        "upload_time": "2017-11-17T14:51:12",
        "url": "https://files.pythonhosted.org/packages/98/11/f26a989972edaf700a4c5591afec95b9e05827d6e1910a1dd4d62e5483bc/django-cas-server-0.9.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "1074eb743ad8310956d0b7341306fc3f",
        "sha256": "e1179036a399c8bc324cc5e5e709ca839a6da93c8783298fbee8f8a16571aef5"
      },
      "downloads": -1,
      "filename": "django_cas_server-0.9.0-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "1074eb743ad8310956d0b7341306fc3f",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "size": 176108,
      "upload_time": "2017-11-17T14:51:18",
      "url": "https://files.pythonhosted.org/packages/04/04/7031c463ffd475cfc8fea3c094e3bc53445d359191a7b440d83df4d83904/django_cas_server-0.9.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "2f236fffb4199f92817699386778ca70",
        "sha256": "aaebe2ad0d55bb7c51aa5c0c7b5acf207201dfea63fca58dcc0d785c9f15a6ee"
      },
      "downloads": -1,
      "filename": "django-cas-server-0.9.0.tar.gz",
      "has_sig": true,
      "md5_digest": "2f236fffb4199f92817699386778ca70",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 177236,
      "upload_time": "2017-11-17T14:51:12",
      "url": "https://files.pythonhosted.org/packages/98/11/f26a989972edaf700a4c5591afec95b9e05827d6e1910a1dd4d62e5483bc/django-cas-server-0.9.0.tar.gz"
    }
  ]
}