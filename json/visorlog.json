{
  "info": {
    "author": "Anfernee Jervis",
    "author_email": "anferneejervis@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3"
    ],
    "description": "Overview\n--------\n\nLogging for supervisor child processes using python's standard logging module.\n\nInstallation / Usage\n--------------------\n\nTo install use pip:\n\n    $ pip install visorlog\n\n\nOr clone the repo:\n\n    $ git clone https://github.com/ajpen/visorlog.git\n    $ python setup.py install\n\nContributing\n------------\n\nAny useful PRs allowed.\n\nExample\n-------\n\n  using python logging's file config:\n\n    [formatter_form01]\n    format=F1 %(asctime)s %(levelname)s %(message)s\n    datefmt=\n    class=logging.Formatter\n\n    [handler_hand01]\n    class=graypython.GraylogHTTPGelfHandler\n    level=NOTSET\n    args=('http://dockerhostip:12201/gelf', '__package__')\n\n    [formatters]\n    keys=form01\n\n    [loggers]\n    keys=root, webserver\n\n    [handlers]\n    keys=hand01\n\n    [logger_root]\n    level=DEBUG\n    handlers=hand01\n\n    [logger_webserver]\n    level=DEBUG\n    handlers=hand01\n    propagate=0\n    qualname=webserver\n\n\n\n  supervisor.conf:\n\n    [program:webserver]\n    command=python -m SimpleHTTPServer 8000\n    redirect_stderr=true\n    stdout_events_enabled=true\n\n    [eventlistener:visorlog]\n    command=vizorlog.py -c visorlog.conf -x\n    events=PROCESS_LOG\n\n\nTODO\n----\n\n- [x] Command line arguments with configuration file path\n- [ ] Set up based on file extension\n- [x] If the above were completed, dont need `resolve`\n- [ ] Add webserver command line option, for streaming logs live in a browser\n- [ ] Add command line tool for streaming logs.\n- [ ] Add better documentation (Usage, arguments, etc)",
    "docs_url": null,
    "download_url": "https://github.com/ajpen/visorlog/tarball/0.0.1",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/ajpen/visorlog",
    "keywords": "",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "visorlog",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/visorlog/",
    "release_url": "https://pypi.org/project/visorlog/0.0.1/",
    "requires_python": null,
    "summary": "Logging for supervisor child processes using the python standard logging module.",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "85cba4d6335219b0d39e45745d1f1afc",
          "sha256": "71e2c5da5d7054a12f72315fb88b0a01e0fd2a0e1ba0e3641f2922709942824a"
        },
        "downloads": 14,
        "filename": "visorlog-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "85cba4d6335219b0d39e45745d1f1afc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 2297,
        "upload_time": "2017-02-28T15:23:52",
        "url": "https://files.pythonhosted.org/packages/9d/15/a00637b4198fb095a2cee1b04cecc92c74e3a4be8a56d9450ba4d4f2e3be/visorlog-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "85cba4d6335219b0d39e45745d1f1afc",
        "sha256": "71e2c5da5d7054a12f72315fb88b0a01e0fd2a0e1ba0e3641f2922709942824a"
      },
      "downloads": 14,
      "filename": "visorlog-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "85cba4d6335219b0d39e45745d1f1afc",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 2297,
      "upload_time": "2017-02-28T15:23:52",
      "url": "https://files.pythonhosted.org/packages/9d/15/a00637b4198fb095a2cee1b04cecc92c74e3a4be8a56d9450ba4d4f2e3be/visorlog-0.0.1.tar.gz"
    }
  ]
}