{
  "info": {
    "author": "Roberto Abdelkader Mart\u00ednez P\u00e9rez",
    "author_email": "robertomartinezp@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Testing"
    ],
    "description": "behave-profiles\n===============\n\n`behave-profiles` helps you write more concise feature definitions,\ngrouping together sets of steps in the so called `profiles`. This\nprofiles are gherkin files with a group of steps.\n\n\nUsage\n-----\n\n1. Load the steps for your language\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFrom your `steps.py` file import the step definition for your language:\n\n.. code-block:: python\n\n   import behave_profiles.steps.en  # For English\n   # import behave_profiles.steps.es  # For Spanish\n\n\n2. Write a profile\n~~~~~~~~~~~~~~~~~~\n\n* Create a `profiles` directory inside your `features` directory.\n* Create a textfiles inside with a name ending in `.profile`. For\n  example `local_mysql_server.profile`.\n* Add steps to the profile file to set your environment.\n\n.. code-block:: gherkin\n\n   Given I have a working MySQL database server\n     And I create the database schema in the MySQL server\n     And I accept TCP connections to the port 3306 from 127.0.0.1\n\n\n3. Reuse your profile as many times as you want\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Now you can use the `behave-profiles` steps to call your profiles:\n\n.. code-block:: gherkin\n\n   Feature: My new feature\n\n   Background:\n       Given the profile \"local_mysql_server\"\n\n   Scenario: My first\n       ...\n       ...\n\n\n* If you need to use multiple profiles in your feature file, you can use\n  the step \"the following profiles\":\n\n.. code-block:: gherkin\n\n   Feature: My new feature 2\n\n   Background:\n       Given the following profiles\n         | profiles                   |\n         | local_mysql_server         |\n         | running_application_server |\n         | website_admin_user         |\n\n   Scenario: My first\n       ...\n       ...\n\n\n4. Grouping profiles together\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you end having to load multiple groups of profiles all the time you\ncan make a group of profiles making a profile of... well profiles.\n\nGiven the last example, you can make a new profile that loads those\nthree profiles. For example, you can name this new profile\n\"fully_working_application.profile\":\n\n.. code-block:: gherkin\n\n   Given the following profiles\n     | profiles                   |\n     | local_mysql_server         |\n     | running_application_server |\n     | website_admin_user         |\n\nAnd you can use it as any other profile:\n\n.. code-block:: gherkin\n\n   Given the profile \"fully_woking_application\"",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/buguroo/behave-profiles",
    "keywords": "bdd testing behave metasteps",
    "license": "LGPLv3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "behave-profiles",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/behave-profiles/",
    "release_url": "https://pypi.org/project/behave-profiles/0.0.2/",
    "requires_python": null,
    "summary": "Reduce feature boilerplate defining testing profiles",
    "version": "0.0.2"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "634cce840670e645c667c3439a7ff52e",
          "sha256": "2e17990c444ef0aefab0188980203ce1916b63ab6c86907cd6aaa10f5eb0ea59"
        },
        "downloads": 0,
        "filename": "behave-profiles-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "634cce840670e645c667c3439a7ff52e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3561,
        "upload_time": "2017-05-09T13:14:42",
        "url": "https://files.pythonhosted.org/packages/78/56/40d3c37e117c634b755a90ac1176ec1619e446a0c5b504a08e3f23eddf0f/behave-profiles-0.0.1.tar.gz"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bce8d6153c5eb4b1348f61d6de79f731",
          "sha256": "142a30af88fc8b331d7ec5e405df247311aafae96c64a64c57b3a40207a1a015"
        },
        "downloads": 0,
        "filename": "behave-profiles-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bce8d6153c5eb4b1348f61d6de79f731",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3578,
        "upload_time": "2017-05-23T12:36:24",
        "url": "https://files.pythonhosted.org/packages/68/19/d8be7eacd0ea4614dacd959b347295bc2840f57604b754052c53c2a040ae/behave-profiles-0.0.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "bce8d6153c5eb4b1348f61d6de79f731",
        "sha256": "142a30af88fc8b331d7ec5e405df247311aafae96c64a64c57b3a40207a1a015"
      },
      "downloads": 0,
      "filename": "behave-profiles-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "bce8d6153c5eb4b1348f61d6de79f731",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3578,
      "upload_time": "2017-05-23T12:36:24",
      "url": "https://files.pythonhosted.org/packages/68/19/d8be7eacd0ea4614dacd959b347295bc2840f57604b754052c53c2a040ae/behave-profiles-0.0.2.tar.gz"
    }
  ]
}