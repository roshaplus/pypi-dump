{
  "info": {
    "author": "Daniel Roy Greenfeld",
    "author_email": "pydanny@gmail.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development"
    ],
    "description": "cookiecutter-django\r\n=======================\r\n\r\n.. image:: https://requires.io/github/pydanny/cookiecutter-django/requirements.svg?branch=master\r\n     :target: https://requires.io/github/pydanny/cookiecutter-django/requirements/?branch=master\r\n     :alt: Requirements Status\r\n\r\n.. image:: https://travis-ci.org/pydanny/cookiecutter-django.svg?branch=master\r\n     :target: https://travis-ci.org/pydanny/cookiecutter-django?branch=master\r\n     :alt: Build Status\r\n\r\n.. image:: https://badges.gitter.im/Join Chat.svg\r\n   :target: https://gitter.im/pydanny/cookiecutter-django?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\r\n\r\n\r\nA Cookiecutter_ template for Django.\r\n\r\n.. _cookiecutter: https://github.com/audreyr/cookiecutter\r\n\r\nFeatures\r\n---------\r\n\r\n* For Django 1.9\r\n* Renders Django projects with 100% test coverage\r\n* Twitter Bootstrap_ v4.0.0 - alpha_\r\n* End-to-end via Hitch_\r\n* AngularJS_\r\n* 12-Factor_ based settings via django-environ_\r\n* Optimized development and production settings\r\n* Registration via django-allauth_\r\n* Comes with custom user model ready to go.\r\n* Grunt build for compass and livereload\r\n* Basic e-mail configurations for sending emails via Mailgun_\r\n* Media storage using Amazon S3\r\n* Docker support using docker-compose_ for development and production\r\n* Procfile_ for deploying to Heroku\r\n\r\nOptional Integrations\r\n---------------------\r\n\r\n*These features can be enabled during initial project setup.*\r\n\r\n* Serve static files from Amazon S3 or Whitenoise_\r\n* Configuration for Celery_\r\n* Integration with MailHog_ for local email testing\r\n* Integration with Sentry_ for error logging\r\n* Integration with NewRelic_ for performance monitoring\r\n* Integration with Opbeat_ for performance monitoring\r\n\r\n.. _alpha: http://blog.getbootstrap.com/2015/08/19/bootstrap-4-alpha/\r\n.. _Hitch: https://github.com/hitchtest/hitchtest\r\n.. _Bootstrap: https://github.com/twbs/bootstrap\r\n.. _AngularJS: https://github.com/angular/angular.js\r\n.. _django-environ: https://github.com/joke2k/django-environ\r\n.. _12-Factor: http://12factor.net/\r\n.. _django-allauth: https://github.com/pennersr/django-allauth\r\n.. _django-avatar: https://github.com/jezdez/django-avatar/\r\n.. _Procfile: https://devcenter.heroku.com/articles/procfile\r\n.. _Mailgun: https://mailgun.com/\r\n.. _Whitenoise: https://whitenoise.readthedocs.org/\r\n.. _Celery: http://www.celeryproject.org/\r\n.. _MailHog: https://github.com/mailhog/MailHog\r\n.. _Sentry: https://getsentry.com\r\n.. _NewRelic: https://newrelic.com\r\n.. _docker-compose: https://www.github.com/docker/compose\r\n.. _Opbeat: https://opbeat.com/\r\n\r\n\r\nConstraints\r\n-----------\r\n\r\n* Only maintained 3rd party libraries are used.\r\n* PostgreSQL everywhere (9.0+)\r\n* Environment variables for configuration (This won't work with Apache/mod_wsgi).\r\n\r\n\r\nUsage\r\n------\r\n\r\nLet's pretend you want to create a Django project called \"redditclone\". Rather than using `startproject`\r\nand then editing the results to include your name, email, and various configuration issues that always get forgotten until the worst possible moment, get cookiecutter_ to do all the work.\r\n\r\nFirst, get cookiecutter. Trust me, it's awesome::\r\n\r\n    $ pip install cookiecutter\r\n\r\nNow run it against this repo::\r\n\r\n    $ cookiecutter https://github.com/pydanny/cookiecutter-django.git\r\n\r\nYou'll be prompted for some questions, answer them, then it will create a Django project for you.\r\n\r\n\r\n**Warning**: After this point, change 'Daniel Greenfeld', 'pydanny', etc to your own information.\r\n\r\n**Warning**: repo_name must be a valid Python module name or you will have issues on imports.\r\n\r\nIt prompts you for questions. Answer them::\r\n\r\n    Cloning into 'cookiecutter-django'...\r\n    remote: Counting objects: 550, done.\r\n    remote: Compressing objects: 100% (310/310), done.\r\n    remote: Total 550 (delta 283), reused 479 (delta 222)\r\n    Receiving objects: 100% (550/550), 127.66 KiB | 58 KiB/s, done.\r\n    Resolving deltas: 100% (283/283), done.\r\n    project_name [project_name]: Reddit Clone\r\n    repo_name [Reddit_Clone]: reddit\r\n    author_name [Your Name]: Daniel Greenfeld\r\n    email [Your email]: pydanny@gmail.com\r\n    description [A short description of the project.]: A reddit clone.\r\n    domain_name [example.com]: myreddit.com\r\n    version [0.1.0]: 0.0.1\r\n    timezone [UTC]:\r\n    now [2015/11/22]: 2015/11/22\r\n    year [2015]:\r\n    use_whitenoise [y]: n\r\n    use_celery [n]: y\r\n    use_mailhog [n]: n\r\n    use_sentry [n]: y\r\n    use_newrelic [n]: y\r\n    use_opbeat [n]: y\r\n    windows [n]: n\r\n    use_python2 [n]: y\r\n\r\n\r\nEnter the project and take a look around::\r\n\r\n    $ cd reddit/\r\n    $ ls\r\n\r\nCreate a GitHub repo and push it there::\r\n\r\n    $ git init\r\n    $ git add .\r\n    $ git commit -m \"first awesome commit\"\r\n    $ git remote add origin git@github.com:pydanny/redditclone.git\r\n    $ git push -u origin master\r\n\r\nNow take a look at your repo. Don't forget to carefully look at the generated README. Awesome, right?\r\n\r\nFor development, see the following for local development:\r\n\r\n* `Developing locally`_\r\n* `Developing locally using docker`_\r\n\r\n.. _`Developing locally`: http://cookiecutter-django.readthedocs.org/en/latest/developing-locally.html\r\n.. _`Developing locally using docker`: http://cookiecutter-django.readthedocs.org/en/latest/developing-locally-docker.html\r\n\r\nSupport This Project\r\n---------------------------\r\n\r\nThis project is maintained by volunteers. Support their efforts by spreading the word about:\r\n\r\n.. image:: https://s3.amazonaws.com/tsacademy/images/tsa-logo-250x60-transparent-01.png\r\n   :name: Two Scoops Academy\r\n   :align: center\r\n   :alt: Two Scoops Academy\r\n   :target: http://www.twoscoops.academy/\r\n\r\nFor Readers of Two Scoops of Django 1.8\r\n--------------------------------------------\r\n\r\nYou may notice that some elements of this project do not exactly match what we describe in chapter 3. The reason for that is this project, amongst other things, serves as a test bed for trying out new ideas and concepts. Sometimes they work, sometimes they don't, but the end result is that it won't necessarily match precisely what is described in the book I co-authored.\r\n\r\n\"Your Stuff\"\r\n-------------\r\n\r\nScattered throughout the Python and HTML of this project are places marked with \"your stuff\". This is where third-party libraries are to be integrated with your project.\r\n\r\nReleases\r\n--------\r\n\r\nWant a stable release? You can find them at https://github.com/pydanny/cookiecutter-django/releases\r\n\r\n\r\nNot Exactly What You Want?\r\n---------------------------\r\n\r\nThis is what I want. *It might not be what you want.* Don't worry, you have options:\r\n\r\nFork This\r\n~~~~~~~~~~\r\n\r\nIf you have differences in your preferred setup, I encourage you to fork this to create your own version.\r\nOnce you have your fork working, let me know and I'll add it to a '*Similar Cookiecutter Templates*' list here.\r\nIt's up to you whether or not to rename your fork.\r\n\r\nIf you do rename your fork, I encourage you to submit it to the following places:\r\n\r\n* cookiecutter_ so it gets listed in the README as a template.\r\n* The cookiecutter grid_ on Django Packages.\r\n\r\n.. _cookiecutter: https://github.com/audreyr/cookiecutter\r\n.. _grid: https://www.djangopackages.com/grids/g/cookiecutters/\r\n\r\nOr Submit a Pull Request\r\n~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nI also accept pull requests on this, if they're small, atomic, and if they make my own project development experience better.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/pydanny/cookiecutter-django",
    "keywords": "cookiecutter,Python,projects,project templates,django,skeleton,scaffolding,project directory,setup.py",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cookiecutter-django",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/cookiecutter-django/",
    "release_url": "https://pypi.org/project/cookiecutter-django/1.9/",
    "requires_python": null,
    "summary": "A Cookiecutter template for creating production-ready Django projects quickly.",
    "version": "1.9"
  },
  "releases": {
    "1.0": [],
    "1.8": [],
    "1.8.5": [],
    "1.8.6": [],
    "1.9": []
  },
  "urls": []
}