{
  "info": {
    "author": "Pauli Rikula",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# python-category-equations\n\n\n@copyright: 2010 - 2018 by Pauli Rikula <pauli.rikula@gmail.com>\n\n@license: MIT <http://www.opensource.org/licenses/mit-license.php>\n\n\nCreate category like equations for the given operator in which\nthe underlaying '+' and '-' operations are basic set operations called union and discard.\nThe multiplication operator '*' connects sources to sinks. The equation system also has\na Identity 'I' and zerO 'O' terms. For futher details search 'category theory'\nfrom the Wikipedia and do your own maths.\n\n\n\n\nHere our connector operation is print function called 'debug' which\nprints an arrow between two objects:\n\n    >>> debug('a', 'b')\n    a -> b\n\n    >>> debug('b', 'a')\n    b -> a\n\n    >>> debug('a', 'a')\n    a -> a\n\nGet I and O singletons and class C, which use previously defined debug -function.\n\n    >>> I, O, C = from_operator(debug)\n    >>> I == I\n    True\n    >>> O == I\n    False\n    >>> C(1)\n    C(1)\n\nThe items do have differing sinks and sources:\n\n    >>> I.sinks\n    {I}\n    >>> I.sources\n    {I}\n\n    >>> O.sinks\n    set()\n    >>> O.sources\n    set()\n\n    >>> C(1).sinks\n    {1}\n    >>> C(1).sources\n    {1}\n\n\nYou can write additions also with this notation\n\n    >>> C(1,2) == C(1) + C(2)\n    True\n\n\nThe multiplication connects sources to sinks like this:\n\n    >>> (C(1,2) * C(3,4)).evaluate()\n    1 -> 3\n    1 -> 4\n    2 -> 3\n    2 -> 4\n\n    >>> (C(3,4) * C(1,2)).sinks\n    {3, 4}\n\n    >>> (C(3,4) * C(1,2)).sources\n    {1, 2}\n\n\nBy combining the two previous examples:\n\n    >>> C(1,2) * C(3,4) == (C(1) + C(2)) * (C(3) + C(4))\n    True\n\nThe order inside C(...) does not matter:\n\n    >>> (C(1,2) * C(3,4)) == (C(2,1) * C(4,3))\n    True\n\nOn the other hand you can not swap the terms like:\n\n    >>> (C(1,2) * C(3,4)) == (C(3,4) * C(1,2))\n    False\n\nBecause:\n\n    >>> (C(3,4) * C(1,2)).evaluate()\n    3 -> 1\n    3 -> 2\n    4 -> 1\n    4 -> 2\n\nThe discard operation works like this:\n\n    >>> (C(3,4) * C(1,2) - C(4) * C(1)).evaluate()\n    3 -> 1\n    3 -> 2\n    4 -> 2\n\nBut\n\n    >>> (C(3,4) * C(1,2) - C(4) * C(1)) == C(3) * C(1,2) + C(4) * C(2)\n    False\n\nBecause sinks and sources differ:\n\n    >>> (C(3,4) * C(1,2) - C(4) * C(1)).sinks\n    {3}\n    >>> (C(3) * C(1,2) + C(4) * C(2)).sinks\n    {3, 4}\n\nThe right form would have been:\n\n    >>> (C(3,4) * C(1,2) - C(4) * C(1)) == C(3) * C(1,2) + C(4) * C(2) - C(4) * O - O * C(1)\n    True\n\n\nThe identity I and zero O work together like usual:\n\n    >>> I * I == I\n    True\n    >>> O * I * O == O\n    True\n\n\nIdentity 'I' works as a tool for equation simplifying.\nFor example:\n\n    >>> C(1,2) * C(3,4) * C(5) + C(1,2) * C(5) == C(1,2) * ( C(3,4) + I ) * C(5)\n    True\n\nBecause:\n\n    >>> (C(1,2) * C(3,4) * C(5) + C(1,2) * C(5)).evaluate()\n    1 -> 3\n    1 -> 4\n    1 -> 5\n    2 -> 3\n    2 -> 4\n    2 -> 5\n    3 -> 5\n    4 -> 5\n\nand\n\n    >>> (C(1,2) * ( C(3,4) + I ) * C(5)).evaluate()\n    1 -> 3\n    1 -> 4\n    1 -> 5\n    2 -> 3\n    2 -> 4\n    2 -> 5\n    3 -> 5\n    4 -> 5\n\nIf two terms have the same middle part you can simplify equations via terminating loose sinks or sources with O:\nFor example:\n\n    >>> (C(1) * C(2) * C(4) + C(3) * C(4)).evaluate()\n    1 -> 2\n    2 -> 4\n    3 -> 4\n\n    >>> (C(1) * C(2) * C(4) + O * C(3) * C(4)).evaluate()\n    1 -> 2\n    2 -> 4\n    3 -> 4\n\n    >>> (C(1) * ( C(2) + O * C(3) ) * C(4)).evaluate()\n    1 -> 2\n    2 -> 4\n    3 -> 4\n\n    >>> C(1) * C(2) * C(4) + O * C(3) * C(4) == C(1) * ( C(2) + O * C(3) ) * C(4)\n    True\n\n\nNote that the comparison wont work without the O -term because the sinks differ:\n\n    >>> C(1) * C(2) * C(4) +  C(3) * C(4) == C(1) * ( C(2) + O * C(3) ) * C(4)\n    False\n\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/kummahiih/python-category-equations",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-category-equations",
    "platform": "",
    "project_url": "https://pypi.org/project/python-category-equations/",
    "release_url": "https://pypi.org/project/python-category-equations/0.3.2/",
    "requires_dist": [],
    "requires_python": "~=3.6",
    "summary": "python-category-equations",
    "version": "0.3.2"
  },
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "a7a6b435e6b208a16e82a0b32d5d1a5a",
          "sha256": "db6c3502fc413a629790426d6cb59f61145aa04aa0adc828858eb93b0ddb1af4"
        },
        "downloads": -1,
        "filename": "python_category_equations-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7a6b435e6b208a16e82a0b32d5d1a5a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 6429,
        "upload_time": "2018-02-01T21:05:31",
        "url": "https://files.pythonhosted.org/packages/20/b1/114152e4d86f294f4d5d4c0ff6f2f16ccc3378e3ad4c5db057c1c22ba9cc/python_category_equations-0.2.0-py3-none-any.whl"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "31e3a4f6e2a5ec8437a3c962f1e89e76",
          "sha256": "6570d654b2da6b700fc151cfc63741b07adb7faf9045a8e33f155e03b4ff3dbf"
        },
        "downloads": -1,
        "filename": "python_category_equations-0.3.0-py3.6.egg",
        "has_sig": false,
        "md5_digest": "31e3a4f6e2a5ec8437a3c962f1e89e76",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "size": 12400,
        "upload_time": "2018-02-10T17:18:32",
        "url": "https://files.pythonhosted.org/packages/ad/fa/40fac2fd6edb347edb9fb6cd2208364f88efd5da014807baab0c48409f64/python_category_equations-0.3.0-py3.6.egg"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "80f99ad43983bc89df45e747228e751f",
          "sha256": "0c9d1f1363b0ec5535d1d987011b5eba05a24a5151330eb62b7a76028bc92458"
        },
        "downloads": -1,
        "filename": "python_category_equations-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80f99ad43983bc89df45e747228e751f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 8315,
        "upload_time": "2018-02-10T17:18:47",
        "url": "https://files.pythonhosted.org/packages/02/af/e3781a0dcaf99321c1df49982ea639621542ab2f32c9d42202ce1353b48d/python_category_equations-0.3.0-py3-none-any.whl"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "69511d9d93b3215b600db7227362d7fe",
          "sha256": "992d740b1800fb75c55c7bcc8febb94d00034b6d30346759472566353854fb39"
        },
        "downloads": -1,
        "filename": "python_category_equations-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69511d9d93b3215b600db7227362d7fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 8302,
        "upload_time": "2018-02-10T17:24:50",
        "url": "https://files.pythonhosted.org/packages/4f/aa/f0be56e51e1b1efdd9129300a9859296d110e42131a0052567688f523c8c/python_category_equations-0.3.1-py3-none-any.whl"
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f2e1901655de976151d16790664bf4e4",
          "sha256": "4194a5d7b87c64c640f5d5db67607be0fa6bd83043004150b1ea391c8ca10358"
        },
        "downloads": -1,
        "filename": "python_category_equations-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2e1901655de976151d16790664bf4e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 8301,
        "upload_time": "2018-02-10T17:29:42",
        "url": "https://files.pythonhosted.org/packages/57/5d/36d60d7ac9915182e7dea299afb62a4e3e759f01b447b0a5e7d18b22653d/python_category_equations-0.3.2-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "f2e1901655de976151d16790664bf4e4",
        "sha256": "4194a5d7b87c64c640f5d5db67607be0fa6bd83043004150b1ea391c8ca10358"
      },
      "downloads": -1,
      "filename": "python_category_equations-0.3.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f2e1901655de976151d16790664bf4e4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 8301,
      "upload_time": "2018-02-10T17:29:42",
      "url": "https://files.pythonhosted.org/packages/57/5d/36d60d7ac9915182e7dea299afb62a4e3e759f01b447b0a5e7d18b22653d/python_category_equations-0.3.2-py3-none-any.whl"
    }
  ]
}