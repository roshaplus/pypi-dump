{
  "info": {
    "author": "Christopher Clarke",
    "author_email": "cclarke@chrisdev.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4"
    ],
    "description": "==============\nDjango Pandas\n==============\n.. image:: https://secure.travis-ci.org/chrisdev/django-pandas.png?branch=master\n   :target: http://travis-ci.org/chrisdev/django-pandas\n.. image:: https://coveralls.io/repos/chrisdev/django-pandas/badge.png?branch=master\n   :target: https://coveralls.io/r/chrisdev/django-pandas\n\nTools for working with `pandas <http://pandas.pydata.org>`_ in your Django\nprojects\n\nContributors\n============\n* `Christopher Clarke <https://github.com/chrisdev>`_\n* `Bertrand Bordage <https://github.com/BertrandBordage>`_\n* `Guillaume Thomas <https://github.com/gtnx>`_\n* `Parbhat Puri  <https://parbhatpuri.com/>`_\n* `Fredrik Burman (coachHIPPO) <https://www.coachhippo.com>`_\n* `Safe Hammad <http://safehammad.com>`_\n* `Jeff Sternber <https://www.linkedin.com/in/jeffsternberg>`_\n* `@MiddleFork <https://github.com/MiddleFork>`_\n- `Daniel Andrlik <https://github.com/andrlik>`_\n\nWhat's New\n===========\n\n- Compatibility with `pandas 0.20.1`\n- Support for Python 2.7 and 3.5 with Django versions 1.8+\n- Suport for Python 3.6 and Django 1.11\n- We still support legacy versions (Python 2.7 and Django 1.4)\n\nDependencies\n=============\n``django-pandas`` supports `Django`_ (>=1.4.5) or later  \nand requires `django-model-utils`_ (>= 1.4.0) and `Pandas`_ (>= 0.12.0). \n**Note** because of problems with the ``requires`` directive of setuptools\nyou probably need to install ``numpy`` in your virtualenv  before you install\nthis package or if you want to run the test suite ::\n\n    pip install numpy\n    python setup.py test\n\nSome ``pandas`` functionality requires parts of the Scipy stack.\nYou may wish to consult http://www.scipy.org/install.html \nfor more information on installing the ``Scipy`` stack. \n\n.. _Django: http://djangoproject.com/\n.. _django-model-utils: http://pypi.python.org/pypi/django-model-utils\n.. _Pandas: http://pandas.pydata.org\n\nContributing\n============\n\nPlease file bugs and send pull requests to the `GitHub repository`_ and `issue\ntracker`_.\n\n.. _GitHub repository: https://github.com/chrisdev/django-pandas/\n.. _issue tracker: https://github.com/chrisdev/django-pandas/issues\n\n\nInstallation\n=============\nStart by creating a new ``virtualenv`` for your project ::\n\n    mkvirtualenv myproject\n\nNext install ``numpy`` and ``pandas`` and optionally ``scipy`` ::\n\n    pip install numpy\n    pip install pandas\n\nYou may want to consult  the `scipy documentation`_ for more information \non installing the ``Scipy`` stack.\n\n.. _scipy documentation: http://www.scipy.org/install.html\n\nFinally, install ``django-pandas`` using ``pip``::\n\n    pip install django-pandas\n\nor install the development version from ``github`` ::\n    \n    pip install https://github.com/chrisdev/django-pandas/tarball/master\n\nUsage\n======\n\n\nIO Module\n----------\nThe ``django-pandas.io`` module provides some convenience methods to \nfacilitate the creation of DataFrames from Django QuerySets.\n\nread_frame\n^^^^^^^^^^^\n\n**Parameters**\n\n    - qs: A Django QuerySet.\n\n    - fieldnames: A list of model field names to use in creating the ``DataFrame``.\n                  You can span a relationship in the usual Django way\n                  by using  double underscores to specify a related field\n                  in another model\n\n    - index_col: Use specify the field name to use  for the ``DataFrame`` index. \n                 If the index\n                 field is not in the field list it will be appended\n\n    - coerce_float : Boolean, defaults to True\n                     Attempt to convert values to non-string, \n                     non-numeric objects (like decimal.Decimal) \n                     to floating point.\n\n    - verbose:  If  this is ``True`` then populate the DataFrame with the\n                human readable versions of any foreign key or choice fields \n                else use the actual values set in the model.\n\n\nExamples\n^^^^^^^^^\nAssume that this is your model::\n\n    class MyModel(models.Model):\n\n        full_name = models.CharField(max_length=25)\n        age = models.IntegerField()\n        department = models.CharField(max_length=3)\n        wage = models.FloatField()\n\nFirst create a query set::\n\n    from django_pandas.io import read_frame\n    qs = MyModel.objects.all()\n\nTo create a dataframe using all the fields in the underlying model ::\n\n    df = read_frame(qs)\n\nThe `df` will contain human readable column values for foreign key and choice \nfields. The `DataFrame` will include all the fields in the underlying \nmodel including the primary key. \nTo create a DataFrame using specified field names::\n\n     df = read_frame(qs, fieldnames=['age', 'wage', 'full_name'])\n\nTo set ``full_name`` as the ``DataFrame`` index ::\n\n    qs.to_dataframe(['age', 'wage', index='full_name'])\n\nYou can use filters and excludes ::\n\n    qs.filter(age__gt=20, department='IT').to_dataframe(index='full_name')\n\n\nDataFrameManager\n-----------------\n``django-pandas`` provides a custom manager to use with models that\nyou want to render as Pandas Dataframes. The ``DataFrameManager``\nmanager provides the ``to_dataframe`` method that returns \nyour models queryset as a Pandas DataFrame. To use the DataFrameManager, first\noverride the default manager (`objects`) in your model's definition \nas shown in the example below ::\n    \n    #models.py\n\n    from django_pandas.managers import DataFrameManager\n\n    class MyModel(models.Model):\n\n        full_name = models.CharField(max_length=25)\n        age = models.IntegerField()\n        department = models.CharField(max_length=3)\n        wage = models.FloatField()\n\n        objects = DataFrameManager()\n\n\nThis will give you access to the following QuerySet methods:\n\n    - ``to_dataframe``\n    - ``to_timeseries``\n    - ``to_pivot_table``\n\nto_dataframe\n^^^^^^^^^^^^^\n\nReturns a DataFrame from the QuerySet\n\n**Parameters**\n\n    - fieldnames:  The model field names to utilise in creating the frame.\n                to span a relationship, use the field name of related\n                fields across models, separated by double underscores,\n\n\n    - index: specify the field to use  for the index. If the index\n                field is not in the field list it will be appended\n\n    - coerce_float: Attempt to convert the numeric non-string data\n                    like object, decimal etc. to float if possible\n\n    - verbose:  If  this is ``True`` then populate the DataFrame with the\n                human readable versions of any foreign key or choice fields \n                else use the actual value set in the model.\n\nExamples\n^^^^^^^^^\n\nCreate a dataframe using all the fields  in your model as follows ::\n\n    qs = MyModel.objects.all()\n\n    df = qs.to_dataframe()\n\nThis will include your primary key. To create a DataFrame using specified\nfield names::\n    \n     df = qs.to_dataframe(fieldnames=['age', 'department', 'wage'])\n\nTo set ``full_name`` as the index ::\n\n    qs.to_dataframe(['age', 'department', 'wage'], index='full_name'])\n\nYou can use filters and excludes ::\n\n    qs.filter(age__gt=20, department='IT').to_dataframe(index='full_name')\n\nto_timeseries\n--------------\n\nA convenience method for creating a time series i.e the\nDataFrame index is instance of a DateTime or PeriodIndex\n\n**Parameters**\n\n    - fieldnames:  The model field names to utilise in creating the frame.\n        to span a relationship, just use the field name of related\n        fields across models, separated by double underscores,\n\n    - index: specify the field to use  for the index. If the index\n        field is not in the field list it will be appended. This\n        is mandatory.\n\n    - storage:  Specify if the queryset uses the `wide` or `long` format\n        for data.\n\n    -  pivot_column: Required once the you specify `long` format\n        storage. This could either be a list or string identifying\n        the field name or combination of field. If the pivot_column\n        is a single column then the unique values in this column become\n        a new columns in the DataFrame\n        If the pivot column is a list the values in these columns are\n        concatenated (using the '-' as a separator)\n        and these values are used for the new timeseries columns\n\n    - values: Also required if you utilize the `long` storage the\n        values column name is use for populating new frame values\n\n    - freq: the offset string or object representing a target conversion\n\n    - rs_kwargs: Arguments based on pandas.DataFrame.resample\n\n    - verbose:  If  this is ``True`` then populate the DataFrame with the\n                human readable versions of any foreign key or choice fields \n                else use the actual value set in the model.\n\nExamples\n^^^^^^^^^\n\nUsing a *long* storage format ::\n\n    #models.py\n\n    class LongTimeSeries(models.Model):\n        date_ix = models.DateTimeField()\n        series_name = models.CharField(max_length=100)\n        value = models.FloatField()\n\n        objects = DataFrameManager()\n\nSome sample data:::\n\n    ========   =====       =====\n    date_ix    series_name value\n    ========   =====       ======\n    2010-01-01  gdp        204699\n\n    2010-01-01  inflation  2.0\n\n    2010-01-01  wages      100.7\n\n    2010-02-01  gdp        204704\n\n    2010-02-01  inflation  2.4\n\n    2010-03-01  wages      100.4\n\n    2010-02-01  gdp        205966\n\n    2010-02-01  inflation  2.5\n\n    2010-03-01  wages      100.5\n    ==========  ========== ======\n\n\nCreate a QuerySet ::\n\n    qs = LongTimeSeries.objects.filter(date_ix__year__gte=2010)\n\nCreate a timeseries dataframe ::\n\n    df = qs.to_timeseries(index='date_ix',\n                          pivot_columns='series_name',\n                          values='value',\n                          storage='long')\n    df.head()\n\n    date_ix      gdp     inflation     wages\n\n    2010-01-01   204966     2.0       100.7\n\n    2010-02-01   204704      2.4       100.4\n\n    2010-03-01   205966      2.5       100.5\n\n\nUsing a *wide* storage format ::\n\n    class WideTimeSeries(models.Model):\n        date_ix = models.DateTimeField()\n        col1 = models.FloatField()\n        col2 = models.FloatField()\n        col3 = models.FloatField()\n        col4 = models.FloatField()\n\n        objects = DataFrameManager()\n\n    qs = WideTimeSeries.objects.all()\n\n    rs_kwargs = {'how': 'sum', 'kind': 'period'}\n    df = qs.to_timeseries(index='date_ix', pivot_columns='series_name',\n                          values='value', storage='long',\n                          freq='M', rs_kwargs=rs_kwargs)\n\nto_pivot_table\n--------------\nA convenience method for creating a pivot table from a QuerySet\n\n**Parameters**\n\n   - fieldnames:  The model field names to utilise in creating the frame.\n        to span a relationship, just use the field name of related\n        fields across models, separated by double underscores,\n   - values : column to aggregate, optional\n   - rows : list of column names or arrays to group on\n        Keys to group on the x-axis of the pivot table\n   - cols : list of column names or arrays to group on\n        Keys to group on the y-axis of the pivot table\n   - aggfunc : function, default numpy.mean, or list of functions\n        If list of functions passed, the resulting pivot table will have\n        hierarchical columns whose top level are the function names\n        (inferred from the function objects themselves)\n   - fill_value : scalar, default None\n        Value to replace missing values with\n   - margins : boolean, default False\n        Add all row / columns (e.g. for subtotal / grand totals)\n   - dropna : boolean, default True\n\n**Example**\n::\n\n    # models.py\n    class PivotData(models.Model):\n        row_col_a = models.CharField(max_length=15)\n        row_col_b = models.CharField(max_length=15)\n        row_col_c = models.CharField(max_length=15)\n        value_col_d = models.FloatField()\n        value_col_e = models.FloatField()\n        value_col_f = models.FloatField()\n\n        objects = DataFrameManager()\n\nUsage ::\n\n        rows = ['row_col_a', 'row_col_b']\n        cols = ['row_col_c']\n\n        pt = qs.to_pivot_table(values='value_col_d', rows=rows, cols=cols)\n\n\n.. end-here\n\n\nCHANGES\n========\n0.4.1 (2016-02-05)\n-------------------\n- Address the incompatibility with Django 1.9 due to the removal of \n  specialized query sets like the \n  `ValuesQuerySet <https://code.djangoproject.com/ticket/24211>`_\n- Address the removal of the ``PassThrougManager`` from  ``django-model-utils``\n  version ``2.4``.  We've removed the dependency on django-model-utils and \n  included the PassThroughManger (which was always a standalone tool \n  distributed a part of django-model-utils) for compatibility with \n  earlier versions of Django (<= 1.8). For more recent versions of \n  Django we're using Django's built in ``QuerySet.as_manager()``. \n- Now supports Pandas 0.14.1 and above\n- The fall in Coverage in this release largely reflects the integration of\n  the PassThroughManager into the code base. We'll add the required test \n  coverage for the PassThroughManager in subsequent releases.\n\n0.3.1 (2015-10-25)\n-------------------\n- Extends the ability to span a ForeignKey relationship with double underscores\n  to OneToOneField too thanks to Safe Hammad\n- Provide better support for  ManyToMany and OneToMany relations thanks to \n  Jeff Sternberg and @MiddleFork\n\n0.3.0 (2015-06-16)\n---------------------\n- This version supports Django 1.8\n- Support for Pandas 0.16\n\n0.2.2 (2015-03-02)\n---------------------\n- Added Support for Django 1.7\n\n0.2.1 (2015-01-28)\n---------------------\n- Added Support for Values QuerySets \n- Support for Python 2.6\n- Note we still have limited support for Django 1.7 but this will be coming in\n  the next release\n\n0.2.0 (2014-06-15)\n--------------------\n\n- Added the ``io`` module so that DataFrames can be created from any \n  queryset so you don't need to to add a ``DataFrame manager`` to your\n  models. This is good for working with legacy projects.\n- added a Boolean ``verbose`` argument to all methods (which defaults to ``True``)\n  This populate the DataFrame columns with the human readable versions of \n  foreign key or choice fields.\n- Improved the performance DataFrame creation by removing dependency on \n  ``np.core.records.fromrecords``\n- Loads of bug fixes, more tests and improved coverage and better\n  documentation`",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/chrisdev/django-pandas/",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-pandas",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-pandas/",
    "release_url": "https://pypi.org/project/django-pandas/0.4.2/",
    "requires_python": null,
    "summary": "Tools for working with pydata.pandas in your Django projects",
    "version": "0.4.2"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9dbb8f1fa0abc97fd1191d269778186f",
          "sha256": "8add68668ef249488d49ee8cdd39688b21896b864dc4b0580b4e0495ac9910ea"
        },
        "downloads": 3830,
        "filename": "django-pandas-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9dbb8f1fa0abc97fd1191d269778186f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19256,
        "upload_time": "2013-08-06T18:14:31",
        "url": "https://files.pythonhosted.org/packages/18/1c/eb8a4082027d7ecd475867f885d091f15cc8769f9d6f86884780c3b731e3/django-pandas-0.1.0.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f909ecc7f269e93af08100d77752a384",
          "sha256": "379874c1432758d5c910c78b7e7fe8f41d134d0deb7c61a65278954d963a665e"
        },
        "downloads": 3809,
        "filename": "django-pandas-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f909ecc7f269e93af08100d77752a384",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24306,
        "upload_time": "2014-06-23T04:48:11",
        "url": "https://files.pythonhosted.org/packages/8a/33/369c4906a390a29f5de98dd5d9530e0d500aebdb0943c69a06f5424f12b3/django-pandas-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f6df8a0cdc819dc2f585e69b4b3e35fe",
          "sha256": "a4fa94482fb9b58a17a13adfe6771209d89e733ac34743362f26e42125792bdc"
        },
        "downloads": 1727,
        "filename": "django-pandas-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f6df8a0cdc819dc2f585e69b4b3e35fe",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24865,
        "upload_time": "2015-01-28T18:35:07",
        "url": "https://files.pythonhosted.org/packages/78/79/20d9fcde9a8abf690b7d998aae56e6b246359cf9941c25b24eefb7a673f7/django-pandas-0.2.1.tar.gz"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "48f935cb11b4108daa05473da6a735a4",
          "sha256": "f836b11371eb640b9f1b7f4150530ed77eaeb84959130121aac3f51c0f76120e"
        },
        "downloads": 2688,
        "filename": "django-pandas-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "48f935cb11b4108daa05473da6a735a4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25110,
        "upload_time": "2015-03-04T09:06:18",
        "url": "https://files.pythonhosted.org/packages/f0/eb/9516220aa0797c77c1358b40747a899b216d41dee42940fa4317a98bbe3e/django-pandas-0.2.2.tar.gz"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6d8e2aed1807faa3721b615c40d4dc2d",
          "sha256": "846da83d07ce4d287cdfe9aa6a82dcc7074dc0abc74635a5d10c9af45db6cd33"
        },
        "downloads": 7643,
        "filename": "django-pandas-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6d8e2aed1807faa3721b615c40d4dc2d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25292,
        "upload_time": "2015-06-17T19:28:05",
        "url": "https://files.pythonhosted.org/packages/7d/e1/1c954a83139ac7349cdb823dea09fc7c38e53765f53938a2d13b810c32f7/django-pandas-0.3.0.tar.gz"
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "333f22133ea223140aea3dfb0e239dc7",
          "sha256": "6fb1bb1447e7c30b8dc4a9571eebb209e879801e6523d8f26d185b7e48c96f22"
        },
        "downloads": 2722,
        "filename": "django-pandas-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "333f22133ea223140aea3dfb0e239dc7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26467,
        "upload_time": "2015-10-26T10:37:19",
        "url": "https://files.pythonhosted.org/packages/d7/f6/7bbe88cbea3156a9fb0633b30827c05d71bdc0d810895f56e54855659563/django-pandas-0.3.1.tar.gz"
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f2a0bf585201e0f9ec4a66b794a3d695",
          "sha256": "eaf42aa7cd251f4087ee761a6afeaccbc6396573ba7226cd0604d97ec5031aa9"
        },
        "downloads": 3047,
        "filename": "django-pandas-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f2a0bf585201e0f9ec4a66b794a3d695",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 28475,
        "upload_time": "2016-02-10T18:59:59",
        "url": "https://files.pythonhosted.org/packages/0c/02/4b08a200333b34311b3f967deb431de5f50dba6b9aa46822991a04d9abad/django-pandas-0.4.1.tar.gz"
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "204e9ff8c80035d1c6d2421b380c5f91",
          "sha256": "97b2fa12fab315ea796b4a828ce65a39c3ae05c133e8fed57090b337f4c6c388"
        },
        "downloads": 0,
        "filename": "django_pandas-0.4.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "204e9ff8c80035d1c6d2421b380c5f91",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "size": 23251,
        "upload_time": "2017-05-22T14:26:07",
        "url": "https://files.pythonhosted.org/packages/32/5c/bf7f6cf8d3d3d83a719d1c4a3e7b6b31c919b3e29bdabcc872110d63d253/django_pandas-0.4.2-py2-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "fb54b646c4eeb918835bb291d02323a1",
          "sha256": "9dbc6f6f6542d87b0c85ed24a983d0083033e30cb806d85dfa7c39221deb5410"
        },
        "downloads": 0,
        "filename": "django-pandas-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fb54b646c4eeb918835bb291d02323a1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 29833,
        "upload_time": "2017-05-22T14:22:24",
        "url": "https://files.pythonhosted.org/packages/a5/8b/a632bd3f3a4109d86426ec0f7b157eb4ee6c4f8efcc1bd767e27f21fecee/django-pandas-0.4.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "204e9ff8c80035d1c6d2421b380c5f91",
        "sha256": "97b2fa12fab315ea796b4a828ce65a39c3ae05c133e8fed57090b337f4c6c388"
      },
      "downloads": 0,
      "filename": "django_pandas-0.4.2-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "204e9ff8c80035d1c6d2421b380c5f91",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "size": 23251,
      "upload_time": "2017-05-22T14:26:07",
      "url": "https://files.pythonhosted.org/packages/32/5c/bf7f6cf8d3d3d83a719d1c4a3e7b6b31c919b3e29bdabcc872110d63d253/django_pandas-0.4.2-py2-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "fb54b646c4eeb918835bb291d02323a1",
        "sha256": "9dbc6f6f6542d87b0c85ed24a983d0083033e30cb806d85dfa7c39221deb5410"
      },
      "downloads": 0,
      "filename": "django-pandas-0.4.2.tar.gz",
      "has_sig": false,
      "md5_digest": "fb54b646c4eeb918835bb291d02323a1",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 29833,
      "upload_time": "2017-05-22T14:22:24",
      "url": "https://files.pythonhosted.org/packages/a5/8b/a632bd3f3a4109d86426ec0f7b157eb4ee6c4f8efcc1bd767e27f21fecee/django-pandas-0.4.2.tar.gz"
    }
  ]
}