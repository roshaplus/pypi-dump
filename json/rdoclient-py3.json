{
  "info": {
    "author": "RANDOM.ORG (original library), nicorellius (Python 3 implementation)",
    "author_email": "nicorellius@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "JSON-RPC-Python3\n================\n\nRANDOM.ORG JSON-RPC API (Release 2) implementation.\n\nThis is a Python 3 implementation of the RANDOM.ORG JSON-RPC API (R1).\nIt provides either serialized or unserialized access to both the signed\nand unsigned methods of the API through the ``RandomOrgClient`` class.\nIt also provides a convenience class through the ``RandomOrgClient``\nclass, the ``RandomOrgCache``, for precaching requests. In the context\nof this module, a serialized client is one for which the sequence of\nrequests matches the sequence of responses.\n\nInstallation\n------------\n\nTo install, simply: ``pip install rdoclient-py3``\n\nThe base RDO implementation only requires the\n`requests <http://docs.python-requests.org/en/latest/>`__ library:\n``pip install requests``. However, this package (``rdoclient-py3``)\nrequires additional dependencies:\n\n``pip install -r requirements``\n\nTests\n-----\n\nSecure an API key and run the tests\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nNote that to run the accompanying tests the API\\_KEY fields must be\ngiven authentic values. Get an API key from\n`here <https://api.random.org/api-keys/beta>`__. Run tests like so:\n\n``py.test test_rdoclient.py``\n\nUsage\n-----\n\nThe default setup is best for non-time-critical serialized requests, eg,\nbatch clients:\n\n::\n\n    >>> from rdoclient import RandomOrgClient\n    >>> r = RandomOrgClient(YOUR_API_KEY_HERE)\n    >>> r.generate_integers(5, 0, 10)\n    [6, 2, 8, 9, 2]\n\n...or for more time sensitive serialized applications, eg, real-time\ndraws, use:\n\n::\n\n    >>> r = RandomOrgClient(YOUR_API_KEY_HERE, blocking_timeout=2.0, http_timeout=10.0)\n    >>> r.generate_signed_integers(5, 0, 10)\n    {'random': {u'min': 0, u'max': 10, u'completionTime': u'2014-05-19 14:26:14Z', u'serialNumber': 1482, u'n': 5, u'base': 10, u'hashedApiKey': u'HASHED_KEY_HERE', u'data': [10, 9, 0, 1, 5], u'method': u'generateSignedIntegers', u'replacement': True}, 'data': [10, 9, 0, 1, 5], 'signature': u'SIGNATURE_HERE'}\n\nIf obtaining some kind of response instantly is important, a cache\nshould be used. A cache will populate itself as quickly and efficiently\nas possible allowing pre-obtained randomness to be supplied instantly.\nIf randomness is not available - eg, the cache is empty - the cache will\nreturn an Empty exception allowing the lack of randomness to be handled\nwithout delay:\n\n::\n\n    >>> r = RandomOrgClient(YOUR_API_KEY_HERE, blocking_timeout=60.0*60.0, http_timeout=30.0)\n    >>> c = r.create_integer_cache(5, 0, 10)\n    >>> try:\n    ...     c.get()\n    ... except Queue.Empty:\n    ...     # handle lack of true random number here\n    ...     # possibly use a pseudo random number generator\n    ...\n    [1, 4, 6, 9, 10]\n\nNote that caches don't support signed responses as it is assumed that\nclients using the signing features want full control over the serial\nnumbering of responses.\n\nFinally, it is possible to request live results as-soon-as-possible and\nwithout serialization, however this may be more prone to timeout\nfailures as the client must obey the server's advisory delay times if\nthe server is overloaded:\n\n::\n\n    >>> r = RandomOrgClient(YOUR_API_KEY_HERE, blocking_timeout=0.0, http_timeout=10.0, serialized=False)\n    >>> r.generate_integers(5, 0, 10)\n    [3, 5, 2, 4, 8]\n\nDocumentation\n-------------\n\nFor a full list of available randomness generation functions and other\nfeatures see ``rdoclient.py`` documentation and\n`this link <https://api.random.org/json-rpc/1/>`__.\n\nChange log\n----------\n\n* 2017-07-15 Release 2.0.1: Converted README.md to RST for PyPi\n* 2017-07-15 Release 2.0.0: Initial release. Added to PyPi",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/nicorellius/json-rpc-python3",
    "keywords": "RANDOM.ORG random client implementation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rdoclient-py3",
    "platform": "",
    "project_url": "https://pypi.org/project/rdoclient-py3/",
    "release_url": "https://pypi.org/project/rdoclient-py3/2.0.1/",
    "requires_dist": [],
    "requires_python": ">=3",
    "summary": "RANDOM.ORG JSON-RPC API (release 2) Python 3 implementation.",
    "version": "2.0.1"
  },
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f8b3b5a6aeddfe500972b13fcc4b5de0",
          "sha256": "649536586a21991634e442da835508e0bfb653dbfb6756b67bcb92b8f4361b8a"
        },
        "downloads": 0,
        "filename": "rdoclient-py3-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f8b3b5a6aeddfe500972b13fcc4b5de0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13193,
        "upload_time": "2017-07-15T17:24:49",
        "url": "https://files.pythonhosted.org/packages/55/ce/a02ac936f45613ca3b1a755d1a70b69ca49670046c85f6a17e02c3d179cf/rdoclient-py3-2.0.0.tar.gz"
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ffc628ce67f9516ba7d5f08d2d5a87ed",
          "sha256": "846d9a4727b064c7f139cb8ef5cc2c0acbfa3547cd9c46945c39b96510de3565"
        },
        "downloads": 0,
        "filename": "rdoclient-py3-2.0.1.tar.gz",
        "has_sig": true,
        "md5_digest": "ffc628ce67f9516ba7d5f08d2d5a87ed",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 13555,
        "upload_time": "2017-07-15T17:57:34",
        "url": "https://files.pythonhosted.org/packages/11/45/27ad31ff228431cbd174de36303907e8c1d1a6ba55159109577ee90aab2e/rdoclient-py3-2.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ffc628ce67f9516ba7d5f08d2d5a87ed",
        "sha256": "846d9a4727b064c7f139cb8ef5cc2c0acbfa3547cd9c46945c39b96510de3565"
      },
      "downloads": 0,
      "filename": "rdoclient-py3-2.0.1.tar.gz",
      "has_sig": true,
      "md5_digest": "ffc628ce67f9516ba7d5f08d2d5a87ed",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 13555,
      "upload_time": "2017-07-15T17:57:34",
      "url": "https://files.pythonhosted.org/packages/11/45/27ad31ff228431cbd174de36303907e8c1d1a6ba55159109577ee90aab2e/rdoclient-py3-2.0.1.tar.gz"
    }
  ]
}