{
  "info": {
    "author": "Will Keeling",
    "author_email": "will@zifferent.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "RateLimitingFilter\n==================\n\n|Build Status|\n\nThe ``RateLimitingFilter`` is a filter for the Python logging system\nthat allows you to restrict the rate at which messages can pass through\nyour logging handlers.\n\nThe filter can be useful if you're using a handler such as Python's\n``logging.handlers.SMTPHandler`` to send error notification emails.\nError notification emails provide a useful means of keeping an eye on\nthe health of a running system, but these emails have the potential to\noverload a mailbox if they start arriving in quick succession due to\nsome kind of critical failure.\n\nThe ``RateLimitingFilter`` can help prevent mailbox overload by\nthrottling messages based on a configurable rate, whilst allowing for\ninitial bursts of messages which can be a useful indicator that\nsomething somewhere has broken.\n\nInstalling\n----------\n\n::\n\n    $ pip install ratelimitingfilter\n\nor\n\n::\n\n    $ git clone https://github.com/wkeeling/ratelimitingfilter.git\n    $ cd ratelimitingfilter\n    $ python setup.py install\n\nUsage\n-----\n\nA typical use case may be to throttle error notification emails sent by\nthe ``logging.handlers.SMTPHandler``. Here's an example of how you might\nset it up:\n\n.. code:: python\n\n    import logging.handlers\n    import time\n\n    from ratelimitingfilter import RateLimitingFilter\n\n    logger = logging.getLogger('throttled_smtp_example')\n\n    # Create an SMTPHandler\n    smtp = logging.handlers.SMTPHandler(mailhost='smtp.example.com',\n                                        fromaddr='from@example.com',\n                                        toaddrs='to@example.com',\n                                        subject='An error has occurred')\n    smtp.setLevel(logging.ERROR)\n\n    # Create a formatter and set it on the handler\n    formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n    smtp.setFormatter(formatter)\n\n    # Create an instance of the RateLimitingFilter, and add it to the handler\n    throttle = RateLimitingFilter()\n    smtp.addFilter(throttle)\n\n    # Add the handler to the logger\n    logger.addHandler(smtp)\n\n    # Logged errors will now be restricted to 1 every 30 seconds\n    while True:\n        logger.error('An error message')\n        time.sleep(2)\n\nCreating an instance of the ``RateLimitingFilter`` without any arguments\nlike in the example above will restrict the flow of messages to 1 every\n30 seconds.\n\nYou can customize the flow rate by supplying your own values for the\n``rate``, ``per`` and ``burst`` attributes. For example, to allow a rate\nof 1 message every 2 minutes with a periodic burst of up to 5 messages:\n\n.. code:: python\n\n    throttle = RateLimitingFilter(rate=1, per=120, burst=5)\n    smtp.addFilter(throttle)\n\nAdvanced Usage\n--------------\n\nIt is possible to pass some additional configuration options to the\n``RateLimitingFilter`` initializer for further control over message\nthrottling.\n\nPerhaps you want to selectively throttle particular error messages\nwhilst allowing other messages to pass through freely. This might be the\ncase if there is part of the application which you know can generate\nlarge volumes of errors, whilst the rest of the application is unlikely\nto.\n\nOne way to achieve this might be to use separate loggers, one configured\nwith rate limiting, one without, for the different parts of the\napplication. Alternatively, you can use a single logger and configure\nthe ``RateLimitingFilter`` to match only those messages that you want to\nthrottle.\n\nApplying selective rate limiting allows for constant visbility of lower\nvolume errors whilst keeping the higher volume errors in check.\n\nThe ``RateLimitingFilter`` supports two ways to selectively throttle\nmessages:\n\nSubstring based message throttling\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can pass a list of substrings to the ``RateLimitingFilter`` which it\nwill use to match messages to apply to.\n\n.. code:: python\n\n    config = {'match': ['some error', 'a different error']}\n\n    throttle = RateLimitingFilter(rate=1, per=60, burst=1, **config)\n    smtp.addFilter(throttle)\n\n    # Can be rate limited\n    logger.error('some error occurred')\n    # Can be rate limited\n    logger.error('a different error occurred')\n    # Will not be rate limited\n    logger.error('something completely different happened')\n\nAutomatic message throttling\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*This is an experimental feature*.\n\nYou can let the ``RateLimitingFilter`` automatically throttle messages\nby setting the ``match`` option to ``auto``.\n\n.. code:: python\n\n    config = {'match': 'auto'}\n    throttle = RateLimitingFilter(rate=1, per=60, burst=1, **config)\n\nThe filter will then attempt to identify messages based on their content\nin order to figure out whether to throttle them or not. It will tolerate\nslight differences in content when identifying messages. So for example,\nif error messages are being rapidly logged that are the same apart from\na timestamp, or perhaps an incrementing id, then these messages will be\ntreated as the same as far as rate limiting is concerned.\n\nLicense\n-------\n\nMIT\n\nContributing\n------------\n\nFeedback and improvements are more than welcome. Please submit a pull\nrequest!\n\nhttps://github.com/wkeeling/ratelimitingfilter\n\n.. |Build Status| image:: https://travis-ci.org/wkeeling/ratelimitingfilter.svg?branch=master\n   :target: https://travis-ci.org/wkeeling/ratelimitingfilter\n",
    "docs_url": null,
    "download_url": "https://github.com/wkeeling/ratelimitingfilter/archive/0.6.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/wkeeling/ratelimitingfilter",
    "keywords": "logging filter SMTPHandler ratelimit throughput",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ratelimitingfilter",
    "platform": "",
    "project_url": "https://pypi.org/project/ratelimitingfilter/",
    "release_url": "https://pypi.org/project/ratelimitingfilter/0.6/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A rate limiting filter for the Python logging system",
    "version": "0.6"
  },
  "releases": {
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b196962d41613885ef9c80131a88fcf4",
          "sha256": "d6e25eeeb99b4c8d886fd79bbb0a01b7a950b70211db70f7f2dbdb79263c9270"
        },
        "downloads": -1,
        "filename": "ratelimitingfilter-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b196962d41613885ef9c80131a88fcf4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5595,
        "upload_time": "2017-11-04T09:27:15",
        "url": "https://files.pythonhosted.org/packages/90/93/b1251a18acd9d7ae2e88ceb45086a8196a996b3d9746860e511011668c3e/ratelimitingfilter-0.4.tar.gz"
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0db71a746e004cf08acf287a4b7e5ce2",
          "sha256": "c535d6debf5d75841f8bd6a7b0e0d8feb0cdab47f41a6bb99f7e5b4a7b0d72e5"
        },
        "downloads": -1,
        "filename": "ratelimitingfilter-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0db71a746e004cf08acf287a4b7e5ce2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5628,
        "upload_time": "2017-11-04T09:45:05",
        "url": "https://files.pythonhosted.org/packages/f1/8a/c5c466d9800539ece5d40e65235d4c7c16bf68ced51df61357124ca19925/ratelimitingfilter-0.5.tar.gz"
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6ae026a869dc653418379c592b725320",
          "sha256": "32d9e16394176fcefa123cd56ab19e229d4942b471d7c43a93a4ad0c33be93fa"
        },
        "downloads": -1,
        "filename": "ratelimitingfilter-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6ae026a869dc653418379c592b725320",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5650,
        "upload_time": "2017-12-17T20:02:12",
        "url": "https://files.pythonhosted.org/packages/90/37/fa79aa56bbe3f34cc644bbb265108e1e28ee23a88ad8925e4aba6cd7e6b2/ratelimitingfilter-0.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "6ae026a869dc653418379c592b725320",
        "sha256": "32d9e16394176fcefa123cd56ab19e229d4942b471d7c43a93a4ad0c33be93fa"
      },
      "downloads": -1,
      "filename": "ratelimitingfilter-0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "6ae026a869dc653418379c592b725320",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5650,
      "upload_time": "2017-12-17T20:02:12",
      "url": "https://files.pythonhosted.org/packages/90/37/fa79aa56bbe3f34cc644bbb265108e1e28ee23a88ad8925e4aba6cd7e6b2/ratelimitingfilter-0.6.tar.gz"
    }
  ]
}