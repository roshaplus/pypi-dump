{
  "info": {
    "author": "Tobias Klausmann",
    "author_email": "klausman-pymetar@schwarzvogel.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "PyMETAR - a module to fetch and parse METAR reports\r\n---------------------------------------------------\r\n\r\n**NOTE: If you're looking for information regarding Python 3 and\r\nPyMETAR, see the end of this document.**\r\n\r\nThe National Oceanic and Atmospheric Administration (NOAA,\r\nwww.noaa.gov) provides easy access to the weather reports\r\ngenerated by a large number of weather stations (mostly at\r\nairports) worldwide. Those reports are called METAR reports and\r\nare delivered as plain text files that look like this:\r\n\r\n::\r\n\r\n\tDuesseldorf, Germany (EDDL) 51-18N 006-46E 41M\r\n\tJul 26, 2002 - 03:50 AM EST / 2002.07.26 0850 UTC\r\n\tWind: from the SW (220 degrees) at 9 MPH (8 KT):0\r\n\tVisibility: 3 mile(s):0\r\n\tSky conditions: mostly cloudy\r\n\tWeather: mist\r\n\tTemperature: 60 F (16 C)\r\n\tDew Point: 57 F (14 C)\r\n\tRelative Humidity: 87%\r\n\tPressure (altimeter): 30.00 in. Hg (1016 hPa)\r\n\tob: EDDL 260850Z 22008KT 5000 BR SCT006 BKN012 16/14 Q1016 BECMG BKN015\r\n\tcycle: 9\r\n\r\nWhile this is convenient if you just want to quickly look up the\r\ndata, there's some effort involved in parsing all of this into a\r\nformat that is digestible by a program. Plus, you have to remember\r\nthe base URL of the reports and fetch the file.\r\n\r\nThis is what this library does. All you have to do is find the\r\nstation you're interested in at\r\nhttp://www.nws.noaa.gov/tg/siteloc.shtml and feed the 4-letter\r\nstation code to the MetarReport class.\r\n\r\nOn the user end, the library provides a large number of methods to\r\nfetch the parsed information in a plethora of formats. Those\r\nfunctions are described in the file ``librarydoc.txt`` which was in\r\nturn generated using PyDoc.\r\n\r\nAs of version 0.5, PyMETAR uses urllib2 which in turn makes it\r\neasy to honor the environment variable ``http_proxy``. This simplifies\r\nuse of a proxy tremendously. Thanks go to Davide Di Blasi for both\r\nsuggesting and implementing this. The environment variable is easy\r\nto use: just set it to:\r\n\r\nhttp://username:password@proxy.yourdomain.com:port \r\n\r\nAs of version 0.11, you can also specify a proxy (with the same\r\nsyntax) as an argument to the fetching function. This is sometimes\r\neasier when using PyMETAR in a web application environment (such\r\nas ZopeWeatherApplet by Jerome Alet). See ``librarydoc.txt`` for\r\ndetails on how to accomplish that. \r\n\r\nYou can also use IPs instead of hostnames, of course. When in\r\ndoubt, ask your proxy admin.\r\n\r\nDue to some peculiarities in the METAR format, I can not rule out\r\nthe possibility that the library barfs on some less common types\r\nof reports. If you encounter such a report, please save it and the\r\nerror messages you get as completely as possible and send them to\r\nme at klausman-pymetar@schwarzvogel.de - Thanks a lot!\r\n\r\nOf course you may send all the other bugs you encounter to me,\r\ntoo. As this is a Python library, chances are that you are Python\r\nprogrammer and can provide a patch. If you do so, please, by all\r\nmeans use spaces for indentation, four per level, that makes\r\nmerging the patch a lot easier.\r\n\r\nPython 3\r\n--------\r\n\r\nPyMETAR does currently not support Python 3 (Python 2.4-2.7 should\r\nbe fine. Versions <2.4 are not officially supported but may work\r\nby chance).\r\n\r\nI'm currently in the process of plotting out the future of\r\nPyMETAR, which naturally includes thinking about Py3. The design\r\nof the whole library is now over eight years old. At this\r\npoint, there is little that I can do in the ways of changing the\r\nAPI gradually, so I'm thinking about releasing a totally\r\nincompatible new library which will only share the basic purpose of\r\nPyMETAR. I don't think that the current code can be refactored\r\neasily and I have meant to try different approaches to the same\r\nproblem (pylex, dispatcher code, state machines and sundry other\r\nstuff). *If* I go that route, it will be Py3-only, since that is\r\nthe future. Also, I will create a better test suite/scaffolding.\r\n\r\nIf you want to join me in building and designing the \"new\r\nPyMETAR\", feel free to join me on the mailing list.\r\n\r\nOh, and we need a new name or some other distinctive tag for the\r\nnew code. And no, it will not be pymetar-ng.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://www.schwarzvogel.de/software-pymetar.shtml",
    "keywords": "",
    "license": "GNU GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pymetar",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pymetar/",
    "release_url": "https://pypi.org/project/pymetar/0.21/",
    "requires_python": null,
    "summary": "PyMETAR is a python module and command line tool designed to fetch Metarreports from the NOAA (http://www.noaa.gov) and allow access to theincluded weather information.",
    "version": "0.21"
  },
  "releases": {
    "0.10": [],
    "0.11": [],
    "0.12": [],
    "0.13": [],
    "0.14": [],
    "0.16": [],
    "0.17": [],
    "0.19": [],
    "0.20": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6be3da59b26b776c0edf63635b906daf",
          "sha256": "bcbf3b08558a92c38553fb3b07bfd87b552e1270b8e37b08b3e6b262487abee7"
        },
        "downloads": 2495,
        "filename": "pymetar-0.20.tar.gz",
        "has_sig": false,
        "md5_digest": "6be3da59b26b776c0edf63635b906daf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22738,
        "upload_time": "2015-04-20T08:18:02",
        "url": "https://files.pythonhosted.org/packages/49/85/6eb135c6ff2ad9908badbd1c83f7a42bfa200bed32151a55892e6e777580/pymetar-0.20.tar.gz"
      }
    ],
    "0.21": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b41403f2efdd44f684cecf3f0aa1569d",
          "sha256": "331978d9c54d49948e3817a782b857f247db6c279b8bb5bebd4f5b1a4bb503ea"
        },
        "downloads": 562,
        "filename": "pymetar-0.21.tar.gz",
        "has_sig": false,
        "md5_digest": "b41403f2efdd44f684cecf3f0aa1569d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22714,
        "upload_time": "2016-08-24T14:33:00",
        "url": "https://files.pythonhosted.org/packages/33/b0/96ed9caf72195dd21a0b85e0208c911c3fa421ab8ba70c22c65a91065c66/pymetar-0.21.tar.gz"
      }
    ],
    "0.5": [],
    "0.7": [],
    "0.9": []
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b41403f2efdd44f684cecf3f0aa1569d",
        "sha256": "331978d9c54d49948e3817a782b857f247db6c279b8bb5bebd4f5b1a4bb503ea"
      },
      "downloads": 562,
      "filename": "pymetar-0.21.tar.gz",
      "has_sig": false,
      "md5_digest": "b41403f2efdd44f684cecf3f0aa1569d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 22714,
      "upload_time": "2016-08-24T14:33:00",
      "url": "https://files.pythonhosted.org/packages/33/b0/96ed9caf72195dd21a0b85e0208c911c3fa421ab8ba70c22c65a91065c66/pymetar-0.21.tar.gz"
    }
  ]
}