{
  "info": {
    "author": "Johan Nestaas",
    "author_email": "johannestaas@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Environment :: MacOS X",
      "Environment :: Win32 (MS Windows)",
      "Environment :: X11 Applications :: Qt",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python"
    ],
    "description": "modeldocs\n=========\n\nmodeldocs is a documentation generator for your model subclasses.\n\nIf you have a bunch of data models that inherit from a common baseclass (or can change them to),\nmodeldocs will allow you to automatically discover your subclasses and generate documentation for them\nby parsing a documentation format similar to apidocs (https://github.com/apidoc/apidoc)\n\nInstallation\n------------\n\nFrom pypi::\n\n    $ pip install modeldocs\n\nOr from the project root directory::\n\n    $ python setup.py install\n\nUsage\n-----\n\nFirst, create a configuration file in json, like::\n\n    {\n        \"name\": \"My Documentation\",\n        \"version\": \"1.0.0\",\n        \"title\": \"My Documentation Title\",\n        \"description\": \"This documents my data models\",\n        \"module_path\": \"./models/base_class_module_path.py\",\n        \"base_class\": \"MyBaseClass\",\n        \"paths\": [\n            \"./models/car.py\",\n            \"./models/motorcycle.py\"\n        ]\n    }\n\nSave it as modeldocs.json in the current directory.\n\nThen simply run it::\n\n    $ modeldocs\n\nOr pass a path to your custom config::\n\n    $ modeldocs --config my_model_docs.json\n\nOr specify your output directory (default \"docs\")::\n\n    $ modeldocs --output mydocs\n\nUse --help/-h to view info on the arguments::\n\n    $ modeldocs --help\n\nThe format is pretty simple. It follows a very similar format to apidocs (check github link above), example::\n\n    class Motorcycle(MongoCollection):\n        '''\n        @modelGroup Vehicles\n        @modelTitle Motorcycle\n        @modelDescription This represents a motorcycle and all its data.\n        \n        @modelField {String} name the motorcycle name\n        @modelField {Number} year the year it was made\n        @modelField {Datetime} purchased_at the datetime it was purchased\n        @modelField {String=\"red\",\"green\",\"blue\"} color the color of the motorcycle, with specified possible values.\n        @modelField {String} [owner] the owner of the vehicle (optional due to brackets)\n        @modelField {Number} [wheels=2] the number of wheels (default 2 as specified)\n        '''\n        pass\n\nThat's all it takes. Just add doc strings like the above to all your classes and make sure they inherit from a similar baseclass,\nthen write a json configuration that has the path to the base class' module, the name of the base class, and paths to all the modules\nthat have subclasses of that base class.\n\nmodeldocs will do the rest and generate the documentation into the \"docs\" directory.\n\nRelease Notes\n-------------\n\n:0.1.0:\n    Generates docs!\n:0.0.1:\n    Project created",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/johannestaas/modeldocs",
    "keywords": "",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "modeldocs",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/modeldocs/",
    "release_url": "https://pypi.org/project/modeldocs/0.1.0/",
    "requires_python": null,
    "summary": "Documentation generator for your model subclasses.",
    "version": "0.1.0"
  },
  "releases": {
    "0.0.1": [],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b36cab84dd2cef75988644f2742a3d6e",
          "sha256": "4f5a81c6561fd9b230cf870986c2119f7a704072bd302a18de695e7a5e79c5ba"
        },
        "downloads": 0,
        "filename": "modeldocs-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b36cab84dd2cef75988644f2742a3d6e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 194482,
        "upload_time": "2017-06-04T11:50:56",
        "url": "https://files.pythonhosted.org/packages/d9/83/e8e9c76425ca05e61b87a410080be46c63b5efc957a034d906a4a5527423/modeldocs-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b36cab84dd2cef75988644f2742a3d6e",
        "sha256": "4f5a81c6561fd9b230cf870986c2119f7a704072bd302a18de695e7a5e79c5ba"
      },
      "downloads": 0,
      "filename": "modeldocs-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b36cab84dd2cef75988644f2742a3d6e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 194482,
      "upload_time": "2017-06-04T11:50:56",
      "url": "https://files.pythonhosted.org/packages/d9/83/e8e9c76425ca05e61b87a410080be46c63b5efc957a034d906a4a5527423/modeldocs-0.1.0.tar.gz"
    }
  ]
}