{
  "info": {
    "author": "Pierre Vignet",
    "author_email": "pierre.vignet@irisa.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
      "Natural Language :: French",
      "Operating System :: OS Independent",
      "Programming Language :: C",
      "Programming Language :: Python :: 2.7",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "CADBIOM (Computer Aided Design of Biological Models) is an open source modelling software.\nBased on Guarded transition semantic, it gives a formal framework to help the modelling of\nbiological systems such as cell signaling network.\n\nOfficial website: [link](http://cadbiom.genouest.org/)\n\n\n# Installation\n\n## System requirements\n\nCADBIOM is mainly developed in Python 2.7.\nBefore running Cadbiom, the following system packages have to be installed from\nthe distribution packages library (or similar, depending on your operating system):\n\n* python-gtksourceview2\n* python2.7-dev\n* libxml2-dev\n* libxslt1-dev\n* libgraphviz-dev\n* python-glade2\n* python-gtk2\n\nFix errors when installing pygraphviz and when config is not loaded:\n\n* pkg-config\n\nFor Matplotlib installation:\n\n* libpng12-dev\n* libfreetype6-dev\n\nYou can install these dependencies with the following command (on Debian systems):\n\n    sudo apt-get install python-gtksourceview2 python2.7-dev libxml2-dev libxslt1-dev \\\n    libxslt1-dev libgraphviz-dev pkg-config python-glade2 python-gtk2 libpng12-dev libfreetype6-dev\n\n\n## Python requirements\n\nWhen `cadbiom` library is installed, the following Python packages\nwill be installed from pypi repository:\n\n* lxml\n* networkx\n* pygraphviz\n* matplotlib\n* numpy\n* pycryptosat\n\n\n### Virtual environment\n\nThis is not a mandatory step but it is a good practice to use virtual environments\nto separate projects from each other.\n\n* Install virtualenvwrapper:\n\n    pip install virtualenvwrapper\n\n\n* Edit your .bashrc or .zshrc file to source the virtualenvwrapper.sh script with these lines:\n\n    export WORKON_HOME=~/.virtualenvs\n    mkdir -p $WORKON_HOME\n    source /usr/bin/virtualenvwrapper.sh\n\nThe location of this script may vary depending on your Linux distro\n\n\n* Restart your terminal or run:\n\n    source /usr/bin/virtualenvwrapper.sh\n\n\n* Create your virtualenv:\n\n    mkvirtualenv cadbiom -p /usr/bin/python2.7\n\n\n* Later if you want to reactivate the virtualenv:\n\n    workon cadbiom\n\n\n### SAT solver\n\nCadbiom software requires a SAT solver which is\nproposed as a Python wrapper by an independant library (pycryptosat).\n\n*For now, pycryptosat is not on pypi; so we use a fork from\n[Cryptominisat repository](https://github.com/msoos/cryptominisat/tree/5.0.1)*\n\nHere you will find the installation commands of the pycryptosat package:\n\n    git clone --branch 5.0.1_cmake_dev git@gitlab.irisa.fr:0000B8EG/pycryptosat.git\n    cd pycryptosat\n    mkdir build && cd build && cmake ../\n    make python_interface_install\n\n\n### Cadbiom\n\nIf you want to install the library with its GUI, and command line in one command,\nafter the git clone step, just do:\n\n    make install\n\n---\n\nFor the library itself:\n\n* From Python Package Index:\n\n    pip install cadbiom_cmd\n\n\n* From the current repository\n\n    cd library && make install\n\n\nFor the command line tool:\n\n\n* From Python Package Index:\n\n    pip install cadbiom_cmd\n\n\n* From the current repository\n\n    cd library && make install\n    cd ../command_line && make install\n\n\nFor the GUI:\n\n* From Python Package Index:\n\n    pip install cadbiom_gui\n\n\n* From the current repository\n\n    cd library && make install\n    cd ../gui && make install\n\n\n# Structure of packages\n\nThe library contains the cadbiom folder with 4 modules:\n\n    antlr3 (folder)\n    bio_models (folder)\n    models (folder)\n\nThe command line tool exposes the command `cadbiom_cmd` to the current context.\n\nThe gui package exposes the command `cadbiom` to the current context.\n\n\n# Utilization\n\n## Command line\n\n### General:\n\n    $ cadbiom_cmd -h\n\n    usage: cadbiom_cmd [-h] [-vv [VERBOSE]]\n                        {compute_macs,sort_solutions,parse_trajectories,merge_cams}\n                        ...\n\n    optional arguments:\n    -h, --help            show this help message and exit\n    -vv [VERBOSE], --verbose [VERBOSE]\n\n    subcommands:\n    {compute_macs,sort_solutions,parse_trajectories,merge_cams}\n        compute_macs        Parse arguments and launch Cadbiom search of MACs\n                            (Minimal Activation Conditions). - If there is no\n                            input file, there will be only one process. - If an\n                            input file is given, there will be 1 process per line\n                            (per logical formula on each line). - all_macs: Solver\n                            will try to search all macs with 0 to the maximum of\n                            steps allowed. - continue: If there is a mac file from\n                            a previous work, last frontier places will be\n                            reloaded.\n        sort_solutions      Parse a solution file and sort all frontier places in\n                            alphabetical order.\n        parse_trajectories  Parse a complete solution file and make a\n                            representation of trajectories.\n                            The output is in graphml file format and is exported\n                            in 'graphs' directory. .. note:: Requires the\n                            model file.\n        merge_cams          Merge solutions to a csv file. .. note:: CSV file:\n                            <Final property formula>;<cam>\n        model_comp          Model consistency checking. Check if the 2 given\n                            models have the same topology, nodes & edges\n                            attributes/roles. .. note:: You can export a graphml\n                            file for the 2 models.\n        model_infos         Model informations. Get number of nodes, edges,\n                            centralities (degree, closeness, betweenness). ..\n                            note:: You can export a graphml file for model.\n\n\n### compute_macs:\n\n    usage: cadbiom_cmd compute_macs [-h] [--input_file [INPUT_FILE]]\n                                    [--combinations] [--steps [STEPS]]\n                                    [--all_macs] [--continue]\n                                    [--start_prop [START_PROP]]\n                                    [--inv_prop [INV_PROP]] [--output [OUTPUT]]\n                                    chart_file [final_prop]\n\n    positional arguments:\n    chart_file\n    final_prop\n\n    optional arguments:\n    -h, --help            show this help message and exit\n    --input_file [INPUT_FILE]\n    --combinations\n    --steps [STEPS]\n    --all_macs\n    --continue\n    --start_prop [START_PROP]\n    --inv_prop [INV_PROP]\n    --output [OUTPUT]\n\n\n### parse_trajectories:\n\n    usage: cadbiom_cmd parse_trajectories [-h] chart_file sol_file\n\n    positional arguments:\n    chart_file\n    sol_file\n\n<br>\n* Result:\n\n[image](examples/graph_example_with_legend.png)\n\n* Cytoscape styles:\n\n[file](examples/cytoscape_styles.xml)\n\n\n### sort_solutions:\n\n    usage: cadbiom_cmd sort_solutions [-h] sol_file\n\n    positional arguments:\n    sol_file\n\n\n### merge_cams:\n\n    usage: cadbiom_cmd merge_cams [-h] [--output [OUTPUT]] [solutions_directory]\n\n    positional arguments:\n    solutions_directory\n\n\n### model_comp:\n\n    usage: cadbiom_cmd model_comp [-h] [--make_graphs] model_file_1 model_file_2\n\n    positional arguments:\n    model_file_1\n    model_file_2\n\n    optional arguments:\n    -h, --help     show this help message and exit\n    --graphs\n    --json\n    --output [OUTPUT]\n\n<br>\n\nUsage in scripts:\n\n    >>> from cadbiom_cmd.solution_repr import graph_isomorph_test\n    >>> print(graph_isomorph_test('test.bcx', 'test2.bcx', output_dir='graphs/',\n        make_graphs=False, make_json=False))\n    INFO: 3 transitions loaded\n    INFO: 3 transitions loaded\n    INFO: BUILD GRAPH FOR SOL: Connexin_32_0 Connexin_26_0\n    INFO: BUILD GRAPH FOR SOL: Connexin_32_0 Connexin_26_0\n    INFO: Topology checking: True\n    INFO: Nodes checking: True\n    INFO: Edges checking: True\n    {u'nodes': True, u'edges': True, u'topology': True}\n\n\n### model_infos\n\n    usage: cadbiom_cmd model_infos [-h] [--graph] [--json] [--output [OUTPUT]]\n                                model_file\n\n    positional arguments:\n    model_file\n\n    optional arguments:\n    -h, --help         show this help message and exit\n    --graph\n    --json\n    --output [OUTPUT]\n\n\n## Graphical User Interface\n\nUsage:\n\n    $ cadbiom\n\n\n## Logging\n\nLogs are stored in the system temporary dictory:\n\n* On Windows, the directories C:\\TEMP, C:\\TMP, \\TEMP, and \\TMP, in that order.\n* On all other platforms, the directories /tmp, /var/tmp, and /usr/tmp, in that order.\n* As a last resort, the current working directory.\n\n\n# License\n\nCADBIOM is freely available on cadbiom.genouest.org,\nand distributed under the terms of the GNU General Public License.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://gitlab.irisa.fr/0000B8EG/Cadbiom/tree/pypi_packaging",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cadbiom",
    "platform": "",
    "project_url": "https://pypi.org/project/cadbiom/",
    "release_url": "https://pypi.org/project/cadbiom/0.1.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Cadbiom library",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "43a3af16eb2d1de270c3dfcbbb2623b3",
          "sha256": "2d6cc4eb6fca4da3ba8e282e78af1ab1fd10fb74a77c1e7526d204a5f707aca2"
        },
        "downloads": 0,
        "filename": "cadbiom-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "43a3af16eb2d1de270c3dfcbbb2623b3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 206317,
        "upload_time": "2017-08-29T17:35:58",
        "url": "https://files.pythonhosted.org/packages/eb/43/e3842cdb65ffd2b5b160767f45d68e3a62a69d9933d9ac62431dcacb2a18/cadbiom-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "43a3af16eb2d1de270c3dfcbbb2623b3",
        "sha256": "2d6cc4eb6fca4da3ba8e282e78af1ab1fd10fb74a77c1e7526d204a5f707aca2"
      },
      "downloads": 0,
      "filename": "cadbiom-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "43a3af16eb2d1de270c3dfcbbb2623b3",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 206317,
      "upload_time": "2017-08-29T17:35:58",
      "url": "https://files.pythonhosted.org/packages/eb/43/e3842cdb65ffd2b5b160767f45d68e3a62a69d9933d9ac62431dcacb2a18/cadbiom-0.1.1.tar.gz"
    }
  ]
}