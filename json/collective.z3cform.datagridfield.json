{
  "info": {
    "author": "Kevin Gill",
    "author_email": "kevin@movieextras.ie",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Plone",
      "Programming Language :: Python"
    ],
    "description": "Introduction\n============\n\nThis module provides a z3c.form version of the `Products.DataGridField <http://plone.org/products/datagridfield>`_ . This product\nwas developed for use with Plone4/5 and Dexterity.\n\n.. image:: https://travis-ci.org/collective/collective.z3cform.datagridfield.png\n   :target: http://travis-ci.org/collective/collective.z3cform.datagridfield\n\n.. contents :: :local:\n\n\nRequirements\n============\n\n* Plone 4 or Plone 5\n* z3c.forms\n* A browser with javascript support\n* jquery 1.4.3 or later\n\n\nInstallation\n============\n\nAdd collective.z3cform.datagridfield to your buildout eggs.::\n\n    eggs=\\\n        ...\n        collective.z3cform.datagridfield\n\n\nExample usage\n=============\n\nThis piece of code demonstrates a schema which has a table within it.\nThe layout of the table is defined by a second schema.::\n\n    from zope import schema\n    from zope import interface\n    from plone.directives import form\n    from z3c.form.form import extends\n    from z3c.form import field\n\n    from collective.z3cform.datagridfield import DataGridFieldFactory, DictRow\n\n\n    class ITableRowSchema(interface.Interface):\n        one = schema.TextLine(title=u\"One\")\n        two = schema.TextLine(title=u\"Two\")\n        three = schema.TextLine(title=u\"Three\")\n\n\n    class IFormSchema(interface.Interface):\n        four = schema.TextLine(title=u\"Four\")\n        table = schema.List(title=u\"Table\",\n            value_type=DictRow(title=u\"tablerow\", schema=ITableRowSchema))\n\n\n    class EditForm(form.EditForm):\n        extends(form.EditForm)\n\n        grok.context(IFormSchema)\n        grok.require('zope2.View')\n        fields = field.Fields(IFormSchema)\n        label=u\"Demo Usage of DataGridField\"\n\n        fields['table'].widgetFactory = DataGridFieldFactory\n\nYou can also use grok'ed forms where you subclass the schema\nfrom ``plone.directives.form.SchemaForm`` and declare\nwidgets witin the schema using ``form.widget()``.\n\nAlso it can be used from a supermodel xml::\n\n    <field name=\"table\" type=\"zope.schema.List\">\n      <description/>\n      <title>Table</title>\n      <value_type type=\"collective.z3cform.datagridfield.DictRow\">\n        <schema>your.package.interfaces.ITableRowSchema</schema>\n      </value_type>\n      <form:widget type=\"collective.z3cform.datagridfield.DataGridFieldFactory\"/>\n    </field>\n\n\nStorage\n=======\n\nThe data can be stored as either a list of dicts or a list of objects.\nIf the data is a list of dicts, the value_type is DictRow.\nOtherwise, the value_type is 'schema.Object'.\n\nIf you are providing an Object content type (as opposed to dicts) you\nmust provide your own conversion class. The default conversion class\nreturns a list of dicts, not of your object class. See the demos.\n\n\nConfiguration\n=============\n\n\nRow editor handles\n------------------\n\nThe widget can be customised via the updateWidgets method.\n\n::\n\n    def updateWidgets(self):\n        super(EditForm, self).updateWidgets()\n        self.widgets['table'].allow_insert = False # Enable/Disable the insert button on the right\n        self.widgets['table'].allow_delete = False # Enable/Disable the delete button on the right\n        self.widgets['table'].auto_append = False  # Enable/Disable the auto-append feature\n        self.widgets['table'].allow_reorder = False  # Enable/Disable the re-order rows feature\n        self.widgets['table'].main_table_css_class = 'my_custom_class'  # Change the class applied on the main table when the field is displayed\n\nThe widget contains an attribute 'columns' which is manipulated to hide column\ntitles.\n\n\nBlock edit mode\n===============\n\nA widget class variation ``BlockDataGridField`` is provided.\nThis widget renders subform widgets vertically in blocks instead\nof horizontally in cells. It makes sense when there are many\nsubform fields and they have problem to fit on the screen once.\n\nExample::\n\n    class EditForm9(EditForm):\n        label = u'Rendering widgets as blocks instead of cells'\n\n        grok.name('demo-collective.z3cform.datagrid-block-edit')\n\n        def update(self):\n            # Set a custom widget for a field for this form instance only\n            self.fields['address'].widgetFactory = BlockDataGridFieldFactory\n            super(EditForm9, self).update()\n\n\nManipulating the Sub-form\n=========================\n\nThe DataGridField makes use of a subform to build each line. The main DataGridField\ncontains a DataGridFieldObject for each line in the table. The DataGridFieldObject\nin turn creates the DataGridFieldObjectSubForm to store the fields.\n\nThere are two callbacks to your main form:\n\n**datagridInitialise(subform, widget)**\n\n* This is called when the subform fields have been initialised, but before\n  the widgets have been created. Field based configuration could occur here.\n\n**datagridUpdateWidgets(subform, widgets, widget)**\n\n* This is called when the subform widgets have been created. At this point,\n  you can configure the widgets, e.g. specify the size of a widget.\n\nHere is an example how one can customize per-field widgets for the data grid field::\n\n    from zope import schema\n    from zope import interface\n    from Products.CMFCore.interfaces import ISiteRoot\n\n    from five import grok\n\n    from plone.directives import form\n\n    from collective.z3cform.datagridfield import DataGridFieldFactory, DictRow\n    from .widget import DGFTreeSelectFieldWidget\n\n\n    class ITableRowSchema(form.Schema):\n\n        form.widget(one=DGFTreeSelectFieldWidget)\n        one = schema.TextLine(title=u\"Level 1\")\n\n        form.widget(two=DGFTreeSelectFieldWidget)\n        two = schema.TextLine(title=u\"Level 2\")\n\n        # Uses the default widget\n        three = schema.TextLine(title=u\"Level 3\")\n\n\n    class IFormSchema(form.Schema):\n\n        form.widget(table=DataGridFieldFactory)\n        table = schema.List(title=u\"Nested selection tree test\",\n            value_type=DictRow(title=u\"tablerow\", schema=ITableRowSchema))\n\n\nWorking with plone.app.registry\n===============================\n\nTo use the field with plone.app.registry, you'll have to use\na version of the field that has PersistentField as it's base\nclass::\n\n    from collective.z3cform.datagridfield.registry import DictRow\n\n\nJavascript events\n=================\n\n``collective.z3cform.datagridfield`` fires jQuery events,\nso that you can hook them in your own Javascript for DataGridField\nbehavior customization.\n\nThe following events are currently fired against ``table.datagridwidget-table-view``\n\n* ``beforeaddrow`` [datagridfield, newRow]\n\n* ``afteraddrow`` [datagridfield, newRow]\n\n* ``beforeaddrowauto`` [datagridfield, newRow]\n\n* ``afteraddrowauto`` [datagridfield, newRow]\n\n* ``aftermoverow`` [datagridfield]\n\n* ``afterdatagridfieldinit`` - All DGFs on the page have been initialized\n\nExample usage::\n\n    var handleDGFInsert = function(event, dgf, row) {\n        row = $(row);\n        console.log(\"Got new row:\");\n        console.log(row);\n    };\n\n    // Bind all DGF handlers on the page\n    $(document).on('beforeaddrow beforeaddrowauto', '.datagridwidget-table-view', handleDGFInsert);\n\n\nDemo\n====\n\nExamples are in the package `collective.z3cform.datagridfield_demo <https://github.com/collective/collective.z3cform.datagridfield_demo>`_.\n\n\nSee also\n========\n\n* https://github.com/collective/collective.z3cform.dgftreeselect\n\n* https://github.com/collective/collective.z3cform.widgets/\n\n\nReferences\n==========\n\n* http://pypi.python.org/pypi/Products.DataGridField\n\n* http://pypi.python.org/pypi/collective.z3cform.datagridfield_demo\n\nChangelog\n=========\n\n1.2 (2017-03-08)\n----------------\n- Fix validation exception on readonly fields.\n  [rodfersou]\n- Fix bug for widget.klass is NonType in the block view when defining the class for the field. \n- Allow deletion of last row in non-auto-append mode.\n  [gaudenz]\n- fixed binding for IChoice fields during validation [djay]\n- plone 5 compatibility and fixed travis testing for plone 5 [djay]\n\n\n1.1 (2014-07-25)\n----------------\n\n- Removed JS code that relies on firefox being used.\n  [neilferreira]\n\n- Stopped referencing the 'event' element when creating a new row as the event\n  that triggered the content of an input changing may have been from another element.\n  [neilferreira]\n\n\n1.0 (2014-06-02)\n----------------\n\n- Add 'form-widgets-field_id' as widget css id (consistency with other widgets).\n  [thomasdesvenain]\n\n- Fix package dependencies.\n  [hvelarde]\n\n- Use BlockDataGridFieldObject for rows in a BlockDataGridField.\n  [gaudenz]\n\n- Filter out any auto append or template rows in updateWidgets.\n  [gaudenz]\n\n- Add row parameter to aftermoverow JS event\n  [gaudenz]\n\n- Don't reset class attribute on cloned template rows\n  [gaudenz]\n\n- Replace row index in all template row elements, not just input elements.\n  Replace the index in id, name, for, href and data-fieldname attributes\n  when cloning the template row.\n  [gaudenz]\n\n\n0.15 (2013-09-24)\n-----------------\n\n- Added possibility to define the CSS class for the main table when the field is displayed.\n  This way, you can use common Plone existing classes (like 'listing').\n  [gbastien]\n\n- Fixed auto-append bug when there is more than one datagrid field in page auto-appending one field binds\n  \"change.dgf\" to another field also. added \"$(dgf).find(..\" in datagridfield.js line 138 so it binds to right element only.\n  [tareqalam]\n\n- Only abort moveRow if the row is really not found and not if the row idx just happens to be 0.\n  [gaudenz]\n\n- Also update hidden data rows when reindexing in row mode. This fix was previously somehow only done for block mode.\n  [gaudenz]\n\n- Relax requirements for markup, don't assume inputs are direct childs of table cells. This makes useing custom\n  templates much easier.\n  [gaudenz]\n\n- Fix validate function signature for IValidator API. The API requires a \"force\" argument.\n  [gaudenz]\n\n- Register the SubformAdapter for IPloneForm layer to avoid that the Adapter from plone.app.z3cform\n  takes precedence.\n  [gaudenz]\n\n\n0.14 (2013-05-24)\n-----------------\n\n- Align travis setup to other packages.\n  [saily]\n\n- Add new V1 ``bootstrap.py``.\n  [saily]\n\n- Added CSS classes to tbody rows (``row-(1...n)``) and thead columns\n  (``cell-(1...m)``) to allow more styling in edit forms.\n  [saily]\n\n- Fixed wrong template in display mode when set editing to block edit mode [miohtama]\n\n- Added CSS classes (widget.klass attribute) for DataGridField, to separate it from other MultiWidgets [miohtama]\n\n\n0.13 (2013-04-09)\n-----------------\n\n- Add travis-ci configs [jaroel]\n\n- Convert tests to plone.app.testing [jaroel]\n\n- Fix to expect ``zope.schema.interfaces.ValidationError`` to work better\n  with *TooLong* and *TooShort* exceptions. [datakurre]\n\n- Fix IE7 failing on `<label>` for manipulation [miohtama]\n\n- Deal with situations where there is zero rows on DGF and no auto-append row available [miohtama]\n\n- Correctly bind DGF events on DOM content loaded, not when Javascript is parsed [miohtama]\n\n- Don't display movement handles if the row cannot be moved [miohtama]\n\n- Changed move up and down handlers to stay in fixed positions to make cells stay in the same width regardless of moving [miohtama]\n\n- Fixed checkbox saving, was broken by nested DGF support [miohtama]\n\n- Added block edit mode [miohtama]\n\n- \"use strict;\" and ECMAScript 5 compatible Javascript clean-up [miohtama]\n\n- Added *afterrowmoved* JS event [miohtama]\n\n\n0.12 (2012-10-30)\n--------------------\n\n- Updated empty row selection. [jstegle]\n\n- Nested DataGridField support (yo dawg...) [miohtama]\n\n- Support plone.autoform and grok'ed row schemas [miohtama]\n\n- Added ``DataGridField.extra`` parameter, so you can pass out\n  application specific data to Javascript [miohtama]\n\n\n0.11 (2012-05-16)\n-----------------\n\n- be able to use with plone.app.registry\n  [vangheem]\n\n\n0.10 (2012-02-12)\n-----------------\n\n- Fix bug with moving the last row up.\n  [m-martinez]\n\n\n0.9 (2011-10-27)\n----------------\n\n- Clone events when adding new row - fixes bug where browse button of\n  plone.formwidget.contenttree did nothing for new rows\n  [anthonygerrard]\n\n- Reindex more indexed attributes of cloned row\n  [anthonygerrard]\n\n\n0.8 (2011-09-24)\n----------------\n\n- Avoid using the \"row\" CSS class.\n  [davisagli]\n\n- Fixes to work with jQuery 1.3.x (use .remove() instead of .detach(), fetch data\n  attributes a different way, and avoid live binding the change event).\n  [davisagli]\n\n- Don't error out when getting a ``FormatterValidationError``, pass\n  it on to z3c.form instead.\n  [claytron]\n\n- Give manipulator images a relative src rather than absolute. This\n  previously meant the widget didn't work on sites without Plone/Zope at the\n  root of the domain.\n  [davidjb]\n\n- During auto-insert, add our new row into the document first, before reindexing\n  it and changing its elements' IDs. This allows Javascript that depends on\n  these IDs (such as plone.formwidget.autocomplete) to pick up the correct\n  fields.\n  [davidjb]\n\n- Tidying up and reducing complexity of auto-insert functionality\n  [davidjb]\n\n- Removing unnecessary auto-insert bind and unbind as this is already covered\n  by jQuery's `live()` function against the `auto-append` class. Adding/removing\n  this class against rows automatically does this.\n  [davidjb]\n\n- Resolved issue with auto-insert functionality not working by removing\n  table-specific check in Javascript.\n  [davidjb]\n\n\n0.7 (2011-07-01)\n----------------\n\n- Changed markup/javascript to prevent duplicate HTML id attributes. Changed\n  Javascript to allow for datagrid page templates that don't use tables.\n  [dextermilo]\n\n- Improve spacing in CSS.\n  [davisagli]\n\n- Revert my fix to ensure that blank rows are added, because it duplicated\n  a fix in z3c.form resulting in extra rows.\n  [davisagli]\n\n\n0.6 (2011-05-17)\n----------------\n\n- Search for datagridInitialise and datagridUpdateWidgets on the\n  parent form, also when in a fieldset.\n  [maurits]\n\n- Register templates on plone.app.z3cform.interfaces.IPloneFormLayer to\n  take precedence over that packages list widget templates.\n  [elro]\n\n- Make sure that updateWidgets is called to add blank rows even if the\n  widget has no value.\n  [davisagli]\n\n- When extracting a row value fails due to a validation error, convert\n  widget values to field values so the value can be successfully applied\n  to the grid widget.\n  [davisagli]\n\n- Register a plone.supermodel handler for the DictRow so it can be used\n  in supermodel models.\n  [davisagli]\n\n- Depend on collective.z3cform.datagridfield_demo as a test extra;\n  use the browser view from this package in the tests.\n  [maurits]\n\n- _validate still used when import/exporting, fix up code so it works\n  [lentinj]\n\n- Add a DictRow serializer for transmogrify.dexterity\n  [lentinj]\n\n- Only use width:100% on input cells that are the only element in the cell\n  [lentinj]\n\n- Reorder row indices backwards when adding rows. This means that adjacent\n  rows don't share the same index temporarily, for example:-\n  - Row 1 and 2 contain input:radio based widgets\n  - Row 0 added, row renumbering starts\n  - Row 1 widgets renamed 2\n  - Both sets of input:radio share the same name, one deselected\n  - Row 2 widgets renamed 3\n  - . . .\n  [lentinj]\n\n- Use jQuery to clone rows, and clone the jQuery events on the rows.\n  [lentinj]\n\n- Implemented reorder functionality\n\n\n0.5 (2011-02-08)\n----------------\n\n- Put in the DictRow class (tks Martin Aspeli)\n\n- Moved the demo code out to a separate package collective.z3cform.datagridfield_demo\n  (tks Laurence Rowe).\n\n- Removed superfluous lines from setup.py (tks Laurence Rowe).\n\n- Removed unnessary dependency on dexterity (tks Laurence Rowe).\n\n- Removed unnessary dependency on grok (tks Laurence Rowe).\n\n\n0.4 (2011-02-06)\n----------------\n\n- Renamed the demo pages. The starting point is now @@demo-collective.z3cform.datagrid .\n\n- The widget can now be configured via the updateWidgets method. It\n  is no longer necessary to create a custom factory.\n\n- The columns can now be omitted.\n\n- Provide a set of demo views for Object access.\n\n\n0.3 (2011-02-04)\n----------------\n\n- The auto-append functionality did not bind correctly for popup forms.\n  I switched to using jQuery.live() instead of binding at document load time.\n\n- Added a menu to the demo pages\n\n- Added a display only form option.\n\n- Fixed the restructured text of the main README.txt so that it will show\n  more friendly in PyPI.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/collective/collective.z3cform.datagridfield",
    "keywords": "Plone,Dexterity,z3c.form",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "collective.z3cform.datagridfield",
    "platform": "",
    "project_url": "https://pypi.org/project/collective.z3cform.datagridfield/",
    "release_url": "https://pypi.org/project/collective.z3cform.datagridfield/1.2/",
    "requires_python": "",
    "summary": "Version of DataGridField for use with Dexterity / z3c.form",
    "version": "1.2"
  },
  "releases": {
    "0.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d9cca222dda08df25c108e5b224ff103",
          "sha256": "d4c8c38631eacbfaab9140ea740666ef89274a8f5556a8d5044a5445fae0fa71"
        },
        "downloads": 4418,
        "filename": "collective.z3cform.datagridfield-0.10.zip",
        "has_sig": false,
        "md5_digest": "d9cca222dda08df25c108e5b224ff103",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 45725,
        "upload_time": "2012-02-13T05:58:49",
        "url": "https://files.pythonhosted.org/packages/34/2b/b3f5675837043ddadc478a1f8336c3d1cd71056ebb5723f690bf87bc1854/collective.z3cform.datagridfield-0.10.zip"
      }
    ],
    "0.11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c9210337b91305314864da42c12d04c2",
          "sha256": "54280b244f9ac6d023e254c2401d2869d3a3291d7dae2a59c8084162cee9ece3"
        },
        "downloads": 7611,
        "filename": "collective.z3cform.datagridfield-0.11.zip",
        "has_sig": false,
        "md5_digest": "c9210337b91305314864da42c12d04c2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 46518,
        "upload_time": "2012-05-17T05:07:09",
        "url": "https://files.pythonhosted.org/packages/a2/17/37ce7542b55b888c128ac8075b9f366584e40040fa5a641c2678dfa2bedf/collective.z3cform.datagridfield-0.11.zip"
      }
    ],
    "0.12": [
      {
        "comment_text": "",
        "digests": {
          "md5": "83baff3f9de30dc4a30461a657945268",
          "sha256": "9250e4365744d83626d0d9e4add37fe665b7f24aae96e7dece6ed4feb2aa3416"
        },
        "downloads": 2817,
        "filename": "collective.z3cform.datagridfield-0.12.zip",
        "has_sig": false,
        "md5_digest": "83baff3f9de30dc4a30461a657945268",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 48809,
        "upload_time": "2012-10-30T18:05:23",
        "url": "https://files.pythonhosted.org/packages/b0/c6/bf3df75b78f948884d339ffcece2394e26ee2fd8fa282387bd12c14fb9ba/collective.z3cform.datagridfield-0.12.zip"
      }
    ],
    "0.13": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3f418b8cc904ad44ebae3401516e2675",
          "sha256": "f402a8d8cd563328d59d65436a251baaab9e45c0fa26d8b60c6ae1934b0a27a1"
        },
        "downloads": 2388,
        "filename": "collective.z3cform.datagridfield-0.13.zip",
        "has_sig": false,
        "md5_digest": "3f418b8cc904ad44ebae3401516e2675",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 64964,
        "upload_time": "2013-04-09T20:54:19",
        "url": "https://files.pythonhosted.org/packages/a1/d5/f93fa8e4fed625a9ad668d50e12706505917121d1c6db451222a2acbe419/collective.z3cform.datagridfield-0.13.zip"
      }
    ],
    "0.14": [
      {
        "comment_text": "",
        "digests": {
          "md5": "efda55866ad569d97ab0f6b543afe152",
          "sha256": "a1c13477c103805af577aedfae2d5951d74b860fc7506a42b12ad2c64207c43a"
        },
        "downloads": 2374,
        "filename": "collective.z3cform.datagridfield-0.14.zip",
        "has_sig": false,
        "md5_digest": "efda55866ad569d97ab0f6b543afe152",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 61586,
        "upload_time": "2013-05-24T09:02:26",
        "url": "https://files.pythonhosted.org/packages/33/2d/1a409761756eb9c001e0cb82fe5192ae63b1eaea713b46bfca9e0f6b4853/collective.z3cform.datagridfield-0.14.zip"
      }
    ],
    "0.15": [
      {
        "comment_text": "",
        "digests": {
          "md5": "17ab2198df4914effec9f5854da4aa4c",
          "sha256": "a61a9547560f49f6657b08965e3078557fc71bf2917024c733ad9dfe68a7c001"
        },
        "downloads": 2861,
        "filename": "collective.z3cform.datagridfield-0.15.zip",
        "has_sig": false,
        "md5_digest": "17ab2198df4914effec9f5854da4aa4c",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 63508,
        "upload_time": "2013-09-24T12:41:02",
        "url": "https://files.pythonhosted.org/packages/49/c9/716b5f43de1801e9deabd29d259f8d06f995b71a5d9f79ad4072a9776f69/collective.z3cform.datagridfield-0.15.zip"
      }
    ],
    "0.1a": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c120860bfaef6a902947cd6f4d1d5edc",
          "sha256": "0d01b339f89d015f87f8054dafe7a72839ab3f03ea8282254a21916c4a168145"
        },
        "downloads": 3175,
        "filename": "collective.z3cform.datagridfield-0.1a.tar.gz",
        "has_sig": false,
        "md5_digest": "c120860bfaef6a902947cd6f4d1d5edc",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22092,
        "upload_time": "2011-02-02T17:29:51",
        "url": "https://files.pythonhosted.org/packages/1b/2c/d3292d34603ad7072f4e8b94bd058273951097fe8797ecb79a1bb1632767/collective.z3cform.datagridfield-0.1a.tar.gz"
      }
    ],
    "0.2a": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1de4f8a3068389ae3f5a202bd98a0e88",
          "sha256": "c8d1963cd81a1df20533c53637e9743492c16632eaa186305994e3f1acf0b0d2"
        },
        "downloads": 3187,
        "filename": "collective.z3cform.datagridfield-0.2a.tar.gz",
        "has_sig": false,
        "md5_digest": "1de4f8a3068389ae3f5a202bd98a0e88",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24391,
        "upload_time": "2011-02-03T03:22:35",
        "url": "https://files.pythonhosted.org/packages/4a/1b/f0f33a8636eb50870bfa8b9e48d88e683cfb57eb7ec0abee19f857043237/collective.z3cform.datagridfield-0.2a.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d66ff4410b9519a0ab3e78ca94a99b7f",
          "sha256": "7d2362d3947a6a976595dbd8e060c714ea334799f10e78e646ab8445031286c2"
        },
        "downloads": 3240,
        "filename": "collective.z3cform.datagridfield-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d66ff4410b9519a0ab3e78ca94a99b7f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 27162,
        "upload_time": "2011-02-05T01:10:57",
        "url": "https://files.pythonhosted.org/packages/04/46/d4d91970c5783a8eb3db3009753d488b17dfd1d17f74b860b35e9cf92b2d/collective.z3cform.datagridfield-0.3.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6093638b93084ed65ce2855874496a77",
          "sha256": "027acfc9b09a3316905729e6d72040cdcd4af29c257e73656e7ebe444a6e1c21"
        },
        "downloads": 3193,
        "filename": "collective.z3cform.datagridfield-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6093638b93084ed65ce2855874496a77",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30098,
        "upload_time": "2011-02-06T20:38:27",
        "url": "https://files.pythonhosted.org/packages/0d/c5/f3af3eef349dd5876a15634151917c622afb32c70c500209acd40d7328b4/collective.z3cform.datagridfield-0.4.tar.gz"
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1b3c1d6eed2867c8aea0c861ec237f18",
          "sha256": "9dd47a866d9dd572e1b4dbc887d18a8e48e3cfc0329757e0d949dcd15c736264"
        },
        "downloads": 3421,
        "filename": "collective.z3cform.datagridfield-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1b3c1d6eed2867c8aea0c861ec237f18",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 25354,
        "upload_time": "2011-02-08T23:59:49",
        "url": "https://files.pythonhosted.org/packages/a6/54/9f70026277c772c2666f7973d89aca8541d5c959c489e8b7ac62574806a7/collective.z3cform.datagridfield-0.5.tar.gz"
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0b5721dd6c6a709f2c9fa6f85168cae0",
          "sha256": "0088f28f470e0c6a0778aa441e30533501c5480ea6a93ab514d726cc7b655f52"
        },
        "downloads": 3267,
        "filename": "collective.z3cform.datagridfield-0.6.zip",
        "has_sig": false,
        "md5_digest": "0b5721dd6c6a709f2c9fa6f85168cae0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 43296,
        "upload_time": "2011-05-17T11:57:55",
        "url": "https://files.pythonhosted.org/packages/7f/0d/ff420ee9c6d29d9434eca6be9bdcf07f7fac0a7f00a81f1699bcd083c6fe/collective.z3cform.datagridfield-0.6.zip"
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4428fddbfb1ae4b5b0fc64249fb8e315",
          "sha256": "04ccfcab8a7ebfb284fc5581d8dabd51b066a6861b15b327eeb6e938b7a337ec"
        },
        "downloads": 3317,
        "filename": "collective.z3cform.datagridfield-0.7.zip",
        "has_sig": false,
        "md5_digest": "4428fddbfb1ae4b5b0fc64249fb8e315",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 43378,
        "upload_time": "2011-07-01T19:33:43",
        "url": "https://files.pythonhosted.org/packages/41/7a/64b98f66103bd3a246b994481c245503f8d19a975534987858d7747a77a6/collective.z3cform.datagridfield-0.7.zip"
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "13abf0b790b05597f71f434776387c2b",
          "sha256": "8539e06b4c9dc0ce9d200848169b799fa2215a0937ac07c7b8186b13de265549"
        },
        "downloads": 3305,
        "filename": "collective.z3cform.datagridfield-0.8.zip",
        "has_sig": false,
        "md5_digest": "13abf0b790b05597f71f434776387c2b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 45147,
        "upload_time": "2011-09-24T22:18:39",
        "url": "https://files.pythonhosted.org/packages/66/f6/88fc137cc256f6465e01337b0c4c9bfcc3daa92b8b24f5868669cf8f5185/collective.z3cform.datagridfield-0.8.zip"
      }
    ],
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0c181ca13380afffaf378dd54e684b59",
          "sha256": "1c9591c7c7e49d154f51b2b04f57917a5828ebd3b3759859655c7619586b50a9"
        },
        "downloads": 3801,
        "filename": "collective.z3cform.datagridfield-0.9.zip",
        "has_sig": false,
        "md5_digest": "0c181ca13380afffaf378dd54e684b59",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 45501,
        "upload_time": "2011-10-27T15:30:11",
        "url": "https://files.pythonhosted.org/packages/d2/be/a1860a5d7f069f4d8e1b3d704a2be29cc47185d68efba5730898d5f009d2/collective.z3cform.datagridfield-0.9.zip"
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "64cf707da78b68e6200b20695f3d7b8d",
          "sha256": "6cfb2b297240995deb423a57f9046e63a970ee03a70a9bf8ee1b26dfb0aced1c"
        },
        "downloads": 1874,
        "filename": "collective.z3cform.datagridfield-1.0.zip",
        "has_sig": false,
        "md5_digest": "64cf707da78b68e6200b20695f3d7b8d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 63623,
        "upload_time": "2014-06-02T10:46:00",
        "url": "https://files.pythonhosted.org/packages/64/fa/c985ff4e237490a2cf013b2c2a142a04af1eff32c18a352e24f1cda8e22a/collective.z3cform.datagridfield-1.0.zip"
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5eaeb420942c45b568d86d18c4253a15",
          "sha256": "b871ff8838cf18def0105b55a264d728c5f532f4fbff7bf30d54569f2b73a397"
        },
        "downloads": 4100,
        "filename": "collective.z3cform.datagridfield-1.1.zip",
        "has_sig": false,
        "md5_digest": "5eaeb420942c45b568d86d18c4253a15",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 64002,
        "upload_time": "2014-07-25T22:37:38",
        "url": "https://files.pythonhosted.org/packages/0c/1c/dd17e0a37af26d8f66b875dfd23bf8191324f9391dce02cf17697e926683/collective.z3cform.datagridfield-1.1.zip"
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "79cf7444c87328e807b83c50b8b12c68",
          "sha256": "cb7b1b1ced521d7f599d5eec75cb35ab8adf9019e57aeb14dc44a2823017cf2d"
        },
        "downloads": 25,
        "filename": "collective.z3cform.datagridfield-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "79cf7444c87328e807b83c50b8b12c68",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 45563,
        "upload_time": "2017-03-08T16:05:07",
        "url": "https://files.pythonhosted.org/packages/ad/05/033b8b1f8663ceef17be9755c54ea4472fca8e91a05c4e7a044552a8229a/collective.z3cform.datagridfield-1.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "79cf7444c87328e807b83c50b8b12c68",
        "sha256": "cb7b1b1ced521d7f599d5eec75cb35ab8adf9019e57aeb14dc44a2823017cf2d"
      },
      "downloads": 25,
      "filename": "collective.z3cform.datagridfield-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "79cf7444c87328e807b83c50b8b12c68",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 45563,
      "upload_time": "2017-03-08T16:05:07",
      "url": "https://files.pythonhosted.org/packages/ad/05/033b8b1f8663ceef17be9755c54ea4472fca8e91a05c4e7a044552a8229a/collective.z3cform.datagridfield-1.2.tar.gz"
    }
  ]
}