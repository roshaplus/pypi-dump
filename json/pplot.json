{
  "info": {
    "author": "Pablo Acosta-Serafini",
    "author_email": "pmacosta@yahoo.com",
    "bugtrack_url": "",
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": ".. README.rst\n.. Copyright (c) 2013-2018 Pablo Acosta-Serafini\n.. See LICENSE for details\n\n\n.. image:: https://badge.fury.io/py/pplot.svg\n    :target: https://pypi.python.org/pypi/pplot\n    :alt: PyPI version\n\n.. image:: https://img.shields.io/pypi/l/pplot.svg\n    :target: https://pypi.python.org/pypi/pplot\n    :alt: License\n\n.. image:: https://img.shields.io/pypi/pyversions/pplot.svg\n    :target: https://pypi.python.org/pypi/pplot\n    :alt: Python versions supported\n\n.. image:: https://img.shields.io/pypi/format/pplot.svg\n    :target: https://pypi.python.org/pypi/pplot\n    :alt: Format\n\n|\n\n.. image::\n   https://travis-ci.org/pmacosta/pplot.svg?branch=master\n\n.. image::\n   https://ci.appveyor.com/api/projects/status/\n   7dpk342kxs8kcg5t/branch/master?svg=true\n   :alt: Windows continuous integration\n\n.. image::\n   https://codecov.io/github/pmacosta/pplot/coverage.svg?branch=master\n   :target: https://codecov.io/github/pmacosta/pplot?branch=master\n   :alt: Continuous integration coverage\n\n.. image::\n   https://readthedocs.org/projects/pip/badge/?version=stable\n   :target: http://pip.readthedocs.org/en/stable/?badge=stable\n   :alt: Documentation status\n\n|\n\nDescription\n===========\n\n.. role:: bash(code)\n\t:language: bash\n\n.. [[[cog\n.. import os, sys, pmisc, docs.support.requirements_to_rst\n.. file_name = sys.modules['docs.support.requirements_to_rst'].__file__\n.. mdir = os.path.join(os.path.realpath(\n..    os.path.dirname(os.path.dirname(os.path.dirname(file_name)))), 'sbin'\n.. )\n.. docs.support.requirements_to_rst.def_links(cog)\n.. ]]]\n.. _Astroid: https://bitbucket.org/logilab/astroid\n.. _Cog: http://nedbatchelder.com/code/cog\n.. _Coverage: http://coverage.readthedocs.org/en/coverage-4.0a5\n.. _Decorator: https://pythonhosted.org/decorator\n.. _Docutils: http://docutils.sourceforge.net/docs\n.. _Funcsigs: https://pypi.python.org/pypi/funcsigs\n.. _Matplotlib: http://matplotlib.org\n.. _Mock: http://www.voidspace.org.uk/python/mock\n.. _Numpy: http://www.numpy.org\n.. _Pcsv: http://pcsv.readthedocs.org\n.. _Peng: http://peng.readthedocs.org\n.. _Pexdoc: http://pexdoc.readthedocs.org\n.. _Pillow: https://python-pillow.github.io\n.. _Pmisc: http://pmisc.readthedocs.org\n.. _PyContracts: https://andreacensi.github.io/contracts\n.. _Pylint: http://www.pylint.org\n.. _Py.test: http://pytest.org\n.. _Pytest-coverage: https://pypi.python.org/pypi/pytest-cov\n.. _Pytest-xdist: https://pypi.python.org/pypi/pytest-xdist\n.. _Scipy: http://www.scipy.org\n.. _Six: https://pythonhosted.org/six\n.. _Sphinx: http://sphinx-doc.org\n.. _ReadTheDocs Sphinx theme: https://github.com/snide/sphinx_rtd_theme\n.. _Inline Syntax Highlight Sphinx Extension:\n   https://bitbucket.org/klorenz/sphinxcontrib-inlinesyntaxhighlight\n.. _Tox: https://testrun.org/tox\n.. _Virtualenv: http://docs.python-guide.org/en/latest/dev/virtualenvs\n.. [[[end]]]\n\nThis module can be used to create high-quality, presentation-ready X-Y graphs\nquickly and easily\n\n***************\nClass hierarchy\n***************\n\nThe properties of the graph (figure in Matplotlib parlance) are defined in an\nobject of the pplot.Figure class.\n\nEach figure can have one or more panels, whose properties are defined by objects\nof the pplot.Panel class. Panels are arranged vertically in\nthe figure and share the same independent axis.  The limits of the independent\naxis of the figure result from the union of the limits of the independent axis\nof all the panels. The independent axis is shown by default in the bottom-most\npanel although it can be configured to be in any panel or panels.\n\nEach panel can have one or more data series, whose properties are defined by\nobjects of the pplot.Series class. A series can be associated\nwith either the primary or secondary dependent axis of the panel. The limits of\nthe primary and secondary dependent axis of the panel result from the union of\nthe primary and secondary dependent data points of all the series associated\nwith each axis. The primary axis is shown on the left of the panel and the\nsecondary axis is shown on the right of the panel. Axes can be linear or\nlogarithmic.\n\nThe data for a series is defined by a source. Two data sources are provided:\nthe pplot.BasicSource class provides basic data validation\nand minimum/maximum independent variable range bounding. The\npplot.CsvSource class builds upon the functionality of the\npplot.BasicSource class and offers a simple way of accessing\ndata from a comma-separated values (CSV) file.  Other data sources can be\nprogrammed by inheriting from the pplot.functions.DataSource\nabstract base class (ABC). The custom data source needs to implement the\nfollowing methods: :code:`__str__`, :code:`_set_indep_var` and\n:code:`_set_dep_var`. The latter two methods set the contents of the\nindependent variable (an increasing real Numpy vector) and the dependent\nvariable (a real Numpy vector) of the source, respectively.\n\n\n***************\nAxes tick marks\n***************\n\nAxes tick marks are selected so as to create the most readable graph. Two\nglobal variables control the actual number of ticks,\npplot.constants.MIN_TICKS and\npplot.constants.SUGGESTED_MAX_TICKS.\nIn general the number of ticks are between these two bounds; one or two more\nticks can be present if a data series uses interpolation and the interpolated\ncurve goes above (below) the largest (smallest) data point. Tick spacing is\nchosen so as to have the most number of data points \"on grid\". Engineering\nnotation (i.e. 1K = 1000, 1m = 0.001, etc.) is used for the axis tick marks.\n\n*******\nExample\n*******\n\n.. [[[cog\n.. import pmisc\n.. pmisc.incfile(\n..     \"plot_example_1.py\",\n..     cog.out,\n..     \"1,6-108\",\n..     \"../docs/support\"\n.. )\n.. ]]]\n.. code-block:: python\n\n    # plot_example_1.py\n    from __future__ import print_function\n    import os, sys, numpy, pplot\n\n    def main(fname, no_print):\n        \"\"\"\n        Example of how to use the pplot library\n        to generate presentation-quality plots\n        \"\"\"\n        ###\n        # Series definition (Series class)\n        ###\n        # Extract data from a comma-separated (csv)\n        # file using the CsvSource class\n        wdir = os.path.dirname(__file__)\n        csv_file = os.path.join(wdir, 'data.csv')\n        series1_obj = [pplot.Series(\n            data_source=pplot.CsvSource(\n                fname=csv_file,\n                rfilter={'value1':1},\n                indep_col_label='value2',\n                dep_col_label='value3',\n                indep_min=None,\n                indep_max=None,\n                fproc=series1_proc_func,\n                fproc_eargs={'xoffset':1e-3}\n            ),\n            label='Source 1',\n            color='k',\n            marker='o',\n            interp='CUBIC',\n            line_style='-',\n            secondary_axis=False\n        )]\n        # Literal data can be used with the BasicSource class\n        series2_obj = [pplot.Series(\n            data_source=pplot.BasicSource(\n                indep_var=numpy.array([0e-3, 1e-3, 2e-3]),\n                dep_var=numpy.array([4, 7, 8]),\n            ),\n            label='Source 2',\n            color='r',\n            marker='s',\n            interp='STRAIGHT',\n            line_style='--',\n            secondary_axis=False\n        )]\n        series3_obj = [pplot.Series(\n            data_source=pplot.BasicSource(\n                indep_var=numpy.array([0.5e-3, 1e-3, 1.5e-3]),\n                dep_var=numpy.array([10, 9, 6]),\n            ),\n            label='Source 3',\n            color='b',\n            marker='h',\n            interp='STRAIGHT',\n            line_style='--',\n            secondary_axis=True\n        )]\n        series4_obj = [pplot.Series(\n            data_source=pplot.BasicSource(\n                indep_var=numpy.array([0.3e-3, 1.8e-3, 2.5e-3]),\n                dep_var=numpy.array([8, 8, 8]),\n            ),\n            label='Source 4',\n            color='g',\n            marker='D',\n            interp='STRAIGHT',\n            line_style=None,\n            secondary_axis=True\n        )]\n        ###\n        # Panels definition (Panel class)\n        ###\n        panel_obj = pplot.Panel(\n            series=series1_obj+series2_obj+series3_obj+series4_obj,\n            primary_axis_label='Primary axis label',\n            primary_axis_units='-',\n            secondary_axis_label='Secondary axis label',\n            secondary_axis_units='W',\n            legend_props={'pos':'lower right', 'cols':1}\n        )\n        ###\n        # Figure definition (Figure class)\n        ###\n        dim = 2.25\n        fig_obj = pplot.Figure(\n            panels=panel_obj,\n            indep_var_label='Indep. var.',\n            indep_var_units='S',\n            log_indep_axis=False,\n            fig_width=4*dim,\n            fig_height=3*dim,\n            title='Library pplot Example'\n        )\n        # Save figure\n        output_fname = os.path.join(wdir, fname)\n        if not no_print:\n            print('Saving image to file {0}'.format(output_fname))\n        fig_obj.save(output_fname, compress=True)\n\n    def series1_proc_func(indep_var, dep_var, xoffset):\n        \"\"\" Process data 1 series \"\"\"\n        return (indep_var*1e-3)-xoffset, dep_var\n\n.. [[[end]]]\n\n|\n\n\nInterpreter\n===========\n\nThe package has been developed and tested with Python 2.7, 3.5 and 3.6 under\nLinux (Debian, Ubuntu), Apple OS X and Microsoft Windows\n\nInstalling\n==========\n\n.. code-block:: bash\n\n\t$ pip install pplot\n\nDocumentation\n=============\n\nAvailable at `Read the Docs <https://pplot.readthedocs.org>`_\n\nContributing\n============\n\n1. Abide by the adopted `code of conduct\n   <http://contributor-covenant.org/version/1/3/0>`_\n\n2. Fork the `repository <https://github.com/pmacosta/pplot>`_ from\n   GitHub and then clone personal copy [#f1]_:\n\n\t.. code-block:: bash\n\n\t\t$ git clone \\\n\t\t      https://github.com/[github-user-name]/pplot.git\n                Cloning into 'pplot'...\n                ...\n\t\t$ cd pplot\n\t\t$ export PPLOT_DIR=${PWD}\n\n3. Install the project's Git hooks and build the documentation. The pre-commit\n   hook does some minor consistency checks, namely trailing whitespace and\n   `PEP8 <https://www.python.org/dev/peps/pep-0008/>`_ compliance via\n   Pylint. Assuming the directory to which the repository was cloned is\n   in the :bash:`$PPLOT_DIR` shell environment variable:\n\n\t.. code-block:: bash\n\n\t\t$ ${PPLOT_DIR}/sbin/complete-cloning.sh\n                Installing Git hooks\n                Building pplot package documentation\n                ...\n\n4. Ensure that the Python interpreter can find the package modules\n   (update the :bash:`$PYTHONPATH` environment variable, or use\n   `sys.paths() <https://docs.python.org/2/library/sys.html#sys.path>`_,\n   etc.)\n\n\t.. code-block:: bash\n\n\t\t$ export PYTHONPATH=${PYTHONPATH}:${PPLOT_DIR}\n\n5. Install the dependencies (if needed, done automatically by pip):\n\n    .. [[[cog\n    .. docs.support.requirements_to_rst.proc_requirements(cog)\n    .. ]]]\n\n\n    * `Astroid`_ (1.5.3 or newer)\n\n    * `Cog`_ (2.5.1 or newer)\n\n    * `Coverage`_ (4.4.1 or newer)\n\n    * `Decorator`_ (4.0.11 or newer)\n\n    * `Docutils`_ (0.13.1 or newer)\n\n    * `Funcsigs`_ (Python 2.x only, 1.0.2 or newer)\n\n    * `Inline Syntax Highlight Sphinx Extension`_ (0.2 or newer)\n\n    * `Matplotlib`_ (2.0.0 or newer)\n\n    * `Mock`_ (Python 2.x only, 2.0.0 or newer)\n\n    * `Numpy`_ (1.13.1 or newer)\n\n    * `Pcsv`_ (1.0.6 or newer)\n\n    * `Peng`_ (1.0.6 or newer)\n\n    * `Pexdoc`_ (1.0.9 or newer)\n\n    * `Pillow`_ (4.0.0 or newer)\n\n    * `Pmisc`_ (1.2.2 or newer)\n\n    * `Py.test`_ (3.1.2 or newer)\n\n    * `PyContracts`_ (1.7.15 or newer)\n\n    * `Pylint`_ (1.7.1 or newer)\n\n    * `Pytest-coverage`_ (2.5.1 or newer)\n\n    * `Pytest-xdist`_ (optional, 1.21.0 or newer)\n\n    * `ReadTheDocs Sphinx theme`_ (0.2.4 or newer)\n\n    * `Scipy`_ (1.0.0 or newer)\n\n    * `Six`_ (1.11.0 or newer)\n\n    * `Sphinx`_ (1.6.5 or newer)\n\n    * `Tox`_ (2.9.1 or newer)\n\n    * `Virtualenv`_ (15.1.0 or newer)\n\n    .. [[[end]]]\n\n6. Implement a new feature or fix a bug\n\n7. Write a unit test which shows that the contributed code works as expected.\n   Run the package tests to ensure that the bug fix or new feature does not\n   have adverse side effects. If possible achieve 100% code and branch\n   coverage of the contribution. Thorough package validation\n   can be done via Tox and Py.test:\n\n\t.. code-block:: bash\n\n            $ tox\n            GLOB sdist-make: .../pplot/setup.py\n            py26-pkg inst-nodeps: .../pplot/.tox/dist/pplot-...zip\n\n   `Setuptools <https://bitbucket.org/pypa/setuptools>`_ can also be used\n   (Tox is configured as its virtual environment manager) [#f2]_:\n\n\t.. code-block:: bash\n\n\t    $ python setup.py tests\n            running tests\n            running egg_info\n            writing requirements to pplot.egg-info/requires.txt\n            writing pplot.egg-info/PKG-INFO\n            ...\n\n   Tox (or Setuptools via Tox) runs with the following default environments:\n   ``py27-pkg``, ``py35-pkg`` and ``py36-pkg`` [#f3]_. These use the 2.7, 3.5\n   and 3.6 interpreters, respectively, to test all code in the documentation\n   (both in Sphinx ``*.rst`` source files and in docstrings), run all unit\n   tests, measure test coverage and re-build the exceptions documentation. To\n   pass arguments to Py.test (the test runner) use a double dash (``--``) after\n   all the Tox arguments, for example:\n\n\t.. code-block:: bash\n\n\t    $ tox -e py27-pkg -- -n 4\n            GLOB sdist-make: .../pplot/setup.py\n            py27-pkg inst-nodeps: .../pplot/.tox/dist/pplot-...zip\n            ...\n\n   Or use the :code:`-a` Setuptools optional argument followed by a quoted\n   string with the arguments for Py.test. For example:\n\n\t.. code-block:: bash\n\n\t    $ python setup.py tests -a \"-e py27-pkg -- -n 4\"\n            running tests\n            ...\n\n   There are other convenience environments defined for Tox [#f4]_:\n\n    * ``py27-repl``, ``py35-repl`` and ``py36-repl`` run the 2.7, 3.6 or 3.6\n      REPL, respectively, in the appropriate virtual environment. The ``pplot``\n      package is pip-installed by Tox when the environments are created.\n      Arguments to the interpreter can be passed in the command line after a\n      double dash (``--``)\n\n    * ``py27-test``, ``py35-test`` and ``py36-test`` run py.test using the\n      Python 2.7, 3.5 or Python 3.6 interpreter, respectively, in the\n      appropriate virtual environment. Arguments to py.test can be passed in the\n      command line after a double dash (``--``) , for example:\n\n\t.. code-block:: bash\n\n\t    $ tox -e py36-test -- -x test_pplot.py\n            GLOB sdist-make: [...]/pplot/setup.py\n            py36-test inst-nodeps: [...]/pplot/.tox/dist/pplot-1.1rc1.zip\n            py36-test installed: -f file:[...]\n            py36-test runtests: PYTHONHASHSEED='1264622266'\n            py36-test runtests: commands[0] | [...]py.test -x test_pplot.py\n            ===================== test session starts =====================\n            platform linux -- Python 3.6.4, pytest-3.3.1, py-1.5.2, pluggy-0.6.0\n            rootdir: [...]/pplot/.tox/py36/share/pplot/tests, inifile: pytest.ini\n            plugins: xdist-1.21.0, forked-0.2, cov-2.5.1\n            collected 414 items\n            ...\n\n    * ``py27-cov``, ``py35-cov`` and ``py36-cov`` test code and branch coverage\n      using the 2.7, 3.5 or 3.6 interpreter, respectively, in the appropriate\n      virtual environment. Arguments to py.test can be passed in the command\n      line after a double dash (``--``). The report can be found in\n      :bash:`${PPLOT_DIR}/.tox/py[PV]/usr/share/pplot/tests/htmlcov/index.html`\n      where ``[PV]`` stands for ``27``, ``35`` or ``36`` depending on the\n      interpreter used\n\n8. Verify that continuous integration tests pass. The package has continuous\n   integration configured for Linux (via `Travis <http://www.travis-ci.org>`_)\n   and for Microsoft Windows (via `Appveyor <http://www.appveyor.com>`_).\n   Aggregation/cloud code coverage is configured via\n   `Codecov <https://codecov.io>`_. It is assumed that the Codecov repository\n   upload token in the Travis build is stored in the :bash:`${CODECOV_TOKEN}`\n   environment variable (securely defined in the Travis repository settings\n   page). Travis build artifacts can be transferred to Dropbox using the\n   `Dropbox Uploader <https://github.com/andreafabrizi/Dropbox-Uploader>`_\n   script (included for convenience in the :bash:`${PPLOT_DIR}/sbin` directory).\n   For an automatic transfer that does not require manual entering of\n   authentication credentials place the APPKEY, APPSECRET, ACCESS_LEVEL,\n   OAUTH_ACCESS_TOKEN and OAUTH_ACCESS_TOKEN_SECRET values required by\n   Dropbox Uploader in the in the :bash:`${DBU_APPKEY}`,\n   :bash:`${DBU_APPSECRET}`, :bash:`${DBU_ACCESS_LEVEL}`,\n   :bash:`${DBU_OAUTH_ACCESS_TOKEN}` and\n   :bash:`${DBU_OAUTH_ACCESS_TOKEN_SECRET}` environment variables,\n   respectively (also securely defined in Travis repository settings page)\n\n\n9. Document the new feature or bug fix (if needed). The script\n   :bash:`${PPLOT_DIR}/sbin/build_docs.py` re-builds the whole package\n   documentation (re-generates images, cogs source files, etc.):\n\n\t.. [[[cog pmisc.ste('build_docs.py -h', 0, mdir, cog.out) ]]]\n\n\t.. code-block:: bash\n\n\t    $ ${PKG_BIN_DIR}/build_docs.py -h\n\t    usage: build_docs.py [-h] [-d DIRECTORY] [-r]\n\t                         [-n NUM_CPUS] [-t]\n\n\t    Build pplot package documentation\n\n\t    optional arguments:\n\t      -h, --help            show this help message and exit\n\t      -d DIRECTORY, --directory DIRECTORY\n\t                            specify source file directory\n\t                            (default ../pplot)\n\t      -r, --rebuild         rebuild exceptions documentation.\n\t                            If no module name is given all\n\t                            modules with auto-generated\n\t                            exceptions documentation are\n\t                            rebuilt\n\t      -n NUM_CPUS, --num-cpus NUM_CPUS\n\t                            number of CPUs to use (default: 1)\n\t      -t, --test            diff original and rebuilt file(s)\n\t                            (exit code 0 indicates file(s) are\n\t                            identical, exit code 1 indicates\n\t                            file(s) are different)\n\n\n\t.. [[[end]]]\n\n.. rubric:: Footnotes\n\n.. [#f1] All examples are for the `bash <https://www.gnu.org/software/bash/>`_\n   shell\n\n.. [#f2] It appears that Scipy dependencies do not include Numpy (as they\n   should) so running the tests via Setuptools will typically result in an\n   error. The pplot requirement file specifies Numpy before Scipy and this\n   installation order is honored by Tox so running the tests via Tox sidesteps\n   Scipy's broken dependency problem but requires Tox to be installed before\n   running the tests (Setuptools installs Tox if needed)\n\n.. [#f3] It is assumed that all the Python interpreters are in the executables\n   path. Source code for the interpreters can be downloaded from Python's main\n   `site <http://www.python.org/downloads>`_\n\n.. [#f4] Tox configuration largely inspired by\n   `Ionel's codelog <http://blog.ionelmc.ro/2015/04/14/\n   tox-tricks-and-patterns/>`_\n\n\nLicense\n=======\n\nThe MIT License (MIT)\n\nCopyright (c) 2013-2018 Pablo Acosta-Serafini\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n.. CHANGELOG.rst\n.. Copyright (c) 2013-2018 Pablo Acosta-Serafini\n.. See LICENSE for details\n\nChangelog\n=========\n\n* 1.1.2 [2018-01-16]: Hosted documentation build fixes\n\n* 1.1.1 [2018-01-16]: Corrected PyPI Python interpreter version\n\n* 1.1.0 [2018-01-16]: Added support for specifying independent axis tick labels\n  (ignored for figures with logarithmic independent axis). Improved minimum\n  image size computation.  Removed all padding around the exterior of the image.\n  Dropped support for Python interpreter versions 2.6, 3.3 and 3.4. Updated\n  dependencies versions to their current versions\n\n* 1.0.4 [2017-02-25]: Fixed tick marks labels in the [0, 1] range. Closed image\n  tests escapes\n\n* 1.0.3 [2017-02-16]: Python 3.6 support\n\n* 1.0.2 [2016-05-16]: PyPI front page fixes\n\n* 1.0.1 [2016-05-16]: Documentation build fixes to display README information\n  correctly in repositories and PyPI\n\n* 1.0.0 [2016-05-16]: Final release of 1.0.0 branch\n\n* 1.0.0rc1 [2016-05-12]: Initial commit, forked a subset from putil PyPI\n  package\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/pmacosta/pplot/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pplot",
    "platform": "any",
    "project_url": "https://pypi.org/project/pplot/",
    "release_url": "https://pypi.org/project/pplot/1.1.2/",
    "requires_dist": [
      "pcsv (>=1.0.6)",
      "peng (>=1.0.6)",
      "pexdoc (>=1.0.9)",
      "pmisc (>=1.2.2)",
      "sphinxcontrib-inlinesyntaxhighlight (>=0.2)",
      "sphinx (>=1.6.5)",
      "six (>=1.11.0)",
      "pytest (>=3.1.2)",
      "pycontracts (>=1.7.15)",
      "mock (>=2.0.0)",
      "funcsigs (>=1.0.2)",
      "decorator (>=4.0.11)"
    ],
    "requires_python": "",
    "summary": "This module can be used to create high-quality, presentation-ready X-Y graphs quickly and easily",
    "version": "1.1.2"
  },
  "releases": {
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e1dbb260340c19aa3eb052a6cbbffa76",
          "sha256": "b2bb79a4b875e677fcdf61bc2c2f84f1c198257282d88ed69b59ce93e1d1cfd4"
        },
        "downloads": -1,
        "filename": "pplot-1.0.4-py26-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1dbb260340c19aa3eb052a6cbbffa76",
        "packagetype": "bdist_wheel",
        "python_version": "py26",
        "size": 59339,
        "upload_time": "2017-02-25T21:32:16",
        "url": "https://files.pythonhosted.org/packages/c8/ca/d2bc964f96066bdf1098c79a58a0c1746940e9d6ee6b524108b59426d62f/pplot-1.0.4-py26-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "57dfdfa5516f22942338a1fdb0e3bcb0",
          "sha256": "8215360aa5a5324de8e02abd2a18024e5eadaa92a0ccda0c6861eece01af8db0"
        },
        "downloads": -1,
        "filename": "pplot-1.0.4-py27-none-any.whl",
        "has_sig": false,
        "md5_digest": "57dfdfa5516f22942338a1fdb0e3bcb0",
        "packagetype": "bdist_wheel",
        "python_version": "py27",
        "size": 59268,
        "upload_time": "2017-02-25T21:32:18",
        "url": "https://files.pythonhosted.org/packages/8b/f5/6bd8c81782458f3a65e98d97c17dbdf786a467e6bf92f967ff3b9ffc5e2f/pplot-1.0.4-py27-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "534b06432c92989460b8f1cb9116d4df",
          "sha256": "d3d79ce016c5935e6156b815ceea7d0295c56b60b42cdcf68f46d9c428790c69"
        },
        "downloads": -1,
        "filename": "pplot-1.0.4-py33-none-any.whl",
        "has_sig": false,
        "md5_digest": "534b06432c92989460b8f1cb9116d4df",
        "packagetype": "bdist_wheel",
        "python_version": "py33",
        "size": 59287,
        "upload_time": "2017-02-25T21:32:21",
        "url": "https://files.pythonhosted.org/packages/c0/53/b1b491166d8b96d19cb81d4a3cb2c2005989374fb801ccee1c0e88f37aef/pplot-1.0.4-py33-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "5d88143bfd36dd1e7ba3a74b71807c21",
          "sha256": "a1a32ab5ae30488d72010a914186e297dfc49bf9731c231ae6c818afb8ef1c44"
        },
        "downloads": -1,
        "filename": "pplot-1.0.4-py34-none-any.whl",
        "has_sig": false,
        "md5_digest": "5d88143bfd36dd1e7ba3a74b71807c21",
        "packagetype": "bdist_wheel",
        "python_version": "py34",
        "size": 59240,
        "upload_time": "2017-02-25T21:32:23",
        "url": "https://files.pythonhosted.org/packages/85/09/4dbb2d079177816db2cbd32fcc3d82e22b4d1d2021fc0c2b41eff388934b/pplot-1.0.4-py34-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "99fee4204412745ec4b94eec20a32389",
          "sha256": "2c9821058a9611fb89a58eebcfb5ea084f8b428631e7e8dfa3a5647c7ec5e0ac"
        },
        "downloads": -1,
        "filename": "pplot-1.0.4-py35-none-any.whl",
        "has_sig": false,
        "md5_digest": "99fee4204412745ec4b94eec20a32389",
        "packagetype": "bdist_wheel",
        "python_version": "py35",
        "size": 59240,
        "upload_time": "2017-02-25T21:32:25",
        "url": "https://files.pythonhosted.org/packages/22/3d/5988cebc068a3c72db148e8ffae3b5ebc2f9689454e104366a5f38197b83/pplot-1.0.4-py35-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "802882802d54832555a448f4edd095f7",
          "sha256": "426f060ec6bab88160f8adcdc8d55a8816208e2ce823af1272b8d22b4659a76e"
        },
        "downloads": -1,
        "filename": "pplot-1.0.4-py36-none-any.whl",
        "has_sig": false,
        "md5_digest": "802882802d54832555a448f4edd095f7",
        "packagetype": "bdist_wheel",
        "python_version": "py36",
        "size": 59242,
        "upload_time": "2017-02-25T21:32:27",
        "url": "https://files.pythonhosted.org/packages/c4/9f/8f87cf5700ef93f3b2145e3087d742df299ac8f0d216612dd1e50aa92de5/pplot-1.0.4-py36-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "410fd5ec40a8378fab1ccdd188f803c2",
          "sha256": "06b51d2a52a84a3263909ecc40315c88860efcdb2715abb8b515a963970772f7"
        },
        "downloads": -1,
        "filename": "pplot-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "410fd5ec40a8378fab1ccdd188f803c2",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 38386109,
        "upload_time": "2017-02-25T21:32:39",
        "url": "https://files.pythonhosted.org/packages/a4/e9/ef5b3c29e4d6a3b958f53ccc50b88ec81ac8cadfaa39200ee9240f6d511b/pplot-1.0.4.tar.gz"
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0d10904a5aeef5a739af781f6ab99e46",
          "sha256": "8ec194629e89351e6c8692394bb2db24e110a5ad893602198337a8aa94f46880"
        },
        "downloads": -1,
        "filename": "pplot-1.1.2-py27-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d10904a5aeef5a739af781f6ab99e46",
        "packagetype": "bdist_wheel",
        "python_version": "py27",
        "size": 65294,
        "upload_time": "2018-01-16T18:30:15",
        "url": "https://files.pythonhosted.org/packages/0a/c5/ef645a4f13a0bcc25669e58200f482f9dcc352dca0e64a7d865c80edc341/pplot-1.1.2-py27-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "3b00fe63b7c3eb11639f1d3111d2a6c5",
          "sha256": "1e97b47c50fb48bdb8b146841c66901ff7d7d2b476ecf4b1aebfa69e31e5ce55"
        },
        "downloads": -1,
        "filename": "pplot-1.1.2-py35-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b00fe63b7c3eb11639f1d3111d2a6c5",
        "packagetype": "bdist_wheel",
        "python_version": "py35",
        "size": 65294,
        "upload_time": "2018-01-16T18:30:16",
        "url": "https://files.pythonhosted.org/packages/78/ea/51d7051da0f5bd02c1e06223e01bfece348caa64c4e3270b3890b7f385e7/pplot-1.1.2-py35-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "b490803871136bf7e27bcdd6ec62ae69",
          "sha256": "60ea90184a484da65f52dbd1003b9059491ffc94bde24468290e398234c87faf"
        },
        "downloads": -1,
        "filename": "pplot-1.1.2-py36-none-any.whl",
        "has_sig": false,
        "md5_digest": "b490803871136bf7e27bcdd6ec62ae69",
        "packagetype": "bdist_wheel",
        "python_version": "py36",
        "size": 65294,
        "upload_time": "2018-01-16T18:30:18",
        "url": "https://files.pythonhosted.org/packages/b8/4e/3f6b94255b0711d5a9a370a1362ec3de089acc6c8410e07d3bc9c971e914/pplot-1.1.2-py36-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "8ea32e7455fc5263d0bd5dbf0a19db19",
          "sha256": "c312212fcfdc472faa01fa97dff5360b7ffd1587d52aceb91226f4052c6d2209"
        },
        "downloads": -1,
        "filename": "pplot-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8ea32e7455fc5263d0bd5dbf0a19db19",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 26027655,
        "upload_time": "2018-01-16T18:30:26",
        "url": "https://files.pythonhosted.org/packages/b4/3d/5e11d83d87866a0e1403b5fd2ba02c4c12a48e8fea5954cda493d661c6a0/pplot-1.1.2.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "0d10904a5aeef5a739af781f6ab99e46",
        "sha256": "8ec194629e89351e6c8692394bb2db24e110a5ad893602198337a8aa94f46880"
      },
      "downloads": -1,
      "filename": "pplot-1.1.2-py27-none-any.whl",
      "has_sig": false,
      "md5_digest": "0d10904a5aeef5a739af781f6ab99e46",
      "packagetype": "bdist_wheel",
      "python_version": "py27",
      "size": 65294,
      "upload_time": "2018-01-16T18:30:15",
      "url": "https://files.pythonhosted.org/packages/0a/c5/ef645a4f13a0bcc25669e58200f482f9dcc352dca0e64a7d865c80edc341/pplot-1.1.2-py27-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "3b00fe63b7c3eb11639f1d3111d2a6c5",
        "sha256": "1e97b47c50fb48bdb8b146841c66901ff7d7d2b476ecf4b1aebfa69e31e5ce55"
      },
      "downloads": -1,
      "filename": "pplot-1.1.2-py35-none-any.whl",
      "has_sig": false,
      "md5_digest": "3b00fe63b7c3eb11639f1d3111d2a6c5",
      "packagetype": "bdist_wheel",
      "python_version": "py35",
      "size": 65294,
      "upload_time": "2018-01-16T18:30:16",
      "url": "https://files.pythonhosted.org/packages/78/ea/51d7051da0f5bd02c1e06223e01bfece348caa64c4e3270b3890b7f385e7/pplot-1.1.2-py35-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "b490803871136bf7e27bcdd6ec62ae69",
        "sha256": "60ea90184a484da65f52dbd1003b9059491ffc94bde24468290e398234c87faf"
      },
      "downloads": -1,
      "filename": "pplot-1.1.2-py36-none-any.whl",
      "has_sig": false,
      "md5_digest": "b490803871136bf7e27bcdd6ec62ae69",
      "packagetype": "bdist_wheel",
      "python_version": "py36",
      "size": 65294,
      "upload_time": "2018-01-16T18:30:18",
      "url": "https://files.pythonhosted.org/packages/b8/4e/3f6b94255b0711d5a9a370a1362ec3de089acc6c8410e07d3bc9c971e914/pplot-1.1.2-py36-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "8ea32e7455fc5263d0bd5dbf0a19db19",
        "sha256": "c312212fcfdc472faa01fa97dff5360b7ffd1587d52aceb91226f4052c6d2209"
      },
      "downloads": -1,
      "filename": "pplot-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8ea32e7455fc5263d0bd5dbf0a19db19",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 26027655,
      "upload_time": "2018-01-16T18:30:26",
      "url": "https://files.pythonhosted.org/packages/b4/3d/5e11d83d87866a0e1403b5fd2ba02c4c12a48e8fea5954cda493d661c6a0/pplot-1.1.2.tar.gz"
    }
  ]
}