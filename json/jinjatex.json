{
  "info": {
    "author": "Alexander Dietm\u00fcller",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Jinjatex\n========\n\nA wrapper of `Jinja2 <https://github.com/pallets/jinja>`_ for easy\nrendering of `.tex` files of all sorts.\n\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    pip install jinjatex\n\nUsage\n-----\n\nThe main :code:`Jinjatex` class provides wrappers to compile tex templates\nwith jinja. Tex is not included, so make sure the binaries are available.\n\nTemplate Syntax\n^^^^^^^^^^^^^^^\n\n.. code-block:: none\n\n    ((= This is a comment. =))\n    ((* for value in somelist *))\n        ((( value )))\n    ((* endfor *))\n\nPython Bindings\n^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    from jinjatex import Jinjatex\n\n    from textwrap import dedent\n\n    # Example 1: Compile string templates\n\n    template_string = dedent(r\"\"\"\n        \\documentclass{article}\n        \\begin{document}\n        Hi ((( name )))!\n        \\end{document}\n        \"\"\")\n\n    tex = Jinjatex()\n\n    # Return rendered template only\n    tex.render(template_string)\n    # Compile .tex and return content of .pdf, default engine is pdflatex\n    with open('result.pdf', 'wb') as file:\n        file.write(tex.compile(template_string))\n\n\n    # Example 2: Jinja options and other tex compilers\n    # Assuming a template 'mytemplate.tex' exists in mypackage/tex_templates\n\n    from jinja2 import PackageLoader, StrictUndefined\n\n    tex = Jinjatex(tex_engine='xelatex',\n                   loader=PackageLoader('mypackage', 'tex_templates'),\n                   trim_blocks=True,\n                   undefined=StrictUndefined)\n\n    tex.render_template('mytemplate.tex')\n    with open('result.pdf', 'wb') as file:\n        file.write(tex.compile_template('mytemplate.tex'))\n",
    "docs_url": null,
    "download_url": "https://github.com/NotSpecial/jinjatex/releases/tag/0.1",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/NotSpecial/jinjatex",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jinjatex",
    "platform": "",
    "project_url": "https://pypi.org/project/jinjatex/",
    "release_url": "https://pypi.org/project/jinjatex/0.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "A wrapper to easily use Jinja2 for tex-templates.",
    "version": "0.1"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7680a3cef1ba9f6f61a0a7cfb3223e8d",
          "sha256": "e5018fb21610dc3feabc99195e202e41ff05e75bff618b1786d59fce39da5ce7"
        },
        "downloads": 0,
        "filename": "jinjatex-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7680a3cef1ba9f6f61a0a7cfb3223e8d",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3360,
        "upload_time": "2017-07-31T21:17:03",
        "url": "https://files.pythonhosted.org/packages/98/26/e809225437cfec09e22c88caeb27bd08753f9dc8d93cb05261e116f3a1e6/jinjatex-0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "7680a3cef1ba9f6f61a0a7cfb3223e8d",
        "sha256": "e5018fb21610dc3feabc99195e202e41ff05e75bff618b1786d59fce39da5ce7"
      },
      "downloads": 0,
      "filename": "jinjatex-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7680a3cef1ba9f6f61a0a7cfb3223e8d",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 3360,
      "upload_time": "2017-07-31T21:17:03",
      "url": "https://files.pythonhosted.org/packages/98/26/e809225437cfec09e22c88caeb27bd08753f9dc8d93cb05261e116f3a1e6/jinjatex-0.1.tar.gz"
    }
  ]
}