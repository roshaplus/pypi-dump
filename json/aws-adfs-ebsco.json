{
  "info": {
    "author": "Venth",
    "author_email": "artur.krysiak.warszawa@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Python Software Foundation License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python"
    ],
    "description": "# aws-adfs\r\n[![PyPI version](https://badge.fury.io/py/aws-adfs.svg)](https://badge.fury.io/py/aws-adfs)\r\n[![Travis build](https://api.travis-ci.org/venth/aws-adfs.svg?branch=master)](https://api.travis-ci.org/venth/aws-adfs.svg?branch=master)\r\n\r\nCommand line tool to easier aws cli authentication against ADFS (multi factor authentication with active directory). This is a fork of aws-adfs originally made by [Venth](https://github.com/venth) in [this repository](https://github.com/venth/aws-adfs) and uploaded to PyPI for ease of installation.\r\n\r\nThanks to [Brandond](https://github.com/brandond) contribution - \"Remove storage of credentials, in favor of storing ADFS session cookies\"\r\naws-adfs:\r\n\r\n> allows you to re-login to STS without\r\n> entering credentials for an extended period of time, without having to store the user's actual credentials.\r\n> It also lets an organization control the period in which a user can re-login to STS without entering credentials,\r\n> by altering the ADFS session lifetime.\r\n\r\nThanks to [Brandond](https://github.com/brandond) contribution - \"Add support for legacy aws_security_token key in credentials file\"\r\naws-adfs supports ansible by providing two keys with security token:\r\n* AWS_SESSION_TOKEN and\r\n* AWS_SECURITY_TOKEN\r\n\r\nThanks to [Brandond](https://github.com/brandond) contribution - \"Add support for Kerberos SSO on Windows via requests_negotiate_sspi\"\r\n* on windows os will be used Security Support Provider Interface\r\n\r\n# Compatibility\r\n\r\nAs of version 0.2.0, this tool acts on the 'default' profile unless an alternate profile name has been specified on the command line or in your environment. Previous versions acted on the 'adfs' profile by default.\r\n\r\n# MFA integration\r\n\r\naws-adfs integrates with:\r\n* [duo security](https://duo.com) MFA provider\r\n\r\n# Installation\r\n\r\n* user local installation\r\n\r\n    ```\r\n    pip install aws-adfs-ebsco\r\n    ```\r\n\r\n    Please note, that you need to add $HOME/.local/bin to your PATH\r\n\r\n* system wide installation\r\n\r\n    ```\r\n    sudo pip install aws-adfs-ebsco\r\n    ```\r\n\r\n* virtualenvs\r\n\r\n    ```\r\n    virtualenv -p /usr/bin/python2.7 aws-adfs-ebsco\r\n    source aws-adfs-ebsco/bin/activate\r\n    pip install aws-adfs-ebsco\r\n    ...\r\n    ...\r\n    deactivate\r\n    ```\r\n\r\n# Examples of usage\r\n\r\n* login to your adfs host with disabled ssl verification on aws cli profile: adfs\r\n\r\n    ```\r\n    aws-adfs login --adfs-host=your-adfs-hostname --no-ssl-verification\r\n    ```\r\n\r\n    and verification\r\n\r\n    ```\r\n    aws --profile=adfs s3 ls\r\n    ```\r\n\r\n* login to your adfs host with disabled ssl verification on specified aws cli profile: specified-profile\r\n\r\n    ```\r\n    aws-adfs login --profile=specified-profile --adfs-host=your-adfs-hostname --no-ssl-verification\r\n    ```\r\n\r\n    and verification\r\n\r\n    ```\r\n    aws --profile=specified-profile s3 ls\r\n    ```\r\n\r\n* help, help, help?\r\n    ```\r\n    $ aws-adfs --help\r\n    Usage: aws-adfs [OPTIONS] COMMAND [ARGS]...\r\n\r\n    Options:\r\n      --version  Show current tool version\r\n      --help  Show this message and exit.\r\n\r\n    Commands:\r\n      list   lists available profiles\r\n      login  Authenticates an user with active directory...\r\n      reset  removes stored profile\r\n    ```\r\n\r\n    ```\r\n    $ aws-adfs list --help\r\n    Usage: aws-adfs list [OPTIONS]\r\n\r\n      lists available profiles\r\n\r\n    Options:\r\n      --version  Show current tool version\r\n      --help  Show this message and exit.\r\n    ```\r\n\r\n    ```\r\n    $ aws-adfs login --help\r\n    Usage: aws-adfs login [OPTIONS]\r\n\r\n      Authenticates an user with active directory credentials\r\n\r\n    Options:\r\n      --profile TEXT                  AWS cli profile that will be authenticated.\r\n                                      After successful authentication just use:\r\n                                      aws --profile <authenticated profile>\r\n                                      <service> ...\r\n      --region TEXT                   The default AWS region that this script will\r\n                                      connect\r\n                                      to for all API calls\r\n      --ssl-verification / --no-ssl-verification\r\n                                      SSL certificate verification: Whether or not\r\n                                      strict certificate\r\n                                      verification is done,\r\n                                      False should only be used for dev/test\r\n      --adfs-host TEXT                For the first time for a profile it has to\r\n                                      be provided, next time for the same profile\r\n                                      it will be loaded from the stored\r\n                                      configuration\r\n      --output-format [json|text|table]\r\n                                      Output format used by aws cli\r\n      --provider-id TEXT              Provider ID, e.g urn:amazon:webservices\r\n                                      (optional)\r\n      --s3-signature-version [s3v4]   s3 signature version: Identifies the version\r\n                                      of AWS Signature to support for\r\n                                      authenticated requests. Valid values: s3v4\r\n      --stdin                         Read username, password from standard input\r\n                                      separated by a newline.\r\n      --help                          Show this message and exit.\r\n    ```\r\n    ```\r\n    $ aws-adfs reset --help                                                                                                                                              13:39\r\n    Usage: aws-adfs reset [OPTIONS]\r\n\r\n      removes stored profile\r\n\r\n    Options:\r\n      --profile TEXT  AWS cli profile that will be removed\r\n      --help          Show this message and exit.\r\n    ```\r\n\r\n# Known issues\r\n* duo-security\r\n    * Error: Cannot begin authentication process. The error response: {\"message\": \"Unknown authentication method.\", \"stat\": \"FAIL\"}\r\n\r\n        Please setup preferred auth method in duo-sercurity settings (settings' -> 'My Settings & Devices').\r\n* in cases of trouble with lxml please install\r\n\r\n  ```\r\n  sudo apt-get install python-dev libxml2-dev libxslt1-dev zlib1g-dev\r\n  ```\r\n* in cases of trouble with OSX Sierra (obsolete OpenSSL), upgrade OpenSSL. Example:\r\n  ```\r\n  brew upgrade openssl\r\n  ```\r\n  AND add explicit directive to .bash_profile:\r\n  ```\r\n  export PATH=$(brew --prefix openssl)/bin:$PATH\r\n  ```\r\n\r\n* python 2.6 is not supported\r\n* python 3.2 is not supported\r\n\r\n\r\n# Credits\r\n* [Brandond](https://github.com/brandond) for: Remove storage of credentials, in favor of storing ADFS session cookies\r\n* [Brandond](https://github.com/brandond) for: Add support for legacy aws_security_token key in credentials file\r\n* [Brandond](https://github.com/brandond) for: Store last username in profile config; use it as default for prompt\r\n* [Brandond](https://github.com/brandond) for: python 3 compatibility\r\n* [Brandond](https://github.com/brandond) for: Add support for Kerberos SSO on Windows via requests_negotiate_sspi\r\n* [Brandond](https://github.com/brandond) for: ssl_verification must be a str\r\n* [Brandond](https://github.com/brandond) for: Move pytest-runner out of setup-requires\r\n* [Brandond](https://github.com/brandond) for: Improve handling of role selection\r\n* [Brandond](https://github.com/brandond) for: Improve handling of errors caused by excessive cookie growth\r\n* [Brandond](https://github.com/brandond) for: Default to 'default' profile, in line with other AWS tools\r\n* [kwhitlock](https://github.com/kwhitlock) for: Added extra option \"--provider-id\"\r\n* [SydOps](https://github.com/SydOps) for: add additional information in list command's output\r\n* [eric-nord](https://github.com/eric-nord) for: bringing topic of [duo security](https://duo.com) MFA integration\r\n* [roblugton](https://github.com/roblugton) for: Fix formatting in README.md\r\n* [cliv](https://github.com/cliv) for: pointing out the issue with missing preferred device for duo-security and providing workaround\r\n* [AndrewFarley](https://github.com/AndrewFarley) for: Bug in parsing Duo host and signature, backwards compatible\r\n* [eikenb](https://github.com/eikenb) for: Version 0.3.4 returns no roles - thanks for vigilance of [eikenb](https://github.com/eikenb) spoiled egg was identified\r\n* [eikenb](https://github.com/eikenb) for: add login argument to accept username/password from stdin\r\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/gpreston2/aws-adfs",
    "keywords": "aws adfs console tool",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aws-adfs-ebsco",
    "platform": "",
    "project_url": "https://pypi.org/project/aws-adfs-ebsco/",
    "release_url": "https://pypi.org/project/aws-adfs-ebsco/0.3.6/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "AWS Cli authenticator via ADFS - small command-line tool to authenticate via ADFS and assume chosen role",
    "version": "0.3.6"
  },
  "releases": {
    "0.3.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6953d0af13852be2de733d648e070d99",
          "sha256": "fbd90be0ffa91c96d2cfcc18f4826a8d83d1008abd5b94a90747ff2bcf691faf"
        },
        "downloads": 0,
        "filename": "aws-adfs-ebsco-0.3.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6953d0af13852be2de733d648e070d99",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 18206,
        "upload_time": "2017-07-07T15:58:23",
        "url": "https://files.pythonhosted.org/packages/e3/05/2d9d0125df73679ec07c1e53a05f33a6746e7aeb0e9157bf0b052ed88f11/aws-adfs-ebsco-0.3.6.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "6953d0af13852be2de733d648e070d99",
        "sha256": "fbd90be0ffa91c96d2cfcc18f4826a8d83d1008abd5b94a90747ff2bcf691faf"
      },
      "downloads": 0,
      "filename": "aws-adfs-ebsco-0.3.6.tar.gz",
      "has_sig": false,
      "md5_digest": "6953d0af13852be2de733d648e070d99",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 18206,
      "upload_time": "2017-07-07T15:58:23",
      "url": "https://files.pythonhosted.org/packages/e3/05/2d9d0125df73679ec07c1e53a05f33a6746e7aeb0e9157bf0b052ed88f11/aws-adfs-ebsco-0.3.6.tar.gz"
    }
  ]
}