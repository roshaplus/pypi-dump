{
  "info": {
    "author": "Darwin Monroy",
    "author_email": "contact@darwinmonroy.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Pytest",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "Uses docker to spawn containers for services required during tests\n\n[![Build Status](https://travis-ci.org/dmonroy/docker-services.svg?branch=master)](https://travis-ci.org/dmonroy/docker-services)\n\n# Install\n\nThis project is available on pypi, so you can use _pip_ to install it:\n\n```\npip install docker-services\n```\n\nOr include it as a dependency on `setup.py` or a `requirements.txt` file, whatever you prefer.\n\n\n# Use it\n\n## 1. Configure your project services\n\nYou need to start listing all services that your project depends on and leverage on _docker-services_ to maintain the lifecycle of those services during test runs.\n\nThis must happen using the `docker_services` config option on any pytest _.cfg_ or _.ini_ file, the value for that option must be one or multiple services, one per line.\n\nThis is a basic example for a project that depends on a `postgres` service:\n\n```\n[pytest]\ndocker_services=postgres\n```\n\nAlso this is the same:\n\n```\n[pytest]\ndocker_services=\n    postgres\n```\n\nIf the projects depends different services, list all one by one:\n\n```\n[pytest]\ndocker_services=\n    postgres\n    redis\n```\n\nWhen image name is not specified then it falls back to use the service name as image name, but it is possible to specify the image name and version to use:\n\n```\n[pytest]\ndocker_services=\n    postgres:9.10\n```\n\nThis way service name is `postgres` and image name is `postgres:10`.\n\nAnother option is to use a different name for the service, something like:\n\n\n```\n[pytest]\ndocker_services=\n    db=postgres:10\n```\n\nNow service name is `db` and image name id `postgres:10`.\n\nIf you don't want (or need) to set a specific image name, just ignore the version part like this:\n\n```\n[pytest]\ndocker_services=\n    db=postgres\n```\n\nAlso you are able to use images from a private registry:\n\n```\n[pytest]\ndocker_services=\n    db: my.registry.com/custom/postgres\n```\n\n## 2. Run tests with docker-services enabled\n\n_docker-services_ adds the `--use-docker-services` command line option for _py.test_, when setting this option it enables service's spawning using docker, run it like this:\n\n```\npy.test --use-docker-services\n```\n\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/dmonroy/docker-services",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "docker-services",
    "platform": "",
    "project_url": "https://pypi.org/project/docker-services/",
    "release_url": "https://pypi.org/project/docker-services/0.1.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Uses docker to spawn containers for services required during tests",
    "version": "0.1.1"
  },
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c0f6c36968b3abeb6480eb0718778aa4",
          "sha256": "e556dfc7f274924e61cf2c2e98ce25acf22e2de1d1dc4eaa2a5892b916af5c39"
        },
        "downloads": -1,
        "filename": "docker-services-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c0f6c36968b3abeb6480eb0718778aa4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3523,
        "upload_time": "2018-02-05T06:37:46",
        "url": "https://files.pythonhosted.org/packages/66/ad/5b99113d4956431298f2093eca02aa92537b7fe8fa312040643981597689/docker-services-0.0.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "bde6c67e6fd62b5f5d2b8080e33f06e1",
          "sha256": "1efb5c61d9af0e80362bfde1f9d6a76c48dc62797e65586b25f00567d0b15950"
        },
        "downloads": -1,
        "filename": "docker-services-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bde6c67e6fd62b5f5d2b8080e33f06e1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4626,
        "upload_time": "2018-02-05T06:40:48",
        "url": "https://files.pythonhosted.org/packages/18/52/6b97c400abe0e353134262486af9bd57769a288fa6345a7543a30288368f/docker-services-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "bde6c67e6fd62b5f5d2b8080e33f06e1",
        "sha256": "1efb5c61d9af0e80362bfde1f9d6a76c48dc62797e65586b25f00567d0b15950"
      },
      "downloads": -1,
      "filename": "docker-services-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bde6c67e6fd62b5f5d2b8080e33f06e1",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4626,
      "upload_time": "2018-02-05T06:40:48",
      "url": "https://files.pythonhosted.org/packages/18/52/6b97c400abe0e353134262486af9bd57769a288fa6345a7543a30288368f/docker-services-0.1.1.tar.gz"
    }
  ]
}