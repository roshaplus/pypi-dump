{
  "info": {
    "author": "James Peter Schinner",
    "author_email": "james.peter.schinner@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP :: Session"
    ],
    "description": "async_v20: Asynchronous OANDA v20 client\n========================================\n\n.. image:: https://travis-ci.org/jamespeterschinner/async_v20.svg?branch=master\n   :target: https://travis-ci.org/jamespeterschinner/async_v20\n   :align: right\n\n.. image:: https://codecov.io/gh/jamespeterschinner/async_v20/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/jamespeterschinner/async_v20\n\n.. image:: https://readthedocs.org/projects/async-v20/badge/?version=latest\n   :target: http://async-v20.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n\nDocumentation\n-------------\n\nhttp://async-v20.readthedocs.io/\n\nDisclaimer\n----------\n\n- Losses can exceed investment.\n- async_v20 and its creator has no affiliation with OANDA. And is not endorsed by OANDA in any manner.\n- async_v20 is in Alpha stage and has not been tested on a live OANDA account\n- This package currently does not have full unittest coverage.\n\nFeatures\n---------\n\n- Exposes the entire v20 API\n- No `*args, **kwargs` In client methods. So no guessing what arguments a method takes\n- Serialize objects directly into `pandas.Series` objects\n- Construct *concurrent* trading algorithms\n\n\n\ninstallation\n------------\n\n**REQUIRES:**\n\npython >= 3.6\n\nhttps://www.python.org/\n\n    $ pip install async_v20\n\nIt is also recommended to install pandas. This allows objects to be converted into *pandas*. **Series** objects\nallowing for easier integration with python's powerful data analysis tool chain.\n\n    $ pip install pandas\n\n\n`async_v20` is built upon `aiohttp`.\nIt is therefore recommended to also install `cchardet` as per `aiohttp` documentation\n\nhttp://aiohttp.readthedocs.io/en/stable/\n\n    $ pip install cchardet\n\n\n\nGetting started\n===============\n\n\nCreating an Account\n-------------------\n\nTo use `async_v20` you must have an account with *OANDA*\n\n- Create an account\n\n    https://www.oanda.com/account/login\n- Create an API *token*\n\n    https://www.oanda.com/demo-account/tpa/personal_token\n\nSetting up environment\n----------------------\n\n- Install `async_v20` as per **installation**\n- Create a new *environment variable* with the name 'OANDA_TOKEN' and value as the *token* generated from above\n\n\n**Note:**\n\n- It is considered best practice use a *virtual environment*\n- It is not required to store the token in an *environment variable*. The token can be passed to OandaClient\n\nUsing async_v20\n---------------\n\nOnce an account has been created as per *create-account*\nand the environment is configured as per *setting-up-environment*\nwe are ready to begin.\n\nLets first take a look at this code example, then go though it line by line.\n\n.. code-block:: python\n\n    import asyncio\n\n    from async_v20 import OandaClient\n\n\n    async def account():\n        async with OandaClient() as client:\n            return await client.get_account_details()\n\n\n\n    loop = asyncio.get_event_loop()\n    response = loop.run_until_complete(account())\n\n    # pandas Series\n    print(response['account'].series())\n\n\nFirst we need to import *asyncio* this allows up to run our *coroutine*\n\n.. code-block:: python\n\n    import asyncio\n\n\nWe then import *OandaClient* which provides us the means to interact with OANDA\n\n.. code-block:: python\n\n    from async_v20 import OandaClient\n\n\nBecause *OandaClient* returns *coroutines* we use *async def*. This allows the use of the *await* syntax\n\n.. code-block:: python\n\n    async def account():\n\n\n*OandaClient* is a *context manager*, we use *async with* to instantiate a\nclient instance. Doing so will automatically close the *http session* when we're done\n\n.. code-block:: python\n\n        async with OandaClient() as client:\n\n\nWe then create and *run* the *coroutine* by calling *client*. **get_account_details()**\n\n.. code-block:: python\n\n            return await client.get_account_details()\n\n\nNow we have defined our *coroutine* we need to execute it.\nTo do so we need an event loop. Achieved using *asyncio*. **get_event_loop()**\n\n.. code-block:: python\n\n    loop = asyncio.get_event_loop()\n\n\nThe value returned by executing the `account()` *coroutine* is accessed through the event loop.\n\n.. code-block:: python\n\n    response = loop.run_until_complete(account())\n\n\n`async_v20` objects have a `series()` method that returns a `pandas.Series`\n\n.. code-block:: python\n\n    print(response['account'].series())",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jamespeterschinner/async_v20",
    "keywords": "algorithmic trading oanda v20 REST asyncio",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "async-v20",
    "platform": "",
    "project_url": "https://pypi.org/project/async-v20/",
    "release_url": "https://pypi.org/project/async-v20/1.1.4a0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Asynchronous wrapper for OANDA's v20 REST API",
    "version": "1.1.4a0"
  },
  "releases": {
    "1.1.2a5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1525cd26f61963cd1c3078e67b99976a",
          "sha256": "b9c049320bc32164e0d8ee514add098d2f80bb1546d7d8fe175261b1c058f1e5"
        },
        "downloads": -1,
        "filename": "async_v20-1.1.2a5.tar.gz",
        "has_sig": false,
        "md5_digest": "1525cd26f61963cd1c3078e67b99976a",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 71004,
        "upload_time": "2017-10-23T11:19:40",
        "url": "https://files.pythonhosted.org/packages/6a/92/52492ddc01d3045e2e2997dc3eb124843f32212c4061f1742ce39caf315a/async_v20-1.1.2a5.tar.gz"
      }
    ],
    "1.1.3a0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d1bac30699f4a112c623455aa11d24d0",
          "sha256": "ac171324c771918af6c621b168546fa603aac8ba8731db313a3380fe3de0b2ef"
        },
        "downloads": -1,
        "filename": "async_v20-1.1.3a0.tar.gz",
        "has_sig": false,
        "md5_digest": "d1bac30699f4a112c623455aa11d24d0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 72169,
        "upload_time": "2017-10-25T04:14:19",
        "url": "https://files.pythonhosted.org/packages/0a/fe/5f779e753a113c0255d1eea2d87eeca6239f9720ddaea55c4f989b94b0e3/async_v20-1.1.3a0.tar.gz"
      }
    ],
    "1.1.4a0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ef7c0db20f548217d53d07668dafe559",
          "sha256": "ed183d0b0586e0de2a38be18f0b7c79b18519355321a3b72931fbba4e1dc0293"
        },
        "downloads": -1,
        "filename": "async_v20-1.1.4a0.tar.gz",
        "has_sig": false,
        "md5_digest": "ef7c0db20f548217d53d07668dafe559",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 72445,
        "upload_time": "2017-10-25T09:12:41",
        "url": "https://files.pythonhosted.org/packages/95/48/bf74a3a92b299ba4f00ee67dd1e5e23a019c6a58b590b43404f7c43cae19/async_v20-1.1.4a0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ef7c0db20f548217d53d07668dafe559",
        "sha256": "ed183d0b0586e0de2a38be18f0b7c79b18519355321a3b72931fbba4e1dc0293"
      },
      "downloads": -1,
      "filename": "async_v20-1.1.4a0.tar.gz",
      "has_sig": false,
      "md5_digest": "ef7c0db20f548217d53d07668dafe559",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 72445,
      "upload_time": "2017-10-25T09:12:41",
      "url": "https://files.pythonhosted.org/packages/95/48/bf74a3a92b299ba4f00ee67dd1e5e23a019c6a58b590b43404f7c43cae19/async_v20-1.1.4a0.tar.gz"
    }
  ]
}