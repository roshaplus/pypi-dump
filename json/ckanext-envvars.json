{
  "info": {
    "author": "Brook Elgie",
    "author_email": "brook.elgie@okfn.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7"
    ],
    "description": ".. You should enable this project on travis-ci.org and coveralls.io to make\n   these badges work. The necessary Travis and Coverage config files have been\n   generated for you.\n\n.. image:: https://travis-ci.org/okfn/ckanext-envvars.svg?branch=master\n    :target: https://travis-ci.org/okfn/ckanext-envvars\n\n.. image:: https://coveralls.io/repos/okfn/ckanext-envvars/badge.svg\n  :target: https://coveralls.io/r/okfn/ckanext-envvars\n\n\n===============\nckanext-envvars\n===============\n\nThis CKAN extension checks for environmental variables conforming to an\nexpected format and updates the corresponding CKAN config settings with its\nvalue.\n\nFor the extension to correctly identify which env var keys map to the format\nused for the config object, env var keys should be formatted in the following\nway:\n\n1) All uppercase\n2) Replace periods ('.') with two underscores ('__')\n3) Keys must begin with 'CKAN' or 'CKANEXT'\n\nSome examples::\n\n    ckan.site_id --> CKAN__SITE_ID\n    ckanext.s3filestore.aws_bucket_name --> CKANEXT__S3FILESTORE__AWS_BUCKET_NAME\n\nFor keys that don't normally begin with 'CKAN', add 'CKAN___' (3 underscores)\nto the beginning to help the extension identify these keys, e.g.::\n\n    sqlalchemy.url --> CKAN___SQLALCHEMY__URL\n    beaker.session.secret --> CKAN___BEAKER__SESSION__SECRET\n\n\n------------\nRequirements\n------------\n\nTested in CKAN 2.3 and 2.4.0, but may work in previous versions.\n\nTo ensure all config settings are overridden by env var values, ``envvars``\nmust be the last plugin entry in the ``ckan.plugins`` list (see 'Installation'\nbelow).\n\n\n------------\nInstallation\n------------\n\n.. Add any additional install steps to the list below.\n   For example installing any non-Python dependencies or adding any required\n   config settings.\n\nTo install ckanext-envvars:\n\n1. Activate your CKAN virtual environment, for example::\n\n     . /usr/lib/ckan/default/bin/activate\n\n2. Install the ckanext-envvars Python package into your virtual environment::\n\n     pip install ckanext-envvars\n\n3. Add ``envvars`` to the ``ckan.plugins`` setting in your CKAN\n   config file (by default the config file is located at\n   ``/etc/ckan/default/production.ini``).\n\n4. Restart CKAN. For example if you've deployed CKAN with Apache on Ubuntu::\n\n     sudo service apache2 reload\n\n\n------------------------\nDevelopment Installation\n------------------------\n\nTo install ckanext-envvars for development, activate your CKAN virtualenv and\ndo::\n\n    git clone https://github.com/okfn/ckanext-envvars.git\n    cd ckanext-envvars\n    python setup.py develop\n    pip install -r dev-requirements.txt\n\n\n-----------------\nRunning the Tests\n-----------------\n\nTo run the tests, do::\n\n    nosetests --nologcapture --with-pylons=test.ini\n\nTo run the tests and produce a coverage report, first make sure you have\ncoverage installed in your virtualenv (``pip install coverage``) then run::\n\n    nosetests --nologcapture --with-pylons=test.ini --with-coverage --cover-package=ckanext.envvars --cover-inclusive --cover-erase --cover-tests\n\n\n-----------------------------------\nRegistering ckanext-envvars on PyPI\n-----------------------------------\n\nckanext-envvars should be availabe on PyPI as\nhttps://pypi.python.org/pypi/ckanext-envvars. If that link doesn't work, then\nyou can register the project on PyPI for the first time by following these\nsteps:\n\n1. Create a source distribution of the project::\n\n     python setup.py sdist\n\n2. Register the project::\n\n     python setup.py register\n\n3. Upload the source distribution to PyPI::\n\n     python setup.py sdist upload\n\n4. Tag the first release of the project on GitHub with the version number from\n   the ``setup.py`` file. For example if the version number in ``setup.py`` is\n   0.0.1 then do::\n\n       git tag 0.0.1\n       git push --tags\n\n\n------------------------------------------\nReleasing a New Version of ckanext-envvars\n------------------------------------------\n\nckanext-envvars is availabe on PyPI as https://pypi.python.org/pypi/ckanext-envvars.\nTo publish a new version to PyPI follow these steps:\n\n1. Update the version number in the ``setup.py`` file.\n   See `PEP 440 <http://legacy.python.org/dev/peps/pep-0440/#public-version-identifiers>`_\n   for how to choose version numbers.\n\n2. Create a source distribution of the new version::\n\n     python setup.py sdist\n\n3. Upload the source distribution to PyPI::\n\n     python setup.py sdist upload\n\n4. Tag the new release of the project on GitHub with the version number from\n   the ``setup.py`` file. For example if the version number in ``setup.py`` is\n   0.0.2 then do::\n\n       git tag 0.0.2\n       git push --tags",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/okfn/ckanext-envvars",
    "keywords": "CKAN config",
    "license": "AGPL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "ckanext-envvars",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/ckanext-envvars/",
    "release_url": "https://pypi.org/project/ckanext-envvars/0.0.1/",
    "requires_python": null,
    "summary": "CKAN configuration settings available from env vars",
    "version": "0.0.1"
  },
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8d3647c7afb5057eeafa4e5d7a1c810f",
          "sha256": "6b888149b32ecb4a3bf78700889321877fddf0b82ca4e952ba29a84eb2089837"
        },
        "downloads": 2165,
        "filename": "ckanext-envvars-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8d3647c7afb5057eeafa4e5d7a1c810f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5981,
        "upload_time": "2015-07-22T14:28:59",
        "url": "https://files.pythonhosted.org/packages/a7/94/e2d31361b889c1d3a0c9f61f57278a495fa80bb0caa7686deac7e64ccd38/ckanext-envvars-0.0.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "8d3647c7afb5057eeafa4e5d7a1c810f",
        "sha256": "6b888149b32ecb4a3bf78700889321877fddf0b82ca4e952ba29a84eb2089837"
      },
      "downloads": 2165,
      "filename": "ckanext-envvars-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8d3647c7afb5057eeafa4e5d7a1c810f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5981,
      "upload_time": "2015-07-22T14:28:59",
      "url": "https://files.pythonhosted.org/packages/a7/94/e2d31361b889c1d3a0c9f61f57278a495fa80bb0caa7686deac7e64ccd38/ckanext-envvars-0.0.1.tar.gz"
    }
  ]
}