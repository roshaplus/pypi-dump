{
  "info": {
    "author": "Konstantin Lebedev",
    "author_email": "kostyan.lebedev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: SQL",
      "Topic :: Database",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "ClickHouse Python Driver\n========================\n\nClickHouse Python Driver with native (TCP) interface support.\n\n.. image:: https://coveralls.io/repos/github/mymarilyn/clickhouse-driver/badge.svg?branch=master\n    :target: https://coveralls.io/github/mymarilyn/clickhouse-driver?branch=master\n\n.. image:: https://travis-ci.org/mymarilyn/clickhouse-driver.svg?branch=master\n   :target: https://travis-ci.org/mymarilyn/clickhouse-driver\n\nAsynchronous wrapper is available here: https://github.com/mymarilyn/aioch\n\nFeatures\n--------\n\n- Compression support:\n\n  * `LZ4/LZ4HC <http://www.lz4.org/>`_\n  * `ZSTD <https://facebook.github.io/zstd/>`_\n\n- TLS support (since server version 1.1.54304).\n\n- Basic types support:\n\n  * Float32/64\n  * [U]Int8/16/32/64\n  * Date/DateTime\n  * String/FixedString(N)\n  * Enum8/16\n  * Array(T)\n  * Nullable(T)\n  * UUID\n\n- `External data <https://clickhouse.yandex/docs/en/single/index.html#external-data-for-query-processing>`_ for query processing.\n\n- `Query settings <https://clickhouse.yandex/docs/en/single/index.html#document-operations/settings/index>`_.\n\n- Query progress information.\n\n\nInstallation\n------------\n\nThe package can be installed using ``pip``:\n\n    .. code-block:: bash\n\n       pip install clickhouse-driver\n\nYou can install extras packages if you need compression support. Example of\nLZ4 compression requirements installation:\n\n    .. code-block:: bash\n\n       pip install clickhouse-driver[lz4]\n\nYou also can specify multiple extras by using comma.\nInstall LZ4 and ZSTD requirements:\n\n    .. code-block:: bash\n\n       pip install clickhouse-driver[lz4,zstd]\n\n\nUsage example:\n\n    .. code-block:: python\n\n        from clickhouse_driver import Client\n\n        client = Client('localhost')\n\n        print(client.execute('SHOW TABLES'))\n\n        client.execute('DROP TABLE IF EXISTS test')\n\n        client.execute('CREATE TABLE test (x Int32) ENGINE = Memory')\n\n        client.execute(\n            'INSERT INTO test (x) VALUES',\n            [{'x': 1}, {'x': 2}, {'x': 3}, {'x': 100}]\n        )\n        client.execute('INSERT INTO test (x) VALUES', [[200]])\n\n        print(client.execute('SELECT sum(x) FROM test'))\n\nArrays:\n\n    .. code-block:: python\n\n        client.execute('CREATE TABLE test2 (x Array(Int32)) ENGINE = Memory')\n        client.execute(\n            'INSERT INTO test2 (x) VALUES',\n            [{'x': [10, 20, 30]}, {'x': (11, 21, 31)}]\n        )\n\n        print(client.execute('SELECT * FROM test2'))\n\nEnums:\n\n    .. code-block:: python\n\n        from enum import IntEnum\n\n        class MyEnum(IntEnum):\n            foo = 1\n            bar = 2\n\n        client.execute('''\n            CREATE TABLE test3\n            (\n                x Enum8('foo' = 1, 'bar' = 2)\n            ) ENGINE = Memory\n        ''')\n        client.execute(\n            'INSERT INTO test3 (x) VALUES',\n            [{'x': MyEnum.foo}, {'x': 'bar'}, {'x': 1}]\n        )\n\n        print(client.execute('SELECT * FROM test3'))\n\n\nData compression:\n\n    .. code-block:: python\n\n        from clickhouse_driver import Client\n\n        client_with_lz4 = Client('localhost', compression=True)\n        client_with_lz4 = Client('localhost', compression='lz4')\n        client_with_zstd = Client('localhost', compression='zstd')\n\nSecure connection:\n\n    .. code-block:: python\n\n        from clickhouse_driver import Client\n\n        client = Client('localhost', secure=True)\n        # Using self-signed certificate.\n        self_signed_client = Client('localhost', secure=True, ca_certs='/etc/clickhouse-server/server.crt')\n        # Disable verification.\n        no_verifyed_client = Client('localhost', secure=True, verify=False)\n\n        # Example of secured client with Let's Encrypt certificate.\n        import certifi\n\n        client = Client('remote-host', secure=True, ca_certs=certifi.where())\n\nExternal data for query processing:\n\n    .. code-block:: python\n\n        tables = [{\n            'name': 'ext',\n            'structure': [('x', 'Int32'), ('y', 'Array(Int32)')],\n            'data': [\n                {'x': 100, 'y': [2, 4, 6, 8]},\n                {'x': 500, 'y': [1, 3, 5, 7]},\n            ]\n        }]\n        rv = client.execute(\n            'SELECT sum(x) FROM ext', external_tables=tables)\n        print(rv)\n\n\nQuery progress information:\n\n    .. code-block:: python\n\n        from datetime import datetime\n\n        progress = client.execute_with_progress('LONG AND COMPLICATED QUERY')\n\n        timeout = 20\n        started_at = datetime.now()\n\n        for num_rows, total_rows in progress:\n            done = float(num_rows) / total_rows if total_rows else total_rows\n            now = datetime.now()\n            # Cancel query if it takes more than 20 seconds to process 50% of rows.\n            if (now - started_at).total_seconds() > timeout and done < 0.5:\n                client.cancel()\n                break\n        else:\n            rv = progress.get_result()\n            print(rv)\n\n\nCityHash algorithm notes\n------------------------\n\nUnfortunately ClickHouse server comes with built-in old version of CityHash\nhashing algorithm. That's why we can't use original\n`CityHash <http://pypi.python.org/cityhash>`_ package. Downgraded version of\nthis algorithm is placed at `PyPI <https://pypi.python.org/pypi/clickhouse-cityhash>`_.\n\n\nClient Parameters\n-----------------\n\nThe first parameter *host* is required. There are some optional parameters:\n\n- *port* is port ClickHouse server is bound to. Default is ``9000``.\n- *database* is database connect to. Default is ``'default'``.\n- *user*. Default is ``'default'``.\n- *password*. Default is ``''`` (no password).\n- *client_name*. This name will appear in server logs. Default is ``'python-driver'``.\n- *compression*. Whether or not use compression. Default is ``False``. Possible choices:\n\n  * ``True`` is equivalent to ``'lz4'``.\n  * ``'lz4'``.\n  * ``'lz4hc'`` high-compression variant of ``'lz4'``.\n  * ``'zstd'``.\n- *insert_block_size*. Chunk size to split rows for ``INSERT``. Default is ``1048576``.\n\nSSL/TLS parameters:\n\n- *secure*. Establish secure connection. Default is ``False``.\n- *verify*. Specifies whether a certificate is required and whether it will be validated after connection.\n  Default is ``True``.\n- other parameters: *ssl_version*, *ca_certs*, *ciphers*.\n  See `ssl.wrap_socket <https://docs.python.org/3/library/ssl.html#ssl.wrap_socket>`_ documentation.\n\nYou can also specify timeouts via:\n\n- *connect_timeout*. Default is ``10`` seconds.\n- *send_receive_timeout*. Default is ``300`` seconds.\n- *sync_request_timeout*. Default is ``5`` seconds.\n\n\nMiscellaneous\n-------------\n\nPassing parameters to SELECT SQL queries:\n\n    .. code-block:: python\n\n        from datetime import date\n\n        rv = client.execute(\n            'SELECT %(date)s, %(a)s + %(b)s',\n            {'date': date.today(), 'a': 1, 'b': 2}\n        )\n        print(rv)\n\nSpecifying `query_id`:\n\n    .. code-block:: python\n\n        from uuid import uuid1\n\n        query_id = str(uuid1())\n        print(client.execute('SHOW TABLES', query_id=query_id))\n\nOverriding default query settings:\n\n    .. code-block:: python\n\n        # Set lower priority to query and limit max number threads to execute the request.\n        settings = {'max_threads': 2, 'priority': 10}\n        print(client.execute('SHOW TABLES', settings=settings))\n\nRetrieving results in columnar form. This is also faster:\n\n    .. code-block:: python\n\n        print(client.execute('SELECT arrayJoin(range(3))', columnar=True))\n\nData types check is disabled for performance on ``INSERT`` queries.\nYou can turn it on by *types_check* option:\n\n    .. code-block:: python\n\n        client.execute('INSERT INTO test (x) VALUES', [('abc', )], types_check=True)\n\nLicense\n=======\n\nClickHouse Python Driver is distributed under the `MIT license\n<http://www.opensource.org/licenses/mit-license.php>`_.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/mymarilyn/clickhouse-driver",
    "keywords": "ClickHouse db database cloud analytics",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "clickhouse-driver",
    "platform": "",
    "project_url": "https://pypi.org/project/clickhouse-driver/",
    "release_url": "https://pypi.org/project/clickhouse-driver/0.0.9/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Python driver with native interface for ClickHouse",
    "version": "0.0.9"
  },
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "329d93df2e5541f8a881c23cd422c4ce",
          "sha256": "1d555d2567cac38138dcd3c282060d1bbd551a562ce38f6c307014646686bba5"
        },
        "downloads": -1,
        "filename": "clickhouse-driver-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "329d93df2e5541f8a881c23cd422c4ce",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11521,
        "upload_time": "2017-05-13T07:33:35",
        "url": "https://files.pythonhosted.org/packages/a9/7c/e357eba9e189adb7f732c105e7f5ad447b8d9a35f30691798265d98bc22c/clickhouse-driver-0.0.2.tar.gz"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "61cd8724403b991454931e85ec0958eb",
          "sha256": "7cd81319cd11c2dc3c9250fd5c835de27fbb10047214022ee3475d4de9243d56"
        },
        "downloads": -1,
        "filename": "clickhouse-driver-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "61cd8724403b991454931e85ec0958eb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15679,
        "upload_time": "2017-05-23T23:15:34",
        "url": "https://files.pythonhosted.org/packages/83/cb/85b6ad6898a50e52a526c938e379d5dfeb8a4433234483ab7378e8bf9072/clickhouse-driver-0.0.3.tar.gz"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "de1f35782c27f39617a0788d03a3e4fb",
          "sha256": "19f28c6e27bc4456e600e5861518d85e9a0a7bce4f535aa8eece1bb95cada6fd"
        },
        "downloads": -1,
        "filename": "clickhouse-driver-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "de1f35782c27f39617a0788d03a3e4fb",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 19007,
        "upload_time": "2017-06-14T22:11:59",
        "url": "https://files.pythonhosted.org/packages/39/aa/271426b7719b0d0ec9b9fdaa241ae179bf0a8fb10b81e75a49908f7dff94/clickhouse-driver-0.0.4.tar.gz"
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7bff5b9fead97e832e0fc1b3c8545cdf",
          "sha256": "0e24c20dd99ebfc188a34a9c1806e6e87106f55af6281e0b7e0b6e9e11d98595"
        },
        "downloads": -1,
        "filename": "clickhouse-driver-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7bff5b9fead97e832e0fc1b3c8545cdf",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 22087,
        "upload_time": "2017-07-16T19:29:29",
        "url": "https://files.pythonhosted.org/packages/14/e5/c88412568986d1bdc2f7f7804a6e51f99f606d04c6a16244e55450acced9/clickhouse-driver-0.0.5.tar.gz"
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "35b490d919664974f7144cbcc27c0c8e",
          "sha256": "98c3475c63bf85694510d04c54f89beefe47248b1f2de112354cbc22fe64068b"
        },
        "downloads": -1,
        "filename": "clickhouse-driver-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "35b490d919664974f7144cbcc27c0c8e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 24221,
        "upload_time": "2017-09-19T18:49:08",
        "url": "https://files.pythonhosted.org/packages/c4/6c/0ecda67c0f1c8730d420ffe1fad545b489217ccbb85b3a46ac3d0c8131b9/clickhouse-driver-0.0.6.tar.gz"
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "489b23eb67b74a936a6e0ac975d72cf1",
          "sha256": "7e52fae72185411d2bdba1149aa4d558aa4884e5827871fd92858e5c53099dd7"
        },
        "downloads": -1,
        "filename": "clickhouse-driver-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "489b23eb67b74a936a6e0ac975d72cf1",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 30823,
        "upload_time": "2017-10-12T20:29:16",
        "url": "https://files.pythonhosted.org/packages/45/fd/fbb6ca626fd3179811c0a4a9a49c2fcc7aa4f9dbfd5f7ede37aac57733c2/clickhouse-driver-0.0.7.tar.gz"
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9b59139884bb965f9e14ac9d8fbf5814",
          "sha256": "e7b3f47364a2e9d75d7e11d5b86f31b7d0ea2d87f89ccfeaf0d3fa94e3fbfeb9"
        },
        "downloads": -1,
        "filename": "clickhouse-driver-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "9b59139884bb965f9e14ac9d8fbf5814",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 31816,
        "upload_time": "2017-10-22T21:37:24",
        "url": "https://files.pythonhosted.org/packages/06/07/a67b83ea2bbc587c695799c707c11bf509b04c462366317d50ae2239a16e/clickhouse-driver-0.0.8.tar.gz"
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ef2e0a6d827bdb842a51ace8fc5c5e03",
          "sha256": "5d5861b90fb19c84e5b9ac1cc0768e36f1cf733ea7c9cc82fac399f4190b536e"
        },
        "downloads": -1,
        "filename": "clickhouse-driver-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "ef2e0a6d827bdb842a51ace8fc5c5e03",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 33027,
        "upload_time": "2018-01-17T11:14:06",
        "url": "https://files.pythonhosted.org/packages/4f/35/d4e725526c141757f6c139b59acd7157bd925f41877367a284b98af305ea/clickhouse-driver-0.0.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "ef2e0a6d827bdb842a51ace8fc5c5e03",
        "sha256": "5d5861b90fb19c84e5b9ac1cc0768e36f1cf733ea7c9cc82fac399f4190b536e"
      },
      "downloads": -1,
      "filename": "clickhouse-driver-0.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "ef2e0a6d827bdb842a51ace8fc5c5e03",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 33027,
      "upload_time": "2018-01-17T11:14:06",
      "url": "https://files.pythonhosted.org/packages/4f/35/d4e725526c141757f6c139b59acd7157bd925f41877367a284b98af305ea/clickhouse-driver-0.0.9.tar.gz"
    }
  ]
}