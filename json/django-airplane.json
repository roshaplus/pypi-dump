{
  "info": {
    "author": "Christopher Trudeau",
    "author_email": "ctrudeau+pypi@arsensa.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-airplane\n***************\n\nThis app is to help in those situations where you can't get on the network but\nyou want to write some Django code.  Surround your static CDN references (like\njquery and the like) with this template tag and when you turn it on the URLs\nwill be re-written from a local copy.\n\nInstallation\n============\n\nIn your settings file, add 'airplane' to your ``settings.INSTALLED_APPS`` field\nand make the following additions:\n\n.. code-block:: python\n\n    import airplane\n\n    STATICFILES_DIRS = (\n        os.path.join(BASE_DIR, airplane.CACHE_DIR),\n    )\n\n    AIRPLANE_MODE = airplane.BUILD_CACHE\n    #AIRPLANE_MODE = airplane.USE_CACHE\n\nNow use the ``airplane`` tag in your templates\n\n.. code-block:: html\n\n    {% load airplanetags %}\n\n    <html>\n        <head>\n            <link rel=\"stylesheet\"\n                href=\"{% airplane 'https://maxcdn.bootstrapcdn.com/bootstrap.min.css' %}\">\n        </head>\n    </html>\n\nChange the ``AIRPLANE_MODE`` setting to ``airplane.USE_CACHE`` and subsequent\ncalls to the ``{% airplane %}`` tag will return a reference to the locally \ncached version.\n\n\nSettings\n========\n\nAirplane only does something if ``DEBUG=True`` and if you have an\n``AIRPLANE_MODE`` value set to either ``airplane.BUILD_CACHE`` or\n``airplane.USE_CACHE``.  If one of these conditions is not met, the tag simply\nreturns the value passed in.\n\nFor example, if ``DEBUG=False`` and your template contains:\n\n.. code-block:: html\n\n    <link rel=\"stylesheet\"\n        href=\"{% airplane 'https://maxcdn.bootstrapcdn.com/bootstrap.min.css' %}\">\n\n\nThen the above snippet renders as:\n\n.. code-block:: html\n\n    <link rel=\"stylesheet\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap.min.css\">\n\n\nWhen ``AIRPLANE_MODE`` is set to ``airplane.BUILD_CACHE`` any URLs passed in\nare fetched and their contents added to a local cache.  The default local\ncache is ``.airport_cache`` relative to the base directory of your project.\n\nYou can change the location of the cache by setting ``AIRPLANE_CACHE``.  The\nsetting accepts either fully qualified paths or paths relative to the\nproject's base directory.\n\nOnce you have cached all the files you are using, switch ``AIRPLANE_MODE`` to\n``airplane.USE_CACHE``.  All URLs are now re-written to point to the contents\nof the local cache.",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/cltrudeau/django-airplane",
    "keywords": "django,cache,offline,CDN,static",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-airplane",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-airplane/",
    "release_url": "https://pypi.org/project/django-airplane/0.1.1/",
    "requires_python": "",
    "summary": "Django app that caches CDN files for use when coding offline",
    "version": "0.1.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "d49dc4f44c32f73d56ebaf7927c7f21d",
          "sha256": "625bb146b5a424ff5ecaeeb08be8afdf36da181527ed81122e101a3dc748fcae"
        },
        "downloads": 14,
        "filename": "django_airplane-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d49dc4f44c32f73d56ebaf7927c7f21d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 7400,
        "upload_time": "2017-03-27T00:33:07",
        "url": "https://files.pythonhosted.org/packages/9c/4c/c914fb217a3e87f6e64c481a00373a6695dcaf17b7b322d33bc83fda743b/django_airplane-0.1.0-py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "e6e25d3d5ac7a923544ba71e30b4456b",
          "sha256": "4dff2cad2bf9bb9ad65f3ddb0c85127f1a54079e4d96d0a321d3ca5fe231e8b4"
        },
        "downloads": 13,
        "filename": "django-airplane-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e6e25d3d5ac7a923544ba71e30b4456b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5138,
        "upload_time": "2017-03-27T00:33:10",
        "url": "https://files.pythonhosted.org/packages/7c/78/0a2cc429164fc0dc5150ef0f6aae7a1a08b43bf5dd47c2ed2d7b61404a7b/django-airplane-0.1.0.tar.gz"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0703284562ba5e649abbaccfd23bd0d9",
          "sha256": "02a017e7bd1dc056161f380cbf64d08bbc49bd1627738cf92fd16c27e4714ca3"
        },
        "downloads": 13,
        "filename": "django_airplane-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0703284562ba5e649abbaccfd23bd0d9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 7406,
        "upload_time": "2017-03-27T00:45:23",
        "url": "https://files.pythonhosted.org/packages/4e/30/f406760eecf5f2f0478a87f94765e8dc133906a5ec3f75c48dfe2f8b1545/django_airplane-0.1.1-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "fd51ab6b6b38ff21a46393b1fe063485",
          "sha256": "2b95d3652dd5f2476041d960da24ec046432ece4e91e873d0d813524df4a6154"
        },
        "downloads": 14,
        "filename": "django-airplane-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fd51ab6b6b38ff21a46393b1fe063485",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 5149,
        "upload_time": "2017-03-27T00:45:25",
        "url": "https://files.pythonhosted.org/packages/d3/be/37795a7ba93049f04698a3c8aba9d7cc8038abab93c2461cce2500e8c015/django-airplane-0.1.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "0703284562ba5e649abbaccfd23bd0d9",
        "sha256": "02a017e7bd1dc056161f380cbf64d08bbc49bd1627738cf92fd16c27e4714ca3"
      },
      "downloads": 13,
      "filename": "django_airplane-0.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0703284562ba5e649abbaccfd23bd0d9",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 7406,
      "upload_time": "2017-03-27T00:45:23",
      "url": "https://files.pythonhosted.org/packages/4e/30/f406760eecf5f2f0478a87f94765e8dc133906a5ec3f75c48dfe2f8b1545/django_airplane-0.1.1-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "fd51ab6b6b38ff21a46393b1fe063485",
        "sha256": "2b95d3652dd5f2476041d960da24ec046432ece4e91e873d0d813524df4a6154"
      },
      "downloads": 14,
      "filename": "django-airplane-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fd51ab6b6b38ff21a46393b1fe063485",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 5149,
      "upload_time": "2017-03-27T00:45:25",
      "url": "https://files.pythonhosted.org/packages/d3/be/37795a7ba93049f04698a3c8aba9d7cc8038abab93c2461cce2500e8c015/django-airplane-0.1.1.tar.gz"
    }
  ]
}