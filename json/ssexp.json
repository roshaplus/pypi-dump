{
  "info": {
    "author": "James A. H. Skillen",
    "author_email": "jahs@jahs.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Scheme S-expressions\n====================\n\nThis is a serializer that produces an S-expression compatible with a\nsubset of R7RS Scheme.\n\nBasic usage:\n\n.. code-block:: python\n\n  import ssexp\n  ssexp.dumps({'brian': 'naughty boy'})\n\nproduces:\n\n.. code-block:: scheme\n\n  (: brian: \"naughty boy\")\n\nWe use the ``preserialize`` library to pre-serialize more complex\nstructures, and so can handle shared objects, cyclic references and\ndeep structures:\n\n.. code-block:: python\n\n  class Parrot(object):\n      def __init__(self, is_dead=True, from_egg=None):\n          self.is_dead = is_dead\n          self.from_egg = from_egg\n\n  preserializer = ssexp.SsexpPreserializer()\n  preserializer.register(Parrot, version=2)\n\n  class Egg(object):\n      def __init__(self, from_parrot=None):\n          self.from_parrot = from_parrot\n\n  preserializer.register(Egg)\n\n  parrot = Parrot()\n  parrot.from_egg = Egg(from_parrot=parrot)\n\n  ssexp.dumps({'brian': 'naughty boy',\n               3: 'Antioch',\n               'ouroboros': parrot}, preserializer)\n\nproduces:\n\n.. code-block:: scheme\n\n  (: (\"brian\" \"naughty boy\")\n     (3 \"Antioch\")\n     (\"ouroboros\" #0=(parrot :version: 2\n                      dead?: #t\n\t\t      from-egg: (egg from-parrot: #0#))))\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/jahs/ssexp",
    "keywords": "serialization pickle json sexp ssexp scheme lisp",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ssexp",
    "platform": "",
    "project_url": "https://pypi.org/project/ssexp/",
    "release_url": "https://pypi.org/project/ssexp/2017.7.1/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "R7RS Scheme S-expression serializer.",
    "version": "2017.7.1"
  },
  "releases": {
    "2017.7.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "761d326de68648e0040c214e0ba2099e",
          "sha256": "8d69c64a101507c169afbcfdad4f3148dc70069bd35c293973292d74fa96bc9d"
        },
        "downloads": 0,
        "filename": "ssexp-2017.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "761d326de68648e0040c214e0ba2099e",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 4506,
        "upload_time": "2017-07-25T20:29:02",
        "url": "https://files.pythonhosted.org/packages/5c/f1/0d96a6b94e0a875dad6fb9a0ccc449383d58fdbcd4daad6f6f0698bb0a2a/ssexp-2017.7.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "761d326de68648e0040c214e0ba2099e",
        "sha256": "8d69c64a101507c169afbcfdad4f3148dc70069bd35c293973292d74fa96bc9d"
      },
      "downloads": 0,
      "filename": "ssexp-2017.7.1.tar.gz",
      "has_sig": false,
      "md5_digest": "761d326de68648e0040c214e0ba2099e",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 4506,
      "upload_time": "2017-07-25T20:29:02",
      "url": "https://files.pythonhosted.org/packages/5c/f1/0d96a6b94e0a875dad6fb9a0ccc449383d58fdbcd4daad6f6f0698bb0a2a/ssexp-2017.7.1.tar.gz"
    }
  ]
}