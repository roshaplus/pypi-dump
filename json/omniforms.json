{
  "info": {
    "author": "Omni Digital",
    "author_email": "dev@omni-digital.co.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "Omni Forms\n==========\n\nOmni forms is a simple form builder with admin integration for django\nversions >= 1.8.\n\nInstallation\n------------\n\n!Pypi release coming soon\n\nOnce the package has been installed just add ``omni_forms`` to\n``INSTALLED_APPS`` in your settings file:\n\n``INSTALLED_APPS += ('omni_forms',)``\n\nOnce you've done this run ``python manage.py migrate`` to migrate your\ndatabase.\n\nConfiguration\n-------------\n\nThe OmniForms application can be configured in a number of different\nways:\n\nPermitted content types\n~~~~~~~~~~~~~~~~~~~~~~~\n\nYou may not want administrators to be able to create forms for *all*\ndifferent types of content in your database. There are 2 different ways\nof restricting the types of content that can be associated with model\nforms created through the admin interface:\n\nOMNI\\_FORMS\\_CONTENT\\_TYPES\n---------------------------\n\nIt is possible to define specific apps and/or models which can be used\nby the omniforms app using the ``OMNI_FORMS_CONTENT_TYPES`` setting.\n\nFor example:\n\nThe following configuration would allow *any* of the models in the app\n``foo`` and the ``modelone`` and ``modeltwo`` models within the ``bar``\napp to be used.\n\n::\n\n    OMNI_FORMS_CONTENT_TYPES = [\n        {'app_label': 'foo'},\n        {'app_label': 'bar', 'model': 'modelone'},\n        {'app_label': 'bar', 'model': 'modeltwo'},\n    ]\n\nIf the ``OMNI_FORMS_CONTENT_TYPES`` setting is not defined it will\ndefault to ``None`` and the ``OMNI_FORMS_EXCLUDED_CONTENT_TYPES``\nsetting will be used instead (default values or otherwise).\n\nOMNI\\_FORMS\\_EXCLUDED\\_CONTENT\\_TYPES\n-------------------------------------\n\nIt is possible to prevent model forms from being created for specific\napps or specific models using the ``OMNI_FORMS_EXCLUDED_CONTENT_TYPES``\nsetting.\n\nFor example:\n\nThe following configuration would prevent forms being created for *any*\nof the models in the app ``foo`` and for the ``modelone`` and\n``modeltwo`` models within the ``bar`` app.\n\n::\n\n    OMNI_FORMS_EXCLUDED_CONTENT_TYPES = [\n        {'app_label': 'foo'},\n        {'app_label': 'bar', 'model': 'modelone'},\n        {'app_label': 'bar', 'model': 'modeltwo'},\n    ]\n\nIf you do not specify this setting it will default to the following:\n\n::\n\n    OMNI_FORMS_EXCLUDED_CONTENT_TYPES = [\n        {'app_label': 'omniforms'}\n    ]\n\nThis will prevent administrators from creating form\\_builder forms with\nthe formbuilder itself. It's worth mentioning that allowing\nadministrators to do this represents a potential security risk and\nshould be avoided. As such, if you need to define your own\n``OMNI_FORMS_EXCLUDED_CONTENT_TYPES`` setting it would be wise to\nexclude all ``omniforms`` models as shown above.\n\nOMNI\\_FORMS\\_CUSTOM\\_FIELD\\_MAPPING\n-----------------------------------\n\nAlthough the omniforms app accounts for the majority of use cases you\nmay have models that use custom model fields. In these instances the\nform builder will not be able to map a model field to a form field and\nyou will need to provide a custom field mapping using the\n``OMNI_FORMS_CUSTOM_FIELD_MAPPING`` setting.\n\n-  Each key within the mapping dictionary must be a string (python\n   dotted import path) to a model field class.\n-  Each value within the mapping dictionary must be a string (python\n   dotted import path) to an OmniField subclass.\n\nFor example, you can map a TagField to an OmniCharField model instance\nusing the following configuration:\n\n::\n\n    OMNI_FORMS_CUSTOM_FIELD_MAPPING = {\n        'taggit.TagField': 'omniforms.models.OmniCharField',\n    }\n\nWith this configuration any instances of taggit.TagField on your models\nwill be represented as charfields in the corresponding forms generated\nby omniforms.\n\nIt is also possible to create your own OmniField subclasses to use in\nyour custom form builders. For example:\n\n::\n\n    OMNI_FORMS_CUSTOM_FIELD_MAPPING = {\n        'taggit.TagField': 'my_app.MySuperOmniField',\n    }\n\nIt is important to note that the dictionary values defined within the\n``OMNI_FORMS_CUSTOM_FIELD_MAPPING`` MUST be subclasses of\n``omniforms.models.OmniField``. If you attempt to register Field\nhandlers that do not subclass ``omniforms.models.OmniField`` an\nImproperlyConfigured exception will be raised.\n\nCompatibility\n-------------\n\nThis app is compatible with the following django versions:\n\n-  Django 1.8.x\n-  Django 1.9.x\n-  Django 1.10.x\n\nChangeLog\n---------\n\n-  0.1 - Initial Build",
    "docs_url": null,
    "download_url": "https://github.com/omni-digital/omni-forms/tarball/0.1.0",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/omni-digital/omni-forms/",
    "keywords": "form builder,django",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "omniforms",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/omniforms/",
    "release_url": "https://pypi.org/project/omniforms/0.1.0/",
    "requires_python": null,
    "summary": "A simple Django app to build forms using the admin interface.",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "483290525a89bab077e8b7c75d668bf9",
          "sha256": "fedd57ae29d6f6ed2d70aef65b82bed0010d4e330c786ffa4d32b7d9ea9f8ace"
        },
        "downloads": 44,
        "filename": "omniforms-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "483290525a89bab077e8b7c75d668bf9",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 37034,
        "upload_time": "2016-12-02T15:13:20",
        "url": "https://files.pythonhosted.org/packages/28/37/5a016786ad7f7ff82ade8e07b42d711077fabd718314b0f9abfde2a5a352/omniforms-0.1.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "483290525a89bab077e8b7c75d668bf9",
        "sha256": "fedd57ae29d6f6ed2d70aef65b82bed0010d4e330c786ffa4d32b7d9ea9f8ace"
      },
      "downloads": 44,
      "filename": "omniforms-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "483290525a89bab077e8b7c75d668bf9",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 37034,
      "upload_time": "2016-12-02T15:13:20",
      "url": "https://files.pythonhosted.org/packages/28/37/5a016786ad7f7ff82ade8e07b42d711077fabd718314b0f9abfde2a5a352/omniforms-0.1.0.tar.gz"
    }
  ]
}