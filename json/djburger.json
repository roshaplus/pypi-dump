{
  "info": {
    "author": "orsinium",
    "author_email": "master_fess@mail.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Plugins",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Programming Language :: Python"
    ],
    "description": "DjBurger\n========\n\nDocumentation on other languages:\n\n-  `Russian <README.ru.md>`__\n\n**DjBurger** -- patched views format for big projects on Django.\n\nKey principles:\n\n1. Validation only before main logic.\n2. Reusable logic for many views.\n3. Reusable input and output data formats.\n4. More clear views.\n\nDataflow:\n\n1. **Decorators** (``d``).\n2. **Parser** (``p``). Parse request body.\n3. **PreValidator** (``prev``). Validate and clear request.\n4. **PreRenderer** (``prer``). Render and return PreValidation errors.\n5. **Controller** (``c``). Main logic: do some things.\n6. **PostValidator** (``postv``). Validate and clear response.\n7. **PostRenderer** (``postr``). Render and return PostValidation\n   errors.\n8. **Renderer** (``r``). Render successfull response.\n\n.. figure:: scheme.png\n   :alt: Scheme\n\n   Scheme\n\nRequired only Controller and Renderer.\n\nInstallation\n------------\n\nSTABLE\n~~~~~~\n\n.. code:: bash\n\n    pip install djburger\n\nDEV\n~~~\n\nUsing pip:\n\n.. code:: bash\n\n    sudo pip install -e git+https://github.com/orsinium/djburger.git#egg=djburger\n\nIn ``requirements.txt``:\n\n.. code:: bash\n\n    -e git+https://github.com/orsinium/djburger.git#egg=djburger\n\nComponents\n----------\n\nMain components:\n\n1. **Validators** (``djburger.v``). Can be used as ``prev`` and\n   ``postv``.\n\n   1. **Bases** (``djburger.v.b``).\n   2. **Constructors** (``djburger.v.c``).\n   3. **Wrappers** (``djburger.v.w``)\n\n2. **Controllers** (``djburger.c``). Can be used as ``c``.\n3. **Renderer** (``djburger.r``). Can be used as ``prer``, ``postr`` and\n   ``r``.\n\nSome additional components:\n\n1. ``djburger.exceptions`` -- useful exceptions.\n\nInterfaces\n----------\n\n1. **Decorator**. Any decorator which can wrap Django view\n2. **Validator**. Have same interfaces as Django Forms, but get\n   ``request`` by initialization:\n\n   1. ``.__init__()``\n\n      -  ``request`` -- Request object\n      -  ``data`` -- data from user (prev) or controller (postv)\n      -  ``**kwargs`` -- any keyword arguments for validator\n\n   2. ``.is_valid()`` -- return True if data is valid False otherwise.\n   3. ``.errors`` -- errors if data is invalid.\n   4. ``.cleaned_data`` -- cleaned data if input data is valid.\n\n3. **Controller**. Any callable object. Kwargs:\n\n   1. ``request`` -- Request object.\n   2. ``data`` -- validated request data. 3 ``**kwargs`` -- kwargs from\n      url.\n\n4. **Renderer**. Any callable object. Kwargs:\n\n   1. ``request`` -- Request object.\n   2. ``data`` -- validated controller data (only for ``r``).\n   3. ``validator`` -- validator which not be passed (only for ``prer``\n      and ``postr``).\n   4. ``status_code`` -- HTTP status code if validator raise\n      ``djburger.e.StatusCodeError``.\n\nUsage example\n-------------\n\nView definition:\n\n.. code:: python\n\n    import djburger\n\n    class ExampleView(djburger.ViewBase):\n        rules = {\n            'get': djburger.rule(\n                c=lambda request, data, **kwargs: 'Hello, World!',\n                postv=djburger.v.c.IsStr,\n                postr=djburger.r.Exception(),\n                r=djburger.r.Template(template_name='index.html'),\n            ),\n        }\n\nMinimum info:\n\n.. code:: python\n\n    class ExampleView(djburger.ViewBase):\n        default_rule = djburger.rule(\n            c=lambda request, data, **kwargs: 'Hello, World!',\n            r=djburger.r.Template(template_name='index.html'),\n        ),\n\nRule from ``default_rule`` will be used as rule for all requests, which\nmethod not definited in ``rules``.\n\nBig example:\n\n.. code:: python\n\n    class UsersView(djburger.ViewBase):\n        rules = {\n            'get': djburger.rule(\n                d=[login_required, csrf_exempt],\n                prev=SomeValidator,\n                c=djburger.c.List(model=User),\n                postv=djburger.v.c.QuerySet,\n                postr=djburger.r.Exception(),\n                r=djburger.r.JSON(),\n            ),\n            'put': djburger.rule(\n                d=[csrf_exempt],\n                p=djburger.p.JSON(),\n                prev=SomeOtherValidator,\n                c=djburger.c.Add(model=User),\n                r=djburger.r.JSON(),\n            ),\n        }\n\nExternal libraries support\n--------------------------\n\n-  `BSON <https://github.com/py-bson/bson>`__\n\n   -  ``djburger.p.BSON``\n   -  ``djburger.r.BSON``\n\n-  `Django REST Framework <django-rest-framework.org>`__\n\n   -  ``djburger.v.b.RESTFramework``\n   -  ``djburger.v.w.RESTFramework``\n   -  ``djburger.r.RESTFramework``\n\n-  `Marshmallow <https://github.com/marshmallow-code/marshmallow>`__\n\n   -  ``djburger.v.b.Marshmallow``\n   -  ``djburger.v.w.Marshmallow``\n\n-  `PySchemes <https://github.com/shivylp/pyschemes>`__\n\n   -  ``djburger.v.c.PySchemes``\n   -  ``djburger.v.w.PySchemes``\n\n-  `PyYAML <https://github.com/yaml/pyyaml>`__\n\n   -  ``djburger.r.YAML``\n\n-  `Tablib <https://github.com/kennethreitz/tablib>`__\n\n   -  ``djburger.r.Tablib``\n\nWhat's next?\n------------\n\n1. Read `documentation <https://djburger.readthedocs.io/en/latest/>`__,\n   source code docstrings or just inspect djburger from python console\n   (for example, ``help('djburger.views')``).\n2. See `example <example/>`__ project.\n3. If you have some questions then `view\n   issues <https://github.com/orsinium/djburger/issues>`__ or `create\n   new <https://github.com/orsinium/djburger/issues/new>`__.\n4. If you found some mistakes then fix it and `create Pull\n   Request <https://github.com/orsinium/djburger/compare>`__.\n   Contributors are welcome.\n5. `Star this project on\n   github <https://github.com/orsinium/djburger>`__ :)",
    "docs_url": null,
    "download_url": "https://github.com/orsinium/djburger/tarball/master",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/orsinium/djburger",
    "keywords": "djburger framework django contracts pre post validation",
    "license": "GNU Lesser General Public License v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djburger",
    "platform": "",
    "project_url": "https://pypi.org/project/djburger/",
    "release_url": "https://pypi.org/project/djburger/0.8.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "Framework for views in big projects on Django.",
    "version": "0.8.0"
  },
  "releases": {
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "1dd5f8c4082f5469447cfe3c6a53c1b8",
          "sha256": "cddaad83acd9d30c8075b174088252d66c50c6f4514ddccf33e532785e305330"
        },
        "downloads": -1,
        "filename": "djburger-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1dd5f8c4082f5469447cfe3c6a53c1b8",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9172,
        "upload_time": "2017-12-02T13:25:53",
        "url": "https://files.pythonhosted.org/packages/00/74/ffbbc7a0f0b9ad8865d5e1d89f79acf367bdf5414af3f5a0cd2ae111fc77/djburger-0.6.0.tar.gz"
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5126921f82638a92c4f3c65cf6f15009",
          "sha256": "3e3010c83c774d22060b1ea39962cda42d85f9b367c2e3e510b657803790935d"
        },
        "downloads": -1,
        "filename": "djburger-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5126921f82638a92c4f3c65cf6f15009",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9411,
        "upload_time": "2017-12-03T07:33:42",
        "url": "https://files.pythonhosted.org/packages/a0/1b/33a76d81d063f17680a5cee303566d47bab2135c8cc2b1409621c68c8029/djburger-0.6.2.tar.gz"
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "85f88b8c7a23ed941ba95c36f45815ca",
          "sha256": "aeb4ed71e6522b3cbe40d83737c18407dece900de2a1b53e76ce590d809b96e4"
        },
        "downloads": -1,
        "filename": "djburger-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "85f88b8c7a23ed941ba95c36f45815ca",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12241,
        "upload_time": "2017-12-17T07:52:28",
        "url": "https://files.pythonhosted.org/packages/53/2c/6f1fac3a3e91f7c9a616c059c62a45cc2ee3a1a6fcea373136d40c0bd28a/djburger-0.7.0.tar.gz"
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "773ea24d6f0f358fb3374d7e8feefce0",
          "sha256": "2c39819d83ea708c197cfd6daecfb1701c09815ef2f721959f10295c957309f4"
        },
        "downloads": -1,
        "filename": "djburger-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "773ea24d6f0f358fb3374d7e8feefce0",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 12786,
        "upload_time": "2017-12-17T07:56:03",
        "url": "https://files.pythonhosted.org/packages/3e/62/97269020af86bdd228128370cbac793abfef40ac04e1962c2e0199fa9f34/djburger-0.7.1.tar.gz"
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0bf6d8c0da766eb791d6af48e42fa883",
          "sha256": "6c44229fe879e32d7c1dc9527c44de195738586f731106a63cc4e696c6645d1b"
        },
        "downloads": -1,
        "filename": "djburger-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0bf6d8c0da766eb791d6af48e42fa883",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15187,
        "upload_time": "2018-01-03T14:56:07",
        "url": "https://files.pythonhosted.org/packages/28/99/3689ebd001ee7d63d9ba282d86aa98242171021959b6a43124ee73b88a67/djburger-0.8.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "0bf6d8c0da766eb791d6af48e42fa883",
        "sha256": "6c44229fe879e32d7c1dc9527c44de195738586f731106a63cc4e696c6645d1b"
      },
      "downloads": -1,
      "filename": "djburger-0.8.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0bf6d8c0da766eb791d6af48e42fa883",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15187,
      "upload_time": "2018-01-03T14:56:07",
      "url": "https://files.pythonhosted.org/packages/28/99/3689ebd001ee7d63d9ba282d86aa98242171021959b6a43124ee73b88a67/djburger-0.8.0.tar.gz"
    }
  ]
}