{
  "info": {
    "author": "elssar",
    "author_email": "elssar@altrawcode.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# conundrum\n\n### A webframework agnostic blogging plugin in Python\n\nThe idea is pretty simple. To make a create post -\n\n  - Fetch a public gist* from github, with a markdown file\n  - Save as markdown text in a yaml file with other info like date\n  - Keep a file with the name of the newest post\n  - Maintain an archive\n\nAnd to display -\n\n  - Archive is returned as html\n  - Blog post is returned as html if name is given, else the newest post is returned\n\n*For now it is possible to fetch post only from public gists. Support for more services will be added later.\n\n## Usage -\n\n  - Make sure you have a folder named **posts** in your application directory.\n  - Create a public gist in markdown format as your post\n  - Call from your application `conundrum.fetch(gist_id, name/title, github_username)\n    - It will fetch the gist and save it in a yaml file named <title>, along with some other data\n    - It will also update the archive, which is saved as a markdown file in the **posts** directory\n    - And it will update a file named **first** with the name of the new file.\n  - To update a post, call `conundrum.update(title)` and it will update the post.\n  - To get the archive, call `conundrum.archive()`\n  - To get a post call `conundrum.blog(title)`.\n    - It will return the html of that particular blog post, if it exists.\n    - If no title is supplied, it will return the latest post.\n  - A function `operate` is provided. It will take in arguments, and send them as `post` data to a url in the args\n    - The format is `conundrum.operate(-p|-u url title <gist_id> <auth>)`\n      - -p for post, -u for update(not used right now, but will be later)\n      - `url` is the url you want to call on your site. Eg domain.tld/fetch to create a post, domain.tld/update to update it\n      - `title` is the title of the post\n      - `gist_id` is required only when you're creating a new post\n      - `auth` is optional, you can use it to send authentication\n    - This function is pretty basic, and it would be much better, and easier to create one of your own\n\n## To Do\n\n  - Make it possible for the user to change the posts directory\n  - Add support for private gists, and more services(dropbox, google drive...)",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/elssar/conundrum",
    "keywords": "conundrum blog blogging plugin",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "conundrum",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/conundrum/",
    "release_url": "https://pypi.org/project/conundrum/0.1.0/",
    "requires_python": null,
    "summary": "A web framework agnostic blogging plugin.",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": []
  },
  "urls": []
}