{
  "info": {
    "author": "Devon P. Ryan",
    "author_email": "ryan@ie-freiburg.mpg.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![Build Status](https://travis-ci.org/dpryan79/py2bit.svg?branch=master)](https://travis-ci.org/dpryan79/py2bit)\n\n# py2bit\n\nA python extension, written in C, for quick access to [2bit](https://genome.ucsc.edu/FAQ/FAQformat.html#format7) files. The extension uses [lib2bit](https://github.com/dpryan79/lib2bit) for file access.\n\nTable of Contents\n=================\n\n * [Installation](#installation)\n * [Usage](#usage)\n   * [Load the extension](#load-the-extension)\n   * [Open a 2bit file](#open-a-2bit-file)\n   * [Access the list of chromosomes and their lengths](#access-the-list-of-chromosomes-and-their-lengths)\n   * [Print file information](#print-file-information)\n   * [Fetch a sequence](#fetch-a-sequence)\n   * [Fetch per-base statistics](#fetch-per-base-statistics)\n * [A note on coordinates](#a-note-on-coordinates)\n\n# Installation\n\nYou can install the extension directly from github with:\n\n    pip install git+https://github.com/dpryan79/py2bit\n\n# Usage\n\nBasic usage is as follows:\n\n## Load the extension\n\n    >>> import py2bit\n\n## Open a 2bit file\n\nThis will work if your working directory is the py2bit source code directory.\n\n    >>> tb = py2bit.open(\"test/foo.2bit\")\n\nNote that if you would like to include information about soft-masked bases, you need to manually specify that:\n\n    >>> tb = py2bit.open(\"test/foo.2bit\", True)\n\n## Access the list of chromosomes and the lengths\n\n`TwoBit` objects contain a dictionary holding the chromosome/contig lengths, which can be accessed with the `chroms()` method.\n\n    >>> tb.chroms()\n    {'chr1': 150L, 'chr2': 100L}\n\nYou can directly access a particular chromosome by specifying its name.\n\n    >>> tb.chroms('chr1')\n    150L\n\nThe lengths are stored as a \"long\" integer type, which is why there's an `L` suffix. If you specify a nonexistent chromosome then nothing is output.\n\n    >>> tb.chroms(\"foo\")\n    >>>\n\n## Print file information\n\nThe following information about and contained within a 2bit file can be accessed with the `info()` method:\n\n * file size, in bytes (`file size`)\n * number of chromosomes/contigs (`nChroms`)\n * total sequence length, in bases (`sequence length`)\n * total number of hard-masked (N) bases (`hard-masked length`)\n * total number of soft-masked (lower case) bases(`soft-masked length`).\n\nNote that `soft-masked length` will only be present if `open(\"file.2bit\", True)` is used, since handling soft-masking increases memory requirements and decreases perfomance.\n\n    >>> tb.info()\n    {'file size': 161, 'nChroms': 2, 'sequence length': 250, 'hard-masked length': 150, 'soft-masked length': 8}\n\n## Fetch a sequence\n\nThe sequence of a full or partial chromosome/contig can be fetched with the `sequence()` method.\n\n    >>> tb.sequence(\"chr1\")\n    'NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNACGTACGTACGTagctagctGATCGATCGTAGCTAGCTAGCTAGCTGATCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN'\n\nBy default, the whole chromosome/contig is returned. A specific range can also be requested.\n\n    >>> tb.sequence(\"chr1\", 24, 74)\n    NNNNNNNNNNNNNNNNNNNNNNNNNNACGTACGTACGTagctagctGATC\n\nThe first number is the (0-based) position on the chromosome/contig where the sequence should begin. The second number is the (1-based) position on the chromosome where the sequence should end.\n\nIf it was requested during file opening that soft-masking information be stored, then lower case bases may be present. If a nonexistent chromosome/contig is specified then a runtime error occurs.\n\n## Fetch per-base statistics\n\nIt's often required to compute the percentage of 1 or more bases in a chromosome. This can be done with the `bases()` method.\n\n    >>> tb.bases(\"chr1\")\n    {'A': 0.08, 'C': 0.08, 'T': 0.08666666666666667, 'G': 0.08666666666666667}\n\nThis returns a dictionary with bases as keys and the fraction of the sequence composed of them as values. Note that this will not sum to 1 if there are any hard-masked bases (the chromosome is 2/3 `N` in this case). One can also request this information over a particular region.\n\n    >>> tb.bases(\"chr1\", 24, 74)\n    {'A': 0.12, 'C': 0.12, 'T': 0.12, 'G': 0.12}\n\nThe start and end position are as with the `sequence()` method described above.\n\nIf integer counts are preferred, then they can instead be returned.\n\n    >>> tb.bases(\"chr1\", 24, 74, False)\n    {'A': 6, 'C': 6, 'T': 6, 'G': 6}\n\n## Close a file\n\nA `TwoBit` object can be closed with the `close()` method.\n\n    >>> tb.close()\n\n# A note on coordinates\n\n0-based half-open coordinates are used by this python module. So to access the value for the first base on `chr1`, one would specify the starting position as `0` and the end position as `1`. Similarly, bases 100 to 115 would have a start of `99` and an end of `115`. This is simply for the sake of consistency with most other bioinformatics packages.\n",
    "docs_url": null,
    "download_url": "https://github.com/dpryan79/py2bit/tarball/0.2.1",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/dpryan79/py2bit",
    "keywords": "bioinformatics,2bit",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py2bit",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/py2bit/",
    "release_url": "https://pypi.org/project/py2bit/0.2.1/",
    "requires_python": "",
    "summary": "A package for accessing 2bit files using lib2bit",
    "version": "0.2.1"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f10c0a6a1f3f9cbccc295c3271670e90",
          "sha256": "d835294c558eb74d682cc9f131156a7bc780714438b8bd49fc4e29cf509ef8c9"
        },
        "downloads": 411,
        "filename": "py2bit-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f10c0a6a1f3f9cbccc295c3271670e90",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14422,
        "upload_time": "2016-08-02T13:11:10",
        "url": "https://files.pythonhosted.org/packages/d7/58/258f2da779d078fa663346063727071dee8667fd9f49e0e85ab98bfa37e9/py2bit-0.1.0.tar.gz"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c441eea85270dda8f502b389b6235518",
          "sha256": "207aca70f450d3701b63fe69ddcb79d67cdbc38dccd64aa2d84837e87fea3e1a"
        },
        "downloads": 394,
        "filename": "py2bit-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c441eea85270dda8f502b389b6235518",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 14752,
        "upload_time": "2016-10-25T11:10:51",
        "url": "https://files.pythonhosted.org/packages/f4/98/5fc4799e9b6717a80aa31efd09bb6ce8fbca87fae8985ca202129639ff24/py2bit-0.2.0.tar.gz"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "eaf5b1c80a0bbf0b35af1f002f83a556",
          "sha256": "34f7ac22be0eb4b5493063826bcc2016a78eb216bb7130890b50f3572926aeb1"
        },
        "downloads": 42,
        "filename": "py2bit-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eaf5b1c80a0bbf0b35af1f002f83a556",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 15054,
        "upload_time": "2017-01-21T22:27:59",
        "url": "https://files.pythonhosted.org/packages/b2/ad/72d0d1cf2a588d9d2b16f5e531063aa33d1c80bf424e810fc1dfe5c5dc72/py2bit-0.2.1.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "eaf5b1c80a0bbf0b35af1f002f83a556",
        "sha256": "34f7ac22be0eb4b5493063826bcc2016a78eb216bb7130890b50f3572926aeb1"
      },
      "downloads": 42,
      "filename": "py2bit-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "eaf5b1c80a0bbf0b35af1f002f83a556",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 15054,
      "upload_time": "2017-01-21T22:27:59",
      "url": "https://files.pythonhosted.org/packages/b2/ad/72d0d1cf2a588d9d2b16f5e531063aa33d1c80bf424e810fc1dfe5c5dc72/py2bit-0.2.1.tar.gz"
    }
  ]
}