{
  "info": {
    "author": "Scott Sharkey",
    "author_email": "ssharkey@lanshark.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Security",
      "Topic :: System :: Systems Administration :: Authentication/Directory"
    ],
    "description": "Django Encrypted Model Fields\n=============================\n\n.. image:: https://travis-ci.org/lanshark/django-encrypted-model-fields.png\n   :target: https://travis-ci.org/lanshark/django-encrypted-model-fields\n\nAbout\n-----\n\nThis is a fork of https://github.com/foundertherapy/django-cryptographic-fields.\nIt has been renamed, and updated to properly support Python3 and latest versions\nof Django.\n\n``django-encrypted-model-fields`` is set of fields that wrap standard Django\nfields with encryption provided by the python cryptography library. These\nfields are much more compatible with a 12-factor design since they take their\nencryption key from the settings file instead of a file on disk used by\n``keyczar``.\n\nWhile keyczar is an excellent tool to use for encryption, it's not compatible\nwith Python 3, and it requires, for hosts like Heroku, that you either check\nyour key file into your git repository for deployment, or implement manual\npost-deployment processing to write the key stored in an environment variable\ninto a file that keyczar can read.\n\nGetting Started\n---------------\n\n    $ pip install django-encrypted-model-fields\n\nAdd \"encrypted_model_fields\" to your INSTALLED_APPS setting like this:\n\n    INSTALLED_APPS = (\n        ...\n        'encrypted_model_fields',\n    )\n\n``django-encrypted-model-fields`` expects the encryption key to be specified\nusing ``FIELD_ENCRYPTION_KEY`` in your project's ``settings.py`` file. For\nexample, to load it from the local environment:\n\n    import os\n\n    FIELD_ENCRYPTION_KEY = os.environ.get('FIELD_ENCRYPTION_KEY', '')\n\nTo use an encrypted field in a Django model, use one of the fields from the\n``encrypted_model_fields`` module:\n\n    from encrypted_model_fields.fields import EncryptedCharField\n\n    class EncryptedFieldModel(models.Model):\n        encrypted_char_field = EncryptedCharField(max_length=100)\n\nFor fields that require ``max_length`` to be specified, the ``Encrypted``\nvariants of those fields will automatically increase the size of the database\nfield to hold the encrypted form of the content. For example, a 3 character\nCharField will automatically specify a database field size of 100 characters\nwhen ``EncryptedCharField(max_length=3)`` is specified.\n\nDue to the nature of the encrypted data, filtering by values contained in\nencrypted fields won't work properly. Sorting is also not supported.\n\nGenerating an Encryption Key\n----------------------------\n\nThere is a Django management command ``generate_encryption_key`` provided\nwith the ``encrypted_model_fields`` library. Use this command to generate a new\nencryption key to set as ``settings.FIELD_ENCRYPTION_KEY``.\n\n    ./manage.py generate_encryption_key\n\nRunning this command will print an encryption key to the terminal, which can\nbe configured in your environment or settings file.\n\n\n",
    "docs_url": null,
    "download_url": "https://github.com/lanshark/django-encrypted-model-fields/archive/0.5.3.tar.gz",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/lanshark/django-encrypted-model-fields/",
    "keywords": "encryption,django,fields",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-encrypted-model-fields",
    "platform": "",
    "project_url": "https://pypi.org/project/django-encrypted-model-fields/",
    "release_url": "https://pypi.org/project/django-encrypted-model-fields/0.5.3/",
    "requires_python": "",
    "summary": "A set of django fields that internally are encrypted using the cryptography.io native python encryption library.",
    "version": "0.5.3"
  },
  "releases": {
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "750c613153965003ffaf18bc2c49de2c",
          "sha256": "7a383c6ebfbac1fce3ce051eb1141b67abde4acbe96241a04a8f2ae954e0e49d"
        },
        "downloads": 29,
        "filename": "django_encrypted_model_fields-0.5.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "750c613153965003ffaf18bc2c49de2c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 12770,
        "upload_time": "2017-03-15T23:56:09",
        "url": "https://files.pythonhosted.org/packages/2c/59/4565f105e9548c6f923676ff19d5561fd497348c675b52f9f17a63511aca/django_encrypted_model_fields-0.5.3-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "4e2849a1bd9c15636806c4ae47a86d76",
          "sha256": "a385453fa67825259ff0cf50259eac6ef6cd799511f6e6d0e70d17153088458f"
        },
        "downloads": 35,
        "filename": "django-encrypted-model-fields-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4e2849a1bd9c15636806c4ae47a86d76",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 9875,
        "upload_time": "2017-03-15T23:56:10",
        "url": "https://files.pythonhosted.org/packages/49/01/3ab5b8265714aa5eb4e83eeda182edc5772cbe6b43bd7de6802fc39c42f5/django-encrypted-model-fields-0.5.3.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "750c613153965003ffaf18bc2c49de2c",
        "sha256": "7a383c6ebfbac1fce3ce051eb1141b67abde4acbe96241a04a8f2ae954e0e49d"
      },
      "downloads": 29,
      "filename": "django_encrypted_model_fields-0.5.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "750c613153965003ffaf18bc2c49de2c",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 12770,
      "upload_time": "2017-03-15T23:56:09",
      "url": "https://files.pythonhosted.org/packages/2c/59/4565f105e9548c6f923676ff19d5561fd497348c675b52f9f17a63511aca/django_encrypted_model_fields-0.5.3-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "4e2849a1bd9c15636806c4ae47a86d76",
        "sha256": "a385453fa67825259ff0cf50259eac6ef6cd799511f6e6d0e70d17153088458f"
      },
      "downloads": 35,
      "filename": "django-encrypted-model-fields-0.5.3.tar.gz",
      "has_sig": false,
      "md5_digest": "4e2849a1bd9c15636806c4ae47a86d76",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 9875,
      "upload_time": "2017-03-15T23:56:10",
      "url": "https://files.pythonhosted.org/packages/49/01/3ab5b8265714aa5eb4e83eeda182edc5772cbe6b43bd7de6802fc39c42f5/django-encrypted-model-fields-0.5.3.tar.gz"
    }
  ]
}