{
  "info": {
    "author": "Tim Henderson",
    "author_email": "tim.tadh@gmail.com",
    "bugtrack_url": "",
    "classifiers": [],
    "description": "Zhang-Shasha: Tree edit distance in Python\n------------------------------------------\n\nThe ``zss`` module provides a function (``zss.distance``) that\ncomputes the edit distance between the two given trees, as well as a small set\nof utilities to make its use convenient.\n\nIf you'd like to learn more about how it works, see References below.\n\nBrought to you by Tim Henderson (tim.tadh@gmail.com)\nand Steve Johnson (steve@steveasleep.com).\n\n`Read the full documentation for more information.\n<http://zhang-shasha.readthedocs.org/en/latest/>`_\n\nInstallation\n------------\n\nYou can get ``zss`` and its soft requirements (\n``editdist`` and ``numpy`` >= 1.7) from PyPI::\n\n    pip install zss\n\nBoth modules are optional. ``editdist`` uses string edit distance to\ncompare node labels rather than a simple equal/not-equal check, and\n``numpy`` significantly speeds up the library. The only reason version\n1.7 of ``numpy`` is required is that earlier versions have trouble\ninstalling on current versions of Mac OS X.\n\nYou can install ``zss`` from the source code without dependencies in the\nusual way::\n\n    python setup.py install\n\nIf you want to build the docs, you'll need to install Sphinx >= 1.0.\n\nUsage\n-----\n\nTo compare the distance between two trees, you need:\n\n1. A tree.\n2. Another tree.\n3. A node-node distance function. By default, ``zss`` compares the edit\n   distance between the nodes' labels. ``zss`` currently only knows how\n   to handle nodes with string labels.\n4. Functions to let ``zss.distance`` traverse your tree.\n\nHere is an example using the library's built-in default node structure and edit\ndistance function\n\n.. code-block:: python\n\n    from zss import simple_distance, Node\n\n    A = (\n        Node(\"f\")\n            .addkid(Node(\"a\")\n                .addkid(Node(\"h\"))\n                .addkid(Node(\"c\")\n                    .addkid(Node(\"l\"))))\n            .addkid(Node(\"e\"))\n        )\n    B = (\n        Node(\"f\")\n            .addkid(Node(\"a\")\n                .addkid(Node(\"d\"))\n                .addkid(Node(\"c\")\n                    .addkid(Node(\"b\"))))\n            .addkid(Node(\"e\"))\n        )\n    assert simple_distance(A, B) == 2\n\n\nSpecifying Custom Tree Formats\n------------------------------\n\nSpecifying custom tree formats and distance metrics is easy. The\n``zss.simple_distance`` function takes 3 extra parameters besides the two tree\nto compare:\n\n1. ``get_children`` - a function to retrieve a list of children from a node.\n2. ``get_label`` - a function to retrieve the label object from a node.\n3. ``label_dist`` - a function to compute the non-negative integer distance\n   between two node labels.\n\nExample\n^^^^^^^\n\n.. code-block:: python\n\n    #!/usr/bin/env python\n\n    import zss\n\n    try:\n        from editdist import distance as strdist\n    except ImportError:\n        def strdist(a, b):\n            if a == b:\n                return 0\n            else:\n                return 1\n\n    def weird_dist(A, B):\n        return 10*strdist(A, B)\n\n    class WeirdNode(object):\n\n        def __init__(self, label):\n            self.my_label = label\n            self.my_children = list()\n\n        @staticmethod\n        def get_children(node):\n            return node.my_children\n\n        @staticmethod\n        def get_label(node):\n            return node.my_label\n\n        def addkid(self, node, before=False):\n            if before:  self.my_children.insert(0, node)\n            else:   self.my_children.append(node)\n            return self\n\n    A = (\n    WeirdNode(\"f\")\n        .addkid(WeirdNode(\"d\")\n        .addkid(WeirdNode(\"a\"))\n        .addkid(WeirdNode(\"c\")\n            .addkid(WeirdNode(\"b\"))\n        )\n        )\n        .addkid(WeirdNode(\"e\"))\n    )\n    B = (\n    WeirdNode(\"f\")\n        .addkid(WeirdNode(\"c\")\n        .addkid(WeirdNode(\"d\")\n            .addkid(WeirdNode(\"a\"))\n            .addkid(WeirdNode(\"b\"))\n        )\n        )\n        .addkid(WeirdNode(\"e\"))\n    )\n\n    dist = zss.simple_distance(\n        A, B, WeirdNode.get_children, WeirdNode.get_label, weird_dist)\n\n    print dist\n    assert dist == 20\n\n\nReferences\n----------\n\nThe algorithm used by ``zss`` is taken directly from the original paper by\nZhang and Shasha. If you would like to discuss the paper, or the the tree edit\ndistance problem (we have implemented a few other algorithms as well) please\nemail the authors.\n\n`approxlib <http://www.inf.unibz.it/~augsten/src/>`_ by Dr. Nikolaus Augstent\ncontains a good Java implementation of Zhang-Shasha as well as a number of\nother useful tree distance algorithms.\n\n`Kaizhong Zhang and Dennis Shasha. Simple fast algorithms for the editing distance between trees and related problems. SIAM Journal of Computing, 18:1245\u20131262, 1989.`__ (the original paper)\n\n__ http://www.grantjenks.com/wiki/_media/ideas:simple_fast_algorithms_for_the_editing_distance_between_tree_and_related_problems.pdf\n\n`Slide deck overview of Zhang-Shasha <http://www.inf.unibz.it/dis/teaching/ATA/ata7-handout-1x1.pdf>`_\n\n`Another paper describing Zhang-Shasha <http://research.cs.queensu.ca/TechReports/Reports/1995-372.pdf>`_\n",
    "docs_url": "https://pythonhosted.org/zss/",
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://www.github.com/timtadh/zss",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "zss",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/zss/",
    "release_url": "https://pypi.org/project/zss/1.1.4/",
    "requires_python": null,
    "summary": "Tree edit distance using the Zhang Shasha algorithm",
    "version": "1.1.4"
  },
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9842a48b7e907ed43d9cd4c4c15391a4",
          "sha256": "a1c3b4900fc423fddcece10ce055bb73c428c71200251abf88d6030626d84eaf"
        },
        "downloads": 2484,
        "filename": "zss-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9842a48b7e907ed43d9cd4c4c15391a4",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3564,
        "upload_time": "2013-09-12T20:35:07",
        "url": "https://files.pythonhosted.org/packages/98/6e/27547ac393c8e57ce60f5f7a6561d092b8e528a2f7e0753c4cf479b1d2e3/zss-1.1.tar.gz"
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b257abfa6f9a9c4dd5929240fd314a85",
          "sha256": "0f6f24921e437a95c300763281446759f8eea9314e1d74cf1ae288d8f5cac15f"
        },
        "downloads": 1616,
        "filename": "zss-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b257abfa6f9a9c4dd5929240fd314a85",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3650,
        "upload_time": "2014-11-03T19:57:53",
        "url": "https://files.pythonhosted.org/packages/c0/c4/77d64c511b5827c85c70cc7e41c67a49b83d58129a8a758cdc5545446636/zss-1.1.1.tar.gz"
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "42cac6d7e8fed938aef1264a92cac92f",
          "sha256": "5651ede050828d55c9ba84d77e4e49793fb9b7e05b002114cb2708689b6e9df0"
        },
        "downloads": 2345,
        "filename": "zss-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "42cac6d7e8fed938aef1264a92cac92f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 3642,
        "upload_time": "2014-11-25T21:35:14",
        "url": "https://files.pythonhosted.org/packages/1d/db/5286134289c4945e8d085c04a0b44997a2e5f4456029c7e55c239733b7b3/zss-1.1.2.tar.gz"
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "0093e58b721d2a9818e7386b63791e38",
          "sha256": "645aac077cc8f6d1f1ad6bc60fdb73537c437605301b50eef204d522d90bc371"
        },
        "downloads": 107,
        "filename": "zss-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0093e58b721d2a9818e7386b63791e38",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8709,
        "upload_time": "2016-05-26T15:20:16",
        "url": "https://files.pythonhosted.org/packages/13/34/95fbce937967385095caa741498c4d39fd8309cc840815f640ecfe6778b8/zss-1.1.3.tar.gz"
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7f927df00da2ec38c3053406f8a42595",
          "sha256": "1c1682b9ba6396a25437b2d28fa7ebadea5c0c1f42c7481bb31a51dead819e41"
        },
        "downloads": 215,
        "filename": "zss-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7f927df00da2ec38c3053406f8a42595",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8714,
        "upload_time": "2016-05-26T15:29:02",
        "url": "https://files.pythonhosted.org/packages/b4/21/eba6bc78bd19eb234cbba0be76dd1e00eb451aa78764f671b952507f6d45/zss-1.1.4.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "7f927df00da2ec38c3053406f8a42595",
        "sha256": "1c1682b9ba6396a25437b2d28fa7ebadea5c0c1f42c7481bb31a51dead819e41"
      },
      "downloads": 215,
      "filename": "zss-1.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "7f927df00da2ec38c3053406f8a42595",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 8714,
      "upload_time": "2016-05-26T15:29:02",
      "url": "https://files.pythonhosted.org/packages/b4/21/eba6bc78bd19eb234cbba0be76dd1e00eb451aa78764f671b952507f6d45/zss-1.1.4.tar.gz"
    }
  ]
}