{
  "info": {
    "author": "Christopher Prohm",
    "author_email": "mail@cprohm.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "# framequery - SQL on dataframes\n\n## Usage\n\nInstall framequery via:\n\n```bash\npip install framequery\n```\n\nUse `framequery.select` to execute queries against dataframes in your scope:\n\n```python\nimport pandas as pd\n\nstores = pd.read_csv('stores.csv')\nsales = pd.read_csv('sales.csv')\n\nimport framequery as fq\n\nsales_by_country = fq.select(\"\"\"\n    SELECT country, sum(sales)\n\n    FROM sales\n\n    JOIN stores\n    ON sales.store_id = stores.id\n\n    GROUP BY country\n\"\"\")\n```\n\nBy passing the `scope` parameters, the dataframes to use can be specified\nexplicitly. The example would read\n`fq.select(..., scope={'stores': stores, 'sales': sales})`.\n\n## SQL Support\n\nThe following operations are supported:\n\n- Select using where, group-by, having, order-by, limit\n- Inner and outer joins using equality conditions\n- Inner joins with in-equality conditions (currently with high performance\n  costs)\n- Cross joins (currently, with high performance costs)\n- Subqueries\n- Common table expressions\n- Numeric expressions\n\nThe following limitations do exist:\n\n- no support for non-numeric expressions\n- no support for outer joins with inequality conditions\n- no support for over-clauses\n- no support for non select statements (update, insert, ...)\n- many, many more, SQL is crazy complex. The topics listed explicitly, however,\n  are on the agenda to be fixed.\n\nSee the tests, in particular `tests/test_framequery.py`, for examples of\nsupported queries.\n\n## Internals\n\n`framequery` executes SQL statements via a multi-step process:\n\n1. The query is parsed and an SQL AST assembled.\n2. The AST is compiled into a DAG of dataframe transformations.\n3. The generated DAG is interpreted on the supplied dataframes.\n\nThe AST classes can be found inside `framequery._parser`, whereas the DAG\nclasses are found inside `framequery._dag`.\n\n## Running tests\n\nInside the project root, execute\n\n```\n    pip install tox\n    tox\n```\n\n## License\n\n>  The MIT License (MIT)\n>  Copyright (c) 2016 Christopher Prohm\n>\n>  Permission is hereby granted, free of charge, to any person obtaining a copy\n>  of this software and associated documentation files (the \"Software\"), to\n>  deal in the Software without restriction, including without limitation the\n>  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n>  sell copies of the Software, and to permit persons to whom the Software is\n>  furnished to do so, subject to the following conditions:\n>\n>  The above copyright notice and this permission notice shall be included in\n>  all copies or substantial portions of the Software.\n>\n>  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n>  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n>  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n>  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n>  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n>  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n>  DEALINGS IN THE SOFTWARE.",
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/chmp/framequery",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "framequery",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/framequery/",
    "release_url": "https://pypi.org/project/framequery/0.1.0/",
    "requires_python": null,
    "summary": "SQL on dataframes",
    "version": "0.1.0"
  },
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "225e0c012dd04cef44987b3c550e03c5",
          "sha256": "3132e4c6adc0a4811de4f0d85e21fbcab4fe97ec6326ee55880d140b0c42244a"
        },
        "downloads": 213,
        "filename": "framequery-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "225e0c012dd04cef44987b3c550e03c5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 21759,
        "upload_time": "2016-09-20T17:39:12",
        "url": "https://files.pythonhosted.org/packages/00/40/93269c8cbee2fb020b888b30437ecaed42170f72a5e6f59a97410e25efe0/framequery-0.1.0-py2.py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "225e0c012dd04cef44987b3c550e03c5",
        "sha256": "3132e4c6adc0a4811de4f0d85e21fbcab4fe97ec6326ee55880d140b0c42244a"
      },
      "downloads": 213,
      "filename": "framequery-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "225e0c012dd04cef44987b3c550e03c5",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 21759,
      "upload_time": "2016-09-20T17:39:12",
      "url": "https://files.pythonhosted.org/packages/00/40/93269c8cbee2fb020b888b30437ecaed42170f72a5e6f59a97410e25efe0/framequery-0.1.0-py2.py3-none-any.whl"
    }
  ]
}