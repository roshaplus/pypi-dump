{
  "info": {
    "author": "Tormod Landet",
    "author_email": "tormod@landet.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: C++",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "Ocellaris\n=========\n\nOcellaris is a work in progress to make a mass conserving DG FEM solver for sharp interface\nmultiphase free surface flows. The current goal of the project is to simulate water entry and \nexit of objects in ocean waves with accurate capturing of the force on the object and the \nbehaviour of the free surface.\n\nOcellaris is implemented in Python and C++ with FEniCS_ as the backend for numerics, mesh and \nfinite element calculations.\n\n.. contents:: Quick start\n\n.. _FEniCS: https://fenicsproject.org/\n\nOcellaris is named after the `Amphiprion Ocellaris <https://en.wikipedia.org/wiki/Ocellaris_clownfish>`_\nclownfish and is written as part of a PhD project at the University of Oslo.\n\n.. figure:: https://trlandet.bitbucket.io/ocellaris/_static/ocellaris_mesh_521.png\n    :align: center\n    :alt: Picture of Ocellaris\n\n    `About this image <https://trlandet.bitbucket.io/ocellaris/logo.html>`_\n\nInstallation and running\n------------------------\n\nOcellaris requires a full installation of FEniCS_ with the PETSc linear algebra backend. You can\ninstall the dependecies yourself (you need at least dolfin, h5py, matplotlib and PyYAML), but the \neasiest way by far is to use a preconfigured Singularity or Docker container. More information\non these and installation in general can be found in the `user guide`_. \n\nWhen Ocellaris is installed you can run the solver with an Ocellaris input file::\n\n  ocellaris INPUTFILE.INP\n\nExample input files can be found in the ``demos/`` sub-directory of the Ocellaris source code and\na description of the Ocellaris input file format is given in the `user guide`_.\n\n.. _user guide: https://trlandet.bitbucket.io/ocellaris/user_guide/user_guide.html\n\nFirst steps\n~~~~~~~~~~~\n\nTo test the code there are some demo input files in the ``demos/`` directory. Complete input files along\nwith driver scripts are provided for several of the standard benchmark cases like Kovasznay flow and the\nTaylor-Green vortex in the ``cases/`` directory. More information can be found in the documentation which\nalso contains a description of the input file format.\n\nPlease feel free to test Ocellaris, but please keep in mind:\n\n- Ocellaris is in a state of constant development \n- Ocellaris supports Python 3 only\n- FEniCS DOLFIN with pybind11 Python3 wrappers is required (master version, still unreleased as of \n  November 2017)\n- This is a research project, do not expect results to be correct without proper validation!\n\nDocumentation\n-------------\n\n.. TOC_STARTS_HERE  - in the Sphinx documentation a table of contents will be inserted here \n\nThe documentation can be found on the `Ocellaris web page <https://trlandet.bitbucket.io/ocellaris/>`_.\n\n.. TOC_ENDS_HERE\n\nDevelopment\n-----------\n\nOcellaris is developed in Python and C++ on `Bitbucket <https://bitbucket.org/trlandet/ocellaris>`_ by use\nof the Git version control system. If you are reading this on github, please be aware that you are seeing a\nmirror that could potentially be months out of date. The github mirror is only updated sporadically\u2014to trigger\nnew Singularity Hub container builds. All pull requests and issues should go to the Bitbucket repository.\n\nOcellaris is automatically tested on `CircleCI <https://circleci.com/bb/trlandet/ocellaris/tree/master>`_  \nand the current CI build status is |circleci_status|.\n\n.. |circleci_status| image:: https://circleci.com/bb/trlandet/ocellaris.svg?style=svg&circle-token=886a679594f958395d69c0720b04c4d88056f49d\n  :target: https://circleci.com/bb/trlandet/ocellaris/tree/master\n\nCopyright and license\n---------------------\n\nOcellaris is copyright Tormod Landet, 2015-2017. Ocellaris is licensed under the Apache 2.0 license, a \npermissive free software license compatible with version 3 of the GNU GPL. See `License of Ocellaris`_ for\nthe details.\n\n.. _`License of Ocellaris`:  https://trlandet.bitbucket.io/ocellaris/license.html\n\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://bitbucket.org/trlandet/ocellaris",
    "keywords": "fem fenics cfd dg navier-stokes multi-phase flow",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ocellaris",
    "platform": "",
    "project_url": "https://pypi.org/project/ocellaris/",
    "release_url": "https://pypi.org/project/ocellaris/2018.1.0.dev0/",
    "requires_dist": [
      "fenics-dolfin (<2018.2,>=2018.1.0.dev0)",
      "numpy",
      "h5py",
      "PyYAML"
    ],
    "requires_python": "",
    "summary": "A discontinuous Galerkin FEM solver for multiphase free surface flows",
    "version": "2018.1.0.dev0"
  },
  "releases": {
    "2017.1.dev1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c22ed0e8074fd6fe77162cef97e54d24",
          "sha256": "1d61539dac3c9e27e7fc4d8a8a290051b3e6bc473f06032fa8a4e981dc561a17"
        },
        "downloads": -1,
        "filename": "ocellaris-2017.1.dev1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "c22ed0e8074fd6fe77162cef97e54d24",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "size": 185839,
        "upload_time": "2017-04-04T09:00:54",
        "url": "https://files.pythonhosted.org/packages/9f/fa/0a52042488f1823b580c45b41052f80e9c1bb2ee48f77d1edf8704240cdb/ocellaris-2017.1.dev1-py2-none-any.whl"
      }
    ],
    "2018.1.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "23937e60cf8436143f1b25bed846e0c2",
          "sha256": "d8fb3cb22395dd5c30e64ba80703e18a1cbd86bb6d7427de80c59e23f776938a"
        },
        "downloads": -1,
        "filename": "ocellaris-2018.1.0.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23937e60cf8436143f1b25bed846e0c2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "size": 258594,
        "upload_time": "2018-01-23T08:58:05",
        "url": "https://files.pythonhosted.org/packages/86/b2/4fa0de16287083eb00bacef55e542ce580dc0c76a8bf1a50a93164676b7e/ocellaris-2018.1.0.dev0-py3-none-any.whl"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "23937e60cf8436143f1b25bed846e0c2",
        "sha256": "d8fb3cb22395dd5c30e64ba80703e18a1cbd86bb6d7427de80c59e23f776938a"
      },
      "downloads": -1,
      "filename": "ocellaris-2018.1.0.dev0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "23937e60cf8436143f1b25bed846e0c2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "size": 258594,
      "upload_time": "2018-01-23T08:58:05",
      "url": "https://files.pythonhosted.org/packages/86/b2/4fa0de16287083eb00bacef55e542ce580dc0c76a8bf1a50a93164676b7e/ocellaris-2018.1.0.dev0-py3-none-any.whl"
    }
  ]
}