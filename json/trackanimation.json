{
  "info": {
    "author": "Juan Jos\u00e9 Mart\u00edn",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Topic :: Multimedia :: Video",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Track Animation\n\n**Track Animation** is a Python 2 and 3 library that provides and easy and user-adjustable way of **creating visualizations from GPS data** easily and without any kind of technical tie for the user. It allows to import GPS data from **GPX** (GPS eXchange Format) and CSV files in order to manipulate it and, finally, create **videos**, **images**, sequences of images or **interactive maps** to analyze the tracks based on their elevation, speed, duration or any other indicator.\n\nThe main third party libraries that **Track Animation** uses are [gpxpy](https://github.com/tkrajina/gpxpy) to parse and read GPX files, [pandas](http://pandas.pydata.org/) to manipulate all the GPS data and [matplotlib](https://matplotlib.org/) to plot it and save the visualizations.\n\nTo create a basic visualization, simply read the files and pass them to the *AnimationTrack* class:\n\n```python\nimport trackanimation\nfrom trackanimation.animation import AnimationTrack\n\ninput_directory = \"example-routes/\"\nibiza_trk = trackanimation.readTrack(input_directory)\n\nfig = AnimationTrack(df_points=ibiza_trk, dpi=300, bg_map=True, map_transparency=0.5)\nfig.makeVideo(output_file='simple-example', framerate=60, linewidth=1.0)\n```\n\n![Simple example](example-results/simple-example.gif)\n\n\n\n## Dependencies\n* [gpxpy](https://github.com/tkrajina/gpxpy)\n* [pandas](http://pandas.pydata.org/)\n* [matplotlib](https://matplotlib.org/)\n* [geopy](https://github.com/geopy/geopy)\n* [smopy](https://github.com/rossant/smopy)\n* [mplleaflet](https://github.com/jwass/mplleaflet)\n* [image](http://pillow.readthedocs.io/en/3.4.x/reference/Image.html)\n* [tqdm](https://github.com/noamraph/tqdm)\n* [FFmpeg](https://ffmpeg.org/)\n\n\n\n## Installation\n\nInstall **Track Animation** using [pip](http://www.pip-installer.org/en/latest/) with:\n\n    pip install trackanimation\n\nOr, [download the source files from PyPI](https://pypi.python.org/pypi/trackanimation).\n\n\n\n## Getting Started\n\nYou can find the following examples in the [examples.py](examples.py) file.\n\n\n\n### Filtering by place\n\nIt is possible to filter a set of tracks to retrieve only the points that belong to an specific place or the whole tracks that have passed by there. With the function *timeVideoNormalize*, all the tracks will start and end at the same time in the video, specyfing its duration and frame rate in the parameters. In the next example, the video created has a duration of 10 seconds with 10 frames per second.\n\n```python\nimport trackanimation\nfrom trackanimation.animation import AnimationTrack\n\ninput_directory = \"example-routes/\"\nibiza_trk = trackanimation.readTrack(input_directory)\nsant_josep_trk = ibiza_trk.getTracksByPlace('Sant Josep de sa Talaia', only_points=False)\nsant_josep_trk = sant_josep_trk.timeVideoNormalize(time=10, framerate=10)\n\nfig = AnimationTrack(df_points=sant_josep_trk, dpi=300, bg_map=True, map_transparency=0.5)\nfig.makeVideo(output_file='filtering-by-place', framerate=10, linewidth=1.0)\n```\n\n![Filtering by place and normalizing](example-results/filtering-by-place.gif)\n\n\n\n### Coloring tracks by one indicator\n\nFurthermore, an indicator of the tracks can be visualized as a palette of colors to make the analysis and the interpretation of the data easier and effective.\n\n```python\nimport trackanimation\nfrom trackanimation.animation import AnimationTrack\n\ninput_directory = \"example-routes/ibiza.csv\"\nibiza_trk = trackanimation.readTrack(input_directory)\nibiza_trk = ibiza_trk.timeVideoNormalize(time=10, framerate=10)\nibiza_trk = ibiza_trk.setColors('Speed', individual_tracks=True)\n\nfig = AnimationTrack(df_points=ibiza_trk, dpi=300, bg_map=True, map_transparency=0.5)\nfig.makeVideo(output_file='coloring-map-by-speed', framerate=10, linewidth=1.0)\n\n# Variable 'bg_map' must be to False in order to create an interactive map\nfig = AnimationTrack(df_points=ibiza_trk, dpi=300, bg_map=False, map_transparency=0.5)\nfig.makeMap(output_file='coloring-map-by-speed')\n```\n\n[Click to view the interactive map](http://htmlpreview.github.io/?https://github.com/JoanMartin/trackanimation/master/example-results/coloring-map-by-speed.html)\n\n![Coloring tracks by their speed](example-results/coloring-map-by-speed.gif)\n\n\n\n### Visualizing multiple set of tracks\n\nMultiple sets of tracks can be plotted independently in the same visualization to compare them.\n\n```python\nimport trackanimation\nfrom trackanimation.animation import AnimationTrack\n\ninput_directory = \"example-routes/\"\nibiza_trk = trackanimation.readTrack(input_directory)\nsant_josep_trk = ibiza_trk.getTracksByPlace('Sant Josep de sa Talaia', only_points=False)\n\nibiza_trk = ibiza_trk.setColors('Speed', individual_tracks=True)\nsant_josep_trk = sant_josep_trk.setColors('Speed', individual_tracks=True)\n\nfig = AnimationTrack(df_points=[ibiza_trk, sant_josep_trk], dpi=300, bg_map=True, map_transparency=0.5)\nfig.makeImage(output_file='multiple-axes')\n```\n\n![Multiple axes](example-results/multiple-axes.png)\n\n\n\n## Documentation\n\nMore documentation and examples can be found at [Track Animation PDF document](Documentation.pdf).\n\n",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "https://github.com/JoanMartin/trackanimation",
    "keywords": "GPS GPX animation map geospatial geopositioning",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "trackanimation",
    "platform": "",
    "project_url": "https://pypi.org/project/trackanimation/",
    "release_url": "https://pypi.org/project/trackanimation/1.0.0/",
    "requires_dist": [],
    "requires_python": "",
    "summary": "GPS Track Animation Library",
    "version": "1.0.0"
  },
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "b4c67d69880f64c745ce16bb20626672",
          "sha256": "a68e171bfab500588b3dfbaec3a94f8292ea46f8fb252d661ab0ab85c31eb08f"
        },
        "downloads": 0,
        "filename": "trackanimation-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4c67d69880f64c745ce16bb20626672",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "size": 15612,
        "upload_time": "2017-07-10T23:54:54",
        "url": "https://files.pythonhosted.org/packages/1a/88/038a59d4894d9dcc2d9b3b7ceddf36f0c15687ba102dc6c8202c27490e85/trackanimation-1.0.0-py2.py3-none-any.whl"
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "80ce4262f7b340c335ecf2750598313f",
          "sha256": "4f2e859f6d1d16629afc67a4b4e42e8ab7c9cd800962abcf919e6f465b2996d5"
        },
        "downloads": 0,
        "filename": "trackanimation-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "80ce4262f7b340c335ecf2750598313f",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 10359,
        "upload_time": "2017-07-10T23:54:55",
        "url": "https://files.pythonhosted.org/packages/1f/54/e952ae410b813f0f16bcabd7be0153a17f2795d9d16e9213d277aeb518d3/trackanimation-1.0.0.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "b4c67d69880f64c745ce16bb20626672",
        "sha256": "a68e171bfab500588b3dfbaec3a94f8292ea46f8fb252d661ab0ab85c31eb08f"
      },
      "downloads": 0,
      "filename": "trackanimation-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b4c67d69880f64c745ce16bb20626672",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "size": 15612,
      "upload_time": "2017-07-10T23:54:54",
      "url": "https://files.pythonhosted.org/packages/1a/88/038a59d4894d9dcc2d9b3b7ceddf36f0c15687ba102dc6c8202c27490e85/trackanimation-1.0.0-py2.py3-none-any.whl"
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "80ce4262f7b340c335ecf2750598313f",
        "sha256": "4f2e859f6d1d16629afc67a4b4e42e8ab7c9cd800962abcf919e6f465b2996d5"
      },
      "downloads": 0,
      "filename": "trackanimation-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "80ce4262f7b340c335ecf2750598313f",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 10359,
      "upload_time": "2017-07-10T23:54:55",
      "url": "https://files.pythonhosted.org/packages/1f/54/e952ae410b813f0f16bcabd7be0153a17f2795d9d16e9213d277aeb518d3/trackanimation-1.0.0.tar.gz"
    }
  ]
}