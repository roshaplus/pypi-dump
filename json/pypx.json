{
  "info": {
    "author": "FNNDSC Developpers",
    "author_email": "dev@babymri.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "####################################\nPyPx - 0.9\n####################################\n\n.. image:: https://badge.fury.io/py/pypx.svg\n    :target: https://badge.fury.io/py/pypx\n\n.. image:: https://travis-ci.org/FNNDSC/pypx.svg?branch=master\n    :target: https://travis-ci.org/FNNDSC/pypx\n\n.. image:: https://img.shields.io/badge/python-3.5%2B-blue.svg\n    :target: https://badge.fury.io/py/pypx\n\n.. contents:: Table of Contents\n\n1. Overview\n*****************\n\nPypx is a simple Python wrapper around DCMTK and PyDicom. It provides 4 simple way to interact with the PACS:\n\n- **px-echo:** Ping the PACS to make sure it is online (*echoscu*).\n\n- **px-find:** Find data on the PACS (*findscu*).\n\n- **px-move:** Move data from the PACS (*movescu*).\n\n- **px-listen:** Listen for incoming data from the PACS (*storescp*).\n\n2. Installation\n*****************\n\n.. code-block:: bash\n\n   apt-get update \\\n   && apt-get install -y dcmtk \\\n   && apt-get install -y python3-pip python3-dev \\\n   && pip3 install --upgrade pip \\\n   && pip install pypx\n\n3. Usage\n*****************\n\npx-echo\n===============\n\nabout px-echo\n-------------------\n``px-echo`` is a wrapper around dcmtk echoscu_.\n\n::\n\n    It sends a DICOM C-ECHO message to a Service Class Provider (SCP) and waits for a response.\n    The application can be used to verify basic DICOM connectivity.\n    -- DCMTK, about echoscu.\n\npx-echo script\n-------------------\n.. code-block:: bash\n\n   # need some help?\n   px-echo --help\n\n\n   # ping Orthanc PACS server\n   # calling aet: CHIPS\n   # called aet: ORTHANC\n   # Orthanc PACS server IP: 127.0.0.1\n   # Orthanc PACS server port: 4242\n   # echoscu executable: /usr/local/bin/echoscu\n   px-echo --aet CHIPS --aec ORTHANC --serverIP 127.0.0.1 --serverPort 4242 --executable /usr/local/bin/echoscu\n\n   # output\n   #   { 'status': 'success',\n   #     'command': '/usr/local/bin/echoscu --timeout 5  -aec ORTHANC -aet CHIPS 127.0.0.1 4242',\n   #     'data': ''}\n\npx-echo module\n-------------------\n\n.. code-block:: python\n\n   # in yourscript.py\n   import pypx\n\n   pacs_settings = {\n     'executable': '/usr/local/bin/echoscu',\n     'aec': 'ORTHANC',\n     'aet': 'CHIPS',\n     'server_ip': '127.0.0.1',\n     'server_port': '4242',\n   }\n\n   output = pypx.echo(pacs_settings)\n   print(output)\n\n   # output:\n   # {\n   #   'command': '/bin/echoscu --timeout 5  -aec MY-AEC -aet MY-AET 192.168.1.110 4242',\n   #   'data': '',\n   #   'status': 'success'\n   # }\n\npx-find\n===============\n\nabout px-find\n-------------------\n``px-find`` is a wrapper around dcmtk findscu_.\n\nFind series on a PACS server given a vast array of parameters. See ``px-find --help`` for the full list.\n\n::\n\n    It sends query keys to an SCP and awaits responses.\n    The application can be used to test SCPs of the Query/Retrieve and Basic Worklist Management Service Classes.\n    -- DCMTK, about findscu.\n\npx-find script\n-------------------\n.. code-block:: bash\n\n   # need some help?\n   px-find --help\n\n\n   # find data in Orthanc PACS server\n   # calling aet: CHIPS\n   # called aet: ORTHANC\n   # Orthanc PACS server IP: 127.0.0.1\n   # Orthanc PACS server port: 4242\n   # findscu executable: /usr/local/bin/findscu\n   px-find --aet CHIPS --aec ORTHANC --serverIP 127.0.0.1 --serverPort 4242 --executable /usr/local/bin/findscu \\\n     --patientID 32124\n\n   # output\n   #   {'status': 'success',\n   #    'command': '/usr/local/bin/findscu -xi -S \n   #      -k InstanceNumber\n   #      -k ModalitiesInStudy\n   #      -k NumberOfSeriesRelatedInstances\n   #      -k PatientBirthDate\n   #      -k \"PatientID=32124\"\n   #      -k PatientName\n   #      -k PatientSex\n   #      -k PerformedStationAETitle\n   #      -k \"QueryRetrieveLevel=SERIES\"\n   #      -k SeriesDate\n   #      -k SeriesDescription\n   #      -k SeriesInstanceUID\n   #      -k StudyDate\n   #      -k StudyDescription\n   #      -k StudyInstanceUID \n   #      -aec ORTHANC -aet CHIPS 127.0.0.1 4242',\n   #    'data': [lot of stuff if a match] # [] if no results\n   #    }\n\npx-find module\n-------------------\n\n.. code-block:: python\n\n   # in yourscript.py\n   import pypx\n\n   pacs_settings = {\n     'executable': '/usr/local/bin/findscu',\n     'aec': 'ORTHANC',\n     'aet': 'CHIPS',\n     'server_ip': '127.0.0.1',\n     'server_port': '4242',\n   }\n\n   # query parameters\n   query_settings = {\n       'PatientID': 32124,\n    }\n\n   # python 3.5 ** syntax\n   output = pypx.find({**pacs_settings, **query_settings})\n   print(output)\n\n   # output\n   #   {'status': 'success',\n   #    'command': '/usr/local/bin/findscu -xi -S \n   #      -k InstanceNumber\n   #      -k ModalitiesInStudy\n   #      -k NumberOfSeriesRelatedInstances\n   #      -k PatientBirthDate\n   #      -k \"PatientID=32124\"\n   #      -k PatientName\n   #      -k PatientSex\n   #      -k PerformedStationAETitle\n   #      -k \"QueryRetrieveLevel=SERIES\"\n   #      -k SeriesDate\n   #      -k SeriesDescription\n   #      -k SeriesInstanceUID\n   #      -k StudyDate\n   #      -k StudyDescription\n   #      -k StudyInstanceUID \n   #      -aec ORTHANC -aet CHIPS 127.0.0.1 4242',\n   #    'data': [lot of stuff if a match] # [] if no results\n   #    }\n\npx-move\n===============\n\nabout px-move\n-------------------\n``px-move`` is a wrapper around dcmtk movescu_.\n\nMove series given its SeriesUID. SeriesUID can be retrieved with ``px-find``.\n\n::\n\n    It sends query keys to an SCP and awaits responses.\n    The application can be used to test SCPs of the Query/Retrieve Service Class. The movescu application can initiate the transfer of images to a third party or can retrieve images to itself.\n    -- DCMTK, about movescu.\n\npx-move script\n-------------------\n.. code-block:: bash\n\n   px-move --help\n\n   # move data from Orthanc PACS server to AETL\n   # calling aet: CHIPS\n   # calling aet that will receive the data: CHIPS\n   # called aet: ORTHANC\n   # Orthanc PACS server IP: 127.0.0.1\n   # Orthanc PACS server port: 4242\n   # movescu executable: /usr/local/bin/movescu\n   px-move --aet CHIPS --aetl CHIPS --aec ORTHANC --serverIP 127.0.0.1 --serverPort 4242 --executable /usr/local/bin/movescu \\\n     --seriesUID 1.3.12.2.1107.5.2.32.35235.2012041417312491079284166.0.0.0\n\n   # output\n   #   {'status': 'success',\n   #    'command': '/usr/local/bin/movescu --move CHIPS --timeout 5\n   #      -k QueryRetrieveLevel=SERIES\n   #      -k SeriesInstanceUID=1.3.12.2.1107.5.2.32.35235.2012041417312491079284166.0.0.0 \n   #      -aec ORTHANC -aet CHIPS 127.0.0.1 4242',\n   #    'data': ''\n   #    }\n\npx-move module\n-------------------\n\n.. code-block:: python\n\n   # in yourscript.py\n   import pypx\n\n   pacs_settings = {\n     'executable': '/usr/local/bin/findscu',\n     'aec': 'ORTHANC',\n     'aet': 'CHIPS',\n     'server_ip': '127.0.0.1',\n     'server_port': '4242',\n   }\n\n   # query parameters\n   query_settings = {\n       'SeriesInstanceUID': '1.3.12.2.1107.5.2.32.35235.2012041417312491079284166.0.0.0',\n    }\n\n   # python 3.5 ** syntax\n   output = pypx.move({**pacs_settings, **query_settings})\n   print(output)\n\n   # output\n   #   {'status': 'success',\n   #    'command': '/usr/local/bin/movescu --move CHIPS --timeout 5\n   #      -k QueryRetrieveLevel=SERIES\n   #      -k SeriesInstanceUID=1.3.12.2.1107.5.2.32.35235.2012041417312491079284166.0.0.0 \n   #      -aec ORTHANC -aet CHIPS 127.0.0.1 4242',\n   #    'data': ''\n   #    }\n\npx-listen\n===============\n\nabout px-listen\n-------------------\n``px-listen`` is a wrapper around dcmtk storescp_.\n\nIt should be connected to a daemon/service in order to act as a DICOM_Listener_.\n\n::\n\n     It listens on a specific TCP/IP port for incoming association requests from a Storage Service Class User (SCU).\n     It can receive both DICOM images and other DICOM composite objects.\n    -- DCMTK, about storescp.\n\npx-listen script\n-------------------\n.. code-block:: bash\n\n   px-listen --help\n\n   # receive DICOM data Orthanc PACS server\n   # tmp directory to store the data before ordering: /tmp\n   # log directory to log all incoming/processing data : /incoming/log\n   # data directory to store ordered data : /incoming/data\n   # storescp executable: /usr/local/bin/storescp\n   px-listen -t /tmp -l /incoming/log -d /incoming/data --executable /usr/local/bin/storescp\n\n4. Credits\n*****************\n   \nPyDicom_\n\n-  Author(s): darcymason_\n\nDCMTK_\n\n-  Author(s): Dicom @ OFFIS Team\n\n.. _PyDicom: http://www.python.org/\n.. _darcymason: https://github.com/darcymason\n.. _DCMTK: http://dicom.offis.de/dcmtk.php.en\n.. _echoscu: http://support.dcmtk.org/docs/echoscu.html\n.. _findscu: http://support.dcmtk.org/docs/findscu.html\n.. _movescu: http://support.dcmtk.org/docs/movescu.html\n.. _storescp: http://support.dcmtk.org/docs/storescp.html\n.. _DICOM_Listener: https://github.com/FNNDSC/pypx/wiki/dicom_listener",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": 0,
      "last_month": 0,
      "last_week": 0
    },
    "home_page": "http://github.com/fnndsc/pypx",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pypx",
    "platform": "",
    "project_url": "https://pypi.org/project/pypx/",
    "release_url": "https://pypi.org/project/pypx/0.9/",
    "requires_python": "",
    "summary": "Wrapper around DCMTK for PACS related actions (echo, find, move and listen)",
    "version": "0.9"
  },
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "6ffe80e2af19940f05865bf4e3dae819",
          "sha256": "8def62815bac8485b360c46b3509021e762d6a461718908d7ce43e9e019a8a06"
        },
        "downloads": 73,
        "filename": "pypx-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6ffe80e2af19940f05865bf4e3dae819",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6485,
        "upload_time": "2016-10-10T11:47:30",
        "url": "https://files.pythonhosted.org/packages/c9/e4/2f054b80b7ea889147a18af218fd7f3f1da2d3896c42c70af89d9449a49e/pypx-0.1.tar.gz"
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c5a1b640ae60a8395b8cd06e538da8b7",
          "sha256": "0b3ac643e8e0d87d461db5c8a29f7a86a6ddc056dcf1b38a0a7bcd8b064499eb"
        },
        "downloads": 138,
        "filename": "pypx-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c5a1b640ae60a8395b8cd06e538da8b7",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 6668,
        "upload_time": "2016-10-28T08:03:40",
        "url": "https://files.pythonhosted.org/packages/d0/0e/cf8de8c36a1a108c9d23815406520e404bd81a3c3da1922866931491e3c8/pypx-0.2.tar.gz"
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "2b481ff354355a00e0cd6f200afee3a3",
          "sha256": "a52bf360e82bb5f6dc3a3b5003da6a7f64da3d64858b9cde5083742943f2081d"
        },
        "downloads": 145,
        "filename": "pypx-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2b481ff354355a00e0cd6f200afee3a3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7471,
        "upload_time": "2016-10-28T10:01:50",
        "url": "https://files.pythonhosted.org/packages/42/ac/645ce552cbff9ccb43159d042282a2c5dc534f78b79bf10e992adc6fce3d/pypx-0.3.tar.gz"
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "3d82f52a06c7ab8ef6ce284ab93b5b98",
          "sha256": "9becc09c748133468de9129f3344a06163b4bd2ccdd4ac11ddfbb6d0e0cda9c8"
        },
        "downloads": 150,
        "filename": "pypx-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3d82f52a06c7ab8ef6ce284ab93b5b98",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7460,
        "upload_time": "2016-10-28T10:15:13",
        "url": "https://files.pythonhosted.org/packages/2a/06/5ff086223bd12696c730a34376fc501b82fd29f73313b557fe41c06d2b2c/pypx-0.4.tar.gz"
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5a2ceabe8d07ac809011d4bc73464358",
          "sha256": "d7840eb5e5d6ea6f90b33f0fee1dce634ba45ec1e4c20cb5d9daa0e5a946136f"
        },
        "downloads": 16,
        "filename": "pypx-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5a2ceabe8d07ac809011d4bc73464358",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 7516,
        "upload_time": "2017-02-20T10:50:22",
        "url": "https://files.pythonhosted.org/packages/42/7a/0afd97a512b560932ba5bc49edbec126cdde3daea6772fb6c840e7394f13/pypx-0.5.tar.gz"
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "ae60c8e35e25245f084fa1b0b1f57642",
          "sha256": "c70bbbad31e7359d405dae2b5afd7950ed57ff0850ead97726f7e37525b0170b"
        },
        "downloads": 13,
        "filename": "pypx-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ae60c8e35e25245f084fa1b0b1f57642",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8307,
        "upload_time": "2017-02-22T09:18:11",
        "url": "https://files.pythonhosted.org/packages/bb/e9/7ac0eacc78c77a9c9058ce3ffaba28e7372b4c221f6c5b96c9b62bfdcbe6/pypx-0.6.tar.gz"
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "f481c683d47b715eb9bfdbecbde48ea3",
          "sha256": "45bdf0b18ffa31be90120a7882d7fb10ac9a2dcf7175528aa7c9d8e75b7ab166"
        },
        "downloads": 16,
        "filename": "pypx-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "f481c683d47b715eb9bfdbecbde48ea3",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 8323,
        "upload_time": "2017-02-22T10:28:15",
        "url": "https://files.pythonhosted.org/packages/82/bb/32cd97ca01349fcea69f47930781d3f37010e8c23d621776be111f601b27/pypx-0.7.tar.gz"
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "99269752aeda30ba0a8ac07028efa21b",
          "sha256": "c5ca9064db14a3f92198e764e346c7dd267f4b977790c19f88734db14f743584"
        },
        "downloads": 13,
        "filename": "pypx-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "99269752aeda30ba0a8ac07028efa21b",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11525,
        "upload_time": "2017-03-21T10:37:41",
        "url": "https://files.pythonhosted.org/packages/22/51/7fa9ffdcca0e4f3ee9f5d8a34b5a2502474a616887f5eab61cca00fd9c19/pypx-0.8.tar.gz"
      }
    ],
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "649ab2e5bb8fc32edeebd46d1917eb81",
          "sha256": "16eb618b37df8bcd140679be9a3523f0039b092719bfaa85cf5f09aa34511bad"
        },
        "downloads": 31,
        "filename": "pypx-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "649ab2e5bb8fc32edeebd46d1917eb81",
        "packagetype": "sdist",
        "python_version": "source",
        "size": 11515,
        "upload_time": "2017-04-04T14:10:51",
        "url": "https://files.pythonhosted.org/packages/c4/6a/120273bc20c184da5edefef8d7d1252c504621d293cadb1643f0c8a78156/pypx-0.9.tar.gz"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "649ab2e5bb8fc32edeebd46d1917eb81",
        "sha256": "16eb618b37df8bcd140679be9a3523f0039b092719bfaa85cf5f09aa34511bad"
      },
      "downloads": 31,
      "filename": "pypx-0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "649ab2e5bb8fc32edeebd46d1917eb81",
      "packagetype": "sdist",
      "python_version": "source",
      "size": 11515,
      "upload_time": "2017-04-04T14:10:51",
      "url": "https://files.pythonhosted.org/packages/c4/6a/120273bc20c184da5edefef8d7d1252c504621d293cadb1643f0c8a78156/pypx-0.9.tar.gz"
    }
  ]
}